ARM GAS  C:\usertemp\ccm4AMyX.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_port_disp.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "lvgl/porting/lv_port_disp.c"
  19              		.section	.text.disp_flush,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	disp_flush:
  26              	.LVL0:
  27              	.LFB531:
   1:lvgl/porting/lv_port_disp.c **** /**
   2:lvgl/porting/lv_port_disp.c ****  * @file lv_port_disp_templ.c
   3:lvgl/porting/lv_port_disp.c ****  *
   4:lvgl/porting/lv_port_disp.c ****  */
   5:lvgl/porting/lv_port_disp.c **** 
   6:lvgl/porting/lv_port_disp.c **** /*Copy this file as "lv_port_disp.c" and set this value to "1" to enable content*/
   7:lvgl/porting/lv_port_disp.c **** #if 1
   8:lvgl/porting/lv_port_disp.c **** 
   9:lvgl/porting/lv_port_disp.c **** /*********************
  10:lvgl/porting/lv_port_disp.c ****  *      INCLUDES
  11:lvgl/porting/lv_port_disp.c ****  *********************/
  12:lvgl/porting/lv_port_disp.c **** #include "lv_port_disp.h"
  13:lvgl/porting/lv_port_disp.c **** #include "lvgl.h"
  14:lvgl/porting/lv_port_disp.c **** #include "lcd.h"
  15:lvgl/porting/lv_port_disp.c **** #include "main.h"
  16:lvgl/porting/lv_port_disp.c **** extern volatile uint16_t Bcolor;
  17:lvgl/porting/lv_port_disp.c **** extern volatile uint16_t Fcolor;
  18:lvgl/porting/lv_port_disp.c **** /*********************
  19:lvgl/porting/lv_port_disp.c ****  *      DEFINES
  20:lvgl/porting/lv_port_disp.c ****  *********************/
  21:lvgl/porting/lv_port_disp.c **** 
  22:lvgl/porting/lv_port_disp.c **** /**********************
  23:lvgl/porting/lv_port_disp.c ****  *      TYPEDEFS
  24:lvgl/porting/lv_port_disp.c ****  **********************/
  25:lvgl/porting/lv_port_disp.c **** 
  26:lvgl/porting/lv_port_disp.c **** /**********************
  27:lvgl/porting/lv_port_disp.c ****  *  STATIC PROTOTYPES
  28:lvgl/porting/lv_port_disp.c ****  **********************/
  29:lvgl/porting/lv_port_disp.c **** static void disp_init(void);
  30:lvgl/porting/lv_port_disp.c **** static lv_disp_drv_t disp_drv;
  31:lvgl/porting/lv_port_disp.c **** static void disp_flush(lv_disp_drv_t *disp_drv, const lv_area_t *area, lv_color_t *color_p);
ARM GAS  C:\usertemp\ccm4AMyX.s 			page 2


  32:lvgl/porting/lv_port_disp.c **** // static void gpu_fill(lv_disp_drv_t * disp_drv, lv_color_t * dest_buf, lv_coord_t dest_width,
  33:lvgl/porting/lv_port_disp.c **** //         const lv_area_t * fill_area, lv_color_t color);
  34:lvgl/porting/lv_port_disp.c **** 
  35:lvgl/porting/lv_port_disp.c **** /**********************
  36:lvgl/porting/lv_port_disp.c ****  *  STATIC VARIABLES
  37:lvgl/porting/lv_port_disp.c ****  **********************/
  38:lvgl/porting/lv_port_disp.c **** 
  39:lvgl/porting/lv_port_disp.c **** /**********************
  40:lvgl/porting/lv_port_disp.c ****  *      MACROS
  41:lvgl/porting/lv_port_disp.c ****  **********************/
  42:lvgl/porting/lv_port_disp.c **** 
  43:lvgl/porting/lv_port_disp.c **** /**********************
  44:lvgl/porting/lv_port_disp.c ****  *   GLOBAL FUNCTIONS
  45:lvgl/porting/lv_port_disp.c ****  **********************/
  46:lvgl/porting/lv_port_disp.c **** 
  47:lvgl/porting/lv_port_disp.c **** void lv_port_disp_init(void)
  48:lvgl/porting/lv_port_disp.c **** {
  49:lvgl/porting/lv_port_disp.c ****     /*-------------------------
  50:lvgl/porting/lv_port_disp.c ****      * Initialize your display
  51:lvgl/porting/lv_port_disp.c ****      * -----------------------*/
  52:lvgl/porting/lv_port_disp.c ****     disp_init();
  53:lvgl/porting/lv_port_disp.c **** 
  54:lvgl/porting/lv_port_disp.c ****     /*-----------------------------
  55:lvgl/porting/lv_port_disp.c ****      * Create a buffer for drawing
  56:lvgl/porting/lv_port_disp.c ****      *----------------------------*/
  57:lvgl/porting/lv_port_disp.c **** 
  58:lvgl/porting/lv_port_disp.c ****     /**
  59:lvgl/porting/lv_port_disp.c ****      * LVGL requires a buffer where it internally draws the widgets.
  60:lvgl/porting/lv_port_disp.c ****      * Later this buffer will passed to your display driver's `flush_cb` to copy its content to you
  61:lvgl/porting/lv_port_disp.c ****      * The buffer has to be greater than 1 display row
  62:lvgl/porting/lv_port_disp.c ****      *
  63:lvgl/porting/lv_port_disp.c ****      * There are 3 buffering configurations:
  64:lvgl/porting/lv_port_disp.c ****      * 1. Create ONE buffer:
  65:lvgl/porting/lv_port_disp.c ****      *      LVGL will draw the display's content here and writes it to your display
  66:lvgl/porting/lv_port_disp.c ****      *
  67:lvgl/porting/lv_port_disp.c ****      * 2. Create TWO buffer:
  68:lvgl/porting/lv_port_disp.c ****      *      LVGL will draw the display's content to a buffer and writes it your display.
  69:lvgl/porting/lv_port_disp.c ****      *      You should use DMA to write the buffer's content to the display.
  70:lvgl/porting/lv_port_disp.c ****      *      It will enable LVGL to draw the next part of the screen to the other buffer while
  71:lvgl/porting/lv_port_disp.c ****      *      the data is being sent form the first buffer. It makes rendering and flushing parallel.
  72:lvgl/porting/lv_port_disp.c ****      *
  73:lvgl/porting/lv_port_disp.c ****      * 3. Double buffering
  74:lvgl/porting/lv_port_disp.c ****      *      Set 2 screens sized buffers and set disp_drv.full_refresh = 1.
  75:lvgl/porting/lv_port_disp.c ****      *      This way LVGL will always provide the whole rendered screen in `flush_cb`
  76:lvgl/porting/lv_port_disp.c ****      *      and you only need to change the frame buffer's address.
  77:lvgl/porting/lv_port_disp.c ****      */
  78:lvgl/porting/lv_port_disp.c **** 
  79:lvgl/porting/lv_port_disp.c ****     /* Example for 1) */
  80:lvgl/porting/lv_port_disp.c ****     static lv_disp_draw_buf_t draw_buf_dsc_1;
  81:lvgl/porting/lv_port_disp.c ****     static lv_color_t buf_1[MY_DISP_HOR_RES * 10];                             /*A buffer for 10 ro
  82:lvgl/porting/lv_port_disp.c ****     lv_disp_draw_buf_init(&draw_buf_dsc_1, buf_1, NULL, MY_DISP_HOR_RES * 10); /*Initialize the dis
  83:lvgl/porting/lv_port_disp.c **** 
  84:lvgl/porting/lv_port_disp.c ****     /* Example for 2) */
  85:lvgl/porting/lv_port_disp.c ****     // static lv_disp_draw_buf_t draw_buf_dsc_2;
  86:lvgl/porting/lv_port_disp.c ****     // static lv_color_t buf_2_1[MY_DISP_HOR_RES * 10];                        /*A buffer for 10 ro
  87:lvgl/porting/lv_port_disp.c ****     // static lv_color_t buf_2_2[MY_DISP_HOR_RES * 10];                        /*An other buffer fo
  88:lvgl/porting/lv_port_disp.c ****     // lv_disp_draw_buf_init(&draw_buf_dsc_2, buf_2_1, buf_2_2, MY_DISP_HOR_RES * 10);   /*Initiali
ARM GAS  C:\usertemp\ccm4AMyX.s 			page 3


  89:lvgl/porting/lv_port_disp.c **** 
  90:lvgl/porting/lv_port_disp.c ****     // /* Example for 3) also set disp_drv.full_refresh = 1 below*/
  91:lvgl/porting/lv_port_disp.c ****     // static lv_disp_draw_buf_t draw_buf_dsc_3;
  92:lvgl/porting/lv_port_disp.c ****     // static lv_color_t buf_3_1[MY_DISP_HOR_RES * MY_DISP_VER_RES];            /*A screen sized bu
  93:lvgl/porting/lv_port_disp.c ****     // static lv_color_t buf_3_1[MY_DISP_HOR_RES * MY_DISP_VER_RES];            /*An other screen s
  94:lvgl/porting/lv_port_disp.c ****     // lv_disp_draw_buf_init(&draw_buf_dsc_3, buf_3_1, buf_3_2, MY_DISP_VER_RES * LV_VER_RES_MAX); 
  95:lvgl/porting/lv_port_disp.c **** 
  96:lvgl/porting/lv_port_disp.c ****     /*-----------------------------------
  97:lvgl/porting/lv_port_disp.c ****      * Register the display in LVGL
  98:lvgl/porting/lv_port_disp.c ****      *----------------------------------*/
  99:lvgl/porting/lv_port_disp.c **** 
 100:lvgl/porting/lv_port_disp.c ****     /*Descriptor of a display driver*/
 101:lvgl/porting/lv_port_disp.c ****     lv_disp_drv_init(&disp_drv); /*Basic initialization*/
 102:lvgl/porting/lv_port_disp.c **** 
 103:lvgl/porting/lv_port_disp.c ****     /*Set up the functions to access to your display*/
 104:lvgl/porting/lv_port_disp.c **** 
 105:lvgl/porting/lv_port_disp.c ****     /*Set the resolution of the display*/
 106:lvgl/porting/lv_port_disp.c ****     disp_drv.hor_res = 640;
 107:lvgl/porting/lv_port_disp.c ****     disp_drv.ver_res = 480;
 108:lvgl/porting/lv_port_disp.c **** 
 109:lvgl/porting/lv_port_disp.c ****     /*Used to copy the buffer's content to the display*/
 110:lvgl/porting/lv_port_disp.c ****     disp_drv.flush_cb = disp_flush;
 111:lvgl/porting/lv_port_disp.c **** 
 112:lvgl/porting/lv_port_disp.c ****     /*Set a display buffer*/
 113:lvgl/porting/lv_port_disp.c ****     disp_drv.draw_buf = &draw_buf_dsc_1;
 114:lvgl/porting/lv_port_disp.c **** 
 115:lvgl/porting/lv_port_disp.c ****     /*Required for Example 3)*/
 116:lvgl/porting/lv_port_disp.c ****     // disp_drv.full_refresh = 1;
 117:lvgl/porting/lv_port_disp.c **** 
 118:lvgl/porting/lv_port_disp.c ****     /* Fill a memory array with a color if you have GPU.
 119:lvgl/porting/lv_port_disp.c ****      * Note that, in lv_conf.h you can enable GPUs that has built-in support in LVGL.
 120:lvgl/porting/lv_port_disp.c ****      * But if you have a different GPU you can use with this callback.*/
 121:lvgl/porting/lv_port_disp.c ****     // disp_drv.gpu_fill_cb = gpu_fill;
 122:lvgl/porting/lv_port_disp.c **** 
 123:lvgl/porting/lv_port_disp.c ****     /*Finally register the driver*/
 124:lvgl/porting/lv_port_disp.c ****     lv_disp_drv_register(&disp_drv);
 125:lvgl/porting/lv_port_disp.c **** }
 126:lvgl/porting/lv_port_disp.c **** 
 127:lvgl/porting/lv_port_disp.c **** /**********************
 128:lvgl/porting/lv_port_disp.c ****  *   STATIC FUNCTIONS
 129:lvgl/porting/lv_port_disp.c ****  **********************/
 130:lvgl/porting/lv_port_disp.c **** 
 131:lvgl/porting/lv_port_disp.c **** /*Initialize your display and the required peripherals.*/
 132:lvgl/porting/lv_port_disp.c **** static void disp_init(void)
 133:lvgl/porting/lv_port_disp.c **** {
 134:lvgl/porting/lv_port_disp.c **** 
 135:lvgl/porting/lv_port_disp.c ****     HAL_Delay(100);
 136:lvgl/porting/lv_port_disp.c ****     LCD_Select(VS64480M56_2);
 137:lvgl/porting/lv_port_disp.c ****     HAL_Delay(100);
 138:lvgl/porting/lv_port_disp.c **** 
 139:lvgl/porting/lv_port_disp.c ****     W25N01_Reset();
 140:lvgl/porting/lv_port_disp.c ****     W25N01_Clear_BUF();
 141:lvgl/porting/lv_port_disp.c ****     W25N01_Set_ECC();
 142:lvgl/porting/lv_port_disp.c ****     Set_Backlight(100);
 143:lvgl/porting/lv_port_disp.c ****     GUI_CleanScreen();
 144:lvgl/porting/lv_port_disp.c ****     Set_Color(color_black, color_white);
 145:lvgl/porting/lv_port_disp.c ****     Display_Text(250, 230, 1, "Initializing  device");
ARM GAS  C:\usertemp\ccm4AMyX.s 			page 4


 146:lvgl/porting/lv_port_disp.c **** 
 147:lvgl/porting/lv_port_disp.c ****     Display_ON();
 148:lvgl/porting/lv_port_disp.c **** }
 149:lvgl/porting/lv_port_disp.c **** 
 150:lvgl/porting/lv_port_disp.c **** // HAL_DMA_RegisterCallback(DMA_HandleTypeDef *hdma, HAL_DMA_CallbackIDTypeDef CallbackID, void (* 
 151:lvgl/porting/lv_port_disp.c **** 
 152:lvgl/porting/lv_port_disp.c **** /*Flush the content of the internal buffer the specific area on the display
 153:lvgl/porting/lv_port_disp.c ****  *You can use DMA or any hardware acceleration to do this operation in the background but
 154:lvgl/porting/lv_port_disp.c ****  *'lv_disp_flush_ready()' has to be called when finished.*/
 155:lvgl/porting/lv_port_disp.c **** static void disp_flush(lv_disp_drv_t *disp_drv, const lv_area_t *area, lv_color_t *color_p)
 156:lvgl/porting/lv_port_disp.c **** {
  28              		.loc 1 156 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 156 1 is_stmt 0 view .LVU1
  33 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 32
  36              		.cfi_offset 3, -32
  37              		.cfi_offset 4, -28
  38              		.cfi_offset 5, -24
  39              		.cfi_offset 6, -20
  40              		.cfi_offset 7, -16
  41              		.cfi_offset 8, -12
  42              		.cfi_offset 9, -8
  43              		.cfi_offset 14, -4
  44 0004 8146     		mov	r9, r0
  45 0006 0F46     		mov	r7, r1
  46 0008 1646     		mov	r6, r2
 157:lvgl/porting/lv_port_disp.c ****     /*The most simple case (but also the slowest) to put all pixels to the screen one-by-one*/
 158:lvgl/porting/lv_port_disp.c **** 
 159:lvgl/porting/lv_port_disp.c ****     int32_t x;
  47              		.loc 1 159 5 is_stmt 1 view .LVU2
 160:lvgl/porting/lv_port_disp.c ****     int32_t y;
  48              		.loc 1 160 5 view .LVU3
 161:lvgl/porting/lv_port_disp.c ****     for (y = area->y1; y <= area->y2; y++)
  49              		.loc 1 161 5 view .LVU4
  50              		.loc 1 161 18 is_stmt 0 view .LVU5
  51 000a B1F90280 		ldrsh	r8, [r1, #2]
  52              	.LVL1:
  53              		.loc 1 161 5 view .LVU6
  54 000e 1CE0     		b	.L2
  55              	.LVL2:
  56              	.L4:
 162:lvgl/porting/lv_port_disp.c ****     {
 163:lvgl/porting/lv_port_disp.c ****         for (x = area->x1; x <= area->x2; x++)
 164:lvgl/porting/lv_port_disp.c ****         {
 165:lvgl/porting/lv_port_disp.c ****             /*Put a pixel to the display. For example:*/
 166:lvgl/porting/lv_port_disp.c ****             Bcolor = *((uint16_t *)color_p);
  57              		.loc 1 166 13 is_stmt 1 view .LVU7
  58              		.loc 1 166 22 is_stmt 0 view .LVU8
  59 0010 36F8023B 		ldrh	r3, [r6], #2
  60              	.LVL3:
  61              		.loc 1 166 20 view .LVU9
  62 0014 134A     		ldr	r2, .L8
  63 0016 1380     		strh	r3, [r2]	@ movhi
ARM GAS  C:\usertemp\ccm4AMyX.s 			page 5


 167:lvgl/porting/lv_port_disp.c ****             Fcolor = *((uint16_t *)color_p);
  64              		.loc 1 167 13 is_stmt 1 view .LVU10
  65              		.loc 1 167 20 is_stmt 0 view .LVU11
  66 0018 134D     		ldr	r5, .L8+4
  67 001a 2B80     		strh	r3, [r5]	@ movhi
 168:lvgl/porting/lv_port_disp.c ****             LCD_SetCursor(x, y);
  68              		.loc 1 168 13 is_stmt 1 view .LVU12
  69 001c 1FFA88F1 		uxth	r1, r8
  70 0020 A0B2     		uxth	r0, r4
  71 0022 FFF7FEFF 		bl	LCD_SetCursor
  72              	.LVL4:
 169:lvgl/porting/lv_port_disp.c ****             LCD_WriteRAM_Prepare();
  73              		.loc 1 169 13 view .LVU13
  74 0026 FFF7FEFF 		bl	LCD_WriteRAM_Prepare
  75              	.LVL5:
 170:lvgl/porting/lv_port_disp.c ****             lcd_wr_data(Fcolor & 0x00ff);
  76              		.loc 1 170 13 view .LVU14
  77 002a 2888     		ldrh	r0, [r5]
  78 002c C0B2     		uxtb	r0, r0
  79 002e FFF7FEFF 		bl	lcd_wr_data
  80              	.LVL6:
 171:lvgl/porting/lv_port_disp.c ****             lcd_wr_data(Fcolor >> 8);
  81              		.loc 1 171 13 view .LVU15
  82 0032 2888     		ldrh	r0, [r5]
  83 0034 C0F30720 		ubfx	r0, r0, #8, #8
  84 0038 FFF7FEFF 		bl	lcd_wr_data
  85              	.LVL7:
 172:lvgl/porting/lv_port_disp.c ****             color_p++;
  86              		.loc 1 172 13 view .LVU16
 163:lvgl/porting/lv_port_disp.c ****         {
  87              		.loc 1 163 44 discriminator 3 view .LVU17
  88 003c 0134     		adds	r4, r4, #1
  89              	.LVL8:
  90              	.L3:
 163:lvgl/porting/lv_port_disp.c ****         {
  91              		.loc 1 163 30 discriminator 1 view .LVU18
 163:lvgl/porting/lv_port_disp.c ****         {
  92              		.loc 1 163 37 is_stmt 0 discriminator 1 view .LVU19
  93 003e B7F90430 		ldrsh	r3, [r7, #4]
 163:lvgl/porting/lv_port_disp.c ****         {
  94              		.loc 1 163 30 discriminator 1 view .LVU20
  95 0042 A342     		cmp	r3, r4
  96 0044 E4DA     		bge	.L4
 161:lvgl/porting/lv_port_disp.c ****     {
  97              		.loc 1 161 40 is_stmt 1 discriminator 2 view .LVU21
  98 0046 08F10108 		add	r8, r8, #1
  99              	.LVL9:
 100              	.L2:
 161:lvgl/porting/lv_port_disp.c ****     {
 101              		.loc 1 161 26 discriminator 1 view .LVU22
 161:lvgl/porting/lv_port_disp.c ****     {
 102              		.loc 1 161 33 is_stmt 0 discriminator 1 view .LVU23
 103 004a B7F90630 		ldrsh	r3, [r7, #6]
 161:lvgl/porting/lv_port_disp.c ****     {
 104              		.loc 1 161 26 discriminator 1 view .LVU24
 105 004e 4345     		cmp	r3, r8
 106 0050 02DB     		blt	.L7
ARM GAS  C:\usertemp\ccm4AMyX.s 			page 6


 163:lvgl/porting/lv_port_disp.c ****         {
 107              		.loc 1 163 9 is_stmt 1 view .LVU25
 163:lvgl/porting/lv_port_disp.c ****         {
 108              		.loc 1 163 22 is_stmt 0 view .LVU26
 109 0052 B7F90040 		ldrsh	r4, [r7]
 110              	.LVL10:
 163:lvgl/porting/lv_port_disp.c ****         {
 111              		.loc 1 163 9 view .LVU27
 112 0056 F2E7     		b	.L3
 113              	.LVL11:
 114              	.L7:
 173:lvgl/porting/lv_port_disp.c ****         }
 174:lvgl/porting/lv_port_disp.c ****     }
 175:lvgl/porting/lv_port_disp.c ****     lv_disp_flush_ready(disp_drv);
 115              		.loc 1 175 5 is_stmt 1 view .LVU28
 116 0058 4846     		mov	r0, r9
 117 005a FFF7FEFF 		bl	lv_disp_flush_ready
 118              	.LVL12:
 176:lvgl/porting/lv_port_disp.c ****     /*IMPORTANT!!!
 177:lvgl/porting/lv_port_disp.c ****      *Inform the graphics library that you are ready with the flushing*/
 178:lvgl/porting/lv_port_disp.c **** }
 119              		.loc 1 178 1 is_stmt 0 view .LVU29
 120 005e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 121              	.LVL13:
 122              	.L9:
 123              		.loc 1 178 1 view .LVU30
 124 0062 00BF     		.align	2
 125              	.L8:
 126 0064 00000000 		.word	Bcolor
 127 0068 00000000 		.word	Fcolor
 128              		.cfi_endproc
 129              	.LFE531:
 131              		.section	.rodata.disp_init.str1.4,"aMS",%progbits,1
 132              		.align	2
 133              	.LC0:
 134 0000 496E6974 		.ascii	"Initializing  device\000"
 134      69616C69 
 134      7A696E67 
 134      20206465 
 134      76696365 
 135              		.section	.text.disp_init,"ax",%progbits
 136              		.align	1
 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 141              	disp_init:
 142              	.LFB530:
 133:lvgl/porting/lv_port_disp.c **** 
 143              		.loc 1 133 1 is_stmt 1 view -0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147 0000 08B5     		push	{r3, lr}
 148              	.LCFI1:
 149              		.cfi_def_cfa_offset 8
 150              		.cfi_offset 3, -8
 151              		.cfi_offset 14, -4
ARM GAS  C:\usertemp\ccm4AMyX.s 			page 7


 135:lvgl/porting/lv_port_disp.c ****     LCD_Select(VS64480M56_2);
 152              		.loc 1 135 5 view .LVU32
 153 0002 6420     		movs	r0, #100
 154 0004 FFF7FEFF 		bl	HAL_Delay
 155              	.LVL14:
 136:lvgl/porting/lv_port_disp.c ****     HAL_Delay(100);
 156              		.loc 1 136 5 view .LVU33
 157 0008 0520     		movs	r0, #5
 158 000a FFF7FEFF 		bl	LCD_Select
 159              	.LVL15:
 137:lvgl/porting/lv_port_disp.c **** 
 160              		.loc 1 137 5 view .LVU34
 161 000e 6420     		movs	r0, #100
 162 0010 FFF7FEFF 		bl	HAL_Delay
 163              	.LVL16:
 139:lvgl/porting/lv_port_disp.c ****     W25N01_Clear_BUF();
 164              		.loc 1 139 5 view .LVU35
 165 0014 FFF7FEFF 		bl	W25N01_Reset
 166              	.LVL17:
 140:lvgl/porting/lv_port_disp.c ****     W25N01_Set_ECC();
 167              		.loc 1 140 5 view .LVU36
 168 0018 FFF7FEFF 		bl	W25N01_Clear_BUF
 169              	.LVL18:
 141:lvgl/porting/lv_port_disp.c ****     Set_Backlight(100);
 170              		.loc 1 141 5 view .LVU37
 171 001c FFF7FEFF 		bl	W25N01_Set_ECC
 172              	.LVL19:
 142:lvgl/porting/lv_port_disp.c ****     GUI_CleanScreen();
 173              		.loc 1 142 5 view .LVU38
 174 0020 6420     		movs	r0, #100
 175 0022 FFF7FEFF 		bl	Set_Backlight
 176              	.LVL20:
 143:lvgl/porting/lv_port_disp.c ****     Set_Color(color_black, color_white);
 177              		.loc 1 143 5 view .LVU39
 178 0026 FFF7FEFF 		bl	GUI_CleanScreen
 179              	.LVL21:
 144:lvgl/porting/lv_port_disp.c ****     Display_Text(250, 230, 1, "Initializing  device");
 180              		.loc 1 144 5 view .LVU40
 181 002a 4FF6FF71 		movw	r1, #65535
 182 002e 0020     		movs	r0, #0
 183 0030 FFF7FEFF 		bl	Set_Color
 184              	.LVL22:
 145:lvgl/porting/lv_port_disp.c **** 
 185              		.loc 1 145 5 view .LVU41
 186 0034 044B     		ldr	r3, .L12
 187 0036 0122     		movs	r2, #1
 188 0038 E621     		movs	r1, #230
 189 003a FA20     		movs	r0, #250
 190 003c FFF7FEFF 		bl	Display_Text
 191              	.LVL23:
 147:lvgl/porting/lv_port_disp.c **** }
 192              		.loc 1 147 5 view .LVU42
 193 0040 FFF7FEFF 		bl	Display_ON
 194              	.LVL24:
 148:lvgl/porting/lv_port_disp.c **** 
 195              		.loc 1 148 1 is_stmt 0 view .LVU43
 196 0044 08BD     		pop	{r3, pc}
ARM GAS  C:\usertemp\ccm4AMyX.s 			page 8


 197              	.L13:
 198 0046 00BF     		.align	2
 199              	.L12:
 200 0048 00000000 		.word	.LC0
 201              		.cfi_endproc
 202              	.LFE530:
 204              		.section	.text.lv_port_disp_init,"ax",%progbits
 205              		.align	1
 206              		.global	lv_port_disp_init
 207              		.syntax unified
 208              		.thumb
 209              		.thumb_func
 211              	lv_port_disp_init:
 212              	.LFB529:
  48:lvgl/porting/lv_port_disp.c ****     /*-------------------------
 213              		.loc 1 48 1 is_stmt 1 view -0
 214              		.cfi_startproc
 215              		@ args = 0, pretend = 0, frame = 0
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217 0000 38B5     		push	{r3, r4, r5, lr}
 218              	.LCFI2:
 219              		.cfi_def_cfa_offset 16
 220              		.cfi_offset 3, -16
 221              		.cfi_offset 4, -12
 222              		.cfi_offset 5, -8
 223              		.cfi_offset 14, -4
  52:lvgl/porting/lv_port_disp.c **** 
 224              		.loc 1 52 5 view .LVU45
 225 0002 FFF7FEFF 		bl	disp_init
 226              	.LVL25:
  80:lvgl/porting/lv_port_disp.c ****     static lv_color_t buf_1[MY_DISP_HOR_RES * 10];                             /*A buffer for 10 ro
 227              		.loc 1 80 5 view .LVU46
  81:lvgl/porting/lv_port_disp.c ****     lv_disp_draw_buf_init(&draw_buf_dsc_1, buf_1, NULL, MY_DISP_HOR_RES * 10); /*Initialize the dis
 228              		.loc 1 81 5 view .LVU47
  82:lvgl/porting/lv_port_disp.c **** 
 229              		.loc 1 82 5 view .LVU48
 230 0006 0C4D     		ldr	r5, .L16
 231 0008 4FF4C853 		mov	r3, #6400
 232 000c 0022     		movs	r2, #0
 233 000e 0B49     		ldr	r1, .L16+4
 234 0010 2846     		mov	r0, r5
 235 0012 FFF7FEFF 		bl	lv_disp_draw_buf_init
 236              	.LVL26:
 101:lvgl/porting/lv_port_disp.c **** 
 237              		.loc 1 101 5 view .LVU49
 238 0016 0A4C     		ldr	r4, .L16+8
 239 0018 2046     		mov	r0, r4
 240 001a FFF7FEFF 		bl	lv_disp_drv_init
 241              	.LVL27:
 106:lvgl/porting/lv_port_disp.c ****     disp_drv.ver_res = 480;
 242              		.loc 1 106 5 view .LVU50
 106:lvgl/porting/lv_port_disp.c ****     disp_drv.ver_res = 480;
 243              		.loc 1 106 22 is_stmt 0 view .LVU51
 244 001e 4FF42073 		mov	r3, #640
 245 0022 2380     		strh	r3, [r4]	@ movhi
 107:lvgl/porting/lv_port_disp.c **** 
 246              		.loc 1 107 5 is_stmt 1 view .LVU52
ARM GAS  C:\usertemp\ccm4AMyX.s 			page 9


 107:lvgl/porting/lv_port_disp.c **** 
 247              		.loc 1 107 22 is_stmt 0 view .LVU53
 248 0024 4FF4F073 		mov	r3, #480
 249 0028 6380     		strh	r3, [r4, #2]	@ movhi
 110:lvgl/porting/lv_port_disp.c **** 
 250              		.loc 1 110 5 is_stmt 1 view .LVU54
 110:lvgl/porting/lv_port_disp.c **** 
 251              		.loc 1 110 23 is_stmt 0 view .LVU55
 252 002a 064B     		ldr	r3, .L16+12
 253 002c 6361     		str	r3, [r4, #20]
 113:lvgl/porting/lv_port_disp.c **** 
 254              		.loc 1 113 5 is_stmt 1 view .LVU56
 113:lvgl/porting/lv_port_disp.c **** 
 255              		.loc 1 113 23 is_stmt 0 view .LVU57
 256 002e E560     		str	r5, [r4, #12]
 124:lvgl/porting/lv_port_disp.c **** }
 257              		.loc 1 124 5 is_stmt 1 view .LVU58
 258 0030 2046     		mov	r0, r4
 259 0032 FFF7FEFF 		bl	lv_disp_drv_register
 260              	.LVL28:
 125:lvgl/porting/lv_port_disp.c **** 
 261              		.loc 1 125 1 is_stmt 0 view .LVU59
 262 0036 38BD     		pop	{r3, r4, r5, pc}
 263              	.L17:
 264              		.align	2
 265              	.L16:
 266 0038 00000000 		.word	draw_buf_dsc_1.1
 267 003c 00000000 		.word	buf_1.0
 268 0040 00000000 		.word	disp_drv
 269 0044 00000000 		.word	disp_flush
 270              		.cfi_endproc
 271              	.LFE529:
 273              		.section	.bss.buf_1.0,"aw",%nobits
 274              		.align	2
 277              	buf_1.0:
 278 0000 00000000 		.space	12800
 278      00000000 
 278      00000000 
 278      00000000 
 278      00000000 
 279              		.section	.bss.draw_buf_dsc_1.1,"aw",%nobits
 280              		.align	2
 283              	draw_buf_dsc_1.1:
 284 0000 00000000 		.space	28
 284      00000000 
 284      00000000 
 284      00000000 
 284      00000000 
 285              		.section	.bss.disp_drv,"aw",%nobits
 286              		.align	2
 289              	disp_drv:
 290 0000 00000000 		.space	76
 290      00000000 
 290      00000000 
 290      00000000 
 290      00000000 
 291              		.text
ARM GAS  C:\usertemp\ccm4AMyX.s 			page 10


 292              	.Letext0:
 293              		.file 2 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 294              		.file 3 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 295              		.file 4 "lvgl/src/misc/lv_types.h"
 296              		.file 5 "lvgl/src/misc/lv_timer.h"
 297              		.file 6 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/lib/gcc/arm-none
 298              		.file 7 "lvgl/src/hal/../draw/../misc/../font/../misc/lv_area.h"
 299              		.file 8 "lvgl/src/hal/../draw/../misc/../font/lv_font.h"
 300              		.file 9 "lvgl/src/hal/../draw/../misc/lv_color.h"
 301              		.file 10 "lvgl/src/hal/../draw/../misc/lv_txt.h"
 302              		.file 11 "lvgl/src/hal/../draw/../misc/lv_bidi.h"
 303              		.file 12 "lvgl/src/hal/../draw/../misc/lv_style.h"
 304              		.file 13 "lvgl/src/hal/../draw/lv_img_buf.h"
 305              		.file 14 "lvgl/src/core/lv_obj.h"
 306              		.file 15 "lvgl/src/hal/../draw/lv_draw_rect.h"
 307              		.file 16 "lvgl/src/hal/../draw/lv_draw_label.h"
 308              		.file 17 "lvgl/src/hal/../draw/lv_draw_img.h"
 309              		.file 18 "lvgl/src/hal/../draw/lv_draw_line.h"
 310              		.file 19 "lvgl/src/hal/../draw/lv_draw_arc.h"
 311              		.file 20 "lvgl/src/hal/../draw/lv_draw.h"
 312              		.file 21 "lvgl/src/hal/../misc/lv_ll.h"
 313              		.file 22 "lvgl/src/hal/lv_hal_disp.h"
 314              		.file 23 "lvgl/src/core/lv_theme.h"
 315              		.file 24 "lvgl/src/core/lv_group.h"
 316              		.file 25 "lvgl/src/core/lv_obj_scroll.h"
 317              		.file 26 "lvgl/src/core/lv_obj_style.h"
 318              		.file 27 "lvgl/src/core/lv_obj_class.h"
 319              		.file 28 "lvgl/src/core/lv_event.h"
 320              		.file 29 "lvgl/src/widgets/lv_bar.h"
 321              		.file 30 "lvgl/src/extra/widgets/imgbtn/lv_imgbtn.h"
 322              		.file 31 "User/LCD/lcd.h"
 323              		.file 32 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  C:\usertemp\ccm4AMyX.s 			page 11


DEFINED SYMBOLS
                            *ABS*:00000000 lv_port_disp.c
C:\usertemp\ccm4AMyX.s:20     .text.disp_flush:00000000 $t
C:\usertemp\ccm4AMyX.s:25     .text.disp_flush:00000000 disp_flush
C:\usertemp\ccm4AMyX.s:126    .text.disp_flush:00000064 $d
C:\usertemp\ccm4AMyX.s:132    .rodata.disp_init.str1.4:00000000 $d
C:\usertemp\ccm4AMyX.s:136    .text.disp_init:00000000 $t
C:\usertemp\ccm4AMyX.s:141    .text.disp_init:00000000 disp_init
C:\usertemp\ccm4AMyX.s:200    .text.disp_init:00000048 $d
C:\usertemp\ccm4AMyX.s:205    .text.lv_port_disp_init:00000000 $t
C:\usertemp\ccm4AMyX.s:211    .text.lv_port_disp_init:00000000 lv_port_disp_init
C:\usertemp\ccm4AMyX.s:266    .text.lv_port_disp_init:00000038 $d
C:\usertemp\ccm4AMyX.s:283    .bss.draw_buf_dsc_1.1:00000000 draw_buf_dsc_1.1
C:\usertemp\ccm4AMyX.s:277    .bss.buf_1.0:00000000 buf_1.0
C:\usertemp\ccm4AMyX.s:289    .bss.disp_drv:00000000 disp_drv
C:\usertemp\ccm4AMyX.s:274    .bss.buf_1.0:00000000 $d
C:\usertemp\ccm4AMyX.s:280    .bss.draw_buf_dsc_1.1:00000000 $d
C:\usertemp\ccm4AMyX.s:286    .bss.disp_drv:00000000 $d

UNDEFINED SYMBOLS
LCD_SetCursor
LCD_WriteRAM_Prepare
lcd_wr_data
lv_disp_flush_ready
Bcolor
Fcolor
HAL_Delay
LCD_Select
W25N01_Reset
W25N01_Clear_BUF
W25N01_Set_ECC
Set_Backlight
GUI_CleanScreen
Set_Color
Display_Text
Display_ON
lv_disp_draw_buf_init
lv_disp_drv_init
lv_disp_drv_register
