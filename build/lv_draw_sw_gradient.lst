ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_draw_sw_gradient.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "lvgl/src/draw/sw/lv_draw_sw_gradient.c"
  19              		.section	.text.lv_color_to32,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	lv_color_to32:
  26              	.LVL0:
  27              	.LFB5:
  28              		.file 2 "lvgl/src/draw/sw/../../misc/lv_color.h"
   1:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
   2:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @file lv_color.h
   3:lvgl/src/draw/sw/../../misc/lv_color.h ****  *
   4:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
   5:lvgl/src/draw/sw/../../misc/lv_color.h **** 
   6:lvgl/src/draw/sw/../../misc/lv_color.h **** #ifndef LV_COLOR_H
   7:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_H
   8:lvgl/src/draw/sw/../../misc/lv_color.h **** 
   9:lvgl/src/draw/sw/../../misc/lv_color.h **** #ifdef __cplusplus
  10:lvgl/src/draw/sw/../../misc/lv_color.h **** extern "C" {
  11:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  12:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  13:lvgl/src/draw/sw/../../misc/lv_color.h **** /*********************
  14:lvgl/src/draw/sw/../../misc/lv_color.h ****  *      INCLUDES
  15:lvgl/src/draw/sw/../../misc/lv_color.h ****  *********************/
  16:lvgl/src/draw/sw/../../misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/draw/sw/../../misc/lv_color.h **** #include "lv_assert.h"
  18:lvgl/src/draw/sw/../../misc/lv_color.h **** #include "lv_math.h"
  19:lvgl/src/draw/sw/../../misc/lv_color.h **** #include "lv_types.h"
  20:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  21:lvgl/src/draw/sw/../../misc/lv_color.h **** /*Error checking*/
  22:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  23:lvgl/src/draw/sw/../../misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  24:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  25:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  26:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH != 32 && LV_COLOR_SCREEN_TRANSP != 0
  27:lvgl/src/draw/sw/../../misc/lv_color.h **** #error "LV_COLOR_SCREEN_TRANSP requires LV_COLOR_DEPTH == 32. Set it in lv_conf.h"
  28:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  29:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  30:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 2


  31:lvgl/src/draw/sw/../../misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  32:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  33:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  34:lvgl/src/draw/sw/../../misc/lv_color.h **** #include <stdint.h>
  35:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  36:lvgl/src/draw/sw/../../misc/lv_color.h **** /*********************
  37:lvgl/src/draw/sw/../../misc/lv_color.h ****  *      DEFINES
  38:lvgl/src/draw/sw/../../misc/lv_color.h ****  *********************/
  39:lvgl/src/draw/sw/../../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_DEPTH);
  40:lvgl/src/draw/sw/../../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_16_SWAP);
  41:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  42:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
  43:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Opacity percentages.
  44:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
  45:lvgl/src/draw/sw/../../misc/lv_color.h **** enum {
  46:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  47:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_0      = 0,
  48:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_10     = 25,
  49:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_20     = 51,
  50:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_30     = 76,
  51:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_40     = 102,
  52:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_50     = 127,
  53:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_60     = 153,
  54:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_70     = 178,
  55:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_80     = 204,
  56:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_90     = 229,
  57:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_100    = 255,
  58:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_COVER  = 255,
  59:lvgl/src/draw/sw/../../misc/lv_color.h **** };
  60:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  61:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  62:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  63:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  64:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  65:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  66:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  67:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  68:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  69:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 16
  70:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
  71:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 32
  72:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
  73:lvgl/src/draw/sw/../../misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  74:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  75:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  76:lvgl/src/draw/sw/../../misc/lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  77:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
  78:lvgl/src/draw/sw/../../misc/lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  79:lvgl/src/draw/sw/../../misc/lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  80:lvgl/src/draw/sw/../../misc/lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  81:lvgl/src/draw/sw/../../misc/lv_color.h **** */
  82:lvgl/src/draw/sw/../../misc/lv_color.h **** #ifdef _MSC_VER
  83:lvgl/src/draw/sw/../../misc/lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  84:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  85:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  86:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
  87:lvgl/src/draw/sw/../../misc/lv_color.h **** #if __cplusplus >= 201103L
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 3


  88:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  89:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  90:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  91:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif /*__cplusplus*/
  92:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  93:lvgl/src/draw/sw/../../misc/lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
  94:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
  95:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  96:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  97:lvgl/src/draw/sw/../../misc/lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
  98:lvgl/src/draw/sw/../../misc/lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
  99:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
 100:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 101:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
 102:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 103:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 104:lvgl/src/draw/sw/../../misc/lv_color.h **** /*---------------------------------------
 105:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Macros for all existing color depths
 106:lvgl/src/draw/sw/../../misc/lv_color.h ****  * to set/get values of the color channels
 107:lvgl/src/draw/sw/../../misc/lv_color.h ****  *------------------------------------------*/
 108:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 109:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 110:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 111:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 112:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 113:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 114:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 115:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 116:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 117:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 118:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 119:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 120:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 121:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 122:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 123:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 124:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 125:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 126:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 127:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 128:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 129:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 130:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 131:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 132:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 133:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 134:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 135:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 136:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 137:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 138:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 139:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 140:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 141:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 142:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 143:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 144:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 4


 145:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 146:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 147:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 148:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 149:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 150:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 151:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 152:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 153:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 154:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 155:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 156:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 157:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 158:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 159:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 160:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 161:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 162:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 163:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 164:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 165:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 166:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 167:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 168:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 169:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 170:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 171:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 172:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 173:lvgl/src/draw/sw/../../misc/lv_color.h **** /*---------------------------------------
 174:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Macros for the current color depth
 175:lvgl/src/draw/sw/../../misc/lv_color.h ****  * to set/get values of the color channels
 176:lvgl/src/draw/sw/../../misc/lv_color.h ****  *------------------------------------------*/
 177:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 178:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 179:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 180:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 181:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 182:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 183:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 184:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 185:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 186:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 187:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 188:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 189:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 190:lvgl/src/draw/sw/../../misc/lv_color.h **** /**********************
 191:lvgl/src/draw/sw/../../misc/lv_color.h ****  *      TYPEDEFS
 192:lvgl/src/draw/sw/../../misc/lv_color.h ****  **********************/
 193:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 194:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 195:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 196:lvgl/src/draw/sw/../../misc/lv_color.h ****     union {
 197:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t blue : 1;
 198:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t green : 1;
 199:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t red : 1;
 200:lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 201:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color1_t;
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 5


 202:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 203:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 204:lvgl/src/draw/sw/../../misc/lv_color.h ****     struct {
 205:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t blue : 2;
 206:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t green : 3;
 207:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t red : 3;
 208:lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 209:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t full;
 210:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color8_t;
 211:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 212:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 213:lvgl/src/draw/sw/../../misc/lv_color.h ****     struct {
 214:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 215:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t blue : 5;
 216:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t green : 6;
 217:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t red : 5;
 218:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 219:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t green_h : 3;
 220:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t red : 5;
 221:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t blue : 5;
 222:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t green_l : 3;
 223:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 224:lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 225:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint16_t full;
 226:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color16_t;
 227:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 228:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 229:lvgl/src/draw/sw/../../misc/lv_color.h ****     struct {
 230:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t blue;
 231:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t green;
 232:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t red;
 233:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t alpha;
 234:lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 235:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t full;
 236:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color32_t;
 237:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 238:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 239:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 240:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 241:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef struct {
 242:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint16_t h;
 243:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t s;
 244:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t v;
 245:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color_hsv_t;
 246:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 247:lvgl/src/draw/sw/../../misc/lv_color.h **** //! @cond Doxygen_Suppress
 248:lvgl/src/draw/sw/../../misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 249:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef uint8_t lv_opa_t;
 250:lvgl/src/draw/sw/../../misc/lv_color.h **** //! @endcond
 251:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 252:lvgl/src/draw/sw/../../misc/lv_color.h **** struct _lv_color_filter_dsc_t;
 253:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 254:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 255:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 256:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 257:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_filter_cb_t filter_cb;
 258:lvgl/src/draw/sw/../../misc/lv_color.h ****     void * user_data;
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 6


 259:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color_filter_dsc_t;
 260:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 261:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 262:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef enum {
 263:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_RED,
 264:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_PINK,
 265:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_PURPLE,
 266:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 267:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_INDIGO,
 268:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_BLUE,
 269:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 270:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_CYAN,
 271:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_TEAL,
 272:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_GREEN,
 273:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 274:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_LIME,
 275:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_YELLOW,
 276:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_AMBER,
 277:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_ORANGE,
 278:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 279:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_BROWN,
 280:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_BLUE_GREY,
 281:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_GREY,
 282:lvgl/src/draw/sw/../../misc/lv_color.h ****     _LV_PALETTE_LAST,
 283:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_NONE = 0xff,
 284:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_palette_t;
 285:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 286:lvgl/src/draw/sw/../../misc/lv_color.h **** /**********************
 287:lvgl/src/draw/sw/../../misc/lv_color.h ****  * GLOBAL PROTOTYPES
 288:lvgl/src/draw/sw/../../misc/lv_color.h ****  **********************/
 289:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 290:lvgl/src/draw/sw/../../misc/lv_color.h **** /*In color conversations:
 291:lvgl/src/draw/sw/../../misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 292:lvgl/src/draw/sw/../../misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 293:lvgl/src/draw/sw/../../misc/lv_color.h ****  *         8 bit Red has 3 bits
 294:lvgl/src/draw/sw/../../misc/lv_color.h ****  *        ----------------------
 295:lvgl/src/draw/sw/../../misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 296:lvgl/src/draw/sw/../../misc/lv_color.h ****  *
 297:lvgl/src/draw/sw/../../misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 298:lvgl/src/draw/sw/../../misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 299:lvgl/src/draw/sw/../../misc/lv_color.h ****  *        16 bit Red has 5 bits
 300:lvgl/src/draw/sw/../../misc/lv_color.h ****  *        ----------------------
 301:lvgl/src/draw/sw/../../misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 302:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 303:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 304:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 305:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 306:lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 307:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 308:lvgl/src/draw/sw/../../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 309:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 1;
 310:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 311:lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
 312:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 313:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 314:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 315:lvgl/src/draw/sw/../../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 7


 316:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 1;
 317:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 318:lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
 319:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 320:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 321:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 322:lvgl/src/draw/sw/../../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 323:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 1;
 324:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 325:lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
 326:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 327:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 328:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 329:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 330:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 331:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 332:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 333:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 334:lvgl/src/draw/sw/../../misc/lv_color.h ****     if(color.full == 0)
 335:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 336:lvgl/src/draw/sw/../../misc/lv_color.h ****     else
 337:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFF;
 338:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 339:lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 340:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 341:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color8_t ret;
 342:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 343:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 344:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 345:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 346:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 347:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color8_t ret;
 348:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 349:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 350:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 351:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 352:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 353:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 354:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 355:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 356:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 357:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 358:lvgl/src/draw/sw/../../misc/lv_color.h ****     if(color.full == 0)
 359:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 360:lvgl/src/draw/sw/../../misc/lv_color.h ****     else
 361:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFFFF;
 362:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 363:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color16_t ret;
 364:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 365:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 366:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 367:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 368:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 369:lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 370:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 371:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color16_t ret;
 372:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 8


 373:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 374:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 375:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 376:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 377:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 378:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 379:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 380:lvgl/src/draw/sw/../../misc/lv_color.h **** {
  29              		.loc 2 380 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 381:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 382:lvgl/src/draw/sw/../../misc/lv_color.h ****     if(color.full == 0)
 383:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFF000000;
 384:lvgl/src/draw/sw/../../misc/lv_color.h ****     else
 385:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFFFFFFFF;
 386:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 387:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color32_t ret;
 388:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 389:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 390:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 391:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 392:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 393:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 394:lvgl/src/draw/sw/../../misc/lv_color.h ****     /**
 395:lvgl/src/draw/sw/../../misc/lv_color.h ****      * The floating point math for conversion is:
 396:lvgl/src/draw/sw/../../misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 397:lvgl/src/draw/sw/../../misc/lv_color.h ****      * The faster integer math for conversion is:
 398:lvgl/src/draw/sw/../../misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 399:lvgl/src/draw/sw/../../misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 400:lvgl/src/draw/sw/../../misc/lv_color.h ****      *
 401:lvgl/src/draw/sw/../../misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 402:lvgl/src/draw/sw/../../misc/lv_color.h ****      *
 403:lvgl/src/draw/sw/../../misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 404:lvgl/src/draw/sw/../../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 405:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       0           8      7        7       255
 406:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       1          16     14        7       255
 407:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       2          32     28        7       255
 408:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       3          65     25        3       255
 409:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       4         131     19        1       255
 410:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       5         263      7        0       255
 411:lvgl/src/draw/sw/../../misc/lv_color.h ****      *
 412:lvgl/src/draw/sw/../../misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 413:lvgl/src/draw/sw/../../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 414:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       0           4      3        3       255
 415:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       1           8      6        3       255
 416:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       2          16     12        3       255
 417:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       3          32     24        3       255
 418:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       4          64     48        3       255
 419:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       5         129     33        1       255
 420:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       6         259      3        0       255
 421:lvgl/src/draw/sw/../../misc/lv_color.h ****      */
 422:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 423:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color32_t ret;
  34              		.loc 2 423 5 view .LVU1
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 9


 424:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
  35              		.loc 2 424 5 view .LVU2
  36 0000 C0F3C423 		ubfx	r3, r0, #11, #5
  37 0004 03EB4312 		add	r2, r3, r3, lsl #5
  38 0008 C3EBC203 		rsb	r3, r3, r2, lsl #3
  39 000c 0733     		adds	r3, r3, #7
  40 000e C3F34713 		ubfx	r3, r3, #5, #8
  41 0012 0022     		movs	r2, #0
  42              	.LVL1:
  43              		.loc 2 424 5 is_stmt 0 view .LVU3
  44 0014 63F31742 		bfi	r2, r3, #16, #8
  45              	.LVL2:
 425:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
  46              		.loc 2 425 5 is_stmt 1 view .LVU4
  47 0018 C0F34513 		ubfx	r3, r0, #5, #6
  48 001c 03EBC311 		add	r1, r3, r3, lsl #7
  49 0020 03EB4103 		add	r3, r3, r1, lsl #1
  50 0024 0333     		adds	r3, r3, #3
  51 0026 C3F38713 		ubfx	r3, r3, #6, #8
  52 002a 63F30F22 		bfi	r2, r3, #8, #8
 426:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
  53              		.loc 2 426 5 view .LVU5
  54 002e 00F01F03 		and	r3, r0, #31
  55 0032 03EB4311 		add	r1, r3, r3, lsl #5
  56 0036 C3EBC103 		rsb	r3, r3, r1, lsl #3
  57 003a 0733     		adds	r3, r3, #7
  58 003c C3F34713 		ubfx	r3, r3, #5, #8
  59 0040 63F30702 		bfi	r2, r3, #0, #8
 427:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
  60              		.loc 2 427 5 view .LVU6
 428:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
  61              		.loc 2 428 5 view .LVU7
 429:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 430:lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 431:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 432:lvgl/src/draw/sw/../../misc/lv_color.h **** }
  62              		.loc 2 432 1 is_stmt 0 view .LVU8
  63 0044 42F07F40 		orr	r0, r2, #-16777216
  64              	.LVL3:
  65              		.loc 2 432 1 view .LVU9
  66 0048 7047     		bx	lr
  67              		.cfi_endproc
  68              	.LFE5:
  70              		.section	.text.compute_key,"ax",%progbits
  71              		.align	1
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  76              	compute_key:
  77              	.LVL4:
  78              	.LFB56:
   1:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** /**
   2:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****  * @file lv_draw_sw_gradient.c
   3:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****  *
   4:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****  */
   5:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
   6:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** /*********************
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 10


   7:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****  *      INCLUDES
   8:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****  *********************/
   9:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #include "lv_draw_sw_gradient.h"
  10:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #include "../../misc/lv_gc.h"
  11:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #include "../../misc/lv_types.h"
  12:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
  13:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** /*********************
  14:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****  *      DEFINES
  15:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****  *********************/
  16:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if _DITHER_GRADIENT
  17:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     #define GRAD_CM(r,g,b) LV_COLOR_MAKE32(r,g,b)
  18:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     #define GRAD_CONV(t, x) t.full = lv_color_to32(x)
  19:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #else
  20:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     #define GRAD_CM(r,g,b) LV_COLOR_MAKE(r,g,b)
  21:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     #define GRAD_CONV(t, x) t = x
  22:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #endif
  23:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
  24:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if defined(LV_ARCH_64)
  25:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     #define ALIGN(X)    (((X) + 7) & ~7)
  26:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #else
  27:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     #define ALIGN(X)    (((X) + 3) & ~3)
  28:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #endif
  29:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
  30:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #define MAX_WIN_RES     1024 /**TODO: Find a way to get this information: max(horz_res, vert_res)*/
  31:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
  32:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if _DITHER_GRADIENT
  33:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     #if LV_DITHER_ERROR_DIFFUSION == 1
  34:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         #define LV_DEFAULT_GRAD_CACHE_SIZE  sizeof(lv_gradient_cache_t) + MAX_WIN_RES * sizeof(lv_g
  35:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     #else
  36:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         #define LV_DEFAULT_GRAD_CACHE_SIZE  sizeof(lv_gradient_cache_t) + MAX_WIN_RES * sizeof(lv_g
  37:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     #endif /* LV_DITHER_ERROR_DIFFUSION */
  38:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #else
  39:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     #define LV_DEFAULT_GRAD_CACHE_SIZE  sizeof(lv_gradient_cache_t) + MAX_WIN_RES * sizeof(lv_grad_
  40:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #endif /* _DITHER_GRADIENT */
  41:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
  42:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** /**********************
  43:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****  *  STATIC PROTOTYPES
  44:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****  **********************/
  45:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static lv_grad_t * next_in_cache(lv_grad_t * item);
  46:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
  47:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** typedef lv_res_t (*op_cache_t)(lv_grad_t * c, void * ctx);
  48:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static lv_res_t iterate_cache(op_cache_t func, void * ctx, lv_grad_t ** out);
  49:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static size_t get_cache_item_size(lv_grad_t * c);
  50:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static lv_grad_t * allocate_item(const lv_grad_dsc_t * g, lv_coord_t w, lv_coord_t h);
  51:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static lv_res_t find_oldest_item_life(lv_grad_t * c, void * ctx);
  52:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static lv_res_t kill_oldest_item(lv_grad_t * c, void * ctx);
  53:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static lv_res_t find_item(lv_grad_t * c, void * ctx);
  54:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static void free_item(lv_grad_t * c);
  55:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static  uint32_t compute_key(const lv_grad_dsc_t * g, lv_coord_t w, lv_coord_t h);
  56:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
  57:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
  58:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** /**********************
  59:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****  *   STATIC VARIABLE
  60:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****  **********************/
  61:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static size_t    grad_cache_size = 0;
  62:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static uint8_t * grad_cache_end = 0;
  63:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 11


  64:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** /**********************
  65:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****  *   STATIC FUNCTIONS
  66:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****  **********************/
  67:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** union void_cast {
  68:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     const void * ptr;
  69:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     const uint32_t value;
  70:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** };
  71:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
  72:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static uint32_t compute_key(const lv_grad_dsc_t * g, lv_coord_t size, lv_coord_t w)
  73:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** {
  79              		.loc 1 73 1 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  74:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     union void_cast v;
  84              		.loc 1 74 5 view .LVU11
  75:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     v.ptr = g;
  85              		.loc 1 75 5 view .LVU12
  76:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     return (v.value ^ size ^ (w >> 1)); /*Yes, this is correct, it's like a hash that changes if th
  86              		.loc 1 76 5 view .LVU13
  87              		.loc 1 76 21 is_stmt 0 view .LVU14
  88 0000 4840     		eors	r0, r0, r1
  89              	.LVL5:
  77:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** }
  90              		.loc 1 77 1 view .LVU15
  91 0002 80EA6200 		eor	r0, r0, r2, asr #1
  92 0006 7047     		bx	lr
  93              		.cfi_endproc
  94              	.LFE56:
  96              		.section	.text.get_cache_item_size,"ax",%progbits
  97              		.align	1
  98              		.syntax unified
  99              		.thumb
 100              		.thumb_func
 102              	get_cache_item_size:
 103              	.LVL6:
 104              	.LFB57:
  78:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
  79:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static size_t get_cache_item_size(lv_grad_t * c)
  80:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** {
 105              		.loc 1 80 1 is_stmt 1 view -0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
  81:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     size_t s = ALIGN(sizeof(*c)) + ALIGN(c->alloc_size * sizeof(lv_color_t));
 110              		.loc 1 81 5 view .LVU17
 111              		.loc 1 81 36 is_stmt 0 view .LVU18
 112 0000 B0F90C00 		ldrsh	r0, [r0, #12]
 113              	.LVL7:
 114              		.loc 1 81 36 view .LVU19
 115 0004 4000     		lsls	r0, r0, #1
 116 0006 0330     		adds	r0, r0, #3
 117 0008 20F00300 		bic	r0, r0, #3
 118              	.LVL8:
  82:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if _DITHER_GRADIENT
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 12


  83:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     s += ALIGN(c->size * sizeof(lv_color32_t));
  84:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if LV_DITHER_ERROR_DIFFUSION == 1
  85:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     s += ALIGN(c->w * sizeof(lv_scolor24_t));
  86:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #endif
  87:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #endif
  88:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     return s;
 119              		.loc 1 88 5 is_stmt 1 view .LVU20
  89:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** }
 120              		.loc 1 89 1 is_stmt 0 view .LVU21
 121 000c 1030     		adds	r0, r0, #16
 122              	.LVL9:
 123              		.loc 1 89 1 view .LVU22
 124 000e 7047     		bx	lr
 125              		.cfi_endproc
 126              	.LFE57:
 128              		.section	.text.next_in_cache,"ax",%progbits
 129              		.align	1
 130              		.syntax unified
 131              		.thumb
 132              		.thumb_func
 134              	next_in_cache:
 135              	.LVL10:
 136              	.LFB58:
  90:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
  91:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static lv_grad_t * next_in_cache(lv_grad_t * item)
  92:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** {
 137              		.loc 1 92 1 is_stmt 1 view -0
 138              		.cfi_startproc
 139              		@ args = 0, pretend = 0, frame = 0
 140              		@ frame_needed = 0, uses_anonymous_args = 0
  93:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(grad_cache_size == 0) return NULL;
 141              		.loc 1 93 5 view .LVU24
 142              		.loc 1 93 24 is_stmt 0 view .LVU25
 143 0000 0A4B     		ldr	r3, .L14
 144 0002 1B68     		ldr	r3, [r3]
 145              		.loc 1 93 7 view .LVU26
 146 0004 7BB1     		cbz	r3, .L7
  92:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(grad_cache_size == 0) return NULL;
 147              		.loc 1 92 1 view .LVU27
 148 0006 10B5     		push	{r4, lr}
 149              	.LCFI0:
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 4, -8
 152              		.cfi_offset 14, -4
 153 0008 0446     		mov	r4, r0
  94:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
  95:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(item == NULL)
 154              		.loc 1 95 5 is_stmt 1 view .LVU28
 155              		.loc 1 95 7 is_stmt 0 view .LVU29
 156 000a 38B1     		cbz	r0, .L12
  96:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         return (lv_grad_t *)LV_GC_ROOT(_lv_grad_cache_mem);
  97:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(item == NULL)
 157              		.loc 1 97 5 is_stmt 1 view .LVU30
  98:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         return NULL;
  99:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 100:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     size_t s = get_cache_item_size(item);
 158              		.loc 1 100 5 view .LVU31
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 13


 159              		.loc 1 100 16 is_stmt 0 view .LVU32
 160 000c FFF7FEFF 		bl	get_cache_item_size
 161              	.LVL11:
 101:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     /*Compute the size for this cache item*/
 102:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if((uint8_t *)item + s >= grad_cache_end) return NULL;
 162              		.loc 1 102 5 is_stmt 1 view .LVU33
 163              		.loc 1 102 24 is_stmt 0 view .LVU34
 164 0010 2044     		add	r0, r0, r4
 165              	.LVL12:
 166              		.loc 1 102 28 view .LVU35
 167 0012 074B     		ldr	r3, .L14+4
 168 0014 1B68     		ldr	r3, [r3]
 169              		.loc 1 102 7 view .LVU36
 170 0016 9842     		cmp	r0, r3
 171 0018 03D2     		bcs	.L13
 172              	.LVL13:
 173              	.L4:
 103:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     else return (lv_grad_t *)((uint8_t *)item + s);
 104:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** }
 174              		.loc 1 104 1 view .LVU37
 175 001a 10BD     		pop	{r4, pc}
 176              	.LVL14:
 177              	.L12:
  96:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(item == NULL)
 178              		.loc 1 96 9 is_stmt 1 view .LVU38
  96:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(item == NULL)
 179              		.loc 1 96 16 is_stmt 0 view .LVU39
 180 001c 054B     		ldr	r3, .L14+8
 181 001e 1868     		ldr	r0, [r3]
 182              	.LVL15:
  96:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(item == NULL)
 183              		.loc 1 96 16 view .LVU40
 184 0020 FBE7     		b	.L4
 185              	.LVL16:
 186              	.L13:
 102:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     else return (lv_grad_t *)((uint8_t *)item + s);
 187              		.loc 1 102 54 discriminator 1 view .LVU41
 188 0022 0020     		movs	r0, #0
 189 0024 F9E7     		b	.L4
 190              	.LVL17:
 191              	.L7:
 192              	.LCFI1:
 193              		.cfi_def_cfa_offset 0
 194              		.cfi_restore 4
 195              		.cfi_restore 14
  93:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 196              		.loc 1 93 37 discriminator 1 view .LVU42
 197 0026 0020     		movs	r0, #0
 198              	.LVL18:
 199              		.loc 1 104 1 view .LVU43
 200 0028 7047     		bx	lr
 201              	.L15:
 202 002a 00BF     		.align	2
 203              	.L14:
 204 002c 00000000 		.word	grad_cache_size
 205 0030 00000000 		.word	grad_cache_end
 206 0034 00000000 		.word	_lv_grad_cache_mem
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 14


 207              		.cfi_endproc
 208              	.LFE58:
 210              		.section	.text.iterate_cache,"ax",%progbits
 211              		.align	1
 212              		.syntax unified
 213              		.thumb
 214              		.thumb_func
 216              	iterate_cache:
 217              	.LVL19:
 218              	.LFB59:
 105:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 106:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static lv_res_t iterate_cache(op_cache_t func, void * ctx, lv_grad_t ** out)
 107:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** {
 219              		.loc 1 107 1 is_stmt 1 view -0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223              		.loc 1 107 1 is_stmt 0 view .LVU45
 224 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 225              	.LCFI2:
 226              		.cfi_def_cfa_offset 24
 227              		.cfi_offset 3, -24
 228              		.cfi_offset 4, -20
 229              		.cfi_offset 5, -16
 230              		.cfi_offset 6, -12
 231              		.cfi_offset 7, -8
 232              		.cfi_offset 14, -4
 233 0002 0646     		mov	r6, r0
 234 0004 0D46     		mov	r5, r1
 235 0006 1746     		mov	r7, r2
 108:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_grad_t * first = next_in_cache(NULL);
 236              		.loc 1 108 5 is_stmt 1 view .LVU46
 237              		.loc 1 108 25 is_stmt 0 view .LVU47
 238 0008 0020     		movs	r0, #0
 239              	.LVL20:
 240              		.loc 1 108 25 view .LVU48
 241 000a FFF7FEFF 		bl	next_in_cache
 242              	.LVL21:
 243              		.loc 1 108 25 view .LVU49
 244 000e 0446     		mov	r4, r0
 245              	.LVL22:
 109:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     while(first != NULL && first->life) {
 246              		.loc 1 109 5 is_stmt 1 view .LVU50
 247              		.loc 1 109 10 is_stmt 0 view .LVU51
 248 0010 03E0     		b	.L17
 249              	.LVL23:
 250              	.L18:
 110:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         if((*func)(first, ctx) == LV_RES_OK) {
 111:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             if(out != NULL) *out = first;
 112:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             return LV_RES_OK;
 113:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         }
 114:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         first = next_in_cache(first);
 251              		.loc 1 114 9 is_stmt 1 view .LVU52
 252              		.loc 1 114 17 is_stmt 0 view .LVU53
 253 0012 2046     		mov	r0, r4
 254 0014 FFF7FEFF 		bl	next_in_cache
 255              	.LVL24:
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 15


 256 0018 0446     		mov	r4, r0
 257              	.LVL25:
 258              	.L17:
 109:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     while(first != NULL && first->life) {
 259              		.loc 1 109 25 is_stmt 1 view .LVU54
 260 001a 6CB1     		cbz	r4, .L22
 109:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     while(first != NULL && first->life) {
 261              		.loc 1 109 25 is_stmt 0 discriminator 1 view .LVU55
 262 001c 6368     		ldr	r3, [r4, #4]
 263 001e 33F04043 		bics	r3, r3, #-1073741824
 264 0022 07D0     		beq	.L24
 110:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         if((*func)(first, ctx) == LV_RES_OK) {
 265              		.loc 1 110 9 is_stmt 1 view .LVU56
 110:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         if((*func)(first, ctx) == LV_RES_OK) {
 266              		.loc 1 110 13 is_stmt 0 view .LVU57
 267 0024 2946     		mov	r1, r5
 268 0026 2046     		mov	r0, r4
 110:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         if((*func)(first, ctx) == LV_RES_OK) {
 269              		.loc 1 110 13 view .LVU58
 270 0028 B047     		blx	r6
 271              	.LVL26:
 110:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         if((*func)(first, ctx) == LV_RES_OK) {
 272              		.loc 1 110 11 discriminator 1 view .LVU59
 273 002a 0128     		cmp	r0, #1
 274 002c F1D1     		bne	.L18
 111:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             return LV_RES_OK;
 275              		.loc 1 111 13 is_stmt 1 view .LVU60
 111:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             return LV_RES_OK;
 276              		.loc 1 111 15 is_stmt 0 view .LVU61
 277 002e 27B1     		cbz	r7, .L20
 111:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             return LV_RES_OK;
 278              		.loc 1 111 29 is_stmt 1 discriminator 1 view .LVU62
 111:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             return LV_RES_OK;
 279              		.loc 1 111 34 is_stmt 0 discriminator 1 view .LVU63
 280 0030 3C60     		str	r4, [r7]
 112:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         }
 281              		.loc 1 112 13 is_stmt 1 view .LVU64
 112:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         }
 282              		.loc 1 112 20 is_stmt 0 view .LVU65
 283 0032 02E0     		b	.L20
 284              	.LVL27:
 285              	.L24:
 115:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 116:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     return LV_RES_INV;
 286              		.loc 1 116 12 view .LVU66
 287 0034 0020     		movs	r0, #0
 288              	.LVL28:
 289              		.loc 1 116 12 view .LVU67
 290 0036 00E0     		b	.L20
 291              	.LVL29:
 292              	.L22:
 293              		.loc 1 116 12 view .LVU68
 294 0038 0020     		movs	r0, #0
 295              	.LVL30:
 296              	.L20:
 117:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** }
 297              		.loc 1 117 1 view .LVU69
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 16


 298 003a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 299              		.loc 1 117 1 view .LVU70
 300              		.cfi_endproc
 301              	.LFE59:
 303              		.section	.text.find_oldest_item_life,"ax",%progbits
 304              		.align	1
 305              		.syntax unified
 306              		.thumb
 307              		.thumb_func
 309              	find_oldest_item_life:
 310              	.LVL31:
 311              	.LFB60:
 118:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 119:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static lv_res_t find_oldest_item_life(lv_grad_t * c, void * ctx)
 120:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** {
 312              		.loc 1 120 1 is_stmt 1 view -0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 121:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     uint32_t * min_life = (uint32_t *)ctx;
 317              		.loc 1 121 5 view .LVU72
 122:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(c->life < *min_life) *min_life = c->life;
 318              		.loc 1 122 5 view .LVU73
 319              		.loc 1 122 9 is_stmt 0 view .LVU74
 320 0000 4368     		ldr	r3, [r0, #4]
 321 0002 C3F31D03 		ubfx	r3, r3, #0, #30
 322              		.loc 1 122 18 view .LVU75
 323 0006 0A68     		ldr	r2, [r1]
 324              		.loc 1 122 7 view .LVU76
 325 0008 9342     		cmp	r3, r2
 326 000a 00D2     		bcs	.L26
 327              		.loc 1 122 29 is_stmt 1 discriminator 1 view .LVU77
 328              		.loc 1 122 39 is_stmt 0 discriminator 1 view .LVU78
 329 000c 0B60     		str	r3, [r1]
 330              	.L26:
 123:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     return LV_RES_INV;
 331              		.loc 1 123 5 is_stmt 1 view .LVU79
 124:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** }
 332              		.loc 1 124 1 is_stmt 0 view .LVU80
 333 000e 0020     		movs	r0, #0
 334              	.LVL32:
 335              		.loc 1 124 1 view .LVU81
 336 0010 7047     		bx	lr
 337              		.cfi_endproc
 338              	.LFE60:
 340              		.section	.text.find_item,"ax",%progbits
 341              		.align	1
 342              		.syntax unified
 343              		.thumb
 344              		.thumb_func
 346              	find_item:
 347              	.LVL33:
 348              	.LFB63:
 125:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 126:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static void free_item(lv_grad_t * c)
 127:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** {
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 17


 128:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     size_t size = get_cache_item_size(c);
 129:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     size_t next_items_size = (size_t)(grad_cache_end - (uint8_t *)c) - size;
 130:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     grad_cache_end -= size;
 131:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(next_items_size) {
 132:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         uint8_t * old = (uint8_t *)c;
 133:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         lv_memcpy(c, ((uint8_t *)c) + size, next_items_size);
 134:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         /* Then need to fix all internal pointers too */
 135:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         while((uint8_t *)c != grad_cache_end) {
 136:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             c->map = (lv_color_t *)(((uint8_t *)c->map) - size);
 137:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if _DITHER_GRADIENT
 138:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             c->hmap = (lv_color32_t *)(((uint8_t *)c->hmap) - size);
 139:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if LV_DITHER_ERROR_DIFFUSION == 1
 140:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             c->error_acc = (lv_scolor24_t *)(((uint8_t *)c->error_acc) - size);
 141:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #endif
 142:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #endif
 143:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             c = (lv_grad_t *)(((uint8_t *)c) + get_cache_item_size(c));
 144:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         }
 145:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         lv_memset_00(old + next_items_size, size);
 146:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 147:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** }
 148:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 149:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static lv_res_t kill_oldest_item(lv_grad_t * c, void * ctx)
 150:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** {
 151:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     uint32_t * min_life = (uint32_t *)ctx;
 152:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(c->life == *min_life) {
 153:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         /*Found, let's kill it*/
 154:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         free_item(c);
 155:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         return LV_RES_OK;
 156:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 157:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     return LV_RES_INV;
 158:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** }
 159:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 160:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static lv_res_t find_item(lv_grad_t * c, void * ctx)
 161:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** {
 349              		.loc 1 161 1 is_stmt 1 view -0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 162:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     uint32_t * k = (uint32_t *)ctx;
 354              		.loc 1 162 5 view .LVU83
 163:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(c->key == *k) return LV_RES_OK;
 355              		.loc 1 163 5 view .LVU84
 356              		.loc 1 163 9 is_stmt 0 view .LVU85
 357 0000 0268     		ldr	r2, [r0]
 358              		.loc 1 163 18 view .LVU86
 359 0002 0B68     		ldr	r3, [r1]
 360              		.loc 1 163 7 view .LVU87
 361 0004 9A42     		cmp	r2, r3
 362 0006 01D0     		beq	.L29
 164:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     return LV_RES_INV;
 363              		.loc 1 164 12 view .LVU88
 364 0008 0020     		movs	r0, #0
 365              	.LVL34:
 366              		.loc 1 164 12 view .LVU89
 367 000a 7047     		bx	lr
 368              	.LVL35:
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 18


 369              	.L29:
 163:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(c->key == *k) return LV_RES_OK;
 370              		.loc 1 163 29 discriminator 1 view .LVU90
 371 000c 0120     		movs	r0, #1
 372              	.LVL36:
 165:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** }
 373              		.loc 1 165 1 view .LVU91
 374 000e 7047     		bx	lr
 375              		.cfi_endproc
 376              	.LFE63:
 378              		.section	.text.allocate_item,"ax",%progbits
 379              		.align	1
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 384              	allocate_item:
 385              	.LVL37:
 386              	.LFB64:
 166:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 167:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** static lv_grad_t * allocate_item(const lv_grad_dsc_t * g, lv_coord_t w, lv_coord_t h)
 168:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** {
 387              		.loc 1 168 1 is_stmt 1 view -0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 8
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391              		.loc 1 168 1 is_stmt 0 view .LVU93
 392 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 393              	.LCFI3:
 394              		.cfi_def_cfa_offset 28
 395              		.cfi_offset 4, -28
 396              		.cfi_offset 5, -24
 397              		.cfi_offset 6, -20
 398              		.cfi_offset 7, -16
 399              		.cfi_offset 8, -12
 400              		.cfi_offset 9, -8
 401              		.cfi_offset 14, -4
 402 0004 83B0     		sub	sp, sp, #12
 403              	.LCFI4:
 404              		.cfi_def_cfa_offset 40
 405 0006 0746     		mov	r7, r0
 406 0008 0E46     		mov	r6, r1
 407 000a 1546     		mov	r5, r2
 169:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_coord_t size = g->dir == LV_GRAD_DIR_HOR ? w : h;
 408              		.loc 1 169 5 is_stmt 1 view .LVU94
 409              		.loc 1 169 30 is_stmt 0 view .LVU95
 410 000c 437A     		ldrb	r3, [r0, #9]	@ zero_extendqisi2
 411 000e 03F00703 		and	r3, r3, #7
 412              		.loc 1 169 16 view .LVU96
 413 0012 022B     		cmp	r3, #2
 414 0014 41D0     		beq	.L44
 415              		.loc 1 169 16 discriminator 2 view .LVU97
 416 0016 9046     		mov	r8, r2
 417              	.L31:
 418              	.LVL38:
 170:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_coord_t map_size = LV_MAX(w, h); /* The map is being used horizontally (width) unless
 419              		.loc 1 170 5 is_stmt 1 view .LVU98
 420              		.loc 1 170 16 is_stmt 0 view .LVU99
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 19


 421 0018 B542     		cmp	r5, r6
 422 001a B8BF     		it	lt
 423 001c 3546     		movlt	r5, r6
 424              	.LVL39:
 171:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                                            no dithering is selected where it's used vertically */
 172:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 173:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     size_t req_size = ALIGN(sizeof(lv_grad_t)) + ALIGN(map_size * sizeof(lv_color_t));
 425              		.loc 1 173 5 is_stmt 1 view .LVU100
 426              		.loc 1 173 50 is_stmt 0 view .LVU101
 427 001e 6C00     		lsls	r4, r5, #1
 428 0020 0334     		adds	r4, r4, #3
 429 0022 24F00304 		bic	r4, r4, #3
 430              		.loc 1 173 12 view .LVU102
 431 0026 1034     		adds	r4, r4, #16
 432              	.LVL40:
 174:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if _DITHER_GRADIENT
 175:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     req_size += ALIGN(size * sizeof(lv_color32_t));
 176:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if LV_DITHER_ERROR_DIFFUSION == 1
 177:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     req_size += ALIGN(w * sizeof(lv_scolor24_t));
 178:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #endif
 179:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #endif
 180:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 181:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     size_t act_size = (size_t)(grad_cache_end - LV_GC_ROOT(_lv_grad_cache_mem));
 433              		.loc 1 181 5 is_stmt 1 view .LVU103
 434              		.loc 1 181 47 is_stmt 0 view .LVU104
 435 0028 364B     		ldr	r3, .L46
 436 002a D3F80090 		ldr	r9, [r3]
 437 002e 364B     		ldr	r3, .L46+4
 438 0030 1B68     		ldr	r3, [r3]
 439 0032 A9EB0303 		sub	r3, r9, r3
 440              	.LVL41:
 182:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_grad_t * item = NULL;
 441              		.loc 1 182 5 is_stmt 1 view .LVU105
 183:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(req_size + act_size < grad_cache_size) {
 442              		.loc 1 183 5 view .LVU106
 443              		.loc 1 183 17 is_stmt 0 view .LVU107
 444 0036 E118     		adds	r1, r4, r3
 445              	.LVL42:
 446              		.loc 1 183 28 view .LVU108
 447 0038 344A     		ldr	r2, .L46+8
 448              	.LVL43:
 449              		.loc 1 183 28 view .LVU109
 450 003a 1268     		ldr	r2, [r2]
 451              		.loc 1 183 7 view .LVU110
 452 003c 9142     		cmp	r1, r2
 453 003e 2ED2     		bcs	.L32
 184:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item = (lv_grad_t *)grad_cache_end;
 454              		.loc 1 184 9 is_stmt 1 view .LVU111
 455              	.LVL44:
 185:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->not_cached = 0;
 456              		.loc 1 185 9 view .LVU112
 457              		.loc 1 185 26 is_stmt 0 view .LVU113
 458 0040 99F80730 		ldrb	r3, [r9, #7]	@ zero_extendqisi2
 459              	.LVL45:
 460              		.loc 1 185 26 view .LVU114
 461 0044 23F08003 		bic	r3, r3, #128
 462 0048 89F80730 		strb	r3, [r9, #7]
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 20


 463              	.LVL46:
 464              	.L33:
 186:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 187:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     else {
 188:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         /*Need to evict items from cache until we find enough space to allocate this one */
 189:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         if(req_size <= grad_cache_size) {
 190:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             while(act_size + req_size > grad_cache_size) {
 191:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                 uint32_t oldest_life = UINT32_MAX;
 192:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                 iterate_cache(&find_oldest_item_life, &oldest_life, NULL);
 193:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                 iterate_cache(&kill_oldest_item, &oldest_life, NULL);
 194:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                 act_size = (size_t)(grad_cache_end - LV_GC_ROOT(_lv_grad_cache_mem));
 195:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             }
 196:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             item = (lv_grad_t *)grad_cache_end;
 197:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             item->not_cached = 0;
 198:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         }
 199:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         else {
 200:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             /*The cache is too small. Allocate the item manually and free it later.*/
 201:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             item = lv_mem_alloc(req_size);
 202:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             LV_ASSERT_MALLOC(item);
 203:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             if(item == NULL) return NULL;
 204:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             item->not_cached = 1;
 205:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         }
 206:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 207:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 208:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     item->key = compute_key(g, size, w);
 465              		.loc 1 208 5 is_stmt 1 view .LVU115
 466              		.loc 1 208 17 is_stmt 0 view .LVU116
 467 004c 3246     		mov	r2, r6
 468 004e 4146     		mov	r1, r8
 469 0050 3846     		mov	r0, r7
 470 0052 FFF7FEFF 		bl	compute_key
 471              	.LVL47:
 472              		.loc 1 208 15 discriminator 1 view .LVU117
 473 0056 C9F80000 		str	r0, [r9]
 209:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     item->life = 1;
 474              		.loc 1 209 5 is_stmt 1 view .LVU118
 475              		.loc 1 209 16 is_stmt 0 view .LVU119
 476 005a D9F80430 		ldr	r3, [r9, #4]
 477 005e 0122     		movs	r2, #1
 478 0060 62F31D03 		bfi	r3, r2, #0, #30
 479 0064 C9F80430 		str	r3, [r9, #4]
 210:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     item->filled = 0;
 480              		.loc 1 210 5 is_stmt 1 view .LVU120
 481              		.loc 1 210 18 is_stmt 0 view .LVU121
 482 0068 99F80730 		ldrb	r3, [r9, #7]	@ zero_extendqisi2
 483 006c 23F04003 		bic	r3, r3, #64
 484 0070 89F80730 		strb	r3, [r9, #7]
 211:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     item->alloc_size = map_size;
 485              		.loc 1 211 5 is_stmt 1 view .LVU122
 486              		.loc 1 211 22 is_stmt 0 view .LVU123
 487 0074 A9F80C50 		strh	r5, [r9, #12]	@ movhi
 212:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     item->size = size;
 488              		.loc 1 212 5 is_stmt 1 view .LVU124
 489              		.loc 1 212 16 is_stmt 0 view .LVU125
 490 0078 A9F80E80 		strh	r8, [r9, #14]	@ movhi
 213:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(item->not_cached) {
 491              		.loc 1 213 5 is_stmt 1 view .LVU126
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 21


 492              		.loc 1 213 7 is_stmt 0 view .LVU127
 493 007c 5BB2     		sxtb	r3, r3
 494 007e 002B     		cmp	r3, #0
 495 0080 3BDB     		blt	.L45
 214:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         uint8_t * p = (uint8_t *)item;
 215:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->map = (lv_color_t *)(p + ALIGN(sizeof(*item)));
 216:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if _DITHER_GRADIENT
 217:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->hmap = (lv_color32_t *)(p + ALIGN(sizeof(*item)) + ALIGN(map_size * sizeof(lv_color_t
 218:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if LV_DITHER_ERROR_DIFFUSION == 1
 219:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->error_acc = (lv_scolor24_t *)(p + ALIGN(sizeof(*item)) + ALIGN(size * sizeof(lv_grad_
 220:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                                             ALIGN(map_size * sizeof(lv_color_t)));
 221:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->w = w;
 222:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #endif
 223:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #endif
 224:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 225:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     else {
 226:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->map = (lv_color_t *)(grad_cache_end + ALIGN(sizeof(*item)));
 496              		.loc 1 226 9 is_stmt 1 view .LVU128
 497              		.loc 1 226 51 is_stmt 0 view .LVU129
 498 0082 204A     		ldr	r2, .L46
 499 0084 1368     		ldr	r3, [r2]
 500 0086 03F11001 		add	r1, r3, #16
 501              		.loc 1 226 19 view .LVU130
 502 008a C9F80810 		str	r1, [r9, #8]
 227:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if _DITHER_GRADIENT
 228:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->hmap = (lv_color32_t *)(grad_cache_end + ALIGN(sizeof(*item)) + ALIGN(map_size * size
 229:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if LV_DITHER_ERROR_DIFFUSION == 1
 230:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->error_acc = (lv_scolor24_t *)(grad_cache_end + ALIGN(sizeof(*item)) + ALIGN(size * si
 231:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                                             ALIGN(map_size * sizeof(lv_color_t)));
 232:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->w = w;
 233:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #endif
 234:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #endif
 235:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         grad_cache_end += req_size;
 503              		.loc 1 235 9 is_stmt 1 view .LVU131
 504              		.loc 1 235 24 is_stmt 0 view .LVU132
 505 008e 2344     		add	r3, r3, r4
 506 0090 1360     		str	r3, [r2]
 236:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 237:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     return item;
 507              		.loc 1 237 5 is_stmt 1 view .LVU133
 508              	.L30:
 238:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** }
 509              		.loc 1 238 1 is_stmt 0 view .LVU134
 510 0092 4846     		mov	r0, r9
 511 0094 03B0     		add	sp, sp, #12
 512              	.LCFI5:
 513              		.cfi_remember_state
 514              		.cfi_def_cfa_offset 28
 515              		@ sp needed
 516 0096 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 517              	.LVL48:
 518              	.L44:
 519              	.LCFI6:
 520              		.cfi_restore_state
 169:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_coord_t map_size = LV_MAX(w, h); /* The map is being used horizontally (width) unless
 521              		.loc 1 169 16 discriminator 1 view .LVU135
 522 009a 8846     		mov	r8, r1
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 22


 523 009c BCE7     		b	.L31
 524              	.LVL49:
 525              	.L32:
 189:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             while(act_size + req_size > grad_cache_size) {
 526              		.loc 1 189 9 is_stmt 1 view .LVU136
 189:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             while(act_size + req_size > grad_cache_size) {
 527              		.loc 1 189 11 is_stmt 0 view .LVU137
 528 009e A242     		cmp	r2, r4
 529 00a0 1BD2     		bcs	.L34
 201:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             LV_ASSERT_MALLOC(item);
 530              		.loc 1 201 13 is_stmt 1 view .LVU138
 201:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             LV_ASSERT_MALLOC(item);
 531              		.loc 1 201 20 is_stmt 0 view .LVU139
 532 00a2 2046     		mov	r0, r4
 533              	.LVL50:
 201:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             LV_ASSERT_MALLOC(item);
 534              		.loc 1 201 20 view .LVU140
 535 00a4 FFF7FEFF 		bl	lv_mem_alloc
 536              	.LVL51:
 202:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             if(item == NULL) return NULL;
 537              		.loc 1 202 13 is_stmt 1 view .LVU141
 202:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             if(item == NULL) return NULL;
 538              		.loc 1 202 13 view .LVU142
 539 00a8 8146     		mov	r9, r0
 202:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             if(item == NULL) return NULL;
 540              		.loc 1 202 13 is_stmt 0 view .LVU143
 541 00aa 28B3     		cbz	r0, .L38
 202:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             if(item == NULL) return NULL;
 542              		.loc 1 202 13 is_stmt 1 discriminator 2 view .LVU144
 202:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             if(item == NULL) return NULL;
 543              		.loc 1 202 35 discriminator 2 view .LVU145
 203:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             item->not_cached = 1;
 544              		.loc 1 203 13 view .LVU146
 204:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         }
 545              		.loc 1 204 13 view .LVU147
 204:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         }
 546              		.loc 1 204 30 is_stmt 0 view .LVU148
 547 00ac C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 548 00ae 43F08003 		orr	r3, r3, #128
 549 00b2 C371     		strb	r3, [r0, #7]
 550 00b4 CAE7     		b	.L33
 551              	.LVL52:
 552              	.L36:
 553              	.LBB2:
 191:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                 iterate_cache(&find_oldest_item_life, &oldest_life, NULL);
 554              		.loc 1 191 17 is_stmt 1 view .LVU149
 191:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                 iterate_cache(&find_oldest_item_life, &oldest_life, NULL);
 555              		.loc 1 191 26 is_stmt 0 view .LVU150
 556 00b6 4FF0FF33 		mov	r3, #-1
 557 00ba 0193     		str	r3, [sp, #4]
 192:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                 iterate_cache(&kill_oldest_item, &oldest_life, NULL);
 558              		.loc 1 192 17 is_stmt 1 view .LVU151
 559 00bc 0022     		movs	r2, #0
 560 00be 01A9     		add	r1, sp, #4
 561 00c0 1348     		ldr	r0, .L46+12
 562 00c2 FFF7FEFF 		bl	iterate_cache
 563              	.LVL53:
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 23


 193:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                 act_size = (size_t)(grad_cache_end - LV_GC_ROOT(_lv_grad_cache_mem));
 564              		.loc 1 193 17 view .LVU152
 565 00c6 0022     		movs	r2, #0
 566 00c8 01A9     		add	r1, sp, #4
 567 00ca 1248     		ldr	r0, .L46+16
 568 00cc FFF7FEFF 		bl	iterate_cache
 569              	.LVL54:
 194:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             }
 570              		.loc 1 194 17 view .LVU153
 194:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             }
 571              		.loc 1 194 52 is_stmt 0 view .LVU154
 572 00d0 0C4B     		ldr	r3, .L46
 573 00d2 1B68     		ldr	r3, [r3]
 574 00d4 0C4A     		ldr	r2, .L46+4
 575 00d6 1268     		ldr	r2, [r2]
 576 00d8 9B1A     		subs	r3, r3, r2
 577              	.LVL55:
 578              	.L34:
 194:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             }
 579              		.loc 1 194 52 view .LVU155
 580              	.LBE2:
 190:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                 uint32_t oldest_life = UINT32_MAX;
 581              		.loc 1 190 39 is_stmt 1 view .LVU156
 190:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                 uint32_t oldest_life = UINT32_MAX;
 582              		.loc 1 190 28 is_stmt 0 view .LVU157
 583 00da 2344     		add	r3, r3, r4
 584              	.LVL56:
 190:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                 uint32_t oldest_life = UINT32_MAX;
 585              		.loc 1 190 39 view .LVU158
 586 00dc 0B4A     		ldr	r2, .L46+8
 587 00de 1268     		ldr	r2, [r2]
 588 00e0 9342     		cmp	r3, r2
 589 00e2 E8D8     		bhi	.L36
 196:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             item->not_cached = 0;
 590              		.loc 1 196 13 is_stmt 1 view .LVU159
 196:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             item->not_cached = 0;
 591              		.loc 1 196 18 is_stmt 0 view .LVU160
 592 00e4 074B     		ldr	r3, .L46
 593 00e6 D3F80090 		ldr	r9, [r3]
 594              	.LVL57:
 197:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         }
 595              		.loc 1 197 13 is_stmt 1 view .LVU161
 197:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         }
 596              		.loc 1 197 30 is_stmt 0 view .LVU162
 597 00ea 99F80730 		ldrb	r3, [r9, #7]	@ zero_extendqisi2
 598 00ee 23F08003 		bic	r3, r3, #128
 599 00f2 89F80730 		strb	r3, [r9, #7]
 600 00f6 A9E7     		b	.L33
 601              	.LVL58:
 602              	.L38:
 202:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             if(item == NULL) return NULL;
 603              		.loc 1 202 13 is_stmt 1 discriminator 1 view .LVU163
 202:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             if(item == NULL) return NULL;
 604              		.loc 1 202 13 discriminator 1 view .LVU164
 202:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             if(item == NULL) return NULL;
 605              		.loc 1 202 13 discriminator 1 view .LVU165
 202:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             if(item == NULL) return NULL;
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 24


 606              		.loc 1 202 13 discriminator 1 view .LVU166
 202:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             if(item == NULL) return NULL;
 607              		.loc 1 202 13 discriminator 1 view .LVU167
 608 00f8 FEE7     		b	.L38
 609              	.LVL59:
 610              	.L45:
 611              	.LBB3:
 214:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->map = (lv_color_t *)(p + ALIGN(sizeof(*item)));
 612              		.loc 1 214 9 view .LVU168
 215:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if _DITHER_GRADIENT
 613              		.loc 1 215 9 view .LVU169
 215:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if _DITHER_GRADIENT
 614              		.loc 1 215 38 is_stmt 0 view .LVU170
 615 00fa 09F11003 		add	r3, r9, #16
 215:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if _DITHER_GRADIENT
 616              		.loc 1 215 19 view .LVU171
 617 00fe C9F80830 		str	r3, [r9, #8]
 618              	.LBE3:
 619 0102 C6E7     		b	.L30
 620              	.L47:
 621              		.align	2
 622              	.L46:
 623 0104 00000000 		.word	grad_cache_end
 624 0108 00000000 		.word	_lv_grad_cache_mem
 625 010c 00000000 		.word	grad_cache_size
 626 0110 00000000 		.word	find_oldest_item_life
 627 0114 00000000 		.word	kill_oldest_item
 628              		.cfi_endproc
 629              	.LFE64:
 631              		.section	.text.free_item,"ax",%progbits
 632              		.align	1
 633              		.syntax unified
 634              		.thumb
 635              		.thumb_func
 637              	free_item:
 638              	.LVL60:
 639              	.LFB61:
 127:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     size_t size = get_cache_item_size(c);
 640              		.loc 1 127 1 is_stmt 1 view -0
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 0
 643              		@ frame_needed = 0, uses_anonymous_args = 0
 127:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     size_t size = get_cache_item_size(c);
 644              		.loc 1 127 1 is_stmt 0 view .LVU173
 645 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 646              	.LCFI7:
 647              		.cfi_def_cfa_offset 24
 648              		.cfi_offset 4, -24
 649              		.cfi_offset 5, -20
 650              		.cfi_offset 6, -16
 651              		.cfi_offset 7, -12
 652              		.cfi_offset 8, -8
 653              		.cfi_offset 14, -4
 654 0004 0646     		mov	r6, r0
 128:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     size_t next_items_size = (size_t)(grad_cache_end - (uint8_t *)c) - size;
 655              		.loc 1 128 5 is_stmt 1 view .LVU174
 128:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     size_t next_items_size = (size_t)(grad_cache_end - (uint8_t *)c) - size;
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 25


 656              		.loc 1 128 19 is_stmt 0 view .LVU175
 657 0006 FFF7FEFF 		bl	get_cache_item_size
 658              	.LVL61:
 129:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     grad_cache_end -= size;
 659              		.loc 1 129 5 is_stmt 1 view .LVU176
 129:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     grad_cache_end -= size;
 660              		.loc 1 129 54 is_stmt 0 view .LVU177
 661 000a 114A     		ldr	r2, .L54
 662 000c 1368     		ldr	r3, [r2]
 663 000e 9F1B     		subs	r7, r3, r6
 664              	.LVL62:
 130:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(next_items_size) {
 665              		.loc 1 130 5 is_stmt 1 view .LVU178
 130:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(next_items_size) {
 666              		.loc 1 130 20 is_stmt 0 view .LVU179
 667 0010 1B1A     		subs	r3, r3, r0
 668 0012 1360     		str	r3, [r2]
 131:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         uint8_t * old = (uint8_t *)c;
 669              		.loc 1 131 5 is_stmt 1 view .LVU180
 131:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         uint8_t * old = (uint8_t *)c;
 670              		.loc 1 131 7 is_stmt 0 view .LVU181
 671 0014 3F1A     		subs	r7, r7, r0
 672              	.LVL63:
 131:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         uint8_t * old = (uint8_t *)c;
 673              		.loc 1 131 7 view .LVU182
 674 0016 01D1     		bne	.L53
 675              	.LVL64:
 676              	.L48:
 147:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 677              		.loc 1 147 1 view .LVU183
 678 0018 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 679              	.LVL65:
 680              	.L53:
 147:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 681              		.loc 1 147 1 view .LVU184
 682 001c 0546     		mov	r5, r0
 683 001e C0F10008 		rsb	r8, r0, #0
 684              	.LBB4:
 132:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         lv_memcpy(c, ((uint8_t *)c) + size, next_items_size);
 685              		.loc 1 132 9 is_stmt 1 view .LVU185
 686              	.LVL66:
 133:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         /* Then need to fix all internal pointers too */
 687              		.loc 1 133 9 view .LVU186
 688 0022 3A46     		mov	r2, r7
 689 0024 3118     		adds	r1, r6, r0
 690 0026 3046     		mov	r0, r6
 691              	.LVL67:
 133:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         /* Then need to fix all internal pointers too */
 692              		.loc 1 133 9 is_stmt 0 view .LVU187
 693 0028 FFF7FEFF 		bl	lv_memcpy
 694              	.LVL68:
 135:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             c->map = (lv_color_t *)(((uint8_t *)c->map) - size);
 695              		.loc 1 135 9 is_stmt 1 view .LVU188
 135:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             c->map = (lv_color_t *)(((uint8_t *)c->map) - size);
 696              		.loc 1 135 14 is_stmt 0 view .LVU189
 697 002c 3446     		mov	r4, r6
 698 002e 06E0     		b	.L50
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 26


 699              	.LVL69:
 700              	.L51:
 136:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if _DITHER_GRADIENT
 701              		.loc 1 136 13 is_stmt 1 view .LVU190
 136:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if _DITHER_GRADIENT
 702              		.loc 1 136 50 is_stmt 0 view .LVU191
 703 0030 A368     		ldr	r3, [r4, #8]
 136:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if _DITHER_GRADIENT
 704              		.loc 1 136 22 view .LVU192
 705 0032 4344     		add	r3, r3, r8
 136:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if _DITHER_GRADIENT
 706              		.loc 1 136 20 view .LVU193
 707 0034 A360     		str	r3, [r4, #8]
 143:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         }
 708              		.loc 1 143 13 is_stmt 1 view .LVU194
 143:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         }
 709              		.loc 1 143 48 is_stmt 0 view .LVU195
 710 0036 2046     		mov	r0, r4
 711 0038 FFF7FEFF 		bl	get_cache_item_size
 712              	.LVL70:
 143:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         }
 713              		.loc 1 143 15 discriminator 1 view .LVU196
 714 003c 0444     		add	r4, r4, r0
 715              	.LVL71:
 716              	.L50:
 135:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             c->map = (lv_color_t *)(((uint8_t *)c->map) - size);
 717              		.loc 1 135 28 is_stmt 1 view .LVU197
 718 003e 044B     		ldr	r3, .L54
 719 0040 1B68     		ldr	r3, [r3]
 720 0042 A342     		cmp	r3, r4
 721 0044 F4D1     		bne	.L51
 145:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 722              		.loc 1 145 9 view .LVU198
 723 0046 2946     		mov	r1, r5
 724 0048 F019     		adds	r0, r6, r7
 725 004a FFF7FEFF 		bl	lv_memset_00
 726              	.LVL72:
 727              	.LBE4:
 147:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 728              		.loc 1 147 1 is_stmt 0 view .LVU199
 729 004e E3E7     		b	.L48
 730              	.L55:
 731              		.align	2
 732              	.L54:
 733 0050 00000000 		.word	grad_cache_end
 734              		.cfi_endproc
 735              	.LFE61:
 737              		.section	.text.kill_oldest_item,"ax",%progbits
 738              		.align	1
 739              		.syntax unified
 740              		.thumb
 741              		.thumb_func
 743              	kill_oldest_item:
 744              	.LVL73:
 745              	.LFB62:
 150:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     uint32_t * min_life = (uint32_t *)ctx;
 746              		.loc 1 150 1 is_stmt 1 view -0
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 27


 747              		.cfi_startproc
 748              		@ args = 0, pretend = 0, frame = 0
 749              		@ frame_needed = 0, uses_anonymous_args = 0
 150:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     uint32_t * min_life = (uint32_t *)ctx;
 750              		.loc 1 150 1 is_stmt 0 view .LVU201
 751 0000 08B5     		push	{r3, lr}
 752              	.LCFI8:
 753              		.cfi_def_cfa_offset 8
 754              		.cfi_offset 3, -8
 755              		.cfi_offset 14, -4
 151:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(c->life == *min_life) {
 756              		.loc 1 151 5 is_stmt 1 view .LVU202
 757              	.LVL74:
 152:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         /*Found, let's kill it*/
 758              		.loc 1 152 5 view .LVU203
 152:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         /*Found, let's kill it*/
 759              		.loc 1 152 9 is_stmt 0 view .LVU204
 760 0002 4368     		ldr	r3, [r0, #4]
 761 0004 C3F31D03 		ubfx	r3, r3, #0, #30
 152:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         /*Found, let's kill it*/
 762              		.loc 1 152 19 view .LVU205
 763 0008 0A68     		ldr	r2, [r1]
 152:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         /*Found, let's kill it*/
 764              		.loc 1 152 7 view .LVU206
 765 000a 9342     		cmp	r3, r2
 766 000c 01D0     		beq	.L60
 157:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** }
 767              		.loc 1 157 12 view .LVU207
 768 000e 0020     		movs	r0, #0
 769              	.LVL75:
 770              	.L57:
 158:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 771              		.loc 1 158 1 view .LVU208
 772 0010 08BD     		pop	{r3, pc}
 773              	.LVL76:
 774              	.L60:
 154:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         return LV_RES_OK;
 775              		.loc 1 154 9 is_stmt 1 view .LVU209
 776 0012 FFF7FEFF 		bl	free_item
 777              	.LVL77:
 155:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 778              		.loc 1 155 9 view .LVU210
 155:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 779              		.loc 1 155 16 is_stmt 0 view .LVU211
 780 0016 0120     		movs	r0, #1
 781 0018 FAE7     		b	.L57
 782              		.cfi_endproc
 783              	.LFE62:
 785              		.section	.text.lv_gradient_free_cache,"ax",%progbits
 786              		.align	1
 787              		.global	lv_gradient_free_cache
 788              		.syntax unified
 789              		.thumb
 790              		.thumb_func
 792              	lv_gradient_free_cache:
 793              	.LFB65:
 239:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 28


 240:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 241:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** /**********************
 242:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****  *     FUNCTIONS
 243:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****  **********************/
 244:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** void lv_gradient_free_cache(void)
 245:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** {
 794              		.loc 1 245 1 is_stmt 1 view -0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 0
 797              		@ frame_needed = 0, uses_anonymous_args = 0
 798 0000 10B5     		push	{r4, lr}
 799              	.LCFI9:
 800              		.cfi_def_cfa_offset 8
 801              		.cfi_offset 4, -8
 802              		.cfi_offset 14, -4
 246:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_mem_free(LV_GC_ROOT(_lv_grad_cache_mem));
 803              		.loc 1 246 5 view .LVU213
 804 0002 054C     		ldr	r4, .L63
 805 0004 2068     		ldr	r0, [r4]
 806 0006 FFF7FEFF 		bl	lv_mem_free
 807              	.LVL78:
 247:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     LV_GC_ROOT(_lv_grad_cache_mem) = grad_cache_end = NULL;
 808              		.loc 1 247 5 view .LVU214
 809              		.loc 1 247 53 is_stmt 0 view .LVU215
 810 000a 0023     		movs	r3, #0
 811 000c 034A     		ldr	r2, .L63+4
 812 000e 1360     		str	r3, [r2]
 813              		.loc 1 247 36 view .LVU216
 814 0010 2360     		str	r3, [r4]
 248:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     grad_cache_size = 0;
 815              		.loc 1 248 5 is_stmt 1 view .LVU217
 816              		.loc 1 248 21 is_stmt 0 view .LVU218
 817 0012 034A     		ldr	r2, .L63+8
 818 0014 1360     		str	r3, [r2]
 249:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** }
 819              		.loc 1 249 1 view .LVU219
 820 0016 10BD     		pop	{r4, pc}
 821              	.L64:
 822              		.align	2
 823              	.L63:
 824 0018 00000000 		.word	_lv_grad_cache_mem
 825 001c 00000000 		.word	grad_cache_end
 826 0020 00000000 		.word	grad_cache_size
 827              		.cfi_endproc
 828              	.LFE65:
 830              		.section	.text.lv_gradient_set_cache_size,"ax",%progbits
 831              		.align	1
 832              		.global	lv_gradient_set_cache_size
 833              		.syntax unified
 834              		.thumb
 835              		.thumb_func
 837              	lv_gradient_set_cache_size:
 838              	.LVL79:
 839              	.LFB66:
 250:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 251:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** void lv_gradient_set_cache_size(size_t max_bytes)
 252:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** {
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 29


 840              		.loc 1 252 1 is_stmt 1 view -0
 841              		.cfi_startproc
 842              		@ args = 0, pretend = 0, frame = 0
 843              		@ frame_needed = 0, uses_anonymous_args = 0
 844              		.loc 1 252 1 is_stmt 0 view .LVU221
 845 0000 38B5     		push	{r3, r4, r5, lr}
 846              	.LCFI10:
 847              		.cfi_def_cfa_offset 16
 848              		.cfi_offset 3, -16
 849              		.cfi_offset 4, -12
 850              		.cfi_offset 5, -8
 851              		.cfi_offset 14, -4
 852 0002 0446     		mov	r4, r0
 253:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_mem_free(LV_GC_ROOT(_lv_grad_cache_mem));
 853              		.loc 1 253 5 is_stmt 1 view .LVU222
 854 0004 084D     		ldr	r5, .L69
 855 0006 2868     		ldr	r0, [r5]
 856              	.LVL80:
 857              		.loc 1 253 5 is_stmt 0 view .LVU223
 858 0008 FFF7FEFF 		bl	lv_mem_free
 859              	.LVL81:
 254:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     grad_cache_end = LV_GC_ROOT(_lv_grad_cache_mem) = lv_mem_alloc(max_bytes);
 860              		.loc 1 254 5 is_stmt 1 view .LVU224
 861              		.loc 1 254 55 is_stmt 0 view .LVU225
 862 000c 2046     		mov	r0, r4
 863 000e FFF7FEFF 		bl	lv_mem_alloc
 864              	.LVL82:
 865              		.loc 1 254 53 discriminator 1 view .LVU226
 866 0012 2860     		str	r0, [r5]
 867              		.loc 1 254 20 discriminator 1 view .LVU227
 868 0014 054B     		ldr	r3, .L69+4
 869 0016 1860     		str	r0, [r3]
 255:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     LV_ASSERT_MALLOC(LV_GC_ROOT(_lv_grad_cache_mem));
 870              		.loc 1 255 5 is_stmt 1 view .LVU228
 871              		.loc 1 255 5 view .LVU229
 872 0018 28B1     		cbz	r0, .L67
 873              		.loc 1 255 5 discriminator 2 view .LVU230
 874              		.loc 1 255 53 discriminator 2 view .LVU231
 256:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_memset_00(LV_GC_ROOT(_lv_grad_cache_mem), max_bytes);
 875              		.loc 1 256 5 view .LVU232
 876 001a 2146     		mov	r1, r4
 877 001c FFF7FEFF 		bl	lv_memset_00
 878              	.LVL83:
 257:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     grad_cache_size = max_bytes;
 879              		.loc 1 257 5 view .LVU233
 880              		.loc 1 257 21 is_stmt 0 view .LVU234
 881 0020 034B     		ldr	r3, .L69+8
 882 0022 1C60     		str	r4, [r3]
 258:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** }
 883              		.loc 1 258 1 view .LVU235
 884 0024 38BD     		pop	{r3, r4, r5, pc}
 885              	.LVL84:
 886              	.L67:
 255:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_memset_00(LV_GC_ROOT(_lv_grad_cache_mem), max_bytes);
 887              		.loc 1 255 5 is_stmt 1 discriminator 1 view .LVU236
 255:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_memset_00(LV_GC_ROOT(_lv_grad_cache_mem), max_bytes);
 888              		.loc 1 255 5 discriminator 1 view .LVU237
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 30


 255:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_memset_00(LV_GC_ROOT(_lv_grad_cache_mem), max_bytes);
 889              		.loc 1 255 5 discriminator 1 view .LVU238
 255:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_memset_00(LV_GC_ROOT(_lv_grad_cache_mem), max_bytes);
 890              		.loc 1 255 5 discriminator 1 view .LVU239
 255:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_memset_00(LV_GC_ROOT(_lv_grad_cache_mem), max_bytes);
 891              		.loc 1 255 5 discriminator 1 view .LVU240
 892 0026 FEE7     		b	.L67
 893              	.L70:
 894              		.align	2
 895              	.L69:
 896 0028 00000000 		.word	_lv_grad_cache_mem
 897 002c 00000000 		.word	grad_cache_end
 898 0030 00000000 		.word	grad_cache_size
 899              		.cfi_endproc
 900              	.LFE66:
 902              		.section	.text.lv_gradient_calculate,"ax",%progbits
 903              		.align	1
 904              		.global	lv_gradient_calculate
 905              		.syntax unified
 906              		.thumb
 907              		.thumb_func
 909              	lv_gradient_calculate:
 910              	.LVL85:
 911              	.LFB68:
 259:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 260:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** lv_grad_t * lv_gradient_get(const lv_grad_dsc_t * g, lv_coord_t w, lv_coord_t h)
 261:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** {
 262:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     /* No gradient, no cache */
 263:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(g->dir == LV_GRAD_DIR_NONE) return NULL;
 264:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 265:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     /* Step 0: Check if the cache exist (else create it) */
 266:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     static bool inited = false;
 267:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(!inited) {
 268:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         lv_gradient_set_cache_size(LV_GRAD_CACHE_DEF_SIZE);
 269:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         inited = true;
 270:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 271:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 272:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     /* Step 1: Search cache for the given key */
 273:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_coord_t size = g->dir == LV_GRAD_DIR_HOR ? w : h;
 274:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     uint32_t key = compute_key(g, size, w);
 275:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_grad_t * item = NULL;
 276:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(iterate_cache(&find_item, &key, &item) == LV_RES_OK) {
 277:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->life++; /* Don't forget to bump the counter */
 278:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         return item;
 279:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 280:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 281:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     /* Step 2: Need to allocate an item for it */
 282:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     item = allocate_item(g, w, h);
 283:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(item == NULL) {
 284:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         LV_LOG_WARN("Faild to allcoate item for teh gradient");
 285:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         return item;
 286:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 287:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 288:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     /* Step 3: Fill it with the gradient, as expected */
 289:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if _DITHER_GRADIENT
 290:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     for(lv_coord_t i = 0; i < item->size; i++) {
 291:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->hmap[i] = lv_gradient_calculate(g, item->size, i);
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 31


 292:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 293:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #if LV_DITHER_ERROR_DIFFUSION == 1
 294:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_memset_00(item->error_acc, w * sizeof(lv_scolor24_t));
 295:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #endif
 296:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #else
 297:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     for(lv_coord_t i = 0; i < item->size; i++) {
 298:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->map[i] = lv_gradient_calculate(g, item->size, i);
 299:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 300:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** #endif
 301:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 302:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     return item;
 303:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** }
 304:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 305:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** LV_ATTRIBUTE_FAST_MEM lv_grad_color_t lv_gradient_calculate(const lv_grad_dsc_t * dsc, lv_coord_t r
 306:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                                                             lv_coord_t frac)
 307:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** {
 912              		.loc 1 307 1 view -0
 913              		.cfi_startproc
 914              		@ args = 0, pretend = 0, frame = 0
 915              		@ frame_needed = 0, uses_anonymous_args = 0
 916              		.loc 1 307 1 is_stmt 0 view .LVU242
 917 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 918              	.LCFI11:
 919              		.cfi_def_cfa_offset 32
 920              		.cfi_offset 4, -32
 921              		.cfi_offset 5, -28
 922              		.cfi_offset 6, -24
 923              		.cfi_offset 7, -20
 924              		.cfi_offset 8, -16
 925              		.cfi_offset 9, -12
 926              		.cfi_offset 10, -8
 927              		.cfi_offset 14, -4
 928 0004 0746     		mov	r7, r0
 308:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_grad_color_t tmp;
 929              		.loc 1 308 5 is_stmt 1 view .LVU243
 309:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_color32_t one, two;
 930              		.loc 1 309 5 view .LVU244
 310:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     /*Clip out-of-bounds first*/
 311:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     int32_t min = (dsc->stops[0].frac * range) >> 8;
 931              		.loc 1 311 5 view .LVU245
 932              		.loc 1 311 33 is_stmt 0 view .LVU246
 933 0006 8378     		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 934              		.loc 1 311 39 view .LVU247
 935 0008 01FB03F3 		mul	r3, r1, r3
 936              	.LVL86:
 312:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(frac <= min) {
 937              		.loc 1 312 5 is_stmt 1 view .LVU248
 938              		.loc 1 312 7 is_stmt 0 view .LVU249
 939 000c B2EB232F 		cmp	r2, r3, asr #8
 940 0010 0EDD     		ble	.L80
 941 0012 8846     		mov	r8, r1
 942 0014 1546     		mov	r5, r2
 943 0016 1912     		asrs	r1, r3, #8
 944              	.LVL87:
 313:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         GRAD_CONV(tmp, dsc->stops[0].color);
 314:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         return tmp;
 315:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 32


 316:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 317:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     int32_t max = (dsc->stops[dsc->stops_count - 1].frac * range) >> 8;
 945              		.loc 1 317 5 is_stmt 1 view .LVU250
 946              		.loc 1 317 34 is_stmt 0 view .LVU251
 947 0018 027A     		ldrb	r2, [r0, #8]	@ zero_extendqisi2
 948              	.LVL88:
 949              		.loc 1 317 48 view .LVU252
 950 001a 501E     		subs	r0, r2, #1
 951              	.LVL89:
 952              		.loc 1 317 52 view .LVU253
 953 001c 07EB8003 		add	r3, r7, r0, lsl #2
 954 0020 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 955              		.loc 1 317 58 view .LVU254
 956 0022 03FB08F3 		mul	r3, r3, r8
 957              	.LVL90:
 318:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(frac >= max) {
 958              		.loc 1 318 5 is_stmt 1 view .LVU255
 959              		.loc 1 318 7 is_stmt 0 view .LVU256
 960 0026 B5EB232F 		cmp	r5, r3, asr #8
 961 002a 03DA     		bge	.L81
 962              	.LBB5:
 319:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         GRAD_CONV(tmp, dsc->stops[dsc->stops_count - 1].color);
 320:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         return tmp;
 321:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 322:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 323:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     /*Find the 2 closest stop now*/
 324:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     int32_t d = 0;
 325:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     for(uint8_t i = 1; i < dsc->stops_count; i++) {
 963              		.loc 1 325 17 view .LVU257
 964 002c 0124     		movs	r4, #1
 965 002e 06E0     		b	.L74
 966              	.LVL91:
 967              	.L80:
 968              		.loc 1 325 17 view .LVU258
 969              	.LBE5:
 313:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         return tmp;
 970              		.loc 1 313 9 is_stmt 1 view .LVU259
 971 0030 0088     		ldrh	r0, [r0]
 972              	.LVL92:
 314:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 973              		.loc 1 314 9 view .LVU260
 314:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 974              		.loc 1 314 16 is_stmt 0 view .LVU261
 975 0032 62E0     		b	.L73
 976              	.LVL93:
 977              	.L81:
 319:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         GRAD_CONV(tmp, dsc->stops[dsc->stops_count - 1].color);
 978              		.loc 1 319 9 is_stmt 1 view .LVU262
 979 0034 37F82000 		ldrh	r0, [r7, r0, lsl #2]
 320:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 980              		.loc 1 320 9 view .LVU263
 320:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 981              		.loc 1 320 16 is_stmt 0 view .LVU264
 982 0038 5FE0     		b	.L73
 983              	.LVL94:
 984              	.L75:
 985              	.LBB7:
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 33


 986              		.loc 1 325 47 is_stmt 1 discriminator 2 view .LVU265
 987 003a 0134     		adds	r4, r4, #1
 988              	.LVL95:
 989              		.loc 1 325 47 is_stmt 0 discriminator 2 view .LVU266
 990 003c E4B2     		uxtb	r4, r4
 991              	.LVL96:
 992              	.L74:
 993              		.loc 1 325 26 is_stmt 1 discriminator 1 view .LVU267
 994 003e A242     		cmp	r2, r4
 995 0040 1FD9     		bls	.L82
 996              	.LBB6:
 326:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         int32_t cur = (dsc->stops[i].frac * range) >> 8;
 997              		.loc 1 326 9 view .LVU268
 998              		.loc 1 326 37 is_stmt 0 view .LVU269
 999 0042 07EB8403 		add	r3, r7, r4, lsl #2
 1000 0046 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1001              		.loc 1 326 43 view .LVU270
 1002 0048 03FB08F3 		mul	r3, r3, r8
 1003              		.loc 1 326 17 view .LVU271
 1004 004c 4FEA2329 		asr	r9, r3, #8
 1005              	.LVL97:
 327:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         if(frac <= cur) {
 1006              		.loc 1 327 9 is_stmt 1 view .LVU272
 1007              		.loc 1 327 11 is_stmt 0 view .LVU273
 1008 0050 B5EB232F 		cmp	r5, r3, asr #8
 1009 0054 F1DC     		bgt	.L75
 328:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             one.full = lv_color_to32(dsc->stops[i - 1].color);
 1010              		.loc 1 328 13 is_stmt 1 view .LVU274
 1011              		.loc 1 328 51 is_stmt 0 view .LVU275
 1012 0056 04F1FF3A 		add	r10, r4, #-1
 1013              		.loc 1 328 24 view .LVU276
 1014 005a 37F82A00 		ldrh	r0, [r7, r10, lsl #2]
 1015              	.LVL98:
 1016              		.loc 1 328 24 view .LVU277
 1017 005e FFF7FEFF 		bl	lv_color_to32
 1018              	.LVL99:
 1019              		.loc 1 328 24 view .LVU278
 1020 0062 0646     		mov	r6, r0
 1021              	.LVL100:
 329:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             two.full = lv_color_to32(dsc->stops[i].color);
 1022              		.loc 1 329 13 is_stmt 1 view .LVU279
 1023              		.loc 1 329 24 is_stmt 0 view .LVU280
 1024 0064 37F82400 		ldrh	r0, [r7, r4, lsl #2]
 1025 0068 FFF7FEFF 		bl	lv_color_to32
 1026              	.LVL101:
 1027 006c 8446     		mov	ip, r0
 1028              	.LVL102:
 330:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             min = (dsc->stops[i - 1].frac * range) >> 8;
 1029              		.loc 1 330 13 is_stmt 1 view .LVU281
 1030              		.loc 1 330 37 is_stmt 0 view .LVU282
 1031 006e 07EB8A0A 		add	r10, r7, r10, lsl #2
 1032 0072 9AF80230 		ldrb	r3, [r10, #2]	@ zero_extendqisi2
 1033              		.loc 1 330 43 view .LVU283
 1034 0076 03FB08F3 		mul	r3, r3, r8
 1035              		.loc 1 330 17 view .LVU284
 1036 007a 1912     		asrs	r1, r3, #8
 1037              	.LVL103:
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 34


 331:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             max = (dsc->stops[i].frac * range) >> 8;
 1038              		.loc 1 331 13 is_stmt 1 view .LVU285
 332:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             d = max - min;
 1039              		.loc 1 332 13 view .LVU286
 1040              		.loc 1 332 15 is_stmt 0 view .LVU287
 1041 007c A9EB2329 		sub	r9, r9, r3, asr #8
 1042              	.LVL104:
 333:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****             break;
 1043              		.loc 1 333 13 is_stmt 1 view .LVU288
 1044 0080 01E0     		b	.L76
 1045              	.LVL105:
 1046              	.L82:
 1047              		.loc 1 333 13 is_stmt 0 view .LVU289
 1048              	.LBE6:
 1049              	.LBE7:
 324:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     for(uint8_t i = 1; i < dsc->stops_count; i++) {
 1050              		.loc 1 324 13 view .LVU290
 1051 0082 4FF00009 		mov	r9, #0
 1052              	.LVL106:
 1053              	.L76:
 334:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         }
 335:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 336:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 337:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     /*Then interpolate*/
 338:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     frac -= min;
 1054              		.loc 1 338 5 is_stmt 1 view .LVU291
 1055              		.loc 1 338 10 is_stmt 0 view .LVU292
 1056 0086 6D1A     		subs	r5, r5, r1
 1057              	.LVL107:
 1058              		.loc 1 338 10 view .LVU293
 1059 0088 2DB2     		sxth	r5, r5
 1060              	.LVL108:
 339:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_opa_t mix = (frac * 255) / d;
 1061              		.loc 1 339 5 is_stmt 1 view .LVU294
 1062              		.loc 1 339 26 is_stmt 0 view .LVU295
 1063 008a C5EB0525 		rsb	r5, r5, r5, lsl #8
 1064              	.LVL109:
 1065              		.loc 1 339 33 view .LVU296
 1066 008e 95FBF9F3 		sdiv	r3, r5, r9
 1067              		.loc 1 339 14 view .LVU297
 1068 0092 DBB2     		uxtb	r3, r3
 1069              	.LVL110:
 340:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_opa_t imix = 255 - mix;
 1070              		.loc 1 340 5 is_stmt 1 view .LVU298
 1071              		.loc 1 340 14 is_stmt 0 view .LVU299
 1072 0094 DA43     		mvns	r2, r3
 1073 0096 D2B2     		uxtb	r2, r2
 1074              	.LVL111:
 341:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 342:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_grad_color_t r = GRAD_CM(LV_UDIV255(two.ch.red * mix   + one.ch.red * imix),
 1075              		.loc 1 342 5 is_stmt 1 view .LVU300
 1076              		.loc 1 342 25 is_stmt 0 view .LVU301
 1077 0098 5FFA8CF0 		uxtb	r0, ip
 1078              		.loc 1 342 25 view .LVU302
 1079 009c F1B2     		uxtb	r1, r6
 1080              	.LVL112:
 1081              		.loc 1 342 25 view .LVU303
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 35


 1082 009e 02FB01F1 		mul	r1, r2, r1
 1083 00a2 03FB0011 		mla	r1, r3, r0, r1
 1084 00a6 01EB0120 		add	r0, r1, r1, lsl #8
 1085 00aa 01EBC011 		add	r1, r1, r0, lsl #7
 1086 00ae C1F38461 		ubfx	r1, r1, #26, #5
 1087              		.loc 1 342 21 view .LVU304
 1088 00b2 4FF00000 		mov	r0, #0	@ movhi
 1089              	.LVL113:
 1090              		.loc 1 342 21 view .LVU305
 1091 00b6 61F30400 		bfi	r0, r1, #0, #5
 1092              	.LVL114:
 1093              		.loc 1 342 25 view .LVU306
 1094 00ba CCF30724 		ubfx	r4, ip, #8, #8
 1095              	.LVL115:
 1096              		.loc 1 342 25 view .LVU307
 1097 00be C6F30721 		ubfx	r1, r6, #8, #8
 1098 00c2 02FB01F1 		mul	r1, r2, r1
 1099 00c6 03FB0411 		mla	r1, r3, r4, r1
 1100 00ca 01EB0124 		add	r4, r1, r1, lsl #8
 1101 00ce 01EBC411 		add	r1, r1, r4, lsl #7
 1102 00d2 C1F34561 		ubfx	r1, r1, #25, #6
 1103              		.loc 1 342 21 view .LVU308
 1104 00d6 61F34A10 		bfi	r0, r1, #5, #6
 1105              		.loc 1 342 25 view .LVU309
 1106 00da CCF3074C 		ubfx	ip, ip, #16, #8
 1107              		.loc 1 342 25 view .LVU310
 1108 00de C6F30746 		ubfx	r6, r6, #16, #8
 1109              		.loc 1 342 25 view .LVU311
 1110 00e2 06FB02F2 		mul	r2, r6, r2
 1111              	.LVL116:
 1112              		.loc 1 342 25 view .LVU312
 1113 00e6 03FB0C23 		mla	r3, r3, ip, r2
 1114              	.LVL117:
 1115              		.loc 1 342 25 view .LVU313
 1116 00ea 03EB0322 		add	r2, r3, r3, lsl #8
 1117 00ee 03EBC213 		add	r3, r3, r2, lsl #7
 1118 00f2 C3F38463 		ubfx	r3, r3, #26, #5
 1119              		.loc 1 342 21 view .LVU314
 1120 00f6 63F3CF20 		bfi	r0, r3, #11, #5
 343:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                                 LV_UDIV255(two.ch.green * mix + one.ch.green * imix),
 344:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****                                 LV_UDIV255(two.ch.blue * mix  + one.ch.blue * imix));
 345:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     return r;
 1121              		.loc 1 345 5 is_stmt 1 view .LVU315
 1122              	.LVL118:
 1123              	.L73:
 1124              	.LVL119:
 346:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** }
 1125              		.loc 1 346 1 is_stmt 0 view .LVU316
 1126 00fa BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1127              		.loc 1 346 1 view .LVU317
 1128              		.cfi_endproc
 1129              	.LFE68:
 1131              		.section	.text.lv_gradient_get,"ax",%progbits
 1132              		.align	1
 1133              		.global	lv_gradient_get
 1134              		.syntax unified
 1135              		.thumb
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 36


 1136              		.thumb_func
 1138              	lv_gradient_get:
 1139              	.LVL120:
 1140              	.LFB67:
 261:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     /* No gradient, no cache */
 1141              		.loc 1 261 1 is_stmt 1 view -0
 1142              		.cfi_startproc
 1143              		@ args = 0, pretend = 0, frame = 8
 1144              		@ frame_needed = 0, uses_anonymous_args = 0
 263:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 1145              		.loc 1 263 5 view .LVU319
 263:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 1146              		.loc 1 263 15 is_stmt 0 view .LVU320
 1147 0000 437A     		ldrb	r3, [r0, #9]	@ zero_extendqisi2
 263:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 1148              		.loc 1 263 7 view .LVU321
 1149 0002 13F0070F 		tst	r3, #7
 1150 0006 46D0     		beq	.L90
 261:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     /* No gradient, no cache */
 1151              		.loc 1 261 1 view .LVU322
 1152 0008 70B5     		push	{r4, r5, r6, lr}
 1153              	.LCFI12:
 1154              		.cfi_def_cfa_offset 16
 1155              		.cfi_offset 4, -16
 1156              		.cfi_offset 5, -12
 1157              		.cfi_offset 6, -8
 1158              		.cfi_offset 14, -4
 1159 000a 82B0     		sub	sp, sp, #8
 1160              	.LCFI13:
 1161              		.cfi_def_cfa_offset 24
 1162 000c 0546     		mov	r5, r0
 1163 000e 0C46     		mov	r4, r1
 1164 0010 1646     		mov	r6, r2
 266:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(!inited) {
 1165              		.loc 1 266 5 is_stmt 1 view .LVU323
 267:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         lv_gradient_set_cache_size(LV_GRAD_CACHE_DEF_SIZE);
 1166              		.loc 1 267 5 view .LVU324
 267:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         lv_gradient_set_cache_size(LV_GRAD_CACHE_DEF_SIZE);
 1167              		.loc 1 267 8 is_stmt 0 view .LVU325
 1168 0012 224B     		ldr	r3, .L99
 1169 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 267:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         lv_gradient_set_cache_size(LV_GRAD_CACHE_DEF_SIZE);
 1170              		.loc 1 267 7 view .LVU326
 1171 0016 E3B1     		cbz	r3, .L96
 1172              	.LVL121:
 1173              	.L85:
 273:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     uint32_t key = compute_key(g, size, w);
 1174              		.loc 1 273 5 is_stmt 1 view .LVU327
 273:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     uint32_t key = compute_key(g, size, w);
 1175              		.loc 1 273 30 is_stmt 0 view .LVU328
 1176 0018 6B7A     		ldrb	r3, [r5, #9]	@ zero_extendqisi2
 1177 001a 03F00703 		and	r3, r3, #7
 273:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     uint32_t key = compute_key(g, size, w);
 1178              		.loc 1 273 16 view .LVU329
 1179 001e 022B     		cmp	r3, #2
 1180 0020 1ED0     		beq	.L97
 273:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     uint32_t key = compute_key(g, size, w);
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 37


 1181              		.loc 1 273 16 discriminator 2 view .LVU330
 1182 0022 3146     		mov	r1, r6
 1183              	.L86:
 1184              	.LVL122:
 274:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_grad_t * item = NULL;
 1185              		.loc 1 274 5 is_stmt 1 view .LVU331
 274:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_grad_t * item = NULL;
 1186              		.loc 1 274 20 is_stmt 0 view .LVU332
 1187 0024 2246     		mov	r2, r4
 1188 0026 2846     		mov	r0, r5
 1189 0028 FFF7FEFF 		bl	compute_key
 1190              	.LVL123:
 274:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     lv_grad_t * item = NULL;
 1191              		.loc 1 274 14 discriminator 1 view .LVU333
 1192 002c 0190     		str	r0, [sp, #4]
 275:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(iterate_cache(&find_item, &key, &item) == LV_RES_OK) {
 1193              		.loc 1 275 5 is_stmt 1 view .LVU334
 275:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(iterate_cache(&find_item, &key, &item) == LV_RES_OK) {
 1194              		.loc 1 275 17 is_stmt 0 view .LVU335
 1195 002e 0023     		movs	r3, #0
 1196 0030 0093     		str	r3, [sp]
 276:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->life++; /* Don't forget to bump the counter */
 1197              		.loc 1 276 5 is_stmt 1 view .LVU336
 276:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->life++; /* Don't forget to bump the counter */
 1198              		.loc 1 276 8 is_stmt 0 view .LVU337
 1199 0032 6A46     		mov	r2, sp
 1200 0034 01A9     		add	r1, sp, #4
 1201 0036 1A48     		ldr	r0, .L99+4
 1202 0038 FFF7FEFF 		bl	iterate_cache
 1203              	.LVL124:
 276:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->life++; /* Don't forget to bump the counter */
 1204              		.loc 1 276 7 discriminator 1 view .LVU338
 1205 003c 0128     		cmp	r0, #1
 1206 003e 11D0     		beq	.L98
 282:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(item == NULL) {
 1207              		.loc 1 282 5 is_stmt 1 view .LVU339
 282:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(item == NULL) {
 1208              		.loc 1 282 12 is_stmt 0 view .LVU340
 1209 0040 3246     		mov	r2, r6
 1210 0042 2146     		mov	r1, r4
 1211 0044 2846     		mov	r0, r5
 1212 0046 FFF7FEFF 		bl	allocate_item
 1213              	.LVL125:
 282:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(item == NULL) {
 1214              		.loc 1 282 10 discriminator 1 view .LVU341
 1215 004a 0090     		str	r0, [sp]
 283:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         LV_LOG_WARN("Faild to allcoate item for teh gradient");
 1216              		.loc 1 283 5 is_stmt 1 view .LVU342
 283:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         LV_LOG_WARN("Faild to allcoate item for teh gradient");
 1217              		.loc 1 283 7 is_stmt 0 view .LVU343
 1218 004c 08B3     		cbz	r0, .L83
 1219              	.LBB8:
 297:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->map[i] = lv_gradient_calculate(g, item->size, i);
 1220              		.loc 1 297 20 view .LVU344
 1221 004e 0024     		movs	r4, #0
 1222              	.LVL126:
 297:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->map[i] = lv_gradient_calculate(g, item->size, i);
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 38


 1223              		.loc 1 297 20 view .LVU345
 1224 0050 1AE0     		b	.L88
 1225              	.LVL127:
 1226              	.L96:
 297:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->map[i] = lv_gradient_calculate(g, item->size, i);
 1227              		.loc 1 297 20 view .LVU346
 1228              	.LBE8:
 268:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         inited = true;
 1229              		.loc 1 268 9 is_stmt 1 view .LVU347
 1230 0052 0020     		movs	r0, #0
 1231              	.LVL128:
 268:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         inited = true;
 1232              		.loc 1 268 9 is_stmt 0 view .LVU348
 1233 0054 FFF7FEFF 		bl	lv_gradient_set_cache_size
 1234              	.LVL129:
 269:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 1235              		.loc 1 269 9 is_stmt 1 view .LVU349
 269:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 1236              		.loc 1 269 16 is_stmt 0 view .LVU350
 1237 0058 104B     		ldr	r3, .L99
 1238 005a 0122     		movs	r2, #1
 1239 005c 1A70     		strb	r2, [r3]
 1240 005e DBE7     		b	.L85
 1241              	.L97:
 273:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     uint32_t key = compute_key(g, size, w);
 1242              		.loc 1 273 16 discriminator 1 view .LVU351
 1243 0060 2146     		mov	r1, r4
 1244 0062 DFE7     		b	.L86
 1245              	.LVL130:
 1246              	.L98:
 277:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         return item;
 1247              		.loc 1 277 9 is_stmt 1 view .LVU352
 277:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         return item;
 1248              		.loc 1 277 13 is_stmt 0 view .LVU353
 1249 0064 0098     		ldr	r0, [sp]
 1250 0066 4368     		ldr	r3, [r0, #4]
 1251 0068 C3F31D02 		ubfx	r2, r3, #0, #30
 277:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         return item;
 1252              		.loc 1 277 19 view .LVU354
 1253 006c 0132     		adds	r2, r2, #1
 1254 006e 62F31D03 		bfi	r3, r2, #0, #30
 1255 0072 4360     		str	r3, [r0, #4]
 278:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 1256              		.loc 1 278 9 is_stmt 1 view .LVU355
 278:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 1257              		.loc 1 278 16 is_stmt 0 view .LVU356
 1258 0074 0DE0     		b	.L83
 1259              	.LVL131:
 1260              	.L89:
 1261              	.LBB9:
 298:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 1262              		.loc 1 298 9 is_stmt 1 view .LVU357
 298:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 1263              		.loc 1 298 13 is_stmt 0 view .LVU358
 1264 0076 8668     		ldr	r6, [r0, #8]
 298:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 1265              		.loc 1 298 24 view .LVU359
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 39


 1266 0078 2246     		mov	r2, r4
 1267 007a 2846     		mov	r0, r5
 1268 007c FFF7FEFF 		bl	lv_gradient_calculate
 1269              	.LVL132:
 1270 0080 26F81400 		strh	r0, [r6, r4, lsl #1]	@ movhi
 297:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->map[i] = lv_gradient_calculate(g, item->size, i);
 1271              		.loc 1 297 44 is_stmt 1 discriminator 3 view .LVU360
 1272 0084 0134     		adds	r4, r4, #1
 1273              	.LVL133:
 297:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->map[i] = lv_gradient_calculate(g, item->size, i);
 1274              		.loc 1 297 44 is_stmt 0 discriminator 3 view .LVU361
 1275 0086 24B2     		sxth	r4, r4
 1276              	.LVL134:
 1277              	.L88:
 297:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->map[i] = lv_gradient_calculate(g, item->size, i);
 1278              		.loc 1 297 29 is_stmt 1 discriminator 1 view .LVU362
 297:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->map[i] = lv_gradient_calculate(g, item->size, i);
 1279              		.loc 1 297 35 is_stmt 0 discriminator 1 view .LVU363
 1280 0088 0098     		ldr	r0, [sp]
 1281 008a B0F90E10 		ldrsh	r1, [r0, #14]
 297:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->map[i] = lv_gradient_calculate(g, item->size, i);
 1282              		.loc 1 297 29 discriminator 1 view .LVU364
 1283 008e A142     		cmp	r1, r4
 1284 0090 F1DC     		bgt	.L89
 1285              	.LVL135:
 1286              	.L83:
 297:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         item->map[i] = lv_gradient_calculate(g, item->size, i);
 1287              		.loc 1 297 29 discriminator 1 view .LVU365
 1288              	.LBE9:
 303:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 1289              		.loc 1 303 1 view .LVU366
 1290 0092 02B0     		add	sp, sp, #8
 1291              	.LCFI14:
 1292              		.cfi_def_cfa_offset 16
 1293              		@ sp needed
 1294 0094 70BD     		pop	{r4, r5, r6, pc}
 1295              	.LVL136:
 1296              	.L90:
 1297              	.LCFI15:
 1298              		.cfi_def_cfa_offset 0
 1299              		.cfi_restore 4
 1300              		.cfi_restore 5
 1301              		.cfi_restore 6
 1302              		.cfi_restore 14
 263:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 1303              		.loc 1 263 43 discriminator 1 view .LVU367
 1304 0096 0020     		movs	r0, #0
 1305              	.LVL137:
 303:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 1306              		.loc 1 303 1 view .LVU368
 1307 0098 7047     		bx	lr
 1308              	.L100:
 1309 009a 00BF     		.align	2
 1310              	.L99:
 1311 009c 00000000 		.word	inited.0
 1312 00a0 00000000 		.word	find_item
 1313              		.cfi_endproc
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 40


 1314              	.LFE67:
 1316              		.section	.text.lv_gradient_cleanup,"ax",%progbits
 1317              		.align	1
 1318              		.global	lv_gradient_cleanup
 1319              		.syntax unified
 1320              		.thumb
 1321              		.thumb_func
 1323              	lv_gradient_cleanup:
 1324              	.LVL138:
 1325              	.LFB69:
 347:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** 
 348:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** void lv_gradient_cleanup(lv_grad_t * grad)
 349:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** {
 1326              		.loc 1 349 1 is_stmt 1 view -0
 1327              		.cfi_startproc
 1328              		@ args = 0, pretend = 0, frame = 0
 1329              		@ frame_needed = 0, uses_anonymous_args = 0
 1330              		.loc 1 349 1 is_stmt 0 view .LVU370
 1331 0000 08B5     		push	{r3, lr}
 1332              	.LCFI16:
 1333              		.cfi_def_cfa_offset 8
 1334              		.cfi_offset 3, -8
 1335              		.cfi_offset 14, -4
 350:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     if(grad->not_cached) {
 1336              		.loc 1 350 5 is_stmt 1 view .LVU371
 1337              		.loc 1 350 7 is_stmt 0 view .LVU372
 1338 0002 90F90730 		ldrsb	r3, [r0, #7]
 1339 0006 002B     		cmp	r3, #0
 1340 0008 00DB     		blt	.L104
 1341              	.LVL139:
 1342              	.L101:
 351:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         lv_mem_free(grad);
 352:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****     }
 353:lvgl/src/draw/sw/lv_draw_sw_gradient.c **** }
 1343              		.loc 1 353 1 view .LVU373
 1344 000a 08BD     		pop	{r3, pc}
 1345              	.LVL140:
 1346              	.L104:
 351:lvgl/src/draw/sw/lv_draw_sw_gradient.c ****         lv_mem_free(grad);
 1347              		.loc 1 351 9 is_stmt 1 view .LVU374
 1348 000c FFF7FEFF 		bl	lv_mem_free
 1349              	.LVL141:
 1350              		.loc 1 353 1 is_stmt 0 view .LVU375
 1351 0010 FBE7     		b	.L101
 1352              		.cfi_endproc
 1353              	.LFE69:
 1355              		.section	.bss.inited.0,"aw",%nobits
 1358              	inited.0:
 1359 0000 00       		.space	1
 1360              		.section	.bss.grad_cache_end,"aw",%nobits
 1361              		.align	2
 1364              	grad_cache_end:
 1365 0000 00000000 		.space	4
 1366              		.section	.bss.grad_cache_size,"aw",%nobits
 1367              		.align	2
 1370              	grad_cache_size:
 1371 0000 00000000 		.space	4
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 41


 1372              		.text
 1373              	.Letext0:
 1374              		.file 3 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 1375              		.file 4 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 1376              		.file 5 "lvgl/src/draw/sw/../../misc/lv_types.h"
 1377              		.file 6 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/lib/gcc/arm-none
 1378              		.file 7 "lvgl/src/draw/sw/../../misc/../font/../misc/lv_area.h"
 1379              		.file 8 "lvgl/src/draw/sw/../../misc/lv_style.h"
 1380              		.file 9 "lvgl/src/draw/sw/lv_draw_sw_gradient.h"
 1381              		.file 10 "lvgl/src/draw/sw/../../misc/lv_mem.h"
 1382              		.file 11 "lvgl/src/draw/sw/../../misc/lv_gc.h"
ARM GAS  C:\usertemp\ccS7pJGJ.s 			page 42


DEFINED SYMBOLS
                            *ABS*:00000000 lv_draw_sw_gradient.c
C:\usertemp\ccS7pJGJ.s:20     .text.lv_color_to32:00000000 $t
C:\usertemp\ccS7pJGJ.s:25     .text.lv_color_to32:00000000 lv_color_to32
C:\usertemp\ccS7pJGJ.s:71     .text.compute_key:00000000 $t
C:\usertemp\ccS7pJGJ.s:76     .text.compute_key:00000000 compute_key
C:\usertemp\ccS7pJGJ.s:97     .text.get_cache_item_size:00000000 $t
C:\usertemp\ccS7pJGJ.s:102    .text.get_cache_item_size:00000000 get_cache_item_size
C:\usertemp\ccS7pJGJ.s:129    .text.next_in_cache:00000000 $t
C:\usertemp\ccS7pJGJ.s:134    .text.next_in_cache:00000000 next_in_cache
C:\usertemp\ccS7pJGJ.s:204    .text.next_in_cache:0000002c $d
C:\usertemp\ccS7pJGJ.s:1370   .bss.grad_cache_size:00000000 grad_cache_size
C:\usertemp\ccS7pJGJ.s:1364   .bss.grad_cache_end:00000000 grad_cache_end
C:\usertemp\ccS7pJGJ.s:211    .text.iterate_cache:00000000 $t
C:\usertemp\ccS7pJGJ.s:216    .text.iterate_cache:00000000 iterate_cache
C:\usertemp\ccS7pJGJ.s:304    .text.find_oldest_item_life:00000000 $t
C:\usertemp\ccS7pJGJ.s:309    .text.find_oldest_item_life:00000000 find_oldest_item_life
C:\usertemp\ccS7pJGJ.s:341    .text.find_item:00000000 $t
C:\usertemp\ccS7pJGJ.s:346    .text.find_item:00000000 find_item
C:\usertemp\ccS7pJGJ.s:379    .text.allocate_item:00000000 $t
C:\usertemp\ccS7pJGJ.s:384    .text.allocate_item:00000000 allocate_item
C:\usertemp\ccS7pJGJ.s:623    .text.allocate_item:00000104 $d
C:\usertemp\ccS7pJGJ.s:743    .text.kill_oldest_item:00000000 kill_oldest_item
C:\usertemp\ccS7pJGJ.s:632    .text.free_item:00000000 $t
C:\usertemp\ccS7pJGJ.s:637    .text.free_item:00000000 free_item
C:\usertemp\ccS7pJGJ.s:733    .text.free_item:00000050 $d
C:\usertemp\ccS7pJGJ.s:738    .text.kill_oldest_item:00000000 $t
C:\usertemp\ccS7pJGJ.s:786    .text.lv_gradient_free_cache:00000000 $t
C:\usertemp\ccS7pJGJ.s:792    .text.lv_gradient_free_cache:00000000 lv_gradient_free_cache
C:\usertemp\ccS7pJGJ.s:824    .text.lv_gradient_free_cache:00000018 $d
C:\usertemp\ccS7pJGJ.s:831    .text.lv_gradient_set_cache_size:00000000 $t
C:\usertemp\ccS7pJGJ.s:837    .text.lv_gradient_set_cache_size:00000000 lv_gradient_set_cache_size
C:\usertemp\ccS7pJGJ.s:896    .text.lv_gradient_set_cache_size:00000028 $d
C:\usertemp\ccS7pJGJ.s:903    .text.lv_gradient_calculate:00000000 $t
C:\usertemp\ccS7pJGJ.s:909    .text.lv_gradient_calculate:00000000 lv_gradient_calculate
C:\usertemp\ccS7pJGJ.s:1132   .text.lv_gradient_get:00000000 $t
C:\usertemp\ccS7pJGJ.s:1138   .text.lv_gradient_get:00000000 lv_gradient_get
C:\usertemp\ccS7pJGJ.s:1311   .text.lv_gradient_get:0000009c $d
C:\usertemp\ccS7pJGJ.s:1358   .bss.inited.0:00000000 inited.0
C:\usertemp\ccS7pJGJ.s:1317   .text.lv_gradient_cleanup:00000000 $t
C:\usertemp\ccS7pJGJ.s:1323   .text.lv_gradient_cleanup:00000000 lv_gradient_cleanup
C:\usertemp\ccS7pJGJ.s:1359   .bss.inited.0:00000000 $d
C:\usertemp\ccS7pJGJ.s:1361   .bss.grad_cache_end:00000000 $d
C:\usertemp\ccS7pJGJ.s:1367   .bss.grad_cache_size:00000000 $d

UNDEFINED SYMBOLS
_lv_grad_cache_mem
lv_mem_alloc
lv_memcpy
lv_memset_00
lv_mem_free
