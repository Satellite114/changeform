ARM GAS  C:\usertemp\cc28nhP0.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_indev_scroll.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "lvgl/src/core/lv_indev_scroll.c"
  19              		.section	.text.scroll_limit_diff,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	scroll_limit_diff:
  26              	.LVL0:
  27              	.LFB164:
   1:lvgl/src/core/lv_indev_scroll.c **** /**
   2:lvgl/src/core/lv_indev_scroll.c ****  * @file lv_indev_scroll.c
   3:lvgl/src/core/lv_indev_scroll.c ****  *
   4:lvgl/src/core/lv_indev_scroll.c ****  */
   5:lvgl/src/core/lv_indev_scroll.c **** 
   6:lvgl/src/core/lv_indev_scroll.c **** /*********************
   7:lvgl/src/core/lv_indev_scroll.c ****  *      INCLUDES
   8:lvgl/src/core/lv_indev_scroll.c ****  *********************/
   9:lvgl/src/core/lv_indev_scroll.c **** #include "lv_indev.h"
  10:lvgl/src/core/lv_indev_scroll.c **** #include "lv_indev_scroll.h"
  11:lvgl/src/core/lv_indev_scroll.c **** 
  12:lvgl/src/core/lv_indev_scroll.c **** /*********************
  13:lvgl/src/core/lv_indev_scroll.c ****  *      DEFINES
  14:lvgl/src/core/lv_indev_scroll.c ****  *********************/
  15:lvgl/src/core/lv_indev_scroll.c **** #define ELASTIC_SLOWNESS_FACTOR 4   /*Scrolling on elastic parts are slower by this factor*/
  16:lvgl/src/core/lv_indev_scroll.c **** 
  17:lvgl/src/core/lv_indev_scroll.c **** /**********************
  18:lvgl/src/core/lv_indev_scroll.c ****  *      TYPEDEFS
  19:lvgl/src/core/lv_indev_scroll.c ****  **********************/
  20:lvgl/src/core/lv_indev_scroll.c **** 
  21:lvgl/src/core/lv_indev_scroll.c **** /**********************
  22:lvgl/src/core/lv_indev_scroll.c ****  *  STATIC PROTOTYPES
  23:lvgl/src/core/lv_indev_scroll.c ****  **********************/
  24:lvgl/src/core/lv_indev_scroll.c **** static lv_obj_t * find_scroll_obj(_lv_indev_proc_t * proc);
  25:lvgl/src/core/lv_indev_scroll.c **** static void init_scroll_limits(_lv_indev_proc_t * proc);
  26:lvgl/src/core/lv_indev_scroll.c **** static lv_coord_t find_snap_point_x(const lv_obj_t * obj, lv_coord_t min, lv_coord_t max, lv_coord_
  27:lvgl/src/core/lv_indev_scroll.c **** static lv_coord_t find_snap_point_y(const lv_obj_t * obj, lv_coord_t min, lv_coord_t max, lv_coord_
  28:lvgl/src/core/lv_indev_scroll.c **** static void scroll_limit_diff(_lv_indev_proc_t * proc, lv_coord_t * diff_x, lv_coord_t * diff_y);
  29:lvgl/src/core/lv_indev_scroll.c **** static lv_coord_t scroll_throw_predict_y(_lv_indev_proc_t * proc);
  30:lvgl/src/core/lv_indev_scroll.c **** static lv_coord_t scroll_throw_predict_x(_lv_indev_proc_t * proc);
  31:lvgl/src/core/lv_indev_scroll.c **** static lv_coord_t elastic_diff(lv_obj_t * scroll_obj, lv_coord_t diff, lv_coord_t scroll_start, lv_
ARM GAS  C:\usertemp\cc28nhP0.s 			page 2


  32:lvgl/src/core/lv_indev_scroll.c ****                                lv_dir_t dir);
  33:lvgl/src/core/lv_indev_scroll.c **** 
  34:lvgl/src/core/lv_indev_scroll.c **** /**********************
  35:lvgl/src/core/lv_indev_scroll.c ****  *  STATIC VARIABLES
  36:lvgl/src/core/lv_indev_scroll.c ****  **********************/
  37:lvgl/src/core/lv_indev_scroll.c **** 
  38:lvgl/src/core/lv_indev_scroll.c **** /**********************
  39:lvgl/src/core/lv_indev_scroll.c ****  *      MACROS
  40:lvgl/src/core/lv_indev_scroll.c ****  **********************/
  41:lvgl/src/core/lv_indev_scroll.c **** 
  42:lvgl/src/core/lv_indev_scroll.c **** /**********************
  43:lvgl/src/core/lv_indev_scroll.c ****  *   GLOBAL FUNCTIONS
  44:lvgl/src/core/lv_indev_scroll.c ****  **********************/
  45:lvgl/src/core/lv_indev_scroll.c **** 
  46:lvgl/src/core/lv_indev_scroll.c **** void _lv_indev_scroll_handler(_lv_indev_proc_t * proc)
  47:lvgl/src/core/lv_indev_scroll.c **** {
  48:lvgl/src/core/lv_indev_scroll.c ****     lv_obj_t * scroll_obj = proc->types.pointer.scroll_obj;
  49:lvgl/src/core/lv_indev_scroll.c ****     /*If there is no scroll object yet try to find one*/
  50:lvgl/src/core/lv_indev_scroll.c ****     if(scroll_obj == NULL) {
  51:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_sum.x += proc->types.pointer.vect.x;
  52:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_sum.y += proc->types.pointer.vect.y;
  53:lvgl/src/core/lv_indev_scroll.c **** 
  54:lvgl/src/core/lv_indev_scroll.c ****         scroll_obj = find_scroll_obj(proc);
  55:lvgl/src/core/lv_indev_scroll.c ****         if(scroll_obj == NULL) return;
  56:lvgl/src/core/lv_indev_scroll.c **** 
  57:lvgl/src/core/lv_indev_scroll.c ****         init_scroll_limits(proc);
  58:lvgl/src/core/lv_indev_scroll.c **** 
  59:lvgl/src/core/lv_indev_scroll.c ****         lv_event_send(scroll_obj, LV_EVENT_SCROLL_BEGIN, NULL);
  60:lvgl/src/core/lv_indev_scroll.c ****         if(proc->reset_query) return;
  61:lvgl/src/core/lv_indev_scroll.c ****     }
  62:lvgl/src/core/lv_indev_scroll.c **** 
  63:lvgl/src/core/lv_indev_scroll.c ****     /*Set new position or scroll if the vector is not zero*/
  64:lvgl/src/core/lv_indev_scroll.c ****     if(proc->types.pointer.vect.x != 0 || proc->types.pointer.vect.y != 0) {
  65:lvgl/src/core/lv_indev_scroll.c ****         lv_coord_t diff_x = 0;
  66:lvgl/src/core/lv_indev_scroll.c ****         lv_coord_t diff_y = 0;
  67:lvgl/src/core/lv_indev_scroll.c **** 
  68:lvgl/src/core/lv_indev_scroll.c ****         if(proc->types.pointer.scroll_dir == LV_DIR_HOR) {
  69:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t sr = lv_obj_get_scroll_right(scroll_obj);
  70:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t sl = lv_obj_get_scroll_left(scroll_obj);
  71:lvgl/src/core/lv_indev_scroll.c ****             diff_x = elastic_diff(scroll_obj, proc->types.pointer.vect.x, sl, sr, LV_DIR_HOR);
  72:lvgl/src/core/lv_indev_scroll.c ****         }
  73:lvgl/src/core/lv_indev_scroll.c ****         else {
  74:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t st = lv_obj_get_scroll_top(scroll_obj);
  75:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t sb = lv_obj_get_scroll_bottom(scroll_obj);
  76:lvgl/src/core/lv_indev_scroll.c ****             diff_y = elastic_diff(scroll_obj, proc->types.pointer.vect.y, st, sb, LV_DIR_VER);
  77:lvgl/src/core/lv_indev_scroll.c ****         }
  78:lvgl/src/core/lv_indev_scroll.c **** 
  79:lvgl/src/core/lv_indev_scroll.c ****         lv_dir_t scroll_dir = lv_obj_get_scroll_dir(scroll_obj);
  80:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_LEFT)   == 0 && diff_x > 0) diff_x = 0;
  81:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_RIGHT)  == 0 && diff_x < 0) diff_x = 0;
  82:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_TOP)    == 0 && diff_y > 0) diff_y = 0;
  83:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_BOTTOM) == 0 && diff_y < 0) diff_y = 0;
  84:lvgl/src/core/lv_indev_scroll.c **** 
  85:lvgl/src/core/lv_indev_scroll.c ****         /*Respect the scroll limit area*/
  86:lvgl/src/core/lv_indev_scroll.c ****         scroll_limit_diff(proc, &diff_x, &diff_y);
  87:lvgl/src/core/lv_indev_scroll.c **** 
  88:lvgl/src/core/lv_indev_scroll.c ****         lv_obj_scroll_by(scroll_obj, diff_x, diff_y, LV_ANIM_OFF);
ARM GAS  C:\usertemp\cc28nhP0.s 			page 3


  89:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_sum.x += diff_x;
  90:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_sum.y += diff_y;
  91:lvgl/src/core/lv_indev_scroll.c ****     }
  92:lvgl/src/core/lv_indev_scroll.c **** }
  93:lvgl/src/core/lv_indev_scroll.c **** 
  94:lvgl/src/core/lv_indev_scroll.c **** 
  95:lvgl/src/core/lv_indev_scroll.c **** void _lv_indev_scroll_throw_handler(_lv_indev_proc_t * proc)
  96:lvgl/src/core/lv_indev_scroll.c **** {
  97:lvgl/src/core/lv_indev_scroll.c ****     lv_obj_t * scroll_obj = proc->types.pointer.scroll_obj;
  98:lvgl/src/core/lv_indev_scroll.c ****     if(scroll_obj == NULL) return;
  99:lvgl/src/core/lv_indev_scroll.c ****     if(proc->types.pointer.scroll_dir == LV_DIR_NONE) return;
 100:lvgl/src/core/lv_indev_scroll.c **** 
 101:lvgl/src/core/lv_indev_scroll.c **** 
 102:lvgl/src/core/lv_indev_scroll.c ****     lv_indev_t * indev_act = lv_indev_get_act();
 103:lvgl/src/core/lv_indev_scroll.c ****     lv_coord_t scroll_throw = indev_act->driver->scroll_throw;
 104:lvgl/src/core/lv_indev_scroll.c **** 
 105:lvgl/src/core/lv_indev_scroll.c ****     if(lv_obj_has_flag(scroll_obj, LV_OBJ_FLAG_SCROLL_MOMENTUM) == false) {
 106:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_throw_vect.y = 0;
 107:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_throw_vect.x = 0;
 108:lvgl/src/core/lv_indev_scroll.c ****     }
 109:lvgl/src/core/lv_indev_scroll.c **** 
 110:lvgl/src/core/lv_indev_scroll.c ****     lv_scroll_snap_t align_x = lv_obj_get_scroll_snap_x(scroll_obj);
 111:lvgl/src/core/lv_indev_scroll.c ****     lv_scroll_snap_t align_y = lv_obj_get_scroll_snap_y(scroll_obj);
 112:lvgl/src/core/lv_indev_scroll.c **** 
 113:lvgl/src/core/lv_indev_scroll.c ****     if(proc->types.pointer.scroll_dir == LV_DIR_VER) {
 114:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_throw_vect.x = 0;
 115:lvgl/src/core/lv_indev_scroll.c ****         /*If no snapping "throw"*/
 116:lvgl/src/core/lv_indev_scroll.c ****         if(align_y == LV_SCROLL_SNAP_NONE) {
 117:lvgl/src/core/lv_indev_scroll.c ****             proc->types.pointer.scroll_throw_vect.y =
 118:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_throw_vect.y * (100 - scroll_throw) / 100;
 119:lvgl/src/core/lv_indev_scroll.c **** 
 120:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t sb = lv_obj_get_scroll_bottom(scroll_obj);
 121:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t st = lv_obj_get_scroll_top(scroll_obj);
 122:lvgl/src/core/lv_indev_scroll.c **** 
 123:lvgl/src/core/lv_indev_scroll.c ****             proc->types.pointer.scroll_throw_vect.y = elastic_diff(scroll_obj, proc->types.pointer.
 124:lvgl/src/core/lv_indev_scroll.c ****                                                                    LV_DIR_VER);
 125:lvgl/src/core/lv_indev_scroll.c **** 
 126:lvgl/src/core/lv_indev_scroll.c ****             lv_obj_scroll_by(scroll_obj, 0, proc->types.pointer.scroll_throw_vect.y, LV_ANIM_OFF);
 127:lvgl/src/core/lv_indev_scroll.c ****         }
 128:lvgl/src/core/lv_indev_scroll.c ****         /*With snapping find the nearest snap point and scroll there*/
 129:lvgl/src/core/lv_indev_scroll.c ****         else {
 130:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t diff_y = scroll_throw_predict_y(proc);
 131:lvgl/src/core/lv_indev_scroll.c ****             proc->types.pointer.scroll_throw_vect.y = 0;
 132:lvgl/src/core/lv_indev_scroll.c ****             scroll_limit_diff(proc, NULL, &diff_y);
 133:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t y = find_snap_point_y(scroll_obj, LV_COORD_MIN, LV_COORD_MAX, diff_y);
 134:lvgl/src/core/lv_indev_scroll.c ****             lv_obj_scroll_by(scroll_obj, 0, diff_y + y, LV_ANIM_ON);
 135:lvgl/src/core/lv_indev_scroll.c ****         }
 136:lvgl/src/core/lv_indev_scroll.c ****     }
 137:lvgl/src/core/lv_indev_scroll.c ****     else if(proc->types.pointer.scroll_dir == LV_DIR_HOR) {
 138:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_throw_vect.y = 0;
 139:lvgl/src/core/lv_indev_scroll.c ****         /*If no snapping "throw"*/
 140:lvgl/src/core/lv_indev_scroll.c ****         if(align_x == LV_SCROLL_SNAP_NONE) {
 141:lvgl/src/core/lv_indev_scroll.c ****             proc->types.pointer.scroll_throw_vect.x =
 142:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_throw_vect.x * (100 - scroll_throw) / 100;
 143:lvgl/src/core/lv_indev_scroll.c **** 
 144:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t sl = lv_obj_get_scroll_left(scroll_obj);
 145:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t sr = lv_obj_get_scroll_right(scroll_obj);
ARM GAS  C:\usertemp\cc28nhP0.s 			page 4


 146:lvgl/src/core/lv_indev_scroll.c **** 
 147:lvgl/src/core/lv_indev_scroll.c ****             proc->types.pointer.scroll_throw_vect.x = elastic_diff(scroll_obj, proc->types.pointer.
 148:lvgl/src/core/lv_indev_scroll.c ****                                                                    LV_DIR_HOR);
 149:lvgl/src/core/lv_indev_scroll.c **** 
 150:lvgl/src/core/lv_indev_scroll.c ****             lv_obj_scroll_by(scroll_obj, proc->types.pointer.scroll_throw_vect.x, 0, LV_ANIM_OFF);
 151:lvgl/src/core/lv_indev_scroll.c ****         }
 152:lvgl/src/core/lv_indev_scroll.c ****         /*With snapping find the nearest snap point and scroll there*/
 153:lvgl/src/core/lv_indev_scroll.c ****         else {
 154:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t diff_x = scroll_throw_predict_x(proc);
 155:lvgl/src/core/lv_indev_scroll.c ****             proc->types.pointer.scroll_throw_vect.x = 0;
 156:lvgl/src/core/lv_indev_scroll.c ****             scroll_limit_diff(proc, &diff_x, NULL);
 157:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t x = find_snap_point_x(scroll_obj, LV_COORD_MIN, LV_COORD_MAX, diff_x);
 158:lvgl/src/core/lv_indev_scroll.c ****             lv_obj_scroll_by(scroll_obj, x + diff_x, 0, LV_ANIM_ON);
 159:lvgl/src/core/lv_indev_scroll.c ****         }
 160:lvgl/src/core/lv_indev_scroll.c ****     }
 161:lvgl/src/core/lv_indev_scroll.c **** 
 162:lvgl/src/core/lv_indev_scroll.c ****     /*Check if the scroll has finished*/
 163:lvgl/src/core/lv_indev_scroll.c ****     if(proc->types.pointer.scroll_throw_vect.x == 0 && proc->types.pointer.scroll_throw_vect.y == 0
 164:lvgl/src/core/lv_indev_scroll.c ****         /*Revert if scrolled in*/
 165:lvgl/src/core/lv_indev_scroll.c ****         /*If vertically scrollable and not controlled by snap*/
 166:lvgl/src/core/lv_indev_scroll.c ****         if(align_y == LV_SCROLL_SNAP_NONE) {
 167:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t st = lv_obj_get_scroll_top(scroll_obj);
 168:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t sb = lv_obj_get_scroll_bottom(scroll_obj);
 169:lvgl/src/core/lv_indev_scroll.c ****             if(st > 0 || sb > 0) {
 170:lvgl/src/core/lv_indev_scroll.c ****                 if(st < 0) {
 171:lvgl/src/core/lv_indev_scroll.c ****                     lv_obj_scroll_by(scroll_obj, 0, st, LV_ANIM_ON);
 172:lvgl/src/core/lv_indev_scroll.c ****                 }
 173:lvgl/src/core/lv_indev_scroll.c ****                 else if(sb < 0) {
 174:lvgl/src/core/lv_indev_scroll.c ****                     lv_obj_scroll_by(scroll_obj, 0, -sb, LV_ANIM_ON);
 175:lvgl/src/core/lv_indev_scroll.c ****                 }
 176:lvgl/src/core/lv_indev_scroll.c ****             }
 177:lvgl/src/core/lv_indev_scroll.c ****         }
 178:lvgl/src/core/lv_indev_scroll.c **** 
 179:lvgl/src/core/lv_indev_scroll.c ****         /*If horizontally scrollable and not controlled by snap*/
 180:lvgl/src/core/lv_indev_scroll.c ****         if(align_x == LV_SCROLL_SNAP_NONE) {
 181:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t sl = lv_obj_get_scroll_left(scroll_obj);
 182:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t sr = lv_obj_get_scroll_right(scroll_obj);
 183:lvgl/src/core/lv_indev_scroll.c ****             if(sl > 0 || sr > 0) {
 184:lvgl/src/core/lv_indev_scroll.c ****                 if(sl < 0) {
 185:lvgl/src/core/lv_indev_scroll.c ****                     lv_obj_scroll_by(scroll_obj, sl, 0, LV_ANIM_ON);
 186:lvgl/src/core/lv_indev_scroll.c ****                 }
 187:lvgl/src/core/lv_indev_scroll.c ****                 else if(sr < 0) {
 188:lvgl/src/core/lv_indev_scroll.c ****                     lv_obj_scroll_by(scroll_obj, -sr, 0, LV_ANIM_ON);
 189:lvgl/src/core/lv_indev_scroll.c ****                 }
 190:lvgl/src/core/lv_indev_scroll.c ****             }
 191:lvgl/src/core/lv_indev_scroll.c ****         }
 192:lvgl/src/core/lv_indev_scroll.c **** 
 193:lvgl/src/core/lv_indev_scroll.c ****         lv_event_send(scroll_obj, LV_EVENT_SCROLL_END, indev_act);
 194:lvgl/src/core/lv_indev_scroll.c ****         if(proc->reset_query) return;
 195:lvgl/src/core/lv_indev_scroll.c **** 
 196:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_dir = LV_DIR_NONE;
 197:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_obj = NULL;
 198:lvgl/src/core/lv_indev_scroll.c ****     }
 199:lvgl/src/core/lv_indev_scroll.c **** }
 200:lvgl/src/core/lv_indev_scroll.c **** 
 201:lvgl/src/core/lv_indev_scroll.c **** /**
 202:lvgl/src/core/lv_indev_scroll.c ****  * Predict where would a scroll throw end
ARM GAS  C:\usertemp\cc28nhP0.s 			page 5


 203:lvgl/src/core/lv_indev_scroll.c ****  * @param indev pointer to an input device
 204:lvgl/src/core/lv_indev_scroll.c ****  * @param dir `LV_DIR_VER` or `LV_DIR_HOR`
 205:lvgl/src/core/lv_indev_scroll.c ****  * @return the difference compared to the current position when the throw would be finished
 206:lvgl/src/core/lv_indev_scroll.c ****  */
 207:lvgl/src/core/lv_indev_scroll.c **** lv_coord_t lv_indev_scroll_throw_predict(lv_indev_t * indev, lv_dir_t dir)
 208:lvgl/src/core/lv_indev_scroll.c **** {
 209:lvgl/src/core/lv_indev_scroll.c ****     if(indev == NULL) return 0;
 210:lvgl/src/core/lv_indev_scroll.c ****     lv_coord_t v;
 211:lvgl/src/core/lv_indev_scroll.c ****     switch(dir) {
 212:lvgl/src/core/lv_indev_scroll.c ****         case LV_DIR_VER:
 213:lvgl/src/core/lv_indev_scroll.c ****             v = indev->proc.types.pointer.scroll_throw_vect_ori.y;
 214:lvgl/src/core/lv_indev_scroll.c ****             break;
 215:lvgl/src/core/lv_indev_scroll.c ****         case LV_DIR_HOR:
 216:lvgl/src/core/lv_indev_scroll.c ****             v = indev->proc.types.pointer.scroll_throw_vect_ori.x;
 217:lvgl/src/core/lv_indev_scroll.c ****             break;
 218:lvgl/src/core/lv_indev_scroll.c ****         default:
 219:lvgl/src/core/lv_indev_scroll.c ****             return 0;
 220:lvgl/src/core/lv_indev_scroll.c ****     }
 221:lvgl/src/core/lv_indev_scroll.c **** 
 222:lvgl/src/core/lv_indev_scroll.c ****     lv_coord_t scroll_throw = indev->driver->scroll_throw;
 223:lvgl/src/core/lv_indev_scroll.c ****     lv_coord_t sum = 0;
 224:lvgl/src/core/lv_indev_scroll.c ****     while(v) {
 225:lvgl/src/core/lv_indev_scroll.c ****         sum += v;
 226:lvgl/src/core/lv_indev_scroll.c ****         v = v * (100 - scroll_throw) / 100;
 227:lvgl/src/core/lv_indev_scroll.c ****     }
 228:lvgl/src/core/lv_indev_scroll.c **** 
 229:lvgl/src/core/lv_indev_scroll.c ****     return sum;
 230:lvgl/src/core/lv_indev_scroll.c **** }
 231:lvgl/src/core/lv_indev_scroll.c **** 
 232:lvgl/src/core/lv_indev_scroll.c **** void lv_indev_scroll_get_snap_dist(lv_obj_t * obj, lv_point_t * p)
 233:lvgl/src/core/lv_indev_scroll.c **** {
 234:lvgl/src/core/lv_indev_scroll.c ****     p->x = find_snap_point_x(obj, obj->coords.x1, obj->coords.x2, 0);
 235:lvgl/src/core/lv_indev_scroll.c ****     p->y = find_snap_point_y(obj, obj->coords.y1, obj->coords.y2, 0);
 236:lvgl/src/core/lv_indev_scroll.c **** }
 237:lvgl/src/core/lv_indev_scroll.c **** 
 238:lvgl/src/core/lv_indev_scroll.c **** /**********************
 239:lvgl/src/core/lv_indev_scroll.c ****  *   STATIC FUNCTIONS
 240:lvgl/src/core/lv_indev_scroll.c ****  **********************/
 241:lvgl/src/core/lv_indev_scroll.c **** 
 242:lvgl/src/core/lv_indev_scroll.c **** static lv_obj_t * find_scroll_obj(_lv_indev_proc_t * proc)
 243:lvgl/src/core/lv_indev_scroll.c **** {
 244:lvgl/src/core/lv_indev_scroll.c ****     lv_obj_t * obj_candidate = NULL;
 245:lvgl/src/core/lv_indev_scroll.c ****     lv_dir_t dir_candidate = LV_DIR_NONE;
 246:lvgl/src/core/lv_indev_scroll.c ****     lv_indev_t * indev_act = lv_indev_get_act();
 247:lvgl/src/core/lv_indev_scroll.c ****     lv_coord_t scroll_limit = indev_act->driver->scroll_limit;
 248:lvgl/src/core/lv_indev_scroll.c **** 
 249:lvgl/src/core/lv_indev_scroll.c ****     /*Go until find a scrollable object in the current direction
 250:lvgl/src/core/lv_indev_scroll.c ****      *More precisely:
 251:lvgl/src/core/lv_indev_scroll.c ****      * 1. Check the pressed object and all of its ancestors and try to find an object which is scro
 252:lvgl/src/core/lv_indev_scroll.c ****      * 2. Scrollable means it has some content out of its area
 253:lvgl/src/core/lv_indev_scroll.c ****      * 3. If an object can be scrolled into the current direction then use it ("real match"")
 254:lvgl/src/core/lv_indev_scroll.c ****      * 4. If can be scrolled on the current axis (hor/ver) save it as candidate (at least show an e
 255:lvgl/src/core/lv_indev_scroll.c ****      * 5. Use the last candidate. Always the "deepest" parent or the object from point 3*/
 256:lvgl/src/core/lv_indev_scroll.c ****     lv_obj_t * obj_act = proc->types.pointer.act_obj;
 257:lvgl/src/core/lv_indev_scroll.c **** 
 258:lvgl/src/core/lv_indev_scroll.c ****     /*Decide if it's a horizontal or vertical scroll*/
 259:lvgl/src/core/lv_indev_scroll.c ****     bool hor_en = false;
ARM GAS  C:\usertemp\cc28nhP0.s 			page 6


 260:lvgl/src/core/lv_indev_scroll.c ****     bool ver_en = false;
 261:lvgl/src/core/lv_indev_scroll.c ****     if(LV_ABS(proc->types.pointer.scroll_sum.x) > LV_ABS(proc->types.pointer.scroll_sum.y)) {
 262:lvgl/src/core/lv_indev_scroll.c ****         hor_en = true;
 263:lvgl/src/core/lv_indev_scroll.c ****     }
 264:lvgl/src/core/lv_indev_scroll.c ****     else {
 265:lvgl/src/core/lv_indev_scroll.c ****         ver_en = true;
 266:lvgl/src/core/lv_indev_scroll.c ****     }
 267:lvgl/src/core/lv_indev_scroll.c **** 
 268:lvgl/src/core/lv_indev_scroll.c ****     while(obj_act) {
 269:lvgl/src/core/lv_indev_scroll.c ****         if(lv_obj_has_flag(obj_act, LV_OBJ_FLAG_SCROLLABLE) == false) {
 270:lvgl/src/core/lv_indev_scroll.c ****             /*If this object don't want to chain the scroll to the parent stop searching*/
 271:lvgl/src/core/lv_indev_scroll.c ****             if(lv_obj_has_flag(obj_act, LV_OBJ_FLAG_SCROLL_CHAIN_HOR) == false && hor_en) break;
 272:lvgl/src/core/lv_indev_scroll.c ****             if(lv_obj_has_flag(obj_act, LV_OBJ_FLAG_SCROLL_CHAIN_VER) == false && ver_en) break;
 273:lvgl/src/core/lv_indev_scroll.c **** 
 274:lvgl/src/core/lv_indev_scroll.c ****             obj_act = lv_obj_get_parent(obj_act);
 275:lvgl/src/core/lv_indev_scroll.c ****             continue;
 276:lvgl/src/core/lv_indev_scroll.c ****         }
 277:lvgl/src/core/lv_indev_scroll.c **** 
 278:lvgl/src/core/lv_indev_scroll.c ****         /*Consider both up-down or left/right scrollable according to the current direction*/
 279:lvgl/src/core/lv_indev_scroll.c ****         bool up_en = ver_en;
 280:lvgl/src/core/lv_indev_scroll.c ****         bool down_en = ver_en;
 281:lvgl/src/core/lv_indev_scroll.c ****         bool left_en = hor_en;
 282:lvgl/src/core/lv_indev_scroll.c ****         bool right_en = hor_en;
 283:lvgl/src/core/lv_indev_scroll.c **** 
 284:lvgl/src/core/lv_indev_scroll.c ****         /*The object might have disabled some directions.*/
 285:lvgl/src/core/lv_indev_scroll.c ****         lv_dir_t scroll_dir = lv_obj_get_scroll_dir(obj_act);
 286:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_LEFT) == 0) left_en = false;
 287:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_RIGHT) == 0) right_en = false;
 288:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_TOP) == 0) up_en = false;
 289:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_BOTTOM) == 0) down_en = false;
 290:lvgl/src/core/lv_indev_scroll.c **** 
 291:lvgl/src/core/lv_indev_scroll.c ****         /*The object is scrollable to a direction if its content overflow in that direction.*/
 292:lvgl/src/core/lv_indev_scroll.c ****         lv_coord_t st = lv_obj_get_scroll_top(obj_act);
 293:lvgl/src/core/lv_indev_scroll.c ****         lv_coord_t sb = lv_obj_get_scroll_bottom(obj_act);
 294:lvgl/src/core/lv_indev_scroll.c ****         lv_coord_t sl = lv_obj_get_scroll_left(obj_act);
 295:lvgl/src/core/lv_indev_scroll.c ****         lv_coord_t sr = lv_obj_get_scroll_right(obj_act);
 296:lvgl/src/core/lv_indev_scroll.c **** 
 297:lvgl/src/core/lv_indev_scroll.c ****         /*If this object is scrollable into the current scroll direction then save it as a candidat
 298:lvgl/src/core/lv_indev_scroll.c ****          *It's important only to be scrollable on the current axis (hor/ver) because if the scroll
 299:lvgl/src/core/lv_indev_scroll.c ****          *is propagated to this object it can show at least elastic scroll effect.
 300:lvgl/src/core/lv_indev_scroll.c ****          *But if not hor/ver scrollable do not scroll it at all (so it's not a good candidate)*/
 301:lvgl/src/core/lv_indev_scroll.c ****         if((st > 0 || sb > 0)  &&
 302:lvgl/src/core/lv_indev_scroll.c ****            ((up_en    && proc->types.pointer.scroll_sum.y >=   scroll_limit) ||
 303:lvgl/src/core/lv_indev_scroll.c ****             (down_en  && proc->types.pointer.scroll_sum.y <= - scroll_limit))) {
 304:lvgl/src/core/lv_indev_scroll.c ****             obj_candidate = obj_act;
 305:lvgl/src/core/lv_indev_scroll.c ****             dir_candidate = LV_DIR_VER;
 306:lvgl/src/core/lv_indev_scroll.c ****         }
 307:lvgl/src/core/lv_indev_scroll.c **** 
 308:lvgl/src/core/lv_indev_scroll.c ****         if((sl > 0 || sr > 0)  &&
 309:lvgl/src/core/lv_indev_scroll.c ****            ((left_en   && proc->types.pointer.scroll_sum.x >=   scroll_limit) ||
 310:lvgl/src/core/lv_indev_scroll.c ****             (right_en  && proc->types.pointer.scroll_sum.x <= - scroll_limit))) {
 311:lvgl/src/core/lv_indev_scroll.c ****             obj_candidate = obj_act;
 312:lvgl/src/core/lv_indev_scroll.c ****             dir_candidate = LV_DIR_HOR;
 313:lvgl/src/core/lv_indev_scroll.c ****         }
 314:lvgl/src/core/lv_indev_scroll.c **** 
 315:lvgl/src/core/lv_indev_scroll.c ****         if(st <= 0) up_en = false;
 316:lvgl/src/core/lv_indev_scroll.c ****         if(sb <= 0) down_en = false;
ARM GAS  C:\usertemp\cc28nhP0.s 			page 7


 317:lvgl/src/core/lv_indev_scroll.c ****         if(sl <= 0) left_en = false;
 318:lvgl/src/core/lv_indev_scroll.c ****         if(sr <= 0) right_en = false;
 319:lvgl/src/core/lv_indev_scroll.c **** 
 320:lvgl/src/core/lv_indev_scroll.c ****         /*If the object really can be scrolled into the current direction the use it.*/
 321:lvgl/src/core/lv_indev_scroll.c ****         if((left_en  && proc->types.pointer.scroll_sum.x >=   scroll_limit) ||
 322:lvgl/src/core/lv_indev_scroll.c ****            (right_en && proc->types.pointer.scroll_sum.x <= - scroll_limit) ||
 323:lvgl/src/core/lv_indev_scroll.c ****            (up_en    && proc->types.pointer.scroll_sum.y >=   scroll_limit) ||
 324:lvgl/src/core/lv_indev_scroll.c ****            (down_en  && proc->types.pointer.scroll_sum.y <= - scroll_limit)) {
 325:lvgl/src/core/lv_indev_scroll.c ****             proc->types.pointer.scroll_dir = hor_en ? LV_DIR_HOR : LV_DIR_VER;
 326:lvgl/src/core/lv_indev_scroll.c ****             break;
 327:lvgl/src/core/lv_indev_scroll.c ****         }
 328:lvgl/src/core/lv_indev_scroll.c **** 
 329:lvgl/src/core/lv_indev_scroll.c ****         /*If this object don't want to chain the scroll to the parent stop searching*/
 330:lvgl/src/core/lv_indev_scroll.c ****         if(lv_obj_has_flag(obj_act, LV_OBJ_FLAG_SCROLL_CHAIN_HOR) == false && hor_en) break;
 331:lvgl/src/core/lv_indev_scroll.c ****         if(lv_obj_has_flag(obj_act, LV_OBJ_FLAG_SCROLL_CHAIN_VER) == false && ver_en) break;
 332:lvgl/src/core/lv_indev_scroll.c **** 
 333:lvgl/src/core/lv_indev_scroll.c ****         /*Try the parent*/
 334:lvgl/src/core/lv_indev_scroll.c ****         obj_act = lv_obj_get_parent(obj_act);
 335:lvgl/src/core/lv_indev_scroll.c ****     }
 336:lvgl/src/core/lv_indev_scroll.c **** 
 337:lvgl/src/core/lv_indev_scroll.c ****     /*Use the last candidate*/
 338:lvgl/src/core/lv_indev_scroll.c ****     if(obj_candidate) {
 339:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_dir = dir_candidate;
 340:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_obj = obj_candidate;
 341:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_sum.x = 0;
 342:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_sum.y = 0;
 343:lvgl/src/core/lv_indev_scroll.c ****     }
 344:lvgl/src/core/lv_indev_scroll.c **** 
 345:lvgl/src/core/lv_indev_scroll.c ****     return obj_candidate;
 346:lvgl/src/core/lv_indev_scroll.c **** }
 347:lvgl/src/core/lv_indev_scroll.c **** 
 348:lvgl/src/core/lv_indev_scroll.c **** static void init_scroll_limits(_lv_indev_proc_t * proc)
 349:lvgl/src/core/lv_indev_scroll.c **** {
 350:lvgl/src/core/lv_indev_scroll.c ****     lv_obj_t * obj = proc->types.pointer.scroll_obj;
 351:lvgl/src/core/lv_indev_scroll.c ****     /*If there no STOP allow scrolling anywhere*/
 352:lvgl/src/core/lv_indev_scroll.c ****     if(lv_obj_has_flag(obj, LV_OBJ_FLAG_SCROLL_ONE) == false) {
 353:lvgl/src/core/lv_indev_scroll.c ****         lv_area_set(&proc->types.pointer.scroll_area, LV_COORD_MIN, LV_COORD_MIN, LV_COORD_MAX, LV_
 354:lvgl/src/core/lv_indev_scroll.c ****     }
 355:lvgl/src/core/lv_indev_scroll.c ****     /*With STOP limit the scrolling to the perv and next snap point*/
 356:lvgl/src/core/lv_indev_scroll.c ****     else {
 357:lvgl/src/core/lv_indev_scroll.c ****         switch(lv_obj_get_scroll_snap_y(obj)) {
 358:lvgl/src/core/lv_indev_scroll.c ****             case LV_SCROLL_SNAP_START:
 359:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_area.y1 = find_snap_point_y(obj, obj->coords.y1 + 1, LV_
 360:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_area.y2 = find_snap_point_y(obj, LV_COORD_MIN, obj->coor
 361:lvgl/src/core/lv_indev_scroll.c ****                 break;
 362:lvgl/src/core/lv_indev_scroll.c ****             case LV_SCROLL_SNAP_END:
 363:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_area.y1 = find_snap_point_y(obj, obj->coords.y2, LV_COOR
 364:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_area.y2 = find_snap_point_y(obj, LV_COORD_MIN, obj->coor
 365:lvgl/src/core/lv_indev_scroll.c ****                 break;
 366:lvgl/src/core/lv_indev_scroll.c ****             case LV_SCROLL_SNAP_CENTER: {
 367:lvgl/src/core/lv_indev_scroll.c ****                     lv_coord_t y_mid = obj->coords.y1 + lv_area_get_height(&obj->coords) / 2;
 368:lvgl/src/core/lv_indev_scroll.c ****                     proc->types.pointer.scroll_area.y1 = find_snap_point_y(obj, y_mid + 1, LV_COORD
 369:lvgl/src/core/lv_indev_scroll.c ****                     proc->types.pointer.scroll_area.y2 = find_snap_point_y(obj, LV_COORD_MIN, y_mid
 370:lvgl/src/core/lv_indev_scroll.c ****                     break;
 371:lvgl/src/core/lv_indev_scroll.c ****                 }
 372:lvgl/src/core/lv_indev_scroll.c ****             default:
 373:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_area.y1 = LV_COORD_MIN;
ARM GAS  C:\usertemp\cc28nhP0.s 			page 8


 374:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_area.y2 = LV_COORD_MAX;
 375:lvgl/src/core/lv_indev_scroll.c ****                 break;
 376:lvgl/src/core/lv_indev_scroll.c ****         }
 377:lvgl/src/core/lv_indev_scroll.c **** 
 378:lvgl/src/core/lv_indev_scroll.c ****         switch(lv_obj_get_scroll_snap_x(obj)) {
 379:lvgl/src/core/lv_indev_scroll.c ****             case LV_SCROLL_SNAP_START:
 380:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_area.x1 = find_snap_point_x(obj, obj->coords.x1, LV_COOR
 381:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_area.x2 = find_snap_point_x(obj, LV_COORD_MIN, obj->coor
 382:lvgl/src/core/lv_indev_scroll.c ****                 break;
 383:lvgl/src/core/lv_indev_scroll.c ****             case LV_SCROLL_SNAP_END:
 384:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_area.x1 = find_snap_point_x(obj, obj->coords.x2, LV_COOR
 385:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_area.x2 = find_snap_point_x(obj, LV_COORD_MIN, obj->coor
 386:lvgl/src/core/lv_indev_scroll.c ****                 break;
 387:lvgl/src/core/lv_indev_scroll.c ****             case LV_SCROLL_SNAP_CENTER: {
 388:lvgl/src/core/lv_indev_scroll.c ****                     lv_coord_t x_mid = obj->coords.x1 + lv_area_get_width(&obj->coords) / 2;
 389:lvgl/src/core/lv_indev_scroll.c ****                     proc->types.pointer.scroll_area.x1 = find_snap_point_x(obj, x_mid + 1, LV_COORD
 390:lvgl/src/core/lv_indev_scroll.c ****                     proc->types.pointer.scroll_area.x2 = find_snap_point_x(obj, LV_COORD_MIN, x_mid
 391:lvgl/src/core/lv_indev_scroll.c ****                     break;
 392:lvgl/src/core/lv_indev_scroll.c ****                 }
 393:lvgl/src/core/lv_indev_scroll.c ****             default:
 394:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_area.x1 = LV_COORD_MIN;
 395:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_area.x2 = LV_COORD_MAX;
 396:lvgl/src/core/lv_indev_scroll.c ****                 break;
 397:lvgl/src/core/lv_indev_scroll.c ****         }
 398:lvgl/src/core/lv_indev_scroll.c ****     }
 399:lvgl/src/core/lv_indev_scroll.c **** 
 400:lvgl/src/core/lv_indev_scroll.c ****     /*Allow scrolling on the edges. It will be reverted to the edge due to snapping anyway*/
 401:lvgl/src/core/lv_indev_scroll.c ****     if(proc->types.pointer.scroll_area.x1 == 0) proc->types.pointer.scroll_area.x1 = LV_COORD_MIN;
 402:lvgl/src/core/lv_indev_scroll.c ****     if(proc->types.pointer.scroll_area.x2 == 0) proc->types.pointer.scroll_area.x2 = LV_COORD_MAX;
 403:lvgl/src/core/lv_indev_scroll.c ****     if(proc->types.pointer.scroll_area.y1 == 0) proc->types.pointer.scroll_area.y1 = LV_COORD_MIN;
 404:lvgl/src/core/lv_indev_scroll.c ****     if(proc->types.pointer.scroll_area.y2 == 0) proc->types.pointer.scroll_area.y2 = LV_COORD_MAX;
 405:lvgl/src/core/lv_indev_scroll.c **** }
 406:lvgl/src/core/lv_indev_scroll.c **** 
 407:lvgl/src/core/lv_indev_scroll.c **** /**
 408:lvgl/src/core/lv_indev_scroll.c ****  * Search for snap point in the `min` - `max` range.
 409:lvgl/src/core/lv_indev_scroll.c ****  * @param obj the object on which snap point should be found
 410:lvgl/src/core/lv_indev_scroll.c ****  * @param min ignore snap points smaller than this. (Absolute coordinate)
 411:lvgl/src/core/lv_indev_scroll.c ****  * @param max ignore snap points greater than this. (Absolute coordinate)
 412:lvgl/src/core/lv_indev_scroll.c ****  * @param ofs offset to snap points. Useful the get a snap point in an imagined case
 413:lvgl/src/core/lv_indev_scroll.c ****  *            what if children are already moved by this value
 414:lvgl/src/core/lv_indev_scroll.c ****  * @return the distance of the snap point.
 415:lvgl/src/core/lv_indev_scroll.c ****  */
 416:lvgl/src/core/lv_indev_scroll.c **** static lv_coord_t find_snap_point_x(const lv_obj_t * obj, lv_coord_t min, lv_coord_t max, lv_coord_
 417:lvgl/src/core/lv_indev_scroll.c **** {
 418:lvgl/src/core/lv_indev_scroll.c ****     lv_scroll_snap_t align = lv_obj_get_scroll_snap_x(obj);
 419:lvgl/src/core/lv_indev_scroll.c ****     if(align == LV_SCROLL_SNAP_NONE) return 0;
 420:lvgl/src/core/lv_indev_scroll.c **** 
 421:lvgl/src/core/lv_indev_scroll.c ****     lv_coord_t dist = LV_COORD_MAX;
 422:lvgl/src/core/lv_indev_scroll.c **** 
 423:lvgl/src/core/lv_indev_scroll.c ****     lv_coord_t pad_left = lv_obj_get_style_pad_left(obj, LV_PART_MAIN);
 424:lvgl/src/core/lv_indev_scroll.c ****     lv_coord_t pad_right = lv_obj_get_style_pad_right(obj, LV_PART_MAIN);
 425:lvgl/src/core/lv_indev_scroll.c **** 
 426:lvgl/src/core/lv_indev_scroll.c ****     uint32_t i;
 427:lvgl/src/core/lv_indev_scroll.c ****     uint32_t child_cnt = lv_obj_get_child_cnt(obj);
 428:lvgl/src/core/lv_indev_scroll.c ****     for(i = 0; i < child_cnt; i++) {
 429:lvgl/src/core/lv_indev_scroll.c ****         lv_obj_t * child = obj->spec_attr->children[i];
 430:lvgl/src/core/lv_indev_scroll.c ****         if(lv_obj_has_flag_any(child, LV_OBJ_FLAG_HIDDEN | LV_OBJ_FLAG_FLOATING)) continue;
ARM GAS  C:\usertemp\cc28nhP0.s 			page 9


 431:lvgl/src/core/lv_indev_scroll.c ****         if(lv_obj_has_flag(child, LV_OBJ_FLAG_SNAPPABLE)) {
 432:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t x_child = 0;
 433:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t x_parent = 0;
 434:lvgl/src/core/lv_indev_scroll.c ****             switch(align) {
 435:lvgl/src/core/lv_indev_scroll.c ****                 case LV_SCROLL_SNAP_START:
 436:lvgl/src/core/lv_indev_scroll.c ****                     x_child = child->coords.x1;
 437:lvgl/src/core/lv_indev_scroll.c ****                     x_parent = obj->coords.x1 + pad_left;
 438:lvgl/src/core/lv_indev_scroll.c ****                     break;
 439:lvgl/src/core/lv_indev_scroll.c ****                 case LV_SCROLL_SNAP_END:
 440:lvgl/src/core/lv_indev_scroll.c ****                     x_child = child->coords.x2;
 441:lvgl/src/core/lv_indev_scroll.c ****                     x_parent = obj->coords.x2 - pad_right;
 442:lvgl/src/core/lv_indev_scroll.c ****                     break;
 443:lvgl/src/core/lv_indev_scroll.c ****                 case LV_SCROLL_SNAP_CENTER:
 444:lvgl/src/core/lv_indev_scroll.c ****                     x_child = child->coords.x1 + lv_area_get_width(&child->coords) / 2;
 445:lvgl/src/core/lv_indev_scroll.c ****                     x_parent = obj->coords.x1 + pad_left + (lv_area_get_width(&obj->coords) - pad_l
 446:lvgl/src/core/lv_indev_scroll.c ****                     break;
 447:lvgl/src/core/lv_indev_scroll.c ****                 default:
 448:lvgl/src/core/lv_indev_scroll.c ****                     continue;
 449:lvgl/src/core/lv_indev_scroll.c ****             }
 450:lvgl/src/core/lv_indev_scroll.c **** 
 451:lvgl/src/core/lv_indev_scroll.c ****             x_child += ofs;
 452:lvgl/src/core/lv_indev_scroll.c ****             if(x_child >= min && x_child <= max) {
 453:lvgl/src/core/lv_indev_scroll.c ****                 lv_coord_t x = x_child -  x_parent;
 454:lvgl/src/core/lv_indev_scroll.c ****                 if(LV_ABS(x) < LV_ABS(dist)) dist = x;
 455:lvgl/src/core/lv_indev_scroll.c ****             }
 456:lvgl/src/core/lv_indev_scroll.c ****         }
 457:lvgl/src/core/lv_indev_scroll.c ****     }
 458:lvgl/src/core/lv_indev_scroll.c **** 
 459:lvgl/src/core/lv_indev_scroll.c ****     return dist == LV_COORD_MAX ? 0 : -dist;
 460:lvgl/src/core/lv_indev_scroll.c **** }
 461:lvgl/src/core/lv_indev_scroll.c **** 
 462:lvgl/src/core/lv_indev_scroll.c **** /**
 463:lvgl/src/core/lv_indev_scroll.c ****  * Search for snap point in the `min` - `max` range.
 464:lvgl/src/core/lv_indev_scroll.c ****  * @param obj the object on which snap point should be found
 465:lvgl/src/core/lv_indev_scroll.c ****  * @param min ignore snap points smaller than this. (Absolute coordinate)
 466:lvgl/src/core/lv_indev_scroll.c ****  * @param max ignore snap points greater than this. (Absolute coordinate)
 467:lvgl/src/core/lv_indev_scroll.c ****  * @param ofs offset to snap points. Useful to get a snap point in an imagined case
 468:lvgl/src/core/lv_indev_scroll.c ****  *            what if children are already moved by this value
 469:lvgl/src/core/lv_indev_scroll.c ****  * @return the distance of the snap point.
 470:lvgl/src/core/lv_indev_scroll.c ****  */
 471:lvgl/src/core/lv_indev_scroll.c **** static lv_coord_t find_snap_point_y(const lv_obj_t * obj, lv_coord_t min, lv_coord_t max, lv_coord_
 472:lvgl/src/core/lv_indev_scroll.c **** {
 473:lvgl/src/core/lv_indev_scroll.c ****     lv_scroll_snap_t align = lv_obj_get_scroll_snap_y(obj);
 474:lvgl/src/core/lv_indev_scroll.c ****     if(align == LV_SCROLL_SNAP_NONE) return 0;
 475:lvgl/src/core/lv_indev_scroll.c **** 
 476:lvgl/src/core/lv_indev_scroll.c ****     lv_coord_t dist = LV_COORD_MAX;
 477:lvgl/src/core/lv_indev_scroll.c **** 
 478:lvgl/src/core/lv_indev_scroll.c ****     lv_coord_t pad_top = lv_obj_get_style_pad_top(obj, LV_PART_MAIN);
 479:lvgl/src/core/lv_indev_scroll.c ****     lv_coord_t pad_bottom = lv_obj_get_style_pad_bottom(obj, LV_PART_MAIN);
 480:lvgl/src/core/lv_indev_scroll.c **** 
 481:lvgl/src/core/lv_indev_scroll.c ****     uint32_t i;
 482:lvgl/src/core/lv_indev_scroll.c ****     uint32_t child_cnt = lv_obj_get_child_cnt(obj);
 483:lvgl/src/core/lv_indev_scroll.c ****     for(i = 0; i < child_cnt; i++) {
 484:lvgl/src/core/lv_indev_scroll.c ****         lv_obj_t * child = obj->spec_attr->children[i];
 485:lvgl/src/core/lv_indev_scroll.c ****         if(lv_obj_has_flag_any(child, LV_OBJ_FLAG_HIDDEN | LV_OBJ_FLAG_FLOATING)) continue;
 486:lvgl/src/core/lv_indev_scroll.c ****         if(lv_obj_has_flag(child, LV_OBJ_FLAG_SNAPPABLE)) {
 487:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t y_child = 0;
ARM GAS  C:\usertemp\cc28nhP0.s 			page 10


 488:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t y_parent = 0;
 489:lvgl/src/core/lv_indev_scroll.c ****             switch(align) {
 490:lvgl/src/core/lv_indev_scroll.c ****                 case LV_SCROLL_SNAP_START:
 491:lvgl/src/core/lv_indev_scroll.c ****                     y_child = child->coords.y1;
 492:lvgl/src/core/lv_indev_scroll.c ****                     y_parent = obj->coords.y1 + pad_top;
 493:lvgl/src/core/lv_indev_scroll.c ****                     break;
 494:lvgl/src/core/lv_indev_scroll.c ****                 case LV_SCROLL_SNAP_END:
 495:lvgl/src/core/lv_indev_scroll.c ****                     y_child = child->coords.y2;
 496:lvgl/src/core/lv_indev_scroll.c ****                     y_parent = obj->coords.y2 - pad_bottom;
 497:lvgl/src/core/lv_indev_scroll.c ****                     break;
 498:lvgl/src/core/lv_indev_scroll.c ****                 case LV_SCROLL_SNAP_CENTER:
 499:lvgl/src/core/lv_indev_scroll.c ****                     y_child = child->coords.y1 + lv_area_get_height(&child->coords) / 2;
 500:lvgl/src/core/lv_indev_scroll.c ****                     y_parent = obj->coords.y1 + pad_top + (lv_area_get_height(&obj->coords) - pad_t
 501:lvgl/src/core/lv_indev_scroll.c ****                     break;
 502:lvgl/src/core/lv_indev_scroll.c ****                 default:
 503:lvgl/src/core/lv_indev_scroll.c ****                     continue;
 504:lvgl/src/core/lv_indev_scroll.c ****             }
 505:lvgl/src/core/lv_indev_scroll.c **** 
 506:lvgl/src/core/lv_indev_scroll.c ****             y_child += ofs;
 507:lvgl/src/core/lv_indev_scroll.c ****             if(y_child >= min && y_child <= max) {
 508:lvgl/src/core/lv_indev_scroll.c ****                 lv_coord_t y = y_child -  y_parent;
 509:lvgl/src/core/lv_indev_scroll.c ****                 if(LV_ABS(y) < LV_ABS(dist)) dist = y;
 510:lvgl/src/core/lv_indev_scroll.c ****             }
 511:lvgl/src/core/lv_indev_scroll.c ****         }
 512:lvgl/src/core/lv_indev_scroll.c ****     }
 513:lvgl/src/core/lv_indev_scroll.c **** 
 514:lvgl/src/core/lv_indev_scroll.c ****     return dist == LV_COORD_MAX ? 0 : -dist;
 515:lvgl/src/core/lv_indev_scroll.c **** }
 516:lvgl/src/core/lv_indev_scroll.c **** 
 517:lvgl/src/core/lv_indev_scroll.c **** static void scroll_limit_diff(_lv_indev_proc_t * proc, lv_coord_t * diff_x, lv_coord_t * diff_y)
 518:lvgl/src/core/lv_indev_scroll.c **** {
  28              		.loc 1 518 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 518 1 is_stmt 0 view .LVU1
  33 0000 00B5     		push	{lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 14, -4
 519:lvgl/src/core/lv_indev_scroll.c ****     if(diff_y) {
  37              		.loc 1 519 5 is_stmt 1 view .LVU2
  38              		.loc 1 519 7 is_stmt 0 view .LVU3
  39 0002 02B3     		cbz	r2, .L2
  40 0004 9446     		mov	ip, r2
 520:lvgl/src/core/lv_indev_scroll.c ****         if(proc->types.pointer.scroll_sum.y + *diff_y < proc->types.pointer.scroll_area.y1) {
  41              		.loc 1 520 9 is_stmt 1 view .LVU4
  42              		.loc 1 520 42 is_stmt 0 view .LVU5
  43 0006 B0F916E0 		ldrsh	lr, [r0, #22]
  44              		.loc 1 520 47 view .LVU6
  45 000a B2F90020 		ldrsh	r2, [r2]
  46              	.LVL1:
  47              		.loc 1 520 45 view .LVU7
  48 000e 7244     		add	r2, r2, lr
  49              		.loc 1 520 88 view .LVU8
  50 0010 B0F93230 		ldrsh	r3, [r0, #50]
  51              		.loc 1 520 11 view .LVU9
ARM GAS  C:\usertemp\cc28nhP0.s 			page 11


  52 0014 9A42     		cmp	r2, r3
  53 0016 06DA     		bge	.L3
 521:lvgl/src/core/lv_indev_scroll.c ****             *diff_y = proc->types.pointer.scroll_area.y1 - proc->types.pointer.scroll_sum.y;
  54              		.loc 1 521 13 is_stmt 1 view .LVU10
  55              		.loc 1 521 54 is_stmt 0 view .LVU11
  56 0018 9BB2     		uxth	r3, r3
  57              		.loc 1 521 90 view .LVU12
  58 001a 1FFA8EFE 		uxth	lr, lr
  59              		.loc 1 521 58 view .LVU13
  60 001e A3EB0E03 		sub	r3, r3, lr
  61              		.loc 1 521 21 view .LVU14
  62 0022 ACF80030 		strh	r3, [ip]	@ movhi
  63              	.L3:
 522:lvgl/src/core/lv_indev_scroll.c ****         }
 523:lvgl/src/core/lv_indev_scroll.c **** 
 524:lvgl/src/core/lv_indev_scroll.c ****         if(proc->types.pointer.scroll_sum.y + *diff_y > proc->types.pointer.scroll_area.y2) {
  64              		.loc 1 524 9 is_stmt 1 view .LVU15
  65              		.loc 1 524 42 is_stmt 0 view .LVU16
  66 0026 B0F916E0 		ldrsh	lr, [r0, #22]
  67              		.loc 1 524 47 view .LVU17
  68 002a BCF90020 		ldrsh	r2, [ip]
  69              		.loc 1 524 45 view .LVU18
  70 002e 7244     		add	r2, r2, lr
  71              		.loc 1 524 88 view .LVU19
  72 0030 B0F93630 		ldrsh	r3, [r0, #54]
  73              		.loc 1 524 11 view .LVU20
  74 0034 9A42     		cmp	r2, r3
  75 0036 06DD     		ble	.L2
 525:lvgl/src/core/lv_indev_scroll.c ****             *diff_y = proc->types.pointer.scroll_area.y2 - proc->types.pointer.scroll_sum.y;
  76              		.loc 1 525 13 is_stmt 1 view .LVU21
  77              		.loc 1 525 54 is_stmt 0 view .LVU22
  78 0038 9BB2     		uxth	r3, r3
  79              		.loc 1 525 90 view .LVU23
  80 003a 1FFA8EFE 		uxth	lr, lr
  81              		.loc 1 525 58 view .LVU24
  82 003e A3EB0E03 		sub	r3, r3, lr
  83              		.loc 1 525 21 view .LVU25
  84 0042 ACF80030 		strh	r3, [ip]	@ movhi
  85              	.LVL2:
  86              	.L2:
 526:lvgl/src/core/lv_indev_scroll.c ****         }
 527:lvgl/src/core/lv_indev_scroll.c ****     }
 528:lvgl/src/core/lv_indev_scroll.c **** 
 529:lvgl/src/core/lv_indev_scroll.c ****     if(diff_x) {
  87              		.loc 1 529 5 is_stmt 1 view .LVU26
  88              		.loc 1 529 7 is_stmt 0 view .LVU27
  89 0046 E9B1     		cbz	r1, .L1
 530:lvgl/src/core/lv_indev_scroll.c ****         if(proc->types.pointer.scroll_sum.x + *diff_x < proc->types.pointer.scroll_area.x1) {
  90              		.loc 1 530 9 is_stmt 1 view .LVU28
  91              		.loc 1 530 42 is_stmt 0 view .LVU29
  92 0048 B0F914C0 		ldrsh	ip, [r0, #20]
  93              		.loc 1 530 47 view .LVU30
  94 004c B1F90020 		ldrsh	r2, [r1]
  95              		.loc 1 530 45 view .LVU31
  96 0050 6244     		add	r2, r2, ip
  97              		.loc 1 530 88 view .LVU32
  98 0052 B0F93030 		ldrsh	r3, [r0, #48]
ARM GAS  C:\usertemp\cc28nhP0.s 			page 12


  99              		.loc 1 530 11 view .LVU33
 100 0056 9A42     		cmp	r2, r3
 101 0058 05DA     		bge	.L5
 531:lvgl/src/core/lv_indev_scroll.c ****             *diff_x = proc->types.pointer.scroll_area.x1 - proc->types.pointer.scroll_sum.x;
 102              		.loc 1 531 13 is_stmt 1 view .LVU34
 103              		.loc 1 531 54 is_stmt 0 view .LVU35
 104 005a 9BB2     		uxth	r3, r3
 105              		.loc 1 531 90 view .LVU36
 106 005c 1FFA8CFC 		uxth	ip, ip
 107              		.loc 1 531 58 view .LVU37
 108 0060 A3EB0C03 		sub	r3, r3, ip
 109              		.loc 1 531 21 view .LVU38
 110 0064 0B80     		strh	r3, [r1]	@ movhi
 111              	.L5:
 532:lvgl/src/core/lv_indev_scroll.c ****         }
 533:lvgl/src/core/lv_indev_scroll.c **** 
 534:lvgl/src/core/lv_indev_scroll.c ****         if(proc->types.pointer.scroll_sum.x + *diff_x > proc->types.pointer.scroll_area.x2) {
 112              		.loc 1 534 9 is_stmt 1 view .LVU39
 113              		.loc 1 534 42 is_stmt 0 view .LVU40
 114 0066 B0F914C0 		ldrsh	ip, [r0, #20]
 115              		.loc 1 534 47 view .LVU41
 116 006a B1F90020 		ldrsh	r2, [r1]
 117              		.loc 1 534 45 view .LVU42
 118 006e 6244     		add	r2, r2, ip
 119              		.loc 1 534 88 view .LVU43
 120 0070 B0F93430 		ldrsh	r3, [r0, #52]
 121              		.loc 1 534 11 view .LVU44
 122 0074 9A42     		cmp	r2, r3
 123 0076 05DD     		ble	.L1
 535:lvgl/src/core/lv_indev_scroll.c ****             *diff_x = proc->types.pointer.scroll_area.x2 - proc->types.pointer.scroll_sum.x;
 124              		.loc 1 535 13 is_stmt 1 view .LVU45
 125              		.loc 1 535 54 is_stmt 0 view .LVU46
 126 0078 9BB2     		uxth	r3, r3
 127              		.loc 1 535 90 view .LVU47
 128 007a 1FFA8CFC 		uxth	ip, ip
 129              		.loc 1 535 58 view .LVU48
 130 007e A3EB0C03 		sub	r3, r3, ip
 131              		.loc 1 535 21 view .LVU49
 132 0082 0B80     		strh	r3, [r1]	@ movhi
 133              	.L1:
 536:lvgl/src/core/lv_indev_scroll.c ****         }
 537:lvgl/src/core/lv_indev_scroll.c ****     }
 538:lvgl/src/core/lv_indev_scroll.c **** }
 134              		.loc 1 538 1 view .LVU50
 135 0084 5DF804FB 		ldr	pc, [sp], #4
 136              		.cfi_endproc
 137              	.LFE164:
 139              		.section	.text.scroll_throw_predict_y,"ax",%progbits
 140              		.align	1
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 145              	scroll_throw_predict_y:
 146              	.LVL3:
 147              	.LFB165:
 539:lvgl/src/core/lv_indev_scroll.c **** 
 540:lvgl/src/core/lv_indev_scroll.c **** 
ARM GAS  C:\usertemp\cc28nhP0.s 			page 13


 541:lvgl/src/core/lv_indev_scroll.c **** 
 542:lvgl/src/core/lv_indev_scroll.c **** static lv_coord_t scroll_throw_predict_y(_lv_indev_proc_t * proc)
 543:lvgl/src/core/lv_indev_scroll.c **** {
 148              		.loc 1 543 1 is_stmt 1 view -0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		.loc 1 543 1 is_stmt 0 view .LVU52
 153 0000 10B5     		push	{r4, lr}
 154              	.LCFI1:
 155              		.cfi_def_cfa_offset 8
 156              		.cfi_offset 4, -8
 157              		.cfi_offset 14, -4
 544:lvgl/src/core/lv_indev_scroll.c ****     lv_coord_t y = proc->types.pointer.scroll_throw_vect.y;
 158              		.loc 1 544 5 is_stmt 1 view .LVU53
 159              		.loc 1 544 16 is_stmt 0 view .LVU54
 160 0002 B0F91A40 		ldrsh	r4, [r0, #26]
 161              	.LVL4:
 545:lvgl/src/core/lv_indev_scroll.c ****     lv_coord_t move = 0;
 162              		.loc 1 545 5 is_stmt 1 view .LVU55
 546:lvgl/src/core/lv_indev_scroll.c **** 
 547:lvgl/src/core/lv_indev_scroll.c ****     lv_indev_t * indev_act = lv_indev_get_act();
 163              		.loc 1 547 5 view .LVU56
 164              		.loc 1 547 30 is_stmt 0 view .LVU57
 165 0006 FFF7FEFF 		bl	lv_indev_get_act
 166              	.LVL5:
 548:lvgl/src/core/lv_indev_scroll.c ****     lv_coord_t scroll_throw = indev_act->driver->scroll_throw;
 167              		.loc 1 548 5 is_stmt 1 view .LVU58
 168              		.loc 1 548 40 is_stmt 0 view .LVU59
 169 000a 0368     		ldr	r3, [r0]
 170              		.loc 1 548 48 view .LVU60
 171 000c 5A7E     		ldrb	r2, [r3, #25]	@ zero_extendqisi2
 172              	.LVL6:
 549:lvgl/src/core/lv_indev_scroll.c **** 
 550:lvgl/src/core/lv_indev_scroll.c ****     while(y) {
 173              		.loc 1 550 5 is_stmt 1 view .LVU61
 545:lvgl/src/core/lv_indev_scroll.c **** 
 174              		.loc 1 545 16 is_stmt 0 view .LVU62
 175 000e 0020     		movs	r0, #0
 176              	.LVL7:
 177              		.loc 1 550 10 view .LVU63
 178 0010 0CE0     		b	.L8
 179              	.LVL8:
 180              	.L9:
 551:lvgl/src/core/lv_indev_scroll.c ****         move += y;
 181              		.loc 1 551 9 is_stmt 1 view .LVU64
 182              		.loc 1 551 14 is_stmt 0 view .LVU65
 183 0012 2044     		add	r0, r0, r4
 184              	.LVL9:
 185              		.loc 1 551 14 view .LVU66
 186 0014 00B2     		sxth	r0, r0
 187              	.LVL10:
 552:lvgl/src/core/lv_indev_scroll.c ****         y = y * (100 - scroll_throw) / 100;
 188              		.loc 1 552 9 is_stmt 1 view .LVU67
 189              		.loc 1 552 22 is_stmt 0 view .LVU68
 190 0016 C2F16403 		rsb	r3, r2, #100
 191              		.loc 1 552 15 view .LVU69
ARM GAS  C:\usertemp\cc28nhP0.s 			page 14


 192 001a 03FB04F4 		mul	r4, r3, r4
 193              	.LVL11:
 194              		.loc 1 552 38 view .LVU70
 195 001e 054B     		ldr	r3, .L11
 196 0020 83FB0413 		smull	r1, r3, r3, r4
 197 0024 E417     		asrs	r4, r4, #31
 198 0026 C4EB6314 		rsb	r4, r4, r3, asr #5
 199              		.loc 1 552 11 view .LVU71
 200 002a 24B2     		sxth	r4, r4
 201              	.LVL12:
 202              	.L8:
 550:lvgl/src/core/lv_indev_scroll.c ****         move += y;
 203              		.loc 1 550 11 is_stmt 1 view .LVU72
 204 002c 002C     		cmp	r4, #0
 205 002e F0D1     		bne	.L9
 553:lvgl/src/core/lv_indev_scroll.c ****     }
 554:lvgl/src/core/lv_indev_scroll.c ****     return move;
 206              		.loc 1 554 5 view .LVU73
 555:lvgl/src/core/lv_indev_scroll.c **** }
 207              		.loc 1 555 1 is_stmt 0 view .LVU74
 208 0030 10BD     		pop	{r4, pc}
 209              	.LVL13:
 210              	.L12:
 211              		.loc 1 555 1 view .LVU75
 212 0032 00BF     		.align	2
 213              	.L11:
 214 0034 1F85EB51 		.word	1374389535
 215              		.cfi_endproc
 216              	.LFE165:
 218              		.section	.text.scroll_throw_predict_x,"ax",%progbits
 219              		.align	1
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 224              	scroll_throw_predict_x:
 225              	.LVL14:
 226              	.LFB166:
 556:lvgl/src/core/lv_indev_scroll.c **** 
 557:lvgl/src/core/lv_indev_scroll.c **** 
 558:lvgl/src/core/lv_indev_scroll.c **** static lv_coord_t scroll_throw_predict_x(_lv_indev_proc_t * proc)
 559:lvgl/src/core/lv_indev_scroll.c **** {
 227              		.loc 1 559 1 is_stmt 1 view -0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		.loc 1 559 1 is_stmt 0 view .LVU77
 232 0000 10B5     		push	{r4, lr}
 233              	.LCFI2:
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 4, -8
 236              		.cfi_offset 14, -4
 560:lvgl/src/core/lv_indev_scroll.c ****     lv_coord_t x = proc->types.pointer.scroll_throw_vect.x;
 237              		.loc 1 560 5 is_stmt 1 view .LVU78
 238              		.loc 1 560 16 is_stmt 0 view .LVU79
 239 0002 B0F91840 		ldrsh	r4, [r0, #24]
 240              	.LVL15:
 561:lvgl/src/core/lv_indev_scroll.c ****     lv_coord_t move = 0;
ARM GAS  C:\usertemp\cc28nhP0.s 			page 15


 241              		.loc 1 561 5 is_stmt 1 view .LVU80
 562:lvgl/src/core/lv_indev_scroll.c **** 
 563:lvgl/src/core/lv_indev_scroll.c ****     lv_indev_t * indev_act = lv_indev_get_act();
 242              		.loc 1 563 5 view .LVU81
 243              		.loc 1 563 30 is_stmt 0 view .LVU82
 244 0006 FFF7FEFF 		bl	lv_indev_get_act
 245              	.LVL16:
 564:lvgl/src/core/lv_indev_scroll.c ****     lv_coord_t scroll_throw = indev_act->driver->scroll_throw;
 246              		.loc 1 564 5 is_stmt 1 view .LVU83
 247              		.loc 1 564 40 is_stmt 0 view .LVU84
 248 000a 0368     		ldr	r3, [r0]
 249              		.loc 1 564 48 view .LVU85
 250 000c 5A7E     		ldrb	r2, [r3, #25]	@ zero_extendqisi2
 251              	.LVL17:
 565:lvgl/src/core/lv_indev_scroll.c **** 
 566:lvgl/src/core/lv_indev_scroll.c ****     while(x) {
 252              		.loc 1 566 5 is_stmt 1 view .LVU86
 561:lvgl/src/core/lv_indev_scroll.c **** 
 253              		.loc 1 561 16 is_stmt 0 view .LVU87
 254 000e 0020     		movs	r0, #0
 255              	.LVL18:
 256              		.loc 1 566 10 view .LVU88
 257 0010 0CE0     		b	.L14
 258              	.LVL19:
 259              	.L15:
 567:lvgl/src/core/lv_indev_scroll.c ****         move += x;
 260              		.loc 1 567 9 is_stmt 1 view .LVU89
 261              		.loc 1 567 14 is_stmt 0 view .LVU90
 262 0012 2044     		add	r0, r0, r4
 263              	.LVL20:
 264              		.loc 1 567 14 view .LVU91
 265 0014 00B2     		sxth	r0, r0
 266              	.LVL21:
 568:lvgl/src/core/lv_indev_scroll.c ****         x = x * (100 - scroll_throw) / 100;
 267              		.loc 1 568 9 is_stmt 1 view .LVU92
 268              		.loc 1 568 22 is_stmt 0 view .LVU93
 269 0016 C2F16403 		rsb	r3, r2, #100
 270              		.loc 1 568 15 view .LVU94
 271 001a 03FB04F4 		mul	r4, r3, r4
 272              	.LVL22:
 273              		.loc 1 568 38 view .LVU95
 274 001e 054B     		ldr	r3, .L17
 275 0020 83FB0413 		smull	r1, r3, r3, r4
 276 0024 E417     		asrs	r4, r4, #31
 277 0026 C4EB6314 		rsb	r4, r4, r3, asr #5
 278              		.loc 1 568 11 view .LVU96
 279 002a 24B2     		sxth	r4, r4
 280              	.LVL23:
 281              	.L14:
 566:lvgl/src/core/lv_indev_scroll.c ****         move += x;
 282              		.loc 1 566 11 is_stmt 1 view .LVU97
 283 002c 002C     		cmp	r4, #0
 284 002e F0D1     		bne	.L15
 569:lvgl/src/core/lv_indev_scroll.c ****     }
 570:lvgl/src/core/lv_indev_scroll.c ****     return move;
 285              		.loc 1 570 5 view .LVU98
 571:lvgl/src/core/lv_indev_scroll.c **** }
ARM GAS  C:\usertemp\cc28nhP0.s 			page 16


 286              		.loc 1 571 1 is_stmt 0 view .LVU99
 287 0030 10BD     		pop	{r4, pc}
 288              	.LVL24:
 289              	.L18:
 290              		.loc 1 571 1 view .LVU100
 291 0032 00BF     		.align	2
 292              	.L17:
 293 0034 1F85EB51 		.word	1374389535
 294              		.cfi_endproc
 295              	.LFE166:
 297              		.section	.text.find_scroll_obj,"ax",%progbits
 298              		.align	1
 299              		.syntax unified
 300              		.thumb
 301              		.thumb_func
 303              	find_scroll_obj:
 304              	.LVL25:
 305              	.LFB160:
 243:lvgl/src/core/lv_indev_scroll.c ****     lv_obj_t * obj_candidate = NULL;
 306              		.loc 1 243 1 is_stmt 1 view -0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 32
 309              		@ frame_needed = 0, uses_anonymous_args = 0
 243:lvgl/src/core/lv_indev_scroll.c ****     lv_obj_t * obj_candidate = NULL;
 310              		.loc 1 243 1 is_stmt 0 view .LVU102
 311 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 312              	.LCFI3:
 313              		.cfi_def_cfa_offset 36
 314              		.cfi_offset 4, -36
 315              		.cfi_offset 5, -32
 316              		.cfi_offset 6, -28
 317              		.cfi_offset 7, -24
 318              		.cfi_offset 8, -20
 319              		.cfi_offset 9, -16
 320              		.cfi_offset 10, -12
 321              		.cfi_offset 11, -8
 322              		.cfi_offset 14, -4
 323 0004 89B0     		sub	sp, sp, #36
 324              	.LCFI4:
 325              		.cfi_def_cfa_offset 72
 326 0006 8346     		mov	fp, r0
 244:lvgl/src/core/lv_indev_scroll.c ****     lv_dir_t dir_candidate = LV_DIR_NONE;
 327              		.loc 1 244 5 is_stmt 1 view .LVU103
 328              	.LVL26:
 245:lvgl/src/core/lv_indev_scroll.c ****     lv_indev_t * indev_act = lv_indev_get_act();
 329              		.loc 1 245 5 view .LVU104
 246:lvgl/src/core/lv_indev_scroll.c ****     lv_coord_t scroll_limit = indev_act->driver->scroll_limit;
 330              		.loc 1 246 5 view .LVU105
 246:lvgl/src/core/lv_indev_scroll.c ****     lv_coord_t scroll_limit = indev_act->driver->scroll_limit;
 331              		.loc 1 246 30 is_stmt 0 view .LVU106
 332 0008 FFF7FEFF 		bl	lv_indev_get_act
 333              	.LVL27:
 247:lvgl/src/core/lv_indev_scroll.c **** 
 334              		.loc 1 247 5 is_stmt 1 view .LVU107
 247:lvgl/src/core/lv_indev_scroll.c **** 
 335              		.loc 1 247 40 is_stmt 0 view .LVU108
 336 000c 0368     		ldr	r3, [r0]
ARM GAS  C:\usertemp\cc28nhP0.s 			page 17


 247:lvgl/src/core/lv_indev_scroll.c **** 
 337              		.loc 1 247 48 view .LVU109
 338 000e 93F818A0 		ldrb	r10, [r3, #24]	@ zero_extendqisi2
 247:lvgl/src/core/lv_indev_scroll.c **** 
 339              		.loc 1 247 16 view .LVU110
 340 0012 0FFA8AF9 		sxth	r9, r10
 341              	.LVL28:
 256:lvgl/src/core/lv_indev_scroll.c **** 
 342              		.loc 1 256 5 is_stmt 1 view .LVU111
 256:lvgl/src/core/lv_indev_scroll.c **** 
 343              		.loc 1 256 16 is_stmt 0 view .LVU112
 344 0016 DBF82040 		ldr	r4, [fp, #32]
 345              	.LVL29:
 259:lvgl/src/core/lv_indev_scroll.c ****     bool ver_en = false;
 346              		.loc 1 259 5 is_stmt 1 view .LVU113
 260:lvgl/src/core/lv_indev_scroll.c ****     if(LV_ABS(proc->types.pointer.scroll_sum.x) > LV_ABS(proc->types.pointer.scroll_sum.y)) {
 347              		.loc 1 260 5 view .LVU114
 261:lvgl/src/core/lv_indev_scroll.c ****         hor_en = true;
 348              		.loc 1 261 5 view .LVU115
 261:lvgl/src/core/lv_indev_scroll.c ****         hor_en = true;
 349              		.loc 1 261 8 is_stmt 0 view .LVU116
 350 001a BBF91420 		ldrsh	r2, [fp, #20]
 351 001e 002A     		cmp	r2, #0
 352 0020 B8BF     		it	lt
 353 0022 5242     		rsblt	r2, r2, #0
 354 0024 92B2     		uxth	r2, r2
 261:lvgl/src/core/lv_indev_scroll.c ****         hor_en = true;
 355              		.loc 1 261 51 view .LVU117
 356 0026 BBF91630 		ldrsh	r3, [fp, #22]
 357 002a 002B     		cmp	r3, #0
 358 002c B8BF     		it	lt
 359 002e 5B42     		rsblt	r3, r3, #0
 360 0030 9BB2     		uxth	r3, r3
 261:lvgl/src/core/lv_indev_scroll.c ****         hor_en = true;
 361              		.loc 1 261 7 view .LVU118
 362 0032 9A42     		cmp	r2, r3
 363 0034 00F2F380 		bhi	.L20
 265:lvgl/src/core/lv_indev_scroll.c ****     }
 364              		.loc 1 265 16 view .LVU119
 365 0038 0123     		movs	r3, #1
 366 003a 0193     		str	r3, [sp, #4]
 259:lvgl/src/core/lv_indev_scroll.c ****     bool ver_en = false;
 367              		.loc 1 259 10 view .LVU120
 368 003c 0023     		movs	r3, #0
 369 003e 0293     		str	r3, [sp, #8]
 370              	.L21:
 371              	.LVL30:
 262:lvgl/src/core/lv_indev_scroll.c ****     }
 372              		.loc 1 262 16 view .LVU121
 373 0040 0023     		movs	r3, #0
 374 0042 0793     		str	r3, [sp, #28]
 375 0044 0693     		str	r3, [sp, #24]
 376 0046 A2E0     		b	.L47
 377              	.LVL31:
 378              	.L25:
 379              	.LBB49:
 274:lvgl/src/core/lv_indev_scroll.c ****             continue;
ARM GAS  C:\usertemp\cc28nhP0.s 			page 18


 380              		.loc 1 274 13 is_stmt 1 view .LVU122
 274:lvgl/src/core/lv_indev_scroll.c ****             continue;
 381              		.loc 1 274 23 is_stmt 0 view .LVU123
 382 0048 2046     		mov	r0, r4
 383 004a FFF7FEFF 		bl	lv_obj_get_parent
 384              	.LVL32:
 385 004e 0446     		mov	r4, r0
 386              	.LVL33:
 275:lvgl/src/core/lv_indev_scroll.c ****         }
 387              		.loc 1 275 13 is_stmt 1 view .LVU124
 388 0050 9DE0     		b	.L47
 389              	.LVL34:
 390              	.L22:
 279:lvgl/src/core/lv_indev_scroll.c ****         bool down_en = ver_en;
 391              		.loc 1 279 9 view .LVU125
 280:lvgl/src/core/lv_indev_scroll.c ****         bool left_en = hor_en;
 392              		.loc 1 280 9 view .LVU126
 281:lvgl/src/core/lv_indev_scroll.c ****         bool right_en = hor_en;
 393              		.loc 1 281 9 view .LVU127
 282:lvgl/src/core/lv_indev_scroll.c **** 
 394              		.loc 1 282 9 view .LVU128
 285:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_LEFT) == 0) left_en = false;
 395              		.loc 1 285 9 view .LVU129
 285:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_LEFT) == 0) left_en = false;
 396              		.loc 1 285 31 is_stmt 0 view .LVU130
 397 0052 2046     		mov	r0, r4
 398 0054 FFF7FEFF 		bl	lv_obj_get_scroll_dir
 399              	.LVL35:
 286:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_RIGHT) == 0) right_en = false;
 400              		.loc 1 286 9 is_stmt 1 view .LVU131
 286:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_RIGHT) == 0) right_en = false;
 401              		.loc 1 286 11 is_stmt 0 view .LVU132
 402 0058 10F0010F 		tst	r0, #1
 403 005c 35D0     		beq	.L50
 281:lvgl/src/core/lv_indev_scroll.c ****         bool right_en = hor_en;
 404              		.loc 1 281 14 view .LVU133
 405 005e DDF80880 		ldr	r8, [sp, #8]
 406              	.L27:
 407              	.LVL36:
 287:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_TOP) == 0) up_en = false;
 408              		.loc 1 287 9 is_stmt 1 view .LVU134
 287:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_TOP) == 0) up_en = false;
 409              		.loc 1 287 11 is_stmt 0 view .LVU135
 410 0062 10F0020F 		tst	r0, #2
 411 0066 33D0     		beq	.L51
 282:lvgl/src/core/lv_indev_scroll.c **** 
 412              		.loc 1 282 14 view .LVU136
 413 0068 029B     		ldr	r3, [sp, #8]
 414 006a 0493     		str	r3, [sp, #16]
 415              	.L28:
 416              	.LVL37:
 288:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_BOTTOM) == 0) down_en = false;
 417              		.loc 1 288 9 is_stmt 1 view .LVU137
 288:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_BOTTOM) == 0) down_en = false;
 418              		.loc 1 288 11 is_stmt 0 view .LVU138
 419 006c 10F0040F 		tst	r0, #4
 420 0070 31D0     		beq	.L52
ARM GAS  C:\usertemp\cc28nhP0.s 			page 19


 279:lvgl/src/core/lv_indev_scroll.c ****         bool down_en = ver_en;
 421              		.loc 1 279 14 view .LVU139
 422 0072 019B     		ldr	r3, [sp, #4]
 423 0074 0393     		str	r3, [sp, #12]
 424              	.L29:
 425              	.LVL38:
 289:lvgl/src/core/lv_indev_scroll.c **** 
 426              		.loc 1 289 9 is_stmt 1 view .LVU140
 289:lvgl/src/core/lv_indev_scroll.c **** 
 427              		.loc 1 289 11 is_stmt 0 view .LVU141
 428 0076 10F0080F 		tst	r0, #8
 429 007a 2FD0     		beq	.L53
 280:lvgl/src/core/lv_indev_scroll.c ****         bool left_en = hor_en;
 430              		.loc 1 280 14 view .LVU142
 431 007c 019B     		ldr	r3, [sp, #4]
 432 007e 0593     		str	r3, [sp, #20]
 433              	.L30:
 434              	.LVL39:
 292:lvgl/src/core/lv_indev_scroll.c ****         lv_coord_t sb = lv_obj_get_scroll_bottom(obj_act);
 435              		.loc 1 292 9 is_stmt 1 view .LVU143
 292:lvgl/src/core/lv_indev_scroll.c ****         lv_coord_t sb = lv_obj_get_scroll_bottom(obj_act);
 436              		.loc 1 292 25 is_stmt 0 view .LVU144
 437 0080 2046     		mov	r0, r4
 438              	.LVL40:
 292:lvgl/src/core/lv_indev_scroll.c ****         lv_coord_t sb = lv_obj_get_scroll_bottom(obj_act);
 439              		.loc 1 292 25 view .LVU145
 440 0082 FFF7FEFF 		bl	lv_obj_get_scroll_top
 441              	.LVL41:
 442 0086 0746     		mov	r7, r0
 443              	.LVL42:
 293:lvgl/src/core/lv_indev_scroll.c ****         lv_coord_t sl = lv_obj_get_scroll_left(obj_act);
 444              		.loc 1 293 9 is_stmt 1 view .LVU146
 293:lvgl/src/core/lv_indev_scroll.c ****         lv_coord_t sl = lv_obj_get_scroll_left(obj_act);
 445              		.loc 1 293 25 is_stmt 0 view .LVU147
 446 0088 2046     		mov	r0, r4
 447 008a FFF7FEFF 		bl	lv_obj_get_scroll_bottom
 448              	.LVL43:
 449 008e 0646     		mov	r6, r0
 450              	.LVL44:
 294:lvgl/src/core/lv_indev_scroll.c ****         lv_coord_t sr = lv_obj_get_scroll_right(obj_act);
 451              		.loc 1 294 9 is_stmt 1 view .LVU148
 294:lvgl/src/core/lv_indev_scroll.c ****         lv_coord_t sr = lv_obj_get_scroll_right(obj_act);
 452              		.loc 1 294 25 is_stmt 0 view .LVU149
 453 0090 2046     		mov	r0, r4
 454 0092 FFF7FEFF 		bl	lv_obj_get_scroll_left
 455              	.LVL45:
 456 0096 0546     		mov	r5, r0
 457              	.LVL46:
 295:lvgl/src/core/lv_indev_scroll.c **** 
 458              		.loc 1 295 9 is_stmt 1 view .LVU150
 295:lvgl/src/core/lv_indev_scroll.c **** 
 459              		.loc 1 295 25 is_stmt 0 view .LVU151
 460 0098 2046     		mov	r0, r4
 461 009a FFF7FEFF 		bl	lv_obj_get_scroll_right
 462              	.LVL47:
 301:lvgl/src/core/lv_indev_scroll.c ****            ((up_en    && proc->types.pointer.scroll_sum.y >=   scroll_limit) ||
 463              		.loc 1 301 9 is_stmt 1 view .LVU152
ARM GAS  C:\usertemp\cc28nhP0.s 			page 20


 301:lvgl/src/core/lv_indev_scroll.c ****            ((up_en    && proc->types.pointer.scroll_sum.y >=   scroll_limit) ||
 464              		.loc 1 301 11 is_stmt 0 view .LVU153
 465 009e 002E     		cmp	r6, #0
 466 00a0 D8BF     		it	le
 467 00a2 002F     		cmple	r7, #0
 468 00a4 20DD     		ble	.L31
 301:lvgl/src/core/lv_indev_scroll.c ****            ((up_en    && proc->types.pointer.scroll_sum.y >=   scroll_limit) ||
 469              		.loc 1 301 32 discriminator 1 view .LVU154
 470 00a6 039B     		ldr	r3, [sp, #12]
 471 00a8 1BB1     		cbz	r3, .L32
 302:lvgl/src/core/lv_indev_scroll.c ****             (down_en  && proc->types.pointer.scroll_sum.y <= - scroll_limit))) {
 472              		.loc 1 302 56 view .LVU155
 473 00aa BBF91630 		ldrsh	r3, [fp, #22]
 302:lvgl/src/core/lv_indev_scroll.c ****             (down_en  && proc->types.pointer.scroll_sum.y <= - scroll_limit))) {
 474              		.loc 1 302 23 view .LVU156
 475 00ae 4B45     		cmp	r3, r9
 476 00b0 17DA     		bge	.L54
 477              	.L32:
 302:lvgl/src/core/lv_indev_scroll.c ****             (down_en  && proc->types.pointer.scroll_sum.y <= - scroll_limit))) {
 478              		.loc 1 302 78 discriminator 1 view .LVU157
 479 00b2 059B     		ldr	r3, [sp, #20]
 480 00b4 C3B1     		cbz	r3, .L31
 303:lvgl/src/core/lv_indev_scroll.c ****             obj_candidate = obj_act;
 481              		.loc 1 303 56 view .LVU158
 482 00b6 BBF91620 		ldrsh	r2, [fp, #22]
 303:lvgl/src/core/lv_indev_scroll.c ****             obj_candidate = obj_act;
 483              		.loc 1 303 62 view .LVU159
 484 00ba CAF10003 		rsb	r3, r10, #0
 303:lvgl/src/core/lv_indev_scroll.c ****             obj_candidate = obj_act;
 485              		.loc 1 303 23 view .LVU160
 486 00be 9A42     		cmp	r2, r3
 487 00c0 12DC     		bgt	.L31
 304:lvgl/src/core/lv_indev_scroll.c ****             dir_candidate = LV_DIR_VER;
 488              		.loc 1 304 27 view .LVU161
 489 00c2 0694     		str	r4, [sp, #24]
 490              	.LVL48:
 305:lvgl/src/core/lv_indev_scroll.c ****         }
 491              		.loc 1 305 27 view .LVU162
 492 00c4 0C23     		movs	r3, #12
 493 00c6 0793     		str	r3, [sp, #28]
 494              	.LVL49:
 305:lvgl/src/core/lv_indev_scroll.c ****         }
 495              		.loc 1 305 27 view .LVU163
 496 00c8 0EE0     		b	.L31
 497              	.LVL50:
 498              	.L50:
 286:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_RIGHT) == 0) right_en = false;
 499              		.loc 1 286 53 discriminator 1 view .LVU164
 500 00ca 4FF00008 		mov	r8, #0
 501 00ce C8E7     		b	.L27
 502              	.LVL51:
 503              	.L51:
 287:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_TOP) == 0) up_en = false;
 504              		.loc 1 287 55 discriminator 1 view .LVU165
 505 00d0 0023     		movs	r3, #0
 506 00d2 0493     		str	r3, [sp, #16]
 507 00d4 CAE7     		b	.L28
ARM GAS  C:\usertemp\cc28nhP0.s 			page 21


 508              	.LVL52:
 509              	.L52:
 288:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_BOTTOM) == 0) down_en = false;
 510              		.loc 1 288 50 discriminator 1 view .LVU166
 511 00d6 0023     		movs	r3, #0
 512 00d8 0393     		str	r3, [sp, #12]
 513 00da CCE7     		b	.L29
 514              	.LVL53:
 515              	.L53:
 289:lvgl/src/core/lv_indev_scroll.c **** 
 516              		.loc 1 289 55 discriminator 1 view .LVU167
 517 00dc 0023     		movs	r3, #0
 518 00de 0593     		str	r3, [sp, #20]
 519 00e0 CEE7     		b	.L30
 520              	.LVL54:
 521              	.L54:
 304:lvgl/src/core/lv_indev_scroll.c ****             dir_candidate = LV_DIR_VER;
 522              		.loc 1 304 27 view .LVU168
 523 00e2 0694     		str	r4, [sp, #24]
 524              	.LVL55:
 305:lvgl/src/core/lv_indev_scroll.c ****         }
 525              		.loc 1 305 27 view .LVU169
 526 00e4 0C23     		movs	r3, #12
 527 00e6 0793     		str	r3, [sp, #28]
 528              	.LVL56:
 529              	.L31:
 308:lvgl/src/core/lv_indev_scroll.c ****            ((left_en   && proc->types.pointer.scroll_sum.x >=   scroll_limit) ||
 530              		.loc 1 308 9 is_stmt 1 view .LVU170
 308:lvgl/src/core/lv_indev_scroll.c ****            ((left_en   && proc->types.pointer.scroll_sum.x >=   scroll_limit) ||
 531              		.loc 1 308 11 is_stmt 0 view .LVU171
 532 00e8 0028     		cmp	r0, #0
 533 00ea D8BF     		it	le
 534 00ec 002D     		cmple	r5, #0
 535 00ee 15DD     		ble	.L33
 308:lvgl/src/core/lv_indev_scroll.c ****            ((left_en   && proc->types.pointer.scroll_sum.x >=   scroll_limit) ||
 536              		.loc 1 308 32 discriminator 1 view .LVU172
 537 00f0 B8F1000F 		cmp	r8, #0
 538 00f4 03D0     		beq	.L34
 309:lvgl/src/core/lv_indev_scroll.c ****             (right_en  && proc->types.pointer.scroll_sum.x <= - scroll_limit))) {
 539              		.loc 1 309 57 view .LVU173
 540 00f6 BBF91430 		ldrsh	r3, [fp, #20]
 309:lvgl/src/core/lv_indev_scroll.c ****             (right_en  && proc->types.pointer.scroll_sum.x <= - scroll_limit))) {
 541              		.loc 1 309 24 view .LVU174
 542 00fa 4B45     		cmp	r3, r9
 543 00fc 0BDA     		bge	.L56
 544              	.L34:
 309:lvgl/src/core/lv_indev_scroll.c ****             (right_en  && proc->types.pointer.scroll_sum.x <= - scroll_limit))) {
 545              		.loc 1 309 79 discriminator 1 view .LVU175
 546 00fe 049B     		ldr	r3, [sp, #16]
 547 0100 63B1     		cbz	r3, .L33
 310:lvgl/src/core/lv_indev_scroll.c ****             obj_candidate = obj_act;
 548              		.loc 1 310 57 view .LVU176
 549 0102 BBF91420 		ldrsh	r2, [fp, #20]
 310:lvgl/src/core/lv_indev_scroll.c ****             obj_candidate = obj_act;
 550              		.loc 1 310 63 view .LVU177
 551 0106 CAF10003 		rsb	r3, r10, #0
 310:lvgl/src/core/lv_indev_scroll.c ****             obj_candidate = obj_act;
ARM GAS  C:\usertemp\cc28nhP0.s 			page 22


 552              		.loc 1 310 24 view .LVU178
 553 010a 9A42     		cmp	r2, r3
 554 010c 06DC     		bgt	.L33
 311:lvgl/src/core/lv_indev_scroll.c ****             dir_candidate = LV_DIR_HOR;
 555              		.loc 1 311 27 view .LVU179
 556 010e 0694     		str	r4, [sp, #24]
 557              	.LVL57:
 312:lvgl/src/core/lv_indev_scroll.c ****         }
 558              		.loc 1 312 27 view .LVU180
 559 0110 0323     		movs	r3, #3
 560 0112 0793     		str	r3, [sp, #28]
 561              	.LVL58:
 312:lvgl/src/core/lv_indev_scroll.c ****         }
 562              		.loc 1 312 27 view .LVU181
 563 0114 02E0     		b	.L33
 564              	.LVL59:
 565              	.L56:
 311:lvgl/src/core/lv_indev_scroll.c ****             dir_candidate = LV_DIR_HOR;
 566              		.loc 1 311 27 view .LVU182
 567 0116 0694     		str	r4, [sp, #24]
 568              	.LVL60:
 312:lvgl/src/core/lv_indev_scroll.c ****         }
 569              		.loc 1 312 27 view .LVU183
 570 0118 0323     		movs	r3, #3
 571 011a 0793     		str	r3, [sp, #28]
 572              	.LVL61:
 573              	.L33:
 315:lvgl/src/core/lv_indev_scroll.c ****         if(sb <= 0) down_en = false;
 574              		.loc 1 315 9 is_stmt 1 view .LVU184
 315:lvgl/src/core/lv_indev_scroll.c ****         if(sb <= 0) down_en = false;
 575              		.loc 1 315 11 is_stmt 0 view .LVU185
 576 011c 002F     		cmp	r7, #0
 577 011e 66DD     		ble	.L68
 578              	.LVL62:
 579              	.L35:
 316:lvgl/src/core/lv_indev_scroll.c ****         if(sl <= 0) left_en = false;
 580              		.loc 1 316 9 is_stmt 1 view .LVU186
 316:lvgl/src/core/lv_indev_scroll.c ****         if(sl <= 0) left_en = false;
 581              		.loc 1 316 11 is_stmt 0 view .LVU187
 582 0120 002E     		cmp	r6, #0
 583 0122 67DD     		ble	.L69
 584              	.LVL63:
 585              	.L36:
 317:lvgl/src/core/lv_indev_scroll.c ****         if(sr <= 0) right_en = false;
 586              		.loc 1 317 9 is_stmt 1 view .LVU188
 317:lvgl/src/core/lv_indev_scroll.c ****         if(sr <= 0) right_en = false;
 587              		.loc 1 317 11 is_stmt 0 view .LVU189
 588 0124 002D     		cmp	r5, #0
 589 0126 68DD     		ble	.L70
 590              	.LVL64:
 591              	.L37:
 318:lvgl/src/core/lv_indev_scroll.c **** 
 592              		.loc 1 318 9 is_stmt 1 view .LVU190
 318:lvgl/src/core/lv_indev_scroll.c **** 
 593              		.loc 1 318 11 is_stmt 0 view .LVU191
 594 0128 0028     		cmp	r0, #0
 595 012a 69DD     		ble	.L71
ARM GAS  C:\usertemp\cc28nhP0.s 			page 23


 596              	.LVL65:
 597              	.L38:
 321:lvgl/src/core/lv_indev_scroll.c ****            (right_en && proc->types.pointer.scroll_sum.x <= - scroll_limit) ||
 598              		.loc 1 321 9 is_stmt 1 view .LVU192
 321:lvgl/src/core/lv_indev_scroll.c ****            (right_en && proc->types.pointer.scroll_sum.x <= - scroll_limit) ||
 599              		.loc 1 321 11 is_stmt 0 view .LVU193
 600 012c B8F1000F 		cmp	r8, #0
 601 0130 03D0     		beq	.L39
 321:lvgl/src/core/lv_indev_scroll.c ****            (right_en && proc->types.pointer.scroll_sum.x <= - scroll_limit) ||
 602              		.loc 1 321 55 discriminator 1 view .LVU194
 603 0132 BBF91430 		ldrsh	r3, [fp, #20]
 321:lvgl/src/core/lv_indev_scroll.c ****            (right_en && proc->types.pointer.scroll_sum.x <= - scroll_limit) ||
 604              		.loc 1 321 22 discriminator 1 view .LVU195
 605 0136 4B45     		cmp	r3, r9
 606 0138 65DA     		bge	.L40
 607              	.L39:
 321:lvgl/src/core/lv_indev_scroll.c ****            (right_en && proc->types.pointer.scroll_sum.x <= - scroll_limit) ||
 608              		.loc 1 321 77 discriminator 3 view .LVU196
 609 013a 049B     		ldr	r3, [sp, #16]
 610 013c 2BB1     		cbz	r3, .L41
 322:lvgl/src/core/lv_indev_scroll.c ****            (up_en    && proc->types.pointer.scroll_sum.y >=   scroll_limit) ||
 611              		.loc 1 322 55 view .LVU197
 612 013e BBF91420 		ldrsh	r2, [fp, #20]
 322:lvgl/src/core/lv_indev_scroll.c ****            (up_en    && proc->types.pointer.scroll_sum.y >=   scroll_limit) ||
 613              		.loc 1 322 61 view .LVU198
 614 0142 CAF10003 		rsb	r3, r10, #0
 322:lvgl/src/core/lv_indev_scroll.c ****            (up_en    && proc->types.pointer.scroll_sum.y >=   scroll_limit) ||
 615              		.loc 1 322 22 view .LVU199
 616 0146 9A42     		cmp	r2, r3
 617 0148 5DDD     		ble	.L40
 618              	.L41:
 322:lvgl/src/core/lv_indev_scroll.c ****            (up_en    && proc->types.pointer.scroll_sum.y >=   scroll_limit) ||
 619              		.loc 1 322 77 discriminator 1 view .LVU200
 620 014a 039B     		ldr	r3, [sp, #12]
 621 014c 1BB1     		cbz	r3, .L42
 323:lvgl/src/core/lv_indev_scroll.c ****            (down_en  && proc->types.pointer.scroll_sum.y <= - scroll_limit)) {
 622              		.loc 1 323 55 view .LVU201
 623 014e BBF91630 		ldrsh	r3, [fp, #22]
 323:lvgl/src/core/lv_indev_scroll.c ****            (down_en  && proc->types.pointer.scroll_sum.y <= - scroll_limit)) {
 624              		.loc 1 323 22 view .LVU202
 625 0152 4B45     		cmp	r3, r9
 626 0154 57DA     		bge	.L40
 627              	.L42:
 323:lvgl/src/core/lv_indev_scroll.c ****            (down_en  && proc->types.pointer.scroll_sum.y <= - scroll_limit)) {
 628              		.loc 1 323 77 discriminator 1 view .LVU203
 629 0156 059B     		ldr	r3, [sp, #20]
 630 0158 2BB1     		cbz	r3, .L43
 324:lvgl/src/core/lv_indev_scroll.c ****             proc->types.pointer.scroll_dir = hor_en ? LV_DIR_HOR : LV_DIR_VER;
 631              		.loc 1 324 55 view .LVU204
 632 015a BBF91620 		ldrsh	r2, [fp, #22]
 324:lvgl/src/core/lv_indev_scroll.c ****             proc->types.pointer.scroll_dir = hor_en ? LV_DIR_HOR : LV_DIR_VER;
 633              		.loc 1 324 61 view .LVU205
 634 015e CAF10003 		rsb	r3, r10, #0
 324:lvgl/src/core/lv_indev_scroll.c ****             proc->types.pointer.scroll_dir = hor_en ? LV_DIR_HOR : LV_DIR_VER;
 635              		.loc 1 324 22 view .LVU206
 636 0162 9A42     		cmp	r2, r3
 637 0164 4FDD     		ble	.L40
ARM GAS  C:\usertemp\cc28nhP0.s 			page 24


 638              	.L43:
 330:lvgl/src/core/lv_indev_scroll.c ****         if(lv_obj_has_flag(obj_act, LV_OBJ_FLAG_SCROLL_CHAIN_VER) == false && ver_en) break;
 639              		.loc 1 330 9 is_stmt 1 view .LVU207
 330:lvgl/src/core/lv_indev_scroll.c ****         if(lv_obj_has_flag(obj_act, LV_OBJ_FLAG_SCROLL_CHAIN_VER) == false && ver_en) break;
 640              		.loc 1 330 12 is_stmt 0 view .LVU208
 641 0166 4FF48071 		mov	r1, #256
 642 016a 2046     		mov	r0, r4
 643              	.LVL66:
 330:lvgl/src/core/lv_indev_scroll.c ****         if(lv_obj_has_flag(obj_act, LV_OBJ_FLAG_SCROLL_CHAIN_VER) == false && ver_en) break;
 644              		.loc 1 330 12 view .LVU209
 645 016c FFF7FEFF 		bl	lv_obj_has_flag
 646              	.LVL67:
 330:lvgl/src/core/lv_indev_scroll.c ****         if(lv_obj_has_flag(obj_act, LV_OBJ_FLAG_SCROLL_CHAIN_VER) == false && ver_en) break;
 647              		.loc 1 330 11 discriminator 1 view .LVU210
 648 0170 08B9     		cbnz	r0, .L45
 330:lvgl/src/core/lv_indev_scroll.c ****         if(lv_obj_has_flag(obj_act, LV_OBJ_FLAG_SCROLL_CHAIN_VER) == false && ver_en) break;
 649              		.loc 1 330 76 discriminator 1 view .LVU211
 650 0172 029B     		ldr	r3, [sp, #8]
 651 0174 3BBB     		cbnz	r3, .L24
 652              	.L45:
 331:lvgl/src/core/lv_indev_scroll.c **** 
 653              		.loc 1 331 9 is_stmt 1 view .LVU212
 331:lvgl/src/core/lv_indev_scroll.c **** 
 654              		.loc 1 331 12 is_stmt 0 view .LVU213
 655 0176 4FF40071 		mov	r1, #512
 656 017a 2046     		mov	r0, r4
 657 017c FFF7FEFF 		bl	lv_obj_has_flag
 658              	.LVL68:
 331:lvgl/src/core/lv_indev_scroll.c **** 
 659              		.loc 1 331 11 discriminator 1 view .LVU214
 660 0180 08B9     		cbnz	r0, .L46
 331:lvgl/src/core/lv_indev_scroll.c **** 
 661              		.loc 1 331 76 discriminator 1 view .LVU215
 662 0182 019B     		ldr	r3, [sp, #4]
 663 0184 FBB9     		cbnz	r3, .L24
 664              	.L46:
 334:lvgl/src/core/lv_indev_scroll.c ****     }
 665              		.loc 1 334 9 is_stmt 1 view .LVU216
 334:lvgl/src/core/lv_indev_scroll.c ****     }
 666              		.loc 1 334 19 is_stmt 0 view .LVU217
 667 0186 2046     		mov	r0, r4
 668 0188 FFF7FEFF 		bl	lv_obj_get_parent
 669              	.LVL69:
 670 018c 0446     		mov	r4, r0
 671              	.LVL70:
 672              	.L47:
 334:lvgl/src/core/lv_indev_scroll.c ****     }
 673              		.loc 1 334 19 view .LVU218
 674              	.LBE49:
 268:lvgl/src/core/lv_indev_scroll.c ****         if(lv_obj_has_flag(obj_act, LV_OBJ_FLAG_SCROLLABLE) == false) {
 675              		.loc 1 268 11 is_stmt 1 view .LVU219
 676 018e D4B1     		cbz	r4, .L24
 677              	.LBB50:
 269:lvgl/src/core/lv_indev_scroll.c ****             /*If this object don't want to chain the scroll to the parent stop searching*/
 678              		.loc 1 269 9 view .LVU220
 269:lvgl/src/core/lv_indev_scroll.c ****             /*If this object don't want to chain the scroll to the parent stop searching*/
 679              		.loc 1 269 12 is_stmt 0 view .LVU221
ARM GAS  C:\usertemp\cc28nhP0.s 			page 25


 680 0190 1021     		movs	r1, #16
 681 0192 2046     		mov	r0, r4
 682 0194 FFF7FEFF 		bl	lv_obj_has_flag
 683              	.LVL71:
 269:lvgl/src/core/lv_indev_scroll.c ****             /*If this object don't want to chain the scroll to the parent stop searching*/
 684              		.loc 1 269 11 discriminator 1 view .LVU222
 685 0198 0028     		cmp	r0, #0
 686 019a 7FF45AAF 		bne	.L22
 271:lvgl/src/core/lv_indev_scroll.c ****             if(lv_obj_has_flag(obj_act, LV_OBJ_FLAG_SCROLL_CHAIN_VER) == false && ver_en) break;
 687              		.loc 1 271 13 is_stmt 1 view .LVU223
 271:lvgl/src/core/lv_indev_scroll.c ****             if(lv_obj_has_flag(obj_act, LV_OBJ_FLAG_SCROLL_CHAIN_VER) == false && ver_en) break;
 688              		.loc 1 271 16 is_stmt 0 view .LVU224
 689 019e 4FF48071 		mov	r1, #256
 690 01a2 2046     		mov	r0, r4
 691 01a4 FFF7FEFF 		bl	lv_obj_has_flag
 692              	.LVL72:
 271:lvgl/src/core/lv_indev_scroll.c ****             if(lv_obj_has_flag(obj_act, LV_OBJ_FLAG_SCROLL_CHAIN_VER) == false && ver_en) break;
 693              		.loc 1 271 15 discriminator 1 view .LVU225
 694 01a8 08B9     		cbnz	r0, .L23
 271:lvgl/src/core/lv_indev_scroll.c ****             if(lv_obj_has_flag(obj_act, LV_OBJ_FLAG_SCROLL_CHAIN_VER) == false && ver_en) break;
 695              		.loc 1 271 80 discriminator 1 view .LVU226
 696 01aa 029B     		ldr	r3, [sp, #8]
 697 01ac 5BB9     		cbnz	r3, .L24
 698              	.L23:
 272:lvgl/src/core/lv_indev_scroll.c **** 
 699              		.loc 1 272 13 is_stmt 1 view .LVU227
 272:lvgl/src/core/lv_indev_scroll.c **** 
 700              		.loc 1 272 16 is_stmt 0 view .LVU228
 701 01ae 4FF40071 		mov	r1, #512
 702 01b2 2046     		mov	r0, r4
 703 01b4 FFF7FEFF 		bl	lv_obj_has_flag
 704              	.LVL73:
 272:lvgl/src/core/lv_indev_scroll.c **** 
 705              		.loc 1 272 15 discriminator 1 view .LVU229
 706 01b8 0028     		cmp	r0, #0
 707 01ba 7FF445AF 		bne	.L25
 272:lvgl/src/core/lv_indev_scroll.c **** 
 708              		.loc 1 272 80 discriminator 1 view .LVU230
 709 01be 019B     		ldr	r3, [sp, #4]
 710 01c0 002B     		cmp	r3, #0
 711 01c2 3FF441AF 		beq	.L25
 712              	.L24:
 272:lvgl/src/core/lv_indev_scroll.c **** 
 713              		.loc 1 272 80 discriminator 1 view .LVU231
 714              	.LBE50:
 338:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_dir = dir_candidate;
 715              		.loc 1 338 5 is_stmt 1 view .LVU232
 338:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_dir = dir_candidate;
 716              		.loc 1 338 7 is_stmt 0 view .LVU233
 717 01c6 069A     		ldr	r2, [sp, #24]
 718 01c8 6AB1     		cbz	r2, .L19
 339:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_obj = obj_candidate;
 719              		.loc 1 339 9 is_stmt 1 view .LVU234
 339:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_obj = obj_candidate;
 720              		.loc 1 339 40 is_stmt 0 view .LVU235
 721 01ca 9BF83C30 		ldrb	r3, [fp, #60]	@ zero_extendqisi2
 722 01ce 0799     		ldr	r1, [sp, #28]
ARM GAS  C:\usertemp\cc28nhP0.s 			page 26


 723 01d0 61F30303 		bfi	r3, r1, #0, #4
 724 01d4 8BF83C30 		strb	r3, [fp, #60]
 340:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_sum.x = 0;
 725              		.loc 1 340 9 is_stmt 1 view .LVU236
 340:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_sum.x = 0;
 726              		.loc 1 340 40 is_stmt 0 view .LVU237
 727 01d8 CBF82820 		str	r2, [fp, #40]
 341:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_sum.y = 0;
 728              		.loc 1 341 9 is_stmt 1 view .LVU238
 341:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_sum.y = 0;
 729              		.loc 1 341 42 is_stmt 0 view .LVU239
 730 01dc 0023     		movs	r3, #0
 731 01de ABF81430 		strh	r3, [fp, #20]	@ movhi
 342:lvgl/src/core/lv_indev_scroll.c ****     }
 732              		.loc 1 342 9 is_stmt 1 view .LVU240
 342:lvgl/src/core/lv_indev_scroll.c ****     }
 733              		.loc 1 342 42 is_stmt 0 view .LVU241
 734 01e2 ABF81630 		strh	r3, [fp, #22]	@ movhi
 345:lvgl/src/core/lv_indev_scroll.c **** }
 735              		.loc 1 345 5 is_stmt 1 view .LVU242
 736              	.LVL74:
 737              	.L19:
 346:lvgl/src/core/lv_indev_scroll.c **** 
 738              		.loc 1 346 1 is_stmt 0 view .LVU243
 739 01e6 0698     		ldr	r0, [sp, #24]
 740 01e8 09B0     		add	sp, sp, #36
 741              	.LCFI5:
 742              		.cfi_remember_state
 743              		.cfi_def_cfa_offset 36
 744              		@ sp needed
 745 01ea BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 746              	.LVL75:
 747              	.L68:
 748              	.LCFI6:
 749              		.cfi_restore_state
 750              	.LBB51:
 315:lvgl/src/core/lv_indev_scroll.c ****         if(sb <= 0) down_en = false;
 751              		.loc 1 315 27 discriminator 1 view .LVU244
 752 01ee 0023     		movs	r3, #0
 753 01f0 0393     		str	r3, [sp, #12]
 754              	.LVL76:
 315:lvgl/src/core/lv_indev_scroll.c ****         if(sb <= 0) down_en = false;
 755              		.loc 1 315 27 discriminator 1 view .LVU245
 756 01f2 95E7     		b	.L35
 757              	.LVL77:
 758              	.L69:
 316:lvgl/src/core/lv_indev_scroll.c ****         if(sl <= 0) left_en = false;
 759              		.loc 1 316 29 discriminator 1 view .LVU246
 760 01f4 0023     		movs	r3, #0
 761 01f6 0593     		str	r3, [sp, #20]
 762              	.LVL78:
 316:lvgl/src/core/lv_indev_scroll.c ****         if(sl <= 0) left_en = false;
 763              		.loc 1 316 29 discriminator 1 view .LVU247
 764 01f8 94E7     		b	.L36
 765              	.LVL79:
 766              	.L70:
 317:lvgl/src/core/lv_indev_scroll.c ****         if(sr <= 0) right_en = false;
ARM GAS  C:\usertemp\cc28nhP0.s 			page 27


 767              		.loc 1 317 29 discriminator 1 view .LVU248
 768 01fa 4FF00008 		mov	r8, #0
 769              	.LVL80:
 317:lvgl/src/core/lv_indev_scroll.c ****         if(sr <= 0) right_en = false;
 770              		.loc 1 317 29 discriminator 1 view .LVU249
 771 01fe 93E7     		b	.L37
 772              	.LVL81:
 773              	.L71:
 318:lvgl/src/core/lv_indev_scroll.c **** 
 774              		.loc 1 318 30 discriminator 1 view .LVU250
 775 0200 0023     		movs	r3, #0
 776 0202 0493     		str	r3, [sp, #16]
 777              	.LVL82:
 318:lvgl/src/core/lv_indev_scroll.c **** 
 778              		.loc 1 318 30 discriminator 1 view .LVU251
 779 0204 92E7     		b	.L38
 780              	.LVL83:
 781              	.L40:
 325:lvgl/src/core/lv_indev_scroll.c ****             break;
 782              		.loc 1 325 13 is_stmt 1 view .LVU252
 325:lvgl/src/core/lv_indev_scroll.c ****             break;
 783              		.loc 1 325 66 is_stmt 0 view .LVU253
 784 0206 029B     		ldr	r3, [sp, #8]
 785 0208 3BB1     		cbz	r3, .L62
 325:lvgl/src/core/lv_indev_scroll.c ****             break;
 786              		.loc 1 325 66 discriminator 1 view .LVU254
 787 020a 0322     		movs	r2, #3
 788              	.L44:
 325:lvgl/src/core/lv_indev_scroll.c ****             break;
 789              		.loc 1 325 44 discriminator 4 view .LVU255
 790 020c 9BF83C30 		ldrb	r3, [fp, #60]	@ zero_extendqisi2
 791 0210 62F30303 		bfi	r3, r2, #0, #4
 792 0214 8BF83C30 		strb	r3, [fp, #60]
 326:lvgl/src/core/lv_indev_scroll.c ****         }
 793              		.loc 1 326 13 is_stmt 1 view .LVU256
 794 0218 D5E7     		b	.L24
 795              	.L62:
 325:lvgl/src/core/lv_indev_scroll.c ****             break;
 796              		.loc 1 325 66 is_stmt 0 discriminator 2 view .LVU257
 797 021a 0C22     		movs	r2, #12
 798 021c F6E7     		b	.L44
 799              	.LVL84:
 800              	.L20:
 325:lvgl/src/core/lv_indev_scroll.c ****             break;
 801              		.loc 1 325 66 discriminator 2 view .LVU258
 802              	.LBE51:
 260:lvgl/src/core/lv_indev_scroll.c ****     if(LV_ABS(proc->types.pointer.scroll_sum.x) > LV_ABS(proc->types.pointer.scroll_sum.y)) {
 803              		.loc 1 260 10 view .LVU259
 804 021e 0023     		movs	r3, #0
 805 0220 0193     		str	r3, [sp, #4]
 262:lvgl/src/core/lv_indev_scroll.c ****     }
 806              		.loc 1 262 16 view .LVU260
 807 0222 0123     		movs	r3, #1
 808 0224 0293     		str	r3, [sp, #8]
 809 0226 0BE7     		b	.L21
 810              		.cfi_endproc
 811              	.LFE160:
ARM GAS  C:\usertemp\cc28nhP0.s 			page 28


 813              		.section	.text.find_snap_point_y,"ax",%progbits
 814              		.align	1
 815              		.syntax unified
 816              		.thumb
 817              		.thumb_func
 819              	find_snap_point_y:
 820              	.LVL85:
 821              	.LFB163:
 472:lvgl/src/core/lv_indev_scroll.c ****     lv_scroll_snap_t align = lv_obj_get_scroll_snap_y(obj);
 822              		.loc 1 472 1 is_stmt 1 view -0
 823              		.cfi_startproc
 824              		@ args = 0, pretend = 0, frame = 24
 825              		@ frame_needed = 0, uses_anonymous_args = 0
 472:lvgl/src/core/lv_indev_scroll.c ****     lv_scroll_snap_t align = lv_obj_get_scroll_snap_y(obj);
 826              		.loc 1 472 1 is_stmt 0 view .LVU262
 827 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 828              	.LCFI7:
 829              		.cfi_def_cfa_offset 36
 830              		.cfi_offset 4, -36
 831              		.cfi_offset 5, -32
 832              		.cfi_offset 6, -28
 833              		.cfi_offset 7, -24
 834              		.cfi_offset 8, -20
 835              		.cfi_offset 9, -16
 836              		.cfi_offset 10, -12
 837              		.cfi_offset 11, -8
 838              		.cfi_offset 14, -4
 839 0004 87B0     		sub	sp, sp, #28
 840              	.LCFI8:
 841              		.cfi_def_cfa_offset 64
 842 0006 0646     		mov	r6, r0
 843 0008 0191     		str	r1, [sp, #4]
 844 000a 9146     		mov	r9, r2
 845 000c 9A46     		mov	r10, r3
 473:lvgl/src/core/lv_indev_scroll.c ****     if(align == LV_SCROLL_SNAP_NONE) return 0;
 846              		.loc 1 473 5 is_stmt 1 view .LVU263
 473:lvgl/src/core/lv_indev_scroll.c ****     if(align == LV_SCROLL_SNAP_NONE) return 0;
 847              		.loc 1 473 30 is_stmt 0 view .LVU264
 848 000e FFF7FEFF 		bl	lv_obj_get_scroll_snap_y
 849              	.LVL86:
 474:lvgl/src/core/lv_indev_scroll.c **** 
 850              		.loc 1 474 5 is_stmt 1 view .LVU265
 474:lvgl/src/core/lv_indev_scroll.c **** 
 851              		.loc 1 474 7 is_stmt 0 view .LVU266
 852 0012 18B9     		cbnz	r0, .L86
 474:lvgl/src/core/lv_indev_scroll.c **** 
 853              		.loc 1 474 45 discriminator 1 view .LVU267
 854 0014 0020     		movs	r0, #0
 855              	.LVL87:
 856              	.L73:
 515:lvgl/src/core/lv_indev_scroll.c **** 
 857              		.loc 1 515 1 view .LVU268
 858 0016 07B0     		add	sp, sp, #28
 859              	.LCFI9:
 860              		.cfi_remember_state
 861              		.cfi_def_cfa_offset 36
 862              		@ sp needed
ARM GAS  C:\usertemp\cc28nhP0.s 			page 29


 863 0018 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 864              	.LVL88:
 865              	.L86:
 866              	.LCFI10:
 867              		.cfi_restore_state
 515:lvgl/src/core/lv_indev_scroll.c **** 
 868              		.loc 1 515 1 view .LVU269
 869 001c 8346     		mov	fp, r0
 476:lvgl/src/core/lv_indev_scroll.c **** 
 870              		.loc 1 476 5 is_stmt 1 view .LVU270
 871              	.LVL89:
 478:lvgl/src/core/lv_indev_scroll.c ****     lv_coord_t pad_bottom = lv_obj_get_style_pad_bottom(obj, LV_PART_MAIN);
 872              		.loc 1 478 5 view .LVU271
 873              	.LBB52:
 874              	.LBI52:
 875              		.file 2 "lvgl/src/core/lv_obj_style_gen.h"
   1:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_width(const struct _lv_obj_t * obj, uint32_t part)
   2:lvgl/src/core/lv_obj_style_gen.h **** {
   3:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_WIDTH);
   4:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
   5:lvgl/src/core/lv_obj_style_gen.h **** }
   6:lvgl/src/core/lv_obj_style_gen.h **** 
   7:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_min_width(const struct _lv_obj_t * obj, uint32_t part)
   8:lvgl/src/core/lv_obj_style_gen.h **** {
   9:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MIN_WIDTH);
  10:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  11:lvgl/src/core/lv_obj_style_gen.h **** }
  12:lvgl/src/core/lv_obj_style_gen.h **** 
  13:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_max_width(const struct _lv_obj_t * obj, uint32_t part)
  14:lvgl/src/core/lv_obj_style_gen.h **** {
  15:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MAX_WIDTH);
  16:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  17:lvgl/src/core/lv_obj_style_gen.h **** }
  18:lvgl/src/core/lv_obj_style_gen.h **** 
  19:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_height(const struct _lv_obj_t * obj, uint32_t part)
  20:lvgl/src/core/lv_obj_style_gen.h **** {
  21:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_HEIGHT);
  22:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  23:lvgl/src/core/lv_obj_style_gen.h **** }
  24:lvgl/src/core/lv_obj_style_gen.h **** 
  25:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_min_height(const struct _lv_obj_t * obj, uint32_t part)
  26:lvgl/src/core/lv_obj_style_gen.h **** {
  27:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MIN_HEIGHT);
  28:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  29:lvgl/src/core/lv_obj_style_gen.h **** }
  30:lvgl/src/core/lv_obj_style_gen.h **** 
  31:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_max_height(const struct _lv_obj_t * obj, uint32_t part)
  32:lvgl/src/core/lv_obj_style_gen.h **** {
  33:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MAX_HEIGHT);
  34:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  35:lvgl/src/core/lv_obj_style_gen.h **** }
  36:lvgl/src/core/lv_obj_style_gen.h **** 
  37:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_x(const struct _lv_obj_t * obj, uint32_t part)
  38:lvgl/src/core/lv_obj_style_gen.h **** {
  39:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_X);
  40:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  41:lvgl/src/core/lv_obj_style_gen.h **** }
ARM GAS  C:\usertemp\cc28nhP0.s 			page 30


  42:lvgl/src/core/lv_obj_style_gen.h **** 
  43:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_y(const struct _lv_obj_t * obj, uint32_t part)
  44:lvgl/src/core/lv_obj_style_gen.h **** {
  45:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_Y);
  46:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  47:lvgl/src/core/lv_obj_style_gen.h **** }
  48:lvgl/src/core/lv_obj_style_gen.h **** 
  49:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_align_t lv_obj_get_style_align(const struct _lv_obj_t * obj, uint32_t part)
  50:lvgl/src/core/lv_obj_style_gen.h **** {
  51:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ALIGN);
  52:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_align_t)v.num;
  53:lvgl/src/core/lv_obj_style_gen.h **** }
  54:lvgl/src/core/lv_obj_style_gen.h **** 
  55:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_width(const struct _lv_obj_t * obj, uint32_t pa
  56:lvgl/src/core/lv_obj_style_gen.h **** {
  57:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_WIDTH);
  58:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  59:lvgl/src/core/lv_obj_style_gen.h **** }
  60:lvgl/src/core/lv_obj_style_gen.h **** 
  61:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_height(const struct _lv_obj_t * obj, uint32_t p
  62:lvgl/src/core/lv_obj_style_gen.h **** {
  63:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_HEIGHT);
  64:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  65:lvgl/src/core/lv_obj_style_gen.h **** }
  66:lvgl/src/core/lv_obj_style_gen.h **** 
  67:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_translate_x(const struct _lv_obj_t * obj, uint32_t part)
  68:lvgl/src/core/lv_obj_style_gen.h **** {
  69:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSLATE_X);
  70:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  71:lvgl/src/core/lv_obj_style_gen.h **** }
  72:lvgl/src/core/lv_obj_style_gen.h **** 
  73:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_translate_y(const struct _lv_obj_t * obj, uint32_t part)
  74:lvgl/src/core/lv_obj_style_gen.h **** {
  75:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSLATE_Y);
  76:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  77:lvgl/src/core/lv_obj_style_gen.h **** }
  78:lvgl/src/core/lv_obj_style_gen.h **** 
  79:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_zoom(const struct _lv_obj_t * obj, uint32_t par
  80:lvgl/src/core/lv_obj_style_gen.h **** {
  81:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_ZOOM);
  82:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  83:lvgl/src/core/lv_obj_style_gen.h **** }
  84:lvgl/src/core/lv_obj_style_gen.h **** 
  85:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_angle(const struct _lv_obj_t * obj, uint32_t pa
  86:lvgl/src/core/lv_obj_style_gen.h **** {
  87:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_ANGLE);
  88:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  89:lvgl/src/core/lv_obj_style_gen.h **** }
  90:lvgl/src/core/lv_obj_style_gen.h **** 
  91:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_top(const struct _lv_obj_t * obj, uint32_t part)
 876              		.loc 2 91 26 view .LVU272
 877              	.LBB53:
  92:lvgl/src/core/lv_obj_style_gen.h **** {
  93:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_TOP);
 878              		.loc 2 93 5 view .LVU273
 879              		.loc 2 93 26 is_stmt 0 view .LVU274
 880 001e 41F61002 		movw	r2, #6160
ARM GAS  C:\usertemp\cc28nhP0.s 			page 31


 881 0022 0021     		movs	r1, #0
 882 0024 3046     		mov	r0, r6
 883              	.LVL90:
 884              		.loc 2 93 26 view .LVU275
 885 0026 FFF7FEFF 		bl	lv_obj_get_style_prop
 886              	.LVL91:
 887 002a 0290     		str	r0, [sp, #8]
  94:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 888              		.loc 2 94 5 is_stmt 1 view .LVU276
 889              		.loc 2 94 12 is_stmt 0 view .LVU277
 890 002c 03B2     		sxth	r3, r0
 891 002e 0593     		str	r3, [sp, #20]
 892              	.LVL92:
 893              		.loc 2 94 12 view .LVU278
 894              	.LBE53:
 895              	.LBE52:
 479:lvgl/src/core/lv_indev_scroll.c **** 
 896              		.loc 1 479 5 is_stmt 1 view .LVU279
 897              	.LBB54:
 898              	.LBI54:
  95:lvgl/src/core/lv_obj_style_gen.h **** }
  96:lvgl/src/core/lv_obj_style_gen.h **** 
  97:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_bottom(const struct _lv_obj_t * obj, uint32_t part)
 899              		.loc 2 97 26 view .LVU280
 900              	.LBB55:
  98:lvgl/src/core/lv_obj_style_gen.h **** {
  99:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_BOTTOM);
 901              		.loc 2 99 5 view .LVU281
 902              		.loc 2 99 26 is_stmt 0 view .LVU282
 903 0030 41F61102 		movw	r2, #6161
 904 0034 0021     		movs	r1, #0
 905 0036 3046     		mov	r0, r6
 906 0038 FFF7FEFF 		bl	lv_obj_get_style_prop
 907              	.LVL93:
 908 003c 0490     		str	r0, [sp, #16]
 100:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 909              		.loc 2 100 5 is_stmt 1 view .LVU283
 910              		.loc 2 100 12 is_stmt 0 view .LVU284
 911 003e 03B2     		sxth	r3, r0
 912 0040 0393     		str	r3, [sp, #12]
 913              	.LVL94:
 914              		.loc 2 100 12 view .LVU285
 915              	.LBE55:
 916              	.LBE54:
 481:lvgl/src/core/lv_indev_scroll.c ****     uint32_t child_cnt = lv_obj_get_child_cnt(obj);
 917              		.loc 1 481 5 is_stmt 1 view .LVU286
 482:lvgl/src/core/lv_indev_scroll.c ****     for(i = 0; i < child_cnt; i++) {
 918              		.loc 1 482 5 view .LVU287
 482:lvgl/src/core/lv_indev_scroll.c ****     for(i = 0; i < child_cnt; i++) {
 919              		.loc 1 482 26 is_stmt 0 view .LVU288
 920 0042 3046     		mov	r0, r6
 921 0044 FFF7FEFF 		bl	lv_obj_get_child_cnt
 922              	.LVL95:
 923 0048 0746     		mov	r7, r0
 924              	.LVL96:
 483:lvgl/src/core/lv_indev_scroll.c ****         lv_obj_t * child = obj->spec_attr->children[i];
 925              		.loc 1 483 5 is_stmt 1 view .LVU289
ARM GAS  C:\usertemp\cc28nhP0.s 			page 32


 483:lvgl/src/core/lv_indev_scroll.c ****         lv_obj_t * child = obj->spec_attr->children[i];
 926              		.loc 1 483 11 is_stmt 0 view .LVU290
 927 004a 0024     		movs	r4, #0
 476:lvgl/src/core/lv_indev_scroll.c **** 
 928              		.loc 1 476 16 view .LVU291
 929 004c 41F6FF78 		movw	r8, #8191
 483:lvgl/src/core/lv_indev_scroll.c ****         lv_obj_t * child = obj->spec_attr->children[i];
 930              		.loc 1 483 5 view .LVU292
 931 0050 28E0     		b	.L74
 932              	.LVL97:
 933              	.L76:
 934              	.LBB56:
 935              	.LBB57:
 495:lvgl/src/core/lv_indev_scroll.c ****                     y_parent = obj->coords.y2 - pad_bottom;
 936              		.loc 1 495 21 is_stmt 1 view .LVU293
 495:lvgl/src/core/lv_indev_scroll.c ****                     y_parent = obj->coords.y2 - pad_bottom;
 937              		.loc 1 495 29 is_stmt 0 view .LVU294
 938 0052 B5F91A30 		ldrsh	r3, [r5, #26]
 939              	.LVL98:
 496:lvgl/src/core/lv_indev_scroll.c ****                     break;
 940              		.loc 1 496 21 is_stmt 1 view .LVU295
 496:lvgl/src/core/lv_indev_scroll.c ****                     break;
 941              		.loc 1 496 43 is_stmt 0 view .LVU296
 942 0056 728B     		ldrh	r2, [r6, #26]
 496:lvgl/src/core/lv_indev_scroll.c ****                     break;
 943              		.loc 1 496 47 view .LVU297
 944 0058 0499     		ldr	r1, [sp, #16]
 945 005a 521A     		subs	r2, r2, r1
 496:lvgl/src/core/lv_indev_scroll.c ****                     break;
 946              		.loc 1 496 30 view .LVU298
 947 005c 12B2     		sxth	r2, r2
 948              	.LVL99:
 497:lvgl/src/core/lv_indev_scroll.c ****                 case LV_SCROLL_SNAP_CENTER:
 949              		.loc 1 497 21 is_stmt 1 view .LVU299
 950 005e 43E0     		b	.L78
 951              	.LVL100:
 952              	.L77:
 499:lvgl/src/core/lv_indev_scroll.c ****                     y_parent = obj->coords.y1 + pad_top + (lv_area_get_height(&obj->coords) - pad_t
 953              		.loc 1 499 21 view .LVU300
 499:lvgl/src/core/lv_indev_scroll.c ****                     y_parent = obj->coords.y1 + pad_top + (lv_area_get_height(&obj->coords) - pad_t
 954              		.loc 1 499 44 is_stmt 0 view .LVU301
 955 0060 EB8A     		ldrh	r3, [r5, #22]
 956              	.LVL101:
 957              	.LBB58:
 958              	.LBI58:
 959              		.file 3 "lvgl/src/core/../misc/../font/../misc/lv_area.h"
   1:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /**
   2:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @file lv_area.h
   3:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  *
   4:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  */
   5:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
   6:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #ifndef LV_AREA_H
   7:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #define LV_AREA_H
   8:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
   9:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #ifdef __cplusplus
  10:lvgl/src/core/../misc/../font/../misc/lv_area.h **** extern "C" {
  11:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #endif
ARM GAS  C:\usertemp\cc28nhP0.s 			page 33


  12:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  13:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /*********************
  14:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  *      INCLUDES
  15:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  *********************/
  16:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #include <stdbool.h>
  18:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #include <stdint.h>
  19:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  20:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /*********************
  21:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  *      DEFINES
  22:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  *********************/
  23:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  24:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #if LV_USE_LARGE_COORD
  25:lvgl/src/core/../misc/../font/../misc/lv_area.h **** typedef int32_t lv_coord_t;
  26:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #else
  27:lvgl/src/core/../misc/../font/../misc/lv_area.h **** typedef int16_t lv_coord_t;
  28:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #endif
  29:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  30:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /**********************
  31:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  *      TYPEDEFS
  32:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  **********************/
  33:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  34:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /**
  35:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * Represents a point on the screen.
  36:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  */
  37:lvgl/src/core/../misc/../font/../misc/lv_area.h **** typedef struct {
  38:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     lv_coord_t x;
  39:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     lv_coord_t y;
  40:lvgl/src/core/../misc/../font/../misc/lv_area.h **** } lv_point_t;
  41:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  42:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /** Represents an area of the screen.*/
  43:lvgl/src/core/../misc/../font/../misc/lv_area.h **** typedef struct {
  44:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     lv_coord_t x1;
  45:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     lv_coord_t y1;
  46:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     lv_coord_t x2;
  47:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     lv_coord_t y2;
  48:lvgl/src/core/../misc/../font/../misc/lv_area.h **** } lv_area_t;
  49:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  50:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /** Alignments*/
  51:lvgl/src/core/../misc/../font/../misc/lv_area.h **** enum {
  52:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_DEFAULT = 0,
  53:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_TOP_LEFT,
  54:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_TOP_MID,
  55:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_TOP_RIGHT,
  56:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_LEFT,
  57:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_MID,
  58:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_RIGHT,
  59:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_LEFT_MID,
  60:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_RIGHT_MID,
  61:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_CENTER,
  62:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  63:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  64:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  65:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  66:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  67:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  68:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
ARM GAS  C:\usertemp\cc28nhP0.s 			page 34


  69:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  70:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  71:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  72:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  73:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  74:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  75:lvgl/src/core/../misc/../font/../misc/lv_area.h **** };
  76:lvgl/src/core/../misc/../font/../misc/lv_area.h **** typedef uint8_t lv_align_t;
  77:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  78:lvgl/src/core/../misc/../font/../misc/lv_area.h **** enum {
  79:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_NONE     = 0x00,
  80:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_LEFT     = (1 << 0),
  81:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_RIGHT    = (1 << 1),
  82:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_TOP      = (1 << 2),
  83:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_BOTTOM   = (1 << 3),
  84:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_HOR      = LV_DIR_LEFT | LV_DIR_RIGHT,
  85:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_VER      = LV_DIR_TOP | LV_DIR_BOTTOM,
  86:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_ALL      = LV_DIR_HOR | LV_DIR_VER,
  87:lvgl/src/core/../misc/../font/../misc/lv_area.h **** };
  88:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  89:lvgl/src/core/../misc/../font/../misc/lv_area.h **** typedef uint8_t lv_dir_t;
  90:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  91:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /**********************
  92:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * GLOBAL PROTOTYPES
  93:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  **********************/
  94:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  95:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /**
  96:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * Initialize an area
  97:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param area_p pointer to an area
  98:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param x1 left coordinate of the area
  99:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param y1 top coordinate of the area
 100:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param x2 right coordinate of the area
 101:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param y2 bottom coordinate of the area
 102:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  */
 103:lvgl/src/core/../misc/../font/../misc/lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
 104:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
 105:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /**
 106:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * Copy an area
 107:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param dest pointer to the destination area
 108:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param src pointer to the source area
 109:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  */
 110:lvgl/src/core/../misc/../font/../misc/lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
 111:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 112:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x1 = src->x1;
 113:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 114:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 115:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 116:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 117:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
 118:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /**
 119:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * Get the width of an area
 120:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param area_p pointer to an area
 121:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @return the width of the area (if x1 == x2 -> width = 1)
 122:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  */
 123:lvgl/src/core/../misc/../font/../misc/lv_area.h **** static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)
 124:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     return (lv_coord_t)(area_p->x2 - area_p->x1 + 1);
ARM GAS  C:\usertemp\cc28nhP0.s 			page 35


 126:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 127:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
 128:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /**
 129:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * Get the height of an area
 130:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param area_p pointer to an area
 131:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @return the height of the area (if y1 == y2 -> height = 1)
 132:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  */
 133:lvgl/src/core/../misc/../font/../misc/lv_area.h **** static inline lv_coord_t lv_area_get_height(const lv_area_t * area_p)
 960              		.loc 3 133 26 is_stmt 1 view .LVU302
 961              	.LBB59:
 134:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 135:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     return (lv_coord_t)(area_p->y2 - area_p->y1 + 1);
 962              		.loc 3 135 5 view .LVU303
 963              		.loc 3 135 31 is_stmt 0 view .LVU304
 964 0062 6A8B     		ldrh	r2, [r5, #26]
 965              		.loc 3 135 36 view .LVU305
 966 0064 D21A     		subs	r2, r2, r3
 967 0066 92B2     		uxth	r2, r2
 968              		.loc 3 135 49 view .LVU306
 969 0068 0132     		adds	r2, r2, #1
 970              		.loc 3 135 12 view .LVU307
 971 006a 12B2     		sxth	r2, r2
 972              	.LVL102:
 973              		.loc 3 135 12 view .LVU308
 974              	.LBE59:
 975              	.LBE58:
 499:lvgl/src/core/lv_indev_scroll.c ****                     y_parent = obj->coords.y1 + pad_top + (lv_area_get_height(&obj->coords) - pad_t
 976              		.loc 1 499 48 discriminator 1 view .LVU309
 977 006c 002A     		cmp	r2, #0
 978 006e 14DB     		blt	.L87
 979              	.L79:
 499:lvgl/src/core/lv_indev_scroll.c ****                     y_parent = obj->coords.y1 + pad_top + (lv_area_get_height(&obj->coords) - pad_t
 980              		.loc 1 499 48 discriminator 1 view .LVU310
 981 0070 03EB6203 		add	r3, r3, r2, asr #1
 499:lvgl/src/core/lv_indev_scroll.c ****                     y_parent = obj->coords.y1 + pad_top + (lv_area_get_height(&obj->coords) - pad_t
 982              		.loc 1 499 29 discriminator 1 view .LVU311
 983 0074 1BB2     		sxth	r3, r3
 984              	.LVL103:
 500:lvgl/src/core/lv_indev_scroll.c ****                     break;
 985              		.loc 1 500 21 is_stmt 1 view .LVU312
 500:lvgl/src/core/lv_indev_scroll.c ****                     break;
 986              		.loc 1 500 43 is_stmt 0 view .LVU313
 987 0076 F08A     		ldrh	r0, [r6, #22]
 500:lvgl/src/core/lv_indev_scroll.c ****                     break;
 988              		.loc 1 500 47 view .LVU314
 989 0078 029A     		ldr	r2, [sp, #8]
 990 007a 8218     		adds	r2, r0, r2
 991 007c 92B2     		uxth	r2, r2
 992              	.LVL104:
 993              	.LBB60:
 994              	.LBI60:
 133:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 995              		.loc 3 133 26 is_stmt 1 view .LVU315
 996              	.LBB61:
 997              		.loc 3 135 5 view .LVU316
 998              		.loc 3 135 31 is_stmt 0 view .LVU317
 999 007e 718B     		ldrh	r1, [r6, #26]
ARM GAS  C:\usertemp\cc28nhP0.s 			page 36


 1000              		.loc 3 135 36 view .LVU318
 1001 0080 091A     		subs	r1, r1, r0
 1002 0082 89B2     		uxth	r1, r1
 1003              		.loc 3 135 49 view .LVU319
 1004 0084 0131     		adds	r1, r1, #1
 1005              		.loc 3 135 12 view .LVU320
 1006 0086 09B2     		sxth	r1, r1
 1007              	.LVL105:
 1008              		.loc 3 135 12 view .LVU321
 1009              	.LBE61:
 1010              	.LBE60:
 500:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1011              		.loc 1 500 93 discriminator 1 view .LVU322
 1012 0088 0598     		ldr	r0, [sp, #20]
 1013 008a 091A     		subs	r1, r1, r0
 500:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1014              		.loc 1 500 117 discriminator 1 view .LVU323
 1015 008c 0398     		ldr	r0, [sp, #12]
 1016 008e 091A     		subs	r1, r1, r0
 1017 0090 05D4     		bmi	.L88
 1018              	.L80:
 500:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1019              		.loc 1 500 57 discriminator 1 view .LVU324
 1020 0092 02EB6102 		add	r2, r2, r1, asr #1
 500:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1021              		.loc 1 500 30 discriminator 1 view .LVU325
 1022 0096 12B2     		sxth	r2, r2
 1023              	.LVL106:
 501:lvgl/src/core/lv_indev_scroll.c ****                 default:
 1024              		.loc 1 501 21 is_stmt 1 view .LVU326
 1025 0098 26E0     		b	.L78
 1026              	.LVL107:
 1027              	.L87:
 499:lvgl/src/core/lv_indev_scroll.c ****                     y_parent = obj->coords.y1 + pad_top + (lv_area_get_height(&obj->coords) - pad_t
 1028              		.loc 1 499 48 is_stmt 0 discriminator 1 view .LVU327
 1029 009a 0132     		adds	r2, r2, #1
 1030 009c E8E7     		b	.L79
 1031              	.LVL108:
 1032              	.L88:
 500:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1033              		.loc 1 500 117 discriminator 1 view .LVU328
 1034 009e 0131     		adds	r1, r1, #1
 1035 00a0 F7E7     		b	.L80
 1036              	.LVL109:
 1037              	.L75:
 500:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1038              		.loc 1 500 117 discriminator 1 view .LVU329
 1039              	.LBE57:
 1040              	.LBE56:
 483:lvgl/src/core/lv_indev_scroll.c ****         lv_obj_t * child = obj->spec_attr->children[i];
 1041              		.loc 1 483 32 is_stmt 1 discriminator 2 view .LVU330
 1042 00a2 0134     		adds	r4, r4, #1
 1043              	.LVL110:
 1044              	.L74:
 483:lvgl/src/core/lv_indev_scroll.c ****         lv_obj_t * child = obj->spec_attr->children[i];
 1045              		.loc 1 483 18 discriminator 1 view .LVU331
 1046 00a4 BC42     		cmp	r4, r7
ARM GAS  C:\usertemp\cc28nhP0.s 			page 37


 1047 00a6 3CD2     		bcs	.L89
 1048              	.LBB64:
 484:lvgl/src/core/lv_indev_scroll.c ****         if(lv_obj_has_flag_any(child, LV_OBJ_FLAG_HIDDEN | LV_OBJ_FLAG_FLOATING)) continue;
 1049              		.loc 1 484 9 view .LVU332
 484:lvgl/src/core/lv_indev_scroll.c ****         if(lv_obj_has_flag_any(child, LV_OBJ_FLAG_HIDDEN | LV_OBJ_FLAG_FLOATING)) continue;
 1050              		.loc 1 484 31 is_stmt 0 view .LVU333
 1051 00a8 B368     		ldr	r3, [r6, #8]
 484:lvgl/src/core/lv_indev_scroll.c ****         if(lv_obj_has_flag_any(child, LV_OBJ_FLAG_HIDDEN | LV_OBJ_FLAG_FLOATING)) continue;
 1052              		.loc 1 484 42 view .LVU334
 1053 00aa 1B68     		ldr	r3, [r3]
 484:lvgl/src/core/lv_indev_scroll.c ****         if(lv_obj_has_flag_any(child, LV_OBJ_FLAG_HIDDEN | LV_OBJ_FLAG_FLOATING)) continue;
 1054              		.loc 1 484 20 view .LVU335
 1055 00ac 53F82450 		ldr	r5, [r3, r4, lsl #2]
 1056              	.LVL111:
 485:lvgl/src/core/lv_indev_scroll.c ****         if(lv_obj_has_flag(child, LV_OBJ_FLAG_SNAPPABLE)) {
 1057              		.loc 1 485 9 is_stmt 1 view .LVU336
 485:lvgl/src/core/lv_indev_scroll.c ****         if(lv_obj_has_flag(child, LV_OBJ_FLAG_SNAPPABLE)) {
 1058              		.loc 1 485 12 is_stmt 0 view .LVU337
 1059 00b0 2149     		ldr	r1, .L90
 1060 00b2 2846     		mov	r0, r5
 1061 00b4 FFF7FEFF 		bl	lv_obj_has_flag_any
 1062              	.LVL112:
 485:lvgl/src/core/lv_indev_scroll.c ****         if(lv_obj_has_flag(child, LV_OBJ_FLAG_SNAPPABLE)) {
 1063              		.loc 1 485 11 discriminator 1 view .LVU338
 1064 00b8 0028     		cmp	r0, #0
 1065 00ba F2D1     		bne	.L75
 486:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t y_child = 0;
 1066              		.loc 1 486 9 is_stmt 1 view .LVU339
 486:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t y_child = 0;
 1067              		.loc 1 486 12 is_stmt 0 view .LVU340
 1068 00bc 4FF48051 		mov	r1, #4096
 1069 00c0 2846     		mov	r0, r5
 1070 00c2 FFF7FEFF 		bl	lv_obj_has_flag
 1071              	.LVL113:
 486:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t y_child = 0;
 1072              		.loc 1 486 11 discriminator 1 view .LVU341
 1073 00c6 0028     		cmp	r0, #0
 1074 00c8 EBD0     		beq	.L75
 1075              	.LBB63:
 487:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t y_parent = 0;
 1076              		.loc 1 487 13 is_stmt 1 view .LVU342
 1077              	.LVL114:
 488:lvgl/src/core/lv_indev_scroll.c ****             switch(align) {
 1078              		.loc 1 488 13 view .LVU343
 489:lvgl/src/core/lv_indev_scroll.c ****                 case LV_SCROLL_SNAP_START:
 1079              		.loc 1 489 13 view .LVU344
 1080 00ca BBF1020F 		cmp	fp, #2
 1081 00ce C0D0     		beq	.L76
 1082 00d0 BBF1030F 		cmp	fp, #3
 1083 00d4 C4D0     		beq	.L77
 1084 00d6 BBF1010F 		cmp	fp, #1
 1085 00da E2D1     		bne	.L75
 491:lvgl/src/core/lv_indev_scroll.c ****                     y_parent = obj->coords.y1 + pad_top;
 1086              		.loc 1 491 21 view .LVU345
 491:lvgl/src/core/lv_indev_scroll.c ****                     y_parent = obj->coords.y1 + pad_top;
 1087              		.loc 1 491 29 is_stmt 0 view .LVU346
 1088 00dc B5F91630 		ldrsh	r3, [r5, #22]
ARM GAS  C:\usertemp\cc28nhP0.s 			page 38


 1089              	.LVL115:
 492:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1090              		.loc 1 492 21 is_stmt 1 view .LVU347
 492:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1091              		.loc 1 492 43 is_stmt 0 view .LVU348
 1092 00e0 F28A     		ldrh	r2, [r6, #22]
 492:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1093              		.loc 1 492 47 view .LVU349
 1094 00e2 0299     		ldr	r1, [sp, #8]
 1095 00e4 0A44     		add	r2, r2, r1
 492:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1096              		.loc 1 492 30 view .LVU350
 1097 00e6 12B2     		sxth	r2, r2
 1098              	.LVL116:
 493:lvgl/src/core/lv_indev_scroll.c ****                 case LV_SCROLL_SNAP_END:
 1099              		.loc 1 493 21 is_stmt 1 view .LVU351
 1100              	.L78:
 506:lvgl/src/core/lv_indev_scroll.c ****             if(y_child >= min && y_child <= max) {
 1101              		.loc 1 506 13 view .LVU352
 506:lvgl/src/core/lv_indev_scroll.c ****             if(y_child >= min && y_child <= max) {
 1102              		.loc 1 506 21 is_stmt 0 view .LVU353
 1103 00e8 5344     		add	r3, r3, r10
 1104              	.LVL117:
 506:lvgl/src/core/lv_indev_scroll.c ****             if(y_child >= min && y_child <= max) {
 1105              		.loc 1 506 21 view .LVU354
 1106 00ea 99B2     		uxth	r1, r3
 1107 00ec 1BB2     		sxth	r3, r3
 1108              	.LVL118:
 507:lvgl/src/core/lv_indev_scroll.c ****                 lv_coord_t y = y_child -  y_parent;
 1109              		.loc 1 507 13 is_stmt 1 view .LVU355
 507:lvgl/src/core/lv_indev_scroll.c ****                 lv_coord_t y = y_child -  y_parent;
 1110              		.loc 1 507 31 is_stmt 0 view .LVU356
 1111 00ee 0198     		ldr	r0, [sp, #4]
 1112 00f0 8342     		cmp	r3, r0
 1113 00f2 B4BF     		ite	lt
 1114 00f4 0020     		movlt	r0, #0
 1115 00f6 0120     		movge	r0, #1
 1116 00f8 4B45     		cmp	r3, r9
 1117 00fa C8BF     		it	gt
 1118 00fc 0020     		movgt	r0, #0
 507:lvgl/src/core/lv_indev_scroll.c ****                 lv_coord_t y = y_child -  y_parent;
 1119              		.loc 1 507 15 view .LVU357
 1120 00fe 0028     		cmp	r0, #0
 1121 0100 CFD0     		beq	.L75
 1122              	.LBB62:
 508:lvgl/src/core/lv_indev_scroll.c ****                 if(LV_ABS(y) < LV_ABS(dist)) dist = y;
 1123              		.loc 1 508 17 is_stmt 1 view .LVU358
 508:lvgl/src/core/lv_indev_scroll.c ****                 if(LV_ABS(y) < LV_ABS(dist)) dist = y;
 1124              		.loc 1 508 40 is_stmt 0 view .LVU359
 1125 0102 891A     		subs	r1, r1, r2
 508:lvgl/src/core/lv_indev_scroll.c ****                 if(LV_ABS(y) < LV_ABS(dist)) dist = y;
 1126              		.loc 1 508 28 view .LVU360
 1127 0104 09B2     		sxth	r1, r1
 1128              	.LVL119:
 509:lvgl/src/core/lv_indev_scroll.c ****             }
 1129              		.loc 1 509 17 is_stmt 1 view .LVU361
 509:lvgl/src/core/lv_indev_scroll.c ****             }
ARM GAS  C:\usertemp\cc28nhP0.s 			page 39


 1130              		.loc 1 509 20 is_stmt 0 view .LVU362
 1131 0106 81EAE172 		eor	r2, r1, r1, asr #31
 1132              	.LVL120:
 509:lvgl/src/core/lv_indev_scroll.c ****             }
 1133              		.loc 1 509 20 view .LVU363
 1134 010a A2EBE172 		sub	r2, r2, r1, asr #31
 1135 010e 92B2     		uxth	r2, r2
 509:lvgl/src/core/lv_indev_scroll.c ****             }
 1136              		.loc 1 509 32 view .LVU364
 1137 0110 88EAE873 		eor	r3, r8, r8, asr #31
 1138              	.LVL121:
 509:lvgl/src/core/lv_indev_scroll.c ****             }
 1139              		.loc 1 509 32 view .LVU365
 1140 0114 A3EBE873 		sub	r3, r3, r8, asr #31
 1141 0118 9BB2     		uxth	r3, r3
 509:lvgl/src/core/lv_indev_scroll.c ****             }
 1142              		.loc 1 509 19 view .LVU366
 1143 011a 9A42     		cmp	r2, r3
 1144 011c C1D2     		bcs	.L75
 509:lvgl/src/core/lv_indev_scroll.c ****             }
 1145              		.loc 1 509 51 discriminator 1 view .LVU367
 1146 011e 8846     		mov	r8, r1
 1147              	.LVL122:
 509:lvgl/src/core/lv_indev_scroll.c ****             }
 1148              		.loc 1 509 51 discriminator 1 view .LVU368
 1149 0120 BFE7     		b	.L75
 1150              	.LVL123:
 1151              	.L89:
 509:lvgl/src/core/lv_indev_scroll.c ****             }
 1152              		.loc 1 509 51 discriminator 1 view .LVU369
 1153              	.LBE62:
 1154              	.LBE63:
 1155              	.LBE64:
 514:lvgl/src/core/lv_indev_scroll.c **** }
 1156              		.loc 1 514 5 is_stmt 1 view .LVU370
 514:lvgl/src/core/lv_indev_scroll.c **** }
 1157              		.loc 1 514 37 is_stmt 0 view .LVU371
 1158 0122 41F6FF73 		movw	r3, #8191
 1159 0126 9845     		cmp	r8, r3
 1160 0128 03D0     		beq	.L84
 514:lvgl/src/core/lv_indev_scroll.c **** }
 1161              		.loc 1 514 37 discriminator 1 view .LVU372
 1162 012a C8F10000 		rsb	r0, r8, #0
 1163 012e 00B2     		sxth	r0, r0
 1164 0130 71E7     		b	.L73
 1165              	.L84:
 514:lvgl/src/core/lv_indev_scroll.c **** }
 1166              		.loc 1 514 37 discriminator 2 view .LVU373
 1167 0132 0020     		movs	r0, #0
 1168 0134 6FE7     		b	.L73
 1169              	.L91:
 1170 0136 00BF     		.align	2
 1171              	.L90:
 1172 0138 01000400 		.word	262145
 1173              		.cfi_endproc
 1174              	.LFE163:
 1176              		.section	.text.find_snap_point_x,"ax",%progbits
ARM GAS  C:\usertemp\cc28nhP0.s 			page 40


 1177              		.align	1
 1178              		.syntax unified
 1179              		.thumb
 1180              		.thumb_func
 1182              	find_snap_point_x:
 1183              	.LVL124:
 1184              	.LFB162:
 417:lvgl/src/core/lv_indev_scroll.c ****     lv_scroll_snap_t align = lv_obj_get_scroll_snap_x(obj);
 1185              		.loc 1 417 1 is_stmt 1 view -0
 1186              		.cfi_startproc
 1187              		@ args = 0, pretend = 0, frame = 24
 1188              		@ frame_needed = 0, uses_anonymous_args = 0
 417:lvgl/src/core/lv_indev_scroll.c ****     lv_scroll_snap_t align = lv_obj_get_scroll_snap_x(obj);
 1189              		.loc 1 417 1 is_stmt 0 view .LVU375
 1190 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1191              	.LCFI11:
 1192              		.cfi_def_cfa_offset 36
 1193              		.cfi_offset 4, -36
 1194              		.cfi_offset 5, -32
 1195              		.cfi_offset 6, -28
 1196              		.cfi_offset 7, -24
 1197              		.cfi_offset 8, -20
 1198              		.cfi_offset 9, -16
 1199              		.cfi_offset 10, -12
 1200              		.cfi_offset 11, -8
 1201              		.cfi_offset 14, -4
 1202 0004 87B0     		sub	sp, sp, #28
 1203              	.LCFI12:
 1204              		.cfi_def_cfa_offset 64
 1205 0006 0646     		mov	r6, r0
 1206 0008 0191     		str	r1, [sp, #4]
 1207 000a 9146     		mov	r9, r2
 1208 000c 9A46     		mov	r10, r3
 418:lvgl/src/core/lv_indev_scroll.c ****     if(align == LV_SCROLL_SNAP_NONE) return 0;
 1209              		.loc 1 418 5 is_stmt 1 view .LVU376
 418:lvgl/src/core/lv_indev_scroll.c ****     if(align == LV_SCROLL_SNAP_NONE) return 0;
 1210              		.loc 1 418 30 is_stmt 0 view .LVU377
 1211 000e FFF7FEFF 		bl	lv_obj_get_scroll_snap_x
 1212              	.LVL125:
 419:lvgl/src/core/lv_indev_scroll.c **** 
 1213              		.loc 1 419 5 is_stmt 1 view .LVU378
 419:lvgl/src/core/lv_indev_scroll.c **** 
 1214              		.loc 1 419 7 is_stmt 0 view .LVU379
 1215 0012 18B9     		cbnz	r0, .L106
 419:lvgl/src/core/lv_indev_scroll.c **** 
 1216              		.loc 1 419 45 discriminator 1 view .LVU380
 1217 0014 0020     		movs	r0, #0
 1218              	.LVL126:
 1219              	.L93:
 460:lvgl/src/core/lv_indev_scroll.c **** 
 1220              		.loc 1 460 1 view .LVU381
 1221 0016 07B0     		add	sp, sp, #28
 1222              	.LCFI13:
 1223              		.cfi_remember_state
 1224              		.cfi_def_cfa_offset 36
 1225              		@ sp needed
 1226 0018 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
ARM GAS  C:\usertemp\cc28nhP0.s 			page 41


 1227              	.LVL127:
 1228              	.L106:
 1229              	.LCFI14:
 1230              		.cfi_restore_state
 460:lvgl/src/core/lv_indev_scroll.c **** 
 1231              		.loc 1 460 1 view .LVU382
 1232 001c 8346     		mov	fp, r0
 421:lvgl/src/core/lv_indev_scroll.c **** 
 1233              		.loc 1 421 5 is_stmt 1 view .LVU383
 1234              	.LVL128:
 423:lvgl/src/core/lv_indev_scroll.c ****     lv_coord_t pad_right = lv_obj_get_style_pad_right(obj, LV_PART_MAIN);
 1235              		.loc 1 423 5 view .LVU384
 1236              	.LBB65:
 1237              	.LBI65:
 101:lvgl/src/core/lv_obj_style_gen.h **** }
 102:lvgl/src/core/lv_obj_style_gen.h **** 
 103:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_left(const struct _lv_obj_t * obj, uint32_t part)
 1238              		.loc 2 103 26 view .LVU385
 1239              	.LBB66:
 104:lvgl/src/core/lv_obj_style_gen.h **** {
 105:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_LEFT);
 1240              		.loc 2 105 5 view .LVU386
 1241              		.loc 2 105 26 is_stmt 0 view .LVU387
 1242 001e 41F61202 		movw	r2, #6162
 1243 0022 0021     		movs	r1, #0
 1244 0024 3046     		mov	r0, r6
 1245              	.LVL129:
 1246              		.loc 2 105 26 view .LVU388
 1247 0026 FFF7FEFF 		bl	lv_obj_get_style_prop
 1248              	.LVL130:
 1249 002a 0290     		str	r0, [sp, #8]
 106:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1250              		.loc 2 106 5 is_stmt 1 view .LVU389
 1251              		.loc 2 106 12 is_stmt 0 view .LVU390
 1252 002c 03B2     		sxth	r3, r0
 1253 002e 0593     		str	r3, [sp, #20]
 1254              	.LVL131:
 1255              		.loc 2 106 12 view .LVU391
 1256              	.LBE66:
 1257              	.LBE65:
 424:lvgl/src/core/lv_indev_scroll.c **** 
 1258              		.loc 1 424 5 is_stmt 1 view .LVU392
 1259              	.LBB67:
 1260              	.LBI67:
 107:lvgl/src/core/lv_obj_style_gen.h **** }
 108:lvgl/src/core/lv_obj_style_gen.h **** 
 109:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_right(const struct _lv_obj_t * obj, uint32_t part)
 1261              		.loc 2 109 26 view .LVU393
 1262              	.LBB68:
 110:lvgl/src/core/lv_obj_style_gen.h **** {
 111:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_RIGHT);
 1263              		.loc 2 111 5 view .LVU394
 1264              		.loc 2 111 26 is_stmt 0 view .LVU395
 1265 0030 41F61302 		movw	r2, #6163
 1266 0034 0021     		movs	r1, #0
 1267 0036 3046     		mov	r0, r6
 1268 0038 FFF7FEFF 		bl	lv_obj_get_style_prop
ARM GAS  C:\usertemp\cc28nhP0.s 			page 42


 1269              	.LVL132:
 1270 003c 0490     		str	r0, [sp, #16]
 112:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1271              		.loc 2 112 5 is_stmt 1 view .LVU396
 1272              		.loc 2 112 12 is_stmt 0 view .LVU397
 1273 003e 03B2     		sxth	r3, r0
 1274 0040 0393     		str	r3, [sp, #12]
 1275              	.LVL133:
 1276              		.loc 2 112 12 view .LVU398
 1277              	.LBE68:
 1278              	.LBE67:
 426:lvgl/src/core/lv_indev_scroll.c ****     uint32_t child_cnt = lv_obj_get_child_cnt(obj);
 1279              		.loc 1 426 5 is_stmt 1 view .LVU399
 427:lvgl/src/core/lv_indev_scroll.c ****     for(i = 0; i < child_cnt; i++) {
 1280              		.loc 1 427 5 view .LVU400
 427:lvgl/src/core/lv_indev_scroll.c ****     for(i = 0; i < child_cnt; i++) {
 1281              		.loc 1 427 26 is_stmt 0 view .LVU401
 1282 0042 3046     		mov	r0, r6
 1283 0044 FFF7FEFF 		bl	lv_obj_get_child_cnt
 1284              	.LVL134:
 1285 0048 0746     		mov	r7, r0
 1286              	.LVL135:
 428:lvgl/src/core/lv_indev_scroll.c ****         lv_obj_t * child = obj->spec_attr->children[i];
 1287              		.loc 1 428 5 is_stmt 1 view .LVU402
 428:lvgl/src/core/lv_indev_scroll.c ****         lv_obj_t * child = obj->spec_attr->children[i];
 1288              		.loc 1 428 11 is_stmt 0 view .LVU403
 1289 004a 0024     		movs	r4, #0
 421:lvgl/src/core/lv_indev_scroll.c **** 
 1290              		.loc 1 421 16 view .LVU404
 1291 004c 41F6FF78 		movw	r8, #8191
 428:lvgl/src/core/lv_indev_scroll.c ****         lv_obj_t * child = obj->spec_attr->children[i];
 1292              		.loc 1 428 5 view .LVU405
 1293 0050 28E0     		b	.L94
 1294              	.LVL136:
 1295              	.L96:
 1296              	.LBB69:
 1297              	.LBB70:
 440:lvgl/src/core/lv_indev_scroll.c ****                     x_parent = obj->coords.x2 - pad_right;
 1298              		.loc 1 440 21 is_stmt 1 view .LVU406
 440:lvgl/src/core/lv_indev_scroll.c ****                     x_parent = obj->coords.x2 - pad_right;
 1299              		.loc 1 440 29 is_stmt 0 view .LVU407
 1300 0052 B5F91830 		ldrsh	r3, [r5, #24]
 1301              	.LVL137:
 441:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1302              		.loc 1 441 21 is_stmt 1 view .LVU408
 441:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1303              		.loc 1 441 43 is_stmt 0 view .LVU409
 1304 0056 328B     		ldrh	r2, [r6, #24]
 441:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1305              		.loc 1 441 47 view .LVU410
 1306 0058 0499     		ldr	r1, [sp, #16]
 1307 005a 521A     		subs	r2, r2, r1
 441:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1308              		.loc 1 441 30 view .LVU411
 1309 005c 12B2     		sxth	r2, r2
 1310              	.LVL138:
 442:lvgl/src/core/lv_indev_scroll.c ****                 case LV_SCROLL_SNAP_CENTER:
ARM GAS  C:\usertemp\cc28nhP0.s 			page 43


 1311              		.loc 1 442 21 is_stmt 1 view .LVU412
 1312 005e 43E0     		b	.L98
 1313              	.LVL139:
 1314              	.L97:
 444:lvgl/src/core/lv_indev_scroll.c ****                     x_parent = obj->coords.x1 + pad_left + (lv_area_get_width(&obj->coords) - pad_l
 1315              		.loc 1 444 21 view .LVU413
 444:lvgl/src/core/lv_indev_scroll.c ****                     x_parent = obj->coords.x1 + pad_left + (lv_area_get_width(&obj->coords) - pad_l
 1316              		.loc 1 444 44 is_stmt 0 view .LVU414
 1317 0060 AB8A     		ldrh	r3, [r5, #20]
 1318              	.LVL140:
 1319              	.LBB71:
 1320              	.LBI71:
 123:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 1321              		.loc 3 123 26 is_stmt 1 view .LVU415
 1322              	.LBB72:
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1323              		.loc 3 125 5 view .LVU416
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1324              		.loc 3 125 31 is_stmt 0 view .LVU417
 1325 0062 2A8B     		ldrh	r2, [r5, #24]
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1326              		.loc 3 125 36 view .LVU418
 1327 0064 D21A     		subs	r2, r2, r3
 1328 0066 92B2     		uxth	r2, r2
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1329              		.loc 3 125 49 view .LVU419
 1330 0068 0132     		adds	r2, r2, #1
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1331              		.loc 3 125 12 view .LVU420
 1332 006a 12B2     		sxth	r2, r2
 1333              	.LVL141:
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1334              		.loc 3 125 12 view .LVU421
 1335              	.LBE72:
 1336              	.LBE71:
 444:lvgl/src/core/lv_indev_scroll.c ****                     x_parent = obj->coords.x1 + pad_left + (lv_area_get_width(&obj->coords) - pad_l
 1337              		.loc 1 444 48 discriminator 1 view .LVU422
 1338 006c 002A     		cmp	r2, #0
 1339 006e 14DB     		blt	.L107
 1340              	.L99:
 444:lvgl/src/core/lv_indev_scroll.c ****                     x_parent = obj->coords.x1 + pad_left + (lv_area_get_width(&obj->coords) - pad_l
 1341              		.loc 1 444 48 discriminator 1 view .LVU423
 1342 0070 03EB6203 		add	r3, r3, r2, asr #1
 444:lvgl/src/core/lv_indev_scroll.c ****                     x_parent = obj->coords.x1 + pad_left + (lv_area_get_width(&obj->coords) - pad_l
 1343              		.loc 1 444 29 discriminator 1 view .LVU424
 1344 0074 1BB2     		sxth	r3, r3
 1345              	.LVL142:
 445:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1346              		.loc 1 445 21 is_stmt 1 view .LVU425
 445:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1347              		.loc 1 445 43 is_stmt 0 view .LVU426
 1348 0076 B08A     		ldrh	r0, [r6, #20]
 445:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1349              		.loc 1 445 47 view .LVU427
 1350 0078 029A     		ldr	r2, [sp, #8]
 1351 007a 8218     		adds	r2, r0, r2
 1352 007c 92B2     		uxth	r2, r2
ARM GAS  C:\usertemp\cc28nhP0.s 			page 44


 1353              	.LVL143:
 1354              	.LBB73:
 1355              	.LBI73:
 123:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 1356              		.loc 3 123 26 is_stmt 1 view .LVU428
 1357              	.LBB74:
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1358              		.loc 3 125 5 view .LVU429
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1359              		.loc 3 125 31 is_stmt 0 view .LVU430
 1360 007e 318B     		ldrh	r1, [r6, #24]
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1361              		.loc 3 125 36 view .LVU431
 1362 0080 091A     		subs	r1, r1, r0
 1363 0082 89B2     		uxth	r1, r1
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1364              		.loc 3 125 49 view .LVU432
 1365 0084 0131     		adds	r1, r1, #1
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1366              		.loc 3 125 12 view .LVU433
 1367 0086 09B2     		sxth	r1, r1
 1368              	.LVL144:
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1369              		.loc 3 125 12 view .LVU434
 1370              	.LBE74:
 1371              	.LBE73:
 445:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1372              		.loc 1 445 93 discriminator 1 view .LVU435
 1373 0088 0598     		ldr	r0, [sp, #20]
 1374 008a 091A     		subs	r1, r1, r0
 445:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1375              		.loc 1 445 117 discriminator 1 view .LVU436
 1376 008c 0398     		ldr	r0, [sp, #12]
 1377 008e 091A     		subs	r1, r1, r0
 1378 0090 05D4     		bmi	.L108
 1379              	.L100:
 445:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1380              		.loc 1 445 58 discriminator 1 view .LVU437
 1381 0092 02EB6102 		add	r2, r2, r1, asr #1
 445:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1382              		.loc 1 445 30 discriminator 1 view .LVU438
 1383 0096 12B2     		sxth	r2, r2
 1384              	.LVL145:
 446:lvgl/src/core/lv_indev_scroll.c ****                 default:
 1385              		.loc 1 446 21 is_stmt 1 view .LVU439
 1386 0098 26E0     		b	.L98
 1387              	.LVL146:
 1388              	.L107:
 444:lvgl/src/core/lv_indev_scroll.c ****                     x_parent = obj->coords.x1 + pad_left + (lv_area_get_width(&obj->coords) - pad_l
 1389              		.loc 1 444 48 is_stmt 0 discriminator 1 view .LVU440
 1390 009a 0132     		adds	r2, r2, #1
 1391 009c E8E7     		b	.L99
 1392              	.LVL147:
 1393              	.L108:
 445:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1394              		.loc 1 445 117 discriminator 1 view .LVU441
 1395 009e 0131     		adds	r1, r1, #1
ARM GAS  C:\usertemp\cc28nhP0.s 			page 45


 1396 00a0 F7E7     		b	.L100
 1397              	.LVL148:
 1398              	.L95:
 445:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1399              		.loc 1 445 117 discriminator 1 view .LVU442
 1400              	.LBE70:
 1401              	.LBE69:
 428:lvgl/src/core/lv_indev_scroll.c ****         lv_obj_t * child = obj->spec_attr->children[i];
 1402              		.loc 1 428 32 is_stmt 1 discriminator 2 view .LVU443
 1403 00a2 0134     		adds	r4, r4, #1
 1404              	.LVL149:
 1405              	.L94:
 428:lvgl/src/core/lv_indev_scroll.c ****         lv_obj_t * child = obj->spec_attr->children[i];
 1406              		.loc 1 428 18 discriminator 1 view .LVU444
 1407 00a4 BC42     		cmp	r4, r7
 1408 00a6 3CD2     		bcs	.L109
 1409              	.LBB77:
 429:lvgl/src/core/lv_indev_scroll.c ****         if(lv_obj_has_flag_any(child, LV_OBJ_FLAG_HIDDEN | LV_OBJ_FLAG_FLOATING)) continue;
 1410              		.loc 1 429 9 view .LVU445
 429:lvgl/src/core/lv_indev_scroll.c ****         if(lv_obj_has_flag_any(child, LV_OBJ_FLAG_HIDDEN | LV_OBJ_FLAG_FLOATING)) continue;
 1411              		.loc 1 429 31 is_stmt 0 view .LVU446
 1412 00a8 B368     		ldr	r3, [r6, #8]
 429:lvgl/src/core/lv_indev_scroll.c ****         if(lv_obj_has_flag_any(child, LV_OBJ_FLAG_HIDDEN | LV_OBJ_FLAG_FLOATING)) continue;
 1413              		.loc 1 429 42 view .LVU447
 1414 00aa 1B68     		ldr	r3, [r3]
 429:lvgl/src/core/lv_indev_scroll.c ****         if(lv_obj_has_flag_any(child, LV_OBJ_FLAG_HIDDEN | LV_OBJ_FLAG_FLOATING)) continue;
 1415              		.loc 1 429 20 view .LVU448
 1416 00ac 53F82450 		ldr	r5, [r3, r4, lsl #2]
 1417              	.LVL150:
 430:lvgl/src/core/lv_indev_scroll.c ****         if(lv_obj_has_flag(child, LV_OBJ_FLAG_SNAPPABLE)) {
 1418              		.loc 1 430 9 is_stmt 1 view .LVU449
 430:lvgl/src/core/lv_indev_scroll.c ****         if(lv_obj_has_flag(child, LV_OBJ_FLAG_SNAPPABLE)) {
 1419              		.loc 1 430 12 is_stmt 0 view .LVU450
 1420 00b0 2149     		ldr	r1, .L110
 1421 00b2 2846     		mov	r0, r5
 1422 00b4 FFF7FEFF 		bl	lv_obj_has_flag_any
 1423              	.LVL151:
 430:lvgl/src/core/lv_indev_scroll.c ****         if(lv_obj_has_flag(child, LV_OBJ_FLAG_SNAPPABLE)) {
 1424              		.loc 1 430 11 discriminator 1 view .LVU451
 1425 00b8 0028     		cmp	r0, #0
 1426 00ba F2D1     		bne	.L95
 431:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t x_child = 0;
 1427              		.loc 1 431 9 is_stmt 1 view .LVU452
 431:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t x_child = 0;
 1428              		.loc 1 431 12 is_stmt 0 view .LVU453
 1429 00bc 4FF48051 		mov	r1, #4096
 1430 00c0 2846     		mov	r0, r5
 1431 00c2 FFF7FEFF 		bl	lv_obj_has_flag
 1432              	.LVL152:
 431:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t x_child = 0;
 1433              		.loc 1 431 11 discriminator 1 view .LVU454
 1434 00c6 0028     		cmp	r0, #0
 1435 00c8 EBD0     		beq	.L95
 1436              	.LBB76:
 432:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t x_parent = 0;
 1437              		.loc 1 432 13 is_stmt 1 view .LVU455
 1438              	.LVL153:
ARM GAS  C:\usertemp\cc28nhP0.s 			page 46


 433:lvgl/src/core/lv_indev_scroll.c ****             switch(align) {
 1439              		.loc 1 433 13 view .LVU456
 434:lvgl/src/core/lv_indev_scroll.c ****                 case LV_SCROLL_SNAP_START:
 1440              		.loc 1 434 13 view .LVU457
 1441 00ca BBF1020F 		cmp	fp, #2
 1442 00ce C0D0     		beq	.L96
 1443 00d0 BBF1030F 		cmp	fp, #3
 1444 00d4 C4D0     		beq	.L97
 1445 00d6 BBF1010F 		cmp	fp, #1
 1446 00da E2D1     		bne	.L95
 436:lvgl/src/core/lv_indev_scroll.c ****                     x_parent = obj->coords.x1 + pad_left;
 1447              		.loc 1 436 21 view .LVU458
 436:lvgl/src/core/lv_indev_scroll.c ****                     x_parent = obj->coords.x1 + pad_left;
 1448              		.loc 1 436 29 is_stmt 0 view .LVU459
 1449 00dc B5F91430 		ldrsh	r3, [r5, #20]
 1450              	.LVL154:
 437:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1451              		.loc 1 437 21 is_stmt 1 view .LVU460
 437:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1452              		.loc 1 437 43 is_stmt 0 view .LVU461
 1453 00e0 B28A     		ldrh	r2, [r6, #20]
 437:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1454              		.loc 1 437 47 view .LVU462
 1455 00e2 0299     		ldr	r1, [sp, #8]
 1456 00e4 0A44     		add	r2, r2, r1
 437:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1457              		.loc 1 437 30 view .LVU463
 1458 00e6 12B2     		sxth	r2, r2
 1459              	.LVL155:
 438:lvgl/src/core/lv_indev_scroll.c ****                 case LV_SCROLL_SNAP_END:
 1460              		.loc 1 438 21 is_stmt 1 view .LVU464
 1461              	.L98:
 451:lvgl/src/core/lv_indev_scroll.c ****             if(x_child >= min && x_child <= max) {
 1462              		.loc 1 451 13 view .LVU465
 451:lvgl/src/core/lv_indev_scroll.c ****             if(x_child >= min && x_child <= max) {
 1463              		.loc 1 451 21 is_stmt 0 view .LVU466
 1464 00e8 5344     		add	r3, r3, r10
 1465              	.LVL156:
 451:lvgl/src/core/lv_indev_scroll.c ****             if(x_child >= min && x_child <= max) {
 1466              		.loc 1 451 21 view .LVU467
 1467 00ea 99B2     		uxth	r1, r3
 1468 00ec 1BB2     		sxth	r3, r3
 1469              	.LVL157:
 452:lvgl/src/core/lv_indev_scroll.c ****                 lv_coord_t x = x_child -  x_parent;
 1470              		.loc 1 452 13 is_stmt 1 view .LVU468
 452:lvgl/src/core/lv_indev_scroll.c ****                 lv_coord_t x = x_child -  x_parent;
 1471              		.loc 1 452 31 is_stmt 0 view .LVU469
 1472 00ee 0198     		ldr	r0, [sp, #4]
 1473 00f0 8342     		cmp	r3, r0
 1474 00f2 B4BF     		ite	lt
 1475 00f4 0020     		movlt	r0, #0
 1476 00f6 0120     		movge	r0, #1
 1477 00f8 4B45     		cmp	r3, r9
 1478 00fa C8BF     		it	gt
 1479 00fc 0020     		movgt	r0, #0
 452:lvgl/src/core/lv_indev_scroll.c ****                 lv_coord_t x = x_child -  x_parent;
 1480              		.loc 1 452 15 view .LVU470
ARM GAS  C:\usertemp\cc28nhP0.s 			page 47


 1481 00fe 0028     		cmp	r0, #0
 1482 0100 CFD0     		beq	.L95
 1483              	.LBB75:
 453:lvgl/src/core/lv_indev_scroll.c ****                 if(LV_ABS(x) < LV_ABS(dist)) dist = x;
 1484              		.loc 1 453 17 is_stmt 1 view .LVU471
 453:lvgl/src/core/lv_indev_scroll.c ****                 if(LV_ABS(x) < LV_ABS(dist)) dist = x;
 1485              		.loc 1 453 40 is_stmt 0 view .LVU472
 1486 0102 891A     		subs	r1, r1, r2
 453:lvgl/src/core/lv_indev_scroll.c ****                 if(LV_ABS(x) < LV_ABS(dist)) dist = x;
 1487              		.loc 1 453 28 view .LVU473
 1488 0104 09B2     		sxth	r1, r1
 1489              	.LVL158:
 454:lvgl/src/core/lv_indev_scroll.c ****             }
 1490              		.loc 1 454 17 is_stmt 1 view .LVU474
 454:lvgl/src/core/lv_indev_scroll.c ****             }
 1491              		.loc 1 454 20 is_stmt 0 view .LVU475
 1492 0106 81EAE172 		eor	r2, r1, r1, asr #31
 1493              	.LVL159:
 454:lvgl/src/core/lv_indev_scroll.c ****             }
 1494              		.loc 1 454 20 view .LVU476
 1495 010a A2EBE172 		sub	r2, r2, r1, asr #31
 1496 010e 92B2     		uxth	r2, r2
 454:lvgl/src/core/lv_indev_scroll.c ****             }
 1497              		.loc 1 454 32 view .LVU477
 1498 0110 88EAE873 		eor	r3, r8, r8, asr #31
 1499              	.LVL160:
 454:lvgl/src/core/lv_indev_scroll.c ****             }
 1500              		.loc 1 454 32 view .LVU478
 1501 0114 A3EBE873 		sub	r3, r3, r8, asr #31
 1502 0118 9BB2     		uxth	r3, r3
 454:lvgl/src/core/lv_indev_scroll.c ****             }
 1503              		.loc 1 454 19 view .LVU479
 1504 011a 9A42     		cmp	r2, r3
 1505 011c C1D2     		bcs	.L95
 454:lvgl/src/core/lv_indev_scroll.c ****             }
 1506              		.loc 1 454 51 discriminator 1 view .LVU480
 1507 011e 8846     		mov	r8, r1
 1508              	.LVL161:
 454:lvgl/src/core/lv_indev_scroll.c ****             }
 1509              		.loc 1 454 51 discriminator 1 view .LVU481
 1510 0120 BFE7     		b	.L95
 1511              	.LVL162:
 1512              	.L109:
 454:lvgl/src/core/lv_indev_scroll.c ****             }
 1513              		.loc 1 454 51 discriminator 1 view .LVU482
 1514              	.LBE75:
 1515              	.LBE76:
 1516              	.LBE77:
 459:lvgl/src/core/lv_indev_scroll.c **** }
 1517              		.loc 1 459 5 is_stmt 1 view .LVU483
 459:lvgl/src/core/lv_indev_scroll.c **** }
 1518              		.loc 1 459 37 is_stmt 0 view .LVU484
 1519 0122 41F6FF73 		movw	r3, #8191
 1520 0126 9845     		cmp	r8, r3
 1521 0128 03D0     		beq	.L104
 459:lvgl/src/core/lv_indev_scroll.c **** }
 1522              		.loc 1 459 37 discriminator 1 view .LVU485
ARM GAS  C:\usertemp\cc28nhP0.s 			page 48


 1523 012a C8F10000 		rsb	r0, r8, #0
 1524 012e 00B2     		sxth	r0, r0
 1525 0130 71E7     		b	.L93
 1526              	.L104:
 459:lvgl/src/core/lv_indev_scroll.c **** }
 1527              		.loc 1 459 37 discriminator 2 view .LVU486
 1528 0132 0020     		movs	r0, #0
 1529 0134 6FE7     		b	.L93
 1530              	.L111:
 1531 0136 00BF     		.align	2
 1532              	.L110:
 1533 0138 01000400 		.word	262145
 1534              		.cfi_endproc
 1535              	.LFE162:
 1537              		.section	.text.init_scroll_limits,"ax",%progbits
 1538              		.align	1
 1539              		.syntax unified
 1540              		.thumb
 1541              		.thumb_func
 1543              	init_scroll_limits:
 1544              	.LVL163:
 1545              	.LFB161:
 349:lvgl/src/core/lv_indev_scroll.c ****     lv_obj_t * obj = proc->types.pointer.scroll_obj;
 1546              		.loc 1 349 1 is_stmt 1 view -0
 1547              		.cfi_startproc
 1548              		@ args = 0, pretend = 0, frame = 0
 1549              		@ frame_needed = 0, uses_anonymous_args = 0
 349:lvgl/src/core/lv_indev_scroll.c ****     lv_obj_t * obj = proc->types.pointer.scroll_obj;
 1550              		.loc 1 349 1 is_stmt 0 view .LVU488
 1551 0000 70B5     		push	{r4, r5, r6, lr}
 1552              	.LCFI15:
 1553              		.cfi_def_cfa_offset 16
 1554              		.cfi_offset 4, -16
 1555              		.cfi_offset 5, -12
 1556              		.cfi_offset 6, -8
 1557              		.cfi_offset 14, -4
 1558 0002 82B0     		sub	sp, sp, #8
 1559              	.LCFI16:
 1560              		.cfi_def_cfa_offset 24
 1561 0004 0446     		mov	r4, r0
 350:lvgl/src/core/lv_indev_scroll.c ****     /*If there no STOP allow scrolling anywhere*/
 1562              		.loc 1 350 5 is_stmt 1 view .LVU489
 350:lvgl/src/core/lv_indev_scroll.c ****     /*If there no STOP allow scrolling anywhere*/
 1563              		.loc 1 350 16 is_stmt 0 view .LVU490
 1564 0006 856A     		ldr	r5, [r0, #40]
 1565              	.LVL164:
 352:lvgl/src/core/lv_indev_scroll.c ****         lv_area_set(&proc->types.pointer.scroll_area, LV_COORD_MIN, LV_COORD_MIN, LV_COORD_MAX, LV_
 1566              		.loc 1 352 5 is_stmt 1 view .LVU491
 352:lvgl/src/core/lv_indev_scroll.c ****         lv_area_set(&proc->types.pointer.scroll_area, LV_COORD_MIN, LV_COORD_MIN, LV_COORD_MAX, LV_
 1567              		.loc 1 352 8 is_stmt 0 view .LVU492
 1568 0008 8021     		movs	r1, #128
 1569 000a 2846     		mov	r0, r5
 1570              	.LVL165:
 352:lvgl/src/core/lv_indev_scroll.c ****         lv_area_set(&proc->types.pointer.scroll_area, LV_COORD_MIN, LV_COORD_MIN, LV_COORD_MAX, LV_
 1571              		.loc 1 352 8 view .LVU493
 1572 000c FFF7FEFF 		bl	lv_obj_has_flag
 1573              	.LVL166:
ARM GAS  C:\usertemp\cc28nhP0.s 			page 49


 352:lvgl/src/core/lv_indev_scroll.c ****         lv_area_set(&proc->types.pointer.scroll_area, LV_COORD_MIN, LV_COORD_MIN, LV_COORD_MAX, LV_
 1574              		.loc 1 352 7 discriminator 1 view .LVU494
 1575 0010 10BB     		cbnz	r0, .L113
 353:lvgl/src/core/lv_indev_scroll.c ****     }
 1576              		.loc 1 353 9 is_stmt 1 view .LVU495
 1577 0012 6549     		ldr	r1, .L131
 1578 0014 41F6FF73 		movw	r3, #8191
 1579 0018 0093     		str	r3, [sp]
 1580 001a 0A46     		mov	r2, r1
 1581 001c 04F13000 		add	r0, r4, #48
 1582 0020 FFF7FEFF 		bl	lv_area_set
 1583              	.LVL167:
 1584              	.L114:
 401:lvgl/src/core/lv_indev_scroll.c ****     if(proc->types.pointer.scroll_area.x2 == 0) proc->types.pointer.scroll_area.x2 = LV_COORD_MAX;
 1585              		.loc 1 401 5 view .LVU496
 401:lvgl/src/core/lv_indev_scroll.c ****     if(proc->types.pointer.scroll_area.x2 == 0) proc->types.pointer.scroll_area.x2 = LV_COORD_MAX;
 1586              		.loc 1 401 39 is_stmt 0 view .LVU497
 1587 0024 B4F93030 		ldrsh	r3, [r4, #48]
 401:lvgl/src/core/lv_indev_scroll.c ****     if(proc->types.pointer.scroll_area.x2 == 0) proc->types.pointer.scroll_area.x2 = LV_COORD_MAX;
 1588              		.loc 1 401 7 view .LVU498
 1589 0028 13B9     		cbnz	r3, .L124
 401:lvgl/src/core/lv_indev_scroll.c ****     if(proc->types.pointer.scroll_area.x2 == 0) proc->types.pointer.scroll_area.x2 = LV_COORD_MAX;
 1590              		.loc 1 401 49 is_stmt 1 discriminator 1 view .LVU499
 401:lvgl/src/core/lv_indev_scroll.c ****     if(proc->types.pointer.scroll_area.x2 == 0) proc->types.pointer.scroll_area.x2 = LV_COORD_MAX;
 1591              		.loc 1 401 84 is_stmt 0 discriminator 1 view .LVU500
 1592 002a 4EF20103 		movw	r3, #57345
 1593 002e 2386     		strh	r3, [r4, #48]	@ movhi
 1594              	.L124:
 402:lvgl/src/core/lv_indev_scroll.c ****     if(proc->types.pointer.scroll_area.y1 == 0) proc->types.pointer.scroll_area.y1 = LV_COORD_MIN;
 1595              		.loc 1 402 5 is_stmt 1 view .LVU501
 402:lvgl/src/core/lv_indev_scroll.c ****     if(proc->types.pointer.scroll_area.y1 == 0) proc->types.pointer.scroll_area.y1 = LV_COORD_MIN;
 1596              		.loc 1 402 39 is_stmt 0 view .LVU502
 1597 0030 B4F93430 		ldrsh	r3, [r4, #52]
 402:lvgl/src/core/lv_indev_scroll.c ****     if(proc->types.pointer.scroll_area.y1 == 0) proc->types.pointer.scroll_area.y1 = LV_COORD_MIN;
 1598              		.loc 1 402 7 view .LVU503
 1599 0034 13B9     		cbnz	r3, .L125
 402:lvgl/src/core/lv_indev_scroll.c ****     if(proc->types.pointer.scroll_area.y1 == 0) proc->types.pointer.scroll_area.y1 = LV_COORD_MIN;
 1600              		.loc 1 402 49 is_stmt 1 discriminator 1 view .LVU504
 402:lvgl/src/core/lv_indev_scroll.c ****     if(proc->types.pointer.scroll_area.y1 == 0) proc->types.pointer.scroll_area.y1 = LV_COORD_MIN;
 1601              		.loc 1 402 84 is_stmt 0 discriminator 1 view .LVU505
 1602 0036 41F6FF73 		movw	r3, #8191
 1603 003a A386     		strh	r3, [r4, #52]	@ movhi
 1604              	.L125:
 403:lvgl/src/core/lv_indev_scroll.c ****     if(proc->types.pointer.scroll_area.y2 == 0) proc->types.pointer.scroll_area.y2 = LV_COORD_MAX;
 1605              		.loc 1 403 5 is_stmt 1 view .LVU506
 403:lvgl/src/core/lv_indev_scroll.c ****     if(proc->types.pointer.scroll_area.y2 == 0) proc->types.pointer.scroll_area.y2 = LV_COORD_MAX;
 1606              		.loc 1 403 39 is_stmt 0 view .LVU507
 1607 003c B4F93230 		ldrsh	r3, [r4, #50]
 403:lvgl/src/core/lv_indev_scroll.c ****     if(proc->types.pointer.scroll_area.y2 == 0) proc->types.pointer.scroll_area.y2 = LV_COORD_MAX;
 1608              		.loc 1 403 7 view .LVU508
 1609 0040 13B9     		cbnz	r3, .L126
 403:lvgl/src/core/lv_indev_scroll.c ****     if(proc->types.pointer.scroll_area.y2 == 0) proc->types.pointer.scroll_area.y2 = LV_COORD_MAX;
 1610              		.loc 1 403 49 is_stmt 1 discriminator 1 view .LVU509
 403:lvgl/src/core/lv_indev_scroll.c ****     if(proc->types.pointer.scroll_area.y2 == 0) proc->types.pointer.scroll_area.y2 = LV_COORD_MAX;
 1611              		.loc 1 403 84 is_stmt 0 discriminator 1 view .LVU510
 1612 0042 4EF20103 		movw	r3, #57345
 1613 0046 6386     		strh	r3, [r4, #50]	@ movhi
ARM GAS  C:\usertemp\cc28nhP0.s 			page 50


 1614              	.L126:
 404:lvgl/src/core/lv_indev_scroll.c **** }
 1615              		.loc 1 404 5 is_stmt 1 view .LVU511
 404:lvgl/src/core/lv_indev_scroll.c **** }
 1616              		.loc 1 404 39 is_stmt 0 view .LVU512
 1617 0048 B4F93630 		ldrsh	r3, [r4, #54]
 404:lvgl/src/core/lv_indev_scroll.c **** }
 1618              		.loc 1 404 7 view .LVU513
 1619 004c 13B9     		cbnz	r3, .L112
 404:lvgl/src/core/lv_indev_scroll.c **** }
 1620              		.loc 1 404 49 is_stmt 1 discriminator 1 view .LVU514
 404:lvgl/src/core/lv_indev_scroll.c **** }
 1621              		.loc 1 404 84 is_stmt 0 discriminator 1 view .LVU515
 1622 004e 41F6FF73 		movw	r3, #8191
 1623 0052 E386     		strh	r3, [r4, #54]	@ movhi
 1624              	.L112:
 405:lvgl/src/core/lv_indev_scroll.c **** 
 1625              		.loc 1 405 1 view .LVU516
 1626 0054 02B0     		add	sp, sp, #8
 1627              	.LCFI17:
 1628              		.cfi_remember_state
 1629              		.cfi_def_cfa_offset 16
 1630              		@ sp needed
 1631 0056 70BD     		pop	{r4, r5, r6, pc}
 1632              	.LVL168:
 1633              	.L113:
 1634              	.LCFI18:
 1635              		.cfi_restore_state
 357:lvgl/src/core/lv_indev_scroll.c ****             case LV_SCROLL_SNAP_START:
 1636              		.loc 1 357 9 is_stmt 1 view .LVU517
 357:lvgl/src/core/lv_indev_scroll.c ****             case LV_SCROLL_SNAP_START:
 1637              		.loc 1 357 16 is_stmt 0 view .LVU518
 1638 0058 2846     		mov	r0, r5
 1639 005a FFF7FEFF 		bl	lv_obj_get_scroll_snap_y
 1640              	.LVL169:
 357:lvgl/src/core/lv_indev_scroll.c ****             case LV_SCROLL_SNAP_START:
 1641              		.loc 1 357 9 discriminator 1 view .LVU519
 1642 005e 0228     		cmp	r0, #2
 1643 0060 31D0     		beq	.L115
 1644 0062 0328     		cmp	r0, #3
 1645 0064 41D0     		beq	.L116
 1646 0066 0128     		cmp	r0, #1
 1647 0068 5ED1     		bne	.L117
 359:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_area.y2 = find_snap_point_y(obj, LV_COORD_MIN, obj->coor
 1648              		.loc 1 359 17 is_stmt 1 view .LVU520
 359:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_area.y2 = find_snap_point_y(obj, LV_COORD_MIN, obj->coor
 1649              		.loc 1 359 88 is_stmt 0 view .LVU521
 1650 006a E98A     		ldrh	r1, [r5, #22]
 359:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_area.y2 = find_snap_point_y(obj, LV_COORD_MIN, obj->coor
 1651              		.loc 1 359 92 view .LVU522
 1652 006c 0131     		adds	r1, r1, #1
 359:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_area.y2 = find_snap_point_y(obj, LV_COORD_MIN, obj->coor
 1653              		.loc 1 359 54 view .LVU523
 1654 006e 0023     		movs	r3, #0
 1655 0070 41F6FF72 		movw	r2, #8191
 1656 0074 09B2     		sxth	r1, r1
 1657 0076 2846     		mov	r0, r5
ARM GAS  C:\usertemp\cc28nhP0.s 			page 51


 1658 0078 FFF7FEFF 		bl	find_snap_point_y
 1659              	.LVL170:
 359:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_area.y2 = find_snap_point_y(obj, LV_COORD_MIN, obj->coor
 1660              		.loc 1 359 52 discriminator 1 view .LVU524
 1661 007c 6086     		strh	r0, [r4, #50]	@ movhi
 360:lvgl/src/core/lv_indev_scroll.c ****                 break;
 1662              		.loc 1 360 17 is_stmt 1 view .LVU525
 360:lvgl/src/core/lv_indev_scroll.c ****                 break;
 1663              		.loc 1 360 102 is_stmt 0 view .LVU526
 1664 007e EA8A     		ldrh	r2, [r5, #22]
 360:lvgl/src/core/lv_indev_scroll.c ****                 break;
 1665              		.loc 1 360 106 view .LVU527
 1666 0080 013A     		subs	r2, r2, #1
 360:lvgl/src/core/lv_indev_scroll.c ****                 break;
 1667              		.loc 1 360 54 view .LVU528
 1668 0082 0023     		movs	r3, #0
 1669 0084 12B2     		sxth	r2, r2
 1670 0086 4849     		ldr	r1, .L131
 1671 0088 2846     		mov	r0, r5
 1672 008a FFF7FEFF 		bl	find_snap_point_y
 1673              	.LVL171:
 360:lvgl/src/core/lv_indev_scroll.c ****                 break;
 1674              		.loc 1 360 52 discriminator 1 view .LVU529
 1675 008e E086     		strh	r0, [r4, #54]	@ movhi
 361:lvgl/src/core/lv_indev_scroll.c ****             case LV_SCROLL_SNAP_END:
 1676              		.loc 1 361 17 is_stmt 1 view .LVU530
 1677              	.L118:
 378:lvgl/src/core/lv_indev_scroll.c ****             case LV_SCROLL_SNAP_START:
 1678              		.loc 1 378 9 view .LVU531
 378:lvgl/src/core/lv_indev_scroll.c ****             case LV_SCROLL_SNAP_START:
 1679              		.loc 1 378 16 is_stmt 0 view .LVU532
 1680 0090 2846     		mov	r0, r5
 1681 0092 FFF7FEFF 		bl	lv_obj_get_scroll_snap_x
 1682              	.LVL172:
 378:lvgl/src/core/lv_indev_scroll.c ****             case LV_SCROLL_SNAP_START:
 1683              		.loc 1 378 9 discriminator 1 view .LVU533
 1684 0096 0228     		cmp	r0, #2
 1685 0098 4DD0     		beq	.L120
 1686 009a 0328     		cmp	r0, #3
 1687 009c 5DD0     		beq	.L121
 1688 009e 0128     		cmp	r0, #1
 1689 00a0 7AD1     		bne	.L122
 380:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_area.x2 = find_snap_point_x(obj, LV_COORD_MIN, obj->coor
 1690              		.loc 1 380 17 is_stmt 1 view .LVU534
 380:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_area.x2 = find_snap_point_x(obj, LV_COORD_MIN, obj->coor
 1691              		.loc 1 380 54 is_stmt 0 view .LVU535
 1692 00a2 0023     		movs	r3, #0
 1693 00a4 41F6FF72 		movw	r2, #8191
 1694 00a8 B5F91410 		ldrsh	r1, [r5, #20]
 1695 00ac 2846     		mov	r0, r5
 1696 00ae FFF7FEFF 		bl	find_snap_point_x
 1697              	.LVL173:
 380:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_area.x2 = find_snap_point_x(obj, LV_COORD_MIN, obj->coor
 1698              		.loc 1 380 52 discriminator 1 view .LVU536
 1699 00b2 2086     		strh	r0, [r4, #48]	@ movhi
 381:lvgl/src/core/lv_indev_scroll.c ****                 break;
 1700              		.loc 1 381 17 is_stmt 1 view .LVU537
ARM GAS  C:\usertemp\cc28nhP0.s 			page 52


 381:lvgl/src/core/lv_indev_scroll.c ****                 break;
 1701              		.loc 1 381 54 is_stmt 0 view .LVU538
 1702 00b4 0023     		movs	r3, #0
 1703 00b6 B5F91420 		ldrsh	r2, [r5, #20]
 1704 00ba 3B49     		ldr	r1, .L131
 1705 00bc 2846     		mov	r0, r5
 1706 00be FFF7FEFF 		bl	find_snap_point_x
 1707              	.LVL174:
 381:lvgl/src/core/lv_indev_scroll.c ****                 break;
 1708              		.loc 1 381 52 discriminator 1 view .LVU539
 1709 00c2 A086     		strh	r0, [r4, #52]	@ movhi
 382:lvgl/src/core/lv_indev_scroll.c ****             case LV_SCROLL_SNAP_END:
 1710              		.loc 1 382 17 is_stmt 1 view .LVU540
 1711 00c4 AEE7     		b	.L114
 1712              	.L115:
 363:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_area.y2 = find_snap_point_y(obj, LV_COORD_MIN, obj->coor
 1713              		.loc 1 363 17 view .LVU541
 363:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_area.y2 = find_snap_point_y(obj, LV_COORD_MIN, obj->coor
 1714              		.loc 1 363 54 is_stmt 0 view .LVU542
 1715 00c6 0023     		movs	r3, #0
 1716 00c8 41F6FF72 		movw	r2, #8191
 1717 00cc B5F91A10 		ldrsh	r1, [r5, #26]
 1718 00d0 2846     		mov	r0, r5
 1719 00d2 FFF7FEFF 		bl	find_snap_point_y
 1720              	.LVL175:
 363:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_area.y2 = find_snap_point_y(obj, LV_COORD_MIN, obj->coor
 1721              		.loc 1 363 52 discriminator 1 view .LVU543
 1722 00d6 6086     		strh	r0, [r4, #50]	@ movhi
 364:lvgl/src/core/lv_indev_scroll.c ****                 break;
 1723              		.loc 1 364 17 is_stmt 1 view .LVU544
 364:lvgl/src/core/lv_indev_scroll.c ****                 break;
 1724              		.loc 1 364 54 is_stmt 0 view .LVU545
 1725 00d8 0023     		movs	r3, #0
 1726 00da B5F91A20 		ldrsh	r2, [r5, #26]
 1727 00de 3249     		ldr	r1, .L131
 1728 00e0 2846     		mov	r0, r5
 1729 00e2 FFF7FEFF 		bl	find_snap_point_y
 1730              	.LVL176:
 364:lvgl/src/core/lv_indev_scroll.c ****                 break;
 1731              		.loc 1 364 52 discriminator 1 view .LVU546
 1732 00e6 E086     		strh	r0, [r4, #54]	@ movhi
 365:lvgl/src/core/lv_indev_scroll.c ****             case LV_SCROLL_SNAP_CENTER: {
 1733              		.loc 1 365 17 is_stmt 1 view .LVU547
 1734 00e8 D2E7     		b	.L118
 1735              	.L116:
 1736              	.LBB78:
 367:lvgl/src/core/lv_indev_scroll.c ****                     proc->types.pointer.scroll_area.y1 = find_snap_point_y(obj, y_mid + 1, LV_COORD
 1737              		.loc 1 367 21 view .LVU548
 367:lvgl/src/core/lv_indev_scroll.c ****                     proc->types.pointer.scroll_area.y1 = find_snap_point_y(obj, y_mid + 1, LV_COORD
 1738              		.loc 1 367 51 is_stmt 0 view .LVU549
 1739 00ea EE8A     		ldrh	r6, [r5, #22]
 1740              	.LVL177:
 1741              	.LBB79:
 1742              	.LBI79:
 133:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 1743              		.loc 3 133 26 is_stmt 1 view .LVU550
 1744              	.LBB80:
ARM GAS  C:\usertemp\cc28nhP0.s 			page 53


 1745              		.loc 3 135 5 view .LVU551
 1746              		.loc 3 135 31 is_stmt 0 view .LVU552
 1747 00ec 6B8B     		ldrh	r3, [r5, #26]
 1748              		.loc 3 135 36 view .LVU553
 1749 00ee 9B1B     		subs	r3, r3, r6
 1750 00f0 9BB2     		uxth	r3, r3
 1751              		.loc 3 135 49 view .LVU554
 1752 00f2 0133     		adds	r3, r3, #1
 1753              		.loc 3 135 12 view .LVU555
 1754 00f4 1BB2     		sxth	r3, r3
 1755              	.LVL178:
 1756              		.loc 3 135 12 view .LVU556
 1757              	.LBE80:
 1758              	.LBE79:
 367:lvgl/src/core/lv_indev_scroll.c ****                     proc->types.pointer.scroll_area.y1 = find_snap_point_y(obj, y_mid + 1, LV_COORD
 1759              		.loc 1 367 55 discriminator 1 view .LVU557
 1760 00f6 002B     		cmp	r3, #0
 1761 00f8 14DB     		blt	.L129
 1762              	.L119:
 1763 00fa 06EB6306 		add	r6, r6, r3, asr #1
 1764 00fe B6B2     		uxth	r6, r6
 1765              	.LVL179:
 368:lvgl/src/core/lv_indev_scroll.c ****                     proc->types.pointer.scroll_area.y2 = find_snap_point_y(obj, LV_COORD_MIN, y_mid
 1766              		.loc 1 368 21 is_stmt 1 view .LVU558
 368:lvgl/src/core/lv_indev_scroll.c ****                     proc->types.pointer.scroll_area.y2 = find_snap_point_y(obj, LV_COORD_MIN, y_mid
 1767              		.loc 1 368 87 is_stmt 0 view .LVU559
 1768 0100 711C     		adds	r1, r6, #1
 368:lvgl/src/core/lv_indev_scroll.c ****                     proc->types.pointer.scroll_area.y2 = find_snap_point_y(obj, LV_COORD_MIN, y_mid
 1769              		.loc 1 368 58 view .LVU560
 1770 0102 0023     		movs	r3, #0
 1771 0104 41F6FF72 		movw	r2, #8191
 1772 0108 09B2     		sxth	r1, r1
 1773 010a 2846     		mov	r0, r5
 1774 010c FFF7FEFF 		bl	find_snap_point_y
 1775              	.LVL180:
 368:lvgl/src/core/lv_indev_scroll.c ****                     proc->types.pointer.scroll_area.y2 = find_snap_point_y(obj, LV_COORD_MIN, y_mid
 1776              		.loc 1 368 56 discriminator 1 view .LVU561
 1777 0110 6086     		strh	r0, [r4, #50]	@ movhi
 369:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1778              		.loc 1 369 21 is_stmt 1 view .LVU562
 369:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1779              		.loc 1 369 101 is_stmt 0 view .LVU563
 1780 0112 721E     		subs	r2, r6, #1
 369:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1781              		.loc 1 369 58 view .LVU564
 1782 0114 0023     		movs	r3, #0
 1783 0116 12B2     		sxth	r2, r2
 1784 0118 2349     		ldr	r1, .L131
 1785 011a 2846     		mov	r0, r5
 1786 011c FFF7FEFF 		bl	find_snap_point_y
 1787              	.LVL181:
 369:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1788              		.loc 1 369 56 discriminator 1 view .LVU565
 1789 0120 E086     		strh	r0, [r4, #54]	@ movhi
 370:lvgl/src/core/lv_indev_scroll.c ****                 }
 1790              		.loc 1 370 21 is_stmt 1 view .LVU566
 1791 0122 B5E7     		b	.L118
ARM GAS  C:\usertemp\cc28nhP0.s 			page 54


 1792              	.LVL182:
 1793              	.L129:
 367:lvgl/src/core/lv_indev_scroll.c ****                     proc->types.pointer.scroll_area.y1 = find_snap_point_y(obj, y_mid + 1, LV_COORD
 1794              		.loc 1 367 55 is_stmt 0 discriminator 1 view .LVU567
 1795 0124 0133     		adds	r3, r3, #1
 1796 0126 E8E7     		b	.L119
 1797              	.L117:
 367:lvgl/src/core/lv_indev_scroll.c ****                     proc->types.pointer.scroll_area.y1 = find_snap_point_y(obj, y_mid + 1, LV_COORD
 1798              		.loc 1 367 55 discriminator 1 view .LVU568
 1799              	.LBE78:
 373:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_area.y2 = LV_COORD_MAX;
 1800              		.loc 1 373 17 is_stmt 1 view .LVU569
 373:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_area.y2 = LV_COORD_MAX;
 1801              		.loc 1 373 52 is_stmt 0 view .LVU570
 1802 0128 4EF20103 		movw	r3, #57345
 1803 012c 6386     		strh	r3, [r4, #50]	@ movhi
 374:lvgl/src/core/lv_indev_scroll.c ****                 break;
 1804              		.loc 1 374 17 is_stmt 1 view .LVU571
 374:lvgl/src/core/lv_indev_scroll.c ****                 break;
 1805              		.loc 1 374 52 is_stmt 0 view .LVU572
 1806 012e 41F6FF73 		movw	r3, #8191
 1807 0132 E386     		strh	r3, [r4, #54]	@ movhi
 375:lvgl/src/core/lv_indev_scroll.c ****         }
 1808              		.loc 1 375 17 is_stmt 1 view .LVU573
 1809 0134 ACE7     		b	.L118
 1810              	.L120:
 384:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_area.x2 = find_snap_point_x(obj, LV_COORD_MIN, obj->coor
 1811              		.loc 1 384 17 view .LVU574
 384:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_area.x2 = find_snap_point_x(obj, LV_COORD_MIN, obj->coor
 1812              		.loc 1 384 54 is_stmt 0 view .LVU575
 1813 0136 0023     		movs	r3, #0
 1814 0138 41F6FF72 		movw	r2, #8191
 1815 013c B5F91810 		ldrsh	r1, [r5, #24]
 1816 0140 2846     		mov	r0, r5
 1817 0142 FFF7FEFF 		bl	find_snap_point_x
 1818              	.LVL183:
 384:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_area.x2 = find_snap_point_x(obj, LV_COORD_MIN, obj->coor
 1819              		.loc 1 384 52 discriminator 1 view .LVU576
 1820 0146 2086     		strh	r0, [r4, #48]	@ movhi
 385:lvgl/src/core/lv_indev_scroll.c ****                 break;
 1821              		.loc 1 385 17 is_stmt 1 view .LVU577
 385:lvgl/src/core/lv_indev_scroll.c ****                 break;
 1822              		.loc 1 385 54 is_stmt 0 view .LVU578
 1823 0148 0023     		movs	r3, #0
 1824 014a B5F91820 		ldrsh	r2, [r5, #24]
 1825 014e 1649     		ldr	r1, .L131
 1826 0150 2846     		mov	r0, r5
 1827 0152 FFF7FEFF 		bl	find_snap_point_x
 1828              	.LVL184:
 385:lvgl/src/core/lv_indev_scroll.c ****                 break;
 1829              		.loc 1 385 52 discriminator 1 view .LVU579
 1830 0156 A086     		strh	r0, [r4, #52]	@ movhi
 386:lvgl/src/core/lv_indev_scroll.c ****             case LV_SCROLL_SNAP_CENTER: {
 1831              		.loc 1 386 17 is_stmt 1 view .LVU580
 1832 0158 64E7     		b	.L114
 1833              	.L121:
 1834              	.LBB81:
ARM GAS  C:\usertemp\cc28nhP0.s 			page 55


 388:lvgl/src/core/lv_indev_scroll.c ****                     proc->types.pointer.scroll_area.x1 = find_snap_point_x(obj, x_mid + 1, LV_COORD
 1835              		.loc 1 388 21 view .LVU581
 388:lvgl/src/core/lv_indev_scroll.c ****                     proc->types.pointer.scroll_area.x1 = find_snap_point_x(obj, x_mid + 1, LV_COORD
 1836              		.loc 1 388 51 is_stmt 0 view .LVU582
 1837 015a AE8A     		ldrh	r6, [r5, #20]
 1838              	.LVL185:
 1839              	.LBB82:
 1840              	.LBI82:
 123:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 1841              		.loc 3 123 26 is_stmt 1 view .LVU583
 1842              	.LBB83:
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1843              		.loc 3 125 5 view .LVU584
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1844              		.loc 3 125 31 is_stmt 0 view .LVU585
 1845 015c 2B8B     		ldrh	r3, [r5, #24]
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1846              		.loc 3 125 36 view .LVU586
 1847 015e 9B1B     		subs	r3, r3, r6
 1848 0160 9BB2     		uxth	r3, r3
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1849              		.loc 3 125 49 view .LVU587
 1850 0162 0133     		adds	r3, r3, #1
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1851              		.loc 3 125 12 view .LVU588
 1852 0164 1BB2     		sxth	r3, r3
 1853              	.LVL186:
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1854              		.loc 3 125 12 view .LVU589
 1855              	.LBE83:
 1856              	.LBE82:
 388:lvgl/src/core/lv_indev_scroll.c ****                     proc->types.pointer.scroll_area.x1 = find_snap_point_x(obj, x_mid + 1, LV_COORD
 1857              		.loc 1 388 55 discriminator 1 view .LVU590
 1858 0166 002B     		cmp	r3, #0
 1859 0168 14DB     		blt	.L130
 1860              	.L123:
 1861 016a 06EB6306 		add	r6, r6, r3, asr #1
 1862 016e B6B2     		uxth	r6, r6
 1863              	.LVL187:
 389:lvgl/src/core/lv_indev_scroll.c ****                     proc->types.pointer.scroll_area.x2 = find_snap_point_x(obj, LV_COORD_MIN, x_mid
 1864              		.loc 1 389 21 is_stmt 1 view .LVU591
 389:lvgl/src/core/lv_indev_scroll.c ****                     proc->types.pointer.scroll_area.x2 = find_snap_point_x(obj, LV_COORD_MIN, x_mid
 1865              		.loc 1 389 87 is_stmt 0 view .LVU592
 1866 0170 711C     		adds	r1, r6, #1
 389:lvgl/src/core/lv_indev_scroll.c ****                     proc->types.pointer.scroll_area.x2 = find_snap_point_x(obj, LV_COORD_MIN, x_mid
 1867              		.loc 1 389 58 view .LVU593
 1868 0172 0023     		movs	r3, #0
 1869 0174 41F6FF72 		movw	r2, #8191
 1870 0178 09B2     		sxth	r1, r1
 1871 017a 2846     		mov	r0, r5
 1872 017c FFF7FEFF 		bl	find_snap_point_x
 1873              	.LVL188:
 389:lvgl/src/core/lv_indev_scroll.c ****                     proc->types.pointer.scroll_area.x2 = find_snap_point_x(obj, LV_COORD_MIN, x_mid
 1874              		.loc 1 389 56 discriminator 1 view .LVU594
 1875 0180 2086     		strh	r0, [r4, #48]	@ movhi
 390:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1876              		.loc 1 390 21 is_stmt 1 view .LVU595
ARM GAS  C:\usertemp\cc28nhP0.s 			page 56


 390:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1877              		.loc 1 390 101 is_stmt 0 view .LVU596
 1878 0182 721E     		subs	r2, r6, #1
 390:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1879              		.loc 1 390 58 view .LVU597
 1880 0184 0023     		movs	r3, #0
 1881 0186 12B2     		sxth	r2, r2
 1882 0188 0749     		ldr	r1, .L131
 1883 018a 2846     		mov	r0, r5
 1884 018c FFF7FEFF 		bl	find_snap_point_x
 1885              	.LVL189:
 390:lvgl/src/core/lv_indev_scroll.c ****                     break;
 1886              		.loc 1 390 56 discriminator 1 view .LVU598
 1887 0190 A086     		strh	r0, [r4, #52]	@ movhi
 391:lvgl/src/core/lv_indev_scroll.c ****                 }
 1888              		.loc 1 391 21 is_stmt 1 view .LVU599
 1889 0192 47E7     		b	.L114
 1890              	.LVL190:
 1891              	.L130:
 388:lvgl/src/core/lv_indev_scroll.c ****                     proc->types.pointer.scroll_area.x1 = find_snap_point_x(obj, x_mid + 1, LV_COORD
 1892              		.loc 1 388 55 is_stmt 0 discriminator 1 view .LVU600
 1893 0194 0133     		adds	r3, r3, #1
 1894 0196 E8E7     		b	.L123
 1895              	.L122:
 388:lvgl/src/core/lv_indev_scroll.c ****                     proc->types.pointer.scroll_area.x1 = find_snap_point_x(obj, x_mid + 1, LV_COORD
 1896              		.loc 1 388 55 discriminator 1 view .LVU601
 1897              	.LBE81:
 394:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_area.x2 = LV_COORD_MAX;
 1898              		.loc 1 394 17 is_stmt 1 view .LVU602
 394:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_area.x2 = LV_COORD_MAX;
 1899              		.loc 1 394 52 is_stmt 0 view .LVU603
 1900 0198 4EF20103 		movw	r3, #57345
 1901 019c 2386     		strh	r3, [r4, #48]	@ movhi
 395:lvgl/src/core/lv_indev_scroll.c ****                 break;
 1902              		.loc 1 395 17 is_stmt 1 view .LVU604
 395:lvgl/src/core/lv_indev_scroll.c ****                 break;
 1903              		.loc 1 395 52 is_stmt 0 view .LVU605
 1904 019e 41F6FF73 		movw	r3, #8191
 1905 01a2 A386     		strh	r3, [r4, #52]	@ movhi
 396:lvgl/src/core/lv_indev_scroll.c ****         }
 1906              		.loc 1 396 17 is_stmt 1 view .LVU606
 1907 01a4 3EE7     		b	.L114
 1908              	.L132:
 1909 01a6 00BF     		.align	2
 1910              	.L131:
 1911 01a8 01E0FFFF 		.word	-8191
 1912              		.cfi_endproc
 1913              	.LFE161:
 1915              		.section	.text.elastic_diff,"ax",%progbits
 1916              		.align	1
 1917              		.syntax unified
 1918              		.thumb
 1919              		.thumb_func
 1921              	elastic_diff:
 1922              	.LVL191:
 1923              	.LFB167:
 572:lvgl/src/core/lv_indev_scroll.c **** 
ARM GAS  C:\usertemp\cc28nhP0.s 			page 57


 573:lvgl/src/core/lv_indev_scroll.c **** static lv_coord_t elastic_diff(lv_obj_t * scroll_obj, lv_coord_t diff, lv_coord_t scroll_start, lv_
 574:lvgl/src/core/lv_indev_scroll.c ****                                lv_dir_t dir)
 575:lvgl/src/core/lv_indev_scroll.c **** {
 1924              		.loc 1 575 1 view -0
 1925              		.cfi_startproc
 1926              		@ args = 4, pretend = 0, frame = 0
 1927              		@ frame_needed = 0, uses_anonymous_args = 0
 1928              		.loc 1 575 1 is_stmt 0 view .LVU608
 1929 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1930              	.LCFI19:
 1931              		.cfi_def_cfa_offset 40
 1932              		.cfi_offset 3, -40
 1933              		.cfi_offset 4, -36
 1934              		.cfi_offset 5, -32
 1935              		.cfi_offset 6, -28
 1936              		.cfi_offset 7, -24
 1937              		.cfi_offset 8, -20
 1938              		.cfi_offset 9, -16
 1939              		.cfi_offset 10, -12
 1940              		.cfi_offset 11, -8
 1941              		.cfi_offset 14, -4
 1942 0004 0546     		mov	r5, r0
 1943 0006 0C46     		mov	r4, r1
 1944 0008 1746     		mov	r7, r2
 1945 000a 1E46     		mov	r6, r3
 1946 000c 9DF828A0 		ldrb	r10, [sp, #40]	@ zero_extendqisi2
 576:lvgl/src/core/lv_indev_scroll.c ****     if(lv_obj_has_flag(scroll_obj, LV_OBJ_FLAG_SCROLL_ELASTIC)) {
 1947              		.loc 1 576 5 is_stmt 1 view .LVU609
 1948              		.loc 1 576 8 is_stmt 0 view .LVU610
 1949 0010 2021     		movs	r1, #32
 1950              	.LVL192:
 1951              		.loc 1 576 8 view .LVU611
 1952 0012 FFF7FEFF 		bl	lv_obj_has_flag
 1953              	.LVL193:
 1954              		.loc 1 576 7 discriminator 1 view .LVU612
 1955 0016 0028     		cmp	r0, #0
 1956 0018 00F0D780 		beq	.L134
 1957              	.LBB84:
 577:lvgl/src/core/lv_indev_scroll.c ****         /*If there is snapping in the current direction don't use the elastic factor because
 578:lvgl/src/core/lv_indev_scroll.c ****          *it's natural that the first and last items are scrolled (snapped) in.*/
 579:lvgl/src/core/lv_indev_scroll.c ****         lv_scroll_snap_t snap;
 1958              		.loc 1 579 9 is_stmt 1 view .LVU613
 580:lvgl/src/core/lv_indev_scroll.c ****         snap = dir == LV_DIR_HOR ? lv_obj_get_scroll_snap_x(scroll_obj) : lv_obj_get_scroll_snap_y(
 1959              		.loc 1 580 9 view .LVU614
 1960              		.loc 1 580 14 is_stmt 0 view .LVU615
 1961 001c BAF1030F 		cmp	r10, #3
 1962 0020 2CD0     		beq	.L163
 1963              		.loc 1 580 75 discriminator 2 view .LVU616
 1964 0022 2846     		mov	r0, r5
 1965 0024 FFF7FEFF 		bl	lv_obj_get_scroll_snap_y
 1966              	.LVL194:
 1967 0028 8046     		mov	r8, r0
 1968              	.L136:
 1969              	.LVL195:
 581:lvgl/src/core/lv_indev_scroll.c **** 
 582:lvgl/src/core/lv_indev_scroll.c ****         lv_obj_t * act_obj = lv_indev_get_obj_act();
 1970              		.loc 1 582 9 is_stmt 1 view .LVU617
ARM GAS  C:\usertemp\cc28nhP0.s 			page 58


 1971              		.loc 1 582 30 is_stmt 0 view .LVU618
 1972 002a FFF7FEFF 		bl	lv_indev_get_obj_act
 1973              	.LVL196:
 1974 002e 8146     		mov	r9, r0
 1975              	.LVL197:
 583:lvgl/src/core/lv_indev_scroll.c ****         lv_coord_t snap_point = 0;
 1976              		.loc 1 583 9 is_stmt 1 view .LVU619
 584:lvgl/src/core/lv_indev_scroll.c ****         lv_coord_t act_obj_point = 0;
 1977              		.loc 1 584 9 view .LVU620
 585:lvgl/src/core/lv_indev_scroll.c **** 
 586:lvgl/src/core/lv_indev_scroll.c ****         if(dir == LV_DIR_HOR) {
 1978              		.loc 1 586 9 view .LVU621
 1979              		.loc 1 586 11 is_stmt 0 view .LVU622
 1980 0030 BAF1030F 		cmp	r10, #3
 1981 0034 27D0     		beq	.L164
 1982              	.LBB85:
 587:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t pad_left = lv_obj_get_style_pad_left(scroll_obj, LV_PART_MAIN);
 588:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t pad_right = lv_obj_get_style_pad_right(scroll_obj, LV_PART_MAIN);
 589:lvgl/src/core/lv_indev_scroll.c **** 
 590:lvgl/src/core/lv_indev_scroll.c ****             switch(snap) {
 591:lvgl/src/core/lv_indev_scroll.c ****                 case LV_SCROLL_SNAP_CENTER:
 592:lvgl/src/core/lv_indev_scroll.c ****                     snap_point = pad_left + (lv_area_get_width(&scroll_obj->coords) - pad_left - pa
 593:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = lv_area_get_width(&act_obj->coords) / 2 + act_obj->coords.x1;
 594:lvgl/src/core/lv_indev_scroll.c ****                     break;
 595:lvgl/src/core/lv_indev_scroll.c ****                 case LV_SCROLL_SNAP_START:
 596:lvgl/src/core/lv_indev_scroll.c ****                     snap_point = scroll_obj->coords.x1 + pad_left;
 597:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = act_obj->coords.x1;
 598:lvgl/src/core/lv_indev_scroll.c ****                     break;
 599:lvgl/src/core/lv_indev_scroll.c ****                 case LV_SCROLL_SNAP_END:
 600:lvgl/src/core/lv_indev_scroll.c ****                     snap_point = scroll_obj->coords.x2 - pad_right;
 601:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = act_obj->coords.x2;
 602:lvgl/src/core/lv_indev_scroll.c ****                     break;
 603:lvgl/src/core/lv_indev_scroll.c ****             }
 604:lvgl/src/core/lv_indev_scroll.c ****         }
 605:lvgl/src/core/lv_indev_scroll.c ****         else {
 606:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t pad_top = lv_obj_get_style_pad_top(scroll_obj, LV_PART_MAIN);
 1983              		.loc 1 606 13 is_stmt 1 view .LVU623
 1984              	.LVL198:
 1985              	.LBB86:
 1986              	.LBI86:
  91:lvgl/src/core/lv_obj_style_gen.h **** {
 1987              		.loc 2 91 26 view .LVU624
 1988              	.LBB87:
  93:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1989              		.loc 2 93 5 view .LVU625
  93:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1990              		.loc 2 93 26 is_stmt 0 view .LVU626
 1991 0036 41F61002 		movw	r2, #6160
 1992 003a 0021     		movs	r1, #0
 1993 003c 2846     		mov	r0, r5
 1994              	.LVL199:
  93:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1995              		.loc 2 93 26 view .LVU627
 1996 003e FFF7FEFF 		bl	lv_obj_get_style_prop
 1997              	.LVL200:
 1998 0042 8246     		mov	r10, r0
  94:lvgl/src/core/lv_obj_style_gen.h **** }
ARM GAS  C:\usertemp\cc28nhP0.s 			page 59


 1999              		.loc 2 94 5 is_stmt 1 view .LVU628
  94:lvgl/src/core/lv_obj_style_gen.h **** }
 2000              		.loc 2 94 12 is_stmt 0 view .LVU629
 2001 0044 0FFA80FB 		sxth	fp, r0
 2002              	.LVL201:
  94:lvgl/src/core/lv_obj_style_gen.h **** }
 2003              		.loc 2 94 12 view .LVU630
 2004              	.LBE87:
 2005              	.LBE86:
 607:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t pad_bottom = lv_obj_get_style_pad_bottom(scroll_obj, LV_PART_MAIN);
 2006              		.loc 1 607 13 is_stmt 1 view .LVU631
 2007              	.LBB88:
 2008              	.LBI88:
  97:lvgl/src/core/lv_obj_style_gen.h **** {
 2009              		.loc 2 97 26 view .LVU632
 2010              	.LBB89:
  99:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 2011              		.loc 2 99 5 view .LVU633
  99:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 2012              		.loc 2 99 26 is_stmt 0 view .LVU634
 2013 0048 41F61102 		movw	r2, #6161
 2014 004c 0021     		movs	r1, #0
 2015 004e 2846     		mov	r0, r5
 2016 0050 FFF7FEFF 		bl	lv_obj_get_style_prop
 2017              	.LVL202:
 100:lvgl/src/core/lv_obj_style_gen.h **** }
 2018              		.loc 2 100 5 is_stmt 1 view .LVU635
 100:lvgl/src/core/lv_obj_style_gen.h **** }
 2019              		.loc 2 100 12 is_stmt 0 view .LVU636
 2020 0054 01B2     		sxth	r1, r0
 2021              	.LVL203:
 100:lvgl/src/core/lv_obj_style_gen.h **** }
 2022              		.loc 2 100 12 view .LVU637
 2023              	.LBE89:
 2024              	.LBE88:
 608:lvgl/src/core/lv_indev_scroll.c **** 
 609:lvgl/src/core/lv_indev_scroll.c ****             switch(snap) {
 2025              		.loc 1 609 13 is_stmt 1 view .LVU638
 2026 0056 B8F1020F 		cmp	r8, #2
 2027 005a 00F08480 		beq	.L144
 2028 005e B8F1030F 		cmp	r8, #3
 2029 0062 59D0     		beq	.L145
 2030 0064 B8F1010F 		cmp	r8, #1
 2031 0068 77D0     		beq	.L146
 2032 006a 0022     		movs	r2, #0
 2033 006c 1346     		mov	r3, r2
 2034              	.LVL204:
 2035              	.L141:
 2036              		.loc 1 609 13 is_stmt 0 view .LVU639
 2037              	.LBE85:
 610:lvgl/src/core/lv_indev_scroll.c ****                 case LV_SCROLL_SNAP_CENTER:
 611:lvgl/src/core/lv_indev_scroll.c ****                     snap_point = pad_top + (lv_area_get_height(&scroll_obj->coords) - pad_top - pad
 612:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = lv_area_get_height(&act_obj->coords) / 2 + act_obj->coords.y1;
 613:lvgl/src/core/lv_indev_scroll.c ****                     break;
 614:lvgl/src/core/lv_indev_scroll.c ****                 case LV_SCROLL_SNAP_START:
 615:lvgl/src/core/lv_indev_scroll.c ****                     snap_point = scroll_obj->coords.y1 + pad_top;
 616:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = act_obj->coords.y1;
ARM GAS  C:\usertemp\cc28nhP0.s 			page 60


 617:lvgl/src/core/lv_indev_scroll.c ****                     break;
 618:lvgl/src/core/lv_indev_scroll.c ****                 case LV_SCROLL_SNAP_END:
 619:lvgl/src/core/lv_indev_scroll.c ****                     snap_point = scroll_obj->coords.y2 - pad_bottom;
 620:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = act_obj->coords.y2;
 621:lvgl/src/core/lv_indev_scroll.c ****                     break;
 622:lvgl/src/core/lv_indev_scroll.c ****             }
 623:lvgl/src/core/lv_indev_scroll.c ****         }
 624:lvgl/src/core/lv_indev_scroll.c **** 
 625:lvgl/src/core/lv_indev_scroll.c ****         if(scroll_end < 0) {
 2038              		.loc 1 625 9 is_stmt 1 view .LVU640
 2039              		.loc 1 625 11 is_stmt 0 view .LVU641
 2040 006e 002E     		cmp	r6, #0
 2041 0070 7FDB     		blt	.L165
 626:lvgl/src/core/lv_indev_scroll.c ****             if(snap != LV_SCROLL_SNAP_NONE && act_obj_point > snap_point) return diff;
 627:lvgl/src/core/lv_indev_scroll.c **** 
 628:lvgl/src/core/lv_indev_scroll.c ****             /*Rounding*/
 629:lvgl/src/core/lv_indev_scroll.c ****             if(diff < 0) diff -= ELASTIC_SLOWNESS_FACTOR / 2;
 630:lvgl/src/core/lv_indev_scroll.c ****             if(diff > 0) diff += ELASTIC_SLOWNESS_FACTOR / 2;
 631:lvgl/src/core/lv_indev_scroll.c ****             return diff / ELASTIC_SLOWNESS_FACTOR;
 632:lvgl/src/core/lv_indev_scroll.c ****         }
 633:lvgl/src/core/lv_indev_scroll.c ****         else if(scroll_start < 0) {
 2042              		.loc 1 633 14 is_stmt 1 view .LVU642
 2043              		.loc 1 633 16 is_stmt 0 view .LVU643
 2044 0072 002F     		cmp	r7, #0
 2045 0074 C0F29380 		blt	.L166
 2046 0078 2046     		mov	r0, r4
 2047 007a ACE0     		b	.L150
 2048              	.LVL205:
 2049              	.L163:
 580:lvgl/src/core/lv_indev_scroll.c **** 
 2050              		.loc 1 580 36 discriminator 1 view .LVU644
 2051 007c 2846     		mov	r0, r5
 2052 007e FFF7FEFF 		bl	lv_obj_get_scroll_snap_x
 2053              	.LVL206:
 2054 0082 8046     		mov	r8, r0
 2055 0084 D1E7     		b	.L136
 2056              	.LVL207:
 2057              	.L164:
 2058              	.LBB94:
 587:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t pad_right = lv_obj_get_style_pad_right(scroll_obj, LV_PART_MAIN);
 2059              		.loc 1 587 13 is_stmt 1 view .LVU645
 2060              	.LBB95:
 2061              	.LBI95:
 103:lvgl/src/core/lv_obj_style_gen.h **** {
 2062              		.loc 2 103 26 view .LVU646
 2063              	.LBB96:
 105:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 2064              		.loc 2 105 5 view .LVU647
 105:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 2065              		.loc 2 105 26 is_stmt 0 view .LVU648
 2066 0086 41F61202 		movw	r2, #6162
 2067 008a 0021     		movs	r1, #0
 2068 008c 2846     		mov	r0, r5
 2069              	.LVL208:
 105:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 2070              		.loc 2 105 26 view .LVU649
 2071 008e FFF7FEFF 		bl	lv_obj_get_style_prop
ARM GAS  C:\usertemp\cc28nhP0.s 			page 61


 2072              	.LVL209:
 2073 0092 8246     		mov	r10, r0
 106:lvgl/src/core/lv_obj_style_gen.h **** }
 2074              		.loc 2 106 5 is_stmt 1 view .LVU650
 106:lvgl/src/core/lv_obj_style_gen.h **** }
 2075              		.loc 2 106 12 is_stmt 0 view .LVU651
 2076 0094 0FFA80FB 		sxth	fp, r0
 2077              	.LVL210:
 106:lvgl/src/core/lv_obj_style_gen.h **** }
 2078              		.loc 2 106 12 view .LVU652
 2079              	.LBE96:
 2080              	.LBE95:
 588:lvgl/src/core/lv_indev_scroll.c **** 
 2081              		.loc 1 588 13 is_stmt 1 view .LVU653
 2082              	.LBB97:
 2083              	.LBI97:
 109:lvgl/src/core/lv_obj_style_gen.h **** {
 2084              		.loc 2 109 26 view .LVU654
 2085              	.LBB98:
 111:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 2086              		.loc 2 111 5 view .LVU655
 111:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 2087              		.loc 2 111 26 is_stmt 0 view .LVU656
 2088 0098 41F61302 		movw	r2, #6163
 2089 009c 0021     		movs	r1, #0
 2090 009e 2846     		mov	r0, r5
 2091 00a0 FFF7FEFF 		bl	lv_obj_get_style_prop
 2092              	.LVL211:
 2093              		.loc 2 112 5 is_stmt 1 view .LVU657
 2094              		.loc 2 112 12 is_stmt 0 view .LVU658
 2095 00a4 01B2     		sxth	r1, r0
 2096              	.LVL212:
 2097              		.loc 2 112 12 view .LVU659
 2098              	.LBE98:
 2099              	.LBE97:
 590:lvgl/src/core/lv_indev_scroll.c ****                 case LV_SCROLL_SNAP_CENTER:
 2100              		.loc 1 590 13 is_stmt 1 view .LVU660
 2101 00a6 B8F1020F 		cmp	r8, #2
 2102 00aa 2FD0     		beq	.L138
 2103 00ac B8F1030F 		cmp	r8, #3
 2104 00b0 05D0     		beq	.L139
 2105 00b2 B8F1010F 		cmp	r8, #1
 2106 00b6 23D0     		beq	.L140
 2107 00b8 0022     		movs	r2, #0
 2108 00ba 1346     		mov	r3, r2
 2109 00bc D7E7     		b	.L141
 2110              	.L139:
 592:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = lv_area_get_width(&act_obj->coords) / 2 + act_obj->coords.x1;
 2111              		.loc 1 592 21 view .LVU661
 2112              	.LVL213:
 2113              	.LBB99:
 2114              	.LBI99:
 123:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 2115              		.loc 3 123 26 view .LVU662
 2116              	.LBB100:
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 2117              		.loc 3 125 5 view .LVU663
ARM GAS  C:\usertemp\cc28nhP0.s 			page 62


 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 2118              		.loc 3 125 31 is_stmt 0 view .LVU664
 2119 00be 2B8B     		ldrh	r3, [r5, #24]
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 2120              		.loc 3 125 44 view .LVU665
 2121 00c0 AA8A     		ldrh	r2, [r5, #20]
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 2122              		.loc 3 125 36 view .LVU666
 2123 00c2 9B1A     		subs	r3, r3, r2
 2124 00c4 9BB2     		uxth	r3, r3
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 2125              		.loc 3 125 49 view .LVU667
 2126 00c6 0133     		adds	r3, r3, #1
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 2127              		.loc 3 125 12 view .LVU668
 2128 00c8 1BB2     		sxth	r3, r3
 2129              	.LVL214:
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 2130              		.loc 3 125 12 view .LVU669
 2131              	.LBE100:
 2132              	.LBE99:
 592:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = lv_area_get_width(&act_obj->coords) / 2 + act_obj->coords.x1;
 2133              		.loc 1 592 85 discriminator 1 view .LVU670
 2134 00ca A3EB0B03 		sub	r3, r3, fp
 592:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = lv_area_get_width(&act_obj->coords) / 2 + act_obj->coords.x1;
 2135              		.loc 1 592 109 discriminator 1 view .LVU671
 2136 00ce 5B1A     		subs	r3, r3, r1
 2137 00d0 12D4     		bmi	.L167
 2138              	.L142:
 592:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = lv_area_get_width(&act_obj->coords) / 2 + act_obj->coords.x1;
 2139              		.loc 1 592 43 discriminator 1 view .LVU672
 2140 00d2 0AEB6303 		add	r3, r10, r3, asr #1
 592:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = lv_area_get_width(&act_obj->coords) / 2 + act_obj->coords.x1;
 2141              		.loc 1 592 113 discriminator 1 view .LVU673
 2142 00d6 12FA83F3 		uxtah	r3, r2, r3
 592:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = lv_area_get_width(&act_obj->coords) / 2 + act_obj->coords.x1;
 2143              		.loc 1 592 32 discriminator 1 view .LVU674
 2144 00da 1BB2     		sxth	r3, r3
 2145              	.LVL215:
 593:lvgl/src/core/lv_indev_scroll.c ****                     break;
 2146              		.loc 1 593 21 is_stmt 1 view .LVU675
 2147              	.LBB101:
 2148              	.LBI101:
 123:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 2149              		.loc 3 123 26 view .LVU676
 2150              	.LBB102:
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 2151              		.loc 3 125 5 view .LVU677
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 2152              		.loc 3 125 31 is_stmt 0 view .LVU678
 2153 00dc B9F81810 		ldrh	r1, [r9, #24]
 2154              	.LVL216:
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 2155              		.loc 3 125 44 view .LVU679
 2156 00e0 B9F81420 		ldrh	r2, [r9, #20]
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 2157              		.loc 3 125 36 view .LVU680
ARM GAS  C:\usertemp\cc28nhP0.s 			page 63


 2158 00e4 891A     		subs	r1, r1, r2
 2159 00e6 89B2     		uxth	r1, r1
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 2160              		.loc 3 125 49 view .LVU681
 2161 00e8 0131     		adds	r1, r1, #1
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 2162              		.loc 3 125 12 view .LVU682
 2163 00ea 09B2     		sxth	r1, r1
 2164              	.LVL217:
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 2165              		.loc 3 125 12 view .LVU683
 2166              	.LBE102:
 2167              	.LBE101:
 593:lvgl/src/core/lv_indev_scroll.c ****                     break;
 2168              		.loc 1 593 77 discriminator 1 view .LVU684
 2169 00ec 0029     		cmp	r1, #0
 2170 00ee 05DB     		blt	.L168
 2171              	.L143:
 2172 00f0 02EB6102 		add	r2, r2, r1, asr #1
 593:lvgl/src/core/lv_indev_scroll.c ****                     break;
 2173              		.loc 1 593 35 discriminator 1 view .LVU685
 2174 00f4 12B2     		sxth	r2, r2
 2175              	.LVL218:
 594:lvgl/src/core/lv_indev_scroll.c ****                 case LV_SCROLL_SNAP_START:
 2176              		.loc 1 594 21 is_stmt 1 view .LVU686
 2177 00f6 BAE7     		b	.L141
 2178              	.LVL219:
 2179              	.L167:
 592:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = lv_area_get_width(&act_obj->coords) / 2 + act_obj->coords.x1;
 2180              		.loc 1 592 109 is_stmt 0 discriminator 1 view .LVU687
 2181 00f8 0133     		adds	r3, r3, #1
 2182 00fa EAE7     		b	.L142
 2183              	.LVL220:
 2184              	.L168:
 593:lvgl/src/core/lv_indev_scroll.c ****                     break;
 2185              		.loc 1 593 77 discriminator 1 view .LVU688
 2186 00fc 0131     		adds	r1, r1, #1
 2187 00fe F7E7     		b	.L143
 2188              	.LVL221:
 2189              	.L140:
 596:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = act_obj->coords.x1;
 2190              		.loc 1 596 21 is_stmt 1 view .LVU689
 596:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = act_obj->coords.x1;
 2191              		.loc 1 596 52 is_stmt 0 view .LVU690
 2192 0100 AB8A     		ldrh	r3, [r5, #20]
 596:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = act_obj->coords.x1;
 2193              		.loc 1 596 56 view .LVU691
 2194 0102 5344     		add	r3, r3, r10
 596:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = act_obj->coords.x1;
 2195              		.loc 1 596 32 view .LVU692
 2196 0104 1BB2     		sxth	r3, r3
 2197              	.LVL222:
 597:lvgl/src/core/lv_indev_scroll.c ****                     break;
 2198              		.loc 1 597 21 is_stmt 1 view .LVU693
 597:lvgl/src/core/lv_indev_scroll.c ****                     break;
 2199              		.loc 1 597 35 is_stmt 0 view .LVU694
 2200 0106 B9F91420 		ldrsh	r2, [r9, #20]
ARM GAS  C:\usertemp\cc28nhP0.s 			page 64


 2201              	.LVL223:
 598:lvgl/src/core/lv_indev_scroll.c ****                 case LV_SCROLL_SNAP_END:
 2202              		.loc 1 598 21 is_stmt 1 view .LVU695
 2203 010a B0E7     		b	.L141
 2204              	.LVL224:
 2205              	.L138:
 600:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = act_obj->coords.x2;
 2206              		.loc 1 600 21 view .LVU696
 600:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = act_obj->coords.x2;
 2207              		.loc 1 600 52 is_stmt 0 view .LVU697
 2208 010c 2B8B     		ldrh	r3, [r5, #24]
 600:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = act_obj->coords.x2;
 2209              		.loc 1 600 56 view .LVU698
 2210 010e 1B1A     		subs	r3, r3, r0
 600:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = act_obj->coords.x2;
 2211              		.loc 1 600 32 view .LVU699
 2212 0110 1BB2     		sxth	r3, r3
 2213              	.LVL225:
 601:lvgl/src/core/lv_indev_scroll.c ****                     break;
 2214              		.loc 1 601 21 is_stmt 1 view .LVU700
 601:lvgl/src/core/lv_indev_scroll.c ****                     break;
 2215              		.loc 1 601 35 is_stmt 0 view .LVU701
 2216 0112 B9F91820 		ldrsh	r2, [r9, #24]
 2217              	.LVL226:
 602:lvgl/src/core/lv_indev_scroll.c ****             }
 2218              		.loc 1 602 21 is_stmt 1 view .LVU702
 2219 0116 AAE7     		b	.L141
 2220              	.LVL227:
 2221              	.L145:
 602:lvgl/src/core/lv_indev_scroll.c ****             }
 2222              		.loc 1 602 21 is_stmt 0 view .LVU703
 2223              	.LBE94:
 2224              	.LBB103:
 611:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = lv_area_get_height(&act_obj->coords) / 2 + act_obj->coords.y1;
 2225              		.loc 1 611 21 is_stmt 1 view .LVU704
 2226              	.LBB90:
 2227              	.LBI90:
 133:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 2228              		.loc 3 133 26 view .LVU705
 2229              	.LBB91:
 2230              		.loc 3 135 5 view .LVU706
 2231              		.loc 3 135 31 is_stmt 0 view .LVU707
 2232 0118 6B8B     		ldrh	r3, [r5, #26]
 2233              		.loc 3 135 44 view .LVU708
 2234 011a EA8A     		ldrh	r2, [r5, #22]
 2235              		.loc 3 135 36 view .LVU709
 2236 011c 9B1A     		subs	r3, r3, r2
 2237 011e 9BB2     		uxth	r3, r3
 2238              		.loc 3 135 49 view .LVU710
 2239 0120 0133     		adds	r3, r3, #1
 2240              		.loc 3 135 12 view .LVU711
 2241 0122 1BB2     		sxth	r3, r3
 2242              	.LVL228:
 2243              		.loc 3 135 12 view .LVU712
 2244              	.LBE91:
 2245              	.LBE90:
 611:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = lv_area_get_height(&act_obj->coords) / 2 + act_obj->coords.y1;
ARM GAS  C:\usertemp\cc28nhP0.s 			page 65


 2246              		.loc 1 611 85 discriminator 1 view .LVU713
 2247 0124 A3EB0B03 		sub	r3, r3, fp
 611:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = lv_area_get_height(&act_obj->coords) / 2 + act_obj->coords.y1;
 2248              		.loc 1 611 109 discriminator 1 view .LVU714
 2249 0128 5B1A     		subs	r3, r3, r1
 2250 012a 12D4     		bmi	.L169
 2251              	.L147:
 611:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = lv_area_get_height(&act_obj->coords) / 2 + act_obj->coords.y1;
 2252              		.loc 1 611 42 discriminator 1 view .LVU715
 2253 012c 0AEB6303 		add	r3, r10, r3, asr #1
 611:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = lv_area_get_height(&act_obj->coords) / 2 + act_obj->coords.y1;
 2254              		.loc 1 611 113 discriminator 1 view .LVU716
 2255 0130 12FA83F3 		uxtah	r3, r2, r3
 611:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = lv_area_get_height(&act_obj->coords) / 2 + act_obj->coords.y1;
 2256              		.loc 1 611 32 discriminator 1 view .LVU717
 2257 0134 1BB2     		sxth	r3, r3
 2258              	.LVL229:
 612:lvgl/src/core/lv_indev_scroll.c ****                     break;
 2259              		.loc 1 612 21 is_stmt 1 view .LVU718
 2260              	.LBB92:
 2261              	.LBI92:
 133:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 2262              		.loc 3 133 26 view .LVU719
 2263              	.LBB93:
 2264              		.loc 3 135 5 view .LVU720
 2265              		.loc 3 135 31 is_stmt 0 view .LVU721
 2266 0136 B9F81A10 		ldrh	r1, [r9, #26]
 2267              	.LVL230:
 2268              		.loc 3 135 44 view .LVU722
 2269 013a B9F81620 		ldrh	r2, [r9, #22]
 2270              		.loc 3 135 36 view .LVU723
 2271 013e 891A     		subs	r1, r1, r2
 2272 0140 89B2     		uxth	r1, r1
 2273              		.loc 3 135 49 view .LVU724
 2274 0142 0131     		adds	r1, r1, #1
 2275              		.loc 3 135 12 view .LVU725
 2276 0144 09B2     		sxth	r1, r1
 2277              	.LVL231:
 2278              		.loc 3 135 12 view .LVU726
 2279              	.LBE93:
 2280              	.LBE92:
 612:lvgl/src/core/lv_indev_scroll.c ****                     break;
 2281              		.loc 1 612 78 discriminator 1 view .LVU727
 2282 0146 0029     		cmp	r1, #0
 2283 0148 05DB     		blt	.L170
 2284              	.L148:
 2285 014a 02EB6102 		add	r2, r2, r1, asr #1
 612:lvgl/src/core/lv_indev_scroll.c ****                     break;
 2286              		.loc 1 612 35 discriminator 1 view .LVU728
 2287 014e 12B2     		sxth	r2, r2
 2288              	.LVL232:
 613:lvgl/src/core/lv_indev_scroll.c ****                 case LV_SCROLL_SNAP_START:
 2289              		.loc 1 613 21 is_stmt 1 view .LVU729
 2290 0150 8DE7     		b	.L141
 2291              	.LVL233:
 2292              	.L169:
 611:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = lv_area_get_height(&act_obj->coords) / 2 + act_obj->coords.y1;
ARM GAS  C:\usertemp\cc28nhP0.s 			page 66


 2293              		.loc 1 611 109 is_stmt 0 discriminator 1 view .LVU730
 2294 0152 0133     		adds	r3, r3, #1
 2295 0154 EAE7     		b	.L147
 2296              	.LVL234:
 2297              	.L170:
 612:lvgl/src/core/lv_indev_scroll.c ****                     break;
 2298              		.loc 1 612 78 discriminator 1 view .LVU731
 2299 0156 0131     		adds	r1, r1, #1
 2300 0158 F7E7     		b	.L148
 2301              	.LVL235:
 2302              	.L146:
 615:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = act_obj->coords.y1;
 2303              		.loc 1 615 21 is_stmt 1 view .LVU732
 615:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = act_obj->coords.y1;
 2304              		.loc 1 615 52 is_stmt 0 view .LVU733
 2305 015a EB8A     		ldrh	r3, [r5, #22]
 615:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = act_obj->coords.y1;
 2306              		.loc 1 615 56 view .LVU734
 2307 015c 5344     		add	r3, r3, r10
 615:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = act_obj->coords.y1;
 2308              		.loc 1 615 32 view .LVU735
 2309 015e 1BB2     		sxth	r3, r3
 2310              	.LVL236:
 616:lvgl/src/core/lv_indev_scroll.c ****                     break;
 2311              		.loc 1 616 21 is_stmt 1 view .LVU736
 616:lvgl/src/core/lv_indev_scroll.c ****                     break;
 2312              		.loc 1 616 35 is_stmt 0 view .LVU737
 2313 0160 B9F91620 		ldrsh	r2, [r9, #22]
 2314              	.LVL237:
 617:lvgl/src/core/lv_indev_scroll.c ****                 case LV_SCROLL_SNAP_END:
 2315              		.loc 1 617 21 is_stmt 1 view .LVU738
 2316 0164 83E7     		b	.L141
 2317              	.LVL238:
 2318              	.L144:
 619:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = act_obj->coords.y2;
 2319              		.loc 1 619 21 view .LVU739
 619:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = act_obj->coords.y2;
 2320              		.loc 1 619 52 is_stmt 0 view .LVU740
 2321 0166 6B8B     		ldrh	r3, [r5, #26]
 619:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = act_obj->coords.y2;
 2322              		.loc 1 619 56 view .LVU741
 2323 0168 1B1A     		subs	r3, r3, r0
 619:lvgl/src/core/lv_indev_scroll.c ****                     act_obj_point = act_obj->coords.y2;
 2324              		.loc 1 619 32 view .LVU742
 2325 016a 1BB2     		sxth	r3, r3
 2326              	.LVL239:
 620:lvgl/src/core/lv_indev_scroll.c ****                     break;
 2327              		.loc 1 620 21 is_stmt 1 view .LVU743
 620:lvgl/src/core/lv_indev_scroll.c ****                     break;
 2328              		.loc 1 620 35 is_stmt 0 view .LVU744
 2329 016c B9F91A20 		ldrsh	r2, [r9, #26]
 2330              	.LVL240:
 621:lvgl/src/core/lv_indev_scroll.c ****             }
 2331              		.loc 1 621 21 is_stmt 1 view .LVU745
 2332 0170 7DE7     		b	.L141
 2333              	.LVL241:
 2334              	.L165:
ARM GAS  C:\usertemp\cc28nhP0.s 			page 67


 621:lvgl/src/core/lv_indev_scroll.c ****             }
 2335              		.loc 1 621 21 is_stmt 0 view .LVU746
 2336              	.LBE103:
 626:lvgl/src/core/lv_indev_scroll.c **** 
 2337              		.loc 1 626 13 is_stmt 1 view .LVU747
 626:lvgl/src/core/lv_indev_scroll.c **** 
 2338              		.loc 1 626 15 is_stmt 0 view .LVU748
 2339 0172 B8F1000F 		cmp	r8, #0
 2340 0176 18BF     		it	ne
 2341 0178 9342     		cmpne	r3, r2
 2342 017a 31DB     		blt	.L158
 629:lvgl/src/core/lv_indev_scroll.c ****             if(diff > 0) diff += ELASTIC_SLOWNESS_FACTOR / 2;
 2343              		.loc 1 629 13 is_stmt 1 view .LVU749
 629:lvgl/src/core/lv_indev_scroll.c ****             if(diff > 0) diff += ELASTIC_SLOWNESS_FACTOR / 2;
 2344              		.loc 1 629 15 is_stmt 0 view .LVU750
 2345 017c 002C     		cmp	r4, #0
 2346 017e 09DB     		blt	.L171
 2347              	.LVL242:
 2348              	.L151:
 630:lvgl/src/core/lv_indev_scroll.c ****             return diff / ELASTIC_SLOWNESS_FACTOR;
 2349              		.loc 1 630 13 is_stmt 1 view .LVU751
 630:lvgl/src/core/lv_indev_scroll.c ****             return diff / ELASTIC_SLOWNESS_FACTOR;
 2350              		.loc 1 630 15 is_stmt 0 view .LVU752
 2351 0180 002C     		cmp	r4, #0
 2352 0182 01DD     		ble	.L152
 630:lvgl/src/core/lv_indev_scroll.c ****             return diff / ELASTIC_SLOWNESS_FACTOR;
 2353              		.loc 1 630 26 is_stmt 1 discriminator 1 view .LVU753
 630:lvgl/src/core/lv_indev_scroll.c ****             return diff / ELASTIC_SLOWNESS_FACTOR;
 2354              		.loc 1 630 31 is_stmt 0 discriminator 1 view .LVU754
 2355 0184 A01C     		adds	r0, r4, #2
 2356 0186 04B2     		sxth	r4, r0
 2357              	.LVL243:
 2358              	.L152:
 631:lvgl/src/core/lv_indev_scroll.c ****         }
 2359              		.loc 1 631 13 is_stmt 1 view .LVU755
 631:lvgl/src/core/lv_indev_scroll.c ****         }
 2360              		.loc 1 631 25 is_stmt 0 view .LVU756
 2361 0188 2346     		mov	r3, r4
 2362              	.LVL244:
 631:lvgl/src/core/lv_indev_scroll.c ****         }
 2363              		.loc 1 631 25 view .LVU757
 2364 018a 002C     		cmp	r4, #0
 2365 018c 05DB     		blt	.L172
 2366              	.L153:
 631:lvgl/src/core/lv_indev_scroll.c ****         }
 2367              		.loc 1 631 25 view .LVU758
 2368 018e 43F38F00 		sbfx	r0, r3, #2, #16
 2369 0192 20E0     		b	.L150
 2370              	.LVL245:
 2371              	.L171:
 629:lvgl/src/core/lv_indev_scroll.c ****             if(diff > 0) diff += ELASTIC_SLOWNESS_FACTOR / 2;
 2372              		.loc 1 629 26 is_stmt 1 discriminator 1 view .LVU759
 629:lvgl/src/core/lv_indev_scroll.c ****             if(diff > 0) diff += ELASTIC_SLOWNESS_FACTOR / 2;
 2373              		.loc 1 629 31 is_stmt 0 discriminator 1 view .LVU760
 2374 0194 A01E     		subs	r0, r4, #2
 2375 0196 04B2     		sxth	r4, r0
 2376              	.LVL246:
ARM GAS  C:\usertemp\cc28nhP0.s 			page 68


 629:lvgl/src/core/lv_indev_scroll.c ****             if(diff > 0) diff += ELASTIC_SLOWNESS_FACTOR / 2;
 2377              		.loc 1 629 31 discriminator 1 view .LVU761
 2378 0198 F2E7     		b	.L151
 2379              	.LVL247:
 2380              	.L172:
 631:lvgl/src/core/lv_indev_scroll.c ****         }
 2381              		.loc 1 631 25 view .LVU762
 2382 019a E31C     		adds	r3, r4, #3
 2383 019c F7E7     		b	.L153
 2384              	.LVL248:
 2385              	.L166:
 634:lvgl/src/core/lv_indev_scroll.c ****             if(snap != LV_SCROLL_SNAP_NONE && act_obj_point < snap_point) return diff;
 2386              		.loc 1 634 13 is_stmt 1 view .LVU763
 2387              		.loc 1 634 15 is_stmt 0 view .LVU764
 2388 019e B8F1000F 		cmp	r8, #0
 2389 01a2 18BF     		it	ne
 2390 01a4 9342     		cmpne	r3, r2
 2391 01a6 1DDC     		bgt	.L160
 635:lvgl/src/core/lv_indev_scroll.c **** 
 636:lvgl/src/core/lv_indev_scroll.c ****             /*Rounding*/
 637:lvgl/src/core/lv_indev_scroll.c ****             if(diff < 0) diff -= ELASTIC_SLOWNESS_FACTOR / 2;
 2392              		.loc 1 637 13 is_stmt 1 view .LVU765
 2393              		.loc 1 637 15 is_stmt 0 view .LVU766
 2394 01a8 002C     		cmp	r4, #0
 2395 01aa 09DB     		blt	.L173
 2396              	.LVL249:
 2397              	.L154:
 638:lvgl/src/core/lv_indev_scroll.c ****             if(diff > 0) diff += ELASTIC_SLOWNESS_FACTOR / 2;
 2398              		.loc 1 638 13 is_stmt 1 view .LVU767
 2399              		.loc 1 638 15 is_stmt 0 view .LVU768
 2400 01ac 002C     		cmp	r4, #0
 2401 01ae 01DD     		ble	.L155
 2402              		.loc 1 638 26 is_stmt 1 discriminator 1 view .LVU769
 2403              		.loc 1 638 31 is_stmt 0 discriminator 1 view .LVU770
 2404 01b0 A01C     		adds	r0, r4, #2
 2405 01b2 04B2     		sxth	r4, r0
 2406              	.LVL250:
 2407              	.L155:
 639:lvgl/src/core/lv_indev_scroll.c ****             return diff / ELASTIC_SLOWNESS_FACTOR;
 2408              		.loc 1 639 13 is_stmt 1 view .LVU771
 2409              		.loc 1 639 25 is_stmt 0 view .LVU772
 2410 01b4 2346     		mov	r3, r4
 2411              	.LVL251:
 2412              		.loc 1 639 25 view .LVU773
 2413 01b6 002C     		cmp	r4, #0
 2414 01b8 05DB     		blt	.L174
 2415              	.L156:
 2416              		.loc 1 639 25 view .LVU774
 2417 01ba 43F38F00 		sbfx	r0, r3, #2, #16
 2418 01be 0AE0     		b	.L150
 2419              	.LVL252:
 2420              	.L173:
 637:lvgl/src/core/lv_indev_scroll.c ****             if(diff > 0) diff += ELASTIC_SLOWNESS_FACTOR / 2;
 2421              		.loc 1 637 26 is_stmt 1 discriminator 1 view .LVU775
 637:lvgl/src/core/lv_indev_scroll.c ****             if(diff > 0) diff += ELASTIC_SLOWNESS_FACTOR / 2;
 2422              		.loc 1 637 31 is_stmt 0 discriminator 1 view .LVU776
 2423 01c0 A01E     		subs	r0, r4, #2
ARM GAS  C:\usertemp\cc28nhP0.s 			page 69


 2424 01c2 04B2     		sxth	r4, r0
 2425              	.LVL253:
 637:lvgl/src/core/lv_indev_scroll.c ****             if(diff > 0) diff += ELASTIC_SLOWNESS_FACTOR / 2;
 2426              		.loc 1 637 31 discriminator 1 view .LVU777
 2427 01c4 F2E7     		b	.L154
 2428              	.LVL254:
 2429              	.L174:
 2430              		.loc 1 639 25 view .LVU778
 2431 01c6 E31C     		adds	r3, r4, #3
 2432 01c8 F7E7     		b	.L156
 2433              	.LVL255:
 2434              	.L134:
 2435              		.loc 1 639 25 view .LVU779
 2436              	.LBE84:
 640:lvgl/src/core/lv_indev_scroll.c ****         }
 641:lvgl/src/core/lv_indev_scroll.c ****     }
 642:lvgl/src/core/lv_indev_scroll.c ****     else {
 643:lvgl/src/core/lv_indev_scroll.c ****         /*Scroll back to the boundary if required*/
 644:lvgl/src/core/lv_indev_scroll.c ****         if(scroll_end + diff < 0) diff = - scroll_end;
 2437              		.loc 1 644 9 is_stmt 1 view .LVU780
 2438              		.loc 1 644 11 is_stmt 0 view .LVU781
 2439 01ca E642     		cmn	r6, r4
 2440 01cc 05D4     		bmi	.L175
 2441              	.LVL256:
 2442              	.L157:
 645:lvgl/src/core/lv_indev_scroll.c ****         if(scroll_start - diff < 0) diff = scroll_start;
 2443              		.loc 1 645 9 is_stmt 1 view .LVU782
 2444              		.loc 1 645 25 is_stmt 0 view .LVU783
 2445 01ce 3B1B     		subs	r3, r7, r4
 2446              		.loc 1 645 11 view .LVU784
 2447 01d0 002B     		cmp	r3, #0
 2448 01d2 09DB     		blt	.L161
 2449 01d4 2046     		mov	r0, r4
 2450              	.LVL257:
 2451              	.L150:
 646:lvgl/src/core/lv_indev_scroll.c ****     }
 647:lvgl/src/core/lv_indev_scroll.c **** 
 648:lvgl/src/core/lv_indev_scroll.c ****     return diff;
 649:lvgl/src/core/lv_indev_scroll.c **** }
 2452              		.loc 1 649 1 view .LVU785
 2453 01d6 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2454              	.LVL258:
 2455              	.L175:
 644:lvgl/src/core/lv_indev_scroll.c ****         if(scroll_start - diff < 0) diff = scroll_start;
 2456              		.loc 1 644 35 is_stmt 1 discriminator 1 view .LVU786
 644:lvgl/src/core/lv_indev_scroll.c ****         if(scroll_start - diff < 0) diff = scroll_start;
 2457              		.loc 1 644 40 is_stmt 0 discriminator 1 view .LVU787
 2458 01da 7642     		rsbs	r6, r6, #0
 2459 01dc 34B2     		sxth	r4, r6
 2460              	.LVL259:
 644:lvgl/src/core/lv_indev_scroll.c ****         if(scroll_start - diff < 0) diff = scroll_start;
 2461              		.loc 1 644 40 discriminator 1 view .LVU788
 2462 01de F6E7     		b	.L157
 2463              	.LVL260:
 2464              	.L158:
 2465              	.LBB104:
 626:lvgl/src/core/lv_indev_scroll.c **** 
ARM GAS  C:\usertemp\cc28nhP0.s 			page 70


 2466              		.loc 1 626 82 discriminator 1 view .LVU789
 2467 01e0 2046     		mov	r0, r4
 2468 01e2 F8E7     		b	.L150
 2469              	.L160:
 634:lvgl/src/core/lv_indev_scroll.c **** 
 2470              		.loc 1 634 82 discriminator 1 view .LVU790
 2471 01e4 2046     		mov	r0, r4
 2472 01e6 F6E7     		b	.L150
 2473              	.LVL261:
 2474              	.L161:
 634:lvgl/src/core/lv_indev_scroll.c **** 
 2475              		.loc 1 634 82 discriminator 1 view .LVU791
 2476              	.LBE104:
 645:lvgl/src/core/lv_indev_scroll.c ****     }
 2477              		.loc 1 645 42 discriminator 1 view .LVU792
 2478 01e8 3846     		mov	r0, r7
 2479 01ea F4E7     		b	.L150
 2480              		.cfi_endproc
 2481              	.LFE167:
 2483              		.section	.text._lv_indev_scroll_handler,"ax",%progbits
 2484              		.align	1
 2485              		.global	_lv_indev_scroll_handler
 2486              		.syntax unified
 2487              		.thumb
 2488              		.thumb_func
 2490              	_lv_indev_scroll_handler:
 2491              	.LVL262:
 2492              	.LFB156:
  47:lvgl/src/core/lv_indev_scroll.c ****     lv_obj_t * scroll_obj = proc->types.pointer.scroll_obj;
 2493              		.loc 1 47 1 is_stmt 1 view -0
 2494              		.cfi_startproc
 2495              		@ args = 0, pretend = 0, frame = 8
 2496              		@ frame_needed = 0, uses_anonymous_args = 0
  47:lvgl/src/core/lv_indev_scroll.c ****     lv_obj_t * scroll_obj = proc->types.pointer.scroll_obj;
 2497              		.loc 1 47 1 is_stmt 0 view .LVU794
 2498 0000 70B5     		push	{r4, r5, r6, lr}
 2499              	.LCFI20:
 2500              		.cfi_def_cfa_offset 16
 2501              		.cfi_offset 4, -16
 2502              		.cfi_offset 5, -12
 2503              		.cfi_offset 6, -8
 2504              		.cfi_offset 14, -4
 2505 0002 84B0     		sub	sp, sp, #16
 2506              	.LCFI21:
 2507              		.cfi_def_cfa_offset 32
 2508 0004 0446     		mov	r4, r0
  48:lvgl/src/core/lv_indev_scroll.c ****     /*If there is no scroll object yet try to find one*/
 2509              		.loc 1 48 5 is_stmt 1 view .LVU795
  48:lvgl/src/core/lv_indev_scroll.c ****     /*If there is no scroll object yet try to find one*/
 2510              		.loc 1 48 16 is_stmt 0 view .LVU796
 2511 0006 856A     		ldr	r5, [r0, #40]
 2512              	.LVL263:
  50:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_sum.x += proc->types.pointer.vect.x;
 2513              		.loc 1 50 5 is_stmt 1 view .LVU797
  50:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_sum.x += proc->types.pointer.vect.x;
 2514              		.loc 1 50 7 is_stmt 0 view .LVU798
 2515 0008 002D     		cmp	r5, #0
ARM GAS  C:\usertemp\cc28nhP0.s 			page 71


 2516 000a 5ED0     		beq	.L186
 2517              	.LVL264:
 2518              	.L177:
  64:lvgl/src/core/lv_indev_scroll.c ****         lv_coord_t diff_x = 0;
 2519              		.loc 1 64 5 is_stmt 1 view .LVU799
  64:lvgl/src/core/lv_indev_scroll.c ****         lv_coord_t diff_x = 0;
 2520              		.loc 1 64 40 is_stmt 0 view .LVU800
 2521 000c 2369     		ldr	r3, [r4, #16]
  64:lvgl/src/core/lv_indev_scroll.c ****         lv_coord_t diff_x = 0;
 2522              		.loc 1 64 7 view .LVU801
 2523 000e 002B     		cmp	r3, #0
 2524 0010 59D0     		beq	.L176
 2525              	.LBB105:
  65:lvgl/src/core/lv_indev_scroll.c ****         lv_coord_t diff_y = 0;
 2526              		.loc 1 65 9 is_stmt 1 view .LVU802
  65:lvgl/src/core/lv_indev_scroll.c ****         lv_coord_t diff_y = 0;
 2527              		.loc 1 65 20 is_stmt 0 view .LVU803
 2528 0012 0023     		movs	r3, #0
 2529 0014 ADF80C30 		strh	r3, [sp, #12]	@ movhi
  66:lvgl/src/core/lv_indev_scroll.c **** 
 2530              		.loc 1 66 9 is_stmt 1 view .LVU804
  66:lvgl/src/core/lv_indev_scroll.c **** 
 2531              		.loc 1 66 20 is_stmt 0 view .LVU805
 2532 0018 ADF80E30 		strh	r3, [sp, #14]	@ movhi
  68:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t sr = lv_obj_get_scroll_right(scroll_obj);
 2533              		.loc 1 68 9 is_stmt 1 view .LVU806
  68:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t sr = lv_obj_get_scroll_right(scroll_obj);
 2534              		.loc 1 68 43 is_stmt 0 view .LVU807
 2535 001c 94F83C30 		ldrb	r3, [r4, #60]	@ zero_extendqisi2
 2536 0020 03F00F03 		and	r3, r3, #15
  68:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t sr = lv_obj_get_scroll_right(scroll_obj);
 2537              		.loc 1 68 11 view .LVU808
 2538 0024 032B     		cmp	r3, #3
 2539 0026 6AD0     		beq	.L187
 2540              	.LBB106:
  74:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t sb = lv_obj_get_scroll_bottom(scroll_obj);
 2541              		.loc 1 74 13 is_stmt 1 view .LVU809
  74:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t sb = lv_obj_get_scroll_bottom(scroll_obj);
 2542              		.loc 1 74 29 is_stmt 0 view .LVU810
 2543 0028 2846     		mov	r0, r5
 2544 002a FFF7FEFF 		bl	lv_obj_get_scroll_top
 2545              	.LVL265:
 2546 002e 0646     		mov	r6, r0
 2547              	.LVL266:
  75:lvgl/src/core/lv_indev_scroll.c ****             diff_y = elastic_diff(scroll_obj, proc->types.pointer.vect.y, st, sb, LV_DIR_VER);
 2548              		.loc 1 75 13 is_stmt 1 view .LVU811
  75:lvgl/src/core/lv_indev_scroll.c ****             diff_y = elastic_diff(scroll_obj, proc->types.pointer.vect.y, st, sb, LV_DIR_VER);
 2549              		.loc 1 75 29 is_stmt 0 view .LVU812
 2550 0030 2846     		mov	r0, r5
 2551 0032 FFF7FEFF 		bl	lv_obj_get_scroll_bottom
 2552              	.LVL267:
 2553 0036 0346     		mov	r3, r0
 2554              	.LVL268:
  76:lvgl/src/core/lv_indev_scroll.c ****         }
 2555              		.loc 1 76 13 is_stmt 1 view .LVU813
  76:lvgl/src/core/lv_indev_scroll.c ****         }
 2556              		.loc 1 76 22 is_stmt 0 view .LVU814
ARM GAS  C:\usertemp\cc28nhP0.s 			page 72


 2557 0038 0C22     		movs	r2, #12
 2558 003a 0092     		str	r2, [sp]
 2559 003c 3246     		mov	r2, r6
 2560 003e B4F91210 		ldrsh	r1, [r4, #18]
 2561 0042 2846     		mov	r0, r5
 2562 0044 FFF7FEFF 		bl	elastic_diff
 2563              	.LVL269:
  76:lvgl/src/core/lv_indev_scroll.c ****         }
 2564              		.loc 1 76 20 discriminator 1 view .LVU815
 2565 0048 ADF80E00 		strh	r0, [sp, #14]	@ movhi
 2566              	.LVL270:
 2567              	.L180:
  76:lvgl/src/core/lv_indev_scroll.c ****         }
 2568              		.loc 1 76 20 discriminator 1 view .LVU816
 2569              	.LBE106:
  79:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_LEFT)   == 0 && diff_x > 0) diff_x = 0;
 2570              		.loc 1 79 9 is_stmt 1 view .LVU817
  79:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_LEFT)   == 0 && diff_x > 0) diff_x = 0;
 2571              		.loc 1 79 31 is_stmt 0 view .LVU818
 2572 004c 2846     		mov	r0, r5
 2573 004e FFF7FEFF 		bl	lv_obj_get_scroll_dir
 2574              	.LVL271:
  80:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_RIGHT)  == 0 && diff_x < 0) diff_x = 0;
 2575              		.loc 1 80 9 is_stmt 1 view .LVU819
  80:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_RIGHT)  == 0 && diff_x < 0) diff_x = 0;
 2576              		.loc 1 80 11 is_stmt 0 view .LVU820
 2577 0052 10F0010F 		tst	r0, #1
 2578 0056 06D1     		bne	.L181
  80:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_RIGHT)  == 0 && diff_x < 0) diff_x = 0;
 2579              		.loc 1 80 56 discriminator 1 view .LVU821
 2580 0058 BDF90C30 		ldrsh	r3, [sp, #12]
  80:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_RIGHT)  == 0 && diff_x < 0) diff_x = 0;
 2581              		.loc 1 80 46 discriminator 1 view .LVU822
 2582 005c 002B     		cmp	r3, #0
 2583 005e 02DD     		ble	.L181
  80:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_RIGHT)  == 0 && diff_x < 0) diff_x = 0;
 2584              		.loc 1 80 61 is_stmt 1 discriminator 2 view .LVU823
  80:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_RIGHT)  == 0 && diff_x < 0) diff_x = 0;
 2585              		.loc 1 80 68 is_stmt 0 discriminator 2 view .LVU824
 2586 0060 0023     		movs	r3, #0
 2587 0062 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 2588              	.L181:
  81:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_TOP)    == 0 && diff_y > 0) diff_y = 0;
 2589              		.loc 1 81 9 is_stmt 1 view .LVU825
  81:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_TOP)    == 0 && diff_y > 0) diff_y = 0;
 2590              		.loc 1 81 11 is_stmt 0 view .LVU826
 2591 0066 10F0020F 		tst	r0, #2
 2592 006a 03D1     		bne	.L182
  81:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_TOP)    == 0 && diff_y > 0) diff_y = 0;
 2593              		.loc 1 81 56 discriminator 1 view .LVU827
 2594 006c BDF90C30 		ldrsh	r3, [sp, #12]
  81:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_TOP)    == 0 && diff_y > 0) diff_y = 0;
 2595              		.loc 1 81 46 discriminator 1 view .LVU828
 2596 0070 002B     		cmp	r3, #0
 2597 0072 57DB     		blt	.L188
 2598              	.L182:
  82:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_BOTTOM) == 0 && diff_y < 0) diff_y = 0;
ARM GAS  C:\usertemp\cc28nhP0.s 			page 73


 2599              		.loc 1 82 9 is_stmt 1 view .LVU829
  82:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_BOTTOM) == 0 && diff_y < 0) diff_y = 0;
 2600              		.loc 1 82 11 is_stmt 0 view .LVU830
 2601 0074 10F0040F 		tst	r0, #4
 2602 0078 06D1     		bne	.L183
  82:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_BOTTOM) == 0 && diff_y < 0) diff_y = 0;
 2603              		.loc 1 82 56 discriminator 1 view .LVU831
 2604 007a BDF90E30 		ldrsh	r3, [sp, #14]
  82:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_BOTTOM) == 0 && diff_y < 0) diff_y = 0;
 2605              		.loc 1 82 46 discriminator 1 view .LVU832
 2606 007e 002B     		cmp	r3, #0
 2607 0080 02DD     		ble	.L183
  82:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_BOTTOM) == 0 && diff_y < 0) diff_y = 0;
 2608              		.loc 1 82 61 is_stmt 1 discriminator 2 view .LVU833
  82:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_BOTTOM) == 0 && diff_y < 0) diff_y = 0;
 2609              		.loc 1 82 68 is_stmt 0 discriminator 2 view .LVU834
 2610 0082 0023     		movs	r3, #0
 2611 0084 ADF80E30 		strh	r3, [sp, #14]	@ movhi
 2612              	.L183:
  83:lvgl/src/core/lv_indev_scroll.c **** 
 2613              		.loc 1 83 9 is_stmt 1 view .LVU835
  83:lvgl/src/core/lv_indev_scroll.c **** 
 2614              		.loc 1 83 11 is_stmt 0 view .LVU836
 2615 0088 10F0080F 		tst	r0, #8
 2616 008c 03D1     		bne	.L184
  83:lvgl/src/core/lv_indev_scroll.c **** 
 2617              		.loc 1 83 56 discriminator 1 view .LVU837
 2618 008e BDF90E30 		ldrsh	r3, [sp, #14]
  83:lvgl/src/core/lv_indev_scroll.c **** 
 2619              		.loc 1 83 46 discriminator 1 view .LVU838
 2620 0092 002B     		cmp	r3, #0
 2621 0094 4ADB     		blt	.L189
 2622              	.L184:
  86:lvgl/src/core/lv_indev_scroll.c **** 
 2623              		.loc 1 86 9 is_stmt 1 view .LVU839
 2624 0096 0DF10E02 		add	r2, sp, #14
 2625 009a 03A9     		add	r1, sp, #12
 2626 009c 2046     		mov	r0, r4
 2627              	.LVL272:
  86:lvgl/src/core/lv_indev_scroll.c **** 
 2628              		.loc 1 86 9 is_stmt 0 view .LVU840
 2629 009e FFF7FEFF 		bl	scroll_limit_diff
 2630              	.LVL273:
  88:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_sum.x += diff_x;
 2631              		.loc 1 88 9 is_stmt 1 view .LVU841
 2632 00a2 0023     		movs	r3, #0
 2633 00a4 BDF90E20 		ldrsh	r2, [sp, #14]
 2634 00a8 BDF90C10 		ldrsh	r1, [sp, #12]
 2635 00ac 2846     		mov	r0, r5
 2636 00ae FFF7FEFF 		bl	lv_obj_scroll_by
 2637              	.LVL274:
  89:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_sum.y += diff_y;
 2638              		.loc 1 89 9 view .LVU842
  89:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_sum.y += diff_y;
 2639              		.loc 1 89 39 is_stmt 0 view .LVU843
 2640 00b2 A38A     		ldrh	r3, [r4, #20]
  89:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_sum.y += diff_y;
ARM GAS  C:\usertemp\cc28nhP0.s 			page 74


 2641              		.loc 1 89 42 view .LVU844
 2642 00b4 BDF80C20 		ldrh	r2, [sp, #12]
 2643 00b8 1344     		add	r3, r3, r2
 2644 00ba A382     		strh	r3, [r4, #20]	@ movhi
  90:lvgl/src/core/lv_indev_scroll.c ****     }
 2645              		.loc 1 90 9 is_stmt 1 view .LVU845
  90:lvgl/src/core/lv_indev_scroll.c ****     }
 2646              		.loc 1 90 39 is_stmt 0 view .LVU846
 2647 00bc E38A     		ldrh	r3, [r4, #22]
  90:lvgl/src/core/lv_indev_scroll.c ****     }
 2648              		.loc 1 90 42 view .LVU847
 2649 00be BDF80E20 		ldrh	r2, [sp, #14]
 2650 00c2 1344     		add	r3, r3, r2
 2651 00c4 E382     		strh	r3, [r4, #22]	@ movhi
 2652              	.LVL275:
 2653              	.L176:
  90:lvgl/src/core/lv_indev_scroll.c ****     }
 2654              		.loc 1 90 42 view .LVU848
 2655              	.LBE105:
  92:lvgl/src/core/lv_indev_scroll.c **** 
 2656              		.loc 1 92 1 view .LVU849
 2657 00c6 04B0     		add	sp, sp, #16
 2658              	.LCFI22:
 2659              		.cfi_remember_state
 2660              		.cfi_def_cfa_offset 16
 2661              		@ sp needed
 2662 00c8 70BD     		pop	{r4, r5, r6, pc}
 2663              	.LVL276:
 2664              	.L186:
 2665              	.LCFI23:
 2666              		.cfi_restore_state
  51:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_sum.y += proc->types.pointer.vect.y;
 2667              		.loc 1 51 9 is_stmt 1 view .LVU850
  51:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_sum.y += proc->types.pointer.vect.y;
 2668              		.loc 1 51 39 is_stmt 0 view .LVU851
 2669 00ca 838A     		ldrh	r3, [r0, #20]
  51:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_sum.y += proc->types.pointer.vect.y;
 2670              		.loc 1 51 69 view .LVU852
 2671 00cc 028A     		ldrh	r2, [r0, #16]
  51:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_sum.y += proc->types.pointer.vect.y;
 2672              		.loc 1 51 42 view .LVU853
 2673 00ce 1344     		add	r3, r3, r2
 2674 00d0 8382     		strh	r3, [r0, #20]	@ movhi
  52:lvgl/src/core/lv_indev_scroll.c **** 
 2675              		.loc 1 52 9 is_stmt 1 view .LVU854
  52:lvgl/src/core/lv_indev_scroll.c **** 
 2676              		.loc 1 52 39 is_stmt 0 view .LVU855
 2677 00d2 C38A     		ldrh	r3, [r0, #22]
  52:lvgl/src/core/lv_indev_scroll.c **** 
 2678              		.loc 1 52 69 view .LVU856
 2679 00d4 428A     		ldrh	r2, [r0, #18]
  52:lvgl/src/core/lv_indev_scroll.c **** 
 2680              		.loc 1 52 42 view .LVU857
 2681 00d6 1344     		add	r3, r3, r2
 2682 00d8 C382     		strh	r3, [r0, #22]	@ movhi
  54:lvgl/src/core/lv_indev_scroll.c ****         if(scroll_obj == NULL) return;
 2683              		.loc 1 54 9 is_stmt 1 view .LVU858
ARM GAS  C:\usertemp\cc28nhP0.s 			page 75


  54:lvgl/src/core/lv_indev_scroll.c ****         if(scroll_obj == NULL) return;
 2684              		.loc 1 54 22 is_stmt 0 view .LVU859
 2685 00da FFF7FEFF 		bl	find_scroll_obj
 2686              	.LVL277:
  55:lvgl/src/core/lv_indev_scroll.c **** 
 2687              		.loc 1 55 9 is_stmt 1 view .LVU860
  55:lvgl/src/core/lv_indev_scroll.c **** 
 2688              		.loc 1 55 11 is_stmt 0 view .LVU861
 2689 00de 0546     		mov	r5, r0
 2690 00e0 0028     		cmp	r0, #0
 2691 00e2 F0D0     		beq	.L176
  57:lvgl/src/core/lv_indev_scroll.c **** 
 2692              		.loc 1 57 9 is_stmt 1 view .LVU862
 2693 00e4 2046     		mov	r0, r4
 2694              	.LVL278:
  57:lvgl/src/core/lv_indev_scroll.c **** 
 2695              		.loc 1 57 9 is_stmt 0 view .LVU863
 2696 00e6 FFF7FEFF 		bl	init_scroll_limits
 2697              	.LVL279:
  59:lvgl/src/core/lv_indev_scroll.c ****         if(proc->reset_query) return;
 2698              		.loc 1 59 9 is_stmt 1 view .LVU864
 2699 00ea 0022     		movs	r2, #0
 2700 00ec 0921     		movs	r1, #9
 2701 00ee 2846     		mov	r0, r5
 2702 00f0 FFF7FEFF 		bl	lv_event_send
 2703              	.LVL280:
  60:lvgl/src/core/lv_indev_scroll.c ****     }
 2704              		.loc 1 60 9 view .LVU865
  60:lvgl/src/core/lv_indev_scroll.c ****     }
 2705              		.loc 1 60 12 is_stmt 0 view .LVU866
 2706 00f4 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
  60:lvgl/src/core/lv_indev_scroll.c ****     }
 2707              		.loc 1 60 11 view .LVU867
 2708 00f6 13F0020F 		tst	r3, #2
 2709 00fa 87D0     		beq	.L177
 2710 00fc E3E7     		b	.L176
 2711              	.L187:
 2712              	.LBB108:
 2713              	.LBB107:
  69:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t sl = lv_obj_get_scroll_left(scroll_obj);
 2714              		.loc 1 69 13 is_stmt 1 view .LVU868
  69:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t sl = lv_obj_get_scroll_left(scroll_obj);
 2715              		.loc 1 69 29 is_stmt 0 view .LVU869
 2716 00fe 2846     		mov	r0, r5
 2717 0100 FFF7FEFF 		bl	lv_obj_get_scroll_right
 2718              	.LVL281:
 2719 0104 0646     		mov	r6, r0
 2720              	.LVL282:
  70:lvgl/src/core/lv_indev_scroll.c ****             diff_x = elastic_diff(scroll_obj, proc->types.pointer.vect.x, sl, sr, LV_DIR_HOR);
 2721              		.loc 1 70 13 is_stmt 1 view .LVU870
  70:lvgl/src/core/lv_indev_scroll.c ****             diff_x = elastic_diff(scroll_obj, proc->types.pointer.vect.x, sl, sr, LV_DIR_HOR);
 2722              		.loc 1 70 29 is_stmt 0 view .LVU871
 2723 0106 2846     		mov	r0, r5
 2724 0108 FFF7FEFF 		bl	lv_obj_get_scroll_left
 2725              	.LVL283:
 2726 010c 0246     		mov	r2, r0
 2727              	.LVL284:
ARM GAS  C:\usertemp\cc28nhP0.s 			page 76


  71:lvgl/src/core/lv_indev_scroll.c ****         }
 2728              		.loc 1 71 13 is_stmt 1 view .LVU872
  71:lvgl/src/core/lv_indev_scroll.c ****         }
 2729              		.loc 1 71 22 is_stmt 0 view .LVU873
 2730 010e 0323     		movs	r3, #3
 2731 0110 0093     		str	r3, [sp]
 2732 0112 3346     		mov	r3, r6
 2733 0114 B4F91010 		ldrsh	r1, [r4, #16]
 2734 0118 2846     		mov	r0, r5
 2735 011a FFF7FEFF 		bl	elastic_diff
 2736              	.LVL285:
  71:lvgl/src/core/lv_indev_scroll.c ****         }
 2737              		.loc 1 71 20 discriminator 1 view .LVU874
 2738 011e ADF80C00 		strh	r0, [sp, #12]	@ movhi
 2739              	.LBE107:
 2740 0122 93E7     		b	.L180
 2741              	.LVL286:
 2742              	.L188:
  81:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_TOP)    == 0 && diff_y > 0) diff_y = 0;
 2743              		.loc 1 81 61 is_stmt 1 discriminator 2 view .LVU875
  81:lvgl/src/core/lv_indev_scroll.c ****         if((scroll_dir & LV_DIR_TOP)    == 0 && diff_y > 0) diff_y = 0;
 2744              		.loc 1 81 68 is_stmt 0 discriminator 2 view .LVU876
 2745 0124 0023     		movs	r3, #0
 2746 0126 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 2747 012a A3E7     		b	.L182
 2748              	.L189:
  83:lvgl/src/core/lv_indev_scroll.c **** 
 2749              		.loc 1 83 61 is_stmt 1 discriminator 2 view .LVU877
  83:lvgl/src/core/lv_indev_scroll.c **** 
 2750              		.loc 1 83 68 is_stmt 0 discriminator 2 view .LVU878
 2751 012c 0023     		movs	r3, #0
 2752 012e ADF80E30 		strh	r3, [sp, #14]	@ movhi
 2753 0132 B0E7     		b	.L184
 2754              	.LBE108:
 2755              		.cfi_endproc
 2756              	.LFE156:
 2758              		.section	.text._lv_indev_scroll_throw_handler,"ax",%progbits
 2759              		.align	1
 2760              		.global	_lv_indev_scroll_throw_handler
 2761              		.syntax unified
 2762              		.thumb
 2763              		.thumb_func
 2765              	_lv_indev_scroll_throw_handler:
 2766              	.LVL287:
 2767              	.LFB157:
  96:lvgl/src/core/lv_indev_scroll.c ****     lv_obj_t * scroll_obj = proc->types.pointer.scroll_obj;
 2768              		.loc 1 96 1 is_stmt 1 view -0
 2769              		.cfi_startproc
 2770              		@ args = 0, pretend = 0, frame = 8
 2771              		@ frame_needed = 0, uses_anonymous_args = 0
  96:lvgl/src/core/lv_indev_scroll.c ****     lv_obj_t * scroll_obj = proc->types.pointer.scroll_obj;
 2772              		.loc 1 96 1 is_stmt 0 view .LVU880
 2773 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 2774              	.LCFI24:
 2775              		.cfi_def_cfa_offset 28
 2776              		.cfi_offset 4, -28
 2777              		.cfi_offset 5, -24
ARM GAS  C:\usertemp\cc28nhP0.s 			page 77


 2778              		.cfi_offset 6, -20
 2779              		.cfi_offset 7, -16
 2780              		.cfi_offset 8, -12
 2781              		.cfi_offset 9, -8
 2782              		.cfi_offset 14, -4
 2783 0004 85B0     		sub	sp, sp, #20
 2784              	.LCFI25:
 2785              		.cfi_def_cfa_offset 48
  97:lvgl/src/core/lv_indev_scroll.c ****     if(scroll_obj == NULL) return;
 2786              		.loc 1 97 5 is_stmt 1 view .LVU881
  97:lvgl/src/core/lv_indev_scroll.c ****     if(scroll_obj == NULL) return;
 2787              		.loc 1 97 16 is_stmt 0 view .LVU882
 2788 0006 856A     		ldr	r5, [r0, #40]
 2789              	.LVL288:
  98:lvgl/src/core/lv_indev_scroll.c ****     if(proc->types.pointer.scroll_dir == LV_DIR_NONE) return;
 2790              		.loc 1 98 5 is_stmt 1 view .LVU883
  98:lvgl/src/core/lv_indev_scroll.c ****     if(proc->types.pointer.scroll_dir == LV_DIR_NONE) return;
 2791              		.loc 1 98 7 is_stmt 0 view .LVU884
 2792 0008 2DB1     		cbz	r5, .L190
 2793 000a 0446     		mov	r4, r0
  99:lvgl/src/core/lv_indev_scroll.c **** 
 2794              		.loc 1 99 5 is_stmt 1 view .LVU885
  99:lvgl/src/core/lv_indev_scroll.c **** 
 2795              		.loc 1 99 39 is_stmt 0 view .LVU886
 2796 000c 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
  99:lvgl/src/core/lv_indev_scroll.c **** 
 2797              		.loc 1 99 7 view .LVU887
 2798 0010 13F00F0F 		tst	r3, #15
 2799 0014 02D1     		bne	.L202
 2800              	.LVL289:
 2801              	.L190:
 199:lvgl/src/core/lv_indev_scroll.c **** 
 2802              		.loc 1 199 1 view .LVU888
 2803 0016 05B0     		add	sp, sp, #20
 2804              	.LCFI26:
 2805              		.cfi_remember_state
 2806              		.cfi_def_cfa_offset 28
 2807              		@ sp needed
 2808 0018 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 2809              	.LVL290:
 2810              	.L202:
 2811              	.LCFI27:
 2812              		.cfi_restore_state
 102:lvgl/src/core/lv_indev_scroll.c ****     lv_coord_t scroll_throw = indev_act->driver->scroll_throw;
 2813              		.loc 1 102 5 is_stmt 1 view .LVU889
 102:lvgl/src/core/lv_indev_scroll.c ****     lv_coord_t scroll_throw = indev_act->driver->scroll_throw;
 2814              		.loc 1 102 30 is_stmt 0 view .LVU890
 2815 001c FFF7FEFF 		bl	lv_indev_get_act
 2816              	.LVL291:
 102:lvgl/src/core/lv_indev_scroll.c ****     lv_coord_t scroll_throw = indev_act->driver->scroll_throw;
 2817              		.loc 1 102 30 view .LVU891
 2818 0020 0646     		mov	r6, r0
 2819              	.LVL292:
 103:lvgl/src/core/lv_indev_scroll.c **** 
 2820              		.loc 1 103 5 is_stmt 1 view .LVU892
 103:lvgl/src/core/lv_indev_scroll.c **** 
 2821              		.loc 1 103 40 is_stmt 0 view .LVU893
ARM GAS  C:\usertemp\cc28nhP0.s 			page 78


 2822 0022 0368     		ldr	r3, [r0]
 103:lvgl/src/core/lv_indev_scroll.c **** 
 2823              		.loc 1 103 48 view .LVU894
 2824 0024 93F81990 		ldrb	r9, [r3, #25]	@ zero_extendqisi2
 2825              	.LVL293:
 105:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_throw_vect.y = 0;
 2826              		.loc 1 105 5 is_stmt 1 view .LVU895
 105:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_throw_vect.y = 0;
 2827              		.loc 1 105 8 is_stmt 0 view .LVU896
 2828 0028 4021     		movs	r1, #64
 2829 002a 2846     		mov	r0, r5
 2830              	.LVL294:
 105:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_throw_vect.y = 0;
 2831              		.loc 1 105 8 view .LVU897
 2832 002c FFF7FEFF 		bl	lv_obj_has_flag
 2833              	.LVL295:
 105:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_throw_vect.y = 0;
 2834              		.loc 1 105 7 discriminator 1 view .LVU898
 2835 0030 10B9     		cbnz	r0, .L192
 106:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_throw_vect.x = 0;
 2836              		.loc 1 106 9 is_stmt 1 view .LVU899
 106:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_throw_vect.x = 0;
 2837              		.loc 1 106 49 is_stmt 0 view .LVU900
 2838 0032 0023     		movs	r3, #0
 2839 0034 6383     		strh	r3, [r4, #26]	@ movhi
 107:lvgl/src/core/lv_indev_scroll.c ****     }
 2840              		.loc 1 107 9 is_stmt 1 view .LVU901
 107:lvgl/src/core/lv_indev_scroll.c ****     }
 2841              		.loc 1 107 49 is_stmt 0 view .LVU902
 2842 0036 2383     		strh	r3, [r4, #24]	@ movhi
 2843              	.L192:
 110:lvgl/src/core/lv_indev_scroll.c ****     lv_scroll_snap_t align_y = lv_obj_get_scroll_snap_y(scroll_obj);
 2844              		.loc 1 110 5 is_stmt 1 view .LVU903
 110:lvgl/src/core/lv_indev_scroll.c ****     lv_scroll_snap_t align_y = lv_obj_get_scroll_snap_y(scroll_obj);
 2845              		.loc 1 110 32 is_stmt 0 view .LVU904
 2846 0038 2846     		mov	r0, r5
 2847 003a FFF7FEFF 		bl	lv_obj_get_scroll_snap_x
 2848              	.LVL296:
 2849 003e 8046     		mov	r8, r0
 2850              	.LVL297:
 111:lvgl/src/core/lv_indev_scroll.c **** 
 2851              		.loc 1 111 5 is_stmt 1 view .LVU905
 111:lvgl/src/core/lv_indev_scroll.c **** 
 2852              		.loc 1 111 32 is_stmt 0 view .LVU906
 2853 0040 2846     		mov	r0, r5
 2854 0042 FFF7FEFF 		bl	lv_obj_get_scroll_snap_y
 2855              	.LVL298:
 2856 0046 0746     		mov	r7, r0
 2857              	.LVL299:
 113:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_throw_vect.x = 0;
 2858              		.loc 1 113 5 is_stmt 1 view .LVU907
 113:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_throw_vect.x = 0;
 2859              		.loc 1 113 39 is_stmt 0 view .LVU908
 2860 0048 94F83C30 		ldrb	r3, [r4, #60]	@ zero_extendqisi2
 2861 004c 03F00F03 		and	r3, r3, #15
 113:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_throw_vect.x = 0;
 2862              		.loc 1 113 7 view .LVU909
ARM GAS  C:\usertemp\cc28nhP0.s 			page 79


 2863 0050 0C2B     		cmp	r3, #12
 2864 0052 1DD0     		beq	.L203
 137:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_throw_vect.y = 0;
 2865              		.loc 1 137 10 is_stmt 1 view .LVU910
 137:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_throw_vect.y = 0;
 2866              		.loc 1 137 12 is_stmt 0 view .LVU911
 2867 0054 032B     		cmp	r3, #3
 2868 0056 64D0     		beq	.L204
 2869              	.LVL300:
 2870              	.L195:
 163:lvgl/src/core/lv_indev_scroll.c ****         /*Revert if scrolled in*/
 2871              		.loc 1 163 5 is_stmt 1 view .LVU912
 163:lvgl/src/core/lv_indev_scroll.c ****         /*Revert if scrolled in*/
 2872              		.loc 1 163 53 is_stmt 0 view .LVU913
 2873 0058 A369     		ldr	r3, [r4, #24]
 163:lvgl/src/core/lv_indev_scroll.c ****         /*Revert if scrolled in*/
 2874              		.loc 1 163 7 view .LVU914
 2875 005a 002B     		cmp	r3, #0
 2876 005c DBD1     		bne	.L190
 166:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t st = lv_obj_get_scroll_top(scroll_obj);
 2877              		.loc 1 166 9 is_stmt 1 view .LVU915
 166:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t st = lv_obj_get_scroll_top(scroll_obj);
 2878              		.loc 1 166 11 is_stmt 0 view .LVU916
 2879 005e 002F     		cmp	r7, #0
 2880 0060 00F0AA80 		beq	.L205
 2881              	.L197:
 180:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t sl = lv_obj_get_scroll_left(scroll_obj);
 2882              		.loc 1 180 9 is_stmt 1 view .LVU917
 180:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t sl = lv_obj_get_scroll_left(scroll_obj);
 2883              		.loc 1 180 11 is_stmt 0 view .LVU918
 2884 0064 B8F1000F 		cmp	r8, #0
 2885 0068 00F0C680 		beq	.L206
 2886              	.L199:
 193:lvgl/src/core/lv_indev_scroll.c ****         if(proc->reset_query) return;
 2887              		.loc 1 193 9 is_stmt 1 view .LVU919
 2888 006c 3246     		mov	r2, r6
 2889 006e 0A21     		movs	r1, #10
 2890 0070 2846     		mov	r0, r5
 2891 0072 FFF7FEFF 		bl	lv_event_send
 2892              	.LVL301:
 194:lvgl/src/core/lv_indev_scroll.c **** 
 2893              		.loc 1 194 9 view .LVU920
 194:lvgl/src/core/lv_indev_scroll.c **** 
 2894              		.loc 1 194 12 is_stmt 0 view .LVU921
 2895 0076 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 194:lvgl/src/core/lv_indev_scroll.c **** 
 2896              		.loc 1 194 11 view .LVU922
 2897 0078 13F0020F 		tst	r3, #2
 2898 007c CBD1     		bne	.L190
 196:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_obj = NULL;
 2899              		.loc 1 196 9 is_stmt 1 view .LVU923
 196:lvgl/src/core/lv_indev_scroll.c ****         proc->types.pointer.scroll_obj = NULL;
 2900              		.loc 1 196 40 is_stmt 0 view .LVU924
 2901 007e 94F83C30 		ldrb	r3, [r4, #60]	@ zero_extendqisi2
 2902 0082 23F00F03 		bic	r3, r3, #15
 2903 0086 84F83C30 		strb	r3, [r4, #60]
 197:lvgl/src/core/lv_indev_scroll.c ****     }
ARM GAS  C:\usertemp\cc28nhP0.s 			page 80


 2904              		.loc 1 197 9 is_stmt 1 view .LVU925
 197:lvgl/src/core/lv_indev_scroll.c ****     }
 2905              		.loc 1 197 40 is_stmt 0 view .LVU926
 2906 008a 0023     		movs	r3, #0
 2907 008c A362     		str	r3, [r4, #40]
 2908 008e C2E7     		b	.L190
 2909              	.LVL302:
 2910              	.L203:
 114:lvgl/src/core/lv_indev_scroll.c ****         /*If no snapping "throw"*/
 2911              		.loc 1 114 9 is_stmt 1 view .LVU927
 114:lvgl/src/core/lv_indev_scroll.c ****         /*If no snapping "throw"*/
 2912              		.loc 1 114 49 is_stmt 0 view .LVU928
 2913 0090 0023     		movs	r3, #0
 2914 0092 2383     		strh	r3, [r4, #24]	@ movhi
 116:lvgl/src/core/lv_indev_scroll.c ****             proc->types.pointer.scroll_throw_vect.y =
 2915              		.loc 1 116 9 is_stmt 1 view .LVU929
 116:lvgl/src/core/lv_indev_scroll.c ****             proc->types.pointer.scroll_throw_vect.y =
 2916              		.loc 1 116 11 is_stmt 0 view .LVU930
 2917 0094 20BB     		cbnz	r0, .L194
 2918              	.LBB109:
 117:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_throw_vect.y * (100 - scroll_throw) / 100;
 2919              		.loc 1 117 13 is_stmt 1 view .LVU931
 118:lvgl/src/core/lv_indev_scroll.c **** 
 2920              		.loc 1 118 54 is_stmt 0 view .LVU932
 2921 0096 B4F91A30 		ldrsh	r3, [r4, #26]
 118:lvgl/src/core/lv_indev_scroll.c **** 
 2922              		.loc 1 118 64 view .LVU933
 2923 009a C9F16409 		rsb	r9, r9, #100
 2924              	.LVL303:
 118:lvgl/src/core/lv_indev_scroll.c **** 
 2925              		.loc 1 118 57 view .LVU934
 2926 009e 09FB03F3 		mul	r3, r9, r3
 118:lvgl/src/core/lv_indev_scroll.c **** 
 2927              		.loc 1 118 80 view .LVU935
 2928 00a2 654A     		ldr	r2, .L209
 2929 00a4 82FB0312 		smull	r1, r2, r2, r3
 2930 00a8 DB17     		asrs	r3, r3, #31
 2931 00aa C3EB6213 		rsb	r3, r3, r2, asr #5
 117:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_throw_vect.y * (100 - scroll_throw) / 100;
 2932              		.loc 1 117 53 view .LVU936
 2933 00ae 6383     		strh	r3, [r4, #26]	@ movhi
 120:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t st = lv_obj_get_scroll_top(scroll_obj);
 2934              		.loc 1 120 13 is_stmt 1 view .LVU937
 120:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t st = lv_obj_get_scroll_top(scroll_obj);
 2935              		.loc 1 120 29 is_stmt 0 view .LVU938
 2936 00b0 2846     		mov	r0, r5
 2937              	.LVL304:
 120:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t st = lv_obj_get_scroll_top(scroll_obj);
 2938              		.loc 1 120 29 view .LVU939
 2939 00b2 FFF7FEFF 		bl	lv_obj_get_scroll_bottom
 2940              	.LVL305:
 2941 00b6 8146     		mov	r9, r0
 2942              	.LVL306:
 121:lvgl/src/core/lv_indev_scroll.c **** 
 2943              		.loc 1 121 13 is_stmt 1 view .LVU940
 121:lvgl/src/core/lv_indev_scroll.c **** 
 2944              		.loc 1 121 29 is_stmt 0 view .LVU941
ARM GAS  C:\usertemp\cc28nhP0.s 			page 81


 2945 00b8 2846     		mov	r0, r5
 2946 00ba FFF7FEFF 		bl	lv_obj_get_scroll_top
 2947              	.LVL307:
 2948 00be 0246     		mov	r2, r0
 2949              	.LVL308:
 123:lvgl/src/core/lv_indev_scroll.c ****                                                                    LV_DIR_VER);
 2950              		.loc 1 123 13 is_stmt 1 view .LVU942
 123:lvgl/src/core/lv_indev_scroll.c ****                                                                    LV_DIR_VER);
 2951              		.loc 1 123 55 is_stmt 0 view .LVU943
 2952 00c0 0C23     		movs	r3, #12
 2953 00c2 0093     		str	r3, [sp]
 2954 00c4 4B46     		mov	r3, r9
 2955 00c6 B4F91A10 		ldrsh	r1, [r4, #26]
 2956 00ca 2846     		mov	r0, r5
 2957 00cc FFF7FEFF 		bl	elastic_diff
 2958              	.LVL309:
 123:lvgl/src/core/lv_indev_scroll.c ****                                                                    LV_DIR_VER);
 2959              		.loc 1 123 55 view .LVU944
 2960 00d0 0246     		mov	r2, r0
 123:lvgl/src/core/lv_indev_scroll.c ****                                                                    LV_DIR_VER);
 2961              		.loc 1 123 53 discriminator 1 view .LVU945
 2962 00d2 6083     		strh	r0, [r4, #26]	@ movhi
 126:lvgl/src/core/lv_indev_scroll.c ****         }
 2963              		.loc 1 126 13 is_stmt 1 view .LVU946
 2964 00d4 0023     		movs	r3, #0
 2965 00d6 1946     		mov	r1, r3
 2966 00d8 2846     		mov	r0, r5
 2967 00da FFF7FEFF 		bl	lv_obj_scroll_by
 2968              	.LVL310:
 2969              	.LBE109:
 2970 00de BBE7     		b	.L195
 2971              	.LVL311:
 2972              	.L194:
 2973              	.LBB110:
 130:lvgl/src/core/lv_indev_scroll.c ****             proc->types.pointer.scroll_throw_vect.y = 0;
 2974              		.loc 1 130 13 view .LVU947
 130:lvgl/src/core/lv_indev_scroll.c ****             proc->types.pointer.scroll_throw_vect.y = 0;
 2975              		.loc 1 130 33 is_stmt 0 view .LVU948
 2976 00e0 2046     		mov	r0, r4
 2977              	.LVL312:
 130:lvgl/src/core/lv_indev_scroll.c ****             proc->types.pointer.scroll_throw_vect.y = 0;
 2978              		.loc 1 130 33 view .LVU949
 2979 00e2 FFF7FEFF 		bl	scroll_throw_predict_y
 2980              	.LVL313:
 130:lvgl/src/core/lv_indev_scroll.c ****             proc->types.pointer.scroll_throw_vect.y = 0;
 2981              		.loc 1 130 24 discriminator 1 view .LVU950
 2982 00e6 ADF80E00 		strh	r0, [sp, #14]	@ movhi
 131:lvgl/src/core/lv_indev_scroll.c ****             scroll_limit_diff(proc, NULL, &diff_y);
 2983              		.loc 1 131 13 is_stmt 1 view .LVU951
 131:lvgl/src/core/lv_indev_scroll.c ****             scroll_limit_diff(proc, NULL, &diff_y);
 2984              		.loc 1 131 53 is_stmt 0 view .LVU952
 2985 00ea 4FF00009 		mov	r9, #0
 2986              	.LVL314:
 131:lvgl/src/core/lv_indev_scroll.c ****             scroll_limit_diff(proc, NULL, &diff_y);
 2987              		.loc 1 131 53 view .LVU953
 2988 00ee A4F81A90 		strh	r9, [r4, #26]	@ movhi
 132:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t y = find_snap_point_y(scroll_obj, LV_COORD_MIN, LV_COORD_MAX, diff_y);
ARM GAS  C:\usertemp\cc28nhP0.s 			page 82


 2989              		.loc 1 132 13 is_stmt 1 view .LVU954
 2990 00f2 0DF10E02 		add	r2, sp, #14
 2991 00f6 4946     		mov	r1, r9
 2992 00f8 2046     		mov	r0, r4
 2993 00fa FFF7FEFF 		bl	scroll_limit_diff
 2994              	.LVL315:
 133:lvgl/src/core/lv_indev_scroll.c ****             lv_obj_scroll_by(scroll_obj, 0, diff_y + y, LV_ANIM_ON);
 2995              		.loc 1 133 13 view .LVU955
 133:lvgl/src/core/lv_indev_scroll.c ****             lv_obj_scroll_by(scroll_obj, 0, diff_y + y, LV_ANIM_ON);
 2996              		.loc 1 133 28 is_stmt 0 view .LVU956
 2997 00fe BDF90E30 		ldrsh	r3, [sp, #14]
 2998 0102 41F6FF72 		movw	r2, #8191
 2999 0106 4D49     		ldr	r1, .L209+4
 3000 0108 2846     		mov	r0, r5
 3001 010a FFF7FEFF 		bl	find_snap_point_y
 3002              	.LVL316:
 134:lvgl/src/core/lv_indev_scroll.c ****         }
 3003              		.loc 1 134 13 is_stmt 1 view .LVU957
 134:lvgl/src/core/lv_indev_scroll.c ****         }
 3004              		.loc 1 134 52 is_stmt 0 view .LVU958
 3005 010e BDF80E30 		ldrh	r3, [sp, #14]
 3006 0112 C218     		adds	r2, r0, r3
 134:lvgl/src/core/lv_indev_scroll.c ****         }
 3007              		.loc 1 134 13 view .LVU959
 3008 0114 0123     		movs	r3, #1
 3009 0116 12B2     		sxth	r2, r2
 3010 0118 4946     		mov	r1, r9
 3011 011a 2846     		mov	r0, r5
 3012              	.LVL317:
 134:lvgl/src/core/lv_indev_scroll.c ****         }
 3013              		.loc 1 134 13 view .LVU960
 3014 011c FFF7FEFF 		bl	lv_obj_scroll_by
 3015              	.LVL318:
 3016 0120 9AE7     		b	.L195
 3017              	.LVL319:
 3018              	.L204:
 134:lvgl/src/core/lv_indev_scroll.c ****         }
 3019              		.loc 1 134 13 view .LVU961
 3020              	.LBE110:
 138:lvgl/src/core/lv_indev_scroll.c ****         /*If no snapping "throw"*/
 3021              		.loc 1 138 9 is_stmt 1 view .LVU962
 138:lvgl/src/core/lv_indev_scroll.c ****         /*If no snapping "throw"*/
 3022              		.loc 1 138 49 is_stmt 0 view .LVU963
 3023 0122 0023     		movs	r3, #0
 3024 0124 6383     		strh	r3, [r4, #26]	@ movhi
 140:lvgl/src/core/lv_indev_scroll.c ****             proc->types.pointer.scroll_throw_vect.x =
 3025              		.loc 1 140 9 is_stmt 1 view .LVU964
 140:lvgl/src/core/lv_indev_scroll.c ****             proc->types.pointer.scroll_throw_vect.x =
 3026              		.loc 1 140 11 is_stmt 0 view .LVU965
 3027 0126 B8F1000F 		cmp	r8, #0
 3028 012a 24D1     		bne	.L196
 3029              	.LBB111:
 141:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_throw_vect.x * (100 - scroll_throw) / 100;
 3030              		.loc 1 141 13 is_stmt 1 view .LVU966
 142:lvgl/src/core/lv_indev_scroll.c **** 
 3031              		.loc 1 142 54 is_stmt 0 view .LVU967
 3032 012c B4F91830 		ldrsh	r3, [r4, #24]
ARM GAS  C:\usertemp\cc28nhP0.s 			page 83


 142:lvgl/src/core/lv_indev_scroll.c **** 
 3033              		.loc 1 142 64 view .LVU968
 3034 0130 C9F16409 		rsb	r9, r9, #100
 3035              	.LVL320:
 142:lvgl/src/core/lv_indev_scroll.c **** 
 3036              		.loc 1 142 57 view .LVU969
 3037 0134 09FB03F3 		mul	r3, r9, r3
 142:lvgl/src/core/lv_indev_scroll.c **** 
 3038              		.loc 1 142 80 view .LVU970
 3039 0138 3F4A     		ldr	r2, .L209
 3040 013a 82FB0312 		smull	r1, r2, r2, r3
 3041 013e DB17     		asrs	r3, r3, #31
 3042 0140 C3EB6213 		rsb	r3, r3, r2, asr #5
 141:lvgl/src/core/lv_indev_scroll.c ****                 proc->types.pointer.scroll_throw_vect.x * (100 - scroll_throw) / 100;
 3043              		.loc 1 141 53 view .LVU971
 3044 0144 2383     		strh	r3, [r4, #24]	@ movhi
 144:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t sr = lv_obj_get_scroll_right(scroll_obj);
 3045              		.loc 1 144 13 is_stmt 1 view .LVU972
 144:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t sr = lv_obj_get_scroll_right(scroll_obj);
 3046              		.loc 1 144 29 is_stmt 0 view .LVU973
 3047 0146 2846     		mov	r0, r5
 3048              	.LVL321:
 144:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t sr = lv_obj_get_scroll_right(scroll_obj);
 3049              		.loc 1 144 29 view .LVU974
 3050 0148 FFF7FEFF 		bl	lv_obj_get_scroll_left
 3051              	.LVL322:
 3052 014c 8146     		mov	r9, r0
 3053              	.LVL323:
 145:lvgl/src/core/lv_indev_scroll.c **** 
 3054              		.loc 1 145 13 is_stmt 1 view .LVU975
 145:lvgl/src/core/lv_indev_scroll.c **** 
 3055              		.loc 1 145 29 is_stmt 0 view .LVU976
 3056 014e 2846     		mov	r0, r5
 3057 0150 FFF7FEFF 		bl	lv_obj_get_scroll_right
 3058              	.LVL324:
 3059 0154 0346     		mov	r3, r0
 3060              	.LVL325:
 147:lvgl/src/core/lv_indev_scroll.c ****                                                                    LV_DIR_HOR);
 3061              		.loc 1 147 13 is_stmt 1 view .LVU977
 147:lvgl/src/core/lv_indev_scroll.c ****                                                                    LV_DIR_HOR);
 3062              		.loc 1 147 55 is_stmt 0 view .LVU978
 3063 0156 0322     		movs	r2, #3
 3064 0158 0092     		str	r2, [sp]
 3065 015a 4A46     		mov	r2, r9
 3066 015c B4F91810 		ldrsh	r1, [r4, #24]
 3067 0160 2846     		mov	r0, r5
 3068 0162 FFF7FEFF 		bl	elastic_diff
 3069              	.LVL326:
 147:lvgl/src/core/lv_indev_scroll.c ****                                                                    LV_DIR_HOR);
 3070              		.loc 1 147 55 view .LVU979
 3071 0166 0146     		mov	r1, r0
 147:lvgl/src/core/lv_indev_scroll.c ****                                                                    LV_DIR_HOR);
 3072              		.loc 1 147 53 discriminator 1 view .LVU980
 3073 0168 2083     		strh	r0, [r4, #24]	@ movhi
 150:lvgl/src/core/lv_indev_scroll.c ****         }
 3074              		.loc 1 150 13 is_stmt 1 view .LVU981
 3075 016a 0023     		movs	r3, #0
ARM GAS  C:\usertemp\cc28nhP0.s 			page 84


 3076 016c 1A46     		mov	r2, r3
 3077 016e 2846     		mov	r0, r5
 3078 0170 FFF7FEFF 		bl	lv_obj_scroll_by
 3079              	.LVL327:
 3080              	.LBE111:
 3081 0174 70E7     		b	.L195
 3082              	.LVL328:
 3083              	.L196:
 3084              	.LBB112:
 154:lvgl/src/core/lv_indev_scroll.c ****             proc->types.pointer.scroll_throw_vect.x = 0;
 3085              		.loc 1 154 13 view .LVU982
 154:lvgl/src/core/lv_indev_scroll.c ****             proc->types.pointer.scroll_throw_vect.x = 0;
 3086              		.loc 1 154 33 is_stmt 0 view .LVU983
 3087 0176 2046     		mov	r0, r4
 3088              	.LVL329:
 154:lvgl/src/core/lv_indev_scroll.c ****             proc->types.pointer.scroll_throw_vect.x = 0;
 3089              		.loc 1 154 33 view .LVU984
 3090 0178 FFF7FEFF 		bl	scroll_throw_predict_x
 3091              	.LVL330:
 154:lvgl/src/core/lv_indev_scroll.c ****             proc->types.pointer.scroll_throw_vect.x = 0;
 3092              		.loc 1 154 24 discriminator 1 view .LVU985
 3093 017c ADF80E00 		strh	r0, [sp, #14]	@ movhi
 155:lvgl/src/core/lv_indev_scroll.c ****             scroll_limit_diff(proc, &diff_x, NULL);
 3094              		.loc 1 155 13 is_stmt 1 view .LVU986
 155:lvgl/src/core/lv_indev_scroll.c ****             scroll_limit_diff(proc, &diff_x, NULL);
 3095              		.loc 1 155 53 is_stmt 0 view .LVU987
 3096 0180 4FF00009 		mov	r9, #0
 3097              	.LVL331:
 155:lvgl/src/core/lv_indev_scroll.c ****             scroll_limit_diff(proc, &diff_x, NULL);
 3098              		.loc 1 155 53 view .LVU988
 3099 0184 A4F81890 		strh	r9, [r4, #24]	@ movhi
 156:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t x = find_snap_point_x(scroll_obj, LV_COORD_MIN, LV_COORD_MAX, diff_x);
 3100              		.loc 1 156 13 is_stmt 1 view .LVU989
 3101 0188 4A46     		mov	r2, r9
 3102 018a 0DF10E01 		add	r1, sp, #14
 3103 018e 2046     		mov	r0, r4
 3104 0190 FFF7FEFF 		bl	scroll_limit_diff
 3105              	.LVL332:
 157:lvgl/src/core/lv_indev_scroll.c ****             lv_obj_scroll_by(scroll_obj, x + diff_x, 0, LV_ANIM_ON);
 3106              		.loc 1 157 13 view .LVU990
 157:lvgl/src/core/lv_indev_scroll.c ****             lv_obj_scroll_by(scroll_obj, x + diff_x, 0, LV_ANIM_ON);
 3107              		.loc 1 157 28 is_stmt 0 view .LVU991
 3108 0194 BDF90E30 		ldrsh	r3, [sp, #14]
 3109 0198 41F6FF72 		movw	r2, #8191
 3110 019c 2749     		ldr	r1, .L209+4
 3111 019e 2846     		mov	r0, r5
 3112 01a0 FFF7FEFF 		bl	find_snap_point_x
 3113              	.LVL333:
 158:lvgl/src/core/lv_indev_scroll.c ****         }
 3114              		.loc 1 158 13 is_stmt 1 view .LVU992
 158:lvgl/src/core/lv_indev_scroll.c ****         }
 3115              		.loc 1 158 44 is_stmt 0 view .LVU993
 3116 01a4 BDF80E30 		ldrh	r3, [sp, #14]
 3117 01a8 C118     		adds	r1, r0, r3
 158:lvgl/src/core/lv_indev_scroll.c ****         }
 3118              		.loc 1 158 13 view .LVU994
 3119 01aa 0123     		movs	r3, #1
ARM GAS  C:\usertemp\cc28nhP0.s 			page 85


 3120 01ac 4A46     		mov	r2, r9
 3121 01ae 09B2     		sxth	r1, r1
 3122 01b0 2846     		mov	r0, r5
 3123              	.LVL334:
 158:lvgl/src/core/lv_indev_scroll.c ****         }
 3124              		.loc 1 158 13 view .LVU995
 3125 01b2 FFF7FEFF 		bl	lv_obj_scroll_by
 3126              	.LVL335:
 3127 01b6 4FE7     		b	.L195
 3128              	.LVL336:
 3129              	.L205:
 158:lvgl/src/core/lv_indev_scroll.c ****         }
 3130              		.loc 1 158 13 view .LVU996
 3131              	.LBE112:
 3132              	.LBB113:
 167:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t sb = lv_obj_get_scroll_bottom(scroll_obj);
 3133              		.loc 1 167 13 is_stmt 1 view .LVU997
 167:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t sb = lv_obj_get_scroll_bottom(scroll_obj);
 3134              		.loc 1 167 29 is_stmt 0 view .LVU998
 3135 01b8 2846     		mov	r0, r5
 3136 01ba FFF7FEFF 		bl	lv_obj_get_scroll_top
 3137              	.LVL337:
 3138 01be 0746     		mov	r7, r0
 3139              	.LVL338:
 168:lvgl/src/core/lv_indev_scroll.c ****             if(st > 0 || sb > 0) {
 3140              		.loc 1 168 13 is_stmt 1 view .LVU999
 168:lvgl/src/core/lv_indev_scroll.c ****             if(st > 0 || sb > 0) {
 3141              		.loc 1 168 29 is_stmt 0 view .LVU1000
 3142 01c0 2846     		mov	r0, r5
 3143 01c2 FFF7FEFF 		bl	lv_obj_get_scroll_bottom
 3144              	.LVL339:
 169:lvgl/src/core/lv_indev_scroll.c ****                 if(st < 0) {
 3145              		.loc 1 169 13 is_stmt 1 view .LVU1001
 169:lvgl/src/core/lv_indev_scroll.c ****                 if(st < 0) {
 3146              		.loc 1 169 15 is_stmt 0 view .LVU1002
 3147 01c6 0028     		cmp	r0, #0
 3148 01c8 D8BF     		it	le
 3149 01ca 002F     		cmple	r7, #0
 3150 01cc 7FF74AAF 		ble	.L197
 170:lvgl/src/core/lv_indev_scroll.c ****                     lv_obj_scroll_by(scroll_obj, 0, st, LV_ANIM_ON);
 3151              		.loc 1 170 17 is_stmt 1 view .LVU1003
 170:lvgl/src/core/lv_indev_scroll.c ****                     lv_obj_scroll_by(scroll_obj, 0, st, LV_ANIM_ON);
 3152              		.loc 1 170 19 is_stmt 0 view .LVU1004
 3153 01d0 002F     		cmp	r7, #0
 3154 01d2 0ADB     		blt	.L207
 173:lvgl/src/core/lv_indev_scroll.c ****                     lv_obj_scroll_by(scroll_obj, 0, -sb, LV_ANIM_ON);
 3155              		.loc 1 173 22 is_stmt 1 view .LVU1005
 173:lvgl/src/core/lv_indev_scroll.c ****                     lv_obj_scroll_by(scroll_obj, 0, -sb, LV_ANIM_ON);
 3156              		.loc 1 173 24 is_stmt 0 view .LVU1006
 3157 01d4 0028     		cmp	r0, #0
 3158 01d6 BFF645AF 		bge	.L197
 174:lvgl/src/core/lv_indev_scroll.c ****                 }
 3159              		.loc 1 174 21 is_stmt 1 view .LVU1007
 3160 01da 4242     		rsbs	r2, r0, #0
 3161 01dc 0123     		movs	r3, #1
 3162 01de 12B2     		sxth	r2, r2
 3163 01e0 0021     		movs	r1, #0
ARM GAS  C:\usertemp\cc28nhP0.s 			page 86


 3164 01e2 2846     		mov	r0, r5
 3165              	.LVL340:
 174:lvgl/src/core/lv_indev_scroll.c ****                 }
 3166              		.loc 1 174 21 is_stmt 0 view .LVU1008
 3167 01e4 FFF7FEFF 		bl	lv_obj_scroll_by
 3168              	.LVL341:
 3169 01e8 3CE7     		b	.L197
 3170              	.LVL342:
 3171              	.L207:
 171:lvgl/src/core/lv_indev_scroll.c ****                 }
 3172              		.loc 1 171 21 is_stmt 1 view .LVU1009
 3173 01ea 0123     		movs	r3, #1
 3174 01ec 3A46     		mov	r2, r7
 3175 01ee 0021     		movs	r1, #0
 3176 01f0 2846     		mov	r0, r5
 3177              	.LVL343:
 171:lvgl/src/core/lv_indev_scroll.c ****                 }
 3178              		.loc 1 171 21 is_stmt 0 view .LVU1010
 3179 01f2 FFF7FEFF 		bl	lv_obj_scroll_by
 3180              	.LVL344:
 3181 01f6 35E7     		b	.L197
 3182              	.LVL345:
 3183              	.L206:
 171:lvgl/src/core/lv_indev_scroll.c ****                 }
 3184              		.loc 1 171 21 view .LVU1011
 3185              	.LBE113:
 3186              	.LBB114:
 181:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t sr = lv_obj_get_scroll_right(scroll_obj);
 3187              		.loc 1 181 13 is_stmt 1 view .LVU1012
 181:lvgl/src/core/lv_indev_scroll.c ****             lv_coord_t sr = lv_obj_get_scroll_right(scroll_obj);
 3188              		.loc 1 181 29 is_stmt 0 view .LVU1013
 3189 01f8 2846     		mov	r0, r5
 3190 01fa FFF7FEFF 		bl	lv_obj_get_scroll_left
 3191              	.LVL346:
 3192 01fe 0746     		mov	r7, r0
 3193              	.LVL347:
 182:lvgl/src/core/lv_indev_scroll.c ****             if(sl > 0 || sr > 0) {
 3194              		.loc 1 182 13 is_stmt 1 view .LVU1014
 182:lvgl/src/core/lv_indev_scroll.c ****             if(sl > 0 || sr > 0) {
 3195              		.loc 1 182 29 is_stmt 0 view .LVU1015
 3196 0200 2846     		mov	r0, r5
 3197 0202 FFF7FEFF 		bl	lv_obj_get_scroll_right
 3198              	.LVL348:
 183:lvgl/src/core/lv_indev_scroll.c ****                 if(sl < 0) {
 3199              		.loc 1 183 13 is_stmt 1 view .LVU1016
 183:lvgl/src/core/lv_indev_scroll.c ****                 if(sl < 0) {
 3200              		.loc 1 183 15 is_stmt 0 view .LVU1017
 3201 0206 0028     		cmp	r0, #0
 3202 0208 D8BF     		it	le
 3203 020a 002F     		cmple	r7, #0
 3204 020c 7FF72EAF 		ble	.L199
 184:lvgl/src/core/lv_indev_scroll.c ****                     lv_obj_scroll_by(scroll_obj, sl, 0, LV_ANIM_ON);
 3205              		.loc 1 184 17 is_stmt 1 view .LVU1018
 184:lvgl/src/core/lv_indev_scroll.c ****                     lv_obj_scroll_by(scroll_obj, sl, 0, LV_ANIM_ON);
 3206              		.loc 1 184 19 is_stmt 0 view .LVU1019
 3207 0210 002F     		cmp	r7, #0
 3208 0212 0ADB     		blt	.L208
ARM GAS  C:\usertemp\cc28nhP0.s 			page 87


 187:lvgl/src/core/lv_indev_scroll.c ****                     lv_obj_scroll_by(scroll_obj, -sr, 0, LV_ANIM_ON);
 3209              		.loc 1 187 22 is_stmt 1 view .LVU1020
 187:lvgl/src/core/lv_indev_scroll.c ****                     lv_obj_scroll_by(scroll_obj, -sr, 0, LV_ANIM_ON);
 3210              		.loc 1 187 24 is_stmt 0 view .LVU1021
 3211 0214 0028     		cmp	r0, #0
 3212 0216 BFF629AF 		bge	.L199
 188:lvgl/src/core/lv_indev_scroll.c ****                 }
 3213              		.loc 1 188 21 is_stmt 1 view .LVU1022
 3214 021a 4142     		rsbs	r1, r0, #0
 3215 021c 0123     		movs	r3, #1
 3216 021e 0022     		movs	r2, #0
 3217 0220 09B2     		sxth	r1, r1
 3218 0222 2846     		mov	r0, r5
 3219              	.LVL349:
 188:lvgl/src/core/lv_indev_scroll.c ****                 }
 3220              		.loc 1 188 21 is_stmt 0 view .LVU1023
 3221 0224 FFF7FEFF 		bl	lv_obj_scroll_by
 3222              	.LVL350:
 3223 0228 20E7     		b	.L199
 3224              	.LVL351:
 3225              	.L208:
 185:lvgl/src/core/lv_indev_scroll.c ****                 }
 3226              		.loc 1 185 21 is_stmt 1 view .LVU1024
 3227 022a 0123     		movs	r3, #1
 3228 022c 0022     		movs	r2, #0
 3229 022e 3946     		mov	r1, r7
 3230 0230 2846     		mov	r0, r5
 3231              	.LVL352:
 185:lvgl/src/core/lv_indev_scroll.c ****                 }
 3232              		.loc 1 185 21 is_stmt 0 view .LVU1025
 3233 0232 FFF7FEFF 		bl	lv_obj_scroll_by
 3234              	.LVL353:
 3235 0236 19E7     		b	.L199
 3236              	.L210:
 3237              		.align	2
 3238              	.L209:
 3239 0238 1F85EB51 		.word	1374389535
 3240 023c 01E0FFFF 		.word	-8191
 3241              	.LBE114:
 3242              		.cfi_endproc
 3243              	.LFE157:
 3245              		.section	.text.lv_indev_scroll_throw_predict,"ax",%progbits
 3246              		.align	1
 3247              		.global	lv_indev_scroll_throw_predict
 3248              		.syntax unified
 3249              		.thumb
 3250              		.thumb_func
 3252              	lv_indev_scroll_throw_predict:
 3253              	.LVL354:
 3254              	.LFB158:
 208:lvgl/src/core/lv_indev_scroll.c ****     if(indev == NULL) return 0;
 3255              		.loc 1 208 1 is_stmt 1 view -0
 3256              		.cfi_startproc
 3257              		@ args = 0, pretend = 0, frame = 0
 3258              		@ frame_needed = 0, uses_anonymous_args = 0
 3259              		@ link register save eliminated.
 209:lvgl/src/core/lv_indev_scroll.c ****     lv_coord_t v;
ARM GAS  C:\usertemp\cc28nhP0.s 			page 88


 3260              		.loc 1 209 5 view .LVU1027
 209:lvgl/src/core/lv_indev_scroll.c ****     lv_coord_t v;
 3261              		.loc 1 209 7 is_stmt 0 view .LVU1028
 3262 0000 0246     		mov	r2, r0
 3263 0002 E0B1     		cbz	r0, .L217
 210:lvgl/src/core/lv_indev_scroll.c ****     switch(dir) {
 3264              		.loc 1 210 5 is_stmt 1 view .LVU1029
 211:lvgl/src/core/lv_indev_scroll.c ****         case LV_DIR_VER:
 3265              		.loc 1 211 5 view .LVU1030
 3266 0004 0329     		cmp	r1, #3
 3267 0006 07D0     		beq	.L213
 3268 0008 0C29     		cmp	r1, #12
 3269 000a 1AD1     		bne	.L218
 213:lvgl/src/core/lv_indev_scroll.c ****             break;
 3270              		.loc 1 213 13 view .LVU1031
 213:lvgl/src/core/lv_indev_scroll.c ****             break;
 3271              		.loc 1 213 15 is_stmt 0 view .LVU1032
 3272 000c B0F92230 		ldrsh	r3, [r0, #34]
 3273              	.LVL355:
 214:lvgl/src/core/lv_indev_scroll.c ****         case LV_DIR_HOR:
 3274              		.loc 1 214 13 is_stmt 1 view .LVU1033
 3275              	.L214:
 222:lvgl/src/core/lv_indev_scroll.c ****     lv_coord_t sum = 0;
 3276              		.loc 1 222 5 view .LVU1034
 222:lvgl/src/core/lv_indev_scroll.c ****     lv_coord_t sum = 0;
 3277              		.loc 1 222 36 is_stmt 0 view .LVU1035
 3278 0010 1268     		ldr	r2, [r2]
 222:lvgl/src/core/lv_indev_scroll.c ****     lv_coord_t sum = 0;
 3279              		.loc 1 222 44 view .LVU1036
 3280 0012 517E     		ldrb	r1, [r2, #25]	@ zero_extendqisi2
 3281              	.LVL356:
 223:lvgl/src/core/lv_indev_scroll.c ****     while(v) {
 3282              		.loc 1 223 5 is_stmt 1 view .LVU1037
 224:lvgl/src/core/lv_indev_scroll.c ****         sum += v;
 3283              		.loc 1 224 5 view .LVU1038
 223:lvgl/src/core/lv_indev_scroll.c ****     while(v) {
 3284              		.loc 1 223 16 is_stmt 0 view .LVU1039
 3285 0014 0020     		movs	r0, #0
 3286              	.LVL357:
 224:lvgl/src/core/lv_indev_scroll.c ****         sum += v;
 3287              		.loc 1 224 10 view .LVU1040
 3288 0016 0FE0     		b	.L215
 3289              	.LVL358:
 3290              	.L213:
 216:lvgl/src/core/lv_indev_scroll.c ****             break;
 3291              		.loc 1 216 13 is_stmt 1 view .LVU1041
 216:lvgl/src/core/lv_indev_scroll.c ****             break;
 3292              		.loc 1 216 15 is_stmt 0 view .LVU1042
 3293 0018 B0F92030 		ldrsh	r3, [r0, #32]
 3294              	.LVL359:
 217:lvgl/src/core/lv_indev_scroll.c ****         default:
 3295              		.loc 1 217 13 is_stmt 1 view .LVU1043
 3296 001c F8E7     		b	.L214
 3297              	.LVL360:
 3298              	.L216:
 225:lvgl/src/core/lv_indev_scroll.c ****         v = v * (100 - scroll_throw) / 100;
 3299              		.loc 1 225 9 view .LVU1044
ARM GAS  C:\usertemp\cc28nhP0.s 			page 89


 225:lvgl/src/core/lv_indev_scroll.c ****         v = v * (100 - scroll_throw) / 100;
 3300              		.loc 1 225 13 is_stmt 0 view .LVU1045
 3301 001e 1844     		add	r0, r0, r3
 3302              	.LVL361:
 225:lvgl/src/core/lv_indev_scroll.c ****         v = v * (100 - scroll_throw) / 100;
 3303              		.loc 1 225 13 view .LVU1046
 3304 0020 00B2     		sxth	r0, r0
 3305              	.LVL362:
 226:lvgl/src/core/lv_indev_scroll.c ****     }
 3306              		.loc 1 226 9 is_stmt 1 view .LVU1047
 226:lvgl/src/core/lv_indev_scroll.c ****     }
 3307              		.loc 1 226 22 is_stmt 0 view .LVU1048
 3308 0022 C1F16402 		rsb	r2, r1, #100
 226:lvgl/src/core/lv_indev_scroll.c ****     }
 3309              		.loc 1 226 15 view .LVU1049
 3310 0026 02FB03F3 		mul	r3, r2, r3
 3311              	.LVL363:
 226:lvgl/src/core/lv_indev_scroll.c ****     }
 3312              		.loc 1 226 38 view .LVU1050
 3313 002a 074A     		ldr	r2, .L219
 3314 002c 82FB03C2 		smull	ip, r2, r2, r3
 3315 0030 DB17     		asrs	r3, r3, #31
 3316 0032 C3EB6213 		rsb	r3, r3, r2, asr #5
 226:lvgl/src/core/lv_indev_scroll.c ****     }
 3317              		.loc 1 226 11 view .LVU1051
 3318 0036 1BB2     		sxth	r3, r3
 3319              	.LVL364:
 3320              	.L215:
 224:lvgl/src/core/lv_indev_scroll.c ****         sum += v;
 3321              		.loc 1 224 11 is_stmt 1 view .LVU1052
 3322 0038 002B     		cmp	r3, #0
 3323 003a F0D1     		bne	.L216
 224:lvgl/src/core/lv_indev_scroll.c ****         sum += v;
 3324              		.loc 1 224 11 is_stmt 0 view .LVU1053
 3325 003c 7047     		bx	lr
 3326              	.LVL365:
 3327              	.L217:
 209:lvgl/src/core/lv_indev_scroll.c ****     lv_coord_t v;
 3328              		.loc 1 209 30 discriminator 1 view .LVU1054
 3329 003e 0020     		movs	r0, #0
 3330              	.LVL366:
 209:lvgl/src/core/lv_indev_scroll.c ****     lv_coord_t v;
 3331              		.loc 1 209 30 discriminator 1 view .LVU1055
 3332 0040 7047     		bx	lr
 3333              	.LVL367:
 3334              	.L218:
 211:lvgl/src/core/lv_indev_scroll.c ****         case LV_DIR_VER:
 3335              		.loc 1 211 5 view .LVU1056
 3336 0042 0020     		movs	r0, #0
 3337              	.LVL368:
 230:lvgl/src/core/lv_indev_scroll.c **** 
 3338              		.loc 1 230 1 view .LVU1057
 3339 0044 7047     		bx	lr
 3340              	.L220:
 3341 0046 00BF     		.align	2
 3342              	.L219:
 3343 0048 1F85EB51 		.word	1374389535
ARM GAS  C:\usertemp\cc28nhP0.s 			page 90


 3344              		.cfi_endproc
 3345              	.LFE158:
 3347              		.section	.text.lv_indev_scroll_get_snap_dist,"ax",%progbits
 3348              		.align	1
 3349              		.global	lv_indev_scroll_get_snap_dist
 3350              		.syntax unified
 3351              		.thumb
 3352              		.thumb_func
 3354              	lv_indev_scroll_get_snap_dist:
 3355              	.LVL369:
 3356              	.LFB159:
 233:lvgl/src/core/lv_indev_scroll.c ****     p->x = find_snap_point_x(obj, obj->coords.x1, obj->coords.x2, 0);
 3357              		.loc 1 233 1 is_stmt 1 view -0
 3358              		.cfi_startproc
 3359              		@ args = 0, pretend = 0, frame = 0
 3360              		@ frame_needed = 0, uses_anonymous_args = 0
 233:lvgl/src/core/lv_indev_scroll.c ****     p->x = find_snap_point_x(obj, obj->coords.x1, obj->coords.x2, 0);
 3361              		.loc 1 233 1 is_stmt 0 view .LVU1059
 3362 0000 38B5     		push	{r3, r4, r5, lr}
 3363              	.LCFI28:
 3364              		.cfi_def_cfa_offset 16
 3365              		.cfi_offset 3, -16
 3366              		.cfi_offset 4, -12
 3367              		.cfi_offset 5, -8
 3368              		.cfi_offset 14, -4
 3369 0002 0446     		mov	r4, r0
 3370 0004 0D46     		mov	r5, r1
 234:lvgl/src/core/lv_indev_scroll.c ****     p->y = find_snap_point_y(obj, obj->coords.y1, obj->coords.y2, 0);
 3371              		.loc 1 234 5 is_stmt 1 view .LVU1060
 234:lvgl/src/core/lv_indev_scroll.c ****     p->y = find_snap_point_y(obj, obj->coords.y1, obj->coords.y2, 0);
 3372              		.loc 1 234 12 is_stmt 0 view .LVU1061
 3373 0006 0023     		movs	r3, #0
 3374 0008 B0F91820 		ldrsh	r2, [r0, #24]
 3375 000c B0F91410 		ldrsh	r1, [r0, #20]
 3376              	.LVL370:
 234:lvgl/src/core/lv_indev_scroll.c ****     p->y = find_snap_point_y(obj, obj->coords.y1, obj->coords.y2, 0);
 3377              		.loc 1 234 12 view .LVU1062
 3378 0010 FFF7FEFF 		bl	find_snap_point_x
 3379              	.LVL371:
 234:lvgl/src/core/lv_indev_scroll.c ****     p->y = find_snap_point_y(obj, obj->coords.y1, obj->coords.y2, 0);
 3380              		.loc 1 234 10 discriminator 1 view .LVU1063
 3381 0014 2880     		strh	r0, [r5]	@ movhi
 235:lvgl/src/core/lv_indev_scroll.c **** }
 3382              		.loc 1 235 5 is_stmt 1 view .LVU1064
 235:lvgl/src/core/lv_indev_scroll.c **** }
 3383              		.loc 1 235 12 is_stmt 0 view .LVU1065
 3384 0016 0023     		movs	r3, #0
 3385 0018 B4F91A20 		ldrsh	r2, [r4, #26]
 3386 001c B4F91610 		ldrsh	r1, [r4, #22]
 3387 0020 2046     		mov	r0, r4
 3388 0022 FFF7FEFF 		bl	find_snap_point_y
 3389              	.LVL372:
 235:lvgl/src/core/lv_indev_scroll.c **** }
 3390              		.loc 1 235 10 discriminator 1 view .LVU1066
 3391 0026 6880     		strh	r0, [r5, #2]	@ movhi
 236:lvgl/src/core/lv_indev_scroll.c **** 
 3392              		.loc 1 236 1 view .LVU1067
ARM GAS  C:\usertemp\cc28nhP0.s 			page 91


 3393 0028 38BD     		pop	{r3, r4, r5, pc}
 236:lvgl/src/core/lv_indev_scroll.c **** 
 3394              		.loc 1 236 1 view .LVU1068
 3395              		.cfi_endproc
 3396              	.LFE159:
 3398              		.text
 3399              	.Letext0:
 3400              		.file 4 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 3401              		.file 5 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 3402              		.file 6 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/lib/gcc/arm-none
 3403              		.file 7 "lvgl/src/core/../misc/../font/lv_font.h"
 3404              		.file 8 "lvgl/src/core/../misc/lv_types.h"
 3405              		.file 9 "lvgl/src/core/../misc/lv_color.h"
 3406              		.file 10 "lvgl/src/core/../misc/lv_anim.h"
 3407              		.file 11 "lvgl/src/core/../misc/lv_txt.h"
 3408              		.file 12 "lvgl/src/core/../misc/lv_bidi.h"
 3409              		.file 13 "lvgl/src/core/../misc/lv_style.h"
 3410              		.file 14 "lvgl/src/core/../hal/../draw/lv_img_buf.h"
 3411              		.file 15 "lvgl/src/core/lv_obj.h"
 3412              		.file 16 "lvgl/src/core/../hal/../draw/lv_draw_rect.h"
 3413              		.file 17 "lvgl/src/core/../hal/../draw/lv_draw_label.h"
 3414              		.file 18 "lvgl/src/core/../hal/../draw/lv_draw_img.h"
 3415              		.file 19 "lvgl/src/core/../hal/../draw/lv_draw_line.h"
 3416              		.file 20 "lvgl/src/core/../hal/../draw/lv_draw_arc.h"
 3417              		.file 21 "lvgl/src/core/../hal/../draw/lv_draw.h"
 3418              		.file 22 "lvgl/src/core/../hal/../misc/lv_ll.h"
 3419              		.file 23 "lvgl/src/core/../hal/../misc/lv_timer.h"
 3420              		.file 24 "lvgl/src/core/../hal/lv_hal_disp.h"
 3421              		.file 25 "lvgl/src/core/../hal/lv_hal_indev.h"
 3422              		.file 26 "lvgl/src/core/lv_group.h"
 3423              		.file 27 "lvgl/src/core/lv_obj_scroll.h"
 3424              		.file 28 "lvgl/src/core/lv_obj_style.h"
 3425              		.file 29 "lvgl/src/core/lv_obj_class.h"
 3426              		.file 30 "lvgl/src/core/lv_event.h"
 3427              		.file 31 "lvgl/src/core/lv_obj_tree.h"
 3428              		.file 32 "lvgl/src/core/lv_indev.h"
ARM GAS  C:\usertemp\cc28nhP0.s 			page 92


DEFINED SYMBOLS
                            *ABS*:00000000 lv_indev_scroll.c
C:\usertemp\cc28nhP0.s:20     .text.scroll_limit_diff:00000000 $t
C:\usertemp\cc28nhP0.s:25     .text.scroll_limit_diff:00000000 scroll_limit_diff
C:\usertemp\cc28nhP0.s:140    .text.scroll_throw_predict_y:00000000 $t
C:\usertemp\cc28nhP0.s:145    .text.scroll_throw_predict_y:00000000 scroll_throw_predict_y
C:\usertemp\cc28nhP0.s:214    .text.scroll_throw_predict_y:00000034 $d
C:\usertemp\cc28nhP0.s:219    .text.scroll_throw_predict_x:00000000 $t
C:\usertemp\cc28nhP0.s:224    .text.scroll_throw_predict_x:00000000 scroll_throw_predict_x
C:\usertemp\cc28nhP0.s:293    .text.scroll_throw_predict_x:00000034 $d
C:\usertemp\cc28nhP0.s:298    .text.find_scroll_obj:00000000 $t
C:\usertemp\cc28nhP0.s:303    .text.find_scroll_obj:00000000 find_scroll_obj
C:\usertemp\cc28nhP0.s:814    .text.find_snap_point_y:00000000 $t
C:\usertemp\cc28nhP0.s:819    .text.find_snap_point_y:00000000 find_snap_point_y
C:\usertemp\cc28nhP0.s:1172   .text.find_snap_point_y:00000138 $d
C:\usertemp\cc28nhP0.s:1177   .text.find_snap_point_x:00000000 $t
C:\usertemp\cc28nhP0.s:1182   .text.find_snap_point_x:00000000 find_snap_point_x
C:\usertemp\cc28nhP0.s:1533   .text.find_snap_point_x:00000138 $d
C:\usertemp\cc28nhP0.s:1538   .text.init_scroll_limits:00000000 $t
C:\usertemp\cc28nhP0.s:1543   .text.init_scroll_limits:00000000 init_scroll_limits
C:\usertemp\cc28nhP0.s:1911   .text.init_scroll_limits:000001a8 $d
C:\usertemp\cc28nhP0.s:1916   .text.elastic_diff:00000000 $t
C:\usertemp\cc28nhP0.s:1921   .text.elastic_diff:00000000 elastic_diff
C:\usertemp\cc28nhP0.s:2484   .text._lv_indev_scroll_handler:00000000 $t
C:\usertemp\cc28nhP0.s:2490   .text._lv_indev_scroll_handler:00000000 _lv_indev_scroll_handler
C:\usertemp\cc28nhP0.s:2759   .text._lv_indev_scroll_throw_handler:00000000 $t
C:\usertemp\cc28nhP0.s:2765   .text._lv_indev_scroll_throw_handler:00000000 _lv_indev_scroll_throw_handler
C:\usertemp\cc28nhP0.s:3239   .text._lv_indev_scroll_throw_handler:00000238 $d
C:\usertemp\cc28nhP0.s:3246   .text.lv_indev_scroll_throw_predict:00000000 $t
C:\usertemp\cc28nhP0.s:3252   .text.lv_indev_scroll_throw_predict:00000000 lv_indev_scroll_throw_predict
C:\usertemp\cc28nhP0.s:3343   .text.lv_indev_scroll_throw_predict:00000048 $d
C:\usertemp\cc28nhP0.s:3348   .text.lv_indev_scroll_get_snap_dist:00000000 $t
C:\usertemp\cc28nhP0.s:3354   .text.lv_indev_scroll_get_snap_dist:00000000 lv_indev_scroll_get_snap_dist

UNDEFINED SYMBOLS
lv_indev_get_act
lv_obj_get_parent
lv_obj_get_scroll_dir
lv_obj_get_scroll_top
lv_obj_get_scroll_bottom
lv_obj_get_scroll_left
lv_obj_get_scroll_right
lv_obj_has_flag
lv_obj_get_scroll_snap_y
lv_obj_get_style_prop
lv_obj_get_child_cnt
lv_obj_has_flag_any
lv_obj_get_scroll_snap_x
lv_area_set
lv_indev_get_obj_act
lv_obj_scroll_by
lv_event_send
