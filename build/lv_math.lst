ARM GAS  C:\usertemp\cc148IyM.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_math.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "lvgl/src/misc/lv_math.c"
  19              		.section	.text.lv_trigo_sin,"ax",%progbits
  20              		.align	1
  21              		.global	lv_trigo_sin
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	lv_trigo_sin:
  27              	.LVL0:
  28              	.LFB1:
   1:lvgl/src/misc/lv_math.c **** /**
   2:lvgl/src/misc/lv_math.c ****  * @file lv_math.c
   3:lvgl/src/misc/lv_math.c ****  *
   4:lvgl/src/misc/lv_math.c ****  */
   5:lvgl/src/misc/lv_math.c **** 
   6:lvgl/src/misc/lv_math.c **** /*********************
   7:lvgl/src/misc/lv_math.c ****  *      INCLUDES
   8:lvgl/src/misc/lv_math.c ****  *********************/
   9:lvgl/src/misc/lv_math.c **** #include "lv_math.h"
  10:lvgl/src/misc/lv_math.c **** 
  11:lvgl/src/misc/lv_math.c **** /*********************
  12:lvgl/src/misc/lv_math.c ****  *      DEFINES
  13:lvgl/src/misc/lv_math.c ****  *********************/
  14:lvgl/src/misc/lv_math.c **** 
  15:lvgl/src/misc/lv_math.c **** /**********************
  16:lvgl/src/misc/lv_math.c ****  *      TYPEDEFS
  17:lvgl/src/misc/lv_math.c ****  **********************/
  18:lvgl/src/misc/lv_math.c **** 
  19:lvgl/src/misc/lv_math.c **** /**********************
  20:lvgl/src/misc/lv_math.c ****  *  STATIC PROTOTYPES
  21:lvgl/src/misc/lv_math.c ****  **********************/
  22:lvgl/src/misc/lv_math.c **** 
  23:lvgl/src/misc/lv_math.c **** /**********************
  24:lvgl/src/misc/lv_math.c ****  *  STATIC VARIABLES
  25:lvgl/src/misc/lv_math.c ****  **********************/
  26:lvgl/src/misc/lv_math.c **** static const int16_t sin0_90_table[] = {
  27:lvgl/src/misc/lv_math.c ****     0,     572,   1144,  1715,  2286,  2856,  3425,  3993,  4560,  5126,  5690,  6252,  6813,  7371
  28:lvgl/src/misc/lv_math.c ****     9032,  9580,  10126, 10668, 11207, 11743, 12275, 12803, 13328, 13848, 14364, 14876, 15383, 1588
  29:lvgl/src/misc/lv_math.c ****     17364, 17846, 18323, 18794, 19260, 19720, 20173, 20621, 21062, 21497, 21925, 22347, 22762, 2317
  30:lvgl/src/misc/lv_math.c ****     24351, 24730, 25101, 25465, 25821, 26169, 26509, 26841, 27165, 27481, 27788, 28087, 28377, 2865
ARM GAS  C:\usertemp\cc148IyM.s 			page 2


  31:lvgl/src/misc/lv_math.c ****     29451, 29697, 29934, 30162, 30381, 30591, 30791, 30982, 31163, 31335, 31498, 31650, 31794, 3192
  32:lvgl/src/misc/lv_math.c ****     32269, 32364, 32448, 32523, 32587, 32642, 32687, 32722, 32747, 32762, 32767
  33:lvgl/src/misc/lv_math.c **** };
  34:lvgl/src/misc/lv_math.c **** 
  35:lvgl/src/misc/lv_math.c **** /**********************
  36:lvgl/src/misc/lv_math.c ****  *      MACROS
  37:lvgl/src/misc/lv_math.c ****  **********************/
  38:lvgl/src/misc/lv_math.c **** 
  39:lvgl/src/misc/lv_math.c **** /**********************
  40:lvgl/src/misc/lv_math.c ****  *   GLOBAL FUNCTIONS
  41:lvgl/src/misc/lv_math.c ****  **********************/
  42:lvgl/src/misc/lv_math.c **** 
  43:lvgl/src/misc/lv_math.c **** /**
  44:lvgl/src/misc/lv_math.c ****  * Return with sinus of an angle
  45:lvgl/src/misc/lv_math.c ****  * @param angle
  46:lvgl/src/misc/lv_math.c ****  * @return sinus of 'angle'. sin(-90) = -32767, sin(90) = 32767
  47:lvgl/src/misc/lv_math.c ****  */
  48:lvgl/src/misc/lv_math.c **** LV_ATTRIBUTE_FAST_MEM int16_t lv_trigo_sin(int16_t angle)
  49:lvgl/src/misc/lv_math.c **** {
  29              		.loc 1 49 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  50:lvgl/src/misc/lv_math.c ****     int16_t ret = 0;
  34              		.loc 1 50 5 view .LVU1
  51:lvgl/src/misc/lv_math.c ****     angle       = angle % 360;
  35              		.loc 1 51 5 view .LVU2
  36              		.loc 1 51 17 is_stmt 0 view .LVU3
  37 0000 1C4B     		ldr	r3, .L8
  38 0002 83FB0023 		smull	r2, r3, r3, r0
  39 0006 0344     		add	r3, r3, r0
  40 0008 C217     		asrs	r2, r0, #31
  41 000a C2EB2323 		rsb	r3, r2, r3, asr #8
  42 000e 4FF4B472 		mov	r2, #360
  43 0012 02FB1300 		mls	r0, r2, r3, r0
  44              	.LVL1:
  45              		.loc 1 51 17 view .LVU4
  46 0016 00B2     		sxth	r0, r0
  47              	.LVL2:
  52:lvgl/src/misc/lv_math.c **** 
  53:lvgl/src/misc/lv_math.c ****     if(angle < 0) angle = 360 + angle;
  48              		.loc 1 53 5 is_stmt 1 view .LVU5
  49              		.loc 1 53 7 is_stmt 0 view .LVU6
  50 0018 0028     		cmp	r0, #0
  51 001a 05DB     		blt	.L7
  52              	.L2:
  54:lvgl/src/misc/lv_math.c **** 
  55:lvgl/src/misc/lv_math.c ****     if(angle < 90) {
  53              		.loc 1 55 5 is_stmt 1 view .LVU7
  54              		.loc 1 55 7 is_stmt 0 view .LVU8
  55 001c 5928     		cmp	r0, #89
  56 001e 06DC     		bgt	.L3
  56:lvgl/src/misc/lv_math.c ****         ret = sin0_90_table[angle];
  57              		.loc 1 56 9 is_stmt 1 view .LVU9
  58              		.loc 1 56 13 is_stmt 0 view .LVU10
  59 0020 154B     		ldr	r3, .L8+4
ARM GAS  C:\usertemp\cc148IyM.s 			page 3


  60 0022 33F91000 		ldrsh	r0, [r3, r0, lsl #1]
  61              	.LVL3:
  62              		.loc 1 56 13 view .LVU11
  63 0026 7047     		bx	lr
  64              	.LVL4:
  65              	.L7:
  53:lvgl/src/misc/lv_math.c **** 
  66              		.loc 1 53 19 is_stmt 1 discriminator 1 view .LVU12
  53:lvgl/src/misc/lv_math.c **** 
  67              		.loc 1 53 31 is_stmt 0 discriminator 1 view .LVU13
  68 0028 1044     		add	r0, r0, r2
  69              	.LVL5:
  53:lvgl/src/misc/lv_math.c **** 
  70              		.loc 1 53 25 discriminator 1 view .LVU14
  71 002a 00B2     		sxth	r0, r0
  72              	.LVL6:
  53:lvgl/src/misc/lv_math.c **** 
  73              		.loc 1 53 25 discriminator 1 view .LVU15
  74 002c F6E7     		b	.L2
  75              	.L3:
  57:lvgl/src/misc/lv_math.c ****     }
  58:lvgl/src/misc/lv_math.c ****     else if(angle >= 90 && angle < 180) {
  76              		.loc 1 58 10 is_stmt 1 view .LVU16
  77              		.loc 1 58 25 is_stmt 0 view .LVU17
  78 002e 80B2     		uxth	r0, r0
  79              		.loc 1 58 25 view .LVU18
  80 0030 A0F15A03 		sub	r3, r0, #90
  81 0034 9BB2     		uxth	r3, r3
  82              		.loc 1 58 12 view .LVU19
  83 0036 592B     		cmp	r3, #89
  84 0038 06D8     		bhi	.L5
  59:lvgl/src/misc/lv_math.c ****         angle = 180 - angle;
  85              		.loc 1 59 9 is_stmt 1 view .LVU20
  86              		.loc 1 59 21 is_stmt 0 view .LVU21
  87 003a C0F1B400 		rsb	r0, r0, #180
  88              	.LVL7:
  89              		.loc 1 59 15 view .LVU22
  90 003e 00B2     		sxth	r0, r0
  91              	.LVL8:
  60:lvgl/src/misc/lv_math.c ****         ret   = sin0_90_table[angle];
  92              		.loc 1 60 9 is_stmt 1 view .LVU23
  93              		.loc 1 60 15 is_stmt 0 view .LVU24
  94 0040 0D4B     		ldr	r3, .L8+4
  95 0042 33F91000 		ldrsh	r0, [r3, r0, lsl #1]
  96              	.LVL9:
  97              		.loc 1 60 15 view .LVU25
  98 0046 7047     		bx	lr
  99              	.LVL10:
 100              	.L5:
  61:lvgl/src/misc/lv_math.c ****     }
  62:lvgl/src/misc/lv_math.c ****     else if(angle >= 180 && angle < 270) {
 101              		.loc 1 62 10 is_stmt 1 view .LVU26
 102              		.loc 1 62 26 is_stmt 0 view .LVU27
 103 0048 A0F1B403 		sub	r3, r0, #180
 104 004c 9BB2     		uxth	r3, r3
 105              		.loc 1 62 12 view .LVU28
 106 004e 592B     		cmp	r3, #89
ARM GAS  C:\usertemp\cc148IyM.s 			page 4


 107 0050 06D8     		bhi	.L6
  63:lvgl/src/misc/lv_math.c ****         angle = angle - 180;
 108              		.loc 1 63 9 is_stmt 1 view .LVU29
 109              		.loc 1 63 15 is_stmt 0 view .LVU30
 110 0052 1BB2     		sxth	r3, r3
 111              	.LVL11:
  64:lvgl/src/misc/lv_math.c ****         ret   = -sin0_90_table[angle];
 112              		.loc 1 64 9 is_stmt 1 view .LVU31
 113              		.loc 1 64 31 is_stmt 0 view .LVU32
 114 0054 084A     		ldr	r2, .L8+4
 115 0056 32F81300 		ldrh	r0, [r2, r3, lsl #1]
 116              		.loc 1 64 15 view .LVU33
 117 005a 4042     		rsbs	r0, r0, #0
 118 005c 00B2     		sxth	r0, r0
 119              	.LVL12:
 120              		.loc 1 64 15 view .LVU34
 121 005e 7047     		bx	lr
 122              	.LVL13:
 123              	.L6:
  65:lvgl/src/misc/lv_math.c ****     }
  66:lvgl/src/misc/lv_math.c ****     else {   /*angle >=270*/
  67:lvgl/src/misc/lv_math.c ****         angle = 360 - angle;
 124              		.loc 1 67 9 is_stmt 1 view .LVU35
 125              		.loc 1 67 21 is_stmt 0 view .LVU36
 126 0060 C0F5B470 		rsb	r0, r0, #360
 127              	.LVL14:
 128              		.loc 1 67 15 view .LVU37
 129 0064 00B2     		sxth	r0, r0
 130              	.LVL15:
  68:lvgl/src/misc/lv_math.c ****         ret   = -sin0_90_table[angle];
 131              		.loc 1 68 9 is_stmt 1 view .LVU38
 132              		.loc 1 68 31 is_stmt 0 view .LVU39
 133 0066 044B     		ldr	r3, .L8+4
 134 0068 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 135              	.LVL16:
 136              		.loc 1 68 15 view .LVU40
 137 006c 4042     		rsbs	r0, r0, #0
 138 006e 00B2     		sxth	r0, r0
 139              	.LVL17:
  69:lvgl/src/misc/lv_math.c ****     }
  70:lvgl/src/misc/lv_math.c **** 
  71:lvgl/src/misc/lv_math.c ****     return ret;
 140              		.loc 1 71 5 is_stmt 1 view .LVU41
  72:lvgl/src/misc/lv_math.c **** }
 141              		.loc 1 72 1 is_stmt 0 view .LVU42
 142 0070 7047     		bx	lr
 143              	.L9:
 144 0072 00BF     		.align	2
 145              	.L8:
 146 0074 B7600BB6 		.word	-1240768329
 147 0078 00000000 		.word	sin0_90_table
 148              		.cfi_endproc
 149              	.LFE1:
 151              		.section	.text.lv_bezier3,"ax",%progbits
 152              		.align	1
 153              		.global	lv_bezier3
 154              		.syntax unified
ARM GAS  C:\usertemp\cc148IyM.s 			page 5


 155              		.thumb
 156              		.thumb_func
 158              	lv_bezier3:
 159              	.LVL18:
 160              	.LFB2:
  73:lvgl/src/misc/lv_math.c **** 
  74:lvgl/src/misc/lv_math.c **** /**
  75:lvgl/src/misc/lv_math.c ****  * Calculate a value of a Cubic Bezier function.
  76:lvgl/src/misc/lv_math.c ****  * @param t time in range of [0..LV_BEZIER_VAL_MAX]
  77:lvgl/src/misc/lv_math.c ****  * @param u0 start values in range of [0..LV_BEZIER_VAL_MAX]
  78:lvgl/src/misc/lv_math.c ****  * @param u1 control value 1 values in range of [0..LV_BEZIER_VAL_MAX]
  79:lvgl/src/misc/lv_math.c ****  * @param u2 control value 2 in range of [0..LV_BEZIER_VAL_MAX]
  80:lvgl/src/misc/lv_math.c ****  * @param u3 end values in range of [0..LV_BEZIER_VAL_MAX]
  81:lvgl/src/misc/lv_math.c ****  * @return the value calculated from the given parameters in range of [0..LV_BEZIER_VAL_MAX]
  82:lvgl/src/misc/lv_math.c ****  */
  83:lvgl/src/misc/lv_math.c **** uint32_t lv_bezier3(uint32_t t, uint32_t u0, uint32_t u1, uint32_t u2, uint32_t u3)
  84:lvgl/src/misc/lv_math.c **** {
 161              		.loc 1 84 1 is_stmt 1 view -0
 162              		.cfi_startproc
 163              		@ args = 4, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		.loc 1 84 1 is_stmt 0 view .LVU44
 166 0000 70B5     		push	{r4, r5, r6, lr}
 167              	.LCFI0:
 168              		.cfi_def_cfa_offset 16
 169              		.cfi_offset 4, -16
 170              		.cfi_offset 5, -12
 171              		.cfi_offset 6, -8
 172              		.cfi_offset 14, -4
  85:lvgl/src/misc/lv_math.c ****     uint32_t t_rem  = 1024 - t;
 173              		.loc 1 85 5 is_stmt 1 view .LVU45
 174              		.loc 1 85 14 is_stmt 0 view .LVU46
 175 0002 C0F5806C 		rsb	ip, r0, #1024
 176              	.LVL19:
  86:lvgl/src/misc/lv_math.c ****     uint32_t t_rem2 = (t_rem * t_rem) >> 10;
 177              		.loc 1 86 5 is_stmt 1 view .LVU47
 178              		.loc 1 86 30 is_stmt 0 view .LVU48
 179 0006 0CFB0CF4 		mul	r4, ip, ip
 180              		.loc 1 86 14 view .LVU49
 181 000a A40A     		lsrs	r4, r4, #10
 182              	.LVL20:
  87:lvgl/src/misc/lv_math.c ****     uint32_t t_rem3 = (t_rem2 * t_rem) >> 10;
 183              		.loc 1 87 5 is_stmt 1 view .LVU50
 184              		.loc 1 87 31 is_stmt 0 view .LVU51
 185 000c 04FB0CF6 		mul	r6, r4, ip
 186              		.loc 1 87 14 view .LVU52
 187 0010 B60A     		lsrs	r6, r6, #10
 188              	.LVL21:
  88:lvgl/src/misc/lv_math.c ****     uint32_t t2     = (t * t) >> 10;
 189              		.loc 1 88 5 is_stmt 1 view .LVU53
 190              		.loc 1 88 26 is_stmt 0 view .LVU54
 191 0012 00FB00FE 		mul	lr, r0, r0
 192              		.loc 1 88 14 view .LVU55
 193 0016 4FEA9E2E 		lsr	lr, lr, #10
 194              	.LVL22:
  89:lvgl/src/misc/lv_math.c ****     uint32_t t3     = (t2 * t) >> 10;
 195              		.loc 1 89 5 is_stmt 1 view .LVU56
ARM GAS  C:\usertemp\cc148IyM.s 			page 6


 196              		.loc 1 89 27 is_stmt 0 view .LVU57
 197 001a 0EFB00F5 		mul	r5, lr, r0
 198              		.loc 1 89 14 view .LVU58
 199 001e AD0A     		lsrs	r5, r5, #10
 200              	.LVL23:
  90:lvgl/src/misc/lv_math.c **** 
  91:lvgl/src/misc/lv_math.c ****     uint32_t v1 = (t_rem3 * u0) >> 10;
 201              		.loc 1 91 5 is_stmt 1 view .LVU59
 202              		.loc 1 91 27 is_stmt 0 view .LVU60
 203 0020 01FB06F6 		mul	r6, r1, r6
 204              	.LVL24:
  92:lvgl/src/misc/lv_math.c ****     uint32_t v2 = (3 * t_rem2 * t * u1) >> 20;
 205              		.loc 1 92 5 is_stmt 1 view .LVU61
 206              		.loc 1 92 31 is_stmt 0 view .LVU62
 207 0024 04FB00F0 		mul	r0, r4, r0
 208              	.LVL25:
 209              		.loc 1 92 35 view .LVU63
 210 0028 00FB02F2 		mul	r2, r0, r2
 211              	.LVL26:
 212              		.loc 1 92 35 view .LVU64
 213 002c 02EB4202 		add	r2, r2, r2, lsl #1
 214              		.loc 1 92 14 view .LVU65
 215 0030 120D     		lsrs	r2, r2, #20
 216              	.LVL27:
  93:lvgl/src/misc/lv_math.c ****     uint32_t v3 = (3 * t_rem * t2 * u2) >> 20;
 217              		.loc 1 93 5 is_stmt 1 view .LVU66
 218              		.loc 1 93 30 is_stmt 0 view .LVU67
 219 0032 0EFB0CFC 		mul	ip, lr, ip
 220              	.LVL28:
 221              		.loc 1 93 35 view .LVU68
 222 0036 03FB0CFC 		mul	ip, r3, ip
 223 003a 0CEB4C0C 		add	ip, ip, ip, lsl #1
 224              	.LVL29:
  94:lvgl/src/misc/lv_math.c ****     uint32_t v4 = (t3 * u3) >> 10;
 225              		.loc 1 94 5 is_stmt 1 view .LVU69
 226              		.loc 1 94 23 is_stmt 0 view .LVU70
 227 003e 049B     		ldr	r3, [sp, #16]
 228              	.LVL30:
 229              		.loc 1 94 23 view .LVU71
 230 0040 03FB05F0 		mul	r0, r3, r5
 231              	.LVL31:
  95:lvgl/src/misc/lv_math.c **** 
  96:lvgl/src/misc/lv_math.c ****     return v1 + v2 + v3 + v4;
 232              		.loc 1 96 5 is_stmt 1 view .LVU72
 233              		.loc 1 96 15 is_stmt 0 view .LVU73
 234 0044 02EB9622 		add	r2, r2, r6, lsr #10
 235              	.LVL32:
 236              		.loc 1 96 20 view .LVU74
 237 0048 02EB1C52 		add	r2, r2, ip, lsr #20
  97:lvgl/src/misc/lv_math.c **** }
 238              		.loc 1 97 1 view .LVU75
 239 004c 02EB9020 		add	r0, r2, r0, lsr #10
 240              	.LVL33:
 241              		.loc 1 97 1 view .LVU76
 242 0050 70BD     		pop	{r4, r5, r6, pc}
 243              		.loc 1 97 1 view .LVU77
 244              		.cfi_endproc
ARM GAS  C:\usertemp\cc148IyM.s 			page 7


 245              	.LFE2:
 247              		.section	.text.lv_sqrt,"ax",%progbits
 248              		.align	1
 249              		.global	lv_sqrt
 250              		.syntax unified
 251              		.thumb
 252              		.thumb_func
 254              	lv_sqrt:
 255              	.LVL34:
 256              	.LFB3:
  98:lvgl/src/misc/lv_math.c **** 
  99:lvgl/src/misc/lv_math.c **** /**
 100:lvgl/src/misc/lv_math.c ****  * Get the square root of a number
 101:lvgl/src/misc/lv_math.c ****  * @param x integer which square root should be calculated
 102:lvgl/src/misc/lv_math.c ****  * @param q store the result here. q->i: integer part, q->f: fractional part in 1/256 unit
 103:lvgl/src/misc/lv_math.c ****  * @param mask optional to skip some iterations if the magnitude of the root is known.
 104:lvgl/src/misc/lv_math.c ****  * Set to 0x8000 by default.
 105:lvgl/src/misc/lv_math.c ****  * If root < 16: mask = 0x80
 106:lvgl/src/misc/lv_math.c ****  * If root < 256: mask = 0x800
 107:lvgl/src/misc/lv_math.c ****  * Else: mask = 0x8000
 108:lvgl/src/misc/lv_math.c ****  */
 109:lvgl/src/misc/lv_math.c **** LV_ATTRIBUTE_FAST_MEM void lv_sqrt(uint32_t x, lv_sqrt_res_t * q, uint32_t mask)
 110:lvgl/src/misc/lv_math.c **** {
 257              		.loc 1 110 1 is_stmt 1 view -0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261              		.loc 1 110 1 is_stmt 0 view .LVU79
 262 0000 00B5     		push	{lr}
 263              	.LCFI1:
 264              		.cfi_def_cfa_offset 4
 265              		.cfi_offset 14, -4
 111:lvgl/src/misc/lv_math.c ****     x = x << 8; /*To get 4 bit precision. (sqrt(256) = 16 = 4 bit)*/
 266              		.loc 1 111 5 is_stmt 1 view .LVU80
 267              		.loc 1 111 7 is_stmt 0 view .LVU81
 268 0002 0002     		lsls	r0, r0, #8
 269              	.LVL35:
 112:lvgl/src/misc/lv_math.c **** 
 113:lvgl/src/misc/lv_math.c ****     uint32_t root = 0;
 270              		.loc 1 113 5 is_stmt 1 view .LVU82
 271              		.loc 1 113 14 is_stmt 0 view .LVU83
 272 0004 4FF0000C 		mov	ip, #0
 273 0008 01E0     		b	.L14
 274              	.LVL36:
 275              	.L13:
 114:lvgl/src/misc/lv_math.c ****     uint32_t trial;
 115:lvgl/src/misc/lv_math.c ****     // http://ww1.microchip.com/...en/AppNotes/91040a.pdf
 116:lvgl/src/misc/lv_math.c ****     do {
 117:lvgl/src/misc/lv_math.c ****         trial = root + mask;
 118:lvgl/src/misc/lv_math.c ****         if(trial * trial <= x) root = trial;
 119:lvgl/src/misc/lv_math.c ****         mask = mask >> 1;
 276              		.loc 1 119 9 is_stmt 1 view .LVU84
 120:lvgl/src/misc/lv_math.c ****     } while(mask);
 277              		.loc 1 120 13 view .LVU85
 278 000a 5208     		lsrs	r2, r2, #1
 279              	.LVL37:
 280              		.loc 1 120 13 is_stmt 0 view .LVU86
ARM GAS  C:\usertemp\cc148IyM.s 			page 8


 281 000c 07D0     		beq	.L17
 282              	.LVL38:
 283              	.L14:
 114:lvgl/src/misc/lv_math.c ****     uint32_t trial;
 284              		.loc 1 114 5 is_stmt 1 view .LVU87
 116:lvgl/src/misc/lv_math.c ****         trial = root + mask;
 285              		.loc 1 116 5 view .LVU88
 117:lvgl/src/misc/lv_math.c ****         if(trial * trial <= x) root = trial;
 286              		.loc 1 117 9 view .LVU89
 117:lvgl/src/misc/lv_math.c ****         if(trial * trial <= x) root = trial;
 287              		.loc 1 117 15 is_stmt 0 view .LVU90
 288 000e 02EB0C03 		add	r3, r2, ip
 289              	.LVL39:
 118:lvgl/src/misc/lv_math.c ****         mask = mask >> 1;
 290              		.loc 1 118 9 is_stmt 1 view .LVU91
 118:lvgl/src/misc/lv_math.c ****         mask = mask >> 1;
 291              		.loc 1 118 18 is_stmt 0 view .LVU92
 292 0012 03FB03FE 		mul	lr, r3, r3
 118:lvgl/src/misc/lv_math.c ****         mask = mask >> 1;
 293              		.loc 1 118 11 view .LVU93
 294 0016 8645     		cmp	lr, r0
 295 0018 F7D8     		bhi	.L13
 118:lvgl/src/misc/lv_math.c ****         mask = mask >> 1;
 296              		.loc 1 118 37 discriminator 1 view .LVU94
 297 001a 9C46     		mov	ip, r3
 298              	.LVL40:
 118:lvgl/src/misc/lv_math.c ****         mask = mask >> 1;
 299              		.loc 1 118 37 discriminator 1 view .LVU95
 300 001c F5E7     		b	.L13
 301              	.LVL41:
 302              	.L17:
 121:lvgl/src/misc/lv_math.c **** 
 122:lvgl/src/misc/lv_math.c ****     q->i = root >> 4;
 303              		.loc 1 122 5 is_stmt 1 view .LVU96
 304              		.loc 1 122 17 is_stmt 0 view .LVU97
 305 001e 4FEA1C13 		lsr	r3, ip, #4
 306              	.LVL42:
 307              		.loc 1 122 10 view .LVU98
 308 0022 0B80     		strh	r3, [r1]	@ movhi
 123:lvgl/src/misc/lv_math.c ****     q->f = (root & 0xf) << 4;
 309              		.loc 1 123 5 is_stmt 1 view .LVU99
 310              		.loc 1 123 25 is_stmt 0 view .LVU100
 311 0024 4FEA0C1C 		lsl	ip, ip, #4
 312              	.LVL43:
 313              		.loc 1 123 25 view .LVU101
 314 0028 0CF0F00C 		and	ip, ip, #240
 315              		.loc 1 123 10 view .LVU102
 316 002c A1F802C0 		strh	ip, [r1, #2]	@ movhi
 124:lvgl/src/misc/lv_math.c **** }
 317              		.loc 1 124 1 view .LVU103
 318 0030 5DF804FB 		ldr	pc, [sp], #4
 319              		.cfi_endproc
 320              	.LFE3:
 322              		.section	.text.lv_atan2,"ax",%progbits
 323              		.align	1
 324              		.global	lv_atan2
 325              		.syntax unified
ARM GAS  C:\usertemp\cc148IyM.s 			page 9


 326              		.thumb
 327              		.thumb_func
 329              	lv_atan2:
 330              	.LVL44:
 331              	.LFB4:
 125:lvgl/src/misc/lv_math.c **** 
 126:lvgl/src/misc/lv_math.c **** /**
 127:lvgl/src/misc/lv_math.c ****  * Calculate the atan2 of a vector.
 128:lvgl/src/misc/lv_math.c ****  * @param x
 129:lvgl/src/misc/lv_math.c ****  * @param y
 130:lvgl/src/misc/lv_math.c ****  * @return the angle in degree calculated from the given parameters in range of [0..360]
 131:lvgl/src/misc/lv_math.c ****  */
 132:lvgl/src/misc/lv_math.c **** uint16_t lv_atan2(int x, int y)
 133:lvgl/src/misc/lv_math.c **** {
 332              		.loc 1 133 1 is_stmt 1 view -0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336              		@ link register save eliminated.
 134:lvgl/src/misc/lv_math.c ****     // Fast XY vector to integer degree algorithm - Jan 2011 www.RomanBlack.com
 135:lvgl/src/misc/lv_math.c ****     // Converts any XY values including 0 to a degree value that should be
 136:lvgl/src/misc/lv_math.c ****     // within +/- 1 degree of the accurate value without needing
 137:lvgl/src/misc/lv_math.c ****     // large slow trig functions like ArcTan() or ArcCos().
 138:lvgl/src/misc/lv_math.c ****     // NOTE! at least one of the X or Y values must be non-zero!
 139:lvgl/src/misc/lv_math.c ****     // This is the full version, for all 4 quadrants and will generate
 140:lvgl/src/misc/lv_math.c ****     // the angle in integer degrees from 0-360.
 141:lvgl/src/misc/lv_math.c ****     // Any values of X and Y are usable including negative values provided
 142:lvgl/src/misc/lv_math.c ****     // they are between -1456 and 1456 so the 16bit multiply does not overflow.
 143:lvgl/src/misc/lv_math.c **** 
 144:lvgl/src/misc/lv_math.c ****     unsigned char negflag;
 337              		.loc 1 144 5 view .LVU105
 145:lvgl/src/misc/lv_math.c ****     unsigned char tempdegree;
 338              		.loc 1 145 5 view .LVU106
 146:lvgl/src/misc/lv_math.c ****     unsigned char comp;
 339              		.loc 1 146 5 view .LVU107
 147:lvgl/src/misc/lv_math.c ****     unsigned int degree;     // this will hold the result
 340              		.loc 1 147 5 view .LVU108
 148:lvgl/src/misc/lv_math.c ****     unsigned int ux;
 341              		.loc 1 148 5 view .LVU109
 149:lvgl/src/misc/lv_math.c ****     unsigned int uy;
 342              		.loc 1 149 5 view .LVU110
 150:lvgl/src/misc/lv_math.c **** 
 151:lvgl/src/misc/lv_math.c ****     // Save the sign flags then remove signs and get XY as unsigned ints
 152:lvgl/src/misc/lv_math.c ****     negflag = 0;
 343              		.loc 1 152 5 view .LVU111
 153:lvgl/src/misc/lv_math.c ****     if(x < 0) {
 344              		.loc 1 153 5 view .LVU112
 345              		.loc 1 153 7 is_stmt 0 view .LVU113
 346 0000 0028     		cmp	r0, #0
 347              		.loc 1 153 7 view .LVU114
 348 0002 15DB     		blt	.L37
 152:lvgl/src/misc/lv_math.c ****     if(x < 0) {
 349              		.loc 1 152 13 view .LVU115
 350 0004 0023     		movs	r3, #0
 351              	.LVL45:
 352              	.L19:
 154:lvgl/src/misc/lv_math.c ****         negflag += 0x01;    // x flag bit
ARM GAS  C:\usertemp\cc148IyM.s 			page 10


 155:lvgl/src/misc/lv_math.c ****         x = (0 - x);        // is now +
 156:lvgl/src/misc/lv_math.c ****     }
 157:lvgl/src/misc/lv_math.c ****     ux = x;                // copy to unsigned var before multiply
 353              		.loc 1 157 5 is_stmt 1 view .LVU116
 158:lvgl/src/misc/lv_math.c ****     if(y < 0) {
 354              		.loc 1 158 5 view .LVU117
 355              		.loc 1 158 7 is_stmt 0 view .LVU118
 356 0006 0029     		cmp	r1, #0
 357 0008 15DB     		blt	.L38
 358              	.L20:
 159:lvgl/src/misc/lv_math.c ****         negflag += 0x02;    // y flag bit
 160:lvgl/src/misc/lv_math.c ****         y = (0 - y);        // is now +
 161:lvgl/src/misc/lv_math.c ****     }
 162:lvgl/src/misc/lv_math.c ****     uy = y;                // copy to unsigned var before multiply
 359              		.loc 1 162 5 is_stmt 1 view .LVU119
 360              	.LVL46:
 163:lvgl/src/misc/lv_math.c **** 
 164:lvgl/src/misc/lv_math.c ****     // 1. Calc the scaled "degrees"
 165:lvgl/src/misc/lv_math.c ****     if(ux > uy) {
 361              		.loc 1 165 5 view .LVU120
 362              		.loc 1 165 7 is_stmt 0 view .LVU121
 363 000a 8842     		cmp	r0, r1
 364 000c 17D9     		bls	.L21
 166:lvgl/src/misc/lv_math.c ****         degree = (uy * 45) / ux;   // degree result will be 0-45 range
 365              		.loc 1 166 9 is_stmt 1 view .LVU122
 366              		.loc 1 166 22 is_stmt 0 view .LVU123
 367 000e 01EB4101 		add	r1, r1, r1, lsl #1
 368              	.LVL47:
 369              		.loc 1 166 22 view .LVU124
 370 0012 C1EB0111 		rsb	r1, r1, r1, lsl #4
 371              		.loc 1 166 16 view .LVU125
 372 0016 B1FBF0F1 		udiv	r1, r1, r0
 373              	.LVL48:
 167:lvgl/src/misc/lv_math.c ****         negflag += 0x10;    // octant flag bit
 374              		.loc 1 167 9 is_stmt 1 view .LVU126
 375              		.loc 1 167 17 is_stmt 0 view .LVU127
 376 001a 1033     		adds	r3, r3, #16
 377              	.LVL49:
 378              		.loc 1 167 17 view .LVU128
 379 001c DBB2     		uxtb	r3, r3
 380              	.LVL50:
 381              	.L22:
 168:lvgl/src/misc/lv_math.c ****     }
 169:lvgl/src/misc/lv_math.c ****     else {
 170:lvgl/src/misc/lv_math.c ****         degree = (ux * 45) / uy;   // degree result will be 0-45 range
 171:lvgl/src/misc/lv_math.c ****     }
 172:lvgl/src/misc/lv_math.c **** 
 173:lvgl/src/misc/lv_math.c ****     // 2. Compensate for the 4 degree error curve
 174:lvgl/src/misc/lv_math.c ****     comp = 0;
 382              		.loc 1 174 5 is_stmt 1 view .LVU129
 175:lvgl/src/misc/lv_math.c ****     tempdegree = degree;    // use an unsigned char for speed!
 383              		.loc 1 175 5 view .LVU130
 384              		.loc 1 175 16 is_stmt 0 view .LVU131
 385 001e CAB2     		uxtb	r2, r1
 386              	.LVL51:
 176:lvgl/src/misc/lv_math.c ****     if(tempdegree > 22) {    // if top half of range
 387              		.loc 1 176 5 is_stmt 1 view .LVU132
ARM GAS  C:\usertemp\cc148IyM.s 			page 11


 388              		.loc 1 176 7 is_stmt 0 view .LVU133
 389 0020 162A     		cmp	r2, #22
 390 0022 1DD9     		bls	.L23
 177:lvgl/src/misc/lv_math.c ****         if(tempdegree <= 44) comp++;
 391              		.loc 1 177 9 is_stmt 1 view .LVU134
 392              		.loc 1 177 11 is_stmt 0 view .LVU135
 393 0024 2C2A     		cmp	r2, #44
 394 0026 11D8     		bhi	.L31
 395              		.loc 1 177 30 is_stmt 1 discriminator 1 view .LVU136
 396              	.LVL52:
 178:lvgl/src/misc/lv_math.c ****         if(tempdegree <= 41) comp++;
 397              		.loc 1 178 9 view .LVU137
 398              		.loc 1 178 11 is_stmt 0 view .LVU138
 399 0028 292A     		cmp	r2, #41
 400 002a 23D8     		bhi	.L32
 401              		.loc 1 178 34 discriminator 1 view .LVU139
 402 002c 0220     		movs	r0, #2
 403 002e 0EE0     		b	.L24
 404              	.LVL53:
 405              	.L37:
 154:lvgl/src/misc/lv_math.c ****         x = (0 - x);        // is now +
 406              		.loc 1 154 9 is_stmt 1 view .LVU140
 155:lvgl/src/misc/lv_math.c ****     }
 407              		.loc 1 155 9 view .LVU141
 155:lvgl/src/misc/lv_math.c ****     }
 408              		.loc 1 155 11 is_stmt 0 view .LVU142
 409 0030 4042     		rsbs	r0, r0, #0
 410              	.LVL54:
 154:lvgl/src/misc/lv_math.c ****         x = (0 - x);        // is now +
 411              		.loc 1 154 17 view .LVU143
 412 0032 0123     		movs	r3, #1
 413 0034 E7E7     		b	.L19
 414              	.LVL55:
 415              	.L38:
 159:lvgl/src/misc/lv_math.c ****         y = (0 - y);        // is now +
 416              		.loc 1 159 9 is_stmt 1 view .LVU144
 159:lvgl/src/misc/lv_math.c ****         y = (0 - y);        // is now +
 417              		.loc 1 159 17 is_stmt 0 view .LVU145
 418 0036 0233     		adds	r3, r3, #2
 419              	.LVL56:
 159:lvgl/src/misc/lv_math.c ****         y = (0 - y);        // is now +
 420              		.loc 1 159 17 view .LVU146
 421 0038 DBB2     		uxtb	r3, r3
 422              	.LVL57:
 160:lvgl/src/misc/lv_math.c ****     }
 423              		.loc 1 160 9 is_stmt 1 view .LVU147
 160:lvgl/src/misc/lv_math.c ****     }
 424              		.loc 1 160 11 is_stmt 0 view .LVU148
 425 003a 4942     		rsbs	r1, r1, #0
 426              	.LVL58:
 160:lvgl/src/misc/lv_math.c ****     }
 427              		.loc 1 160 11 view .LVU149
 428 003c E5E7     		b	.L20
 429              	.LVL59:
 430              	.L21:
 170:lvgl/src/misc/lv_math.c ****     }
 431              		.loc 1 170 9 is_stmt 1 view .LVU150
ARM GAS  C:\usertemp\cc148IyM.s 			page 12


 170:lvgl/src/misc/lv_math.c ****     }
 432              		.loc 1 170 22 is_stmt 0 view .LVU151
 433 003e 00EB4000 		add	r0, r0, r0, lsl #1
 434              	.LVL60:
 170:lvgl/src/misc/lv_math.c ****     }
 435              		.loc 1 170 22 view .LVU152
 436 0042 C0EB0010 		rsb	r0, r0, r0, lsl #4
 170:lvgl/src/misc/lv_math.c ****     }
 437              		.loc 1 170 16 view .LVU153
 438 0046 B0FBF1F1 		udiv	r1, r0, r1
 439              	.LVL61:
 170:lvgl/src/misc/lv_math.c ****     }
 440              		.loc 1 170 16 view .LVU154
 441 004a E8E7     		b	.L22
 442              	.LVL62:
 443              	.L31:
 174:lvgl/src/misc/lv_math.c ****     tempdegree = degree;    // use an unsigned char for speed!
 444              		.loc 1 174 10 view .LVU155
 445 004c 0020     		movs	r0, #0
 446              	.LVL63:
 447              	.L24:
 179:lvgl/src/misc/lv_math.c ****         if(tempdegree <= 37) comp++;
 448              		.loc 1 179 9 is_stmt 1 view .LVU156
 449              		.loc 1 179 11 is_stmt 0 view .LVU157
 450 004e 252A     		cmp	r2, #37
 451 0050 13D8     		bhi	.L25
 452              		.loc 1 179 30 is_stmt 1 discriminator 1 view .LVU158
 453              		.loc 1 179 34 is_stmt 0 discriminator 1 view .LVU159
 454 0052 0130     		adds	r0, r0, #1
 455              	.LVL64:
 456              		.loc 1 179 34 discriminator 1 view .LVU160
 457 0054 C0B2     		uxtb	r0, r0
 458              	.LVL65:
 180:lvgl/src/misc/lv_math.c ****         if(tempdegree <= 32) comp++;  // max is 4 degrees compensated
 459              		.loc 1 180 9 is_stmt 1 view .LVU161
 460              		.loc 1 180 11 is_stmt 0 view .LVU162
 461 0056 202A     		cmp	r2, #32
 462 0058 0FD8     		bhi	.L25
 463              		.loc 1 180 30 is_stmt 1 discriminator 1 view .LVU163
 464              		.loc 1 180 34 is_stmt 0 discriminator 1 view .LVU164
 465 005a 0130     		adds	r0, r0, #1
 466              	.LVL66:
 467              		.loc 1 180 34 discriminator 1 view .LVU165
 468 005c C0B2     		uxtb	r0, r0
 469              	.LVL67:
 470              		.loc 1 180 34 discriminator 1 view .LVU166
 471 005e 0CE0     		b	.L25
 472              	.LVL68:
 473              	.L23:
 181:lvgl/src/misc/lv_math.c ****     }
 182:lvgl/src/misc/lv_math.c ****     else {   // else is lower half of range
 183:lvgl/src/misc/lv_math.c ****         if(tempdegree >= 2) comp++;
 474              		.loc 1 183 9 is_stmt 1 view .LVU167
 475              		.loc 1 183 11 is_stmt 0 view .LVU168
 476 0060 012A     		cmp	r2, #1
 477 0062 09D9     		bls	.L33
 478              		.loc 1 183 29 is_stmt 1 discriminator 1 view .LVU169
ARM GAS  C:\usertemp\cc148IyM.s 			page 13


 479              	.LVL69:
 184:lvgl/src/misc/lv_math.c ****         if(tempdegree >= 6) comp++;
 480              		.loc 1 184 9 view .LVU170
 481              		.loc 1 184 11 is_stmt 0 view .LVU171
 482 0064 052A     		cmp	r2, #5
 483 0066 17D9     		bls	.L34
 484              		.loc 1 184 29 is_stmt 1 discriminator 1 view .LVU172
 485              	.LVL70:
 185:lvgl/src/misc/lv_math.c ****         if(tempdegree >= 10) comp++;
 486              		.loc 1 185 9 view .LVU173
 487              		.loc 1 185 11 is_stmt 0 view .LVU174
 488 0068 092A     		cmp	r2, #9
 489 006a 17D9     		bls	.L35
 490              		.loc 1 185 30 is_stmt 1 discriminator 1 view .LVU175
 491              	.LVL71:
 186:lvgl/src/misc/lv_math.c ****         if(tempdegree >= 15) comp++;  // max is 4 degrees compensated
 492              		.loc 1 186 9 view .LVU176
 493              		.loc 1 186 11 is_stmt 0 view .LVU177
 494 006c 0E2A     		cmp	r2, #14
 495 006e 17D8     		bhi	.L36
 496 0070 0320     		movs	r0, #3
 497 0072 02E0     		b	.L25
 498              	.LVL72:
 499              	.L32:
 500              		.loc 1 186 11 view .LVU178
 501 0074 0120     		movs	r0, #1
 502 0076 00E0     		b	.L25
 503              	.LVL73:
 504              	.L33:
 174:lvgl/src/misc/lv_math.c ****     tempdegree = degree;    // use an unsigned char for speed!
 505              		.loc 1 174 10 view .LVU179
 506 0078 0020     		movs	r0, #0
 507              	.LVL74:
 508              	.L25:
 187:lvgl/src/misc/lv_math.c ****     }
 188:lvgl/src/misc/lv_math.c ****     degree += comp;   // degree is now accurate to +/- 1 degree!
 509              		.loc 1 188 5 is_stmt 1 view .LVU180
 510              		.loc 1 188 12 is_stmt 0 view .LVU181
 511 007a 0844     		add	r0, r0, r1
 512              	.LVL75:
 189:lvgl/src/misc/lv_math.c **** 
 190:lvgl/src/misc/lv_math.c ****     // Invert degree if it was X>Y octant, makes 0-45 into 90-45
 191:lvgl/src/misc/lv_math.c ****     if(negflag & 0x10) degree = (90 - degree);
 513              		.loc 1 191 5 is_stmt 1 view .LVU182
 514              		.loc 1 191 7 is_stmt 0 view .LVU183
 515 007c 13F0100F 		tst	r3, #16
 516 0080 01D0     		beq	.L26
 517              		.loc 1 191 24 is_stmt 1 discriminator 1 view .LVU184
 518              		.loc 1 191 31 is_stmt 0 discriminator 1 view .LVU185
 519 0082 C0F15A00 		rsb	r0, r0, #90
 520              	.LVL76:
 521              	.L26:
 192:lvgl/src/misc/lv_math.c **** 
 193:lvgl/src/misc/lv_math.c ****     // 3. Degree is now 0-90 range for this quadrant,
 194:lvgl/src/misc/lv_math.c ****     // need to invert it for whichever quadrant it was in
 195:lvgl/src/misc/lv_math.c ****     if(negflag & 0x02) { // if -Y
 522              		.loc 1 195 5 is_stmt 1 view .LVU186
ARM GAS  C:\usertemp\cc148IyM.s 			page 14


 523              		.loc 1 195 7 is_stmt 0 view .LVU187
 524 0086 13F0020F 		tst	r3, #2
 525 008a 0ED0     		beq	.L27
 196:lvgl/src/misc/lv_math.c ****         if(negflag & 0x01)   // if -Y -X
 526              		.loc 1 196 9 is_stmt 1 view .LVU188
 527              		.loc 1 196 11 is_stmt 0 view .LVU189
 528 008c 13F0010F 		tst	r3, #1
 529 0090 08D0     		beq	.L28
 197:lvgl/src/misc/lv_math.c ****             degree = (180 + degree);
 530              		.loc 1 197 13 is_stmt 1 view .LVU190
 531              		.loc 1 197 20 is_stmt 0 view .LVU191
 532 0092 B430     		adds	r0, r0, #180
 533              	.LVL77:
 534              	.L29:
 198:lvgl/src/misc/lv_math.c ****         else        // else is -Y +X
 199:lvgl/src/misc/lv_math.c ****             degree = (180 - degree);
 200:lvgl/src/misc/lv_math.c ****     }
 201:lvgl/src/misc/lv_math.c ****     else {   // else is +Y
 202:lvgl/src/misc/lv_math.c ****         if(negflag & 0x01)   // if +Y -X
 203:lvgl/src/misc/lv_math.c ****             degree = (360 - degree);
 204:lvgl/src/misc/lv_math.c ****     }
 205:lvgl/src/misc/lv_math.c ****     return degree;
 535              		.loc 1 205 5 is_stmt 1 view .LVU192
 206:lvgl/src/misc/lv_math.c **** }
 536              		.loc 1 206 1 is_stmt 0 view .LVU193
 537 0094 80B2     		uxth	r0, r0
 538              	.LVL78:
 539              		.loc 1 206 1 view .LVU194
 540 0096 7047     		bx	lr
 541              	.LVL79:
 542              	.L34:
 543              		.loc 1 206 1 view .LVU195
 544 0098 0120     		movs	r0, #1
 545 009a EEE7     		b	.L25
 546              	.LVL80:
 547              	.L35:
 548              		.loc 1 206 1 view .LVU196
 549 009c 0220     		movs	r0, #2
 550 009e ECE7     		b	.L25
 551              	.LVL81:
 552              	.L36:
 186:lvgl/src/misc/lv_math.c ****     }
 553              		.loc 1 186 34 discriminator 1 view .LVU197
 554 00a0 0420     		movs	r0, #4
 555 00a2 EAE7     		b	.L25
 556              	.LVL82:
 557              	.L28:
 199:lvgl/src/misc/lv_math.c ****     }
 558              		.loc 1 199 13 is_stmt 1 view .LVU198
 199:lvgl/src/misc/lv_math.c ****     }
 559              		.loc 1 199 20 is_stmt 0 view .LVU199
 560 00a4 C0F1B400 		rsb	r0, r0, #180
 561              	.LVL83:
 199:lvgl/src/misc/lv_math.c ****     }
 562              		.loc 1 199 20 view .LVU200
 563 00a8 F4E7     		b	.L29
 564              	.L27:
ARM GAS  C:\usertemp\cc148IyM.s 			page 15


 202:lvgl/src/misc/lv_math.c ****             degree = (360 - degree);
 565              		.loc 1 202 9 is_stmt 1 view .LVU201
 202:lvgl/src/misc/lv_math.c ****             degree = (360 - degree);
 566              		.loc 1 202 11 is_stmt 0 view .LVU202
 567 00aa 13F0010F 		tst	r3, #1
 568 00ae F1D0     		beq	.L29
 203:lvgl/src/misc/lv_math.c ****     }
 569              		.loc 1 203 13 is_stmt 1 view .LVU203
 203:lvgl/src/misc/lv_math.c ****     }
 570              		.loc 1 203 20 is_stmt 0 view .LVU204
 571 00b0 C0F5B470 		rsb	r0, r0, #360
 572              	.LVL84:
 203:lvgl/src/misc/lv_math.c ****     }
 573              		.loc 1 203 20 view .LVU205
 574 00b4 EEE7     		b	.L29
 575              		.cfi_endproc
 576              	.LFE4:
 578              		.section	.text.lv_pow,"ax",%progbits
 579              		.align	1
 580              		.global	lv_pow
 581              		.syntax unified
 582              		.thumb
 583              		.thumb_func
 585              	lv_pow:
 586              	.LVL85:
 587              	.LFB5:
 207:lvgl/src/misc/lv_math.c **** 
 208:lvgl/src/misc/lv_math.c **** /**
 209:lvgl/src/misc/lv_math.c ****  * Calculate the integer exponents.
 210:lvgl/src/misc/lv_math.c ****  * @param base
 211:lvgl/src/misc/lv_math.c ****  * @param power
 212:lvgl/src/misc/lv_math.c ****  * @return base raised to the power exponent
 213:lvgl/src/misc/lv_math.c ****  */
 214:lvgl/src/misc/lv_math.c **** int64_t lv_pow(int64_t base, int8_t exp)
 215:lvgl/src/misc/lv_math.c **** {
 588              		.loc 1 215 1 is_stmt 1 view -0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 0
 591              		@ frame_needed = 0, uses_anonymous_args = 0
 592              		.loc 1 215 1 is_stmt 0 view .LVU207
 593 0000 0346     		mov	r3, r0
 594 0002 8C46     		mov	ip, r1
 216:lvgl/src/misc/lv_math.c ****     int64_t result = 1;
 595              		.loc 1 216 5 is_stmt 1 view .LVU208
 596              	.LVL86:
 217:lvgl/src/misc/lv_math.c ****     while(exp) {
 597              		.loc 1 217 5 view .LVU209
 216:lvgl/src/misc/lv_math.c ****     int64_t result = 1;
 598              		.loc 1 216 13 is_stmt 0 view .LVU210
 599 0004 0120     		movs	r0, #1
 600              	.LVL87:
 216:lvgl/src/misc/lv_math.c ****     int64_t result = 1;
 601              		.loc 1 216 13 view .LVU211
 602 0006 0021     		movs	r1, #0
 603              	.LVL88:
 604              		.loc 1 217 11 is_stmt 1 view .LVU212
 605 0008 B2B1     		cbz	r2, .L47
ARM GAS  C:\usertemp\cc148IyM.s 			page 16


 215:lvgl/src/misc/lv_math.c ****     int64_t result = 1;
 606              		.loc 1 215 1 is_stmt 0 view .LVU213
 607 000a 00B5     		push	{lr}
 608              	.LCFI2:
 609              		.cfi_def_cfa_offset 4
 610              		.cfi_offset 14, -4
 611 000c 07E0     		b	.L42
 612              	.LVL89:
 613              	.L41:
 218:lvgl/src/misc/lv_math.c ****         if(exp & 1)
 219:lvgl/src/misc/lv_math.c ****             result *= base;
 220:lvgl/src/misc/lv_math.c ****         exp >>= 1;
 614              		.loc 1 220 9 is_stmt 1 view .LVU214
 615              		.loc 1 220 13 is_stmt 0 view .LVU215
 616 000e 5210     		asrs	r2, r2, #1
 617              	.LVL90:
 221:lvgl/src/misc/lv_math.c ****         base *= base;
 618              		.loc 1 221 9 is_stmt 1 view .LVU216
 619              		.loc 1 221 14 is_stmt 0 view .LVU217
 620 0010 03FB0CFE 		mul	lr, r3, ip
 621 0014 A3FB033C 		umull	r3, ip, r3, r3
 622 0018 0CEB4E0C 		add	ip, ip, lr, lsl #1
 623              	.LVL91:
 217:lvgl/src/misc/lv_math.c ****         if(exp & 1)
 624              		.loc 1 217 11 is_stmt 1 view .LVU218
 625 001c 52B1     		cbz	r2, .L48
 626              	.LVL92:
 627              	.L42:
 218:lvgl/src/misc/lv_math.c ****         if(exp & 1)
 628              		.loc 1 218 9 view .LVU219
 218:lvgl/src/misc/lv_math.c ****         if(exp & 1)
 629              		.loc 1 218 11 is_stmt 0 view .LVU220
 630 001e 12F0010F 		tst	r2, #1
 631 0022 F4D0     		beq	.L41
 219:lvgl/src/misc/lv_math.c ****         exp >>= 1;
 632              		.loc 1 219 13 is_stmt 1 view .LVU221
 219:lvgl/src/misc/lv_math.c ****         exp >>= 1;
 633              		.loc 1 219 20 is_stmt 0 view .LVU222
 634 0024 00FB0CFE 		mul	lr, r0, ip
 635 0028 03FB01EE 		mla	lr, r3, r1, lr
 636 002c A0FB0301 		umull	r0, r1, r0, r3
 637 0030 7144     		add	r1, r1, lr
 638              	.LVL93:
 219:lvgl/src/misc/lv_math.c ****         exp >>= 1;
 639              		.loc 1 219 20 view .LVU223
 640 0032 ECE7     		b	.L41
 641              	.LVL94:
 642              	.L48:
 222:lvgl/src/misc/lv_math.c ****     }
 223:lvgl/src/misc/lv_math.c **** 
 224:lvgl/src/misc/lv_math.c ****     return result;
 643              		.loc 1 224 5 is_stmt 1 view .LVU224
 225:lvgl/src/misc/lv_math.c **** }
 644              		.loc 1 225 1 is_stmt 0 view .LVU225
 645 0034 5DF804FB 		ldr	pc, [sp], #4
 646              	.L47:
 647              	.LCFI3:
ARM GAS  C:\usertemp\cc148IyM.s 			page 17


 648              		.cfi_def_cfa_offset 0
 649              		.cfi_restore 14
 650              		.loc 1 225 1 view .LVU226
 651 0038 7047     		bx	lr
 652              		.cfi_endproc
 653              	.LFE5:
 655              		.section	.text.lv_map,"ax",%progbits
 656              		.align	1
 657              		.global	lv_map
 658              		.syntax unified
 659              		.thumb
 660              		.thumb_func
 662              	lv_map:
 663              	.LVL95:
 664              	.LFB6:
 226:lvgl/src/misc/lv_math.c **** 
 227:lvgl/src/misc/lv_math.c **** /**
 228:lvgl/src/misc/lv_math.c ****  * Get the mapped of a number given an input and output range
 229:lvgl/src/misc/lv_math.c ****  * @param x integer which mapped value should be calculated
 230:lvgl/src/misc/lv_math.c ****  * @param min_in min input range
 231:lvgl/src/misc/lv_math.c ****  * @param max_in max input range
 232:lvgl/src/misc/lv_math.c ****  * @param min_out max output range
 233:lvgl/src/misc/lv_math.c ****  * @param max_out max output range
 234:lvgl/src/misc/lv_math.c ****  * @return the mapped number
 235:lvgl/src/misc/lv_math.c ****  */
 236:lvgl/src/misc/lv_math.c **** int32_t lv_map(int32_t x, int32_t min_in, int32_t max_in, int32_t min_out, int32_t max_out)
 237:lvgl/src/misc/lv_math.c **** {
 665              		.loc 1 237 1 is_stmt 1 view -0
 666              		.cfi_startproc
 667              		@ args = 4, pretend = 0, frame = 0
 668              		@ frame_needed = 0, uses_anonymous_args = 0
 669              		@ link register save eliminated.
 670              		.loc 1 237 1 is_stmt 0 view .LVU228
 671 0000 10B4     		push	{r4}
 672              	.LCFI4:
 673              		.cfi_def_cfa_offset 4
 674              		.cfi_offset 4, -4
 238:lvgl/src/misc/lv_math.c ****     if(x >= max_in) return max_out;
 675              		.loc 1 238 5 is_stmt 1 view .LVU229
 676              		.loc 1 238 7 is_stmt 0 view .LVU230
 677 0002 9042     		cmp	r0, r2
 678 0004 0EDA     		bge	.L51
 239:lvgl/src/misc/lv_math.c ****     if(x <= min_in) return min_out;
 679              		.loc 1 239 5 is_stmt 1 view .LVU231
 680              		.loc 1 239 7 is_stmt 0 view .LVU232
 681 0006 8842     		cmp	r0, r1
 682 0008 0EDD     		ble	.L52
 240:lvgl/src/misc/lv_math.c **** 
 241:lvgl/src/misc/lv_math.c ****     /**
 242:lvgl/src/misc/lv_math.c ****      * The equation should be:
 243:lvgl/src/misc/lv_math.c ****      *   ((x - min_in) * delta_out) / delta in) + min_out
 244:lvgl/src/misc/lv_math.c ****      * To avoid rounding error reorder the operations:
 245:lvgl/src/misc/lv_math.c ****      *   (x - min_in) * (delta_out / delta_min) + min_out
 246:lvgl/src/misc/lv_math.c ****      */
 247:lvgl/src/misc/lv_math.c **** 
 248:lvgl/src/misc/lv_math.c ****     int32_t delta_in = max_in - min_in;
 683              		.loc 1 248 5 is_stmt 1 view .LVU233
ARM GAS  C:\usertemp\cc148IyM.s 			page 18


 684              		.loc 1 248 13 is_stmt 0 view .LVU234
 685 000a 521A     		subs	r2, r2, r1
 686              	.LVL96:
 249:lvgl/src/misc/lv_math.c ****     int32_t delta_out = max_out - min_out;
 687              		.loc 1 249 5 is_stmt 1 view .LVU235
 688              		.loc 1 249 13 is_stmt 0 view .LVU236
 689 000c 019C     		ldr	r4, [sp, #4]
 690 000e A4EB030C 		sub	ip, r4, r3
 691              	.LVL97:
 250:lvgl/src/misc/lv_math.c **** 
 251:lvgl/src/misc/lv_math.c ****     return ((x - min_in) * delta_out) / delta_in + min_out;
 692              		.loc 1 251 5 is_stmt 1 view .LVU237
 693              		.loc 1 251 16 is_stmt 0 view .LVU238
 694 0012 411A     		subs	r1, r0, r1
 695              	.LVL98:
 696              		.loc 1 251 26 view .LVU239
 697 0014 0CFB01F1 		mul	r1, ip, r1
 698              		.loc 1 251 39 view .LVU240
 699 0018 91FBF2F2 		sdiv	r2, r1, r2
 700              	.LVL99:
 701              		.loc 1 251 50 view .LVU241
 702 001c D018     		adds	r0, r2, r3
 703              	.LVL100:
 704              	.L49:
 252:lvgl/src/misc/lv_math.c **** }
 705              		.loc 1 252 1 view .LVU242
 706 001e 5DF8044B 		ldr	r4, [sp], #4
 707              	.LCFI5:
 708              		.cfi_remember_state
 709              		.cfi_restore 4
 710              		.cfi_def_cfa_offset 0
 711              	.LVL101:
 712              		.loc 1 252 1 view .LVU243
 713 0022 7047     		bx	lr
 714              	.LVL102:
 715              	.L51:
 716              	.LCFI6:
 717              		.cfi_restore_state
 238:lvgl/src/misc/lv_math.c ****     if(x <= min_in) return min_out;
 718              		.loc 1 238 28 discriminator 1 view .LVU244
 719 0024 0198     		ldr	r0, [sp, #4]
 720              	.LVL103:
 238:lvgl/src/misc/lv_math.c ****     if(x <= min_in) return min_out;
 721              		.loc 1 238 28 discriminator 1 view .LVU245
 722 0026 FAE7     		b	.L49
 723              	.LVL104:
 724              	.L52:
 239:lvgl/src/misc/lv_math.c **** 
 725              		.loc 1 239 28 discriminator 1 view .LVU246
 726 0028 1846     		mov	r0, r3
 727              	.LVL105:
 239:lvgl/src/misc/lv_math.c **** 
 728              		.loc 1 239 28 discriminator 1 view .LVU247
 729 002a F8E7     		b	.L49
 730              		.cfi_endproc
 731              	.LFE6:
 733              		.section	.text.lv_rand,"ax",%progbits
ARM GAS  C:\usertemp\cc148IyM.s 			page 19


 734              		.align	1
 735              		.global	lv_rand
 736              		.syntax unified
 737              		.thumb
 738              		.thumb_func
 740              	lv_rand:
 741              	.LVL106:
 742              	.LFB7:
 253:lvgl/src/misc/lv_math.c **** 
 254:lvgl/src/misc/lv_math.c **** uint32_t lv_rand(uint32_t min, uint32_t max)
 255:lvgl/src/misc/lv_math.c **** {
 743              		.loc 1 255 1 is_stmt 1 view -0
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 0
 746              		@ frame_needed = 0, uses_anonymous_args = 0
 747              		@ link register save eliminated.
 256:lvgl/src/misc/lv_math.c ****     static uint32_t a = 0x1234ABCD; /*Seed*/
 748              		.loc 1 256 5 view .LVU249
 257:lvgl/src/misc/lv_math.c **** 
 258:lvgl/src/misc/lv_math.c ****     /*Algorithm "xor" from p. 4 of Marsaglia, "Xorshift RNGs"*/
 259:lvgl/src/misc/lv_math.c ****     uint32_t x = a;
 749              		.loc 1 259 5 view .LVU250
 750              		.loc 1 259 14 is_stmt 0 view .LVU251
 751 0000 084A     		ldr	r2, .L55
 752 0002 1368     		ldr	r3, [r2]
 753              	.LVL107:
 260:lvgl/src/misc/lv_math.c ****     x ^= x << 13;
 754              		.loc 1 260 5 is_stmt 1 view .LVU252
 755              		.loc 1 260 7 is_stmt 0 view .LVU253
 756 0004 83EA4333 		eor	r3, r3, r3, lsl #13
 757              	.LVL108:
 261:lvgl/src/misc/lv_math.c ****     x ^= x >> 17;
 758              		.loc 1 261 5 is_stmt 1 view .LVU254
 759              		.loc 1 261 7 is_stmt 0 view .LVU255
 760 0008 83EA5343 		eor	r3, r3, r3, lsr #17
 761              	.LVL109:
 262:lvgl/src/misc/lv_math.c ****     x ^= x << 5;
 762              		.loc 1 262 5 is_stmt 1 view .LVU256
 763              		.loc 1 262 7 is_stmt 0 view .LVU257
 764 000c 83EA4313 		eor	r3, r3, r3, lsl #5
 765              	.LVL110:
 263:lvgl/src/misc/lv_math.c ****     a = x;
 766              		.loc 1 263 5 is_stmt 1 view .LVU258
 767              		.loc 1 263 7 is_stmt 0 view .LVU259
 768 0010 1360     		str	r3, [r2]
 264:lvgl/src/misc/lv_math.c **** 
 265:lvgl/src/misc/lv_math.c ****     return (a % (max - min + 1)) + min;
 769              		.loc 1 265 5 is_stmt 1 view .LVU260
 770              		.loc 1 265 22 is_stmt 0 view .LVU261
 771 0012 091A     		subs	r1, r1, r0
 772              	.LVL111:
 773              		.loc 1 265 28 view .LVU262
 774 0014 0131     		adds	r1, r1, #1
 775              		.loc 1 265 15 view .LVU263
 776 0016 B3FBF1F2 		udiv	r2, r3, r1
 777 001a 01FB1233 		mls	r3, r1, r2, r3
 778              	.LVL112:
ARM GAS  C:\usertemp\cc148IyM.s 			page 20


 266:lvgl/src/misc/lv_math.c **** }
 779              		.loc 1 266 1 view .LVU264
 780 001e 1844     		add	r0, r0, r3
 781              	.LVL113:
 782              		.loc 1 266 1 view .LVU265
 783 0020 7047     		bx	lr
 784              	.L56:
 785 0022 00BF     		.align	2
 786              	.L55:
 787 0024 00000000 		.word	a.0
 788              		.cfi_endproc
 789              	.LFE7:
 791              		.section	.data.a.0,"aw"
 792              		.align	2
 795              	a.0:
 796 0000 CDAB3412 		.word	305441741
 797              		.section	.rodata.sin0_90_table,"a"
 798              		.align	2
 801              	sin0_90_table:
 802 0000 0000     		.short	0
 803 0002 3C02     		.short	572
 804 0004 7804     		.short	1144
 805 0006 B306     		.short	1715
 806 0008 EE08     		.short	2286
 807 000a 280B     		.short	2856
 808 000c 610D     		.short	3425
 809 000e 990F     		.short	3993
 810 0010 D011     		.short	4560
 811 0012 0614     		.short	5126
 812 0014 3A16     		.short	5690
 813 0016 6C18     		.short	6252
 814 0018 9D1A     		.short	6813
 815 001a CB1C     		.short	7371
 816 001c F71E     		.short	7927
 817 001e 2121     		.short	8481
 818 0020 4823     		.short	9032
 819 0022 6C25     		.short	9580
 820 0024 8E27     		.short	10126
 821 0026 AC29     		.short	10668
 822 0028 C72B     		.short	11207
 823 002a DF2D     		.short	11743
 824 002c F32F     		.short	12275
 825 002e 0332     		.short	12803
 826 0030 1034     		.short	13328
 827 0032 1836     		.short	13848
 828 0034 1C38     		.short	14364
 829 0036 1C3A     		.short	14876
 830 0038 173C     		.short	15383
 831 003a 0E3E     		.short	15886
 832 003c FF3F     		.short	16383
 833 003e EC41     		.short	16876
 834 0040 D443     		.short	17364
 835 0042 B645     		.short	17846
 836 0044 9347     		.short	18323
 837 0046 6A49     		.short	18794
 838 0048 3C4B     		.short	19260
 839 004a 084D     		.short	19720
ARM GAS  C:\usertemp\cc148IyM.s 			page 21


 840 004c CD4E     		.short	20173
 841 004e 8D50     		.short	20621
 842 0050 4652     		.short	21062
 843 0052 F953     		.short	21497
 844 0054 A555     		.short	21925
 845 0056 4B57     		.short	22347
 846 0058 EA58     		.short	22762
 847 005a 825A     		.short	23170
 848 005c 135C     		.short	23571
 849 005e 9C5D     		.short	23964
 850 0060 1F5F     		.short	24351
 851 0062 9A60     		.short	24730
 852 0064 0D62     		.short	25101
 853 0066 7963     		.short	25465
 854 0068 DD64     		.short	25821
 855 006a 3966     		.short	26169
 856 006c 8D67     		.short	26509
 857 006e D968     		.short	26841
 858 0070 1D6A     		.short	27165
 859 0072 596B     		.short	27481
 860 0074 8C6C     		.short	27788
 861 0076 B76D     		.short	28087
 862 0078 D96E     		.short	28377
 863 007a F36F     		.short	28659
 864 007c 0471     		.short	28932
 865 007e 0C72     		.short	29196
 866 0080 0B73     		.short	29451
 867 0082 0174     		.short	29697
 868 0084 EE74     		.short	29934
 869 0086 D275     		.short	30162
 870 0088 AD76     		.short	30381
 871 008a 7F77     		.short	30591
 872 008c 4778     		.short	30791
 873 008e 0679     		.short	30982
 874 0090 BB79     		.short	31163
 875 0092 677A     		.short	31335
 876 0094 0A7B     		.short	31498
 877 0096 A27B     		.short	31650
 878 0098 327C     		.short	31794
 879 009a B77C     		.short	31927
 880 009c 337D     		.short	32051
 881 009e A57D     		.short	32165
 882 00a0 0D7E     		.short	32269
 883 00a2 6C7E     		.short	32364
 884 00a4 C07E     		.short	32448
 885 00a6 0B7F     		.short	32523
 886 00a8 4B7F     		.short	32587
 887 00aa 827F     		.short	32642
 888 00ac AF7F     		.short	32687
 889 00ae D27F     		.short	32722
 890 00b0 EB7F     		.short	32747
 891 00b2 FA7F     		.short	32762
 892 00b4 FF7F     		.short	32767
 893              		.text
 894              	.Letext0:
 895              		.file 2 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 896              		.file 3 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
ARM GAS  C:\usertemp\cc148IyM.s 			page 22


 897              		.file 4 "lvgl/src/misc/lv_math.h"
ARM GAS  C:\usertemp\cc148IyM.s 			page 23


DEFINED SYMBOLS
                            *ABS*:00000000 lv_math.c
C:\usertemp\cc148IyM.s:20     .text.lv_trigo_sin:00000000 $t
C:\usertemp\cc148IyM.s:26     .text.lv_trigo_sin:00000000 lv_trigo_sin
C:\usertemp\cc148IyM.s:146    .text.lv_trigo_sin:00000074 $d
C:\usertemp\cc148IyM.s:801    .rodata.sin0_90_table:00000000 sin0_90_table
C:\usertemp\cc148IyM.s:152    .text.lv_bezier3:00000000 $t
C:\usertemp\cc148IyM.s:158    .text.lv_bezier3:00000000 lv_bezier3
C:\usertemp\cc148IyM.s:248    .text.lv_sqrt:00000000 $t
C:\usertemp\cc148IyM.s:254    .text.lv_sqrt:00000000 lv_sqrt
C:\usertemp\cc148IyM.s:323    .text.lv_atan2:00000000 $t
C:\usertemp\cc148IyM.s:329    .text.lv_atan2:00000000 lv_atan2
C:\usertemp\cc148IyM.s:579    .text.lv_pow:00000000 $t
C:\usertemp\cc148IyM.s:585    .text.lv_pow:00000000 lv_pow
C:\usertemp\cc148IyM.s:656    .text.lv_map:00000000 $t
C:\usertemp\cc148IyM.s:662    .text.lv_map:00000000 lv_map
C:\usertemp\cc148IyM.s:734    .text.lv_rand:00000000 $t
C:\usertemp\cc148IyM.s:740    .text.lv_rand:00000000 lv_rand
C:\usertemp\cc148IyM.s:787    .text.lv_rand:00000024 $d
C:\usertemp\cc148IyM.s:795    .data.a.0:00000000 a.0
C:\usertemp\cc148IyM.s:792    .data.a.0:00000000 $d
C:\usertemp\cc148IyM.s:798    .rodata.sin0_90_table:00000000 $d

NO UNDEFINED SYMBOLS
