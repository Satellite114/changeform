ARM GAS  C:\usertemp\ccV4o48j.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_style.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "lvgl/src/misc/lv_style.c"
  19              		.section	.text.lv_style_get_prop_inlined,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	lv_style_get_prop_inlined:
  26              	.LVL0:
  27              	.LFB49:
  28              		.file 2 "lvgl/src/misc/lv_style.h"
   1:lvgl/src/misc/lv_style.h **** /**
   2:lvgl/src/misc/lv_style.h ****  * @file lv_style.h
   3:lvgl/src/misc/lv_style.h ****  *
   4:lvgl/src/misc/lv_style.h ****  */
   5:lvgl/src/misc/lv_style.h **** 
   6:lvgl/src/misc/lv_style.h **** #ifndef LV_STYLE_H
   7:lvgl/src/misc/lv_style.h **** #define LV_STYLE_H
   8:lvgl/src/misc/lv_style.h **** 
   9:lvgl/src/misc/lv_style.h **** #ifdef __cplusplus
  10:lvgl/src/misc/lv_style.h **** extern "C" {
  11:lvgl/src/misc/lv_style.h **** #endif
  12:lvgl/src/misc/lv_style.h **** 
  13:lvgl/src/misc/lv_style.h **** /*********************
  14:lvgl/src/misc/lv_style.h ****  *      INCLUDES
  15:lvgl/src/misc/lv_style.h ****  *********************/
  16:lvgl/src/misc/lv_style.h **** #include <stdbool.h>
  17:lvgl/src/misc/lv_style.h **** #include <stdint.h>
  18:lvgl/src/misc/lv_style.h **** #include "../font/lv_font.h"
  19:lvgl/src/misc/lv_style.h **** #include "lv_color.h"
  20:lvgl/src/misc/lv_style.h **** #include "lv_area.h"
  21:lvgl/src/misc/lv_style.h **** #include "lv_anim.h"
  22:lvgl/src/misc/lv_style.h **** #include "lv_txt.h"
  23:lvgl/src/misc/lv_style.h **** #include "lv_types.h"
  24:lvgl/src/misc/lv_style.h **** #include "lv_assert.h"
  25:lvgl/src/misc/lv_style.h **** #include "lv_bidi.h"
  26:lvgl/src/misc/lv_style.h **** 
  27:lvgl/src/misc/lv_style.h **** /*********************
  28:lvgl/src/misc/lv_style.h ****  *      DEFINES
  29:lvgl/src/misc/lv_style.h ****  *********************/
  30:lvgl/src/misc/lv_style.h **** 
ARM GAS  C:\usertemp\ccV4o48j.s 			page 2


  31:lvgl/src/misc/lv_style.h **** #define LV_STYLE_SENTINEL_VALUE     0xAABBCCDD
  32:lvgl/src/misc/lv_style.h **** 
  33:lvgl/src/misc/lv_style.h **** /**
  34:lvgl/src/misc/lv_style.h ****  * Flags for style properties
  35:lvgl/src/misc/lv_style.h ****  */
  36:lvgl/src/misc/lv_style.h **** #define LV_STYLE_PROP_INHERIT               (1 << 10)  /*Inherited*/
  37:lvgl/src/misc/lv_style.h **** #define LV_STYLE_PROP_EXT_DRAW              (1 << 11)  /*Requires ext. draw size update when change
  38:lvgl/src/misc/lv_style.h **** #define LV_STYLE_PROP_LAYOUT_REFR           (1 << 12)  /*Requires layout update when changed*/
  39:lvgl/src/misc/lv_style.h **** #define LV_STYLE_PROP_PARENT_LAYOUT_REFR    (1 << 13)  /*Requires layout update on parent when chan
  40:lvgl/src/misc/lv_style.h **** #define LV_STYLE_PROP_FILTER                (1 << 14)  /*Apply color filter*/
  41:lvgl/src/misc/lv_style.h **** 
  42:lvgl/src/misc/lv_style.h **** /**
  43:lvgl/src/misc/lv_style.h ****  * Other constants
  44:lvgl/src/misc/lv_style.h ****  */
  45:lvgl/src/misc/lv_style.h **** #define LV_IMG_ZOOM_NONE            256        /*Value for not zooming the image*/
  46:lvgl/src/misc/lv_style.h **** LV_EXPORT_CONST_INT(LV_IMG_ZOOM_NONE);
  47:lvgl/src/misc/lv_style.h **** 
  48:lvgl/src/misc/lv_style.h **** #if LV_USE_ASSERT_STYLE
  49:lvgl/src/misc/lv_style.h **** #define LV_STYLE_CONST_INIT(var_name, prop_array) const lv_style_t var_name = { .sentinel = LV_STYL
  50:lvgl/src/misc/lv_style.h **** #else
  51:lvgl/src/misc/lv_style.h **** #define LV_STYLE_CONST_INIT(var_name, prop_array) const lv_style_t var_name = { .v_p = { .const_pro
  52:lvgl/src/misc/lv_style.h **** #endif
  53:lvgl/src/misc/lv_style.h **** 
  54:lvgl/src/misc/lv_style.h **** /** On simple system, don't waste resources on gradients */
  55:lvgl/src/misc/lv_style.h **** #if !defined(LV_DRAW_COMPLEX) || !defined(LV_GRADIENT_MAX_STOPS)
  56:lvgl/src/misc/lv_style.h **** #define LV_GRADIENT_MAX_STOPS 2
  57:lvgl/src/misc/lv_style.h **** #endif
  58:lvgl/src/misc/lv_style.h **** 
  59:lvgl/src/misc/lv_style.h **** 
  60:lvgl/src/misc/lv_style.h **** /**********************
  61:lvgl/src/misc/lv_style.h ****  *      TYPEDEFS
  62:lvgl/src/misc/lv_style.h ****  **********************/
  63:lvgl/src/misc/lv_style.h **** 
  64:lvgl/src/misc/lv_style.h **** /**
  65:lvgl/src/misc/lv_style.h ****  * Possible options how to blend opaque drawings
  66:lvgl/src/misc/lv_style.h ****  */
  67:lvgl/src/misc/lv_style.h **** enum {
  68:lvgl/src/misc/lv_style.h ****     LV_BLEND_MODE_NORMAL,     /**< Simply mix according to the opacity value*/
  69:lvgl/src/misc/lv_style.h ****     LV_BLEND_MODE_ADDITIVE,   /**< Add the respective color channels*/
  70:lvgl/src/misc/lv_style.h ****     LV_BLEND_MODE_SUBTRACTIVE,/**< Subtract the foreground from the background*/
  71:lvgl/src/misc/lv_style.h ****     LV_BLEND_MODE_MULTIPLY,   /**< Multiply the foreground and background*/
  72:lvgl/src/misc/lv_style.h ****     LV_BLEND_MODE_REPLACE,    /**< Replace background with foreground in the area*/
  73:lvgl/src/misc/lv_style.h **** };
  74:lvgl/src/misc/lv_style.h **** 
  75:lvgl/src/misc/lv_style.h **** typedef uint8_t lv_blend_mode_t;
  76:lvgl/src/misc/lv_style.h **** 
  77:lvgl/src/misc/lv_style.h **** /**
  78:lvgl/src/misc/lv_style.h ****  * Some options to apply decorations on texts.
  79:lvgl/src/misc/lv_style.h ****  * 'OR'ed values can be used.
  80:lvgl/src/misc/lv_style.h ****  */
  81:lvgl/src/misc/lv_style.h **** enum {
  82:lvgl/src/misc/lv_style.h ****     LV_TEXT_DECOR_NONE          = 0x00,
  83:lvgl/src/misc/lv_style.h ****     LV_TEXT_DECOR_UNDERLINE     = 0x01,
  84:lvgl/src/misc/lv_style.h ****     LV_TEXT_DECOR_STRIKETHROUGH = 0x02,
  85:lvgl/src/misc/lv_style.h **** };
  86:lvgl/src/misc/lv_style.h **** 
  87:lvgl/src/misc/lv_style.h **** typedef uint8_t lv_text_decor_t;
ARM GAS  C:\usertemp\ccV4o48j.s 			page 3


  88:lvgl/src/misc/lv_style.h **** 
  89:lvgl/src/misc/lv_style.h **** /**
  90:lvgl/src/misc/lv_style.h ****  * Selects on which sides border should be drawn
  91:lvgl/src/misc/lv_style.h ****  * 'OR'ed values can be used.
  92:lvgl/src/misc/lv_style.h ****  */
  93:lvgl/src/misc/lv_style.h **** enum {
  94:lvgl/src/misc/lv_style.h ****     LV_BORDER_SIDE_NONE     = 0x00,
  95:lvgl/src/misc/lv_style.h ****     LV_BORDER_SIDE_BOTTOM   = 0x01,
  96:lvgl/src/misc/lv_style.h ****     LV_BORDER_SIDE_TOP      = 0x02,
  97:lvgl/src/misc/lv_style.h ****     LV_BORDER_SIDE_LEFT     = 0x04,
  98:lvgl/src/misc/lv_style.h ****     LV_BORDER_SIDE_RIGHT    = 0x08,
  99:lvgl/src/misc/lv_style.h ****     LV_BORDER_SIDE_FULL     = 0x0F,
 100:lvgl/src/misc/lv_style.h ****     LV_BORDER_SIDE_INTERNAL = 0x10, /**< FOR matrix-like objects (e.g. Button matrix)*/
 101:lvgl/src/misc/lv_style.h **** };
 102:lvgl/src/misc/lv_style.h **** typedef uint8_t lv_border_side_t;
 103:lvgl/src/misc/lv_style.h **** 
 104:lvgl/src/misc/lv_style.h **** /**
 105:lvgl/src/misc/lv_style.h ****  * The direction of the gradient.
 106:lvgl/src/misc/lv_style.h ****  */
 107:lvgl/src/misc/lv_style.h **** enum {
 108:lvgl/src/misc/lv_style.h ****     LV_GRAD_DIR_NONE, /**< No gradient (the `grad_color` property is ignored)*/
 109:lvgl/src/misc/lv_style.h ****     LV_GRAD_DIR_VER,  /**< Vertical (top to bottom) gradient*/
 110:lvgl/src/misc/lv_style.h ****     LV_GRAD_DIR_HOR,  /**< Horizontal (left to right) gradient*/
 111:lvgl/src/misc/lv_style.h **** };
 112:lvgl/src/misc/lv_style.h **** 
 113:lvgl/src/misc/lv_style.h **** typedef uint8_t lv_grad_dir_t;
 114:lvgl/src/misc/lv_style.h **** 
 115:lvgl/src/misc/lv_style.h **** /**
 116:lvgl/src/misc/lv_style.h ****  * The dithering algorithm for the gradient
 117:lvgl/src/misc/lv_style.h ****  * Depends on LV_DITHER_GRADIENT
 118:lvgl/src/misc/lv_style.h ****  */
 119:lvgl/src/misc/lv_style.h **** enum {
 120:lvgl/src/misc/lv_style.h ****     LV_DITHER_NONE,     /**< No dithering, colors are just quantized to the output resolution*/
 121:lvgl/src/misc/lv_style.h ****     LV_DITHER_ORDERED,  /**< Ordered dithering. Faster to compute and use less memory but lower qua
 122:lvgl/src/misc/lv_style.h ****     LV_DITHER_ERR_DIFF, /**< Error diffusion mode. Slower to compute and use more memory but give h
 123:lvgl/src/misc/lv_style.h **** };
 124:lvgl/src/misc/lv_style.h **** 
 125:lvgl/src/misc/lv_style.h **** typedef uint8_t lv_dither_mode_t;
 126:lvgl/src/misc/lv_style.h **** 
 127:lvgl/src/misc/lv_style.h **** /** A gradient stop definition.
 128:lvgl/src/misc/lv_style.h ****  *  This matches a color and a position in a virtual 0-255 scale.
 129:lvgl/src/misc/lv_style.h ****  */
 130:lvgl/src/misc/lv_style.h **** typedef struct {
 131:lvgl/src/misc/lv_style.h ****     lv_color_t color;   /**< The stop color */
 132:lvgl/src/misc/lv_style.h ****     uint8_t    frac;    /**< The stop position in 1/255 unit */
 133:lvgl/src/misc/lv_style.h **** } lv_gradient_stop_t;
 134:lvgl/src/misc/lv_style.h **** 
 135:lvgl/src/misc/lv_style.h **** /** A descriptor of a gradient. */
 136:lvgl/src/misc/lv_style.h **** typedef struct {
 137:lvgl/src/misc/lv_style.h ****     lv_gradient_stop_t   stops[LV_GRADIENT_MAX_STOPS]; /**< A gradient stop array */
 138:lvgl/src/misc/lv_style.h ****     uint8_t              stops_count;                  /**< The number of used stops in the array *
 139:lvgl/src/misc/lv_style.h ****     lv_grad_dir_t        dir : 3;                      /**< The gradient direction.
 140:lvgl/src/misc/lv_style.h ****                                                         * Any of LV_GRAD_DIR_HOR, LV_GRAD_DIR_VER, 
 141:lvgl/src/misc/lv_style.h ****     lv_dither_mode_t     dither : 3;                   /**< Whether to dither the gradient or not.
 142:lvgl/src/misc/lv_style.h ****                                                         * Any of LV_DITHER_NONE, LV_DITHER_ORDERED,
 143:lvgl/src/misc/lv_style.h **** } lv_grad_dsc_t;
 144:lvgl/src/misc/lv_style.h **** 
ARM GAS  C:\usertemp\ccV4o48j.s 			page 4


 145:lvgl/src/misc/lv_style.h **** /**
 146:lvgl/src/misc/lv_style.h ****  * A common type to handle all the property types in the same way.
 147:lvgl/src/misc/lv_style.h ****  */
 148:lvgl/src/misc/lv_style.h **** typedef union {
 149:lvgl/src/misc/lv_style.h ****     int32_t num;         /**< Number integer number (opacity, enums, booleans or "normal" numbers)*
 150:lvgl/src/misc/lv_style.h ****     const void * ptr;    /**< Constant pointers  (font, cone text, etc)*/
 151:lvgl/src/misc/lv_style.h ****     lv_color_t color;    /**< Colors*/
 152:lvgl/src/misc/lv_style.h **** } lv_style_value_t;
 153:lvgl/src/misc/lv_style.h **** 
 154:lvgl/src/misc/lv_style.h **** /**
 155:lvgl/src/misc/lv_style.h ****  * Enumeration of all built in style properties
 156:lvgl/src/misc/lv_style.h ****  */
 157:lvgl/src/misc/lv_style.h **** typedef enum {
 158:lvgl/src/misc/lv_style.h ****     LV_STYLE_PROP_INV                = 0,
 159:lvgl/src/misc/lv_style.h **** 
 160:lvgl/src/misc/lv_style.h ****     /*Group 0*/
 161:lvgl/src/misc/lv_style.h ****     LV_STYLE_WIDTH                   = 1 | LV_STYLE_PROP_LAYOUT_REFR,
 162:lvgl/src/misc/lv_style.h ****     LV_STYLE_MIN_WIDTH               = 2 | LV_STYLE_PROP_LAYOUT_REFR,
 163:lvgl/src/misc/lv_style.h ****     LV_STYLE_MAX_WIDTH               = 3 | LV_STYLE_PROP_LAYOUT_REFR,
 164:lvgl/src/misc/lv_style.h ****     LV_STYLE_HEIGHT                  = 4 | LV_STYLE_PROP_LAYOUT_REFR,
 165:lvgl/src/misc/lv_style.h ****     LV_STYLE_MIN_HEIGHT              = 5 | LV_STYLE_PROP_LAYOUT_REFR,
 166:lvgl/src/misc/lv_style.h ****     LV_STYLE_MAX_HEIGHT              = 6 | LV_STYLE_PROP_LAYOUT_REFR,
 167:lvgl/src/misc/lv_style.h ****     LV_STYLE_X                       = 7 | LV_STYLE_PROP_LAYOUT_REFR,
 168:lvgl/src/misc/lv_style.h ****     LV_STYLE_Y                       = 8 | LV_STYLE_PROP_LAYOUT_REFR,
 169:lvgl/src/misc/lv_style.h ****     LV_STYLE_ALIGN                   = 9 | LV_STYLE_PROP_LAYOUT_REFR,
 170:lvgl/src/misc/lv_style.h ****     LV_STYLE_TRANSFORM_WIDTH         = 10 | LV_STYLE_PROP_EXT_DRAW,
 171:lvgl/src/misc/lv_style.h ****     LV_STYLE_TRANSFORM_HEIGHT        = 11 | LV_STYLE_PROP_EXT_DRAW,
 172:lvgl/src/misc/lv_style.h ****     LV_STYLE_TRANSLATE_X             = 12 | LV_STYLE_PROP_LAYOUT_REFR | LV_STYLE_PROP_PARENT_LAYOUT
 173:lvgl/src/misc/lv_style.h ****     LV_STYLE_TRANSLATE_Y             = 13 | LV_STYLE_PROP_LAYOUT_REFR | LV_STYLE_PROP_PARENT_LAYOUT
 174:lvgl/src/misc/lv_style.h ****     LV_STYLE_TRANSFORM_ZOOM          = 14 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR | LV
 175:lvgl/src/misc/lv_style.h ****     LV_STYLE_TRANSFORM_ANGLE         = 15 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR | LV
 176:lvgl/src/misc/lv_style.h **** 
 177:lvgl/src/misc/lv_style.h ****     /*Group 1*/
 178:lvgl/src/misc/lv_style.h ****     LV_STYLE_PAD_TOP                 = 16 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR,
 179:lvgl/src/misc/lv_style.h ****     LV_STYLE_PAD_BOTTOM              = 17 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR,
 180:lvgl/src/misc/lv_style.h ****     LV_STYLE_PAD_LEFT                = 18 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR,
 181:lvgl/src/misc/lv_style.h ****     LV_STYLE_PAD_RIGHT               = 19 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR,
 182:lvgl/src/misc/lv_style.h ****     LV_STYLE_PAD_ROW                 = 20 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR,
 183:lvgl/src/misc/lv_style.h ****     LV_STYLE_PAD_COLUMN              = 21 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR,
 184:lvgl/src/misc/lv_style.h **** 
 185:lvgl/src/misc/lv_style.h ****     /*Group 2*/
 186:lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_COLOR                = 32,
 187:lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_COLOR_FILTERED       = 32 | LV_STYLE_PROP_FILTER,
 188:lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_OPA                  = 33,
 189:lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_GRAD_COLOR           = 34,
 190:lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_GRAD_COLOR_FILTERED  = 34 | LV_STYLE_PROP_FILTER,
 191:lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_GRAD_DIR             = 35,
 192:lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_MAIN_STOP            = 36,
 193:lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_GRAD_STOP            = 37,
 194:lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_GRAD                 = 38,
 195:lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_DITHER_MODE          = 39,
 196:lvgl/src/misc/lv_style.h **** 
 197:lvgl/src/misc/lv_style.h **** 
 198:lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_IMG_SRC              = 40 | LV_STYLE_PROP_EXT_DRAW,
 199:lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_IMG_OPA              = 41,
 200:lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_IMG_RECOLOR          = 42,
 201:lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_IMG_RECOLOR_FILTERED = 42 | LV_STYLE_PROP_FILTER,
ARM GAS  C:\usertemp\ccV4o48j.s 			page 5


 202:lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_IMG_RECOLOR_OPA      = 43,
 203:lvgl/src/misc/lv_style.h ****     LV_STYLE_BG_IMG_TILED            = 44,
 204:lvgl/src/misc/lv_style.h **** 
 205:lvgl/src/misc/lv_style.h ****     /*Group 3*/
 206:lvgl/src/misc/lv_style.h ****     LV_STYLE_BORDER_COLOR            = 48,
 207:lvgl/src/misc/lv_style.h ****     LV_STYLE_BORDER_COLOR_FILTERED   = 48 | LV_STYLE_PROP_FILTER,
 208:lvgl/src/misc/lv_style.h ****     LV_STYLE_BORDER_OPA              = 49,
 209:lvgl/src/misc/lv_style.h ****     LV_STYLE_BORDER_WIDTH            = 50 | LV_STYLE_PROP_LAYOUT_REFR,
 210:lvgl/src/misc/lv_style.h ****     LV_STYLE_BORDER_SIDE             = 51,
 211:lvgl/src/misc/lv_style.h ****     LV_STYLE_BORDER_POST             = 52,
 212:lvgl/src/misc/lv_style.h **** 
 213:lvgl/src/misc/lv_style.h ****     LV_STYLE_OUTLINE_WIDTH           = 58 | LV_STYLE_PROP_EXT_DRAW,
 214:lvgl/src/misc/lv_style.h ****     LV_STYLE_OUTLINE_COLOR           = 59,
 215:lvgl/src/misc/lv_style.h ****     LV_STYLE_OUTLINE_COLOR_FILTERED  = 59 | LV_STYLE_PROP_FILTER,
 216:lvgl/src/misc/lv_style.h ****     LV_STYLE_OUTLINE_OPA             = 60 | LV_STYLE_PROP_EXT_DRAW,
 217:lvgl/src/misc/lv_style.h ****     LV_STYLE_OUTLINE_PAD             = 61 | LV_STYLE_PROP_EXT_DRAW,
 218:lvgl/src/misc/lv_style.h **** 
 219:lvgl/src/misc/lv_style.h ****     /*Group 4*/
 220:lvgl/src/misc/lv_style.h ****     LV_STYLE_SHADOW_WIDTH            = 64 | LV_STYLE_PROP_EXT_DRAW,
 221:lvgl/src/misc/lv_style.h ****     LV_STYLE_SHADOW_OFS_X            = 65 | LV_STYLE_PROP_EXT_DRAW,
 222:lvgl/src/misc/lv_style.h ****     LV_STYLE_SHADOW_OFS_Y            = 66 | LV_STYLE_PROP_EXT_DRAW,
 223:lvgl/src/misc/lv_style.h ****     LV_STYLE_SHADOW_SPREAD           = 67 | LV_STYLE_PROP_EXT_DRAW,
 224:lvgl/src/misc/lv_style.h ****     LV_STYLE_SHADOW_COLOR            = 68,
 225:lvgl/src/misc/lv_style.h ****     LV_STYLE_SHADOW_COLOR_FILTERED   = 68 | LV_STYLE_PROP_FILTER,
 226:lvgl/src/misc/lv_style.h ****     LV_STYLE_SHADOW_OPA              = 69 | LV_STYLE_PROP_EXT_DRAW,
 227:lvgl/src/misc/lv_style.h **** 
 228:lvgl/src/misc/lv_style.h ****     LV_STYLE_IMG_OPA                 = 70,
 229:lvgl/src/misc/lv_style.h ****     LV_STYLE_IMG_RECOLOR             = 71,
 230:lvgl/src/misc/lv_style.h ****     LV_STYLE_IMG_RECOLOR_FILTERED    = 71 | LV_STYLE_PROP_FILTER,
 231:lvgl/src/misc/lv_style.h ****     LV_STYLE_IMG_RECOLOR_OPA         = 72,
 232:lvgl/src/misc/lv_style.h **** 
 233:lvgl/src/misc/lv_style.h ****     LV_STYLE_LINE_WIDTH              = 73 | LV_STYLE_PROP_EXT_DRAW,
 234:lvgl/src/misc/lv_style.h ****     LV_STYLE_LINE_DASH_WIDTH         = 74,
 235:lvgl/src/misc/lv_style.h ****     LV_STYLE_LINE_DASH_GAP           = 75,
 236:lvgl/src/misc/lv_style.h ****     LV_STYLE_LINE_ROUNDED            = 76,
 237:lvgl/src/misc/lv_style.h ****     LV_STYLE_LINE_COLOR              = 77,
 238:lvgl/src/misc/lv_style.h ****     LV_STYLE_LINE_COLOR_FILTERED     = 77 | LV_STYLE_PROP_FILTER,
 239:lvgl/src/misc/lv_style.h ****     LV_STYLE_LINE_OPA                = 78,
 240:lvgl/src/misc/lv_style.h **** 
 241:lvgl/src/misc/lv_style.h ****     /*Group 5*/
 242:lvgl/src/misc/lv_style.h ****     LV_STYLE_ARC_WIDTH               = 80 | LV_STYLE_PROP_EXT_DRAW,
 243:lvgl/src/misc/lv_style.h ****     LV_STYLE_ARC_ROUNDED             = 81,
 244:lvgl/src/misc/lv_style.h ****     LV_STYLE_ARC_COLOR               = 82,
 245:lvgl/src/misc/lv_style.h ****     LV_STYLE_ARC_COLOR_FILTERED      = 82 | LV_STYLE_PROP_FILTER,
 246:lvgl/src/misc/lv_style.h ****     LV_STYLE_ARC_OPA                 = 83,
 247:lvgl/src/misc/lv_style.h ****     LV_STYLE_ARC_IMG_SRC             = 84,
 248:lvgl/src/misc/lv_style.h **** 
 249:lvgl/src/misc/lv_style.h ****     LV_STYLE_TEXT_COLOR              = 87 | LV_STYLE_PROP_INHERIT,
 250:lvgl/src/misc/lv_style.h ****     LV_STYLE_TEXT_COLOR_FILTERED     = 87 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_FILTER,
 251:lvgl/src/misc/lv_style.h ****     LV_STYLE_TEXT_OPA                = 88 | LV_STYLE_PROP_INHERIT,
 252:lvgl/src/misc/lv_style.h ****     LV_STYLE_TEXT_FONT               = 89 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 253:lvgl/src/misc/lv_style.h ****     LV_STYLE_TEXT_LETTER_SPACE       = 90 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 254:lvgl/src/misc/lv_style.h ****     LV_STYLE_TEXT_LINE_SPACE         = 91 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 255:lvgl/src/misc/lv_style.h ****     LV_STYLE_TEXT_DECOR              = 92 | LV_STYLE_PROP_INHERIT,
 256:lvgl/src/misc/lv_style.h ****     LV_STYLE_TEXT_ALIGN              = 93 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 257:lvgl/src/misc/lv_style.h **** 
 258:lvgl/src/misc/lv_style.h ****     /*Group 6*/
ARM GAS  C:\usertemp\ccV4o48j.s 			page 6


 259:lvgl/src/misc/lv_style.h ****     LV_STYLE_RADIUS                  = 96,
 260:lvgl/src/misc/lv_style.h ****     LV_STYLE_CLIP_CORNER             = 97,
 261:lvgl/src/misc/lv_style.h ****     LV_STYLE_OPA                     = 98 | LV_STYLE_PROP_INHERIT,
 262:lvgl/src/misc/lv_style.h ****     LV_STYLE_COLOR_FILTER_DSC        = 99,
 263:lvgl/src/misc/lv_style.h ****     LV_STYLE_COLOR_FILTER_OPA        = 100,
 264:lvgl/src/misc/lv_style.h ****     LV_STYLE_ANIM_TIME               = 101,
 265:lvgl/src/misc/lv_style.h ****     LV_STYLE_ANIM_SPEED              = 102,
 266:lvgl/src/misc/lv_style.h ****     LV_STYLE_TRANSITION              = 103,
 267:lvgl/src/misc/lv_style.h ****     LV_STYLE_BLEND_MODE              = 104,
 268:lvgl/src/misc/lv_style.h ****     LV_STYLE_LAYOUT                  = 105 | LV_STYLE_PROP_LAYOUT_REFR,
 269:lvgl/src/misc/lv_style.h ****     LV_STYLE_BASE_DIR                = 106 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 270:lvgl/src/misc/lv_style.h **** 
 271:lvgl/src/misc/lv_style.h ****     _LV_STYLE_LAST_BUILT_IN_PROP     = 111,
 272:lvgl/src/misc/lv_style.h **** 
 273:lvgl/src/misc/lv_style.h ****     LV_STYLE_PROP_ANY                = 0xFFFF
 274:lvgl/src/misc/lv_style.h **** } lv_style_prop_t;
 275:lvgl/src/misc/lv_style.h **** 
 276:lvgl/src/misc/lv_style.h **** /**
 277:lvgl/src/misc/lv_style.h ****  * Descriptor for style transitions
 278:lvgl/src/misc/lv_style.h ****  */
 279:lvgl/src/misc/lv_style.h **** typedef struct {
 280:lvgl/src/misc/lv_style.h ****     const lv_style_prop_t * props; /**< An array with the properties to animate.*/
 281:lvgl/src/misc/lv_style.h **** #if LV_USE_USER_DATA
 282:lvgl/src/misc/lv_style.h ****     void * user_data;              /**< A custom user data that will be passed to the animation's u
 283:lvgl/src/misc/lv_style.h **** #endif
 284:lvgl/src/misc/lv_style.h ****     lv_anim_path_cb_t path_xcb;     /**< A path for the animation.*/
 285:lvgl/src/misc/lv_style.h ****     uint32_t time;                 /**< Duration of the transition in [ms]*/
 286:lvgl/src/misc/lv_style.h ****     uint32_t delay;                /**< Delay before the transition in [ms]*/
 287:lvgl/src/misc/lv_style.h **** } lv_style_transition_dsc_t;
 288:lvgl/src/misc/lv_style.h **** 
 289:lvgl/src/misc/lv_style.h **** /**
 290:lvgl/src/misc/lv_style.h ****  * Descriptor of a constant style property.
 291:lvgl/src/misc/lv_style.h ****  */
 292:lvgl/src/misc/lv_style.h **** typedef struct {
 293:lvgl/src/misc/lv_style.h ****     lv_style_prop_t prop;
 294:lvgl/src/misc/lv_style.h ****     lv_style_value_t value;
 295:lvgl/src/misc/lv_style.h **** } lv_style_const_prop_t;
 296:lvgl/src/misc/lv_style.h **** 
 297:lvgl/src/misc/lv_style.h **** /**
 298:lvgl/src/misc/lv_style.h ****  * Descriptor of a style (a collection of properties and values).
 299:lvgl/src/misc/lv_style.h ****  */
 300:lvgl/src/misc/lv_style.h **** typedef struct {
 301:lvgl/src/misc/lv_style.h **** 
 302:lvgl/src/misc/lv_style.h **** #if LV_USE_ASSERT_STYLE
 303:lvgl/src/misc/lv_style.h ****     uint32_t sentinel;
 304:lvgl/src/misc/lv_style.h **** #endif
 305:lvgl/src/misc/lv_style.h **** 
 306:lvgl/src/misc/lv_style.h ****     /*If there is only one property store it directly.
 307:lvgl/src/misc/lv_style.h ****      *For more properties allocate an array*/
 308:lvgl/src/misc/lv_style.h ****     union {
 309:lvgl/src/misc/lv_style.h ****         lv_style_value_t value1;
 310:lvgl/src/misc/lv_style.h ****         uint8_t * values_and_props;
 311:lvgl/src/misc/lv_style.h ****         const lv_style_const_prop_t * const_props;
 312:lvgl/src/misc/lv_style.h ****     } v_p;
 313:lvgl/src/misc/lv_style.h **** 
 314:lvgl/src/misc/lv_style.h ****     uint16_t prop1 : 15;
 315:lvgl/src/misc/lv_style.h ****     uint16_t is_const : 1;
ARM GAS  C:\usertemp\ccV4o48j.s 			page 7


 316:lvgl/src/misc/lv_style.h ****     uint8_t has_group;
 317:lvgl/src/misc/lv_style.h ****     uint8_t prop_cnt;
 318:lvgl/src/misc/lv_style.h **** } lv_style_t;
 319:lvgl/src/misc/lv_style.h **** 
 320:lvgl/src/misc/lv_style.h **** /**********************
 321:lvgl/src/misc/lv_style.h ****  * GLOBAL PROTOTYPES
 322:lvgl/src/misc/lv_style.h ****  **********************/
 323:lvgl/src/misc/lv_style.h **** 
 324:lvgl/src/misc/lv_style.h **** 
 325:lvgl/src/misc/lv_style.h **** /**
 326:lvgl/src/misc/lv_style.h ****  * Initialize a style
 327:lvgl/src/misc/lv_style.h ****  * @param style pointer to a style to initialize
 328:lvgl/src/misc/lv_style.h ****  * @note Do not call `lv_style_init` on styles that already have some properties
 329:lvgl/src/misc/lv_style.h ****  *       because this function won't free the used memory, just sets a default state for the style.
 330:lvgl/src/misc/lv_style.h ****  *       In other words be sure to initialize styles only once!
 331:lvgl/src/misc/lv_style.h ****  */
 332:lvgl/src/misc/lv_style.h **** void lv_style_init(lv_style_t * style);
 333:lvgl/src/misc/lv_style.h **** 
 334:lvgl/src/misc/lv_style.h **** /**
 335:lvgl/src/misc/lv_style.h ****  * Clear all properties from a style and free all allocated memories.
 336:lvgl/src/misc/lv_style.h ****  * @param style pointer to a style
 337:lvgl/src/misc/lv_style.h ****  */
 338:lvgl/src/misc/lv_style.h **** void lv_style_reset(lv_style_t * style);
 339:lvgl/src/misc/lv_style.h **** 
 340:lvgl/src/misc/lv_style.h **** /**
 341:lvgl/src/misc/lv_style.h ****  * Register a new style property for custom usage
 342:lvgl/src/misc/lv_style.h ****  * @return a new property ID.
 343:lvgl/src/misc/lv_style.h ****  * @example
 344:lvgl/src/misc/lv_style.h ****  * lv_style_prop_t MY_PROP;
 345:lvgl/src/misc/lv_style.h ****  * static inline void lv_style_set_my_prop(lv_style_t * style, lv_color_t value) {
 346:lvgl/src/misc/lv_style.h ****  * lv_style_value_t v = {.color = value}; lv_style_set_prop(style, MY_PROP, v); }
 347:lvgl/src/misc/lv_style.h ****  *
 348:lvgl/src/misc/lv_style.h ****  * ...
 349:lvgl/src/misc/lv_style.h ****  * MY_PROP = lv_style_register_prop();
 350:lvgl/src/misc/lv_style.h ****  * ...
 351:lvgl/src/misc/lv_style.h ****  * lv_style_set_my_prop(&style1, lv_palette_main(LV_PALETTE_RED));
 352:lvgl/src/misc/lv_style.h ****  */
 353:lvgl/src/misc/lv_style.h **** lv_style_prop_t lv_style_register_prop(void);
 354:lvgl/src/misc/lv_style.h **** 
 355:lvgl/src/misc/lv_style.h **** /**
 356:lvgl/src/misc/lv_style.h ****  * Remove a property from a style
 357:lvgl/src/misc/lv_style.h ****  * @param style pointer to a style
 358:lvgl/src/misc/lv_style.h ****  * @param prop  a style property ORed with a state.
 359:lvgl/src/misc/lv_style.h ****  * @return true: the property was found and removed; false: the property wasn't found
 360:lvgl/src/misc/lv_style.h ****  */
 361:lvgl/src/misc/lv_style.h **** bool lv_style_remove_prop(lv_style_t * style, lv_style_prop_t prop);
 362:lvgl/src/misc/lv_style.h **** 
 363:lvgl/src/misc/lv_style.h **** /**
 364:lvgl/src/misc/lv_style.h ****  * Set the value of property in a style.
 365:lvgl/src/misc/lv_style.h ****  * This function shouldn't be used directly by the user.
 366:lvgl/src/misc/lv_style.h ****  * Instead use `lv_style_set_<prop_name>()`. E.g. `lv_style_set_bg_color()`
 367:lvgl/src/misc/lv_style.h ****  * @param style pointer to style
 368:lvgl/src/misc/lv_style.h ****  * @param prop the ID of a property (e.g. `LV_STYLE_BG_COLOR`)
 369:lvgl/src/misc/lv_style.h ****  * @param value `lv_style_value_t` variable in which a field is set according to the type of `prop`
 370:lvgl/src/misc/lv_style.h ****  */
 371:lvgl/src/misc/lv_style.h **** void lv_style_set_prop(lv_style_t * style, lv_style_prop_t prop, lv_style_value_t value);
 372:lvgl/src/misc/lv_style.h **** 
ARM GAS  C:\usertemp\ccV4o48j.s 			page 8


 373:lvgl/src/misc/lv_style.h **** /**
 374:lvgl/src/misc/lv_style.h ****  * Get the value of a property
 375:lvgl/src/misc/lv_style.h ****  * @param style pointer to a style
 376:lvgl/src/misc/lv_style.h ****  * @param prop  the ID of a property
 377:lvgl/src/misc/lv_style.h ****  * @param value pointer to a `lv_style_value_t` variable to store the value
 378:lvgl/src/misc/lv_style.h ****  * @return LV_RES_INV: the property wasn't found in the style (`value` is unchanged)
 379:lvgl/src/misc/lv_style.h ****  *         LV_RES_OK: the property was fond, and `value` is set accordingly
 380:lvgl/src/misc/lv_style.h ****  * @note For performance reasons there are no sanity check on `style`
 381:lvgl/src/misc/lv_style.h ****  */
 382:lvgl/src/misc/lv_style.h **** lv_res_t lv_style_get_prop(const lv_style_t * style, lv_style_prop_t prop, lv_style_value_t * value
 383:lvgl/src/misc/lv_style.h **** 
 384:lvgl/src/misc/lv_style.h **** 
 385:lvgl/src/misc/lv_style.h **** /**
 386:lvgl/src/misc/lv_style.h ****  * Get the value of a property
 387:lvgl/src/misc/lv_style.h ****  * @param style pointer to a style
 388:lvgl/src/misc/lv_style.h ****  * @param prop  the ID of a property
 389:lvgl/src/misc/lv_style.h ****  * @param value pointer to a `lv_style_value_t` variable to store the value
 390:lvgl/src/misc/lv_style.h ****  * @return LV_RES_INV: the property wasn't found in the style (`value` is unchanged)
 391:lvgl/src/misc/lv_style.h ****  *         LV_RES_OK: the property was fond, and `value` is set accordingly
 392:lvgl/src/misc/lv_style.h ****  * @note For performance reasons there are no sanity check on `style`
 393:lvgl/src/misc/lv_style.h ****  * @note This function is the same as ::lv_style_get_prop but inlined. Use it only on performance c
 394:lvgl/src/misc/lv_style.h ****  */
 395:lvgl/src/misc/lv_style.h **** static inline lv_res_t lv_style_get_prop_inlined(const lv_style_t * style, lv_style_prop_t prop,
 396:lvgl/src/misc/lv_style.h ****                                                  lv_style_value_t * value)
 397:lvgl/src/misc/lv_style.h **** {
  29              		.loc 2 397 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 2 397 1 is_stmt 0 view .LVU1
  34 0000 0346     		mov	r3, r0
 398:lvgl/src/misc/lv_style.h ****     if(style->is_const) {
  35              		.loc 2 398 5 is_stmt 1 view .LVU2
  36              		.loc 2 398 7 is_stmt 0 view .LVU3
  37 0002 90F90500 		ldrsb	r0, [r0, #5]
  38              	.LVL1:
  39              		.loc 2 398 7 view .LVU4
  40 0006 0028     		cmp	r0, #0
  41 0008 12DB     		blt	.L16
 399:lvgl/src/misc/lv_style.h ****         const lv_style_const_prop_t * const_prop;
 400:lvgl/src/misc/lv_style.h ****         for(const_prop = style->v_p.const_props; const_prop->prop != LV_STYLE_PROP_INV; const_prop+
 401:lvgl/src/misc/lv_style.h ****             if(const_prop->prop == prop) {
 402:lvgl/src/misc/lv_style.h ****                 *value = const_prop->value;
 403:lvgl/src/misc/lv_style.h ****                 return LV_RES_OK;
 404:lvgl/src/misc/lv_style.h ****             }
 405:lvgl/src/misc/lv_style.h ****         }
 406:lvgl/src/misc/lv_style.h ****         return LV_RES_INV;
 407:lvgl/src/misc/lv_style.h ****     }
 408:lvgl/src/misc/lv_style.h **** 
 409:lvgl/src/misc/lv_style.h ****     if(style->prop_cnt == 0) return LV_RES_INV;
  42              		.loc 2 409 5 is_stmt 1 view .LVU5
  43              		.loc 2 409 13 is_stmt 0 view .LVU6
  44 000a D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
  45              		.loc 2 409 7 view .LVU7
  46 000c 70B3     		cbz	r0, .L13
 410:lvgl/src/misc/lv_style.h **** 
 411:lvgl/src/misc/lv_style.h ****     if(style->prop_cnt > 1) {
ARM GAS  C:\usertemp\ccV4o48j.s 			page 9


  47              		.loc 2 411 5 is_stmt 1 view .LVU8
  48              		.loc 2 411 7 is_stmt 0 view .LVU9
  49 000e 0128     		cmp	r0, #1
  50 0010 21D9     		bls	.L7
 397:lvgl/src/misc/lv_style.h ****     if(style->is_const) {
  51              		.loc 2 397 1 view .LVU10
  52 0012 10B5     		push	{r4, lr}
  53              	.LCFI0:
  54              		.cfi_def_cfa_offset 8
  55              		.cfi_offset 4, -8
  56              		.cfi_offset 14, -4
  57              	.LBB14:
 412:lvgl/src/misc/lv_style.h ****         uint8_t * tmp = style->v_p.values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
  58              		.loc 2 412 9 is_stmt 1 view .LVU11
  59              		.loc 2 412 35 is_stmt 0 view .LVU12
  60 0014 1C68     		ldr	r4, [r3]
  61              		.loc 2 412 60 view .LVU13
  62 0016 8646     		mov	lr, r0
  63              		.loc 2 412 71 view .LVU14
  64 0018 8000     		lsls	r0, r0, #2
  65              	.LVL2:
 413:lvgl/src/misc/lv_style.h ****         uint16_t * props = (uint16_t *)tmp;
  66              		.loc 2 413 9 is_stmt 1 view .LVU15
 414:lvgl/src/misc/lv_style.h ****         uint32_t i;
  67              		.loc 2 414 9 view .LVU16
 415:lvgl/src/misc/lv_style.h ****         for(i = 0; i < style->prop_cnt; i++) {
  68              		.loc 2 415 9 view .LVU17
  69              		.loc 2 415 15 is_stmt 0 view .LVU18
  70 001a 0023     		movs	r3, #0
  71              	.LVL3:
  72              	.L8:
  73              		.loc 2 415 22 is_stmt 1 discriminator 1 view .LVU19
  74 001c 9E45     		cmp	lr, r3
  75 001e 18D9     		bls	.L17
 416:lvgl/src/misc/lv_style.h ****             if(props[i] == prop) {
  76              		.loc 2 416 13 view .LVU20
  77              		.loc 2 416 21 is_stmt 0 view .LVU21
  78 0020 04EB000C 		add	ip, r4, r0
  79 0024 3CF813C0 		ldrh	ip, [ip, r3, lsl #1]
  80              		.loc 2 416 15 view .LVU22
  81 0028 8C45     		cmp	ip, r1
  82 002a 0DD0     		beq	.L18
 415:lvgl/src/misc/lv_style.h ****         for(i = 0; i < style->prop_cnt; i++) {
  83              		.loc 2 415 42 is_stmt 1 discriminator 2 view .LVU23
  84 002c 0133     		adds	r3, r3, #1
  85              	.LVL4:
 415:lvgl/src/misc/lv_style.h ****         for(i = 0; i < style->prop_cnt; i++) {
  86              		.loc 2 415 42 is_stmt 0 discriminator 2 view .LVU24
  87 002e F5E7     		b	.L8
  88              	.LVL5:
  89              	.L16:
  90              	.LCFI1:
  91              		.cfi_def_cfa_offset 0
  92              		.cfi_restore 4
  93              		.cfi_restore 14
 415:lvgl/src/misc/lv_style.h ****         for(i = 0; i < style->prop_cnt; i++) {
  94              		.loc 2 415 42 discriminator 2 view .LVU25
ARM GAS  C:\usertemp\ccV4o48j.s 			page 10


  95              	.LBE14:
  96              	.LBB16:
 399:lvgl/src/misc/lv_style.h ****         for(const_prop = style->v_p.const_props; const_prop->prop != LV_STYLE_PROP_INV; const_prop+
  97              		.loc 2 399 9 is_stmt 1 view .LVU26
 400:lvgl/src/misc/lv_style.h ****             if(const_prop->prop == prop) {
  98              		.loc 2 400 9 view .LVU27
 400:lvgl/src/misc/lv_style.h ****             if(const_prop->prop == prop) {
  99              		.loc 2 400 24 is_stmt 0 view .LVU28
 100 0030 1B68     		ldr	r3, [r3]
 101              	.LVL6:
 102              	.L3:
 400:lvgl/src/misc/lv_style.h ****             if(const_prop->prop == prop) {
 103              		.loc 2 400 67 is_stmt 1 discriminator 1 view .LVU29
 400:lvgl/src/misc/lv_style.h ****             if(const_prop->prop == prop) {
 104              		.loc 2 400 60 is_stmt 0 discriminator 1 view .LVU30
 105 0032 1888     		ldrh	r0, [r3]
 400:lvgl/src/misc/lv_style.h ****             if(const_prop->prop == prop) {
 106              		.loc 2 400 67 discriminator 1 view .LVU31
 107 0034 38B1     		cbz	r0, .L19
 401:lvgl/src/misc/lv_style.h ****                 *value = const_prop->value;
 108              		.loc 2 401 13 is_stmt 1 view .LVU32
 401:lvgl/src/misc/lv_style.h ****                 *value = const_prop->value;
 109              		.loc 2 401 15 is_stmt 0 view .LVU33
 110 0036 8842     		cmp	r0, r1
 111 0038 01D0     		beq	.L20
 400:lvgl/src/misc/lv_style.h ****             if(const_prop->prop == prop) {
 112              		.loc 2 400 99 is_stmt 1 discriminator 2 view .LVU34
 113 003a 0833     		adds	r3, r3, #8
 114              	.LVL7:
 400:lvgl/src/misc/lv_style.h ****             if(const_prop->prop == prop) {
 115              		.loc 2 400 99 is_stmt 0 discriminator 2 view .LVU35
 116 003c F9E7     		b	.L3
 117              	.L20:
 402:lvgl/src/misc/lv_style.h ****                 return LV_RES_OK;
 118              		.loc 2 402 17 is_stmt 1 view .LVU36
 402:lvgl/src/misc/lv_style.h ****                 return LV_RES_OK;
 119              		.loc 2 402 24 is_stmt 0 view .LVU37
 120 003e 5B68     		ldr	r3, [r3, #4]
 121              	.LVL8:
 402:lvgl/src/misc/lv_style.h ****                 return LV_RES_OK;
 122              		.loc 2 402 24 view .LVU38
 123 0040 1360     		str	r3, [r2]
 403:lvgl/src/misc/lv_style.h ****             }
 124              		.loc 2 403 17 is_stmt 1 view .LVU39
 403:lvgl/src/misc/lv_style.h ****             }
 125              		.loc 2 403 24 is_stmt 0 view .LVU40
 126 0042 0120     		movs	r0, #1
 127 0044 7047     		bx	lr
 128              	.LVL9:
 129              	.L19:
 403:lvgl/src/misc/lv_style.h ****             }
 130              		.loc 2 403 24 view .LVU41
 131 0046 7047     		bx	lr
 132              	.LVL10:
 133              	.L18:
 134              	.LCFI2:
 135              		.cfi_def_cfa_offset 8
ARM GAS  C:\usertemp\ccV4o48j.s 			page 11


 136              		.cfi_offset 4, -8
 137              		.cfi_offset 14, -4
 403:lvgl/src/misc/lv_style.h ****             }
 138              		.loc 2 403 24 view .LVU42
 139              	.LBE16:
 140              	.LBB17:
 141              	.LBB15:
 417:lvgl/src/misc/lv_style.h ****                 lv_style_value_t * values = (lv_style_value_t *)style->v_p.values_and_props;
 142              		.loc 2 417 17 is_stmt 1 view .LVU43
 418:lvgl/src/misc/lv_style.h ****                 *value = values[i];
 143              		.loc 2 418 17 view .LVU44
 144              		.loc 2 418 24 is_stmt 0 view .LVU45
 145 0048 54F82330 		ldr	r3, [r4, r3, lsl #2]
 146              	.LVL11:
 147              		.loc 2 418 24 view .LVU46
 148 004c 1360     		str	r3, [r2]
 419:lvgl/src/misc/lv_style.h ****                 return LV_RES_OK;
 149              		.loc 2 419 17 is_stmt 1 view .LVU47
 150              		.loc 2 419 24 is_stmt 0 view .LVU48
 151 004e 0120     		movs	r0, #1
 152              	.LVL12:
 153              		.loc 2 419 24 view .LVU49
 154 0050 00E0     		b	.L5
 155              	.LVL13:
 156              	.L17:
 157              		.loc 2 419 24 view .LVU50
 158              	.LBE15:
 159              	.LBE17:
 420:lvgl/src/misc/lv_style.h ****             }
 421:lvgl/src/misc/lv_style.h ****         }
 422:lvgl/src/misc/lv_style.h ****     }
 423:lvgl/src/misc/lv_style.h ****     else if(style->prop1 == prop) {
 424:lvgl/src/misc/lv_style.h ****         *value = style->v_p.value1;
 425:lvgl/src/misc/lv_style.h ****         return LV_RES_OK;
 426:lvgl/src/misc/lv_style.h ****     }
 427:lvgl/src/misc/lv_style.h ****     return LV_RES_INV;
 160              		.loc 2 427 12 view .LVU51
 161 0052 0020     		movs	r0, #0
 162              	.LVL14:
 163              	.L5:
 428:lvgl/src/misc/lv_style.h **** }
 164              		.loc 2 428 1 view .LVU52
 165 0054 10BD     		pop	{r4, pc}
 166              	.LVL15:
 167              	.L7:
 168              	.LCFI3:
 169              		.cfi_def_cfa_offset 0
 170              		.cfi_restore 4
 171              		.cfi_restore 14
 423:lvgl/src/misc/lv_style.h ****         *value = style->v_p.value1;
 172              		.loc 2 423 10 is_stmt 1 view .LVU53
 423:lvgl/src/misc/lv_style.h ****         *value = style->v_p.value1;
 173              		.loc 2 423 18 is_stmt 0 view .LVU54
 174 0056 9888     		ldrh	r0, [r3, #4]
 175 0058 C0F30E00 		ubfx	r0, r0, #0, #15
 423:lvgl/src/misc/lv_style.h ****         *value = style->v_p.value1;
 176              		.loc 2 423 12 view .LVU55
ARM GAS  C:\usertemp\ccV4o48j.s 			page 12


 177 005c 8842     		cmp	r0, r1
 178 005e 01D0     		beq	.L21
 427:lvgl/src/misc/lv_style.h **** }
 179              		.loc 2 427 12 view .LVU56
 180 0060 0020     		movs	r0, #0
 181 0062 7047     		bx	lr
 182              	.L21:
 424:lvgl/src/misc/lv_style.h ****         return LV_RES_OK;
 183              		.loc 2 424 9 is_stmt 1 view .LVU57
 424:lvgl/src/misc/lv_style.h ****         return LV_RES_OK;
 184              		.loc 2 424 16 is_stmt 0 view .LVU58
 185 0064 1B68     		ldr	r3, [r3]
 186              	.LVL16:
 424:lvgl/src/misc/lv_style.h ****         return LV_RES_OK;
 187              		.loc 2 424 16 view .LVU59
 188 0066 1360     		str	r3, [r2]
 425:lvgl/src/misc/lv_style.h ****     }
 189              		.loc 2 425 9 is_stmt 1 view .LVU60
 425:lvgl/src/misc/lv_style.h ****     }
 190              		.loc 2 425 16 is_stmt 0 view .LVU61
 191 0068 0120     		movs	r0, #1
 192 006a 7047     		bx	lr
 193              	.LVL17:
 194              	.L13:
 195              		.loc 2 428 1 view .LVU62
 196 006c 7047     		bx	lr
 197              		.cfi_endproc
 198              	.LFE49:
 200              		.section	.text.lv_style_init,"ax",%progbits
 201              		.align	1
 202              		.global	lv_style_init
 203              		.syntax unified
 204              		.thumb
 205              		.thumb_func
 207              	lv_style_init:
 208              	.LVL18:
 209              	.LFB55:
   1:lvgl/src/misc/lv_style.c **** /**
   2:lvgl/src/misc/lv_style.c ****  * @file lv_style.c
   3:lvgl/src/misc/lv_style.c ****  *
   4:lvgl/src/misc/lv_style.c ****  */
   5:lvgl/src/misc/lv_style.c **** 
   6:lvgl/src/misc/lv_style.c **** /*********************
   7:lvgl/src/misc/lv_style.c ****  *      INCLUDES
   8:lvgl/src/misc/lv_style.c ****  *********************/
   9:lvgl/src/misc/lv_style.c **** #include "lv_style.h"
  10:lvgl/src/misc/lv_style.c **** #include "../misc/lv_mem.h"
  11:lvgl/src/misc/lv_style.c **** 
  12:lvgl/src/misc/lv_style.c **** /*********************
  13:lvgl/src/misc/lv_style.c ****  *      DEFINES
  14:lvgl/src/misc/lv_style.c ****  *********************/
  15:lvgl/src/misc/lv_style.c **** 
  16:lvgl/src/misc/lv_style.c **** /**********************
  17:lvgl/src/misc/lv_style.c ****  *      TYPEDEFS
  18:lvgl/src/misc/lv_style.c ****  **********************/
  19:lvgl/src/misc/lv_style.c **** 
  20:lvgl/src/misc/lv_style.c **** /**********************
ARM GAS  C:\usertemp\ccV4o48j.s 			page 13


  21:lvgl/src/misc/lv_style.c ****  *  STATIC PROTOTYPES
  22:lvgl/src/misc/lv_style.c ****  **********************/
  23:lvgl/src/misc/lv_style.c **** 
  24:lvgl/src/misc/lv_style.c **** /**********************
  25:lvgl/src/misc/lv_style.c ****  *  GLOBAL VARIABLES
  26:lvgl/src/misc/lv_style.c ****  **********************/
  27:lvgl/src/misc/lv_style.c **** 
  28:lvgl/src/misc/lv_style.c **** /**********************
  29:lvgl/src/misc/lv_style.c ****  *  STATIC VARIABLES
  30:lvgl/src/misc/lv_style.c ****  **********************/
  31:lvgl/src/misc/lv_style.c **** 
  32:lvgl/src/misc/lv_style.c **** /**********************
  33:lvgl/src/misc/lv_style.c ****  *      MACROS
  34:lvgl/src/misc/lv_style.c ****  **********************/
  35:lvgl/src/misc/lv_style.c **** 
  36:lvgl/src/misc/lv_style.c **** /**********************
  37:lvgl/src/misc/lv_style.c ****  *   GLOBAL FUNCTIONS
  38:lvgl/src/misc/lv_style.c ****  **********************/
  39:lvgl/src/misc/lv_style.c **** 
  40:lvgl/src/misc/lv_style.c **** void lv_style_init(lv_style_t * style)
  41:lvgl/src/misc/lv_style.c **** {
 210              		.loc 1 41 1 is_stmt 1 view -0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214              		.loc 1 41 1 is_stmt 0 view .LVU64
 215 0000 08B5     		push	{r3, lr}
 216              	.LCFI4:
 217              		.cfi_def_cfa_offset 8
 218              		.cfi_offset 3, -8
 219              		.cfi_offset 14, -4
  42:lvgl/src/misc/lv_style.c **** #if LV_USE_ASSERT_STYLE
  43:lvgl/src/misc/lv_style.c ****     if(style->sentinel == LV_STYLE_SENTINEL_VALUE && style->prop_cnt > 1) {
  44:lvgl/src/misc/lv_style.c ****         LV_LOG_WARN("Style might be already inited. (Potential memory leak)");
  45:lvgl/src/misc/lv_style.c ****     }
  46:lvgl/src/misc/lv_style.c **** #endif
  47:lvgl/src/misc/lv_style.c **** 
  48:lvgl/src/misc/lv_style.c ****     lv_memset_00(style, sizeof(lv_style_t));
 220              		.loc 1 48 5 is_stmt 1 view .LVU65
 221 0002 0821     		movs	r1, #8
 222 0004 FFF7FEFF 		bl	lv_memset_00
 223              	.LVL19:
  49:lvgl/src/misc/lv_style.c **** #if LV_USE_ASSERT_STYLE
  50:lvgl/src/misc/lv_style.c ****     style->sentinel = LV_STYLE_SENTINEL_VALUE;
  51:lvgl/src/misc/lv_style.c **** #endif
  52:lvgl/src/misc/lv_style.c **** }
 224              		.loc 1 52 1 is_stmt 0 view .LVU66
 225 0008 08BD     		pop	{r3, pc}
 226              		.cfi_endproc
 227              	.LFE55:
 229              		.section	.text.lv_style_reset,"ax",%progbits
 230              		.align	1
 231              		.global	lv_style_reset
 232              		.syntax unified
 233              		.thumb
 234              		.thumb_func
 236              	lv_style_reset:
ARM GAS  C:\usertemp\ccV4o48j.s 			page 14


 237              	.LVL20:
 238              	.LFB56:
  53:lvgl/src/misc/lv_style.c **** 
  54:lvgl/src/misc/lv_style.c **** void lv_style_reset(lv_style_t * style)
  55:lvgl/src/misc/lv_style.c **** {
 239              		.loc 1 55 1 is_stmt 1 view -0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
  56:lvgl/src/misc/lv_style.c ****     LV_ASSERT_STYLE(style);
 243              		.loc 1 56 5 view .LVU68
 244              		.loc 1 56 5 view .LVU69
 245              		.loc 1 56 5 view .LVU70
  57:lvgl/src/misc/lv_style.c **** 
  58:lvgl/src/misc/lv_style.c ****     if(style->is_const) {
 246              		.loc 1 58 5 view .LVU71
 247              		.loc 1 58 7 is_stmt 0 view .LVU72
 248 0000 90F90530 		ldrsb	r3, [r0, #5]
 249 0004 002B     		cmp	r3, #0
 250 0006 0DDB     		blt	.L28
  55:lvgl/src/misc/lv_style.c ****     LV_ASSERT_STYLE(style);
 251              		.loc 1 55 1 view .LVU73
 252 0008 10B5     		push	{r4, lr}
 253              	.LCFI5:
 254              		.cfi_def_cfa_offset 8
 255              		.cfi_offset 4, -8
 256              		.cfi_offset 14, -4
 257 000a 0446     		mov	r4, r0
  59:lvgl/src/misc/lv_style.c ****         LV_LOG_ERROR("Cannot reset const style");
  60:lvgl/src/misc/lv_style.c ****         return;
  61:lvgl/src/misc/lv_style.c ****     }
  62:lvgl/src/misc/lv_style.c **** 
  63:lvgl/src/misc/lv_style.c ****     if(style->prop_cnt > 1) lv_mem_free(style->v_p.values_and_props);
 258              		.loc 1 63 5 is_stmt 1 view .LVU74
 259              		.loc 1 63 13 is_stmt 0 view .LVU75
 260 000c C379     		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 261              		.loc 1 63 7 view .LVU76
 262 000e 012B     		cmp	r3, #1
 263 0010 04D8     		bhi	.L31
 264              	.LVL21:
 265              	.L26:
  64:lvgl/src/misc/lv_style.c ****     lv_memset_00(style, sizeof(lv_style_t));
 266              		.loc 1 64 5 is_stmt 1 view .LVU77
 267 0012 0821     		movs	r1, #8
 268 0014 2046     		mov	r0, r4
 269 0016 FFF7FEFF 		bl	lv_memset_00
 270              	.LVL22:
  65:lvgl/src/misc/lv_style.c **** #if LV_USE_ASSERT_STYLE
  66:lvgl/src/misc/lv_style.c ****     style->sentinel = LV_STYLE_SENTINEL_VALUE;
  67:lvgl/src/misc/lv_style.c **** #endif
  68:lvgl/src/misc/lv_style.c **** }
 271              		.loc 1 68 1 is_stmt 0 view .LVU78
 272 001a 10BD     		pop	{r4, pc}
 273              	.LVL23:
 274              	.L31:
  63:lvgl/src/misc/lv_style.c ****     lv_memset_00(style, sizeof(lv_style_t));
 275              		.loc 1 63 29 is_stmt 1 discriminator 1 view .LVU79
ARM GAS  C:\usertemp\ccV4o48j.s 			page 15


 276 001c 0068     		ldr	r0, [r0]
 277              	.LVL24:
  63:lvgl/src/misc/lv_style.c ****     lv_memset_00(style, sizeof(lv_style_t));
 278              		.loc 1 63 29 is_stmt 0 discriminator 1 view .LVU80
 279 001e FFF7FEFF 		bl	lv_mem_free
 280              	.LVL25:
 281 0022 F6E7     		b	.L26
 282              	.LVL26:
 283              	.L28:
 284              	.LCFI6:
 285              		.cfi_def_cfa_offset 0
 286              		.cfi_restore 4
 287              		.cfi_restore 14
  63:lvgl/src/misc/lv_style.c ****     lv_memset_00(style, sizeof(lv_style_t));
 288              		.loc 1 63 29 discriminator 1 view .LVU81
 289 0024 7047     		bx	lr
 290              		.cfi_endproc
 291              	.LFE56:
 293              		.section	.text.lv_style_register_prop,"ax",%progbits
 294              		.align	1
 295              		.global	lv_style_register_prop
 296              		.syntax unified
 297              		.thumb
 298              		.thumb_func
 300              	lv_style_register_prop:
 301              	.LFB57:
  69:lvgl/src/misc/lv_style.c **** 
  70:lvgl/src/misc/lv_style.c **** lv_style_prop_t lv_style_register_prop(void)
  71:lvgl/src/misc/lv_style.c **** {
 302              		.loc 1 71 1 is_stmt 1 view -0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 0
 305              		@ frame_needed = 0, uses_anonymous_args = 0
 306              		@ link register save eliminated.
  72:lvgl/src/misc/lv_style.c ****     static uint16_t act_id = (uint16_t)_LV_STYLE_LAST_BUILT_IN_PROP;
 307              		.loc 1 72 5 view .LVU83
  73:lvgl/src/misc/lv_style.c ****     act_id++;
 308              		.loc 1 73 5 view .LVU84
 309              		.loc 1 73 11 is_stmt 0 view .LVU85
 310 0000 024B     		ldr	r3, .L33
 311 0002 1888     		ldrh	r0, [r3]
 312 0004 0130     		adds	r0, r0, #1
 313 0006 80B2     		uxth	r0, r0
 314 0008 1880     		strh	r0, [r3]	@ movhi
  74:lvgl/src/misc/lv_style.c ****     return act_id;
 315              		.loc 1 74 5 is_stmt 1 view .LVU86
  75:lvgl/src/misc/lv_style.c **** }
 316              		.loc 1 75 1 is_stmt 0 view .LVU87
 317 000a 7047     		bx	lr
 318              	.L34:
 319              		.align	2
 320              	.L33:
 321 000c 00000000 		.word	act_id.0
 322              		.cfi_endproc
 323              	.LFE57:
 325              		.section	.text.lv_style_remove_prop,"ax",%progbits
 326              		.align	1
ARM GAS  C:\usertemp\ccV4o48j.s 			page 16


 327              		.global	lv_style_remove_prop
 328              		.syntax unified
 329              		.thumb
 330              		.thumb_func
 332              	lv_style_remove_prop:
 333              	.LVL27:
 334              	.LFB58:
  76:lvgl/src/misc/lv_style.c **** 
  77:lvgl/src/misc/lv_style.c **** bool lv_style_remove_prop(lv_style_t * style, lv_style_prop_t prop)
  78:lvgl/src/misc/lv_style.c **** {
 335              		.loc 1 78 1 is_stmt 1 view -0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339              		.loc 1 78 1 is_stmt 0 view .LVU89
 340 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 341              	.LCFI7:
 342              		.cfi_def_cfa_offset 24
 343              		.cfi_offset 3, -24
 344              		.cfi_offset 4, -20
 345              		.cfi_offset 5, -16
 346              		.cfi_offset 6, -12
 347              		.cfi_offset 7, -8
 348              		.cfi_offset 14, -4
  79:lvgl/src/misc/lv_style.c ****     LV_ASSERT_STYLE(style);
 349              		.loc 1 79 5 is_stmt 1 view .LVU90
 350              		.loc 1 79 5 view .LVU91
 351              		.loc 1 79 5 view .LVU92
  80:lvgl/src/misc/lv_style.c **** 
  81:lvgl/src/misc/lv_style.c ****     if(style->is_const) {
 352              		.loc 1 81 5 view .LVU93
 353              		.loc 1 81 7 is_stmt 0 view .LVU94
 354 0002 90F90530 		ldrsb	r3, [r0, #5]
 355 0006 002B     		cmp	r3, #0
 356 0008 65DB     		blt	.L49
 357 000a 0546     		mov	r5, r0
 358 000c 0C46     		mov	r4, r1
  82:lvgl/src/misc/lv_style.c ****         LV_LOG_ERROR("Cannot remove prop from const style");
  83:lvgl/src/misc/lv_style.c ****         return false;
  84:lvgl/src/misc/lv_style.c ****     }
  85:lvgl/src/misc/lv_style.c **** 
  86:lvgl/src/misc/lv_style.c ****     if(style->prop_cnt == 0)  return false;
 359              		.loc 1 86 5 is_stmt 1 view .LVU95
 360              		.loc 1 86 13 is_stmt 0 view .LVU96
 361 000e C279     		ldrb	r2, [r0, #7]	@ zero_extendqisi2
 362              		.loc 1 86 7 view .LVU97
 363 0010 002A     		cmp	r2, #0
 364 0012 62D0     		beq	.L50
  87:lvgl/src/misc/lv_style.c **** 
  88:lvgl/src/misc/lv_style.c ****     if(style->prop_cnt == 1) {
 365              		.loc 1 88 5 is_stmt 1 view .LVU98
 366              		.loc 1 88 7 is_stmt 0 view .LVU99
 367 0014 012A     		cmp	r2, #1
 368 0016 0BD0     		beq	.L54
  89:lvgl/src/misc/lv_style.c ****         if(style->prop1 == prop) {
  90:lvgl/src/misc/lv_style.c ****             style->prop1 = LV_STYLE_PROP_INV;
  91:lvgl/src/misc/lv_style.c ****             style->prop_cnt = 0;
ARM GAS  C:\usertemp\ccV4o48j.s 			page 17


  92:lvgl/src/misc/lv_style.c ****             return true;
  93:lvgl/src/misc/lv_style.c ****         }
  94:lvgl/src/misc/lv_style.c ****         return false;
  95:lvgl/src/misc/lv_style.c ****     }
  96:lvgl/src/misc/lv_style.c **** 
  97:lvgl/src/misc/lv_style.c ****     uint8_t * tmp = style->v_p.values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
 369              		.loc 1 97 5 is_stmt 1 view .LVU100
 370              		.loc 1 97 31 is_stmt 0 view .LVU101
 371 0018 0768     		ldr	r7, [r0]
 372              		.loc 1 97 15 view .LVU102
 373 001a 07EB8206 		add	r6, r7, r2, lsl #2
 374              	.LVL28:
  98:lvgl/src/misc/lv_style.c ****     uint16_t * old_props = (uint16_t *)tmp;
 375              		.loc 1 98 5 is_stmt 1 view .LVU103
  99:lvgl/src/misc/lv_style.c ****     uint32_t i;
 376              		.loc 1 99 5 view .LVU104
 100:lvgl/src/misc/lv_style.c ****     for(i = 0; i < style->prop_cnt; i++) {
 377              		.loc 1 100 5 view .LVU105
 378              		.loc 1 100 11 is_stmt 0 view .LVU106
 379 001e 0023     		movs	r3, #0
 380              	.LVL29:
 381              	.L38:
 382              		.loc 1 100 18 is_stmt 1 discriminator 1 view .LVU107
 383 0020 9A42     		cmp	r2, r3
 384 0022 56D9     		bls	.L55
 101:lvgl/src/misc/lv_style.c ****         if(old_props[i] == prop) {
 385              		.loc 1 101 9 view .LVU108
 386              		.loc 1 101 21 is_stmt 0 view .LVU109
 387 0024 36F81310 		ldrh	r1, [r6, r3, lsl #1]
 388              		.loc 1 101 11 view .LVU110
 389 0028 A142     		cmp	r1, r4
 390 002a 10D0     		beq	.L56
 100:lvgl/src/misc/lv_style.c ****     for(i = 0; i < style->prop_cnt; i++) {
 391              		.loc 1 100 38 is_stmt 1 discriminator 2 view .LVU111
 392 002c 0133     		adds	r3, r3, #1
 393              	.LVL30:
 100:lvgl/src/misc/lv_style.c ****     for(i = 0; i < style->prop_cnt; i++) {
 394              		.loc 1 100 38 is_stmt 0 discriminator 2 view .LVU112
 395 002e F7E7     		b	.L38
 396              	.LVL31:
 397              	.L54:
  89:lvgl/src/misc/lv_style.c ****             style->prop1 = LV_STYLE_PROP_INV;
 398              		.loc 1 89 9 is_stmt 1 view .LVU113
  89:lvgl/src/misc/lv_style.c ****             style->prop1 = LV_STYLE_PROP_INV;
 399              		.loc 1 89 17 is_stmt 0 view .LVU114
 400 0030 8388     		ldrh	r3, [r0, #4]
 401 0032 C3F30E03 		ubfx	r3, r3, #0, #15
  89:lvgl/src/misc/lv_style.c ****             style->prop1 = LV_STYLE_PROP_INV;
 402              		.loc 1 89 11 view .LVU115
 403 0036 8B42     		cmp	r3, r1
 404 0038 01D0     		beq	.L57
  94:lvgl/src/misc/lv_style.c ****     }
 405              		.loc 1 94 16 view .LVU116
 406 003a 0020     		movs	r0, #0
 407              	.LVL32:
  94:lvgl/src/misc/lv_style.c ****     }
 408              		.loc 1 94 16 view .LVU117
ARM GAS  C:\usertemp\ccV4o48j.s 			page 18


 409 003c 4CE0     		b	.L36
 410              	.LVL33:
 411              	.L57:
  90:lvgl/src/misc/lv_style.c ****             style->prop_cnt = 0;
 412              		.loc 1 90 13 is_stmt 1 view .LVU118
  90:lvgl/src/misc/lv_style.c ****             style->prop_cnt = 0;
 413              		.loc 1 90 26 is_stmt 0 view .LVU119
 414 003e 8388     		ldrh	r3, [r0, #4]
 415 0040 6FF30E03 		bfc	r3, #0, #15
 416 0044 8380     		strh	r3, [r0, #4]	@ movhi
  91:lvgl/src/misc/lv_style.c ****             return true;
 417              		.loc 1 91 13 is_stmt 1 view .LVU120
  91:lvgl/src/misc/lv_style.c ****             return true;
 418              		.loc 1 91 29 is_stmt 0 view .LVU121
 419 0046 0023     		movs	r3, #0
 420 0048 C371     		strb	r3, [r0, #7]
  92:lvgl/src/misc/lv_style.c ****         }
 421              		.loc 1 92 13 is_stmt 1 view .LVU122
  92:lvgl/src/misc/lv_style.c ****         }
 422              		.loc 1 92 20 is_stmt 0 view .LVU123
 423 004a 0120     		movs	r0, #1
 424              	.LVL34:
  92:lvgl/src/misc/lv_style.c ****         }
 425              		.loc 1 92 20 view .LVU124
 426 004c 44E0     		b	.L36
 427              	.LVL35:
 428              	.L56:
 429              	.LBB18:
 102:lvgl/src/misc/lv_style.c ****             lv_style_value_t * old_values = (lv_style_value_t *)style->v_p.values_and_props;
 430              		.loc 1 102 13 is_stmt 1 view .LVU125
 103:lvgl/src/misc/lv_style.c **** 
 104:lvgl/src/misc/lv_style.c ****             if(style->prop_cnt == 2) {
 431              		.loc 1 104 13 view .LVU126
 432              		.loc 1 104 15 is_stmt 0 view .LVU127
 433 004e 022A     		cmp	r2, #2
 434 0050 11D0     		beq	.L58
 435              	.LBB19:
 105:lvgl/src/misc/lv_style.c ****                 style->prop_cnt = 1;
 106:lvgl/src/misc/lv_style.c ****                 style->prop1 = i == 0 ? old_props[1] : old_props[0];
 107:lvgl/src/misc/lv_style.c ****                 style->v_p.value1 = i == 0 ? old_values[1] : old_values[0];
 108:lvgl/src/misc/lv_style.c ****             }
 109:lvgl/src/misc/lv_style.c ****             else {
 110:lvgl/src/misc/lv_style.c ****                 size_t size = (style->prop_cnt - 1) * (sizeof(lv_style_value_t) + sizeof(uint16_t))
 436              		.loc 1 110 17 is_stmt 1 view .LVU128
 437              		.loc 1 110 48 is_stmt 0 view .LVU129
 438 0052 013A     		subs	r2, r2, #1
 439              		.loc 1 110 24 view .LVU130
 440 0054 02EB4202 		add	r2, r2, r2, lsl #1
 441              	.LVL36:
 111:lvgl/src/misc/lv_style.c ****                 uint8_t * new_values_and_props = lv_mem_alloc(size);
 442              		.loc 1 111 17 is_stmt 1 view .LVU131
 443              		.loc 1 111 50 is_stmt 0 view .LVU132
 444 0058 5000     		lsls	r0, r2, #1
 445              	.LVL37:
 446              		.loc 1 111 50 view .LVU133
 447 005a FFF7FEFF 		bl	lv_mem_alloc
 448              	.LVL38:
ARM GAS  C:\usertemp\ccV4o48j.s 			page 19


 112:lvgl/src/misc/lv_style.c ****                 if(new_values_and_props == NULL) return false;
 449              		.loc 1 112 17 is_stmt 1 view .LVU134
 450              		.loc 1 112 19 is_stmt 0 view .LVU135
 451 005e 8446     		mov	ip, r0
 452 0060 0028     		cmp	r0, #0
 453 0062 3CD0     		beq	.L52
 113:lvgl/src/misc/lv_style.c ****                 style->v_p.values_and_props = new_values_and_props;
 454              		.loc 1 113 17 is_stmt 1 view .LVU136
 455              		.loc 1 113 45 is_stmt 0 view .LVU137
 456 0064 2860     		str	r0, [r5]
 114:lvgl/src/misc/lv_style.c ****                 style->prop_cnt--;
 457              		.loc 1 114 17 is_stmt 1 view .LVU138
 458              		.loc 1 114 22 is_stmt 0 view .LVU139
 459 0066 E879     		ldrb	r0, [r5, #7]	@ zero_extendqisi2
 460              	.LVL39:
 461              		.loc 1 114 32 view .LVU140
 462 0068 0138     		subs	r0, r0, #1
 463 006a C0B2     		uxtb	r0, r0
 464 006c E871     		strb	r0, [r5, #7]
 115:lvgl/src/misc/lv_style.c **** 
 116:lvgl/src/misc/lv_style.c ****                 tmp = new_values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
 465              		.loc 1 116 17 is_stmt 1 view .LVU141
 466              		.loc 1 116 62 is_stmt 0 view .LVU142
 467 006e 8000     		lsls	r0, r0, #2
 468              	.LVL40:
 117:lvgl/src/misc/lv_style.c ****                 uint16_t * new_props = (uint16_t *)tmp;
 469              		.loc 1 117 17 is_stmt 1 view .LVU143
 118:lvgl/src/misc/lv_style.c ****                 lv_style_value_t * new_values = (lv_style_value_t *)new_values_and_props;
 470              		.loc 1 118 17 view .LVU144
 119:lvgl/src/misc/lv_style.c **** 
 120:lvgl/src/misc/lv_style.c ****                 uint32_t j;
 471              		.loc 1 120 17 view .LVU145
 121:lvgl/src/misc/lv_style.c ****                 for(i = j = 0; j <= style->prop_cnt;
 472              		.loc 1 121 17 view .LVU146
 473              		.loc 1 121 27 is_stmt 0 view .LVU147
 474 0070 0023     		movs	r3, #0
 475              		.loc 1 121 23 view .LVU148
 476 0072 1A46     		mov	r2, r3
 477              		.loc 1 121 17 view .LVU149
 478 0074 1AE0     		b	.L45
 479              	.LVL41:
 480              	.L58:
 481              		.loc 1 121 17 view .LVU150
 482              	.LBE19:
 105:lvgl/src/misc/lv_style.c ****                 style->prop1 = i == 0 ? old_props[1] : old_props[0];
 483              		.loc 1 105 17 is_stmt 1 view .LVU151
 105:lvgl/src/misc/lv_style.c ****                 style->prop1 = i == 0 ? old_props[1] : old_props[0];
 484              		.loc 1 105 33 is_stmt 0 view .LVU152
 485 0076 0121     		movs	r1, #1
 486 0078 E971     		strb	r1, [r5, #7]
 106:lvgl/src/misc/lv_style.c ****                 style->v_p.value1 = i == 0 ? old_values[1] : old_values[0];
 487              		.loc 1 106 17 is_stmt 1 view .LVU153
 106:lvgl/src/misc/lv_style.c ****                 style->v_p.value1 = i == 0 ? old_values[1] : old_values[0];
 488              		.loc 1 106 54 is_stmt 0 view .LVU154
 489 007a 73B9     		cbnz	r3, .L41
 106:lvgl/src/misc/lv_style.c ****                 style->v_p.value1 = i == 0 ? old_values[1] : old_values[0];
 490              		.loc 1 106 50 discriminator 1 view .LVU155
ARM GAS  C:\usertemp\ccV4o48j.s 			page 20


 491 007c 7288     		ldrh	r2, [r6, #2]
 106:lvgl/src/misc/lv_style.c ****                 style->v_p.value1 = i == 0 ? old_values[1] : old_values[0];
 492              		.loc 1 106 54 discriminator 1 view .LVU156
 493 007e C2F30E02 		ubfx	r2, r2, #0, #15
 494              	.L42:
 106:lvgl/src/misc/lv_style.c ****                 style->v_p.value1 = i == 0 ? old_values[1] : old_values[0];
 495              		.loc 1 106 30 discriminator 4 view .LVU157
 496 0082 A988     		ldrh	r1, [r5, #4]
 497 0084 62F30E01 		bfi	r1, r2, #0, #15
 498 0088 A980     		strh	r1, [r5, #4]	@ movhi
 107:lvgl/src/misc/lv_style.c ****             }
 499              		.loc 1 107 17 is_stmt 1 view .LVU158
 107:lvgl/src/misc/lv_style.c ****             }
 500              		.loc 1 107 60 is_stmt 0 view .LVU159
 501 008a 5BB9     		cbnz	r3, .L43
 107:lvgl/src/misc/lv_style.c ****             }
 502              		.loc 1 107 35 discriminator 1 view .LVU160
 503 008c 7B68     		ldr	r3, [r7, #4]
 504              	.LVL42:
 107:lvgl/src/misc/lv_style.c ****             }
 505              		.loc 1 107 35 discriminator 1 view .LVU161
 506 008e 2B60     		str	r3, [r5]
 507              	.LVL43:
 508              	.L44:
 122:lvgl/src/misc/lv_style.c ****                     j++) { /*<=: because prop_cnt already reduced but all the old props. needs to b
 123:lvgl/src/misc/lv_style.c ****                     if(old_props[j] != prop) {
 124:lvgl/src/misc/lv_style.c ****                         new_values[i] = old_values[j];
 125:lvgl/src/misc/lv_style.c ****                         new_props[i++] = old_props[j];
 126:lvgl/src/misc/lv_style.c ****                     }
 127:lvgl/src/misc/lv_style.c ****                 }
 128:lvgl/src/misc/lv_style.c ****             }
 129:lvgl/src/misc/lv_style.c **** 
 130:lvgl/src/misc/lv_style.c ****             lv_mem_free(old_values);
 509              		.loc 1 130 13 is_stmt 1 view .LVU162
 510 0090 3846     		mov	r0, r7
 511 0092 FFF7FEFF 		bl	lv_mem_free
 512              	.LVL44:
 131:lvgl/src/misc/lv_style.c ****             return true;
 513              		.loc 1 131 13 view .LVU163
 514              		.loc 1 131 20 is_stmt 0 view .LVU164
 515 0096 0120     		movs	r0, #1
 516 0098 1EE0     		b	.L36
 517              	.LVL45:
 518              	.L41:
 106:lvgl/src/misc/lv_style.c ****                 style->v_p.value1 = i == 0 ? old_values[1] : old_values[0];
 519              		.loc 1 106 65 discriminator 2 view .LVU165
 520 009a 37F82220 		ldrh	r2, [r7, r2, lsl #2]
 106:lvgl/src/misc/lv_style.c ****                 style->v_p.value1 = i == 0 ? old_values[1] : old_values[0];
 521              		.loc 1 106 54 discriminator 2 view .LVU166
 522 009e C2F30E02 		ubfx	r2, r2, #0, #15
 523 00a2 EEE7     		b	.L42
 524              	.L43:
 107:lvgl/src/misc/lv_style.c ****             }
 525              		.loc 1 107 35 discriminator 2 view .LVU167
 526 00a4 3B68     		ldr	r3, [r7]
 527              	.LVL46:
 107:lvgl/src/misc/lv_style.c ****             }
ARM GAS  C:\usertemp\ccV4o48j.s 			page 21


 528              		.loc 1 107 35 discriminator 2 view .LVU168
 529 00a6 2B60     		str	r3, [r5]
 530 00a8 F2E7     		b	.L44
 531              	.LVL47:
 532              	.L46:
 533              	.LBB20:
 122:lvgl/src/misc/lv_style.c ****                     if(old_props[j] != prop) {
 534              		.loc 1 122 22 is_stmt 1 view .LVU169
 535 00aa 0133     		adds	r3, r3, #1
 536              	.LVL48:
 537              	.L45:
 121:lvgl/src/misc/lv_style.c ****                     j++) { /*<=: because prop_cnt already reduced but all the old props. needs to b
 538              		.loc 1 121 34 discriminator 1 view .LVU170
 121:lvgl/src/misc/lv_style.c ****                     j++) { /*<=: because prop_cnt already reduced but all the old props. needs to b
 539              		.loc 1 121 42 is_stmt 0 discriminator 1 view .LVU171
 540 00ac E979     		ldrb	r1, [r5, #7]	@ zero_extendqisi2
 121:lvgl/src/misc/lv_style.c ****                     j++) { /*<=: because prop_cnt already reduced but all the old props. needs to b
 541              		.loc 1 121 34 discriminator 1 view .LVU172
 542 00ae 9942     		cmp	r1, r3
 543 00b0 EED3     		bcc	.L44
 123:lvgl/src/misc/lv_style.c ****                         new_values[i] = old_values[j];
 544              		.loc 1 123 21 is_stmt 1 view .LVU173
 123:lvgl/src/misc/lv_style.c ****                         new_values[i] = old_values[j];
 545              		.loc 1 123 33 is_stmt 0 view .LVU174
 546 00b2 36F81310 		ldrh	r1, [r6, r3, lsl #1]
 123:lvgl/src/misc/lv_style.c ****                         new_values[i] = old_values[j];
 547              		.loc 1 123 23 view .LVU175
 548 00b6 A142     		cmp	r1, r4
 549 00b8 F7D0     		beq	.L46
 124:lvgl/src/misc/lv_style.c ****                         new_props[i++] = old_props[j];
 550              		.loc 1 124 25 is_stmt 1 view .LVU176
 124:lvgl/src/misc/lv_style.c ****                         new_props[i++] = old_props[j];
 551              		.loc 1 124 39 is_stmt 0 view .LVU177
 552 00ba 57F82310 		ldr	r1, [r7, r3, lsl #2]
 553 00be 4CF82210 		str	r1, [ip, r2, lsl #2]
 125:lvgl/src/misc/lv_style.c ****                     }
 554              		.loc 1 125 25 is_stmt 1 view .LVU178
 555              	.LVL49:
 125:lvgl/src/misc/lv_style.c ****                     }
 556              		.loc 1 125 34 is_stmt 0 view .LVU179
 557 00c2 00EB4201 		add	r1, r0, r2, lsl #1
 125:lvgl/src/misc/lv_style.c ****                     }
 558              		.loc 1 125 51 view .LVU180
 559 00c6 36F813E0 		ldrh	lr, [r6, r3, lsl #1]
 125:lvgl/src/misc/lv_style.c ****                     }
 560              		.loc 1 125 40 view .LVU181
 561 00ca 2CF801E0 		strh	lr, [ip, r1]	@ movhi
 125:lvgl/src/misc/lv_style.c ****                     }
 562              		.loc 1 125 36 view .LVU182
 563 00ce 0132     		adds	r2, r2, #1
 564              	.LVL50:
 125:lvgl/src/misc/lv_style.c ****                     }
 565              		.loc 1 125 36 view .LVU183
 566 00d0 EBE7     		b	.L46
 567              	.LVL51:
 568              	.L55:
 125:lvgl/src/misc/lv_style.c ****                     }
ARM GAS  C:\usertemp\ccV4o48j.s 			page 22


 569              		.loc 1 125 36 view .LVU184
 570              	.LBE20:
 571              	.LBE18:
 132:lvgl/src/misc/lv_style.c ****         }
 133:lvgl/src/misc/lv_style.c ****     }
 134:lvgl/src/misc/lv_style.c **** 
 135:lvgl/src/misc/lv_style.c ****     return false;
 572              		.loc 1 135 12 view .LVU185
 573 00d2 0020     		movs	r0, #0
 574              	.LVL52:
 575              		.loc 1 135 12 view .LVU186
 576 00d4 00E0     		b	.L36
 577              	.LVL53:
 578              	.L49:
  83:lvgl/src/misc/lv_style.c ****     }
 579              		.loc 1 83 16 view .LVU187
 580 00d6 0020     		movs	r0, #0
 581              	.LVL54:
 582              	.L36:
 136:lvgl/src/misc/lv_style.c **** }
 583              		.loc 1 136 1 view .LVU188
 584 00d8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 585              	.LVL55:
 586              	.L50:
  86:lvgl/src/misc/lv_style.c **** 
 587              		.loc 1 86 38 discriminator 1 view .LVU189
 588 00da 0020     		movs	r0, #0
 589              	.LVL56:
  86:lvgl/src/misc/lv_style.c **** 
 590              		.loc 1 86 38 discriminator 1 view .LVU190
 591 00dc FCE7     		b	.L36
 592              	.LVL57:
 593              	.L52:
 594              	.LBB22:
 595              	.LBB21:
 112:lvgl/src/misc/lv_style.c ****                 style->v_p.values_and_props = new_values_and_props;
 596              		.loc 1 112 57 discriminator 1 view .LVU191
 597 00de 0020     		movs	r0, #0
 598              	.LVL58:
 112:lvgl/src/misc/lv_style.c ****                 style->v_p.values_and_props = new_values_and_props;
 599              		.loc 1 112 57 discriminator 1 view .LVU192
 600 00e0 FAE7     		b	.L36
 601              	.LBE21:
 602              	.LBE22:
 603              		.cfi_endproc
 604              	.LFE58:
 606              		.section	.text.lv_style_get_prop,"ax",%progbits
 607              		.align	1
 608              		.global	lv_style_get_prop
 609              		.syntax unified
 610              		.thumb
 611              		.thumb_func
 613              	lv_style_get_prop:
 614              	.LVL59:
 615              	.LFB60:
 137:lvgl/src/misc/lv_style.c **** 
 138:lvgl/src/misc/lv_style.c **** void lv_style_set_prop(lv_style_t * style, lv_style_prop_t prop, lv_style_value_t value)
ARM GAS  C:\usertemp\ccV4o48j.s 			page 23


 139:lvgl/src/misc/lv_style.c **** {
 140:lvgl/src/misc/lv_style.c ****     LV_ASSERT_STYLE(style);
 141:lvgl/src/misc/lv_style.c **** 
 142:lvgl/src/misc/lv_style.c ****     if(style->is_const) {
 143:lvgl/src/misc/lv_style.c ****         LV_LOG_ERROR("Cannot set property of constant style");
 144:lvgl/src/misc/lv_style.c ****         return;
 145:lvgl/src/misc/lv_style.c ****     }
 146:lvgl/src/misc/lv_style.c **** 
 147:lvgl/src/misc/lv_style.c ****     if(style->prop_cnt > 1) {
 148:lvgl/src/misc/lv_style.c ****         uint8_t * tmp = style->v_p.values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
 149:lvgl/src/misc/lv_style.c ****         uint16_t * props = (uint16_t *)tmp;
 150:lvgl/src/misc/lv_style.c ****         int32_t i;
 151:lvgl/src/misc/lv_style.c ****         for(i = style->prop_cnt - 1; i >= 0; i--) {
 152:lvgl/src/misc/lv_style.c ****             if(props[i] == prop) {
 153:lvgl/src/misc/lv_style.c ****                 lv_style_value_t * values = (lv_style_value_t *)style->v_p.values_and_props;
 154:lvgl/src/misc/lv_style.c ****                 values[i] = value;
 155:lvgl/src/misc/lv_style.c ****                 return;
 156:lvgl/src/misc/lv_style.c ****             }
 157:lvgl/src/misc/lv_style.c ****         }
 158:lvgl/src/misc/lv_style.c **** 
 159:lvgl/src/misc/lv_style.c ****         size_t size = (style->prop_cnt + 1) * (sizeof(lv_style_value_t) + sizeof(uint16_t));
 160:lvgl/src/misc/lv_style.c ****         uint8_t * values_and_props = lv_mem_realloc(style->v_p.values_and_props, size);
 161:lvgl/src/misc/lv_style.c ****         if(values_and_props == NULL) return;
 162:lvgl/src/misc/lv_style.c ****         style->v_p.values_and_props = values_and_props;
 163:lvgl/src/misc/lv_style.c **** 
 164:lvgl/src/misc/lv_style.c ****         tmp = values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
 165:lvgl/src/misc/lv_style.c ****         props = (uint16_t *)tmp;
 166:lvgl/src/misc/lv_style.c ****         /*Shift all props to make place for the value before them*/
 167:lvgl/src/misc/lv_style.c ****         for(i = style->prop_cnt - 1; i >= 0; i--) {
 168:lvgl/src/misc/lv_style.c ****             props[i + sizeof(lv_style_value_t) / sizeof(uint16_t)] = props[i];
 169:lvgl/src/misc/lv_style.c ****         }
 170:lvgl/src/misc/lv_style.c ****         style->prop_cnt++;
 171:lvgl/src/misc/lv_style.c **** 
 172:lvgl/src/misc/lv_style.c ****         /*Go to the new position wit the props*/
 173:lvgl/src/misc/lv_style.c ****         tmp = values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
 174:lvgl/src/misc/lv_style.c ****         props = (uint16_t *)tmp;
 175:lvgl/src/misc/lv_style.c ****         lv_style_value_t * values = (lv_style_value_t *)values_and_props;
 176:lvgl/src/misc/lv_style.c **** 
 177:lvgl/src/misc/lv_style.c ****         /*Set the new property and value*/
 178:lvgl/src/misc/lv_style.c ****         props[style->prop_cnt - 1] = prop;
 179:lvgl/src/misc/lv_style.c ****         values[style->prop_cnt - 1] = value;
 180:lvgl/src/misc/lv_style.c ****     }
 181:lvgl/src/misc/lv_style.c ****     else if(style->prop_cnt == 1) {
 182:lvgl/src/misc/lv_style.c ****         if(style->prop1 == prop) {
 183:lvgl/src/misc/lv_style.c ****             style->v_p.value1 = value;
 184:lvgl/src/misc/lv_style.c ****             return;
 185:lvgl/src/misc/lv_style.c ****         }
 186:lvgl/src/misc/lv_style.c ****         size_t size = (style->prop_cnt + 1) * (sizeof(lv_style_value_t) + sizeof(uint16_t));
 187:lvgl/src/misc/lv_style.c ****         uint8_t * values_and_props = lv_mem_alloc(size);
 188:lvgl/src/misc/lv_style.c ****         if(values_and_props == NULL) return;
 189:lvgl/src/misc/lv_style.c ****         lv_style_value_t value_tmp = style->v_p.value1;
 190:lvgl/src/misc/lv_style.c ****         style->v_p.values_and_props = values_and_props;
 191:lvgl/src/misc/lv_style.c ****         style->prop_cnt++;
 192:lvgl/src/misc/lv_style.c **** 
 193:lvgl/src/misc/lv_style.c ****         uint8_t * tmp = values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
 194:lvgl/src/misc/lv_style.c ****         uint16_t * props = (uint16_t *)tmp;
 195:lvgl/src/misc/lv_style.c ****         lv_style_value_t * values = (lv_style_value_t *)values_and_props;
ARM GAS  C:\usertemp\ccV4o48j.s 			page 24


 196:lvgl/src/misc/lv_style.c ****         props[0] = style->prop1;
 197:lvgl/src/misc/lv_style.c ****         props[1] = prop;
 198:lvgl/src/misc/lv_style.c ****         values[0] = value_tmp;
 199:lvgl/src/misc/lv_style.c ****         values[1] = value;
 200:lvgl/src/misc/lv_style.c ****     }
 201:lvgl/src/misc/lv_style.c ****     else {
 202:lvgl/src/misc/lv_style.c ****         style->prop_cnt = 1;
 203:lvgl/src/misc/lv_style.c ****         style->prop1 = prop;
 204:lvgl/src/misc/lv_style.c ****         style->v_p.value1 = value;
 205:lvgl/src/misc/lv_style.c ****     }
 206:lvgl/src/misc/lv_style.c **** 
 207:lvgl/src/misc/lv_style.c ****     uint8_t group = _lv_style_get_prop_group(prop);
 208:lvgl/src/misc/lv_style.c ****     style->has_group |= 1 << group;
 209:lvgl/src/misc/lv_style.c **** }
 210:lvgl/src/misc/lv_style.c **** 
 211:lvgl/src/misc/lv_style.c **** lv_res_t lv_style_get_prop(const lv_style_t * style, lv_style_prop_t prop, lv_style_value_t * value
 212:lvgl/src/misc/lv_style.c **** {
 616              		.loc 1 212 1 is_stmt 1 view -0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 0
 619              		@ frame_needed = 0, uses_anonymous_args = 0
 620              		.loc 1 212 1 is_stmt 0 view .LVU194
 621 0000 08B5     		push	{r3, lr}
 622              	.LCFI8:
 623              		.cfi_def_cfa_offset 8
 624              		.cfi_offset 3, -8
 625              		.cfi_offset 14, -4
 213:lvgl/src/misc/lv_style.c ****     return lv_style_get_prop_inlined(style, prop, value);
 626              		.loc 1 213 5 is_stmt 1 view .LVU195
 627              		.loc 1 213 12 is_stmt 0 view .LVU196
 628 0002 FFF7FEFF 		bl	lv_style_get_prop_inlined
 629              	.LVL60:
 214:lvgl/src/misc/lv_style.c **** }
 630              		.loc 1 214 1 view .LVU197
 631 0006 08BD     		pop	{r3, pc}
 632              		.cfi_endproc
 633              	.LFE60:
 635              		.section	.text.lv_style_transition_dsc_init,"ax",%progbits
 636              		.align	1
 637              		.global	lv_style_transition_dsc_init
 638              		.syntax unified
 639              		.thumb
 640              		.thumb_func
 642              	lv_style_transition_dsc_init:
 643              	.LVL61:
 644              	.LFB61:
 215:lvgl/src/misc/lv_style.c **** 
 216:lvgl/src/misc/lv_style.c **** void lv_style_transition_dsc_init(lv_style_transition_dsc_t * tr, const lv_style_prop_t props[],
 217:lvgl/src/misc/lv_style.c ****                                   lv_anim_path_cb_t path_cb, uint32_t time, uint32_t delay, void * 
 218:lvgl/src/misc/lv_style.c **** {
 645              		.loc 1 218 1 is_stmt 1 view -0
 646              		.cfi_startproc
 647              		@ args = 8, pretend = 0, frame = 0
 648              		@ frame_needed = 0, uses_anonymous_args = 0
 649              		.loc 1 218 1 is_stmt 0 view .LVU199
 650 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 651              	.LCFI9:
ARM GAS  C:\usertemp\ccV4o48j.s 			page 25


 652              		.cfi_def_cfa_offset 24
 653              		.cfi_offset 3, -24
 654              		.cfi_offset 4, -20
 655              		.cfi_offset 5, -16
 656              		.cfi_offset 6, -12
 657              		.cfi_offset 7, -8
 658              		.cfi_offset 14, -4
 659 0002 0446     		mov	r4, r0
 660 0004 0F46     		mov	r7, r1
 661 0006 1546     		mov	r5, r2
 662 0008 1E46     		mov	r6, r3
 219:lvgl/src/misc/lv_style.c ****     lv_memset_00(tr, sizeof(lv_style_transition_dsc_t));
 663              		.loc 1 219 5 is_stmt 1 view .LVU200
 664 000a 1421     		movs	r1, #20
 665              	.LVL62:
 666              		.loc 1 219 5 is_stmt 0 view .LVU201
 667 000c FFF7FEFF 		bl	lv_memset_00
 668              	.LVL63:
 220:lvgl/src/misc/lv_style.c ****     tr->props = props;
 669              		.loc 1 220 5 is_stmt 1 view .LVU202
 670              		.loc 1 220 15 is_stmt 0 view .LVU203
 671 0010 2760     		str	r7, [r4]
 221:lvgl/src/misc/lv_style.c ****     tr->path_xcb = path_cb == NULL ? lv_anim_path_linear : path_cb;
 672              		.loc 1 221 5 is_stmt 1 view .LVU204
 673              		.loc 1 221 58 is_stmt 0 view .LVU205
 674 0012 35B1     		cbz	r5, .L65
 675              	.LVL64:
 676              	.L62:
 677              		.loc 1 221 18 discriminator 4 view .LVU206
 678 0014 A560     		str	r5, [r4, #8]
 222:lvgl/src/misc/lv_style.c ****     tr->time = time;
 679              		.loc 1 222 5 is_stmt 1 view .LVU207
 680              		.loc 1 222 14 is_stmt 0 view .LVU208
 681 0016 E660     		str	r6, [r4, #12]
 223:lvgl/src/misc/lv_style.c ****     tr->delay = delay;
 682              		.loc 1 223 5 is_stmt 1 view .LVU209
 683              		.loc 1 223 15 is_stmt 0 view .LVU210
 684 0018 069B     		ldr	r3, [sp, #24]
 685 001a 2361     		str	r3, [r4, #16]
 224:lvgl/src/misc/lv_style.c **** #if LV_USE_USER_DATA
 225:lvgl/src/misc/lv_style.c ****     tr->user_data = user_data;
 686              		.loc 1 225 5 is_stmt 1 view .LVU211
 687              		.loc 1 225 19 is_stmt 0 view .LVU212
 688 001c 079B     		ldr	r3, [sp, #28]
 689 001e 6360     		str	r3, [r4, #4]
 226:lvgl/src/misc/lv_style.c **** #else
 227:lvgl/src/misc/lv_style.c ****     LV_UNUSED(user_data);
 228:lvgl/src/misc/lv_style.c **** #endif
 229:lvgl/src/misc/lv_style.c **** }
 690              		.loc 1 229 1 view .LVU213
 691 0020 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 692              	.LVL65:
 693              	.L65:
 221:lvgl/src/misc/lv_style.c ****     tr->time = time;
 694              		.loc 1 221 58 discriminator 2 view .LVU214
 695 0022 014D     		ldr	r5, .L66
 696              	.LVL66:
ARM GAS  C:\usertemp\ccV4o48j.s 			page 26


 221:lvgl/src/misc/lv_style.c ****     tr->time = time;
 697              		.loc 1 221 58 discriminator 2 view .LVU215
 698 0024 F6E7     		b	.L62
 699              	.L67:
 700 0026 00BF     		.align	2
 701              	.L66:
 702 0028 00000000 		.word	lv_anim_path_linear
 703              		.cfi_endproc
 704              	.LFE61:
 706              		.section	.text.lv_style_prop_get_default,"ax",%progbits
 707              		.align	1
 708              		.global	lv_style_prop_get_default
 709              		.syntax unified
 710              		.thumb
 711              		.thumb_func
 713              	lv_style_prop_get_default:
 714              	.LVL67:
 715              	.LFB62:
 230:lvgl/src/misc/lv_style.c **** 
 231:lvgl/src/misc/lv_style.c **** lv_style_value_t lv_style_prop_get_default(lv_style_prop_t prop)
 232:lvgl/src/misc/lv_style.c **** {
 716              		.loc 1 232 1 is_stmt 1 view -0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 0
 719              		@ frame_needed = 0, uses_anonymous_args = 0
 720              		@ link register save eliminated.
 233:lvgl/src/misc/lv_style.c ****     lv_style_value_t value;
 721              		.loc 1 233 5 view .LVU217
 234:lvgl/src/misc/lv_style.c ****     switch(prop) {
 722              		.loc 1 234 5 view .LVU218
 723 0000 5328     		cmp	r0, #83
 724 0002 21D8     		bhi	.L69
 725 0004 3B28     		cmp	r0, #59
 726 0006 12D2     		bcs	.L70
 727 0008 3328     		cmp	r0, #51
 728 000a 1BD8     		bhi	.L71
 729 000c 2028     		cmp	r0, #32
 730 000e 19D3     		bcc	.L71
 731 0010 2038     		subs	r0, r0, #32
 732              	.LVL68:
 733              		.loc 1 234 5 is_stmt 0 view .LVU219
 734 0012 1328     		cmp	r0, #19
 735 0014 16D8     		bhi	.L71
 736 0016 DFE800F0 		tbb	[pc, r0]
 737              	.L76:
 738 001a 46       		.byte	(.L78-.L76)/2
 739 001b 15       		.byte	(.L71-.L76)/2
 740 001c 4C       		.byte	(.L73-.L76)/2
 741 001d 15       		.byte	(.L71-.L76)/2
 742 001e 15       		.byte	(.L71-.L76)/2
 743 001f 58       		.byte	(.L77-.L76)/2
 744 0020 15       		.byte	(.L71-.L76)/2
 745 0021 15       		.byte	(.L71-.L76)/2
 746 0022 15       		.byte	(.L71-.L76)/2
 747 0023 36       		.byte	(.L74-.L76)/2
 748 0024 15       		.byte	(.L71-.L76)/2
 749 0025 15       		.byte	(.L71-.L76)/2
ARM GAS  C:\usertemp\ccV4o48j.s 			page 27


 750 0026 15       		.byte	(.L71-.L76)/2
 751 0027 15       		.byte	(.L71-.L76)/2
 752 0028 15       		.byte	(.L71-.L76)/2
 753 0029 15       		.byte	(.L71-.L76)/2
 754 002a 4C       		.byte	(.L73-.L76)/2
 755 002b 36       		.byte	(.L74-.L76)/2
 756 002c 15       		.byte	(.L71-.L76)/2
 757 002d 5A       		.byte	(.L75-.L76)/2
 758              	.LVL69:
 759              		.p2align 1
 760              	.L70:
 761              		.loc 1 234 5 view .LVU220
 762 002e 3B38     		subs	r0, r0, #59
 763              	.LVL70:
 764              		.loc 1 234 5 view .LVU221
 765 0030 80B2     		uxth	r0, r0
 766 0032 0123     		movs	r3, #1
 767 0034 8340     		lsls	r3, r3, r0
 768 0036 284A     		ldr	r2, .L88
 769 0038 1A40     		ands	r2, r2, r3
 770 003a 002A     		cmp	r2, #0
 771 003c 39D1     		bne	.L73
 772 003e 274A     		ldr	r2, .L88+4
 773 0040 1342     		tst	r3, r2
 774 0042 20D1     		bne	.L74
 775              	.L71:
 235:lvgl/src/misc/lv_style.c ****         case LV_STYLE_TRANSFORM_ZOOM:
 236:lvgl/src/misc/lv_style.c ****             value.num = LV_IMG_ZOOM_NONE;
 237:lvgl/src/misc/lv_style.c ****             break;
 238:lvgl/src/misc/lv_style.c ****         case LV_STYLE_BG_COLOR:
 239:lvgl/src/misc/lv_style.c ****             value.color = lv_color_white();
 240:lvgl/src/misc/lv_style.c ****             break;
 241:lvgl/src/misc/lv_style.c ****         case LV_STYLE_BG_GRAD_COLOR:
 242:lvgl/src/misc/lv_style.c ****         case LV_STYLE_BORDER_COLOR:
 243:lvgl/src/misc/lv_style.c ****         case LV_STYLE_SHADOW_COLOR:
 244:lvgl/src/misc/lv_style.c ****         case LV_STYLE_OUTLINE_COLOR:
 245:lvgl/src/misc/lv_style.c ****         case LV_STYLE_ARC_COLOR:
 246:lvgl/src/misc/lv_style.c ****         case LV_STYLE_LINE_COLOR:
 247:lvgl/src/misc/lv_style.c ****         case LV_STYLE_TEXT_COLOR:
 248:lvgl/src/misc/lv_style.c ****         case LV_STYLE_IMG_RECOLOR:
 249:lvgl/src/misc/lv_style.c ****             value.color = lv_color_black();
 250:lvgl/src/misc/lv_style.c ****             break;
 251:lvgl/src/misc/lv_style.c ****         case LV_STYLE_OPA:
 252:lvgl/src/misc/lv_style.c ****         case LV_STYLE_BORDER_OPA:
 253:lvgl/src/misc/lv_style.c ****         case LV_STYLE_TEXT_OPA:
 254:lvgl/src/misc/lv_style.c ****         case LV_STYLE_IMG_OPA:
 255:lvgl/src/misc/lv_style.c ****         case LV_STYLE_BG_IMG_OPA:
 256:lvgl/src/misc/lv_style.c ****         case LV_STYLE_OUTLINE_OPA:
 257:lvgl/src/misc/lv_style.c ****         case LV_STYLE_SHADOW_OPA:
 258:lvgl/src/misc/lv_style.c ****         case LV_STYLE_LINE_OPA:
 259:lvgl/src/misc/lv_style.c ****         case LV_STYLE_ARC_OPA:
 260:lvgl/src/misc/lv_style.c ****             value.num = LV_OPA_COVER;
 261:lvgl/src/misc/lv_style.c ****             break;
 262:lvgl/src/misc/lv_style.c ****         case LV_STYLE_BG_GRAD_STOP:
 263:lvgl/src/misc/lv_style.c ****             value.num = 255;
 264:lvgl/src/misc/lv_style.c ****             break;
 265:lvgl/src/misc/lv_style.c ****         case LV_STYLE_BORDER_SIDE:
ARM GAS  C:\usertemp\ccV4o48j.s 			page 28


 266:lvgl/src/misc/lv_style.c ****             value.num = LV_BORDER_SIDE_FULL;
 267:lvgl/src/misc/lv_style.c ****             break;
 268:lvgl/src/misc/lv_style.c ****         case LV_STYLE_TEXT_FONT:
 269:lvgl/src/misc/lv_style.c ****             value.ptr = LV_FONT_DEFAULT;
 270:lvgl/src/misc/lv_style.c ****             break;
 271:lvgl/src/misc/lv_style.c ****         case LV_STYLE_MAX_WIDTH:
 272:lvgl/src/misc/lv_style.c ****         case LV_STYLE_MAX_HEIGHT:
 273:lvgl/src/misc/lv_style.c ****             value.num = LV_COORD_MAX;
 274:lvgl/src/misc/lv_style.c ****             break;
 275:lvgl/src/misc/lv_style.c ****         default:
 276:lvgl/src/misc/lv_style.c ****             value.ptr = NULL;
 776              		.loc 1 276 13 is_stmt 1 view .LVU222
 777              		.loc 1 276 23 is_stmt 0 view .LVU223
 778 0044 0020     		movs	r0, #0
 779              	.LVL71:
 277:lvgl/src/misc/lv_style.c ****             value.num = 0;
 780              		.loc 1 277 13 is_stmt 1 view .LVU224
 278:lvgl/src/misc/lv_style.c ****             break;
 781              		.loc 1 278 13 view .LVU225
 279:lvgl/src/misc/lv_style.c ****     }
 280:lvgl/src/misc/lv_style.c **** 
 281:lvgl/src/misc/lv_style.c ****     return value;
 782              		.loc 1 281 5 view .LVU226
 282:lvgl/src/misc/lv_style.c **** }
 783              		.loc 1 282 1 is_stmt 0 view .LVU227
 784 0046 7047     		bx	lr
 785              	.LVL72:
 786              	.L69:
 234:lvgl/src/misc/lv_style.c ****         case LV_STYLE_TRANSFORM_ZOOM:
 787              		.loc 1 234 5 view .LVU228
 788 0048 41F25943 		movw	r3, #5209
 789 004c 9842     		cmp	r0, r3
 790 004e 40D0     		beq	.L79
 791 0050 22D8     		bhi	.L80
 792 0052 41F20303 		movw	r3, #4099
 793 0056 9842     		cmp	r0, r3
 794 0058 1BD0     		beq	.L81
 795 005a 16D8     		bhi	.L82
 796 005c 40F26243 		movw	r3, #1122
 797 0060 9842     		cmp	r0, r3
 798 0062 10D0     		beq	.L74
 799 0064 07D8     		bhi	.L83
 800 0066 40F25743 		movw	r3, #1111
 801 006a 9842     		cmp	r0, r3
 802 006c 21D0     		beq	.L73
 803 006e B0F58B6F 		cmp	r0, #1112
 804 0072 08D0     		beq	.L74
 805 0074 E6E7     		b	.L71
 806              	.L83:
 807 0076 40F63C03 		movw	r3, #2108
 808 007a 9842     		cmp	r0, r3
 809 007c 03D0     		beq	.L74
 810 007e 40F64503 		movw	r3, #2117
 811 0082 9842     		cmp	r0, r3
 812 0084 DED1     		bne	.L71
 813              	.LVL73:
 814              	.L74:
ARM GAS  C:\usertemp\ccV4o48j.s 			page 29


 260:lvgl/src/misc/lv_style.c ****             break;
 815              		.loc 1 260 13 is_stmt 1 view .LVU229
 260:lvgl/src/misc/lv_style.c ****             break;
 816              		.loc 1 260 23 is_stmt 0 view .LVU230
 817 0086 FF20     		movs	r0, #255
 261:lvgl/src/misc/lv_style.c ****         case LV_STYLE_BG_GRAD_STOP:
 818              		.loc 1 261 13 is_stmt 1 view .LVU231
 819 0088 7047     		bx	lr
 820              	.LVL74:
 821              	.L82:
 234:lvgl/src/misc/lv_style.c ****         case LV_STYLE_TRANSFORM_ZOOM:
 822              		.loc 1 234 5 is_stmt 0 view .LVU232
 823 008a 41F20603 		movw	r3, #4102
 824 008e 9842     		cmp	r0, r3
 825 0090 D8D1     		bne	.L71
 826              	.L81:
 273:lvgl/src/misc/lv_style.c ****             break;
 827              		.loc 1 273 13 is_stmt 1 view .LVU233
 273:lvgl/src/misc/lv_style.c ****             break;
 828              		.loc 1 273 23 is_stmt 0 view .LVU234
 829 0092 41F6FF70 		movw	r0, #8191
 830              	.LVL75:
 274:lvgl/src/misc/lv_style.c ****         default:
 831              		.loc 1 274 13 is_stmt 1 view .LVU235
 832 0096 7047     		bx	lr
 833              	.LVL76:
 834              	.L80:
 234:lvgl/src/misc/lv_style.c ****         case LV_STYLE_TRANSFORM_ZOOM:
 835              		.loc 1 234 5 is_stmt 0 view .LVU236
 836 0098 43F60E03 		movw	r3, #14350
 837 009c 9842     		cmp	r0, r3
 838 009e D1D1     		bne	.L71
 236:lvgl/src/misc/lv_style.c ****             break;
 839              		.loc 1 236 13 is_stmt 1 view .LVU237
 236:lvgl/src/misc/lv_style.c ****             break;
 840              		.loc 1 236 23 is_stmt 0 view .LVU238
 841 00a0 4FF48070 		mov	r0, #256
 842              	.LVL77:
 237:lvgl/src/misc/lv_style.c ****         case LV_STYLE_BG_COLOR:
 843              		.loc 1 237 13 is_stmt 1 view .LVU239
 844 00a4 7047     		bx	lr
 845              	.L78:
 239:lvgl/src/misc/lv_style.c ****             break;
 846              		.loc 1 239 13 view .LVU240
 847              	.LBB23:
 848              	.LBI23:
 849              		.file 3 "lvgl/src/misc/lv_color.h"
   1:lvgl/src/misc/lv_color.h **** /**
   2:lvgl/src/misc/lv_color.h ****  * @file lv_color.h
   3:lvgl/src/misc/lv_color.h ****  *
   4:lvgl/src/misc/lv_color.h ****  */
   5:lvgl/src/misc/lv_color.h **** 
   6:lvgl/src/misc/lv_color.h **** #ifndef LV_COLOR_H
   7:lvgl/src/misc/lv_color.h **** #define LV_COLOR_H
   8:lvgl/src/misc/lv_color.h **** 
   9:lvgl/src/misc/lv_color.h **** #ifdef __cplusplus
  10:lvgl/src/misc/lv_color.h **** extern "C" {
ARM GAS  C:\usertemp\ccV4o48j.s 			page 30


  11:lvgl/src/misc/lv_color.h **** #endif
  12:lvgl/src/misc/lv_color.h **** 
  13:lvgl/src/misc/lv_color.h **** /*********************
  14:lvgl/src/misc/lv_color.h ****  *      INCLUDES
  15:lvgl/src/misc/lv_color.h ****  *********************/
  16:lvgl/src/misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/misc/lv_color.h **** #include "lv_assert.h"
  18:lvgl/src/misc/lv_color.h **** #include "lv_math.h"
  19:lvgl/src/misc/lv_color.h **** #include "lv_types.h"
  20:lvgl/src/misc/lv_color.h **** 
  21:lvgl/src/misc/lv_color.h **** /*Error checking*/
  22:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  23:lvgl/src/misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  24:lvgl/src/misc/lv_color.h **** #endif
  25:lvgl/src/misc/lv_color.h **** 
  26:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH != 32 && LV_COLOR_SCREEN_TRANSP != 0
  27:lvgl/src/misc/lv_color.h **** #error "LV_COLOR_SCREEN_TRANSP requires LV_COLOR_DEPTH == 32. Set it in lv_conf.h"
  28:lvgl/src/misc/lv_color.h **** #endif
  29:lvgl/src/misc/lv_color.h **** 
  30:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  31:lvgl/src/misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  32:lvgl/src/misc/lv_color.h **** #endif
  33:lvgl/src/misc/lv_color.h **** 
  34:lvgl/src/misc/lv_color.h **** #include <stdint.h>
  35:lvgl/src/misc/lv_color.h **** 
  36:lvgl/src/misc/lv_color.h **** /*********************
  37:lvgl/src/misc/lv_color.h ****  *      DEFINES
  38:lvgl/src/misc/lv_color.h ****  *********************/
  39:lvgl/src/misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_DEPTH);
  40:lvgl/src/misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_16_SWAP);
  41:lvgl/src/misc/lv_color.h **** 
  42:lvgl/src/misc/lv_color.h **** /**
  43:lvgl/src/misc/lv_color.h ****  * Opacity percentages.
  44:lvgl/src/misc/lv_color.h ****  */
  45:lvgl/src/misc/lv_color.h **** enum {
  46:lvgl/src/misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  47:lvgl/src/misc/lv_color.h ****     LV_OPA_0      = 0,
  48:lvgl/src/misc/lv_color.h ****     LV_OPA_10     = 25,
  49:lvgl/src/misc/lv_color.h ****     LV_OPA_20     = 51,
  50:lvgl/src/misc/lv_color.h ****     LV_OPA_30     = 76,
  51:lvgl/src/misc/lv_color.h ****     LV_OPA_40     = 102,
  52:lvgl/src/misc/lv_color.h ****     LV_OPA_50     = 127,
  53:lvgl/src/misc/lv_color.h ****     LV_OPA_60     = 153,
  54:lvgl/src/misc/lv_color.h ****     LV_OPA_70     = 178,
  55:lvgl/src/misc/lv_color.h ****     LV_OPA_80     = 204,
  56:lvgl/src/misc/lv_color.h ****     LV_OPA_90     = 229,
  57:lvgl/src/misc/lv_color.h ****     LV_OPA_100    = 255,
  58:lvgl/src/misc/lv_color.h ****     LV_OPA_COVER  = 255,
  59:lvgl/src/misc/lv_color.h **** };
  60:lvgl/src/misc/lv_color.h **** 
  61:lvgl/src/misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  62:lvgl/src/misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  63:lvgl/src/misc/lv_color.h **** 
  64:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  65:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SIZE 8
  66:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  67:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SIZE 8
ARM GAS  C:\usertemp\ccV4o48j.s 			page 31


  68:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  69:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SIZE 16
  70:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
  71:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SIZE 32
  72:lvgl/src/misc/lv_color.h **** #else
  73:lvgl/src/misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  74:lvgl/src/misc/lv_color.h **** #endif
  75:lvgl/src/misc/lv_color.h **** 
  76:lvgl/src/misc/lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  77:lvgl/src/misc/lv_color.h **** /**
  78:lvgl/src/misc/lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  79:lvgl/src/misc/lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  80:lvgl/src/misc/lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  81:lvgl/src/misc/lv_color.h **** */
  82:lvgl/src/misc/lv_color.h **** #ifdef _MSC_VER
  83:lvgl/src/misc/lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  84:lvgl/src/misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  85:lvgl/src/misc/lv_color.h **** #endif
  86:lvgl/src/misc/lv_color.h **** #else
  87:lvgl/src/misc/lv_color.h **** #if __cplusplus >= 201103L
  88:lvgl/src/misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  89:lvgl/src/misc/lv_color.h **** #endif
  90:lvgl/src/misc/lv_color.h **** #endif
  91:lvgl/src/misc/lv_color.h **** #endif /*__cplusplus*/
  92:lvgl/src/misc/lv_color.h **** 
  93:lvgl/src/misc/lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
  94:lvgl/src/misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
  95:lvgl/src/misc/lv_color.h **** #endif
  96:lvgl/src/misc/lv_color.h **** 
  97:lvgl/src/misc/lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
  98:lvgl/src/misc/lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
  99:lvgl/src/misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
 100:lvgl/src/misc/lv_color.h **** #else
 101:lvgl/src/misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
 102:lvgl/src/misc/lv_color.h **** #endif
 103:lvgl/src/misc/lv_color.h **** 
 104:lvgl/src/misc/lv_color.h **** /*---------------------------------------
 105:lvgl/src/misc/lv_color.h ****  * Macros for all existing color depths
 106:lvgl/src/misc/lv_color.h ****  * to set/get values of the color channels
 107:lvgl/src/misc/lv_color.h ****  *------------------------------------------*/
 108:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 109:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 110:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 111:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 112:lvgl/src/misc/lv_color.h **** 
 113:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 114:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 115:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 116:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 117:lvgl/src/misc/lv_color.h **** 
 118:lvgl/src/misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 119:lvgl/src/misc/lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 120:lvgl/src/misc/lv_color.h **** 
 121:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 122:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 123:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 124:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
ARM GAS  C:\usertemp\ccV4o48j.s 			page 32


 125:lvgl/src/misc/lv_color.h **** 
 126:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 127:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 128:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 129:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 130:lvgl/src/misc/lv_color.h **** 
 131:lvgl/src/misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 132:lvgl/src/misc/lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 133:lvgl/src/misc/lv_color.h **** 
 134:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 135:lvgl/src/misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 136:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 137:lvgl/src/misc/lv_color.h **** #else
 138:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 139:lvgl/src/misc/lv_color.h **** #endif
 140:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 141:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 142:lvgl/src/misc/lv_color.h **** 
 143:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 144:lvgl/src/misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 145:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 146:lvgl/src/misc/lv_color.h **** #else
 147:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 148:lvgl/src/misc/lv_color.h **** #endif
 149:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 150:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 151:lvgl/src/misc/lv_color.h **** 
 152:lvgl/src/misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 153:lvgl/src/misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 154:lvgl/src/misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 155:lvgl/src/misc/lv_color.h **** #else
 156:lvgl/src/misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 157:lvgl/src/misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 158:lvgl/src/misc/lv_color.h **** #endif
 159:lvgl/src/misc/lv_color.h **** 
 160:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 161:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 162:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 163:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 164:lvgl/src/misc/lv_color.h **** 
 165:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 166:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 167:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 168:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 169:lvgl/src/misc/lv_color.h **** 
 170:lvgl/src/misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 171:lvgl/src/misc/lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 172:lvgl/src/misc/lv_color.h **** 
 173:lvgl/src/misc/lv_color.h **** /*---------------------------------------
 174:lvgl/src/misc/lv_color.h ****  * Macros for the current color depth
 175:lvgl/src/misc/lv_color.h ****  * to set/get values of the color channels
 176:lvgl/src/misc/lv_color.h ****  *------------------------------------------*/
 177:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 178:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 179:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 180:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 181:lvgl/src/misc/lv_color.h **** 
ARM GAS  C:\usertemp\ccV4o48j.s 			page 33


 182:lvgl/src/misc/lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 183:lvgl/src/misc/lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 184:lvgl/src/misc/lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 185:lvgl/src/misc/lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 186:lvgl/src/misc/lv_color.h **** 
 187:lvgl/src/misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 188:lvgl/src/misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 189:lvgl/src/misc/lv_color.h **** 
 190:lvgl/src/misc/lv_color.h **** /**********************
 191:lvgl/src/misc/lv_color.h ****  *      TYPEDEFS
 192:lvgl/src/misc/lv_color.h ****  **********************/
 193:lvgl/src/misc/lv_color.h **** 
 194:lvgl/src/misc/lv_color.h **** typedef union {
 195:lvgl/src/misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 196:lvgl/src/misc/lv_color.h ****     union {
 197:lvgl/src/misc/lv_color.h ****         uint8_t blue : 1;
 198:lvgl/src/misc/lv_color.h ****         uint8_t green : 1;
 199:lvgl/src/misc/lv_color.h ****         uint8_t red : 1;
 200:lvgl/src/misc/lv_color.h ****     } ch;
 201:lvgl/src/misc/lv_color.h **** } lv_color1_t;
 202:lvgl/src/misc/lv_color.h **** 
 203:lvgl/src/misc/lv_color.h **** typedef union {
 204:lvgl/src/misc/lv_color.h ****     struct {
 205:lvgl/src/misc/lv_color.h ****         uint8_t blue : 2;
 206:lvgl/src/misc/lv_color.h ****         uint8_t green : 3;
 207:lvgl/src/misc/lv_color.h ****         uint8_t red : 3;
 208:lvgl/src/misc/lv_color.h ****     } ch;
 209:lvgl/src/misc/lv_color.h ****     uint8_t full;
 210:lvgl/src/misc/lv_color.h **** } lv_color8_t;
 211:lvgl/src/misc/lv_color.h **** 
 212:lvgl/src/misc/lv_color.h **** typedef union {
 213:lvgl/src/misc/lv_color.h ****     struct {
 214:lvgl/src/misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 215:lvgl/src/misc/lv_color.h ****         uint16_t blue : 5;
 216:lvgl/src/misc/lv_color.h ****         uint16_t green : 6;
 217:lvgl/src/misc/lv_color.h ****         uint16_t red : 5;
 218:lvgl/src/misc/lv_color.h **** #else
 219:lvgl/src/misc/lv_color.h ****         uint16_t green_h : 3;
 220:lvgl/src/misc/lv_color.h ****         uint16_t red : 5;
 221:lvgl/src/misc/lv_color.h ****         uint16_t blue : 5;
 222:lvgl/src/misc/lv_color.h ****         uint16_t green_l : 3;
 223:lvgl/src/misc/lv_color.h **** #endif
 224:lvgl/src/misc/lv_color.h ****     } ch;
 225:lvgl/src/misc/lv_color.h ****     uint16_t full;
 226:lvgl/src/misc/lv_color.h **** } lv_color16_t;
 227:lvgl/src/misc/lv_color.h **** 
 228:lvgl/src/misc/lv_color.h **** typedef union {
 229:lvgl/src/misc/lv_color.h ****     struct {
 230:lvgl/src/misc/lv_color.h ****         uint8_t blue;
 231:lvgl/src/misc/lv_color.h ****         uint8_t green;
 232:lvgl/src/misc/lv_color.h ****         uint8_t red;
 233:lvgl/src/misc/lv_color.h ****         uint8_t alpha;
 234:lvgl/src/misc/lv_color.h ****     } ch;
 235:lvgl/src/misc/lv_color.h ****     uint32_t full;
 236:lvgl/src/misc/lv_color.h **** } lv_color32_t;
 237:lvgl/src/misc/lv_color.h **** 
 238:lvgl/src/misc/lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
ARM GAS  C:\usertemp\ccV4o48j.s 			page 34


 239:lvgl/src/misc/lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 240:lvgl/src/misc/lv_color.h **** 
 241:lvgl/src/misc/lv_color.h **** typedef struct {
 242:lvgl/src/misc/lv_color.h ****     uint16_t h;
 243:lvgl/src/misc/lv_color.h ****     uint8_t s;
 244:lvgl/src/misc/lv_color.h ****     uint8_t v;
 245:lvgl/src/misc/lv_color.h **** } lv_color_hsv_t;
 246:lvgl/src/misc/lv_color.h **** 
 247:lvgl/src/misc/lv_color.h **** //! @cond Doxygen_Suppress
 248:lvgl/src/misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 249:lvgl/src/misc/lv_color.h **** typedef uint8_t lv_opa_t;
 250:lvgl/src/misc/lv_color.h **** //! @endcond
 251:lvgl/src/misc/lv_color.h **** 
 252:lvgl/src/misc/lv_color.h **** struct _lv_color_filter_dsc_t;
 253:lvgl/src/misc/lv_color.h **** 
 254:lvgl/src/misc/lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 255:lvgl/src/misc/lv_color.h **** 
 256:lvgl/src/misc/lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 257:lvgl/src/misc/lv_color.h ****     lv_color_filter_cb_t filter_cb;
 258:lvgl/src/misc/lv_color.h ****     void * user_data;
 259:lvgl/src/misc/lv_color.h **** } lv_color_filter_dsc_t;
 260:lvgl/src/misc/lv_color.h **** 
 261:lvgl/src/misc/lv_color.h **** 
 262:lvgl/src/misc/lv_color.h **** typedef enum {
 263:lvgl/src/misc/lv_color.h ****     LV_PALETTE_RED,
 264:lvgl/src/misc/lv_color.h ****     LV_PALETTE_PINK,
 265:lvgl/src/misc/lv_color.h ****     LV_PALETTE_PURPLE,
 266:lvgl/src/misc/lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 267:lvgl/src/misc/lv_color.h ****     LV_PALETTE_INDIGO,
 268:lvgl/src/misc/lv_color.h ****     LV_PALETTE_BLUE,
 269:lvgl/src/misc/lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 270:lvgl/src/misc/lv_color.h ****     LV_PALETTE_CYAN,
 271:lvgl/src/misc/lv_color.h ****     LV_PALETTE_TEAL,
 272:lvgl/src/misc/lv_color.h ****     LV_PALETTE_GREEN,
 273:lvgl/src/misc/lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 274:lvgl/src/misc/lv_color.h ****     LV_PALETTE_LIME,
 275:lvgl/src/misc/lv_color.h ****     LV_PALETTE_YELLOW,
 276:lvgl/src/misc/lv_color.h ****     LV_PALETTE_AMBER,
 277:lvgl/src/misc/lv_color.h ****     LV_PALETTE_ORANGE,
 278:lvgl/src/misc/lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 279:lvgl/src/misc/lv_color.h ****     LV_PALETTE_BROWN,
 280:lvgl/src/misc/lv_color.h ****     LV_PALETTE_BLUE_GREY,
 281:lvgl/src/misc/lv_color.h ****     LV_PALETTE_GREY,
 282:lvgl/src/misc/lv_color.h ****     _LV_PALETTE_LAST,
 283:lvgl/src/misc/lv_color.h ****     LV_PALETTE_NONE = 0xff,
 284:lvgl/src/misc/lv_color.h **** } lv_palette_t;
 285:lvgl/src/misc/lv_color.h **** 
 286:lvgl/src/misc/lv_color.h **** /**********************
 287:lvgl/src/misc/lv_color.h ****  * GLOBAL PROTOTYPES
 288:lvgl/src/misc/lv_color.h ****  **********************/
 289:lvgl/src/misc/lv_color.h **** 
 290:lvgl/src/misc/lv_color.h **** /*In color conversations:
 291:lvgl/src/misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 292:lvgl/src/misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 293:lvgl/src/misc/lv_color.h ****  *         8 bit Red has 3 bits
 294:lvgl/src/misc/lv_color.h ****  *        ----------------------
 295:lvgl/src/misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
ARM GAS  C:\usertemp\ccV4o48j.s 			page 35


 296:lvgl/src/misc/lv_color.h ****  *
 297:lvgl/src/misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 298:lvgl/src/misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 299:lvgl/src/misc/lv_color.h ****  *        16 bit Red has 5 bits
 300:lvgl/src/misc/lv_color.h ****  *        ----------------------
 301:lvgl/src/misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 302:lvgl/src/misc/lv_color.h ****  */
 303:lvgl/src/misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 304:lvgl/src/misc/lv_color.h **** {
 305:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 306:lvgl/src/misc/lv_color.h ****     return color.full;
 307:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 308:lvgl/src/misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 309:lvgl/src/misc/lv_color.h ****         return 1;
 310:lvgl/src/misc/lv_color.h ****     }
 311:lvgl/src/misc/lv_color.h ****     else {
 312:lvgl/src/misc/lv_color.h ****         return 0;
 313:lvgl/src/misc/lv_color.h ****     }
 314:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 315:lvgl/src/misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 316:lvgl/src/misc/lv_color.h ****         return 1;
 317:lvgl/src/misc/lv_color.h ****     }
 318:lvgl/src/misc/lv_color.h ****     else {
 319:lvgl/src/misc/lv_color.h ****         return 0;
 320:lvgl/src/misc/lv_color.h ****     }
 321:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 322:lvgl/src/misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 323:lvgl/src/misc/lv_color.h ****         return 1;
 324:lvgl/src/misc/lv_color.h ****     }
 325:lvgl/src/misc/lv_color.h ****     else {
 326:lvgl/src/misc/lv_color.h ****         return 0;
 327:lvgl/src/misc/lv_color.h ****     }
 328:lvgl/src/misc/lv_color.h **** #endif
 329:lvgl/src/misc/lv_color.h **** }
 330:lvgl/src/misc/lv_color.h **** 
 331:lvgl/src/misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 332:lvgl/src/misc/lv_color.h **** {
 333:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 334:lvgl/src/misc/lv_color.h ****     if(color.full == 0)
 335:lvgl/src/misc/lv_color.h ****         return 0;
 336:lvgl/src/misc/lv_color.h ****     else
 337:lvgl/src/misc/lv_color.h ****         return 0xFF;
 338:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 339:lvgl/src/misc/lv_color.h ****     return color.full;
 340:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 341:lvgl/src/misc/lv_color.h ****     lv_color8_t ret;
 342:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 343:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 344:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 345:lvgl/src/misc/lv_color.h ****     return ret.full;
 346:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 347:lvgl/src/misc/lv_color.h ****     lv_color8_t ret;
 348:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 349:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 350:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 351:lvgl/src/misc/lv_color.h ****     return ret.full;
 352:lvgl/src/misc/lv_color.h **** #endif
ARM GAS  C:\usertemp\ccV4o48j.s 			page 36


 353:lvgl/src/misc/lv_color.h **** }
 354:lvgl/src/misc/lv_color.h **** 
 355:lvgl/src/misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 356:lvgl/src/misc/lv_color.h **** {
 357:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 358:lvgl/src/misc/lv_color.h ****     if(color.full == 0)
 359:lvgl/src/misc/lv_color.h ****         return 0;
 360:lvgl/src/misc/lv_color.h ****     else
 361:lvgl/src/misc/lv_color.h ****         return 0xFFFF;
 362:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 363:lvgl/src/misc/lv_color.h ****     lv_color16_t ret;
 364:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 365:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 366:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 367:lvgl/src/misc/lv_color.h ****     return ret.full;
 368:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 369:lvgl/src/misc/lv_color.h ****     return color.full;
 370:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 371:lvgl/src/misc/lv_color.h ****     lv_color16_t ret;
 372:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
 373:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 374:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 375:lvgl/src/misc/lv_color.h ****     return ret.full;
 376:lvgl/src/misc/lv_color.h **** #endif
 377:lvgl/src/misc/lv_color.h **** }
 378:lvgl/src/misc/lv_color.h **** 
 379:lvgl/src/misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 380:lvgl/src/misc/lv_color.h **** {
 381:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 382:lvgl/src/misc/lv_color.h ****     if(color.full == 0)
 383:lvgl/src/misc/lv_color.h ****         return 0xFF000000;
 384:lvgl/src/misc/lv_color.h ****     else
 385:lvgl/src/misc/lv_color.h ****         return 0xFFFFFFFF;
 386:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 387:lvgl/src/misc/lv_color.h ****     lv_color32_t ret;
 388:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 389:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 390:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 391:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 392:lvgl/src/misc/lv_color.h ****     return ret.full;
 393:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 394:lvgl/src/misc/lv_color.h ****     /**
 395:lvgl/src/misc/lv_color.h ****      * The floating point math for conversion is:
 396:lvgl/src/misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 397:lvgl/src/misc/lv_color.h ****      * The faster integer math for conversion is:
 398:lvgl/src/misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 399:lvgl/src/misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 400:lvgl/src/misc/lv_color.h ****      *
 401:lvgl/src/misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 402:lvgl/src/misc/lv_color.h ****      *
 403:lvgl/src/misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 404:lvgl/src/misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 405:lvgl/src/misc/lv_color.h ****      *       0           8      7        7       255
 406:lvgl/src/misc/lv_color.h ****      *       1          16     14        7       255
 407:lvgl/src/misc/lv_color.h ****      *       2          32     28        7       255
 408:lvgl/src/misc/lv_color.h ****      *       3          65     25        3       255
 409:lvgl/src/misc/lv_color.h ****      *       4         131     19        1       255
ARM GAS  C:\usertemp\ccV4o48j.s 			page 37


 410:lvgl/src/misc/lv_color.h ****      *       5         263      7        0       255
 411:lvgl/src/misc/lv_color.h ****      *
 412:lvgl/src/misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 413:lvgl/src/misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 414:lvgl/src/misc/lv_color.h ****      *       0           4      3        3       255
 415:lvgl/src/misc/lv_color.h ****      *       1           8      6        3       255
 416:lvgl/src/misc/lv_color.h ****      *       2          16     12        3       255
 417:lvgl/src/misc/lv_color.h ****      *       3          32     24        3       255
 418:lvgl/src/misc/lv_color.h ****      *       4          64     48        3       255
 419:lvgl/src/misc/lv_color.h ****      *       5         129     33        1       255
 420:lvgl/src/misc/lv_color.h ****      *       6         259      3        0       255
 421:lvgl/src/misc/lv_color.h ****      */
 422:lvgl/src/misc/lv_color.h **** 
 423:lvgl/src/misc/lv_color.h ****     lv_color32_t ret;
 424:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 425:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 426:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 427:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 428:lvgl/src/misc/lv_color.h ****     return ret.full;
 429:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 430:lvgl/src/misc/lv_color.h ****     return color.full;
 431:lvgl/src/misc/lv_color.h **** #endif
 432:lvgl/src/misc/lv_color.h **** }
 433:lvgl/src/misc/lv_color.h **** 
 434:lvgl/src/misc/lv_color.h **** //! @cond Doxygen_Suppress
 435:lvgl/src/misc/lv_color.h **** 
 436:lvgl/src/misc/lv_color.h **** /**
 437:lvgl/src/misc/lv_color.h ****  * Mix two colors with a given ratio.
 438:lvgl/src/misc/lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 439:lvgl/src/misc/lv_color.h ****  * @param c2 the second color to mix (usually the background)
 440:lvgl/src/misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 441:lvgl/src/misc/lv_color.h ****  * @return the mixed color
 442:lvgl/src/misc/lv_color.h ****  */
 443:lvgl/src/misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 444:lvgl/src/misc/lv_color.h **** {
 445:lvgl/src/misc/lv_color.h ****     lv_color_t ret;
 446:lvgl/src/misc/lv_color.h **** 
 447:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_16_SWAP == 0
 448:lvgl/src/misc/lv_color.h ****     /*Source: https://stackoverflow.com/a/50012418/1999969*/
 449:lvgl/src/misc/lv_color.h ****     mix = (mix + 4) >> 3;
 450:lvgl/src/misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 451:lvgl/src/misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 452:lvgl/src/misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | ((uint32_t)c1.full << 16)) & 0x7E0F81F;
 453:lvgl/src/misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 454:lvgl/src/misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 455:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 456:lvgl/src/misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 457:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 458:lvgl/src/misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 459:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 460:lvgl/src/misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 461:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 462:lvgl/src/misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 463:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 464:lvgl/src/misc/lv_color.h **** #else
 465:lvgl/src/misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 466:lvgl/src/misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
ARM GAS  C:\usertemp\ccV4o48j.s 			page 38


 467:lvgl/src/misc/lv_color.h **** #endif
 468:lvgl/src/misc/lv_color.h **** 
 469:lvgl/src/misc/lv_color.h ****     return ret;
 470:lvgl/src/misc/lv_color.h **** }
 471:lvgl/src/misc/lv_color.h **** 
 472:lvgl/src/misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 473:lvgl/src/misc/lv_color.h **** {
 474:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 475:lvgl/src/misc/lv_color.h ****     out[0] = (uint16_t)LV_COLOR_GET_R(c) * mix;
 476:lvgl/src/misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 477:lvgl/src/misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 478:lvgl/src/misc/lv_color.h **** #else
 479:lvgl/src/misc/lv_color.h ****     (void) mix;
 480:lvgl/src/misc/lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 481:lvgl/src/misc/lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 482:lvgl/src/misc/lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 483:lvgl/src/misc/lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 484:lvgl/src/misc/lv_color.h **** #endif
 485:lvgl/src/misc/lv_color.h **** 
 486:lvgl/src/misc/lv_color.h **** }
 487:lvgl/src/misc/lv_color.h **** 
 488:lvgl/src/misc/lv_color.h **** /**
 489:lvgl/src/misc/lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 490:lvgl/src/misc/lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 491:lvgl/src/misc/lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 492:lvgl/src/misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 493:lvgl/src/misc/lv_color.h ****  *            Should be modified like mix = `255 - mix`
 494:lvgl/src/misc/lv_color.h ****  * @return the mixed color
 495:lvgl/src/misc/lv_color.h ****  * @note 255 won't give clearly `c1`.
 496:lvgl/src/misc/lv_color.h ****  */
 497:lvgl/src/misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix_premult(uint16_t * premult_c1, lv_color
 498:lvgl/src/misc/lv_color.h **** {
 499:lvgl/src/misc/lv_color.h ****     lv_color_t ret;
 500:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 501:lvgl/src/misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8 or 32*/
 502:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROUND_OF
 503:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 504:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 505:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 506:lvgl/src/misc/lv_color.h **** #else
 507:lvgl/src/misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 508:lvgl/src/misc/lv_color.h ****     /*Restore color1*/
 509:lvgl/src/misc/lv_color.h ****     lv_color_t c1;
 510:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
 511:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 512:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 513:lvgl/src/misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
 514:lvgl/src/misc/lv_color.h **** #endif
 515:lvgl/src/misc/lv_color.h **** 
 516:lvgl/src/misc/lv_color.h ****     return ret;
 517:lvgl/src/misc/lv_color.h **** }
 518:lvgl/src/misc/lv_color.h **** 
 519:lvgl/src/misc/lv_color.h **** /**
 520:lvgl/src/misc/lv_color.h ****  * Mix two colors. Both color can have alpha value.
 521:lvgl/src/misc/lv_color.h ****  * @param bg_color background color
 522:lvgl/src/misc/lv_color.h ****  * @param bg_opa alpha of the background color
 523:lvgl/src/misc/lv_color.h ****  * @param fg_color foreground color
ARM GAS  C:\usertemp\ccV4o48j.s 			page 39


 524:lvgl/src/misc/lv_color.h ****  * @param fg_opa alpha of the foreground color
 525:lvgl/src/misc/lv_color.h ****  * @param res_color the result color
 526:lvgl/src/misc/lv_color.h ****  * @param res_opa the result opacity
 527:lvgl/src/misc/lv_color.h ****  */
 528:lvgl/src/misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 529:lvgl/src/misc/lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
 530:lvgl/src/misc/lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 531:lvgl/src/misc/lv_color.h **** {
 532:lvgl/src/misc/lv_color.h ****     /*Pick the foreground if it's fully opaque or the Background is fully transparent*/
 533:lvgl/src/misc/lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 534:lvgl/src/misc/lv_color.h ****         res_color->full = fg_color.full;
 535:lvgl/src/misc/lv_color.h ****         *res_opa = fg_opa;
 536:lvgl/src/misc/lv_color.h ****     }
 537:lvgl/src/misc/lv_color.h ****     /*Transparent foreground: use the Background*/
 538:lvgl/src/misc/lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 539:lvgl/src/misc/lv_color.h ****         res_color->full = bg_color.full;
 540:lvgl/src/misc/lv_color.h ****         *res_opa = bg_opa;
 541:lvgl/src/misc/lv_color.h ****     }
 542:lvgl/src/misc/lv_color.h ****     /*Opaque background: use simple mix*/
 543:lvgl/src/misc/lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 544:lvgl/src/misc/lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 545:lvgl/src/misc/lv_color.h ****         *res_opa = LV_OPA_COVER;
 546:lvgl/src/misc/lv_color.h ****     }
 547:lvgl/src/misc/lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 548:lvgl/src/misc/lv_color.h ****     else {
 549:lvgl/src/misc/lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
 550:lvgl/src/misc/lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 551:lvgl/src/misc/lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 552:lvgl/src/misc/lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 553:lvgl/src/misc/lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 554:lvgl/src/misc/lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
 555:lvgl/src/misc/lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 556:lvgl/src/misc/lv_color.h **** 
 557:lvgl/src/misc/lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
 558:lvgl/src/misc/lv_color.h ****            bg_color.full != bg_color_save.full) {
 559:lvgl/src/misc/lv_color.h ****             fg_opa_save        = fg_opa;
 560:lvgl/src/misc/lv_color.h ****             bg_opa_save        = bg_opa;
 561:lvgl/src/misc/lv_color.h ****             fg_color_save.full = fg_color.full;
 562:lvgl/src/misc/lv_color.h ****             bg_color_save.full = bg_color.full;
 563:lvgl/src/misc/lv_color.h ****             /*Info:
 564:lvgl/src/misc/lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
 565:lvgl/src/misc/lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
 566:lvgl/src/misc/lv_color.h ****             LV_ASSERT(res_opa_saved != 0);
 567:lvgl/src/misc/lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
 568:lvgl/src/misc/lv_color.h ****             res_color_saved = lv_color_mix(fg_color, bg_color, ratio);
 569:lvgl/src/misc/lv_color.h **** 
 570:lvgl/src/misc/lv_color.h ****         }
 571:lvgl/src/misc/lv_color.h **** 
 572:lvgl/src/misc/lv_color.h ****         res_color->full = res_color_saved.full;
 573:lvgl/src/misc/lv_color.h ****         *res_opa = res_opa_saved;
 574:lvgl/src/misc/lv_color.h ****     }
 575:lvgl/src/misc/lv_color.h **** }
 576:lvgl/src/misc/lv_color.h **** 
 577:lvgl/src/misc/lv_color.h **** //! @endcond
 578:lvgl/src/misc/lv_color.h **** 
 579:lvgl/src/misc/lv_color.h **** /**
 580:lvgl/src/misc/lv_color.h ****  * Get the brightness of a color
ARM GAS  C:\usertemp\ccV4o48j.s 			page 40


 581:lvgl/src/misc/lv_color.h ****  * @param color a color
 582:lvgl/src/misc/lv_color.h ****  * @return the brightness [0..255]
 583:lvgl/src/misc/lv_color.h ****  */
 584:lvgl/src/misc/lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 585:lvgl/src/misc/lv_color.h **** {
 586:lvgl/src/misc/lv_color.h ****     lv_color32_t c32;
 587:lvgl/src/misc/lv_color.h ****     c32.full        = lv_color_to32(color);
 588:lvgl/src/misc/lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 589:lvgl/src/misc/lv_color.h ****     return (uint8_t)(bright >> 3);
 590:lvgl/src/misc/lv_color.h **** }
 591:lvgl/src/misc/lv_color.h **** 
 592:lvgl/src/misc/lv_color.h **** static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)
 593:lvgl/src/misc/lv_color.h **** {
 594:lvgl/src/misc/lv_color.h ****     return _LV_COLOR_MAKE_TYPE_HELPER LV_COLOR_MAKE(r, g, b);
 595:lvgl/src/misc/lv_color.h **** }
 596:lvgl/src/misc/lv_color.h **** 
 597:lvgl/src/misc/lv_color.h **** static inline lv_color_t lv_color_hex(uint32_t c)
 598:lvgl/src/misc/lv_color.h **** {
 599:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 16
 600:lvgl/src/misc/lv_color.h ****     lv_color_t r;
 601:lvgl/src/misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 602:lvgl/src/misc/lv_color.h ****     /* Convert a 4 bytes per pixel in format ARGB32 to R5G6B5 format
 603:lvgl/src/misc/lv_color.h ****         naive way (by calling lv_color_make with components):
 604:lvgl/src/misc/lv_color.h ****                     r = ((c & 0xFF0000) >> 19)
 605:lvgl/src/misc/lv_color.h ****                     g = ((c & 0xFF00) >> 10)
 606:lvgl/src/misc/lv_color.h ****                     b = ((c & 0xFF) >> 3)
 607:lvgl/src/misc/lv_color.h ****                     rgb565 = (r << 11) | (g << 5) | b
 608:lvgl/src/misc/lv_color.h ****         That's 3 mask, 5 bitshift and 2 or operations
 609:lvgl/src/misc/lv_color.h **** 
 610:lvgl/src/misc/lv_color.h ****         A bit better:
 611:lvgl/src/misc/lv_color.h ****                     r = ((c & 0xF80000) >> 8)
 612:lvgl/src/misc/lv_color.h ****                     g = ((c & 0xFC00) >> 5)
 613:lvgl/src/misc/lv_color.h ****                     b = ((c & 0xFF) >> 3)
 614:lvgl/src/misc/lv_color.h ****                     rgb565 = r | g | b
 615:lvgl/src/misc/lv_color.h ****         That's 3 mask, 3 bitshifts and 2 or operations */
 616:lvgl/src/misc/lv_color.h ****     r.full = (uint16_t)(((c & 0xF80000) >> 8) | ((c & 0xFC00) >> 5) | ((c & 0xFF) >> 3));
 617:lvgl/src/misc/lv_color.h **** #else
 618:lvgl/src/misc/lv_color.h ****     /* We want: rrrr rrrr GGGg gggg bbbb bbbb => gggb bbbb rrrr rGGG */
 619:lvgl/src/misc/lv_color.h ****     r.full = (uint16_t)(((c & 0xF80000) >> 16) | ((c & 0xFC00) >> 13) | ((c & 0x1C00) << 3) | ((c &
 620:lvgl/src/misc/lv_color.h **** #endif
 621:lvgl/src/misc/lv_color.h ****     return r;
 622:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 623:lvgl/src/misc/lv_color.h ****     lv_color_t r;
 624:lvgl/src/misc/lv_color.h ****     r.full = c | 0xFF000000;
 625:lvgl/src/misc/lv_color.h ****     return r;
 626:lvgl/src/misc/lv_color.h **** #else /*LV_COLOR_DEPTH == 8*/
 627:lvgl/src/misc/lv_color.h ****     return lv_color_make((uint8_t)((c >> 16) & 0xFF), (uint8_t)((c >> 8) & 0xFF), (uint8_t)(c & 0xF
 628:lvgl/src/misc/lv_color.h **** #endif
 629:lvgl/src/misc/lv_color.h **** }
 630:lvgl/src/misc/lv_color.h **** 
 631:lvgl/src/misc/lv_color.h **** static inline lv_color_t lv_color_hex3(uint32_t c)
 632:lvgl/src/misc/lv_color.h **** {
 633:lvgl/src/misc/lv_color.h ****     return lv_color_make((uint8_t)(((c >> 4) & 0xF0) | ((c >> 8) & 0xF)), (uint8_t)((c & 0xF0) | ((
 634:lvgl/src/misc/lv_color.h ****                          (uint8_t)((c & 0xF) | ((c & 0xF) << 4)));
 635:lvgl/src/misc/lv_color.h **** }
 636:lvgl/src/misc/lv_color.h **** 
 637:lvgl/src/misc/lv_color.h **** static inline void lv_color_filter_dsc_init(lv_color_filter_dsc_t * dsc, lv_color_filter_cb_t cb)
ARM GAS  C:\usertemp\ccV4o48j.s 			page 41


 638:lvgl/src/misc/lv_color.h **** {
 639:lvgl/src/misc/lv_color.h ****     dsc->filter_cb = cb;
 640:lvgl/src/misc/lv_color.h **** }
 641:lvgl/src/misc/lv_color.h **** 
 642:lvgl/src/misc/lv_color.h **** //! @cond Doxygen_Suppress
 643:lvgl/src/misc/lv_color.h **** //!
 644:lvgl/src/misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM void lv_color_fill(lv_color_t * buf, lv_color_t color, uint32_t px_num);
 645:lvgl/src/misc/lv_color.h **** 
 646:lvgl/src/misc/lv_color.h **** //! @endcond
 647:lvgl/src/misc/lv_color.h **** lv_color_t lv_color_lighten(lv_color_t c, lv_opa_t lvl);
 648:lvgl/src/misc/lv_color.h **** 
 649:lvgl/src/misc/lv_color.h **** lv_color_t lv_color_darken(lv_color_t c, lv_opa_t lvl);
 650:lvgl/src/misc/lv_color.h **** 
 651:lvgl/src/misc/lv_color.h **** lv_color_t lv_color_change_lightness(lv_color_t c, lv_opa_t lvl);
 652:lvgl/src/misc/lv_color.h **** 
 653:lvgl/src/misc/lv_color.h **** /**
 654:lvgl/src/misc/lv_color.h ****  * Convert a HSV color to RGB
 655:lvgl/src/misc/lv_color.h ****  * @param h hue [0..359]
 656:lvgl/src/misc/lv_color.h ****  * @param s saturation [0..100]
 657:lvgl/src/misc/lv_color.h ****  * @param v value [0..100]
 658:lvgl/src/misc/lv_color.h ****  * @return the given RGB color in RGB (with LV_COLOR_DEPTH depth)
 659:lvgl/src/misc/lv_color.h ****  */
 660:lvgl/src/misc/lv_color.h **** lv_color_t lv_color_hsv_to_rgb(uint16_t h, uint8_t s, uint8_t v);
 661:lvgl/src/misc/lv_color.h **** 
 662:lvgl/src/misc/lv_color.h **** /**
 663:lvgl/src/misc/lv_color.h ****  * Convert a 32-bit RGB color to HSV
 664:lvgl/src/misc/lv_color.h ****  * @param r8 8-bit red
 665:lvgl/src/misc/lv_color.h ****  * @param g8 8-bit green
 666:lvgl/src/misc/lv_color.h ****  * @param b8 8-bit blue
 667:lvgl/src/misc/lv_color.h ****  * @return the given RGB color in HSV
 668:lvgl/src/misc/lv_color.h ****  */
 669:lvgl/src/misc/lv_color.h **** lv_color_hsv_t lv_color_rgb_to_hsv(uint8_t r8, uint8_t g8, uint8_t b8);
 670:lvgl/src/misc/lv_color.h **** 
 671:lvgl/src/misc/lv_color.h **** /**
 672:lvgl/src/misc/lv_color.h ****  * Convert a color to HSV
 673:lvgl/src/misc/lv_color.h ****  * @param color color
 674:lvgl/src/misc/lv_color.h ****  * @return the given color in HSV
 675:lvgl/src/misc/lv_color.h ****  */
 676:lvgl/src/misc/lv_color.h **** lv_color_hsv_t lv_color_to_hsv(lv_color_t color);
 677:lvgl/src/misc/lv_color.h **** 
 678:lvgl/src/misc/lv_color.h **** /**
 679:lvgl/src/misc/lv_color.h ****  * Just a wrapper around LV_COLOR_CHROMA_KEY because it might be more convenient to use a function 
 680:lvgl/src/misc/lv_color.h ****  * @return LV_COLOR_CHROMA_KEY
 681:lvgl/src/misc/lv_color.h ****  */
 682:lvgl/src/misc/lv_color.h **** static inline lv_color_t lv_color_chroma_key(void)
 683:lvgl/src/misc/lv_color.h **** {
 684:lvgl/src/misc/lv_color.h ****     return LV_COLOR_CHROMA_KEY;
 685:lvgl/src/misc/lv_color.h **** }
 686:lvgl/src/misc/lv_color.h **** 
 687:lvgl/src/misc/lv_color.h **** /**********************
 688:lvgl/src/misc/lv_color.h ****  *  PREDEFINED COLORS
 689:lvgl/src/misc/lv_color.h ****  **********************/
 690:lvgl/src/misc/lv_color.h **** /*Source: https://vuetifyjs.com/en/styles/colors/#material-colors*/
 691:lvgl/src/misc/lv_color.h **** 
 692:lvgl/src/misc/lv_color.h **** lv_color_t lv_palette_main(lv_palette_t p);
 693:lvgl/src/misc/lv_color.h **** static inline lv_color_t lv_color_white(void)
 850              		.loc 3 693 26 view .LVU241
ARM GAS  C:\usertemp\ccV4o48j.s 			page 42


 851              	.LBB24:
 694:lvgl/src/misc/lv_color.h **** {
 695:lvgl/src/misc/lv_color.h ****     return lv_color_make(0xff, 0xff, 0xff);
 852              		.loc 3 695 5 view .LVU242
 853              	.LVL78:
 854              	.LBB25:
 855              	.LBI25:
 592:lvgl/src/misc/lv_color.h **** {
 856              		.loc 3 592 26 view .LVU243
 857              	.LBB26:
 594:lvgl/src/misc/lv_color.h **** }
 858              		.loc 3 594 5 view .LVU244
 594:lvgl/src/misc/lv_color.h **** }
 859              		.loc 3 594 5 is_stmt 0 view .LVU245
 860 00a6 0020     		movs	r0, #0
 594:lvgl/src/misc/lv_color.h **** }
 861              		.loc 3 594 5 view .LVU246
 862 00a8 4FF6FF73 		movw	r3, #65535
 863 00ac 63F30F00 		bfi	r0, r3, #0, #16
 864              	.LVL79:
 594:lvgl/src/misc/lv_color.h **** }
 865              		.loc 3 594 5 view .LVU247
 866              	.LBE26:
 867              	.LBE25:
 868              	.LBE24:
 869              	.LBE23:
 240:lvgl/src/misc/lv_style.c ****         case LV_STYLE_BG_GRAD_COLOR:
 870              		.loc 1 240 13 is_stmt 1 view .LVU248
 871              	.LVL80:
 872              	.LBB28:
 873              	.LBB27:
 874              		.loc 3 695 12 is_stmt 0 view .LVU249
 875 00b0 7047     		bx	lr
 876              	.L73:
 877              	.LBE27:
 878              	.LBE28:
 249:lvgl/src/misc/lv_style.c ****             break;
 879              		.loc 1 249 13 is_stmt 1 view .LVU250
 880              	.LBB29:
 881              	.LBI29:
 696:lvgl/src/misc/lv_color.h **** }
 697:lvgl/src/misc/lv_color.h **** static inline lv_color_t lv_color_black(void)
 882              		.loc 3 697 26 view .LVU251
 883              	.LBB30:
 698:lvgl/src/misc/lv_color.h **** {
 699:lvgl/src/misc/lv_color.h ****     return lv_color_make(0x00, 0x0, 0x00);
 884              		.loc 3 699 5 view .LVU252
 885              	.LVL81:
 886              	.LBB31:
 887              	.LBI31:
 592:lvgl/src/misc/lv_color.h **** {
 888              		.loc 3 592 26 view .LVU253
 889              	.LBB32:
 594:lvgl/src/misc/lv_color.h **** }
 890              		.loc 3 594 5 view .LVU254
 594:lvgl/src/misc/lv_color.h **** }
 891              		.loc 3 594 12 is_stmt 0 view .LVU255
ARM GAS  C:\usertemp\ccV4o48j.s 			page 43


 892 00b2 4FF00003 		mov	r3, #0	@ movhi
 893 00b6 23F01F03 		bic	r3, r3, #31
 894 00ba 23F4FC63 		bic	r3, r3, #2016
 895 00be 23F47843 		bic	r3, r3, #63488
 896              	.LVL82:
 594:lvgl/src/misc/lv_color.h **** }
 897              		.loc 3 594 12 view .LVU256
 898 00c2 0020     		movs	r0, #0
 594:lvgl/src/misc/lv_color.h **** }
 899              		.loc 3 594 12 view .LVU257
 900 00c4 63F30F00 		bfi	r0, r3, #0, #16
 901              	.LVL83:
 594:lvgl/src/misc/lv_color.h **** }
 902              		.loc 3 594 12 view .LVU258
 903              	.LBE32:
 904              	.LBE31:
 905              	.LBE30:
 906              	.LBE29:
 250:lvgl/src/misc/lv_style.c ****         case LV_STYLE_OPA:
 907              		.loc 1 250 13 is_stmt 1 view .LVU259
 908              	.LVL84:
 909              	.LBB34:
 910              	.LBB33:
 911              		.loc 3 699 12 is_stmt 0 view .LVU260
 912 00c8 7047     		bx	lr
 913              	.L77:
 914              	.LBE33:
 915              	.LBE34:
 263:lvgl/src/misc/lv_style.c ****             break;
 916              		.loc 1 263 13 is_stmt 1 view .LVU261
 263:lvgl/src/misc/lv_style.c ****             break;
 917              		.loc 1 263 23 is_stmt 0 view .LVU262
 918 00ca FF20     		movs	r0, #255
 264:lvgl/src/misc/lv_style.c ****         case LV_STYLE_BORDER_SIDE:
 919              		.loc 1 264 13 is_stmt 1 view .LVU263
 920 00cc 7047     		bx	lr
 921              	.L75:
 266:lvgl/src/misc/lv_style.c ****             break;
 922              		.loc 1 266 13 view .LVU264
 266:lvgl/src/misc/lv_style.c ****             break;
 923              		.loc 1 266 23 is_stmt 0 view .LVU265
 924 00ce 0F20     		movs	r0, #15
 267:lvgl/src/misc/lv_style.c ****         case LV_STYLE_TEXT_FONT:
 925              		.loc 1 267 13 is_stmt 1 view .LVU266
 926 00d0 7047     		bx	lr
 927              	.LVL85:
 928              	.L79:
 269:lvgl/src/misc/lv_style.c ****             break;
 929              		.loc 1 269 13 view .LVU267
 269:lvgl/src/misc/lv_style.c ****             break;
 930              		.loc 1 269 23 is_stmt 0 view .LVU268
 931 00d2 0348     		ldr	r0, .L88+8
 932              	.LVL86:
 270:lvgl/src/misc/lv_style.c ****         case LV_STYLE_MAX_WIDTH:
 933              		.loc 1 270 13 is_stmt 1 view .LVU269
 934 00d4 7047     		bx	lr
 935              	.L89:
ARM GAS  C:\usertemp\ccV4o48j.s 			page 44


 936 00d6 00BF     		.align	2
 937              	.L88:
 938 00d8 01128400 		.word	8655361
 939 00dc 00080801 		.word	17303552
 940 00e0 00000000 		.word	lv_font_montserrat_14
 941              		.cfi_endproc
 942              	.LFE62:
 944              		.section	.text.lv_style_is_empty,"ax",%progbits
 945              		.align	1
 946              		.global	lv_style_is_empty
 947              		.syntax unified
 948              		.thumb
 949              		.thumb_func
 951              	lv_style_is_empty:
 952              	.LVL87:
 953              	.LFB63:
 283:lvgl/src/misc/lv_style.c **** 
 284:lvgl/src/misc/lv_style.c **** bool lv_style_is_empty(const lv_style_t * style)
 285:lvgl/src/misc/lv_style.c **** {
 954              		.loc 1 285 1 view -0
 955              		.cfi_startproc
 956              		@ args = 0, pretend = 0, frame = 0
 957              		@ frame_needed = 0, uses_anonymous_args = 0
 958              		@ link register save eliminated.
 286:lvgl/src/misc/lv_style.c ****     LV_ASSERT_STYLE(style);
 959              		.loc 1 286 5 view .LVU271
 960              		.loc 1 286 5 view .LVU272
 961              		.loc 1 286 5 view .LVU273
 287:lvgl/src/misc/lv_style.c **** 
 288:lvgl/src/misc/lv_style.c ****     return style->prop_cnt == 0 ? true : false;
 962              		.loc 1 288 5 view .LVU274
 963              		.loc 1 288 17 is_stmt 0 view .LVU275
 964 0000 C079     		ldrb	r0, [r0, #7]	@ zero_extendqisi2
 965              	.LVL88:
 289:lvgl/src/misc/lv_style.c **** }
 966              		.loc 1 289 1 view .LVU276
 967 0002 B0FA80F0 		clz	r0, r0
 968 0006 4009     		lsrs	r0, r0, #5
 969 0008 7047     		bx	lr
 970              		.cfi_endproc
 971              	.LFE63:
 973              		.section	.text._lv_style_get_prop_group,"ax",%progbits
 974              		.align	1
 975              		.global	_lv_style_get_prop_group
 976              		.syntax unified
 977              		.thumb
 978              		.thumb_func
 980              	_lv_style_get_prop_group:
 981              	.LVL89:
 982              	.LFB64:
 290:lvgl/src/misc/lv_style.c **** 
 291:lvgl/src/misc/lv_style.c **** uint8_t _lv_style_get_prop_group(lv_style_prop_t prop)
 292:lvgl/src/misc/lv_style.c **** {
 983              		.loc 1 292 1 is_stmt 1 view -0
 984              		.cfi_startproc
 985              		@ args = 0, pretend = 0, frame = 0
 986              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\usertemp\ccV4o48j.s 			page 45


 987              		@ link register save eliminated.
 293:lvgl/src/misc/lv_style.c ****     uint16_t group = (prop & 0x1FF) >> 4;
 988              		.loc 1 293 5 view .LVU278
 989              		.loc 1 293 37 is_stmt 0 view .LVU279
 990 0000 0309     		lsrs	r3, r0, #4
 991              		.loc 1 293 14 view .LVU280
 992 0002 C0F30410 		ubfx	r0, r0, #4, #5
 993              	.LVL90:
 294:lvgl/src/misc/lv_style.c ****     if(group > 7) group = 7;    /*The MSB marks all the custom properties*/
 994              		.loc 1 294 5 is_stmt 1 view .LVU281
 995              		.loc 1 294 7 is_stmt 0 view .LVU282
 996 0006 13F0180F 		tst	r3, #24
 997 000a 00D0     		beq	.L92
 998              		.loc 1 294 25 discriminator 1 view .LVU283
 999 000c 0720     		movs	r0, #7
 1000              	.LVL91:
 1001              	.L92:
 295:lvgl/src/misc/lv_style.c ****     return (uint8_t)group;
 1002              		.loc 1 295 5 is_stmt 1 view .LVU284
 296:lvgl/src/misc/lv_style.c **** }
 1003              		.loc 1 296 1 is_stmt 0 view .LVU285
 1004 000e 7047     		bx	lr
 1005              		.cfi_endproc
 1006              	.LFE64:
 1008              		.section	.text.lv_style_set_prop,"ax",%progbits
 1009              		.align	1
 1010              		.global	lv_style_set_prop
 1011              		.syntax unified
 1012              		.thumb
 1013              		.thumb_func
 1015              	lv_style_set_prop:
 1016              	.LVL92:
 1017              	.LFB59:
 139:lvgl/src/misc/lv_style.c ****     LV_ASSERT_STYLE(style);
 1018              		.loc 1 139 1 is_stmt 1 view -0
 1019              		.cfi_startproc
 1020              		@ args = 0, pretend = 0, frame = 0
 1021              		@ frame_needed = 0, uses_anonymous_args = 0
 139:lvgl/src/misc/lv_style.c ****     LV_ASSERT_STYLE(style);
 1022              		.loc 1 139 1 is_stmt 0 view .LVU287
 1023 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1024              	.LCFI10:
 1025              		.cfi_def_cfa_offset 24
 1026              		.cfi_offset 3, -24
 1027              		.cfi_offset 4, -20
 1028              		.cfi_offset 5, -16
 1029              		.cfi_offset 6, -12
 1030              		.cfi_offset 7, -8
 1031              		.cfi_offset 14, -4
 140:lvgl/src/misc/lv_style.c **** 
 1032              		.loc 1 140 5 is_stmt 1 view .LVU288
 140:lvgl/src/misc/lv_style.c **** 
 1033              		.loc 1 140 5 view .LVU289
 140:lvgl/src/misc/lv_style.c **** 
 1034              		.loc 1 140 5 view .LVU290
 142:lvgl/src/misc/lv_style.c ****         LV_LOG_ERROR("Cannot set property of constant style");
 1035              		.loc 1 142 5 view .LVU291
ARM GAS  C:\usertemp\ccV4o48j.s 			page 46


 142:lvgl/src/misc/lv_style.c ****         LV_LOG_ERROR("Cannot set property of constant style");
 1036              		.loc 1 142 7 is_stmt 0 view .LVU292
 1037 0002 90F90530 		ldrsb	r3, [r0, #5]
 1038 0006 002B     		cmp	r3, #0
 1039 0008 4FDB     		blt	.L94
 1040 000a 0446     		mov	r4, r0
 1041 000c 0D46     		mov	r5, r1
 1042 000e 1646     		mov	r6, r2
 1043              	.LVL93:
 147:lvgl/src/misc/lv_style.c ****         uint8_t * tmp = style->v_p.values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
 1044              		.loc 1 147 5 is_stmt 1 view .LVU293
 147:lvgl/src/misc/lv_style.c ****         uint8_t * tmp = style->v_p.values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
 1045              		.loc 1 147 13 is_stmt 0 view .LVU294
 1046 0010 C279     		ldrb	r2, [r0, #7]	@ zero_extendqisi2
 147:lvgl/src/misc/lv_style.c ****         uint8_t * tmp = style->v_p.values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
 1047              		.loc 1 147 7 view .LVU295
 1048 0012 012A     		cmp	r2, #1
 1049 0014 38D9     		bls	.L96
 1050              	.LBB35:
 148:lvgl/src/misc/lv_style.c ****         uint16_t * props = (uint16_t *)tmp;
 1051              		.loc 1 148 9 is_stmt 1 view .LVU296
 148:lvgl/src/misc/lv_style.c ****         uint16_t * props = (uint16_t *)tmp;
 1052              		.loc 1 148 35 is_stmt 0 view .LVU297
 1053 0016 0068     		ldr	r0, [r0]
 1054              	.LVL94:
 148:lvgl/src/misc/lv_style.c ****         uint16_t * props = (uint16_t *)tmp;
 1055              		.loc 1 148 71 view .LVU298
 1056 0018 4FEA820C 		lsl	ip, r2, #2
 1057              	.LVL95:
 149:lvgl/src/misc/lv_style.c ****         int32_t i;
 1058              		.loc 1 149 9 is_stmt 1 view .LVU299
 150:lvgl/src/misc/lv_style.c ****         for(i = style->prop_cnt - 1; i >= 0; i--) {
 1059              		.loc 1 150 9 view .LVU300
 151:lvgl/src/misc/lv_style.c ****             if(props[i] == prop) {
 1060              		.loc 1 151 9 view .LVU301
 151:lvgl/src/misc/lv_style.c ****             if(props[i] == prop) {
 1061              		.loc 1 151 15 is_stmt 0 view .LVU302
 1062 001c 531E     		subs	r3, r2, #1
 1063              	.LVL96:
 1064              	.L97:
 151:lvgl/src/misc/lv_style.c ****             if(props[i] == prop) {
 1065              		.loc 1 151 40 is_stmt 1 discriminator 1 view .LVU303
 1066 001e 002B     		cmp	r3, #0
 1067 0020 0ADB     		blt	.L107
 152:lvgl/src/misc/lv_style.c ****                 lv_style_value_t * values = (lv_style_value_t *)style->v_p.values_and_props;
 1068              		.loc 1 152 13 view .LVU304
 152:lvgl/src/misc/lv_style.c ****                 lv_style_value_t * values = (lv_style_value_t *)style->v_p.values_and_props;
 1069              		.loc 1 152 21 is_stmt 0 view .LVU305
 1070 0022 00EB0C01 		add	r1, r0, ip
 1071 0026 31F81310 		ldrh	r1, [r1, r3, lsl #1]
 152:lvgl/src/misc/lv_style.c ****                 lv_style_value_t * values = (lv_style_value_t *)style->v_p.values_and_props;
 1072              		.loc 1 152 15 view .LVU306
 1073 002a A942     		cmp	r1, r5
 1074 002c 01D0     		beq	.L108
 151:lvgl/src/misc/lv_style.c ****             if(props[i] == prop) {
 1075              		.loc 1 151 47 is_stmt 1 discriminator 2 view .LVU307
 1076 002e 013B     		subs	r3, r3, #1
ARM GAS  C:\usertemp\ccV4o48j.s 			page 47


 1077              	.LVL97:
 151:lvgl/src/misc/lv_style.c ****             if(props[i] == prop) {
 1078              		.loc 1 151 47 is_stmt 0 discriminator 2 view .LVU308
 1079 0030 F5E7     		b	.L97
 1080              	.L108:
 1081              	.LBB36:
 153:lvgl/src/misc/lv_style.c ****                 values[i] = value;
 1082              		.loc 1 153 17 is_stmt 1 view .LVU309
 1083              	.LVL98:
 154:lvgl/src/misc/lv_style.c ****                 return;
 1084              		.loc 1 154 17 view .LVU310
 154:lvgl/src/misc/lv_style.c ****                 return;
 1085              		.loc 1 154 27 is_stmt 0 view .LVU311
 1086 0032 40F82360 		str	r6, [r0, r3, lsl #2]
 155:lvgl/src/misc/lv_style.c ****             }
 1087              		.loc 1 155 17 is_stmt 1 view .LVU312
 1088 0036 38E0     		b	.L94
 1089              	.LVL99:
 1090              	.L107:
 155:lvgl/src/misc/lv_style.c ****             }
 1091              		.loc 1 155 17 is_stmt 0 view .LVU313
 1092              	.LBE36:
 159:lvgl/src/misc/lv_style.c ****         uint8_t * values_and_props = lv_mem_realloc(style->v_p.values_and_props, size);
 1093              		.loc 1 159 9 is_stmt 1 view .LVU314
 159:lvgl/src/misc/lv_style.c ****         uint8_t * values_and_props = lv_mem_realloc(style->v_p.values_and_props, size);
 1094              		.loc 1 159 40 is_stmt 0 view .LVU315
 1095 0038 0132     		adds	r2, r2, #1
 159:lvgl/src/misc/lv_style.c ****         uint8_t * values_and_props = lv_mem_realloc(style->v_p.values_and_props, size);
 1096              		.loc 1 159 16 view .LVU316
 1097 003a 02EB4202 		add	r2, r2, r2, lsl #1
 1098              	.LVL100:
 160:lvgl/src/misc/lv_style.c ****         if(values_and_props == NULL) return;
 1099              		.loc 1 160 9 is_stmt 1 view .LVU317
 160:lvgl/src/misc/lv_style.c ****         if(values_and_props == NULL) return;
 1100              		.loc 1 160 38 is_stmt 0 view .LVU318
 1101 003e 5100     		lsls	r1, r2, #1
 1102              	.LVL101:
 160:lvgl/src/misc/lv_style.c ****         if(values_and_props == NULL) return;
 1103              		.loc 1 160 38 view .LVU319
 1104 0040 FFF7FEFF 		bl	lv_mem_realloc
 1105              	.LVL102:
 161:lvgl/src/misc/lv_style.c ****         style->v_p.values_and_props = values_and_props;
 1106              		.loc 1 161 9 is_stmt 1 view .LVU320
 161:lvgl/src/misc/lv_style.c ****         style->v_p.values_and_props = values_and_props;
 1107              		.loc 1 161 11 is_stmt 0 view .LVU321
 1108 0044 0746     		mov	r7, r0
 1109 0046 80B3     		cbz	r0, .L94
 162:lvgl/src/misc/lv_style.c **** 
 1110              		.loc 1 162 9 is_stmt 1 view .LVU322
 162:lvgl/src/misc/lv_style.c **** 
 1111              		.loc 1 162 37 is_stmt 0 view .LVU323
 1112 0048 2060     		str	r0, [r4]
 164:lvgl/src/misc/lv_style.c ****         props = (uint16_t *)tmp;
 1113              		.loc 1 164 9 is_stmt 1 view .LVU324
 164:lvgl/src/misc/lv_style.c ****         props = (uint16_t *)tmp;
 1114              		.loc 1 164 39 is_stmt 0 view .LVU325
 1115 004a E379     		ldrb	r3, [r4, #7]	@ zero_extendqisi2
ARM GAS  C:\usertemp\ccV4o48j.s 			page 48


 164:lvgl/src/misc/lv_style.c ****         props = (uint16_t *)tmp;
 1116              		.loc 1 164 13 view .LVU326
 1117 004c 00EB8302 		add	r2, r0, r3, lsl #2
 1118              	.LVL103:
 165:lvgl/src/misc/lv_style.c ****         /*Shift all props to make place for the value before them*/
 1119              		.loc 1 165 9 is_stmt 1 view .LVU327
 167:lvgl/src/misc/lv_style.c ****             props[i + sizeof(lv_style_value_t) / sizeof(uint16_t)] = props[i];
 1120              		.loc 1 167 9 view .LVU328
 167:lvgl/src/misc/lv_style.c ****             props[i + sizeof(lv_style_value_t) / sizeof(uint16_t)] = props[i];
 1121              		.loc 1 167 15 is_stmt 0 view .LVU329
 1122 0050 013B     		subs	r3, r3, #1
 1123              	.LVL104:
 167:lvgl/src/misc/lv_style.c ****             props[i + sizeof(lv_style_value_t) / sizeof(uint16_t)] = props[i];
 1124              		.loc 1 167 9 view .LVU330
 1125 0052 05E0     		b	.L100
 1126              	.LVL105:
 1127              	.L101:
 168:lvgl/src/misc/lv_style.c ****         }
 1128              		.loc 1 168 13 is_stmt 1 view .LVU331
 168:lvgl/src/misc/lv_style.c ****         }
 1129              		.loc 1 168 18 is_stmt 0 view .LVU332
 1130 0054 991C     		adds	r1, r3, #2
 168:lvgl/src/misc/lv_style.c ****         }
 1131              		.loc 1 168 75 view .LVU333
 1132 0056 32F81300 		ldrh	r0, [r2, r3, lsl #1]
 168:lvgl/src/misc/lv_style.c ****         }
 1133              		.loc 1 168 68 view .LVU334
 1134 005a 22F81100 		strh	r0, [r2, r1, lsl #1]	@ movhi
 167:lvgl/src/misc/lv_style.c ****             props[i + sizeof(lv_style_value_t) / sizeof(uint16_t)] = props[i];
 1135              		.loc 1 167 47 is_stmt 1 discriminator 3 view .LVU335
 1136 005e 013B     		subs	r3, r3, #1
 1137              	.LVL106:
 1138              	.L100:
 167:lvgl/src/misc/lv_style.c ****             props[i + sizeof(lv_style_value_t) / sizeof(uint16_t)] = props[i];
 1139              		.loc 1 167 40 discriminator 1 view .LVU336
 1140 0060 002B     		cmp	r3, #0
 1141 0062 F7DA     		bge	.L101
 170:lvgl/src/misc/lv_style.c **** 
 1142              		.loc 1 170 9 view .LVU337
 170:lvgl/src/misc/lv_style.c **** 
 1143              		.loc 1 170 14 is_stmt 0 view .LVU338
 1144 0064 E279     		ldrb	r2, [r4, #7]	@ zero_extendqisi2
 1145              	.LVL107:
 170:lvgl/src/misc/lv_style.c **** 
 1146              		.loc 1 170 24 view .LVU339
 1147 0066 0132     		adds	r2, r2, #1
 1148 0068 D2B2     		uxtb	r2, r2
 1149 006a E271     		strb	r2, [r4, #7]
 173:lvgl/src/misc/lv_style.c ****         props = (uint16_t *)tmp;
 1150              		.loc 1 173 9 is_stmt 1 view .LVU340
 1151              	.LVL108:
 174:lvgl/src/misc/lv_style.c ****         lv_style_value_t * values = (lv_style_value_t *)values_and_props;
 1152              		.loc 1 174 9 view .LVU341
 175:lvgl/src/misc/lv_style.c **** 
 1153              		.loc 1 175 9 view .LVU342
 178:lvgl/src/misc/lv_style.c ****         values[style->prop_cnt - 1] = value;
 1154              		.loc 1 178 9 view .LVU343
ARM GAS  C:\usertemp\ccV4o48j.s 			page 49


 178:lvgl/src/misc/lv_style.c ****         values[style->prop_cnt - 1] = value;
 1155              		.loc 1 178 14 is_stmt 0 view .LVU344
 1156 006c 6FF00043 		mvn	r3, #-2147483648
 1157              	.LVL109:
 178:lvgl/src/misc/lv_style.c ****         values[style->prop_cnt - 1] = value;
 1158              		.loc 1 178 14 view .LVU345
 1159 0070 1344     		add	r3, r3, r2
 1160 0072 5B00     		lsls	r3, r3, #1
 1161 0074 03EB8203 		add	r3, r3, r2, lsl #2
 178:lvgl/src/misc/lv_style.c ****         values[style->prop_cnt - 1] = value;
 1162              		.loc 1 178 36 view .LVU346
 1163 0078 FD52     		strh	r5, [r7, r3]	@ movhi
 179:lvgl/src/misc/lv_style.c ****     }
 1164              		.loc 1 179 9 is_stmt 1 view .LVU347
 179:lvgl/src/misc/lv_style.c ****     }
 1165              		.loc 1 179 21 is_stmt 0 view .LVU348
 1166 007a E279     		ldrb	r2, [r4, #7]	@ zero_extendqisi2
 1167              	.LVL110:
 179:lvgl/src/misc/lv_style.c ****     }
 1168              		.loc 1 179 15 view .LVU349
 1169 007c 6FF04043 		mvn	r3, #-1073741824
 1170 0080 1344     		add	r3, r3, r2
 1171              	.LVL111:
 179:lvgl/src/misc/lv_style.c ****     }
 1172              		.loc 1 179 37 view .LVU350
 1173 0082 47F82360 		str	r6, [r7, r3, lsl #2]
 1174              	.LBE35:
 1175 0086 08E0     		b	.L102
 1176              	.LVL112:
 1177              	.L96:
 181:lvgl/src/misc/lv_style.c ****         if(style->prop1 == prop) {
 1178              		.loc 1 181 10 is_stmt 1 view .LVU351
 181:lvgl/src/misc/lv_style.c ****         if(style->prop1 == prop) {
 1179              		.loc 1 181 12 is_stmt 0 view .LVU352
 1180 0088 012A     		cmp	r2, #1
 1181 008a 0FD0     		beq	.L109
 202:lvgl/src/misc/lv_style.c ****         style->prop1 = prop;
 1182              		.loc 1 202 9 is_stmt 1 view .LVU353
 202:lvgl/src/misc/lv_style.c ****         style->prop1 = prop;
 1183              		.loc 1 202 25 is_stmt 0 view .LVU354
 1184 008c 0123     		movs	r3, #1
 1185 008e C371     		strb	r3, [r0, #7]
 203:lvgl/src/misc/lv_style.c ****         style->v_p.value1 = value;
 1186              		.loc 1 203 9 is_stmt 1 view .LVU355
 203:lvgl/src/misc/lv_style.c ****         style->v_p.value1 = value;
 1187              		.loc 1 203 22 is_stmt 0 view .LVU356
 1188 0090 8388     		ldrh	r3, [r0, #4]
 1189 0092 61F30E03 		bfi	r3, r1, #0, #15
 1190 0096 8380     		strh	r3, [r0, #4]	@ movhi
 204:lvgl/src/misc/lv_style.c ****     }
 1191              		.loc 1 204 9 is_stmt 1 view .LVU357
 1192              	.LVL113:
 204:lvgl/src/misc/lv_style.c ****     }
 1193              		.loc 1 204 27 is_stmt 0 view .LVU358
 1194 0098 0660     		str	r6, [r0]
 1195              	.LVL114:
 1196              	.L102:
ARM GAS  C:\usertemp\ccV4o48j.s 			page 50


 207:lvgl/src/misc/lv_style.c ****     style->has_group |= 1 << group;
 1197              		.loc 1 207 5 is_stmt 1 view .LVU359
 207:lvgl/src/misc/lv_style.c ****     style->has_group |= 1 << group;
 1198              		.loc 1 207 21 is_stmt 0 view .LVU360
 1199 009a 2846     		mov	r0, r5
 1200              	.LVL115:
 207:lvgl/src/misc/lv_style.c ****     style->has_group |= 1 << group;
 1201              		.loc 1 207 21 view .LVU361
 1202 009c FFF7FEFF 		bl	_lv_style_get_prop_group
 1203              	.LVL116:
 208:lvgl/src/misc/lv_style.c **** }
 1204              		.loc 1 208 5 is_stmt 1 view .LVU362
 208:lvgl/src/misc/lv_style.c **** }
 1205              		.loc 1 208 10 is_stmt 0 view .LVU363
 1206 00a0 A379     		ldrb	r3, [r4, #6]	@ zero_extendqisi2
 208:lvgl/src/misc/lv_style.c **** }
 1207              		.loc 1 208 27 view .LVU364
 1208 00a2 0122     		movs	r2, #1
 1209 00a4 8240     		lsls	r2, r2, r0
 208:lvgl/src/misc/lv_style.c **** }
 1210              		.loc 1 208 22 view .LVU365
 1211 00a6 1343     		orrs	r3, r3, r2
 1212 00a8 A371     		strb	r3, [r4, #6]
 1213              	.LVL117:
 1214              	.L94:
 209:lvgl/src/misc/lv_style.c **** 
 1215              		.loc 1 209 1 view .LVU366
 1216 00aa F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1217              	.LVL118:
 1218              	.L109:
 1219              	.LBB37:
 182:lvgl/src/misc/lv_style.c ****             style->v_p.value1 = value;
 1220              		.loc 1 182 9 is_stmt 1 view .LVU367
 182:lvgl/src/misc/lv_style.c ****             style->v_p.value1 = value;
 1221              		.loc 1 182 17 is_stmt 0 view .LVU368
 1222 00ac 8388     		ldrh	r3, [r0, #4]
 1223 00ae C3F30E03 		ubfx	r3, r3, #0, #15
 182:lvgl/src/misc/lv_style.c ****             style->v_p.value1 = value;
 1224              		.loc 1 182 11 view .LVU369
 1225 00b2 8B42     		cmp	r3, r1
 1226 00b4 19D0     		beq	.L110
 186:lvgl/src/misc/lv_style.c ****         uint8_t * values_and_props = lv_mem_alloc(size);
 1227              		.loc 1 186 9 is_stmt 1 view .LVU370
 186:lvgl/src/misc/lv_style.c ****         uint8_t * values_and_props = lv_mem_alloc(size);
 1228              		.loc 1 186 40 is_stmt 0 view .LVU371
 1229 00b6 0132     		adds	r2, r2, #1
 186:lvgl/src/misc/lv_style.c ****         uint8_t * values_and_props = lv_mem_alloc(size);
 1230              		.loc 1 186 16 view .LVU372
 1231 00b8 02EB4202 		add	r2, r2, r2, lsl #1
 1232              	.LVL119:
 187:lvgl/src/misc/lv_style.c ****         if(values_and_props == NULL) return;
 1233              		.loc 1 187 9 is_stmt 1 view .LVU373
 187:lvgl/src/misc/lv_style.c ****         if(values_and_props == NULL) return;
 1234              		.loc 1 187 38 is_stmt 0 view .LVU374
 1235 00bc 5000     		lsls	r0, r2, #1
 1236              	.LVL120:
 187:lvgl/src/misc/lv_style.c ****         if(values_and_props == NULL) return;
ARM GAS  C:\usertemp\ccV4o48j.s 			page 51


 1237              		.loc 1 187 38 view .LVU375
 1238 00be FFF7FEFF 		bl	lv_mem_alloc
 1239              	.LVL121:
 188:lvgl/src/misc/lv_style.c ****         lv_style_value_t value_tmp = style->v_p.value1;
 1240              		.loc 1 188 9 is_stmt 1 view .LVU376
 188:lvgl/src/misc/lv_style.c ****         lv_style_value_t value_tmp = style->v_p.value1;
 1241              		.loc 1 188 11 is_stmt 0 view .LVU377
 1242 00c2 0246     		mov	r2, r0
 1243 00c4 0028     		cmp	r0, #0
 1244 00c6 F0D0     		beq	.L94
 189:lvgl/src/misc/lv_style.c ****         style->v_p.values_and_props = values_and_props;
 1245              		.loc 1 189 9 is_stmt 1 view .LVU378
 189:lvgl/src/misc/lv_style.c ****         style->v_p.values_and_props = values_and_props;
 1246              		.loc 1 189 26 is_stmt 0 view .LVU379
 1247 00c8 2068     		ldr	r0, [r4]
 1248              	.LVL122:
 190:lvgl/src/misc/lv_style.c ****         style->prop_cnt++;
 1249              		.loc 1 190 9 is_stmt 1 view .LVU380
 190:lvgl/src/misc/lv_style.c ****         style->prop_cnt++;
 1250              		.loc 1 190 37 is_stmt 0 view .LVU381
 1251 00ca 2260     		str	r2, [r4]
 191:lvgl/src/misc/lv_style.c **** 
 1252              		.loc 1 191 9 is_stmt 1 view .LVU382
 191:lvgl/src/misc/lv_style.c **** 
 1253              		.loc 1 191 14 is_stmt 0 view .LVU383
 1254 00cc E379     		ldrb	r3, [r4, #7]	@ zero_extendqisi2
 191:lvgl/src/misc/lv_style.c **** 
 1255              		.loc 1 191 24 view .LVU384
 1256 00ce 0133     		adds	r3, r3, #1
 1257 00d0 DBB2     		uxtb	r3, r3
 1258 00d2 E371     		strb	r3, [r4, #7]
 193:lvgl/src/misc/lv_style.c ****         uint16_t * props = (uint16_t *)tmp;
 1259              		.loc 1 193 9 is_stmt 1 view .LVU385
 193:lvgl/src/misc/lv_style.c ****         uint16_t * props = (uint16_t *)tmp;
 1260              		.loc 1 193 19 is_stmt 0 view .LVU386
 1261 00d4 02EB8307 		add	r7, r2, r3, lsl #2
 1262              	.LVL123:
 194:lvgl/src/misc/lv_style.c ****         lv_style_value_t * values = (lv_style_value_t *)values_and_props;
 1263              		.loc 1 194 9 is_stmt 1 view .LVU387
 195:lvgl/src/misc/lv_style.c ****         props[0] = style->prop1;
 1264              		.loc 1 195 9 view .LVU388
 196:lvgl/src/misc/lv_style.c ****         props[1] = prop;
 1265              		.loc 1 196 9 view .LVU389
 196:lvgl/src/misc/lv_style.c ****         props[1] = prop;
 1266              		.loc 1 196 25 is_stmt 0 view .LVU390
 1267 00d8 A188     		ldrh	r1, [r4, #4]
 1268 00da C1F30E01 		ubfx	r1, r1, #0, #15
 196:lvgl/src/misc/lv_style.c ****         props[1] = prop;
 1269              		.loc 1 196 18 view .LVU391
 1270 00de 22F82310 		strh	r1, [r2, r3, lsl #2]	@ movhi
 197:lvgl/src/misc/lv_style.c ****         values[0] = value_tmp;
 1271              		.loc 1 197 9 is_stmt 1 view .LVU392
 197:lvgl/src/misc/lv_style.c ****         values[0] = value_tmp;
 1272              		.loc 1 197 18 is_stmt 0 view .LVU393
 1273 00e2 7D80     		strh	r5, [r7, #2]	@ movhi
 198:lvgl/src/misc/lv_style.c ****         values[1] = value;
 1274              		.loc 1 198 9 is_stmt 1 view .LVU394
ARM GAS  C:\usertemp\ccV4o48j.s 			page 52


 1275              	.LVL124:
 198:lvgl/src/misc/lv_style.c ****         values[1] = value;
 1276              		.loc 1 198 19 is_stmt 0 view .LVU395
 1277 00e4 1060     		str	r0, [r2]
 199:lvgl/src/misc/lv_style.c ****     }
 1278              		.loc 1 199 9 is_stmt 1 view .LVU396
 1279              	.LVL125:
 199:lvgl/src/misc/lv_style.c ****     }
 1280              		.loc 1 199 19 is_stmt 0 view .LVU397
 1281 00e6 5660     		str	r6, [r2, #4]
 1282              	.LBE37:
 1283 00e8 D7E7     		b	.L102
 1284              	.LVL126:
 1285              	.L110:
 1286              	.LBB38:
 183:lvgl/src/misc/lv_style.c ****             return;
 1287              		.loc 1 183 13 is_stmt 1 view .LVU398
 183:lvgl/src/misc/lv_style.c ****             return;
 1288              		.loc 1 183 31 is_stmt 0 view .LVU399
 1289 00ea 0660     		str	r6, [r0]
 184:lvgl/src/misc/lv_style.c ****         }
 1290              		.loc 1 184 13 is_stmt 1 view .LVU400
 1291 00ec DDE7     		b	.L94
 1292              	.LBE38:
 1293              		.cfi_endproc
 1294              	.LFE59:
 1296              		.section	.data.act_id.0,"aw"
 1297              		.align	1
 1300              	act_id.0:
 1301 0000 6F00     		.short	111
 1302              		.text
 1303              	.Letext0:
 1304              		.file 4 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 1305              		.file 5 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 1306              		.file 6 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/lib/gcc/arm-none
 1307              		.file 7 "lvgl/src/misc/../font/../misc/lv_area.h"
 1308              		.file 8 "lvgl/src/misc/../font/lv_font.h"
 1309              		.file 9 "lvgl/src/misc/lv_types.h"
 1310              		.file 10 "lvgl/src/misc/lv_anim.h"
 1311              		.file 11 "lvgl/src/misc/lv_mem.h"
ARM GAS  C:\usertemp\ccV4o48j.s 			page 53


DEFINED SYMBOLS
                            *ABS*:00000000 lv_style.c
C:\usertemp\ccV4o48j.s:20     .text.lv_style_get_prop_inlined:00000000 $t
C:\usertemp\ccV4o48j.s:25     .text.lv_style_get_prop_inlined:00000000 lv_style_get_prop_inlined
C:\usertemp\ccV4o48j.s:201    .text.lv_style_init:00000000 $t
C:\usertemp\ccV4o48j.s:207    .text.lv_style_init:00000000 lv_style_init
C:\usertemp\ccV4o48j.s:230    .text.lv_style_reset:00000000 $t
C:\usertemp\ccV4o48j.s:236    .text.lv_style_reset:00000000 lv_style_reset
C:\usertemp\ccV4o48j.s:294    .text.lv_style_register_prop:00000000 $t
C:\usertemp\ccV4o48j.s:300    .text.lv_style_register_prop:00000000 lv_style_register_prop
C:\usertemp\ccV4o48j.s:321    .text.lv_style_register_prop:0000000c $d
C:\usertemp\ccV4o48j.s:1300   .data.act_id.0:00000000 act_id.0
C:\usertemp\ccV4o48j.s:326    .text.lv_style_remove_prop:00000000 $t
C:\usertemp\ccV4o48j.s:332    .text.lv_style_remove_prop:00000000 lv_style_remove_prop
C:\usertemp\ccV4o48j.s:607    .text.lv_style_get_prop:00000000 $t
C:\usertemp\ccV4o48j.s:613    .text.lv_style_get_prop:00000000 lv_style_get_prop
C:\usertemp\ccV4o48j.s:636    .text.lv_style_transition_dsc_init:00000000 $t
C:\usertemp\ccV4o48j.s:642    .text.lv_style_transition_dsc_init:00000000 lv_style_transition_dsc_init
C:\usertemp\ccV4o48j.s:702    .text.lv_style_transition_dsc_init:00000028 $d
C:\usertemp\ccV4o48j.s:707    .text.lv_style_prop_get_default:00000000 $t
C:\usertemp\ccV4o48j.s:713    .text.lv_style_prop_get_default:00000000 lv_style_prop_get_default
C:\usertemp\ccV4o48j.s:738    .text.lv_style_prop_get_default:0000001a $d
C:\usertemp\ccV4o48j.s:759    .text.lv_style_prop_get_default:0000002e $t
C:\usertemp\ccV4o48j.s:938    .text.lv_style_prop_get_default:000000d8 $d
C:\usertemp\ccV4o48j.s:945    .text.lv_style_is_empty:00000000 $t
C:\usertemp\ccV4o48j.s:951    .text.lv_style_is_empty:00000000 lv_style_is_empty
C:\usertemp\ccV4o48j.s:974    .text._lv_style_get_prop_group:00000000 $t
C:\usertemp\ccV4o48j.s:980    .text._lv_style_get_prop_group:00000000 _lv_style_get_prop_group
C:\usertemp\ccV4o48j.s:1009   .text.lv_style_set_prop:00000000 $t
C:\usertemp\ccV4o48j.s:1015   .text.lv_style_set_prop:00000000 lv_style_set_prop
C:\usertemp\ccV4o48j.s:1297   .data.act_id.0:00000000 $d

UNDEFINED SYMBOLS
lv_memset_00
lv_mem_free
lv_mem_alloc
lv_anim_path_linear
lv_font_montserrat_14
lv_mem_realloc
