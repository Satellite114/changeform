ARM GAS  C:\usertemp\ccUwScgV.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_txt.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "lvgl/src/misc/lv_txt.c"
  19              		.section	.text.lv_txt_utf8_size,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	lv_txt_utf8_size:
  26              	.LVL0:
  27              	.LFB65:
   1:lvgl/src/misc/lv_txt.c **** /**
   2:lvgl/src/misc/lv_txt.c ****  * @file lv_txt.c
   3:lvgl/src/misc/lv_txt.c ****  *
   4:lvgl/src/misc/lv_txt.c ****  */
   5:lvgl/src/misc/lv_txt.c **** 
   6:lvgl/src/misc/lv_txt.c **** /*********************
   7:lvgl/src/misc/lv_txt.c ****  *      INCLUDES
   8:lvgl/src/misc/lv_txt.c ****  *********************/
   9:lvgl/src/misc/lv_txt.c **** #include <stdarg.h>
  10:lvgl/src/misc/lv_txt.c **** #include "lv_txt.h"
  11:lvgl/src/misc/lv_txt.c **** #include "lv_txt_ap.h"
  12:lvgl/src/misc/lv_txt.c **** #include "lv_math.h"
  13:lvgl/src/misc/lv_txt.c **** #include "lv_log.h"
  14:lvgl/src/misc/lv_txt.c **** #include "lv_mem.h"
  15:lvgl/src/misc/lv_txt.c **** #include "lv_assert.h"
  16:lvgl/src/misc/lv_txt.c **** 
  17:lvgl/src/misc/lv_txt.c **** /*********************
  18:lvgl/src/misc/lv_txt.c ****  *      DEFINES
  19:lvgl/src/misc/lv_txt.c ****  *********************/
  20:lvgl/src/misc/lv_txt.c **** #define NO_BREAK_FOUND UINT32_MAX
  21:lvgl/src/misc/lv_txt.c **** 
  22:lvgl/src/misc/lv_txt.c **** /**********************
  23:lvgl/src/misc/lv_txt.c ****  *      TYPEDEFS
  24:lvgl/src/misc/lv_txt.c ****  **********************/
  25:lvgl/src/misc/lv_txt.c **** 
  26:lvgl/src/misc/lv_txt.c **** /**********************
  27:lvgl/src/misc/lv_txt.c ****  *  STATIC PROTOTYPES
  28:lvgl/src/misc/lv_txt.c ****  **********************/
  29:lvgl/src/misc/lv_txt.c **** 
  30:lvgl/src/misc/lv_txt.c **** #if LV_TXT_ENC == LV_TXT_ENC_UTF8
  31:lvgl/src/misc/lv_txt.c ****     static uint8_t lv_txt_utf8_size(const char * str);
ARM GAS  C:\usertemp\ccUwScgV.s 			page 2


  32:lvgl/src/misc/lv_txt.c ****     static uint32_t lv_txt_unicode_to_utf8(uint32_t letter_uni);
  33:lvgl/src/misc/lv_txt.c ****     static uint32_t lv_txt_utf8_conv_wc(uint32_t c);
  34:lvgl/src/misc/lv_txt.c ****     static uint32_t lv_txt_utf8_next(const char * txt, uint32_t * i);
  35:lvgl/src/misc/lv_txt.c ****     static uint32_t lv_txt_utf8_prev(const char * txt, uint32_t * i_start);
  36:lvgl/src/misc/lv_txt.c ****     static uint32_t lv_txt_utf8_get_byte_id(const char * txt, uint32_t utf8_id);
  37:lvgl/src/misc/lv_txt.c ****     static uint32_t lv_txt_utf8_get_char_id(const char * txt, uint32_t byte_id);
  38:lvgl/src/misc/lv_txt.c ****     static uint32_t lv_txt_utf8_get_length(const char * txt);
  39:lvgl/src/misc/lv_txt.c **** #elif LV_TXT_ENC == LV_TXT_ENC_ASCII
  40:lvgl/src/misc/lv_txt.c ****     static uint8_t lv_txt_iso8859_1_size(const char * str);
  41:lvgl/src/misc/lv_txt.c ****     static uint32_t lv_txt_unicode_to_iso8859_1(uint32_t letter_uni);
  42:lvgl/src/misc/lv_txt.c ****     static uint32_t lv_txt_iso8859_1_conv_wc(uint32_t c);
  43:lvgl/src/misc/lv_txt.c ****     static uint32_t lv_txt_iso8859_1_next(const char * txt, uint32_t * i);
  44:lvgl/src/misc/lv_txt.c ****     static uint32_t lv_txt_iso8859_1_prev(const char * txt, uint32_t * i_start);
  45:lvgl/src/misc/lv_txt.c ****     static uint32_t lv_txt_iso8859_1_get_byte_id(const char * txt, uint32_t utf8_id);
  46:lvgl/src/misc/lv_txt.c ****     static uint32_t lv_txt_iso8859_1_get_char_id(const char * txt, uint32_t byte_id);
  47:lvgl/src/misc/lv_txt.c ****     static uint32_t lv_txt_iso8859_1_get_length(const char * txt);
  48:lvgl/src/misc/lv_txt.c **** #endif
  49:lvgl/src/misc/lv_txt.c **** /**********************
  50:lvgl/src/misc/lv_txt.c ****  *  STATIC VARIABLES
  51:lvgl/src/misc/lv_txt.c ****  **********************/
  52:lvgl/src/misc/lv_txt.c **** 
  53:lvgl/src/misc/lv_txt.c **** /**********************
  54:lvgl/src/misc/lv_txt.c ****  *  GLOBAL VARIABLES
  55:lvgl/src/misc/lv_txt.c ****  **********************/
  56:lvgl/src/misc/lv_txt.c **** #if LV_TXT_ENC == LV_TXT_ENC_UTF8
  57:lvgl/src/misc/lv_txt.c ****     uint8_t (*_lv_txt_encoded_size)(const char *)                   = lv_txt_utf8_size;
  58:lvgl/src/misc/lv_txt.c ****     uint32_t (*_lv_txt_unicode_to_encoded)(uint32_t)                = lv_txt_unicode_to_utf8;
  59:lvgl/src/misc/lv_txt.c ****     uint32_t (*_lv_txt_encoded_conv_wc)(uint32_t)                   = lv_txt_utf8_conv_wc;
  60:lvgl/src/misc/lv_txt.c ****     uint32_t (*_lv_txt_encoded_next)(const char *, uint32_t *)      = lv_txt_utf8_next;
  61:lvgl/src/misc/lv_txt.c ****     uint32_t (*_lv_txt_encoded_prev)(const char *, uint32_t *)      = lv_txt_utf8_prev;
  62:lvgl/src/misc/lv_txt.c ****     uint32_t (*_lv_txt_encoded_get_byte_id)(const char *, uint32_t) = lv_txt_utf8_get_byte_id;
  63:lvgl/src/misc/lv_txt.c ****     uint32_t (*_lv_txt_encoded_get_char_id)(const char *, uint32_t) = lv_txt_utf8_get_char_id;
  64:lvgl/src/misc/lv_txt.c ****     uint32_t (*_lv_txt_get_encoded_length)(const char *)            = lv_txt_utf8_get_length;
  65:lvgl/src/misc/lv_txt.c **** #elif LV_TXT_ENC == LV_TXT_ENC_ASCII
  66:lvgl/src/misc/lv_txt.c ****     uint8_t (*_lv_txt_encoded_size)(const char *)                   = lv_txt_iso8859_1_size;
  67:lvgl/src/misc/lv_txt.c ****     uint32_t (*_lv_txt_unicode_to_encoded)(uint32_t)                = lv_txt_unicode_to_iso8859_1;
  68:lvgl/src/misc/lv_txt.c ****     uint32_t (*_lv_txt_encoded_conv_wc)(uint32_t)                   = lv_txt_iso8859_1_conv_wc;
  69:lvgl/src/misc/lv_txt.c ****     uint32_t (*_lv_txt_encoded_next)(const char *, uint32_t *)      = lv_txt_iso8859_1_next;
  70:lvgl/src/misc/lv_txt.c ****     uint32_t (*_lv_txt_encoded_prev)(const char *, uint32_t *)      = lv_txt_iso8859_1_prev;
  71:lvgl/src/misc/lv_txt.c ****     uint32_t (*_lv_txt_encoded_get_byte_id)(const char *, uint32_t) = lv_txt_iso8859_1_get_byte_id;
  72:lvgl/src/misc/lv_txt.c ****     uint32_t (*_lv_txt_encoded_get_char_id)(const char *, uint32_t)     = lv_txt_iso8859_1_get_char
  73:lvgl/src/misc/lv_txt.c ****     uint32_t (*_lv_txt_get_encoded_length)(const char *)            = lv_txt_iso8859_1_get_length;
  74:lvgl/src/misc/lv_txt.c **** 
  75:lvgl/src/misc/lv_txt.c **** #endif
  76:lvgl/src/misc/lv_txt.c **** 
  77:lvgl/src/misc/lv_txt.c **** /**********************
  78:lvgl/src/misc/lv_txt.c ****  *      MACROS
  79:lvgl/src/misc/lv_txt.c ****  **********************/
  80:lvgl/src/misc/lv_txt.c **** 
  81:lvgl/src/misc/lv_txt.c **** #define LV_IS_ASCII(value)              ((value & 0x80U) == 0x00U)
  82:lvgl/src/misc/lv_txt.c **** #define LV_IS_2BYTES_UTF8_CODE(value)   ((value & 0xE0U) == 0xC0U)
  83:lvgl/src/misc/lv_txt.c **** #define LV_IS_3BYTES_UTF8_CODE(value)   ((value & 0xF0U) == 0xE0U)
  84:lvgl/src/misc/lv_txt.c **** #define LV_IS_4BYTES_UTF8_CODE(value)   ((value & 0xF8U) == 0xF0U)
  85:lvgl/src/misc/lv_txt.c **** #define LV_IS_INVALID_UTF8_CODE(value)  ((value & 0xC0U) != 0x80U)
  86:lvgl/src/misc/lv_txt.c **** 
  87:lvgl/src/misc/lv_txt.c **** /**********************
  88:lvgl/src/misc/lv_txt.c ****  *   GLOBAL FUNCTIONS
ARM GAS  C:\usertemp\ccUwScgV.s 			page 3


  89:lvgl/src/misc/lv_txt.c ****  **********************/
  90:lvgl/src/misc/lv_txt.c **** 
  91:lvgl/src/misc/lv_txt.c **** void lv_txt_get_size(lv_point_t * size_res, const char * text, const lv_font_t * font, lv_coord_t l
  92:lvgl/src/misc/lv_txt.c ****                      lv_coord_t line_space, lv_coord_t max_width, lv_text_flag_t flag)
  93:lvgl/src/misc/lv_txt.c **** {
  94:lvgl/src/misc/lv_txt.c ****     size_res->x = 0;
  95:lvgl/src/misc/lv_txt.c ****     size_res->y = 0;
  96:lvgl/src/misc/lv_txt.c **** 
  97:lvgl/src/misc/lv_txt.c ****     if(text == NULL) return;
  98:lvgl/src/misc/lv_txt.c ****     if(font == NULL) return;
  99:lvgl/src/misc/lv_txt.c **** 
 100:lvgl/src/misc/lv_txt.c ****     if(flag & LV_TEXT_FLAG_EXPAND) max_width = LV_COORD_MAX;
 101:lvgl/src/misc/lv_txt.c **** 
 102:lvgl/src/misc/lv_txt.c ****     uint32_t line_start     = 0;
 103:lvgl/src/misc/lv_txt.c ****     uint32_t new_line_start = 0;
 104:lvgl/src/misc/lv_txt.c ****     uint16_t letter_height = lv_font_get_line_height(font);
 105:lvgl/src/misc/lv_txt.c **** 
 106:lvgl/src/misc/lv_txt.c ****     /*Calc. the height and longest line*/
 107:lvgl/src/misc/lv_txt.c ****     while(text[line_start] != '\0') {
 108:lvgl/src/misc/lv_txt.c ****         new_line_start += _lv_txt_get_next_line(&text[line_start], font, letter_space, max_width, N
 109:lvgl/src/misc/lv_txt.c **** 
 110:lvgl/src/misc/lv_txt.c ****         if((unsigned long)size_res->y + (unsigned long)letter_height + (unsigned long)line_space > 
 111:lvgl/src/misc/lv_txt.c ****             LV_LOG_WARN("lv_txt_get_size: integer overflow while calculating text height");
 112:lvgl/src/misc/lv_txt.c ****             return;
 113:lvgl/src/misc/lv_txt.c ****         }
 114:lvgl/src/misc/lv_txt.c ****         else {
 115:lvgl/src/misc/lv_txt.c ****             size_res->y += letter_height;
 116:lvgl/src/misc/lv_txt.c ****             size_res->y += line_space;
 117:lvgl/src/misc/lv_txt.c ****         }
 118:lvgl/src/misc/lv_txt.c **** 
 119:lvgl/src/misc/lv_txt.c ****         /*Calculate the longest line*/
 120:lvgl/src/misc/lv_txt.c ****         lv_coord_t act_line_length = lv_txt_get_width(&text[line_start], new_line_start - line_star
 121:lvgl/src/misc/lv_txt.c ****                                                       flag);
 122:lvgl/src/misc/lv_txt.c **** 
 123:lvgl/src/misc/lv_txt.c ****         size_res->x = LV_MAX(act_line_length, size_res->x);
 124:lvgl/src/misc/lv_txt.c ****         line_start  = new_line_start;
 125:lvgl/src/misc/lv_txt.c ****     }
 126:lvgl/src/misc/lv_txt.c **** 
 127:lvgl/src/misc/lv_txt.c ****     /*Make the text one line taller if the last character is '\n' or '\r'*/
 128:lvgl/src/misc/lv_txt.c ****     if((line_start != 0) && (text[line_start - 1] == '\n' || text[line_start - 1] == '\r')) {
 129:lvgl/src/misc/lv_txt.c ****         size_res->y += letter_height + line_space;
 130:lvgl/src/misc/lv_txt.c ****     }
 131:lvgl/src/misc/lv_txt.c **** 
 132:lvgl/src/misc/lv_txt.c ****     /*Correction with the last line space or set the height manually if the text is empty*/
 133:lvgl/src/misc/lv_txt.c ****     if(size_res->y == 0)
 134:lvgl/src/misc/lv_txt.c ****         size_res->y = letter_height;
 135:lvgl/src/misc/lv_txt.c ****     else
 136:lvgl/src/misc/lv_txt.c ****         size_res->y -= line_space;
 137:lvgl/src/misc/lv_txt.c **** }
 138:lvgl/src/misc/lv_txt.c **** 
 139:lvgl/src/misc/lv_txt.c **** /**
 140:lvgl/src/misc/lv_txt.c ****  * Get the next word of text. A word is delimited by break characters.
 141:lvgl/src/misc/lv_txt.c ****  *
 142:lvgl/src/misc/lv_txt.c ****  * If the word cannot fit in the max_width space, obey LV_TXT_LINE_BREAK_LONG_* rules.
 143:lvgl/src/misc/lv_txt.c ****  *
 144:lvgl/src/misc/lv_txt.c ****  * If the next word cannot fit anything, return 0.
 145:lvgl/src/misc/lv_txt.c ****  *
ARM GAS  C:\usertemp\ccUwScgV.s 			page 4


 146:lvgl/src/misc/lv_txt.c ****  * If the first character is a break character, returns the next index.
 147:lvgl/src/misc/lv_txt.c ****  *
 148:lvgl/src/misc/lv_txt.c ****  * Example calls from lv_txt_get_next_line() assuming sufficient max_width and
 149:lvgl/src/misc/lv_txt.c ****  * txt = "Test text\n"
 150:lvgl/src/misc/lv_txt.c ****  *        0123456789
 151:lvgl/src/misc/lv_txt.c ****  *
 152:lvgl/src/misc/lv_txt.c ****  * Calls would be as follows:
 153:lvgl/src/misc/lv_txt.c ****  *     1. Return i=4, pointing at breakchar ' ', for the string "Test"
 154:lvgl/src/misc/lv_txt.c ****  *     2. Return i=5, since i=4 was a breakchar.
 155:lvgl/src/misc/lv_txt.c ****  *     3. Return i=9, pointing at breakchar '\n'
 156:lvgl/src/misc/lv_txt.c ****  *     4. Parenting lv_txt_get_next_line() would detect subsequent '\0'
 157:lvgl/src/misc/lv_txt.c ****  *
 158:lvgl/src/misc/lv_txt.c ****  * TODO: Returned word_w_ptr may overestimate the returned word's width when
 159:lvgl/src/misc/lv_txt.c ****  * max_width is reached. In current usage, this has no impact.
 160:lvgl/src/misc/lv_txt.c ****  *
 161:lvgl/src/misc/lv_txt.c ****  * @param txt a '\0' terminated string
 162:lvgl/src/misc/lv_txt.c ****  * @param font pointer to a font
 163:lvgl/src/misc/lv_txt.c ****  * @param letter_space letter space
 164:lvgl/src/misc/lv_txt.c ****  * @param max_width max with of the text (break the lines to fit this size) Set CORD_MAX to avoid l
 165:lvgl/src/misc/lv_txt.c ****  * @param flags settings for the text from 'txt_flag_type' enum
 166:lvgl/src/misc/lv_txt.c ****  * @param[out] word_w_ptr width (in pixels) of the parsed word. May be NULL.
 167:lvgl/src/misc/lv_txt.c ****  * @param force Force return the fraction of the word that can fit in the provided space.
 168:lvgl/src/misc/lv_txt.c ****  * @return the index of the first char of the next word (in byte index not letter index. With UTF-8
 169:lvgl/src/misc/lv_txt.c ****  */
 170:lvgl/src/misc/lv_txt.c **** static uint32_t lv_txt_get_next_word(const char * txt, const lv_font_t * font,
 171:lvgl/src/misc/lv_txt.c ****                                      lv_coord_t letter_space, lv_coord_t max_width,
 172:lvgl/src/misc/lv_txt.c ****                                      lv_text_flag_t flag, uint32_t * word_w_ptr, lv_text_cmd_state_
 173:lvgl/src/misc/lv_txt.c **** {
 174:lvgl/src/misc/lv_txt.c ****     if(txt == NULL || txt[0] == '\0') return 0;
 175:lvgl/src/misc/lv_txt.c ****     if(font == NULL) return 0;
 176:lvgl/src/misc/lv_txt.c **** 
 177:lvgl/src/misc/lv_txt.c ****     if(flag & LV_TEXT_FLAG_EXPAND) max_width = LV_COORD_MAX;
 178:lvgl/src/misc/lv_txt.c **** 
 179:lvgl/src/misc/lv_txt.c ****     uint32_t i = 0, i_next = 0, i_next_next = 0;  /*Iterating index into txt*/
 180:lvgl/src/misc/lv_txt.c ****     uint32_t letter = 0;      /*Letter at i*/
 181:lvgl/src/misc/lv_txt.c ****     uint32_t letter_next = 0; /*Letter at i_next*/
 182:lvgl/src/misc/lv_txt.c ****     lv_coord_t letter_w;
 183:lvgl/src/misc/lv_txt.c ****     lv_coord_t cur_w = 0;  /*Pixel Width of transversed string*/
 184:lvgl/src/misc/lv_txt.c ****     uint32_t word_len = 0;   /*Number of characters in the transversed word*/
 185:lvgl/src/misc/lv_txt.c ****     uint32_t break_index = NO_BREAK_FOUND; /*only used for "long" words*/
 186:lvgl/src/misc/lv_txt.c ****     uint32_t break_letter_count = 0; /*Number of characters up to the long word break point*/
 187:lvgl/src/misc/lv_txt.c **** 
 188:lvgl/src/misc/lv_txt.c ****     letter = _lv_txt_encoded_next(txt, &i_next);
 189:lvgl/src/misc/lv_txt.c ****     i_next_next = i_next;
 190:lvgl/src/misc/lv_txt.c **** 
 191:lvgl/src/misc/lv_txt.c ****     /*Obtain the full word, regardless if it fits or not in max_width*/
 192:lvgl/src/misc/lv_txt.c ****     while(txt[i] != '\0') {
 193:lvgl/src/misc/lv_txt.c ****         letter_next = _lv_txt_encoded_next(txt, &i_next_next);
 194:lvgl/src/misc/lv_txt.c ****         word_len++;
 195:lvgl/src/misc/lv_txt.c **** 
 196:lvgl/src/misc/lv_txt.c ****         /*Handle the recolor command*/
 197:lvgl/src/misc/lv_txt.c ****         if((flag & LV_TEXT_FLAG_RECOLOR) != 0) {
 198:lvgl/src/misc/lv_txt.c ****             if(_lv_txt_is_cmd(cmd_state, letter) != false) {
 199:lvgl/src/misc/lv_txt.c ****                 i = i_next;
 200:lvgl/src/misc/lv_txt.c ****                 i_next = i_next_next;
 201:lvgl/src/misc/lv_txt.c ****                 letter = letter_next;
 202:lvgl/src/misc/lv_txt.c ****                 continue;   /*Skip the letter if it is part of a command*/
ARM GAS  C:\usertemp\ccUwScgV.s 			page 5


 203:lvgl/src/misc/lv_txt.c ****             }
 204:lvgl/src/misc/lv_txt.c ****         }
 205:lvgl/src/misc/lv_txt.c **** 
 206:lvgl/src/misc/lv_txt.c ****         letter_w = lv_font_get_glyph_width(font, letter, letter_next);
 207:lvgl/src/misc/lv_txt.c ****         cur_w += letter_w;
 208:lvgl/src/misc/lv_txt.c **** 
 209:lvgl/src/misc/lv_txt.c ****         if(letter_w > 0) {
 210:lvgl/src/misc/lv_txt.c ****             cur_w += letter_space;
 211:lvgl/src/misc/lv_txt.c ****         }
 212:lvgl/src/misc/lv_txt.c **** 
 213:lvgl/src/misc/lv_txt.c ****         /*Test if this character fits within max_width*/
 214:lvgl/src/misc/lv_txt.c ****         if(break_index == NO_BREAK_FOUND && (cur_w - letter_space) > max_width) {
 215:lvgl/src/misc/lv_txt.c ****             break_index = i;
 216:lvgl/src/misc/lv_txt.c ****             break_letter_count = word_len - 1;
 217:lvgl/src/misc/lv_txt.c ****             /*break_index is now pointing at the character that doesn't fit*/
 218:lvgl/src/misc/lv_txt.c ****         }
 219:lvgl/src/misc/lv_txt.c **** 
 220:lvgl/src/misc/lv_txt.c ****         /*Check for new line chars and breakchars*/
 221:lvgl/src/misc/lv_txt.c ****         if(letter == '\n' || letter == '\r' || _lv_txt_is_break_char(letter)) {
 222:lvgl/src/misc/lv_txt.c ****             /*Update the output width on the first character if it fits.
 223:lvgl/src/misc/lv_txt.c ****              *Must do this here in case first letter is a break character.*/
 224:lvgl/src/misc/lv_txt.c ****             if(i == 0 && break_index == NO_BREAK_FOUND && word_w_ptr != NULL) *word_w_ptr = cur_w;
 225:lvgl/src/misc/lv_txt.c ****             word_len--;
 226:lvgl/src/misc/lv_txt.c ****             break;
 227:lvgl/src/misc/lv_txt.c ****         }
 228:lvgl/src/misc/lv_txt.c **** 
 229:lvgl/src/misc/lv_txt.c ****         /*Update the output width*/
 230:lvgl/src/misc/lv_txt.c ****         if(word_w_ptr != NULL && break_index == NO_BREAK_FOUND) *word_w_ptr = cur_w;
 231:lvgl/src/misc/lv_txt.c **** 
 232:lvgl/src/misc/lv_txt.c ****         i = i_next;
 233:lvgl/src/misc/lv_txt.c ****         i_next = i_next_next;
 234:lvgl/src/misc/lv_txt.c ****         letter = letter_next;
 235:lvgl/src/misc/lv_txt.c ****     }
 236:lvgl/src/misc/lv_txt.c **** 
 237:lvgl/src/misc/lv_txt.c ****     /*Entire Word fits in the provided space*/
 238:lvgl/src/misc/lv_txt.c ****     if(break_index == NO_BREAK_FOUND) {
 239:lvgl/src/misc/lv_txt.c ****         if(word_len == 0 || (letter == '\r' && letter_next == '\n')) i = i_next;
 240:lvgl/src/misc/lv_txt.c ****         return i;
 241:lvgl/src/misc/lv_txt.c ****     }
 242:lvgl/src/misc/lv_txt.c **** 
 243:lvgl/src/misc/lv_txt.c **** #if LV_TXT_LINE_BREAK_LONG_LEN > 0
 244:lvgl/src/misc/lv_txt.c ****     /*Word doesn't fit in provided space, but isn't "long"*/
 245:lvgl/src/misc/lv_txt.c ****     if(word_len < LV_TXT_LINE_BREAK_LONG_LEN) {
 246:lvgl/src/misc/lv_txt.c ****         if(force) return break_index;
 247:lvgl/src/misc/lv_txt.c ****         if(word_w_ptr != NULL) *word_w_ptr = 0; /*Return no word*/
 248:lvgl/src/misc/lv_txt.c ****         return 0;
 249:lvgl/src/misc/lv_txt.c ****     }
 250:lvgl/src/misc/lv_txt.c **** 
 251:lvgl/src/misc/lv_txt.c ****     /*Word is "long," but insufficient amounts can fit in provided space*/
 252:lvgl/src/misc/lv_txt.c ****     if(break_letter_count < LV_TXT_LINE_BREAK_LONG_PRE_MIN_LEN) {
 253:lvgl/src/misc/lv_txt.c ****         if(force) return break_index;
 254:lvgl/src/misc/lv_txt.c ****         if(word_w_ptr != NULL) *word_w_ptr = 0;
 255:lvgl/src/misc/lv_txt.c ****         return 0;
 256:lvgl/src/misc/lv_txt.c ****     }
 257:lvgl/src/misc/lv_txt.c **** 
 258:lvgl/src/misc/lv_txt.c ****     /*Word is a "long", but letters may need to be better distributed*/
 259:lvgl/src/misc/lv_txt.c ****     {
ARM GAS  C:\usertemp\ccUwScgV.s 			page 6


 260:lvgl/src/misc/lv_txt.c ****         i = break_index;
 261:lvgl/src/misc/lv_txt.c ****         int32_t n_move = LV_TXT_LINE_BREAK_LONG_POST_MIN_LEN - (word_len - break_letter_count);
 262:lvgl/src/misc/lv_txt.c ****         /*Move pointer "i" backwards*/
 263:lvgl/src/misc/lv_txt.c ****         for(; n_move > 0; n_move--) {
 264:lvgl/src/misc/lv_txt.c ****             _lv_txt_encoded_prev(txt, &i);
 265:lvgl/src/misc/lv_txt.c ****             // TODO: it would be appropriate to update the returned word width here
 266:lvgl/src/misc/lv_txt.c ****             // However, in current usage, this doesn't impact anything.
 267:lvgl/src/misc/lv_txt.c ****         }
 268:lvgl/src/misc/lv_txt.c ****     }
 269:lvgl/src/misc/lv_txt.c ****     return i;
 270:lvgl/src/misc/lv_txt.c **** #else
 271:lvgl/src/misc/lv_txt.c ****     if(force) return break_index;
 272:lvgl/src/misc/lv_txt.c ****     if(word_w_ptr != NULL) *word_w_ptr = 0; /*Return no word*/
 273:lvgl/src/misc/lv_txt.c ****     (void) break_letter_count;
 274:lvgl/src/misc/lv_txt.c ****     return 0;
 275:lvgl/src/misc/lv_txt.c **** #endif
 276:lvgl/src/misc/lv_txt.c **** }
 277:lvgl/src/misc/lv_txt.c **** 
 278:lvgl/src/misc/lv_txt.c **** uint32_t _lv_txt_get_next_line(const char * txt, const lv_font_t * font,
 279:lvgl/src/misc/lv_txt.c ****                                lv_coord_t letter_space, lv_coord_t max_width,
 280:lvgl/src/misc/lv_txt.c ****                                lv_coord_t * used_width, lv_text_flag_t flag)
 281:lvgl/src/misc/lv_txt.c **** {
 282:lvgl/src/misc/lv_txt.c ****     if(used_width) *used_width = 0;
 283:lvgl/src/misc/lv_txt.c **** 
 284:lvgl/src/misc/lv_txt.c ****     if(txt == NULL) return 0;
 285:lvgl/src/misc/lv_txt.c ****     if(txt[0] == '\0') return 0;
 286:lvgl/src/misc/lv_txt.c ****     if(font == NULL) return 0;
 287:lvgl/src/misc/lv_txt.c **** 
 288:lvgl/src/misc/lv_txt.c ****     lv_coord_t line_w = 0;
 289:lvgl/src/misc/lv_txt.c **** 
 290:lvgl/src/misc/lv_txt.c ****     /*If max_width doesn't mater simply find the new line character
 291:lvgl/src/misc/lv_txt.c ****      *without thinking about word wrapping*/
 292:lvgl/src/misc/lv_txt.c ****     if((flag & LV_TEXT_FLAG_EXPAND) || (flag & LV_TEXT_FLAG_FIT)) {
 293:lvgl/src/misc/lv_txt.c ****         uint32_t i;
 294:lvgl/src/misc/lv_txt.c ****         for(i = 0; txt[i] != '\n' && txt[i] != '\r' && txt[i] != '\0'; i++) {
 295:lvgl/src/misc/lv_txt.c ****             /*Just find the new line chars or string ends by incrementing `i`*/
 296:lvgl/src/misc/lv_txt.c ****         }
 297:lvgl/src/misc/lv_txt.c ****         if(txt[i] != '\0') i++;    /*To go beyond `\n`*/
 298:lvgl/src/misc/lv_txt.c ****         if(used_width) *used_width = -1;
 299:lvgl/src/misc/lv_txt.c ****         return i;
 300:lvgl/src/misc/lv_txt.c ****     }
 301:lvgl/src/misc/lv_txt.c **** 
 302:lvgl/src/misc/lv_txt.c ****     if(flag & LV_TEXT_FLAG_EXPAND) max_width = LV_COORD_MAX;
 303:lvgl/src/misc/lv_txt.c ****     lv_text_cmd_state_t cmd_state = LV_TEXT_CMD_STATE_WAIT;
 304:lvgl/src/misc/lv_txt.c ****     uint32_t i = 0;                                        /*Iterating index into txt*/
 305:lvgl/src/misc/lv_txt.c **** 
 306:lvgl/src/misc/lv_txt.c ****     while(txt[i] != '\0' && max_width > 0) {
 307:lvgl/src/misc/lv_txt.c ****         uint32_t word_w = 0;
 308:lvgl/src/misc/lv_txt.c ****         uint32_t advance = lv_txt_get_next_word(&txt[i], font, letter_space, max_width, flag, &word
 309:lvgl/src/misc/lv_txt.c ****         max_width -= word_w;
 310:lvgl/src/misc/lv_txt.c ****         line_w += word_w;
 311:lvgl/src/misc/lv_txt.c **** 
 312:lvgl/src/misc/lv_txt.c ****         if(advance == 0) {
 313:lvgl/src/misc/lv_txt.c ****             break;
 314:lvgl/src/misc/lv_txt.c ****         }
 315:lvgl/src/misc/lv_txt.c **** 
 316:lvgl/src/misc/lv_txt.c ****         i += advance;
ARM GAS  C:\usertemp\ccUwScgV.s 			page 7


 317:lvgl/src/misc/lv_txt.c **** 
 318:lvgl/src/misc/lv_txt.c ****         if(txt[0] == '\n' || txt[0] == '\r') break;
 319:lvgl/src/misc/lv_txt.c **** 
 320:lvgl/src/misc/lv_txt.c ****         if(txt[i] == '\n' || txt[i] == '\r') {
 321:lvgl/src/misc/lv_txt.c ****             i++;  /*Include the following newline in the current line*/
 322:lvgl/src/misc/lv_txt.c ****             break;
 323:lvgl/src/misc/lv_txt.c ****         }
 324:lvgl/src/misc/lv_txt.c **** 
 325:lvgl/src/misc/lv_txt.c ****     }
 326:lvgl/src/misc/lv_txt.c **** 
 327:lvgl/src/misc/lv_txt.c ****     /*Always step at least one to avoid infinite loops*/
 328:lvgl/src/misc/lv_txt.c ****     if(i == 0) {
 329:lvgl/src/misc/lv_txt.c ****         uint32_t letter = _lv_txt_encoded_next(txt, &i);
 330:lvgl/src/misc/lv_txt.c ****         if(used_width != NULL) {
 331:lvgl/src/misc/lv_txt.c ****             line_w = lv_font_get_glyph_width(font, letter, '\0');
 332:lvgl/src/misc/lv_txt.c ****         }
 333:lvgl/src/misc/lv_txt.c ****     }
 334:lvgl/src/misc/lv_txt.c **** 
 335:lvgl/src/misc/lv_txt.c ****     if(used_width != NULL) {
 336:lvgl/src/misc/lv_txt.c ****         *used_width = line_w;
 337:lvgl/src/misc/lv_txt.c ****     }
 338:lvgl/src/misc/lv_txt.c **** 
 339:lvgl/src/misc/lv_txt.c ****     return i;
 340:lvgl/src/misc/lv_txt.c **** }
 341:lvgl/src/misc/lv_txt.c **** 
 342:lvgl/src/misc/lv_txt.c **** lv_coord_t lv_txt_get_width(const char * txt, uint32_t length, const lv_font_t * font, lv_coord_t l
 343:lvgl/src/misc/lv_txt.c ****                             lv_text_flag_t flag)
 344:lvgl/src/misc/lv_txt.c **** {
 345:lvgl/src/misc/lv_txt.c ****     if(txt == NULL) return 0;
 346:lvgl/src/misc/lv_txt.c ****     if(font == NULL) return 0;
 347:lvgl/src/misc/lv_txt.c ****     if(txt[0] == '\0') return 0;
 348:lvgl/src/misc/lv_txt.c **** 
 349:lvgl/src/misc/lv_txt.c ****     uint32_t i                   = 0;
 350:lvgl/src/misc/lv_txt.c ****     lv_coord_t width             = 0;
 351:lvgl/src/misc/lv_txt.c ****     lv_text_cmd_state_t cmd_state = LV_TEXT_CMD_STATE_WAIT;
 352:lvgl/src/misc/lv_txt.c **** 
 353:lvgl/src/misc/lv_txt.c ****     if(length != 0) {
 354:lvgl/src/misc/lv_txt.c ****         while(i < length) {
 355:lvgl/src/misc/lv_txt.c ****             uint32_t letter;
 356:lvgl/src/misc/lv_txt.c ****             uint32_t letter_next;
 357:lvgl/src/misc/lv_txt.c ****             _lv_txt_encoded_letter_next_2(txt, &letter, &letter_next, &i);
 358:lvgl/src/misc/lv_txt.c **** 
 359:lvgl/src/misc/lv_txt.c ****             if((flag & LV_TEXT_FLAG_RECOLOR) != 0) {
 360:lvgl/src/misc/lv_txt.c ****                 if(_lv_txt_is_cmd(&cmd_state, letter) != false) {
 361:lvgl/src/misc/lv_txt.c ****                     continue;
 362:lvgl/src/misc/lv_txt.c ****                 }
 363:lvgl/src/misc/lv_txt.c ****             }
 364:lvgl/src/misc/lv_txt.c **** 
 365:lvgl/src/misc/lv_txt.c ****             lv_coord_t char_width = lv_font_get_glyph_width(font, letter, letter_next);
 366:lvgl/src/misc/lv_txt.c ****             if(char_width > 0) {
 367:lvgl/src/misc/lv_txt.c ****                 width += char_width;
 368:lvgl/src/misc/lv_txt.c ****                 width += letter_space;
 369:lvgl/src/misc/lv_txt.c ****             }
 370:lvgl/src/misc/lv_txt.c ****         }
 371:lvgl/src/misc/lv_txt.c **** 
 372:lvgl/src/misc/lv_txt.c ****         if(width > 0) {
 373:lvgl/src/misc/lv_txt.c ****             width -= letter_space; /*Trim the last letter space. Important if the text is center
ARM GAS  C:\usertemp\ccUwScgV.s 			page 8


 374:lvgl/src/misc/lv_txt.c ****                                       aligned*/
 375:lvgl/src/misc/lv_txt.c ****         }
 376:lvgl/src/misc/lv_txt.c ****     }
 377:lvgl/src/misc/lv_txt.c **** 
 378:lvgl/src/misc/lv_txt.c ****     return width;
 379:lvgl/src/misc/lv_txt.c **** }
 380:lvgl/src/misc/lv_txt.c **** 
 381:lvgl/src/misc/lv_txt.c **** bool _lv_txt_is_cmd(lv_text_cmd_state_t * state, uint32_t c)
 382:lvgl/src/misc/lv_txt.c **** {
 383:lvgl/src/misc/lv_txt.c ****     bool ret = false;
 384:lvgl/src/misc/lv_txt.c **** 
 385:lvgl/src/misc/lv_txt.c ****     if(c == (uint32_t)LV_TXT_COLOR_CMD[0]) {
 386:lvgl/src/misc/lv_txt.c ****         if(*state == LV_TEXT_CMD_STATE_WAIT) { /*Start char*/
 387:lvgl/src/misc/lv_txt.c ****             *state = LV_TEXT_CMD_STATE_PAR;
 388:lvgl/src/misc/lv_txt.c ****             ret    = true;
 389:lvgl/src/misc/lv_txt.c ****         }
 390:lvgl/src/misc/lv_txt.c ****         /*Other start char in parameter is escaped cmd. char*/
 391:lvgl/src/misc/lv_txt.c ****         else if(*state == LV_TEXT_CMD_STATE_PAR) {
 392:lvgl/src/misc/lv_txt.c ****             *state = LV_TEXT_CMD_STATE_WAIT;
 393:lvgl/src/misc/lv_txt.c ****         }
 394:lvgl/src/misc/lv_txt.c ****         /*Command end*/
 395:lvgl/src/misc/lv_txt.c ****         else if(*state == LV_TEXT_CMD_STATE_IN) {
 396:lvgl/src/misc/lv_txt.c ****             *state = LV_TEXT_CMD_STATE_WAIT;
 397:lvgl/src/misc/lv_txt.c ****             ret    = true;
 398:lvgl/src/misc/lv_txt.c ****         }
 399:lvgl/src/misc/lv_txt.c ****     }
 400:lvgl/src/misc/lv_txt.c **** 
 401:lvgl/src/misc/lv_txt.c ****     /*Skip the color parameter and wait the space after it*/
 402:lvgl/src/misc/lv_txt.c ****     if(*state == LV_TEXT_CMD_STATE_PAR) {
 403:lvgl/src/misc/lv_txt.c ****         if(c == ' ') {
 404:lvgl/src/misc/lv_txt.c ****             *state = LV_TEXT_CMD_STATE_IN; /*After the parameter the text is in the command*/
 405:lvgl/src/misc/lv_txt.c ****         }
 406:lvgl/src/misc/lv_txt.c ****         ret = true;
 407:lvgl/src/misc/lv_txt.c ****     }
 408:lvgl/src/misc/lv_txt.c **** 
 409:lvgl/src/misc/lv_txt.c ****     return ret;
 410:lvgl/src/misc/lv_txt.c **** }
 411:lvgl/src/misc/lv_txt.c **** 
 412:lvgl/src/misc/lv_txt.c **** void _lv_txt_ins(char * txt_buf, uint32_t pos, const char * ins_txt)
 413:lvgl/src/misc/lv_txt.c **** {
 414:lvgl/src/misc/lv_txt.c ****     if(txt_buf == NULL || ins_txt == NULL) return;
 415:lvgl/src/misc/lv_txt.c **** 
 416:lvgl/src/misc/lv_txt.c ****     size_t old_len = strlen(txt_buf);
 417:lvgl/src/misc/lv_txt.c ****     size_t ins_len = strlen(ins_txt);
 418:lvgl/src/misc/lv_txt.c ****     if(ins_len == 0) return;
 419:lvgl/src/misc/lv_txt.c **** 
 420:lvgl/src/misc/lv_txt.c ****     size_t new_len = ins_len + old_len;
 421:lvgl/src/misc/lv_txt.c ****     pos              = _lv_txt_encoded_get_byte_id(txt_buf, pos); /*Convert to byte index instead o
 422:lvgl/src/misc/lv_txt.c **** 
 423:lvgl/src/misc/lv_txt.c ****     /*Copy the second part into the end to make place to text to insert*/
 424:lvgl/src/misc/lv_txt.c ****     size_t i;
 425:lvgl/src/misc/lv_txt.c ****     for(i = new_len; i >= pos + ins_len; i--) {
 426:lvgl/src/misc/lv_txt.c ****         txt_buf[i] = txt_buf[i - ins_len];
 427:lvgl/src/misc/lv_txt.c ****     }
 428:lvgl/src/misc/lv_txt.c **** 
 429:lvgl/src/misc/lv_txt.c ****     /*Copy the text into the new space*/
 430:lvgl/src/misc/lv_txt.c ****     lv_memcpy_small(txt_buf + pos, ins_txt, ins_len);
ARM GAS  C:\usertemp\ccUwScgV.s 			page 9


 431:lvgl/src/misc/lv_txt.c **** }
 432:lvgl/src/misc/lv_txt.c **** 
 433:lvgl/src/misc/lv_txt.c **** void _lv_txt_cut(char * txt, uint32_t pos, uint32_t len)
 434:lvgl/src/misc/lv_txt.c **** {
 435:lvgl/src/misc/lv_txt.c ****     if(txt == NULL) return;
 436:lvgl/src/misc/lv_txt.c **** 
 437:lvgl/src/misc/lv_txt.c ****     size_t old_len = strlen(txt);
 438:lvgl/src/misc/lv_txt.c **** 
 439:lvgl/src/misc/lv_txt.c ****     pos = _lv_txt_encoded_get_byte_id(txt, pos); /*Convert to byte index instead of letter index*/
 440:lvgl/src/misc/lv_txt.c ****     len = _lv_txt_encoded_get_byte_id(&txt[pos], len);
 441:lvgl/src/misc/lv_txt.c **** 
 442:lvgl/src/misc/lv_txt.c ****     /*Copy the second part into the end to make place to text to insert*/
 443:lvgl/src/misc/lv_txt.c ****     uint32_t i;
 444:lvgl/src/misc/lv_txt.c ****     for(i = pos; i <= old_len - len; i++) {
 445:lvgl/src/misc/lv_txt.c ****         txt[i] = txt[i + len];
 446:lvgl/src/misc/lv_txt.c ****     }
 447:lvgl/src/misc/lv_txt.c **** }
 448:lvgl/src/misc/lv_txt.c **** 
 449:lvgl/src/misc/lv_txt.c **** char * _lv_txt_set_text_vfmt(const char * fmt, va_list ap)
 450:lvgl/src/misc/lv_txt.c **** {
 451:lvgl/src/misc/lv_txt.c ****     /*Allocate space for the new text by using trick from C99 standard section 7.19.6.12*/
 452:lvgl/src/misc/lv_txt.c ****     va_list ap_copy;
 453:lvgl/src/misc/lv_txt.c ****     va_copy(ap_copy, ap);
 454:lvgl/src/misc/lv_txt.c ****     uint32_t len = lv_vsnprintf(NULL, 0, fmt, ap_copy);
 455:lvgl/src/misc/lv_txt.c ****     va_end(ap_copy);
 456:lvgl/src/misc/lv_txt.c **** 
 457:lvgl/src/misc/lv_txt.c ****     char * text = 0;
 458:lvgl/src/misc/lv_txt.c **** #if LV_USE_ARABIC_PERSIAN_CHARS
 459:lvgl/src/misc/lv_txt.c ****     /*Put together the text according to the format string*/
 460:lvgl/src/misc/lv_txt.c ****     char * raw_txt = lv_mem_buf_get(len + 1);
 461:lvgl/src/misc/lv_txt.c ****     LV_ASSERT_MALLOC(raw_txt);
 462:lvgl/src/misc/lv_txt.c ****     if(raw_txt == NULL) {
 463:lvgl/src/misc/lv_txt.c ****         return NULL;
 464:lvgl/src/misc/lv_txt.c ****     }
 465:lvgl/src/misc/lv_txt.c **** 
 466:lvgl/src/misc/lv_txt.c ****     lv_vsnprintf(raw_txt, len + 1, fmt, ap);
 467:lvgl/src/misc/lv_txt.c **** 
 468:lvgl/src/misc/lv_txt.c ****     /*Get the size of the Arabic text and process it*/
 469:lvgl/src/misc/lv_txt.c ****     size_t len_ap = _lv_txt_ap_calc_bytes_cnt(raw_txt);
 470:lvgl/src/misc/lv_txt.c ****     text = lv_mem_alloc(len_ap + 1);
 471:lvgl/src/misc/lv_txt.c ****     LV_ASSERT_MALLOC(text);
 472:lvgl/src/misc/lv_txt.c ****     if(text == NULL) {
 473:lvgl/src/misc/lv_txt.c ****         return NULL;
 474:lvgl/src/misc/lv_txt.c ****     }
 475:lvgl/src/misc/lv_txt.c ****     _lv_txt_ap_proc(raw_txt, text);
 476:lvgl/src/misc/lv_txt.c **** 
 477:lvgl/src/misc/lv_txt.c ****     lv_mem_buf_release(raw_txt);
 478:lvgl/src/misc/lv_txt.c **** #else
 479:lvgl/src/misc/lv_txt.c ****     text = lv_mem_alloc(len + 1);
 480:lvgl/src/misc/lv_txt.c ****     LV_ASSERT_MALLOC(text);
 481:lvgl/src/misc/lv_txt.c ****     if(text == NULL) {
 482:lvgl/src/misc/lv_txt.c ****         return NULL;
 483:lvgl/src/misc/lv_txt.c ****     }
 484:lvgl/src/misc/lv_txt.c ****     text[len] = 0; /*Ensure NULL termination*/
 485:lvgl/src/misc/lv_txt.c **** 
 486:lvgl/src/misc/lv_txt.c ****     lv_vsnprintf(text, len + 1, fmt, ap);
 487:lvgl/src/misc/lv_txt.c **** #endif
ARM GAS  C:\usertemp\ccUwScgV.s 			page 10


 488:lvgl/src/misc/lv_txt.c **** 
 489:lvgl/src/misc/lv_txt.c ****     return text;
 490:lvgl/src/misc/lv_txt.c **** }
 491:lvgl/src/misc/lv_txt.c **** 
 492:lvgl/src/misc/lv_txt.c **** void _lv_txt_encoded_letter_next_2(const char * txt, uint32_t * letter, uint32_t * letter_next, uin
 493:lvgl/src/misc/lv_txt.c **** {
 494:lvgl/src/misc/lv_txt.c ****     *letter = _lv_txt_encoded_next(txt, ofs);
 495:lvgl/src/misc/lv_txt.c ****     *letter_next = *letter != '\0' ? _lv_txt_encoded_next(&txt[*ofs], NULL) : 0;
 496:lvgl/src/misc/lv_txt.c **** }
 497:lvgl/src/misc/lv_txt.c **** 
 498:lvgl/src/misc/lv_txt.c **** #if LV_TXT_ENC == LV_TXT_ENC_UTF8
 499:lvgl/src/misc/lv_txt.c **** /*******************************
 500:lvgl/src/misc/lv_txt.c ****  *   UTF-8 ENCODER/DECODER
 501:lvgl/src/misc/lv_txt.c ****  ******************************/
 502:lvgl/src/misc/lv_txt.c **** 
 503:lvgl/src/misc/lv_txt.c **** /**
 504:lvgl/src/misc/lv_txt.c ****  * Give the size of an UTF-8 coded character
 505:lvgl/src/misc/lv_txt.c ****  * @param str pointer to a character in a string
 506:lvgl/src/misc/lv_txt.c ****  * @return length of the UTF-8 character (1,2,3 or 4), 0 on invalid code.
 507:lvgl/src/misc/lv_txt.c ****  */
 508:lvgl/src/misc/lv_txt.c **** static uint8_t lv_txt_utf8_size(const char * str)
 509:lvgl/src/misc/lv_txt.c **** {
  28              		.loc 1 509 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 510:lvgl/src/misc/lv_txt.c ****     if(LV_IS_ASCII(str[0]))
  33              		.loc 1 510 5 view .LVU1
  34              		.loc 1 510 8 is_stmt 0 view .LVU2
  35 0000 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
  36 0002 90F90020 		ldrsb	r2, [r0]
  37              		.loc 1 510 7 view .LVU3
  38 0006 002A     		cmp	r2, #0
  39 0008 0DDA     		bge	.L3
 511:lvgl/src/misc/lv_txt.c ****         return 1;
 512:lvgl/src/misc/lv_txt.c ****     else if(LV_IS_2BYTES_UTF8_CODE(str[0]))
  40              		.loc 1 512 10 is_stmt 1 view .LVU4
  41              		.loc 1 512 12 is_stmt 0 view .LVU5
  42 000a 03F0E002 		and	r2, r3, #224
  43 000e C02A     		cmp	r2, #192
  44 0010 0BD0     		beq	.L4
 513:lvgl/src/misc/lv_txt.c ****         return 2;
 514:lvgl/src/misc/lv_txt.c ****     else if(LV_IS_3BYTES_UTF8_CODE(str[0]))
  45              		.loc 1 514 10 is_stmt 1 view .LVU6
  46              		.loc 1 514 12 is_stmt 0 view .LVU7
  47 0012 03F0F002 		and	r2, r3, #240
  48 0016 E02A     		cmp	r2, #224
  49 0018 09D0     		beq	.L5
 515:lvgl/src/misc/lv_txt.c ****         return 3;
 516:lvgl/src/misc/lv_txt.c ****     else if(LV_IS_4BYTES_UTF8_CODE(str[0]))
  50              		.loc 1 516 10 is_stmt 1 view .LVU8
  51              		.loc 1 516 12 is_stmt 0 view .LVU9
  52 001a 03F0F803 		and	r3, r3, #248
  53 001e F02B     		cmp	r3, #240
  54 0020 07D0     		beq	.L6
 517:lvgl/src/misc/lv_txt.c ****         return 4;
ARM GAS  C:\usertemp\ccUwScgV.s 			page 11


 518:lvgl/src/misc/lv_txt.c ****     return 0;
  55              		.loc 1 518 12 view .LVU10
  56 0022 0020     		movs	r0, #0
  57              	.LVL1:
  58              		.loc 1 518 12 view .LVU11
  59 0024 7047     		bx	lr
  60              	.LVL2:
  61              	.L3:
 511:lvgl/src/misc/lv_txt.c ****     else if(LV_IS_2BYTES_UTF8_CODE(str[0]))
  62              		.loc 1 511 16 view .LVU12
  63 0026 0120     		movs	r0, #1
  64              	.LVL3:
 511:lvgl/src/misc/lv_txt.c ****     else if(LV_IS_2BYTES_UTF8_CODE(str[0]))
  65              		.loc 1 511 16 view .LVU13
  66 0028 7047     		bx	lr
  67              	.LVL4:
  68              	.L4:
 513:lvgl/src/misc/lv_txt.c ****     else if(LV_IS_3BYTES_UTF8_CODE(str[0]))
  69              		.loc 1 513 16 view .LVU14
  70 002a 0220     		movs	r0, #2
  71              	.LVL5:
 513:lvgl/src/misc/lv_txt.c ****     else if(LV_IS_3BYTES_UTF8_CODE(str[0]))
  72              		.loc 1 513 16 view .LVU15
  73 002c 7047     		bx	lr
  74              	.LVL6:
  75              	.L5:
 515:lvgl/src/misc/lv_txt.c ****     else if(LV_IS_4BYTES_UTF8_CODE(str[0]))
  76              		.loc 1 515 16 view .LVU16
  77 002e 0320     		movs	r0, #3
  78              	.LVL7:
 515:lvgl/src/misc/lv_txt.c ****     else if(LV_IS_4BYTES_UTF8_CODE(str[0]))
  79              		.loc 1 515 16 view .LVU17
  80 0030 7047     		bx	lr
  81              	.LVL8:
  82              	.L6:
 517:lvgl/src/misc/lv_txt.c ****     return 0;
  83              		.loc 1 517 16 view .LVU18
  84 0032 0420     		movs	r0, #4
  85              	.LVL9:
 519:lvgl/src/misc/lv_txt.c **** }
  86              		.loc 1 519 1 view .LVU19
  87 0034 7047     		bx	lr
  88              		.cfi_endproc
  89              	.LFE65:
  91              		.section	.text.lv_txt_unicode_to_utf8,"ax",%progbits
  92              		.align	1
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  97              	lv_txt_unicode_to_utf8:
  98              	.LVL10:
  99              	.LFB66:
 520:lvgl/src/misc/lv_txt.c **** 
 521:lvgl/src/misc/lv_txt.c **** /**
 522:lvgl/src/misc/lv_txt.c ****  * Convert an Unicode letter to UTF-8.
 523:lvgl/src/misc/lv_txt.c ****  * @param letter_uni an Unicode letter
 524:lvgl/src/misc/lv_txt.c ****  * @return UTF-8 coded character in Little Endian to be compatible with C chars (e.g. 'Á', 'Ű')
ARM GAS  C:\usertemp\ccUwScgV.s 			page 12


 525:lvgl/src/misc/lv_txt.c ****  */
 526:lvgl/src/misc/lv_txt.c **** static uint32_t lv_txt_unicode_to_utf8(uint32_t letter_uni)
 527:lvgl/src/misc/lv_txt.c **** {
 100              		.loc 1 527 1 is_stmt 1 view -0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 8
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104              		@ link register save eliminated.
 528:lvgl/src/misc/lv_txt.c ****     if(letter_uni < 128) return letter_uni;
 105              		.loc 1 528 5 view .LVU21
 106              		.loc 1 528 7 is_stmt 0 view .LVU22
 107 0000 7F28     		cmp	r0, #127
 108 0002 4CD9     		bls	.L14
 527:lvgl/src/misc/lv_txt.c ****     if(letter_uni < 128) return letter_uni;
 109              		.loc 1 527 1 view .LVU23
 110 0004 82B0     		sub	sp, sp, #8
 111              	.LCFI0:
 112              		.cfi_def_cfa_offset 8
 529:lvgl/src/misc/lv_txt.c ****     uint8_t bytes[4];
 113              		.loc 1 529 5 is_stmt 1 view .LVU24
 530:lvgl/src/misc/lv_txt.c **** 
 531:lvgl/src/misc/lv_txt.c ****     if(letter_uni < 0x0800) {
 114              		.loc 1 531 5 view .LVU25
 115              		.loc 1 531 7 is_stmt 0 view .LVU26
 116 0006 B0F5006F 		cmp	r0, #2048
 117 000a 13D2     		bcs	.L9
 532:lvgl/src/misc/lv_txt.c ****         bytes[0] = ((letter_uni >> 6) & 0x1F) | 0xC0;
 118              		.loc 1 532 9 is_stmt 1 view .LVU27
 119              		.loc 1 532 39 is_stmt 0 view .LVU28
 120 000c C0F38413 		ubfx	r3, r0, #6, #5
 121              		.loc 1 532 47 view .LVU29
 122 0010 43F0C003 		orr	r3, r3, #192
 123              		.loc 1 532 18 view .LVU30
 124 0014 8DF80430 		strb	r3, [sp, #4]
 533:lvgl/src/misc/lv_txt.c ****         bytes[1] = ((letter_uni >> 0) & 0x3F) | 0x80;
 125              		.loc 1 533 9 is_stmt 1 view .LVU31
 126              		.loc 1 533 39 is_stmt 0 view .LVU32
 127 0018 00F03F00 		and	r0, r0, #63
 128              	.LVL11:
 129              		.loc 1 533 47 view .LVU33
 130 001c 40F08000 		orr	r0, r0, #128
 131              		.loc 1 533 18 view .LVU34
 132 0020 8DF80500 		strb	r0, [sp, #5]
 534:lvgl/src/misc/lv_txt.c ****         bytes[2] = 0;
 133              		.loc 1 534 9 is_stmt 1 view .LVU35
 134              		.loc 1 534 18 is_stmt 0 view .LVU36
 135 0024 0023     		movs	r3, #0
 136 0026 8DF80630 		strb	r3, [sp, #6]
 535:lvgl/src/misc/lv_txt.c ****         bytes[3] = 0;
 137              		.loc 1 535 9 is_stmt 1 view .LVU37
 138              		.loc 1 535 18 is_stmt 0 view .LVU38
 139 002a 8DF80730 		strb	r3, [sp, #7]
 140              	.L10:
 536:lvgl/src/misc/lv_txt.c ****     }
 537:lvgl/src/misc/lv_txt.c ****     else if(letter_uni < 0x010000) {
 538:lvgl/src/misc/lv_txt.c ****         bytes[0] = ((letter_uni >> 12) & 0x0F) | 0xE0;
 539:lvgl/src/misc/lv_txt.c ****         bytes[1] = ((letter_uni >> 6) & 0x3F) | 0x80;
ARM GAS  C:\usertemp\ccUwScgV.s 			page 13


 540:lvgl/src/misc/lv_txt.c ****         bytes[2] = ((letter_uni >> 0) & 0x3F) | 0x80;
 541:lvgl/src/misc/lv_txt.c ****         bytes[3] = 0;
 542:lvgl/src/misc/lv_txt.c ****     }
 543:lvgl/src/misc/lv_txt.c ****     else if(letter_uni < 0x110000) {
 544:lvgl/src/misc/lv_txt.c ****         bytes[0] = ((letter_uni >> 18) & 0x07) | 0xF0;
 545:lvgl/src/misc/lv_txt.c ****         bytes[1] = ((letter_uni >> 12) & 0x3F) | 0x80;
 546:lvgl/src/misc/lv_txt.c ****         bytes[2] = ((letter_uni >> 6) & 0x3F) | 0x80;
 547:lvgl/src/misc/lv_txt.c ****         bytes[3] = ((letter_uni >> 0) & 0x3F) | 0x80;
 548:lvgl/src/misc/lv_txt.c ****     }
 549:lvgl/src/misc/lv_txt.c **** 
 550:lvgl/src/misc/lv_txt.c ****     uint32_t * res_p = (uint32_t *)bytes;
 141              		.loc 1 550 5 is_stmt 1 view .LVU39
 142              	.LVL12:
 551:lvgl/src/misc/lv_txt.c ****     return *res_p;
 143              		.loc 1 551 5 view .LVU40
 144              		.loc 1 551 12 is_stmt 0 view .LVU41
 145 002e 0198     		ldr	r0, [sp, #4]
 552:lvgl/src/misc/lv_txt.c **** }
 146              		.loc 1 552 1 view .LVU42
 147 0030 02B0     		add	sp, sp, #8
 148              	.LCFI1:
 149              		.cfi_remember_state
 150              		.cfi_def_cfa_offset 0
 151              	.LVL13:
 152              		.loc 1 552 1 view .LVU43
 153              		@ sp needed
 154 0032 7047     		bx	lr
 155              	.LVL14:
 156              	.L9:
 157              	.LCFI2:
 158              		.cfi_restore_state
 537:lvgl/src/misc/lv_txt.c ****         bytes[0] = ((letter_uni >> 12) & 0x0F) | 0xE0;
 159              		.loc 1 537 10 is_stmt 1 view .LVU44
 537:lvgl/src/misc/lv_txt.c ****         bytes[0] = ((letter_uni >> 12) & 0x0F) | 0xE0;
 160              		.loc 1 537 12 is_stmt 0 view .LVU45
 161 0034 B0F5803F 		cmp	r0, #65536
 162 0038 15D2     		bcs	.L11
 538:lvgl/src/misc/lv_txt.c ****         bytes[1] = ((letter_uni >> 6) & 0x3F) | 0x80;
 163              		.loc 1 538 9 is_stmt 1 view .LVU46
 538:lvgl/src/misc/lv_txt.c ****         bytes[1] = ((letter_uni >> 6) & 0x3F) | 0x80;
 164              		.loc 1 538 40 is_stmt 0 view .LVU47
 165 003a C0F30333 		ubfx	r3, r0, #12, #4
 538:lvgl/src/misc/lv_txt.c ****         bytes[1] = ((letter_uni >> 6) & 0x3F) | 0x80;
 166              		.loc 1 538 48 view .LVU48
 167 003e 43F0E003 		orr	r3, r3, #224
 538:lvgl/src/misc/lv_txt.c ****         bytes[1] = ((letter_uni >> 6) & 0x3F) | 0x80;
 168              		.loc 1 538 18 view .LVU49
 169 0042 8DF80430 		strb	r3, [sp, #4]
 539:lvgl/src/misc/lv_txt.c ****         bytes[2] = ((letter_uni >> 0) & 0x3F) | 0x80;
 170              		.loc 1 539 9 is_stmt 1 view .LVU50
 539:lvgl/src/misc/lv_txt.c ****         bytes[2] = ((letter_uni >> 0) & 0x3F) | 0x80;
 171              		.loc 1 539 39 is_stmt 0 view .LVU51
 172 0046 C0F38513 		ubfx	r3, r0, #6, #6
 539:lvgl/src/misc/lv_txt.c ****         bytes[2] = ((letter_uni >> 0) & 0x3F) | 0x80;
 173              		.loc 1 539 47 view .LVU52
 174 004a 43F08003 		orr	r3, r3, #128
 539:lvgl/src/misc/lv_txt.c ****         bytes[2] = ((letter_uni >> 0) & 0x3F) | 0x80;
ARM GAS  C:\usertemp\ccUwScgV.s 			page 14


 175              		.loc 1 539 18 view .LVU53
 176 004e 8DF80530 		strb	r3, [sp, #5]
 540:lvgl/src/misc/lv_txt.c ****         bytes[3] = 0;
 177              		.loc 1 540 9 is_stmt 1 view .LVU54
 540:lvgl/src/misc/lv_txt.c ****         bytes[3] = 0;
 178              		.loc 1 540 39 is_stmt 0 view .LVU55
 179 0052 00F03F00 		and	r0, r0, #63
 180              	.LVL15:
 540:lvgl/src/misc/lv_txt.c ****         bytes[3] = 0;
 181              		.loc 1 540 47 view .LVU56
 182 0056 40F08000 		orr	r0, r0, #128
 540:lvgl/src/misc/lv_txt.c ****         bytes[3] = 0;
 183              		.loc 1 540 18 view .LVU57
 184 005a 8DF80600 		strb	r0, [sp, #6]
 541:lvgl/src/misc/lv_txt.c ****     }
 185              		.loc 1 541 9 is_stmt 1 view .LVU58
 541:lvgl/src/misc/lv_txt.c ****     }
 186              		.loc 1 541 18 is_stmt 0 view .LVU59
 187 005e 0023     		movs	r3, #0
 188 0060 8DF80730 		strb	r3, [sp, #7]
 189 0064 E3E7     		b	.L10
 190              	.LVL16:
 191              	.L11:
 543:lvgl/src/misc/lv_txt.c ****         bytes[0] = ((letter_uni >> 18) & 0x07) | 0xF0;
 192              		.loc 1 543 10 is_stmt 1 view .LVU60
 543:lvgl/src/misc/lv_txt.c ****         bytes[0] = ((letter_uni >> 18) & 0x07) | 0xF0;
 193              		.loc 1 543 12 is_stmt 0 view .LVU61
 194 0066 B0F5881F 		cmp	r0, #1114112
 195 006a E0D2     		bcs	.L10
 544:lvgl/src/misc/lv_txt.c ****         bytes[1] = ((letter_uni >> 12) & 0x3F) | 0x80;
 196              		.loc 1 544 9 is_stmt 1 view .LVU62
 544:lvgl/src/misc/lv_txt.c ****         bytes[1] = ((letter_uni >> 12) & 0x3F) | 0x80;
 197              		.loc 1 544 40 is_stmt 0 view .LVU63
 198 006c C0F38243 		ubfx	r3, r0, #18, #3
 544:lvgl/src/misc/lv_txt.c ****         bytes[1] = ((letter_uni >> 12) & 0x3F) | 0x80;
 199              		.loc 1 544 48 view .LVU64
 200 0070 43F0F003 		orr	r3, r3, #240
 544:lvgl/src/misc/lv_txt.c ****         bytes[1] = ((letter_uni >> 12) & 0x3F) | 0x80;
 201              		.loc 1 544 18 view .LVU65
 202 0074 8DF80430 		strb	r3, [sp, #4]
 545:lvgl/src/misc/lv_txt.c ****         bytes[2] = ((letter_uni >> 6) & 0x3F) | 0x80;
 203              		.loc 1 545 9 is_stmt 1 view .LVU66
 545:lvgl/src/misc/lv_txt.c ****         bytes[2] = ((letter_uni >> 6) & 0x3F) | 0x80;
 204              		.loc 1 545 40 is_stmt 0 view .LVU67
 205 0078 C0F30533 		ubfx	r3, r0, #12, #6
 545:lvgl/src/misc/lv_txt.c ****         bytes[2] = ((letter_uni >> 6) & 0x3F) | 0x80;
 206              		.loc 1 545 48 view .LVU68
 207 007c 43F08003 		orr	r3, r3, #128
 545:lvgl/src/misc/lv_txt.c ****         bytes[2] = ((letter_uni >> 6) & 0x3F) | 0x80;
 208              		.loc 1 545 18 view .LVU69
 209 0080 8DF80530 		strb	r3, [sp, #5]
 546:lvgl/src/misc/lv_txt.c ****         bytes[3] = ((letter_uni >> 0) & 0x3F) | 0x80;
 210              		.loc 1 546 9 is_stmt 1 view .LVU70
 546:lvgl/src/misc/lv_txt.c ****         bytes[3] = ((letter_uni >> 0) & 0x3F) | 0x80;
 211              		.loc 1 546 39 is_stmt 0 view .LVU71
 212 0084 C0F38513 		ubfx	r3, r0, #6, #6
 546:lvgl/src/misc/lv_txt.c ****         bytes[3] = ((letter_uni >> 0) & 0x3F) | 0x80;
ARM GAS  C:\usertemp\ccUwScgV.s 			page 15


 213              		.loc 1 546 47 view .LVU72
 214 0088 43F08003 		orr	r3, r3, #128
 546:lvgl/src/misc/lv_txt.c ****         bytes[3] = ((letter_uni >> 0) & 0x3F) | 0x80;
 215              		.loc 1 546 18 view .LVU73
 216 008c 8DF80630 		strb	r3, [sp, #6]
 547:lvgl/src/misc/lv_txt.c ****     }
 217              		.loc 1 547 9 is_stmt 1 view .LVU74
 547:lvgl/src/misc/lv_txt.c ****     }
 218              		.loc 1 547 39 is_stmt 0 view .LVU75
 219 0090 00F03F00 		and	r0, r0, #63
 220              	.LVL17:
 547:lvgl/src/misc/lv_txt.c ****     }
 221              		.loc 1 547 47 view .LVU76
 222 0094 40F08000 		orr	r0, r0, #128
 547:lvgl/src/misc/lv_txt.c ****     }
 223              		.loc 1 547 18 view .LVU77
 224 0098 8DF80700 		strb	r0, [sp, #7]
 225 009c C7E7     		b	.L10
 226              	.LVL18:
 227              	.L14:
 228              	.LCFI3:
 229              		.cfi_def_cfa_offset 0
 230              		.loc 1 552 1 view .LVU78
 231 009e 7047     		bx	lr
 232              		.cfi_endproc
 233              	.LFE66:
 235              		.section	.text.lv_txt_utf8_conv_wc,"ax",%progbits
 236              		.align	1
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 241              	lv_txt_utf8_conv_wc:
 242              	.LVL19:
 243              	.LFB67:
 553:lvgl/src/misc/lv_txt.c **** 
 554:lvgl/src/misc/lv_txt.c **** /**
 555:lvgl/src/misc/lv_txt.c ****  * Convert a wide character, e.g. 'Á' little endian to be UTF-8 compatible
 556:lvgl/src/misc/lv_txt.c ****  * @param c a wide character or a  Little endian number
 557:lvgl/src/misc/lv_txt.c ****  * @return `c` in big endian
 558:lvgl/src/misc/lv_txt.c ****  */
 559:lvgl/src/misc/lv_txt.c **** static uint32_t lv_txt_utf8_conv_wc(uint32_t c)
 560:lvgl/src/misc/lv_txt.c **** {
 244              		.loc 1 560 1 is_stmt 1 view -0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 16
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              		@ link register save eliminated.
 249              		.loc 1 560 1 is_stmt 0 view .LVU80
 250 0000 84B0     		sub	sp, sp, #16
 251              	.LCFI4:
 252              		.cfi_def_cfa_offset 16
 253 0002 0190     		str	r0, [sp, #4]
 561:lvgl/src/misc/lv_txt.c **** #if LV_BIG_ENDIAN_SYSTEM == 0
 562:lvgl/src/misc/lv_txt.c ****     /*Swap the bytes (UTF-8 is big endian, but the MCUs are little endian)*/
 563:lvgl/src/misc/lv_txt.c ****     if((c & 0x80) != 0) {
 254              		.loc 1 563 5 is_stmt 1 view .LVU81
 255              		.loc 1 563 7 is_stmt 0 view .LVU82
ARM GAS  C:\usertemp\ccUwScgV.s 			page 16


 256 0004 10F0800F 		tst	r0, #128
 257 0008 19D1     		bne	.L24
 258              	.LVL20:
 259              	.L19:
 564:lvgl/src/misc/lv_txt.c ****         uint32_t swapped;
 565:lvgl/src/misc/lv_txt.c ****         uint8_t c8[4];
 566:lvgl/src/misc/lv_txt.c ****         lv_memcpy_small(c8, &c, 4);
 567:lvgl/src/misc/lv_txt.c ****         swapped = (c8[0] << 24) + (c8[1] << 16) + (c8[2] << 8) + (c8[3]);
 568:lvgl/src/misc/lv_txt.c ****         uint8_t i;
 569:lvgl/src/misc/lv_txt.c ****         for(i = 0; i < 4; i++) {
 570:lvgl/src/misc/lv_txt.c ****             if((swapped & 0xFF) == 0)
 571:lvgl/src/misc/lv_txt.c ****                 swapped = (swapped >> 8); /*Ignore leading zeros (they were in the end originally)*
 572:lvgl/src/misc/lv_txt.c ****         }
 573:lvgl/src/misc/lv_txt.c ****         c = swapped;
 574:lvgl/src/misc/lv_txt.c ****     }
 575:lvgl/src/misc/lv_txt.c **** #endif
 576:lvgl/src/misc/lv_txt.c ****     return c;
 260              		.loc 1 576 5 is_stmt 1 view .LVU83
 577:lvgl/src/misc/lv_txt.c **** }
 261              		.loc 1 577 1 is_stmt 0 view .LVU84
 262 000a 0198     		ldr	r0, [sp, #4]
 263 000c 04B0     		add	sp, sp, #16
 264              	.LCFI5:
 265              		.cfi_remember_state
 266              		.cfi_def_cfa_offset 0
 267              		@ sp needed
 268 000e 7047     		bx	lr
 269              	.LVL21:
 270              	.L20:
 271              	.LCFI6:
 272              		.cfi_restore_state
 273              	.LBB12:
 274              	.LBB13:
 275              	.LBB14:
 276              		.file 2 "lvgl/src/misc/../draw/../misc/lv_mem.h"
   1:lvgl/src/misc/../draw/../misc/lv_mem.h **** /**
   2:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * @file lv_mem.h
   3:lvgl/src/misc/../draw/../misc/lv_mem.h ****  *
   4:lvgl/src/misc/../draw/../misc/lv_mem.h ****  */
   5:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
   6:lvgl/src/misc/../draw/../misc/lv_mem.h **** #ifndef LV_MEM_H
   7:lvgl/src/misc/../draw/../misc/lv_mem.h **** #define LV_MEM_H
   8:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
   9:lvgl/src/misc/../draw/../misc/lv_mem.h **** #ifdef __cplusplus
  10:lvgl/src/misc/../draw/../misc/lv_mem.h **** extern "C" {
  11:lvgl/src/misc/../draw/../misc/lv_mem.h **** #endif
  12:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
  13:lvgl/src/misc/../draw/../misc/lv_mem.h **** /*********************
  14:lvgl/src/misc/../draw/../misc/lv_mem.h ****  *      INCLUDES
  15:lvgl/src/misc/../draw/../misc/lv_mem.h ****  *********************/
  16:lvgl/src/misc/../draw/../misc/lv_mem.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
  18:lvgl/src/misc/../draw/../misc/lv_mem.h **** #include <stdint.h>
  19:lvgl/src/misc/../draw/../misc/lv_mem.h **** #include <stddef.h>
  20:lvgl/src/misc/../draw/../misc/lv_mem.h **** #include <string.h>
  21:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
  22:lvgl/src/misc/../draw/../misc/lv_mem.h **** #include "lv_types.h"
ARM GAS  C:\usertemp\ccUwScgV.s 			page 17


  23:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
  24:lvgl/src/misc/../draw/../misc/lv_mem.h **** /*********************
  25:lvgl/src/misc/../draw/../misc/lv_mem.h ****  *      DEFINES
  26:lvgl/src/misc/../draw/../misc/lv_mem.h ****  *********************/
  27:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
  28:lvgl/src/misc/../draw/../misc/lv_mem.h **** /**********************
  29:lvgl/src/misc/../draw/../misc/lv_mem.h ****  *      TYPEDEFS
  30:lvgl/src/misc/../draw/../misc/lv_mem.h ****  **********************/
  31:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
  32:lvgl/src/misc/../draw/../misc/lv_mem.h **** /**
  33:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * Heap information structure.
  34:lvgl/src/misc/../draw/../misc/lv_mem.h ****  */
  35:lvgl/src/misc/../draw/../misc/lv_mem.h **** typedef struct {
  36:lvgl/src/misc/../draw/../misc/lv_mem.h ****     uint32_t total_size; /**< Total heap size*/
  37:lvgl/src/misc/../draw/../misc/lv_mem.h ****     uint32_t free_cnt;
  38:lvgl/src/misc/../draw/../misc/lv_mem.h ****     uint32_t free_size; /**< Size of available memory*/
  39:lvgl/src/misc/../draw/../misc/lv_mem.h ****     uint32_t free_biggest_size;
  40:lvgl/src/misc/../draw/../misc/lv_mem.h ****     uint32_t used_cnt;
  41:lvgl/src/misc/../draw/../misc/lv_mem.h ****     uint32_t max_used; /**< Max size of Heap memory used*/
  42:lvgl/src/misc/../draw/../misc/lv_mem.h ****     uint8_t used_pct; /**< Percentage used*/
  43:lvgl/src/misc/../draw/../misc/lv_mem.h ****     uint8_t frag_pct; /**< Amount of fragmentation*/
  44:lvgl/src/misc/../draw/../misc/lv_mem.h **** } lv_mem_monitor_t;
  45:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
  46:lvgl/src/misc/../draw/../misc/lv_mem.h **** typedef struct {
  47:lvgl/src/misc/../draw/../misc/lv_mem.h ****     void * p;
  48:lvgl/src/misc/../draw/../misc/lv_mem.h ****     uint16_t size;
  49:lvgl/src/misc/../draw/../misc/lv_mem.h ****     uint8_t used : 1;
  50:lvgl/src/misc/../draw/../misc/lv_mem.h **** } lv_mem_buf_t;
  51:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
  52:lvgl/src/misc/../draw/../misc/lv_mem.h **** typedef lv_mem_buf_t lv_mem_buf_arr_t[LV_MEM_BUF_MAX_NUM];
  53:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
  54:lvgl/src/misc/../draw/../misc/lv_mem.h **** /**********************
  55:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * GLOBAL PROTOTYPES
  56:lvgl/src/misc/../draw/../misc/lv_mem.h ****  **********************/
  57:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
  58:lvgl/src/misc/../draw/../misc/lv_mem.h **** /**
  59:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * Initialize the dyn_mem module (work memory and other variables)
  60:lvgl/src/misc/../draw/../misc/lv_mem.h ****  */
  61:lvgl/src/misc/../draw/../misc/lv_mem.h **** void lv_mem_init(void);
  62:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
  63:lvgl/src/misc/../draw/../misc/lv_mem.h **** /**
  64:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * Clean up the memory buffer which frees all the allocated memories.
  65:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * @note It work only if `LV_MEM_CUSTOM == 0`
  66:lvgl/src/misc/../draw/../misc/lv_mem.h ****  */
  67:lvgl/src/misc/../draw/../misc/lv_mem.h **** void lv_mem_deinit(void);
  68:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
  69:lvgl/src/misc/../draw/../misc/lv_mem.h **** /**
  70:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * Allocate a memory dynamically
  71:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * @param size size of the memory to allocate in bytes
  72:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * @return pointer to the allocated memory
  73:lvgl/src/misc/../draw/../misc/lv_mem.h ****  */
  74:lvgl/src/misc/../draw/../misc/lv_mem.h **** void * lv_mem_alloc(size_t size);
  75:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
  76:lvgl/src/misc/../draw/../misc/lv_mem.h **** /**
  77:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * Free an allocated data
  78:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * @param data pointer to an allocated memory
  79:lvgl/src/misc/../draw/../misc/lv_mem.h ****  */
ARM GAS  C:\usertemp\ccUwScgV.s 			page 18


  80:lvgl/src/misc/../draw/../misc/lv_mem.h **** void lv_mem_free(void * data);
  81:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
  82:lvgl/src/misc/../draw/../misc/lv_mem.h **** /**
  83:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * Reallocate a memory with a new size. The old content will be kept.
  84:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * @param data pointer to an allocated memory.
  85:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * Its content will be copied to the new memory block and freed
  86:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * @param new_size the desired new size in byte
  87:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * @return pointer to the new memory, NULL on failure
  88:lvgl/src/misc/../draw/../misc/lv_mem.h ****  */
  89:lvgl/src/misc/../draw/../misc/lv_mem.h **** void * lv_mem_realloc(void * data_p, size_t new_size);
  90:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
  91:lvgl/src/misc/../draw/../misc/lv_mem.h **** /**
  92:lvgl/src/misc/../draw/../misc/lv_mem.h ****  *
  93:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * @return
  94:lvgl/src/misc/../draw/../misc/lv_mem.h ****  */
  95:lvgl/src/misc/../draw/../misc/lv_mem.h **** lv_res_t lv_mem_test(void);
  96:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
  97:lvgl/src/misc/../draw/../misc/lv_mem.h **** /**
  98:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * Give information about the work memory of dynamic allocation
  99:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * @param mon_p pointer to a lv_mem_monitor_t variable,
 100:lvgl/src/misc/../draw/../misc/lv_mem.h ****  *              the result of the analysis will be stored here
 101:lvgl/src/misc/../draw/../misc/lv_mem.h ****  */
 102:lvgl/src/misc/../draw/../misc/lv_mem.h **** void lv_mem_monitor(lv_mem_monitor_t * mon_p);
 103:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
 104:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
 105:lvgl/src/misc/../draw/../misc/lv_mem.h **** /**
 106:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * Get a temporal buffer with the given size.
 107:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * @param size the required size
 108:lvgl/src/misc/../draw/../misc/lv_mem.h ****  */
 109:lvgl/src/misc/../draw/../misc/lv_mem.h **** void * lv_mem_buf_get(uint32_t size);
 110:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
 111:lvgl/src/misc/../draw/../misc/lv_mem.h **** /**
 112:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * Release a memory buffer
 113:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * @param p buffer to release
 114:lvgl/src/misc/../draw/../misc/lv_mem.h ****  */
 115:lvgl/src/misc/../draw/../misc/lv_mem.h **** void lv_mem_buf_release(void * p);
 116:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
 117:lvgl/src/misc/../draw/../misc/lv_mem.h **** /**
 118:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * Free all memory buffers
 119:lvgl/src/misc/../draw/../misc/lv_mem.h ****  */
 120:lvgl/src/misc/../draw/../misc/lv_mem.h **** void lv_mem_buf_free_all(void);
 121:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
 122:lvgl/src/misc/../draw/../misc/lv_mem.h **** //! @cond Doxygen_Suppress
 123:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
 124:lvgl/src/misc/../draw/../misc/lv_mem.h **** #if LV_MEMCPY_MEMSET_STD
 125:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
 126:lvgl/src/misc/../draw/../misc/lv_mem.h **** /**
 127:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * Wrapper for the standard memcpy
 128:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 129:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * @param src pointer to the source buffer
 130:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * @param len number of byte to copy
 131:lvgl/src/misc/../draw/../misc/lv_mem.h ****  */
 132:lvgl/src/misc/../draw/../misc/lv_mem.h **** static inline void * lv_memcpy(void * dst, const void * src, size_t len)
 133:lvgl/src/misc/../draw/../misc/lv_mem.h **** {
 134:lvgl/src/misc/../draw/../misc/lv_mem.h ****     return memcpy(dst, src, len);
 135:lvgl/src/misc/../draw/../misc/lv_mem.h **** }
 136:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
ARM GAS  C:\usertemp\ccUwScgV.s 			page 19


 137:lvgl/src/misc/../draw/../misc/lv_mem.h **** /**
 138:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * Wrapper for the standard memcpy
 139:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 140:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * @param src pointer to the source buffer
 141:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * @param len number of byte to copy
 142:lvgl/src/misc/../draw/../misc/lv_mem.h ****  */
 143:lvgl/src/misc/../draw/../misc/lv_mem.h **** static inline void * lv_memcpy_small(void * dst, const void * src, size_t len)
 144:lvgl/src/misc/../draw/../misc/lv_mem.h **** {
 145:lvgl/src/misc/../draw/../misc/lv_mem.h ****     return memcpy(dst, src, len);
 146:lvgl/src/misc/../draw/../misc/lv_mem.h **** }
 147:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
 148:lvgl/src/misc/../draw/../misc/lv_mem.h **** /**
 149:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * Wrapper for the standard memset
 150:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 151:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * @param v value to set [0..255]
 152:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * @param len number of byte to set
 153:lvgl/src/misc/../draw/../misc/lv_mem.h ****  */
 154:lvgl/src/misc/../draw/../misc/lv_mem.h **** static inline void lv_memset(void * dst, uint8_t v, size_t len)
 155:lvgl/src/misc/../draw/../misc/lv_mem.h **** {
 156:lvgl/src/misc/../draw/../misc/lv_mem.h ****     memset(dst, v, len);
 157:lvgl/src/misc/../draw/../misc/lv_mem.h **** }
 158:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
 159:lvgl/src/misc/../draw/../misc/lv_mem.h **** /**
 160:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * Wrapper for the standard memset with fixed 0x00 value
 161:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 162:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * @param len number of byte to set
 163:lvgl/src/misc/../draw/../misc/lv_mem.h ****  */
 164:lvgl/src/misc/../draw/../misc/lv_mem.h **** static inline void lv_memset_00(void * dst, size_t len)
 165:lvgl/src/misc/../draw/../misc/lv_mem.h **** {
 166:lvgl/src/misc/../draw/../misc/lv_mem.h ****     memset(dst, 0x00, len);
 167:lvgl/src/misc/../draw/../misc/lv_mem.h **** }
 168:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
 169:lvgl/src/misc/../draw/../misc/lv_mem.h **** /**
 170:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * Wrapper for the standard memset with fixed 0xFF value
 171:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 172:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * @param len number of byte to set
 173:lvgl/src/misc/../draw/../misc/lv_mem.h ****  */
 174:lvgl/src/misc/../draw/../misc/lv_mem.h **** static inline void lv_memset_ff(void * dst, size_t len)
 175:lvgl/src/misc/../draw/../misc/lv_mem.h **** {
 176:lvgl/src/misc/../draw/../misc/lv_mem.h ****     memset(dst, 0xFF, len);
 177:lvgl/src/misc/../draw/../misc/lv_mem.h **** }
 178:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
 179:lvgl/src/misc/../draw/../misc/lv_mem.h **** #else
 180:lvgl/src/misc/../draw/../misc/lv_mem.h **** /**
 181:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * Same as `memcpy` but optimized for 4 byte operation.
 182:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 183:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * @param src pointer to the source buffer
 184:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * @param len number of byte to copy
 185:lvgl/src/misc/../draw/../misc/lv_mem.h ****  */
 186:lvgl/src/misc/../draw/../misc/lv_mem.h **** LV_ATTRIBUTE_FAST_MEM void * lv_memcpy(void * dst, const void * src, size_t len);
 187:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
 188:lvgl/src/misc/../draw/../misc/lv_mem.h **** /**
 189:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * Same as `memcpy` but optimized to copy only a few bytes.
 190:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 191:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * @param src pointer to the source buffer
 192:lvgl/src/misc/../draw/../misc/lv_mem.h ****  * @param len number of byte to copy
 193:lvgl/src/misc/../draw/../misc/lv_mem.h ****  */
ARM GAS  C:\usertemp\ccUwScgV.s 			page 20


 194:lvgl/src/misc/../draw/../misc/lv_mem.h **** LV_ATTRIBUTE_FAST_MEM static inline void * lv_memcpy_small(void * dst, const void * src, size_t len
 195:lvgl/src/misc/../draw/../misc/lv_mem.h **** {
 196:lvgl/src/misc/../draw/../misc/lv_mem.h ****     uint8_t * d8 = (uint8_t *)dst;
 197:lvgl/src/misc/../draw/../misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 198:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
 199:lvgl/src/misc/../draw/../misc/lv_mem.h ****     while(len) {
 200:lvgl/src/misc/../draw/../misc/lv_mem.h ****         *d8 = *s8;
 277              		.loc 2 200 9 is_stmt 1 view .LVU85
 278              		.loc 2 200 15 is_stmt 0 view .LVU86
 279 0010 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 280              	.LVL22:
 281              		.loc 2 200 13 view .LVU87
 282 0014 02F8010B 		strb	r0, [r2], #1
 283              	.LVL23:
 201:lvgl/src/misc/../draw/../misc/lv_mem.h ****         d8++;
 284              		.loc 2 201 9 is_stmt 1 view .LVU88
 202:lvgl/src/misc/../draw/../misc/lv_mem.h ****         s8++;
 285              		.loc 2 202 9 view .LVU89
 203:lvgl/src/misc/../draw/../misc/lv_mem.h ****         len--;
 286              		.loc 2 203 9 view .LVU90
 287              		.loc 2 203 12 is_stmt 0 view .LVU91
 288 0018 013B     		subs	r3, r3, #1
 289              	.LVL24:
 290              	.L18:
 199:lvgl/src/misc/../draw/../misc/lv_mem.h ****         *d8 = *s8;
 291              		.loc 2 199 11 is_stmt 1 view .LVU92
 292 001a 002B     		cmp	r3, #0
 293 001c F8D1     		bne	.L20
 204:lvgl/src/misc/../draw/../misc/lv_mem.h ****     }
 205:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
 206:lvgl/src/misc/../draw/../misc/lv_mem.h ****     return dst;
 294              		.loc 2 206 5 view .LVU93
 295              	.LVL25:
 296              		.loc 2 206 5 is_stmt 0 view .LVU94
 297              	.LBE14:
 298              	.LBE13:
 567:lvgl/src/misc/lv_txt.c ****         uint8_t i;
 299              		.loc 1 567 9 is_stmt 1 view .LVU95
 567:lvgl/src/misc/lv_txt.c ****         uint8_t i;
 300              		.loc 1 567 22 is_stmt 0 view .LVU96
 301 001e 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
 567:lvgl/src/misc/lv_txt.c ****         uint8_t i;
 302              		.loc 1 567 38 view .LVU97
 303 0022 9DF80D20 		ldrb	r2, [sp, #13]	@ zero_extendqisi2
 567:lvgl/src/misc/lv_txt.c ****         uint8_t i;
 304              		.loc 1 567 42 view .LVU98
 305 0026 1204     		lsls	r2, r2, #16
 567:lvgl/src/misc/lv_txt.c ****         uint8_t i;
 306              		.loc 1 567 33 view .LVU99
 307 0028 02EB0362 		add	r2, r2, r3, lsl #24
 567:lvgl/src/misc/lv_txt.c ****         uint8_t i;
 308              		.loc 1 567 54 view .LVU100
 309 002c 9DF80E30 		ldrb	r3, [sp, #14]	@ zero_extendqisi2
 567:lvgl/src/misc/lv_txt.c ****         uint8_t i;
 310              		.loc 1 567 49 view .LVU101
 311 0030 02EB0322 		add	r2, r2, r3, lsl #8
 567:lvgl/src/misc/lv_txt.c ****         uint8_t i;
ARM GAS  C:\usertemp\ccUwScgV.s 			page 21


 312              		.loc 1 567 69 view .LVU102
 313 0034 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 567:lvgl/src/misc/lv_txt.c ****         uint8_t i;
 314              		.loc 1 567 64 view .LVU103
 315 0038 1A44     		add	r2, r2, r3
 316              	.LVL26:
 568:lvgl/src/misc/lv_txt.c ****         for(i = 0; i < 4; i++) {
 317              		.loc 1 568 9 is_stmt 1 view .LVU104
 569:lvgl/src/misc/lv_txt.c ****             if((swapped & 0xFF) == 0)
 318              		.loc 1 569 9 view .LVU105
 569:lvgl/src/misc/lv_txt.c ****             if((swapped & 0xFF) == 0)
 319              		.loc 1 569 15 is_stmt 0 view .LVU106
 320 003a 0023     		movs	r3, #0
 569:lvgl/src/misc/lv_txt.c ****             if((swapped & 0xFF) == 0)
 321              		.loc 1 569 9 view .LVU107
 322 003c 05E0     		b	.L21
 323              	.LVL27:
 324              	.L24:
 325              	.LBB16:
 326              	.LBB15:
 197:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
 327              		.loc 2 197 21 view .LVU108
 328 003e 01A9     		add	r1, sp, #4
 196:lvgl/src/misc/../draw/../misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 329              		.loc 2 196 15 view .LVU109
 330 0040 03AA     		add	r2, sp, #12
 331              	.LBE15:
 332              	.LBE16:
 333              	.LBE12:
 334 0042 0423     		movs	r3, #4
 335 0044 E9E7     		b	.L18
 336              	.LVL28:
 337              	.L22:
 338              	.LBB17:
 569:lvgl/src/misc/lv_txt.c ****             if((swapped & 0xFF) == 0)
 339              		.loc 1 569 28 is_stmt 1 discriminator 2 view .LVU110
 340 0046 0133     		adds	r3, r3, #1
 341              	.LVL29:
 569:lvgl/src/misc/lv_txt.c ****             if((swapped & 0xFF) == 0)
 342              		.loc 1 569 28 is_stmt 0 discriminator 2 view .LVU111
 343 0048 DBB2     		uxtb	r3, r3
 344              	.LVL30:
 345              	.L21:
 569:lvgl/src/misc/lv_txt.c ****             if((swapped & 0xFF) == 0)
 346              		.loc 1 569 22 is_stmt 1 discriminator 1 view .LVU112
 347 004a 032B     		cmp	r3, #3
 348 004c 04D8     		bhi	.L26
 570:lvgl/src/misc/lv_txt.c ****                 swapped = (swapped >> 8); /*Ignore leading zeros (they were in the end originally)*
 349              		.loc 1 570 13 view .LVU113
 570:lvgl/src/misc/lv_txt.c ****                 swapped = (swapped >> 8); /*Ignore leading zeros (they were in the end originally)*
 350              		.loc 1 570 15 is_stmt 0 view .LVU114
 351 004e 12F0FF0F 		tst	r2, #255
 352 0052 F8D1     		bne	.L22
 571:lvgl/src/misc/lv_txt.c ****         }
 353              		.loc 1 571 17 is_stmt 1 view .LVU115
 571:lvgl/src/misc/lv_txt.c ****         }
 354              		.loc 1 571 25 is_stmt 0 view .LVU116
ARM GAS  C:\usertemp\ccUwScgV.s 			page 22


 355 0054 120A     		lsrs	r2, r2, #8
 356              	.LVL31:
 571:lvgl/src/misc/lv_txt.c ****         }
 357              		.loc 1 571 25 view .LVU117
 358 0056 F6E7     		b	.L22
 359              	.L26:
 573:lvgl/src/misc/lv_txt.c ****     }
 360              		.loc 1 573 9 is_stmt 1 view .LVU118
 573:lvgl/src/misc/lv_txt.c ****     }
 361              		.loc 1 573 11 is_stmt 0 view .LVU119
 362 0058 0192     		str	r2, [sp, #4]
 363 005a D6E7     		b	.L19
 364              	.LBE17:
 365              		.cfi_endproc
 366              	.LFE67:
 368              		.section	.text.lv_txt_utf8_next,"ax",%progbits
 369              		.align	1
 370              		.syntax unified
 371              		.thumb
 372              		.thumb_func
 374              	lv_txt_utf8_next:
 375              	.LVL32:
 376              	.LFB68:
 578:lvgl/src/misc/lv_txt.c **** 
 579:lvgl/src/misc/lv_txt.c **** /**
 580:lvgl/src/misc/lv_txt.c ****  * Decode an UTF-8 character from a string.
 581:lvgl/src/misc/lv_txt.c ****  * @param txt pointer to '\0' terminated string
 582:lvgl/src/misc/lv_txt.c ****  * @param i start byte index in 'txt' where to start.
 583:lvgl/src/misc/lv_txt.c ****  *          After call it will point to the next UTF-8 char in 'txt'.
 584:lvgl/src/misc/lv_txt.c ****  *          NULL to use txt[0] as index
 585:lvgl/src/misc/lv_txt.c ****  * @return the decoded Unicode character or 0 on invalid UTF-8 code
 586:lvgl/src/misc/lv_txt.c ****  */
 587:lvgl/src/misc/lv_txt.c **** static uint32_t lv_txt_utf8_next(const char * txt, uint32_t * i)
 588:lvgl/src/misc/lv_txt.c **** {
 377              		.loc 1 588 1 is_stmt 1 view -0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 8
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381              		.loc 1 588 1 is_stmt 0 view .LVU121
 382 0000 00B5     		push	{lr}
 383              	.LCFI7:
 384              		.cfi_def_cfa_offset 4
 385              		.cfi_offset 14, -4
 386 0002 83B0     		sub	sp, sp, #12
 387              	.LCFI8:
 388              		.cfi_def_cfa_offset 16
 389 0004 8646     		mov	lr, r0
 589:lvgl/src/misc/lv_txt.c ****     /**
 590:lvgl/src/misc/lv_txt.c ****      * Unicode to UTF-8
 591:lvgl/src/misc/lv_txt.c ****      * 00000000 00000000 00000000 0xxxxxxx -> 0xxxxxxx
 592:lvgl/src/misc/lv_txt.c ****      * 00000000 00000000 00000yyy yyxxxxxx -> 110yyyyy 10xxxxxx
 593:lvgl/src/misc/lv_txt.c ****      * 00000000 00000000 zzzzyyyy yyxxxxxx -> 1110zzzz 10yyyyyy 10xxxxxx
 594:lvgl/src/misc/lv_txt.c ****      * 00000000 000wwwzz zzzzyyyy yyxxxxxx -> 11110www 10zzzzzz 10yyyyyy 10xxxxxx
 595:lvgl/src/misc/lv_txt.c ****      */
 596:lvgl/src/misc/lv_txt.c **** 
 597:lvgl/src/misc/lv_txt.c ****     uint32_t result = 0;
 390              		.loc 1 597 5 is_stmt 1 view .LVU122
ARM GAS  C:\usertemp\ccUwScgV.s 			page 23


 391              	.LVL33:
 598:lvgl/src/misc/lv_txt.c **** 
 599:lvgl/src/misc/lv_txt.c ****     /*Dummy 'i' pointer is required*/
 600:lvgl/src/misc/lv_txt.c ****     uint32_t i_tmp = 0;
 392              		.loc 1 600 5 view .LVU123
 393              		.loc 1 600 14 is_stmt 0 view .LVU124
 394 0006 0023     		movs	r3, #0
 395 0008 0193     		str	r3, [sp, #4]
 601:lvgl/src/misc/lv_txt.c ****     if(i == NULL) i = &i_tmp;
 396              		.loc 1 601 5 is_stmt 1 view .LVU125
 397              		.loc 1 601 7 is_stmt 0 view .LVU126
 398 000a 8C46     		mov	ip, r1
 399 000c 69B1     		cbz	r1, .L42
 400              	.L28:
 401              	.LVL34:
 602:lvgl/src/misc/lv_txt.c **** 
 603:lvgl/src/misc/lv_txt.c ****     /*Normal ASCII*/
 604:lvgl/src/misc/lv_txt.c ****     if(LV_IS_ASCII(txt[*i])) {
 402              		.loc 1 604 5 is_stmt 1 view .LVU127
 403              		.loc 1 604 8 is_stmt 0 view .LVU128
 404 000e DCF80020 		ldr	r2, [ip]
 405 0012 1EF80200 		ldrb	r0, [lr, r2]	@ zero_extendqisi2
 406              	.LVL35:
 407              		.loc 1 604 8 view .LVU129
 408 0016 1EF90230 		ldrsb	r3, [lr, r2]
 409              		.loc 1 604 7 view .LVU130
 410 001a 002B     		cmp	r3, #0
 411 001c 08DB     		blt	.L29
 605:lvgl/src/misc/lv_txt.c ****         result = txt[*i];
 412              		.loc 1 605 9 is_stmt 1 view .LVU131
 413              	.LVL36:
 606:lvgl/src/misc/lv_txt.c ****         (*i)++;
 414              		.loc 1 606 9 view .LVU132
 415              		.loc 1 606 13 is_stmt 0 view .LVU133
 416 001e 0132     		adds	r2, r2, #1
 417 0020 CCF80020 		str	r2, [ip]
 418              	.LVL37:
 419              	.L27:
 607:lvgl/src/misc/lv_txt.c ****     }
 608:lvgl/src/misc/lv_txt.c ****     /*Real UTF-8 decode*/
 609:lvgl/src/misc/lv_txt.c ****     else {
 610:lvgl/src/misc/lv_txt.c ****         /*2 bytes UTF-8 code*/
 611:lvgl/src/misc/lv_txt.c ****         if(LV_IS_2BYTES_UTF8_CODE(txt[*i])) {
 612:lvgl/src/misc/lv_txt.c ****             result = (uint32_t)(txt[*i] & 0x1F) << 6;
 613:lvgl/src/misc/lv_txt.c ****             (*i)++;
 614:lvgl/src/misc/lv_txt.c ****             if(LV_IS_INVALID_UTF8_CODE(txt[*i])) return 0;
 615:lvgl/src/misc/lv_txt.c ****             result += (txt[*i] & 0x3F);
 616:lvgl/src/misc/lv_txt.c ****             (*i)++;
 617:lvgl/src/misc/lv_txt.c ****         }
 618:lvgl/src/misc/lv_txt.c ****         /*3 bytes UTF-8 code*/
 619:lvgl/src/misc/lv_txt.c ****         else if(LV_IS_3BYTES_UTF8_CODE(txt[*i])) {
 620:lvgl/src/misc/lv_txt.c ****             result = (uint32_t)(txt[*i] & 0x0F) << 12;
 621:lvgl/src/misc/lv_txt.c ****             (*i)++;
 622:lvgl/src/misc/lv_txt.c **** 
 623:lvgl/src/misc/lv_txt.c ****             if(LV_IS_INVALID_UTF8_CODE(txt[*i])) return 0;
 624:lvgl/src/misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 6;
 625:lvgl/src/misc/lv_txt.c ****             (*i)++;
ARM GAS  C:\usertemp\ccUwScgV.s 			page 24


 626:lvgl/src/misc/lv_txt.c **** 
 627:lvgl/src/misc/lv_txt.c ****             if(LV_IS_INVALID_UTF8_CODE(txt[*i])) return 0;
 628:lvgl/src/misc/lv_txt.c ****             result += (txt[*i] & 0x3F);
 629:lvgl/src/misc/lv_txt.c ****             (*i)++;
 630:lvgl/src/misc/lv_txt.c ****         }
 631:lvgl/src/misc/lv_txt.c ****         /*4 bytes UTF-8 code*/
 632:lvgl/src/misc/lv_txt.c ****         else if(LV_IS_4BYTES_UTF8_CODE(txt[*i])) {
 633:lvgl/src/misc/lv_txt.c ****             result = (uint32_t)(txt[*i] & 0x07) << 18;
 634:lvgl/src/misc/lv_txt.c ****             (*i)++;
 635:lvgl/src/misc/lv_txt.c **** 
 636:lvgl/src/misc/lv_txt.c ****             if(LV_IS_INVALID_UTF8_CODE(txt[*i])) return 0;
 637:lvgl/src/misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 12;
 638:lvgl/src/misc/lv_txt.c ****             (*i)++;
 639:lvgl/src/misc/lv_txt.c **** 
 640:lvgl/src/misc/lv_txt.c ****             if(LV_IS_INVALID_UTF8_CODE(txt[*i])) return 0;
 641:lvgl/src/misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 6;
 642:lvgl/src/misc/lv_txt.c ****             (*i)++;
 643:lvgl/src/misc/lv_txt.c **** 
 644:lvgl/src/misc/lv_txt.c ****             if(LV_IS_INVALID_UTF8_CODE(txt[*i])) return 0;
 645:lvgl/src/misc/lv_txt.c ****             result += txt[*i] & 0x3F;
 646:lvgl/src/misc/lv_txt.c ****             (*i)++;
 647:lvgl/src/misc/lv_txt.c ****         }
 648:lvgl/src/misc/lv_txt.c ****         else {
 649:lvgl/src/misc/lv_txt.c ****             (*i)++; /*Not UTF-8 char. Go the next.*/
 650:lvgl/src/misc/lv_txt.c ****         }
 651:lvgl/src/misc/lv_txt.c ****     }
 652:lvgl/src/misc/lv_txt.c ****     return result;
 653:lvgl/src/misc/lv_txt.c **** }
 420              		.loc 1 653 1 view .LVU134
 421 0024 03B0     		add	sp, sp, #12
 422              	.LCFI9:
 423              		.cfi_remember_state
 424              		.cfi_def_cfa_offset 4
 425              		@ sp needed
 426 0026 5DF804FB 		ldr	pc, [sp], #4
 427              	.LVL38:
 428              	.L42:
 429              	.LCFI10:
 430              		.cfi_restore_state
 601:lvgl/src/misc/lv_txt.c **** 
 431              		.loc 1 601 21 discriminator 1 view .LVU135
 432 002a 0DF1040C 		add	ip, sp, #4
 433 002e EEE7     		b	.L28
 434              	.LVL39:
 435              	.L29:
 611:lvgl/src/misc/lv_txt.c ****             result = (uint32_t)(txt[*i] & 0x1F) << 6;
 436              		.loc 1 611 9 is_stmt 1 view .LVU136
 611:lvgl/src/misc/lv_txt.c ****             result = (uint32_t)(txt[*i] & 0x1F) << 6;
 437              		.loc 1 611 11 is_stmt 0 view .LVU137
 438 0030 00F0E003 		and	r3, r0, #224
 439 0034 C02B     		cmp	r3, #192
 440 0036 0CD0     		beq	.L43
 619:lvgl/src/misc/lv_txt.c ****             result = (uint32_t)(txt[*i] & 0x0F) << 12;
 441              		.loc 1 619 14 is_stmt 1 view .LVU138
 619:lvgl/src/misc/lv_txt.c ****             result = (uint32_t)(txt[*i] & 0x0F) << 12;
 442              		.loc 1 619 16 is_stmt 0 view .LVU139
 443 0038 00F0F003 		and	r3, r0, #240
ARM GAS  C:\usertemp\ccUwScgV.s 			page 25


 444 003c E02B     		cmp	r3, #224
 445 003e 1BD0     		beq	.L44
 632:lvgl/src/misc/lv_txt.c ****             result = (uint32_t)(txt[*i] & 0x07) << 18;
 446              		.loc 1 632 14 is_stmt 1 view .LVU140
 632:lvgl/src/misc/lv_txt.c ****             result = (uint32_t)(txt[*i] & 0x07) << 18;
 447              		.loc 1 632 16 is_stmt 0 view .LVU141
 448 0040 00F0F803 		and	r3, r0, #248
 449 0044 F02B     		cmp	r3, #240
 450 0046 36D0     		beq	.L45
 649:lvgl/src/misc/lv_txt.c ****         }
 451              		.loc 1 649 13 is_stmt 1 view .LVU142
 649:lvgl/src/misc/lv_txt.c ****         }
 452              		.loc 1 649 17 is_stmt 0 view .LVU143
 453 0048 0132     		adds	r2, r2, #1
 454 004a CCF80020 		str	r2, [ip]
 597:lvgl/src/misc/lv_txt.c **** 
 455              		.loc 1 597 14 view .LVU144
 456 004e 0020     		movs	r0, #0
 457 0050 E8E7     		b	.L27
 458              	.L43:
 612:lvgl/src/misc/lv_txt.c ****             (*i)++;
 459              		.loc 1 612 13 is_stmt 1 view .LVU145
 612:lvgl/src/misc/lv_txt.c ****             (*i)++;
 460              		.loc 1 612 49 is_stmt 0 view .LVU146
 461 0052 8301     		lsls	r3, r0, #6
 612:lvgl/src/misc/lv_txt.c ****             (*i)++;
 462              		.loc 1 612 20 view .LVU147
 463 0054 03F4F863 		and	r3, r3, #1984
 464              	.LVL40:
 613:lvgl/src/misc/lv_txt.c ****             if(LV_IS_INVALID_UTF8_CODE(txt[*i])) return 0;
 465              		.loc 1 613 13 is_stmt 1 view .LVU148
 613:lvgl/src/misc/lv_txt.c ****             if(LV_IS_INVALID_UTF8_CODE(txt[*i])) return 0;
 466              		.loc 1 613 17 is_stmt 0 view .LVU149
 467 0058 511C     		adds	r1, r2, #1
 468 005a CCF80010 		str	r1, [ip]
 614:lvgl/src/misc/lv_txt.c ****             result += (txt[*i] & 0x3F);
 469              		.loc 1 614 13 is_stmt 1 view .LVU150
 614:lvgl/src/misc/lv_txt.c ****             result += (txt[*i] & 0x3F);
 470              		.loc 1 614 16 is_stmt 0 view .LVU151
 471 005e 1EF80110 		ldrb	r1, [lr, r1]	@ zero_extendqisi2
 614:lvgl/src/misc/lv_txt.c ****             result += (txt[*i] & 0x3F);
 472              		.loc 1 614 15 view .LVU152
 473 0062 01F0C000 		and	r0, r1, #192
 474 0066 8028     		cmp	r0, #128
 475 0068 52D1     		bne	.L35
 615:lvgl/src/misc/lv_txt.c ****             (*i)++;
 476              		.loc 1 615 13 is_stmt 1 view .LVU153
 615:lvgl/src/misc/lv_txt.c ****             (*i)++;
 477              		.loc 1 615 32 is_stmt 0 view .LVU154
 478 006a 01F03F01 		and	r1, r1, #63
 615:lvgl/src/misc/lv_txt.c ****             (*i)++;
 479              		.loc 1 615 20 view .LVU155
 480 006e C818     		adds	r0, r1, r3
 481              	.LVL41:
 616:lvgl/src/misc/lv_txt.c ****         }
 482              		.loc 1 616 13 is_stmt 1 view .LVU156
 616:lvgl/src/misc/lv_txt.c ****         }
ARM GAS  C:\usertemp\ccUwScgV.s 			page 26


 483              		.loc 1 616 17 is_stmt 0 view .LVU157
 484 0070 0232     		adds	r2, r2, #2
 485 0072 CCF80020 		str	r2, [ip]
 486 0076 D5E7     		b	.L27
 487              	.LVL42:
 488              	.L44:
 620:lvgl/src/misc/lv_txt.c ****             (*i)++;
 489              		.loc 1 620 13 is_stmt 1 view .LVU158
 620:lvgl/src/misc/lv_txt.c ****             (*i)++;
 490              		.loc 1 620 49 is_stmt 0 view .LVU159
 491 0078 0303     		lsls	r3, r0, #12
 620:lvgl/src/misc/lv_txt.c ****             (*i)++;
 492              		.loc 1 620 20 view .LVU160
 493 007a 9BB2     		uxth	r3, r3
 494              	.LVL43:
 621:lvgl/src/misc/lv_txt.c **** 
 495              		.loc 1 621 13 is_stmt 1 view .LVU161
 621:lvgl/src/misc/lv_txt.c **** 
 496              		.loc 1 621 17 is_stmt 0 view .LVU162
 497 007c 511C     		adds	r1, r2, #1
 498 007e CCF80010 		str	r1, [ip]
 623:lvgl/src/misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 6;
 499              		.loc 1 623 13 is_stmt 1 view .LVU163
 623:lvgl/src/misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 6;
 500              		.loc 1 623 16 is_stmt 0 view .LVU164
 501 0082 1EF80110 		ldrb	r1, [lr, r1]	@ zero_extendqisi2
 623:lvgl/src/misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 6;
 502              		.loc 1 623 15 view .LVU165
 503 0086 01F0C000 		and	r0, r1, #192
 504 008a 8028     		cmp	r0, #128
 505 008c 42D1     		bne	.L36
 624:lvgl/src/misc/lv_txt.c ****             (*i)++;
 506              		.loc 1 624 13 is_stmt 1 view .LVU166
 624:lvgl/src/misc/lv_txt.c ****             (*i)++;
 507              		.loc 1 624 50 is_stmt 0 view .LVU167
 508 008e 8901     		lsls	r1, r1, #6
 509 0090 01F47C61 		and	r1, r1, #4032
 624:lvgl/src/misc/lv_txt.c ****             (*i)++;
 510              		.loc 1 624 20 view .LVU168
 511 0094 1944     		add	r1, r1, r3
 512              	.LVL44:
 625:lvgl/src/misc/lv_txt.c **** 
 513              		.loc 1 625 13 is_stmt 1 view .LVU169
 625:lvgl/src/misc/lv_txt.c **** 
 514              		.loc 1 625 17 is_stmt 0 view .LVU170
 515 0096 931C     		adds	r3, r2, #2
 516 0098 CCF80030 		str	r3, [ip]
 627:lvgl/src/misc/lv_txt.c ****             result += (txt[*i] & 0x3F);
 517              		.loc 1 627 13 is_stmt 1 view .LVU171
 627:lvgl/src/misc/lv_txt.c ****             result += (txt[*i] & 0x3F);
 518              		.loc 1 627 16 is_stmt 0 view .LVU172
 519 009c 1EF80300 		ldrb	r0, [lr, r3]	@ zero_extendqisi2
 627:lvgl/src/misc/lv_txt.c ****             result += (txt[*i] & 0x3F);
 520              		.loc 1 627 15 view .LVU173
 521 00a0 00F0C003 		and	r3, r0, #192
 522 00a4 802B     		cmp	r3, #128
 523 00a6 37D1     		bne	.L37
ARM GAS  C:\usertemp\ccUwScgV.s 			page 27


 628:lvgl/src/misc/lv_txt.c ****             (*i)++;
 524              		.loc 1 628 13 is_stmt 1 view .LVU174
 628:lvgl/src/misc/lv_txt.c ****             (*i)++;
 525              		.loc 1 628 32 is_stmt 0 view .LVU175
 526 00a8 00F03F00 		and	r0, r0, #63
 628:lvgl/src/misc/lv_txt.c ****             (*i)++;
 527              		.loc 1 628 20 view .LVU176
 528 00ac 0844     		add	r0, r0, r1
 529              	.LVL45:
 629:lvgl/src/misc/lv_txt.c ****         }
 530              		.loc 1 629 13 is_stmt 1 view .LVU177
 629:lvgl/src/misc/lv_txt.c ****         }
 531              		.loc 1 629 17 is_stmt 0 view .LVU178
 532 00ae 0332     		adds	r2, r2, #3
 533 00b0 CCF80020 		str	r2, [ip]
 534 00b4 B6E7     		b	.L27
 535              	.LVL46:
 536              	.L45:
 633:lvgl/src/misc/lv_txt.c ****             (*i)++;
 537              		.loc 1 633 13 is_stmt 1 view .LVU179
 633:lvgl/src/misc/lv_txt.c ****             (*i)++;
 538              		.loc 1 633 49 is_stmt 0 view .LVU180
 539 00b6 8304     		lsls	r3, r0, #18
 633:lvgl/src/misc/lv_txt.c ****             (*i)++;
 540              		.loc 1 633 20 view .LVU181
 541 00b8 03F4E013 		and	r3, r3, #1835008
 542              	.LVL47:
 634:lvgl/src/misc/lv_txt.c **** 
 543              		.loc 1 634 13 is_stmt 1 view .LVU182
 634:lvgl/src/misc/lv_txt.c **** 
 544              		.loc 1 634 17 is_stmt 0 view .LVU183
 545 00bc 511C     		adds	r1, r2, #1
 546 00be CCF80010 		str	r1, [ip]
 636:lvgl/src/misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 12;
 547              		.loc 1 636 13 is_stmt 1 view .LVU184
 636:lvgl/src/misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 12;
 548              		.loc 1 636 16 is_stmt 0 view .LVU185
 549 00c2 1EF80110 		ldrb	r1, [lr, r1]	@ zero_extendqisi2
 636:lvgl/src/misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 12;
 550              		.loc 1 636 15 view .LVU186
 551 00c6 01F0C000 		and	r0, r1, #192
 552 00ca 8028     		cmp	r0, #128
 553 00cc 26D1     		bne	.L38
 637:lvgl/src/misc/lv_txt.c ****             (*i)++;
 554              		.loc 1 637 13 is_stmt 1 view .LVU187
 637:lvgl/src/misc/lv_txt.c ****             (*i)++;
 555              		.loc 1 637 50 is_stmt 0 view .LVU188
 556 00ce 0903     		lsls	r1, r1, #12
 557 00d0 01F47C31 		and	r1, r1, #258048
 637:lvgl/src/misc/lv_txt.c ****             (*i)++;
 558              		.loc 1 637 20 view .LVU189
 559 00d4 1943     		orrs	r1, r1, r3
 560              	.LVL48:
 638:lvgl/src/misc/lv_txt.c **** 
 561              		.loc 1 638 13 is_stmt 1 view .LVU190
 638:lvgl/src/misc/lv_txt.c **** 
 562              		.loc 1 638 17 is_stmt 0 view .LVU191
ARM GAS  C:\usertemp\ccUwScgV.s 			page 28


 563 00d6 931C     		adds	r3, r2, #2
 564 00d8 CCF80030 		str	r3, [ip]
 640:lvgl/src/misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 6;
 565              		.loc 1 640 13 is_stmt 1 view .LVU192
 640:lvgl/src/misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 6;
 566              		.loc 1 640 16 is_stmt 0 view .LVU193
 567 00dc 1EF80330 		ldrb	r3, [lr, r3]	@ zero_extendqisi2
 640:lvgl/src/misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 6;
 568              		.loc 1 640 15 view .LVU194
 569 00e0 03F0C000 		and	r0, r3, #192
 570 00e4 8028     		cmp	r0, #128
 571 00e6 1BD1     		bne	.L39
 641:lvgl/src/misc/lv_txt.c ****             (*i)++;
 572              		.loc 1 641 13 is_stmt 1 view .LVU195
 641:lvgl/src/misc/lv_txt.c ****             (*i)++;
 573              		.loc 1 641 50 is_stmt 0 view .LVU196
 574 00e8 9B01     		lsls	r3, r3, #6
 575 00ea 03F47C63 		and	r3, r3, #4032
 641:lvgl/src/misc/lv_txt.c ****             (*i)++;
 576              		.loc 1 641 20 view .LVU197
 577 00ee 1944     		add	r1, r1, r3
 578              	.LVL49:
 642:lvgl/src/misc/lv_txt.c **** 
 579              		.loc 1 642 13 is_stmt 1 view .LVU198
 642:lvgl/src/misc/lv_txt.c **** 
 580              		.loc 1 642 17 is_stmt 0 view .LVU199
 581 00f0 D31C     		adds	r3, r2, #3
 582 00f2 CCF80030 		str	r3, [ip]
 644:lvgl/src/misc/lv_txt.c ****             result += txt[*i] & 0x3F;
 583              		.loc 1 644 13 is_stmt 1 view .LVU200
 644:lvgl/src/misc/lv_txt.c ****             result += txt[*i] & 0x3F;
 584              		.loc 1 644 16 is_stmt 0 view .LVU201
 585 00f6 1EF80330 		ldrb	r3, [lr, r3]	@ zero_extendqisi2
 644:lvgl/src/misc/lv_txt.c ****             result += txt[*i] & 0x3F;
 586              		.loc 1 644 15 view .LVU202
 587 00fa 03F0C000 		and	r0, r3, #192
 588 00fe 8028     		cmp	r0, #128
 589 0100 10D1     		bne	.L40
 645:lvgl/src/misc/lv_txt.c ****             (*i)++;
 590              		.loc 1 645 13 is_stmt 1 view .LVU203
 645:lvgl/src/misc/lv_txt.c ****             (*i)++;
 591              		.loc 1 645 31 is_stmt 0 view .LVU204
 592 0102 03F03F00 		and	r0, r3, #63
 645:lvgl/src/misc/lv_txt.c ****             (*i)++;
 593              		.loc 1 645 20 view .LVU205
 594 0106 0844     		add	r0, r0, r1
 595              	.LVL50:
 646:lvgl/src/misc/lv_txt.c ****         }
 596              		.loc 1 646 13 is_stmt 1 view .LVU206
 646:lvgl/src/misc/lv_txt.c ****         }
 597              		.loc 1 646 17 is_stmt 0 view .LVU207
 598 0108 0432     		adds	r2, r2, #4
 599 010a CCF80020 		str	r2, [ip]
 600 010e 89E7     		b	.L27
 601              	.LVL51:
 602              	.L35:
 614:lvgl/src/misc/lv_txt.c ****             result += (txt[*i] & 0x3F);
ARM GAS  C:\usertemp\ccUwScgV.s 			page 29


 603              		.loc 1 614 57 discriminator 1 view .LVU208
 604 0110 0020     		movs	r0, #0
 605 0112 87E7     		b	.L27
 606              	.L36:
 623:lvgl/src/misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 6;
 607              		.loc 1 623 57 discriminator 1 view .LVU209
 608 0114 0020     		movs	r0, #0
 609 0116 85E7     		b	.L27
 610              	.LVL52:
 611              	.L37:
 627:lvgl/src/misc/lv_txt.c ****             result += (txt[*i] & 0x3F);
 612              		.loc 1 627 57 discriminator 1 view .LVU210
 613 0118 0020     		movs	r0, #0
 614 011a 83E7     		b	.L27
 615              	.LVL53:
 616              	.L38:
 636:lvgl/src/misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 12;
 617              		.loc 1 636 57 discriminator 1 view .LVU211
 618 011c 0020     		movs	r0, #0
 619 011e 81E7     		b	.L27
 620              	.LVL54:
 621              	.L39:
 640:lvgl/src/misc/lv_txt.c ****             result += (uint32_t)(txt[*i] & 0x3F) << 6;
 622              		.loc 1 640 57 discriminator 1 view .LVU212
 623 0120 0020     		movs	r0, #0
 624 0122 7FE7     		b	.L27
 625              	.L40:
 644:lvgl/src/misc/lv_txt.c ****             result += txt[*i] & 0x3F;
 626              		.loc 1 644 57 discriminator 1 view .LVU213
 627 0124 0020     		movs	r0, #0
 628              	.LVL55:
 644:lvgl/src/misc/lv_txt.c ****             result += txt[*i] & 0x3F;
 629              		.loc 1 644 57 discriminator 1 view .LVU214
 630 0126 7DE7     		b	.L27
 631              		.cfi_endproc
 632              	.LFE68:
 634              		.section	.text.lv_txt_utf8_prev,"ax",%progbits
 635              		.align	1
 636              		.syntax unified
 637              		.thumb
 638              		.thumb_func
 640              	lv_txt_utf8_prev:
 641              	.LVL56:
 642              	.LFB69:
 654:lvgl/src/misc/lv_txt.c **** 
 655:lvgl/src/misc/lv_txt.c **** /**
 656:lvgl/src/misc/lv_txt.c ****  * Get previous UTF-8 character form a string.
 657:lvgl/src/misc/lv_txt.c ****  * @param txt pointer to '\0' terminated string
 658:lvgl/src/misc/lv_txt.c ****  * @param i start byte index in 'txt' where to start. After the call it will point to the previous
 659:lvgl/src/misc/lv_txt.c ****  * UTF-8 char in 'txt'.
 660:lvgl/src/misc/lv_txt.c ****  * @return the decoded Unicode character or 0 on invalid UTF-8 code
 661:lvgl/src/misc/lv_txt.c ****  */
 662:lvgl/src/misc/lv_txt.c **** static uint32_t lv_txt_utf8_prev(const char * txt, uint32_t * i)
 663:lvgl/src/misc/lv_txt.c **** {
 643              		.loc 1 663 1 is_stmt 1 view -0
 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\usertemp\ccUwScgV.s 			page 30


 646              		@ frame_needed = 0, uses_anonymous_args = 0
 647              		.loc 1 663 1 is_stmt 0 view .LVU216
 648 0000 70B5     		push	{r4, r5, r6, lr}
 649              	.LCFI11:
 650              		.cfi_def_cfa_offset 16
 651              		.cfi_offset 4, -16
 652              		.cfi_offset 5, -12
 653              		.cfi_offset 6, -8
 654              		.cfi_offset 14, -4
 655 0002 82B0     		sub	sp, sp, #8
 656              	.LCFI12:
 657              		.cfi_def_cfa_offset 24
 658 0004 0646     		mov	r6, r0
 659 0006 0D46     		mov	r5, r1
 664:lvgl/src/misc/lv_txt.c ****     uint8_t c_size;
 660              		.loc 1 664 5 is_stmt 1 view .LVU217
 665:lvgl/src/misc/lv_txt.c ****     uint8_t cnt = 0;
 661              		.loc 1 665 5 view .LVU218
 662              	.LVL57:
 666:lvgl/src/misc/lv_txt.c **** 
 667:lvgl/src/misc/lv_txt.c ****     /*Try to find a !0 long UTF-8 char by stepping one character back*/
 668:lvgl/src/misc/lv_txt.c ****     (*i)--;
 663              		.loc 1 668 5 view .LVU219
 664              		.loc 1 668 6 is_stmt 0 view .LVU220
 665 0008 0B68     		ldr	r3, [r1]
 666              		.loc 1 668 9 view .LVU221
 667 000a 013B     		subs	r3, r3, #1
 668 000c 0B60     		str	r3, [r1]
 665:lvgl/src/misc/lv_txt.c ****     uint8_t cnt = 0;
 669              		.loc 1 665 13 view .LVU222
 670 000e 0024     		movs	r4, #0
 671 0010 04E0     		b	.L49
 672              	.LVL58:
 673              	.L53:
 669:lvgl/src/misc/lv_txt.c ****     do {
 670:lvgl/src/misc/lv_txt.c ****         if(cnt >= 4) return 0; /*No UTF-8 char found before the initial*/
 671:lvgl/src/misc/lv_txt.c **** 
 672:lvgl/src/misc/lv_txt.c ****         c_size = _lv_txt_encoded_size(&txt[*i]);
 673:lvgl/src/misc/lv_txt.c ****         if(c_size == 0) {
 674:lvgl/src/misc/lv_txt.c ****             if(*i != 0)
 675:lvgl/src/misc/lv_txt.c ****                 (*i)--;
 674              		.loc 1 675 17 is_stmt 1 view .LVU223
 675              		.loc 1 675 21 is_stmt 0 view .LVU224
 676 0012 0138     		subs	r0, r0, #1
 677 0014 2860     		str	r0, [r5]
 678              	.L48:
 676:lvgl/src/misc/lv_txt.c ****             else
 677:lvgl/src/misc/lv_txt.c ****                 return 0;
 678:lvgl/src/misc/lv_txt.c ****         }
 679:lvgl/src/misc/lv_txt.c ****         cnt++;
 679              		.loc 1 679 9 is_stmt 1 view .LVU225
 680              		.loc 1 679 12 is_stmt 0 view .LVU226
 681 0016 0134     		adds	r4, r4, #1
 682              	.LVL59:
 683              		.loc 1 679 12 view .LVU227
 684 0018 E4B2     		uxtb	r4, r4
 685              	.LVL60:
ARM GAS  C:\usertemp\ccUwScgV.s 			page 31


 680:lvgl/src/misc/lv_txt.c ****     } while(c_size == 0);
 686              		.loc 1 680 20 is_stmt 1 view .LVU228
 687 001a 6BB9     		cbnz	r3, .L52
 688              	.LVL61:
 689              	.L49:
 669:lvgl/src/misc/lv_txt.c ****     do {
 690              		.loc 1 669 5 view .LVU229
 670:lvgl/src/misc/lv_txt.c **** 
 691              		.loc 1 670 9 view .LVU230
 670:lvgl/src/misc/lv_txt.c **** 
 692              		.loc 1 670 11 is_stmt 0 view .LVU231
 693 001c 032C     		cmp	r4, #3
 694 001e 13D8     		bhi	.L50
 672:lvgl/src/misc/lv_txt.c ****         if(c_size == 0) {
 695              		.loc 1 672 9 is_stmt 1 view .LVU232
 672:lvgl/src/misc/lv_txt.c ****         if(c_size == 0) {
 696              		.loc 1 672 44 is_stmt 0 view .LVU233
 697 0020 2868     		ldr	r0, [r5]
 672:lvgl/src/misc/lv_txt.c ****         if(c_size == 0) {
 698              		.loc 1 672 18 view .LVU234
 699 0022 0B4B     		ldr	r3, .L54
 700 0024 1B68     		ldr	r3, [r3]
 701 0026 3044     		add	r0, r0, r6
 702 0028 9847     		blx	r3
 703              	.LVL62:
 673:lvgl/src/misc/lv_txt.c ****             if(*i != 0)
 704              		.loc 1 673 9 is_stmt 1 view .LVU235
 673:lvgl/src/misc/lv_txt.c ****             if(*i != 0)
 705              		.loc 1 673 11 is_stmt 0 view .LVU236
 706 002a 0346     		mov	r3, r0
 707 002c 0028     		cmp	r0, #0
 708 002e F2D1     		bne	.L48
 674:lvgl/src/misc/lv_txt.c ****                 (*i)--;
 709              		.loc 1 674 13 is_stmt 1 view .LVU237
 674:lvgl/src/misc/lv_txt.c ****                 (*i)--;
 710              		.loc 1 674 16 is_stmt 0 view .LVU238
 711 0030 2868     		ldr	r0, [r5]
 712              	.LVL63:
 674:lvgl/src/misc/lv_txt.c ****                 (*i)--;
 713              		.loc 1 674 15 view .LVU239
 714 0032 0028     		cmp	r0, #0
 715 0034 EDD1     		bne	.L53
 716 0036 08E0     		b	.L46
 717              	.L52:
 681:lvgl/src/misc/lv_txt.c **** 
 682:lvgl/src/misc/lv_txt.c ****     uint32_t i_tmp  = *i;
 718              		.loc 1 682 5 is_stmt 1 view .LVU240
 719              		.loc 1 682 23 is_stmt 0 view .LVU241
 720 0038 2B68     		ldr	r3, [r5]
 721              	.LVL64:
 722              		.loc 1 682 14 view .LVU242
 723 003a 0193     		str	r3, [sp, #4]
 683:lvgl/src/misc/lv_txt.c ****     uint32_t letter = _lv_txt_encoded_next(txt, &i_tmp); /*Character found, get it*/
 724              		.loc 1 683 5 is_stmt 1 view .LVU243
 725              		.loc 1 683 23 is_stmt 0 view .LVU244
 726 003c 054B     		ldr	r3, .L54+4
 727 003e 1B68     		ldr	r3, [r3]
ARM GAS  C:\usertemp\ccUwScgV.s 			page 32


 728 0040 01A9     		add	r1, sp, #4
 729 0042 3046     		mov	r0, r6
 730 0044 9847     		blx	r3
 731              	.LVL65:
 684:lvgl/src/misc/lv_txt.c **** 
 685:lvgl/src/misc/lv_txt.c ****     return letter;
 732              		.loc 1 685 5 is_stmt 1 view .LVU245
 733              		.loc 1 685 12 is_stmt 0 view .LVU246
 734 0046 00E0     		b	.L46
 735              	.LVL66:
 736              	.L50:
 670:lvgl/src/misc/lv_txt.c **** 
 737              		.loc 1 670 29 discriminator 1 view .LVU247
 738 0048 0020     		movs	r0, #0
 739              	.L46:
 686:lvgl/src/misc/lv_txt.c **** }
 740              		.loc 1 686 1 view .LVU248
 741 004a 02B0     		add	sp, sp, #8
 742              	.LCFI13:
 743              		.cfi_def_cfa_offset 16
 744              		@ sp needed
 745 004c 70BD     		pop	{r4, r5, r6, pc}
 746              	.LVL67:
 747              	.L55:
 748              		.loc 1 686 1 view .LVU249
 749 004e 00BF     		.align	2
 750              	.L54:
 751 0050 00000000 		.word	_lv_txt_encoded_size
 752 0054 00000000 		.word	_lv_txt_encoded_next
 753              		.cfi_endproc
 754              	.LFE69:
 756              		.section	.text.lv_txt_utf8_get_byte_id,"ax",%progbits
 757              		.align	1
 758              		.syntax unified
 759              		.thumb
 760              		.thumb_func
 762              	lv_txt_utf8_get_byte_id:
 763              	.LVL68:
 764              	.LFB70:
 687:lvgl/src/misc/lv_txt.c **** 
 688:lvgl/src/misc/lv_txt.c **** /**
 689:lvgl/src/misc/lv_txt.c ****  * Convert a character index (in an UTF-8 text) to byte index.
 690:lvgl/src/misc/lv_txt.c ****  * E.g. in "AÁRT" index of 'R' is 2th char but start at byte 3 because 'Á' is 2 bytes long
 691:lvgl/src/misc/lv_txt.c ****  * @param txt a '\0' terminated UTF-8 string
 692:lvgl/src/misc/lv_txt.c ****  * @param utf8_id character index
 693:lvgl/src/misc/lv_txt.c ****  * @return byte index of the 'utf8_id'th letter
 694:lvgl/src/misc/lv_txt.c ****  */
 695:lvgl/src/misc/lv_txt.c **** static uint32_t lv_txt_utf8_get_byte_id(const char * txt, uint32_t utf8_id)
 696:lvgl/src/misc/lv_txt.c **** {
 765              		.loc 1 696 1 is_stmt 1 view -0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 0
 768              		@ frame_needed = 0, uses_anonymous_args = 0
 769              		.loc 1 696 1 is_stmt 0 view .LVU251
 770 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 771              	.LCFI14:
 772              		.cfi_def_cfa_offset 24
ARM GAS  C:\usertemp\ccUwScgV.s 			page 33


 773              		.cfi_offset 3, -24
 774              		.cfi_offset 4, -20
 775              		.cfi_offset 5, -16
 776              		.cfi_offset 6, -12
 777              		.cfi_offset 7, -8
 778              		.cfi_offset 14, -4
 779 0002 0646     		mov	r6, r0
 780 0004 0F46     		mov	r7, r1
 697:lvgl/src/misc/lv_txt.c ****     uint32_t i;
 781              		.loc 1 697 5 is_stmt 1 view .LVU252
 698:lvgl/src/misc/lv_txt.c ****     uint32_t byte_cnt = 0;
 782              		.loc 1 698 5 view .LVU253
 783              	.LVL69:
 699:lvgl/src/misc/lv_txt.c ****     for(i = 0; i < utf8_id && txt[byte_cnt] != '\0'; i++) {
 784              		.loc 1 699 5 view .LVU254
 698:lvgl/src/misc/lv_txt.c ****     uint32_t byte_cnt = 0;
 785              		.loc 1 698 14 is_stmt 0 view .LVU255
 786 0006 0024     		movs	r4, #0
 787              		.loc 1 699 11 view .LVU256
 788 0008 2546     		mov	r5, r4
 789              		.loc 1 699 5 view .LVU257
 790 000a 01E0     		b	.L57
 791              	.LVL70:
 792              	.L58:
 793              	.LBB18:
 700:lvgl/src/misc/lv_txt.c ****         uint8_t c_size = _lv_txt_encoded_size(&txt[byte_cnt]);
 701:lvgl/src/misc/lv_txt.c ****         /* If the char was invalid tell it's 1 byte long*/
 702:lvgl/src/misc/lv_txt.c ****         byte_cnt += c_size ? c_size : 1;
 794              		.loc 1 702 18 discriminator 4 view .LVU258
 795 000c 1C44     		add	r4, r4, r3
 796              	.LVL71:
 797              		.loc 1 702 18 discriminator 4 view .LVU259
 798              	.LBE18:
 699:lvgl/src/misc/lv_txt.c ****     for(i = 0; i < utf8_id && txt[byte_cnt] != '\0'; i++) {
 799              		.loc 1 699 55 is_stmt 1 discriminator 2 view .LVU260
 800 000e 0135     		adds	r5, r5, #1
 801              	.LVL72:
 802              	.L57:
 699:lvgl/src/misc/lv_txt.c ****     for(i = 0; i < utf8_id && txt[byte_cnt] != '\0'; i++) {
 803              		.loc 1 699 28 discriminator 1 view .LVU261
 804 0010 BD42     		cmp	r5, r7
 805 0012 0AD2     		bcs	.L56
 699:lvgl/src/misc/lv_txt.c ****     for(i = 0; i < utf8_id && txt[byte_cnt] != '\0'; i++) {
 806              		.loc 1 699 34 is_stmt 0 discriminator 3 view .LVU262
 807 0014 3019     		adds	r0, r6, r4
 808 0016 335D     		ldrb	r3, [r6, r4]	@ zero_extendqisi2
 699:lvgl/src/misc/lv_txt.c ****     for(i = 0; i < utf8_id && txt[byte_cnt] != '\0'; i++) {
 809              		.loc 1 699 28 discriminator 3 view .LVU263
 810 0018 3BB1     		cbz	r3, .L56
 811              	.LBB19:
 700:lvgl/src/misc/lv_txt.c ****         uint8_t c_size = _lv_txt_encoded_size(&txt[byte_cnt]);
 812              		.loc 1 700 9 is_stmt 1 view .LVU264
 700:lvgl/src/misc/lv_txt.c ****         uint8_t c_size = _lv_txt_encoded_size(&txt[byte_cnt]);
 813              		.loc 1 700 26 is_stmt 0 view .LVU265
 814 001a 054B     		ldr	r3, .L63
 815 001c 1B68     		ldr	r3, [r3]
 816 001e 9847     		blx	r3
ARM GAS  C:\usertemp\ccUwScgV.s 			page 34


 817              	.LVL73:
 818              		.loc 1 702 9 is_stmt 1 view .LVU266
 819              		.loc 1 702 37 is_stmt 0 view .LVU267
 820 0020 0346     		mov	r3, r0
 821 0022 0028     		cmp	r0, #0
 822 0024 F2D1     		bne	.L58
 823              		.loc 1 702 37 discriminator 2 view .LVU268
 824 0026 0123     		movs	r3, #1
 825 0028 F0E7     		b	.L58
 826              	.LVL74:
 827              	.L56:
 828              		.loc 1 702 37 discriminator 2 view .LVU269
 829              	.LBE19:
 703:lvgl/src/misc/lv_txt.c ****     }
 704:lvgl/src/misc/lv_txt.c **** 
 705:lvgl/src/misc/lv_txt.c ****     return byte_cnt;
 706:lvgl/src/misc/lv_txt.c **** }
 830              		.loc 1 706 1 view .LVU270
 831 002a 2046     		mov	r0, r4
 832 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 833              	.LVL75:
 834              	.L64:
 835              		.loc 1 706 1 view .LVU271
 836 002e 00BF     		.align	2
 837              	.L63:
 838 0030 00000000 		.word	_lv_txt_encoded_size
 839              		.cfi_endproc
 840              	.LFE70:
 842              		.section	.text.lv_txt_utf8_get_char_id,"ax",%progbits
 843              		.align	1
 844              		.syntax unified
 845              		.thumb
 846              		.thumb_func
 848              	lv_txt_utf8_get_char_id:
 849              	.LVL76:
 850              	.LFB71:
 707:lvgl/src/misc/lv_txt.c **** 
 708:lvgl/src/misc/lv_txt.c **** /**
 709:lvgl/src/misc/lv_txt.c ****  * Convert a byte index (in an UTF-8 text) to character index.
 710:lvgl/src/misc/lv_txt.c ****  * E.g. in "AÁRT" index of 'R' is 2th char but start at byte 3 because 'Á' is 2 bytes long
 711:lvgl/src/misc/lv_txt.c ****  * @param txt a '\0' terminated UTF-8 string
 712:lvgl/src/misc/lv_txt.c ****  * @param byte_id byte index
 713:lvgl/src/misc/lv_txt.c ****  * @return character index of the letter at 'byte_id'th position
 714:lvgl/src/misc/lv_txt.c ****  */
 715:lvgl/src/misc/lv_txt.c **** static uint32_t lv_txt_utf8_get_char_id(const char * txt, uint32_t byte_id)
 716:lvgl/src/misc/lv_txt.c **** {
 851              		.loc 1 716 1 is_stmt 1 view -0
 852              		.cfi_startproc
 853              		@ args = 0, pretend = 0, frame = 8
 854              		@ frame_needed = 0, uses_anonymous_args = 0
 855              		.loc 1 716 1 is_stmt 0 view .LVU273
 856 0000 70B5     		push	{r4, r5, r6, lr}
 857              	.LCFI15:
 858              		.cfi_def_cfa_offset 16
 859              		.cfi_offset 4, -16
 860              		.cfi_offset 5, -12
 861              		.cfi_offset 6, -8
ARM GAS  C:\usertemp\ccUwScgV.s 			page 35


 862              		.cfi_offset 14, -4
 863 0002 82B0     		sub	sp, sp, #8
 864              	.LCFI16:
 865              		.cfi_def_cfa_offset 24
 866 0004 0646     		mov	r6, r0
 867 0006 0D46     		mov	r5, r1
 717:lvgl/src/misc/lv_txt.c ****     uint32_t i        = 0;
 868              		.loc 1 717 5 is_stmt 1 view .LVU274
 869              		.loc 1 717 14 is_stmt 0 view .LVU275
 870 0008 0024     		movs	r4, #0
 871 000a 0194     		str	r4, [sp, #4]
 718:lvgl/src/misc/lv_txt.c ****     uint32_t char_cnt = 0;
 872              		.loc 1 718 5 is_stmt 1 view .LVU276
 873              	.LVL77:
 719:lvgl/src/misc/lv_txt.c **** 
 720:lvgl/src/misc/lv_txt.c ****     while(i < byte_id) {
 874              		.loc 1 720 5 view .LVU277
 875              		.loc 1 720 10 is_stmt 0 view .LVU278
 876 000c 05E0     		b	.L66
 877              	.LVL78:
 878              	.L67:
 721:lvgl/src/misc/lv_txt.c ****         _lv_txt_encoded_next(txt, &i); /*'i' points to the next letter so use the prev. value*/
 879              		.loc 1 721 9 is_stmt 1 view .LVU279
 880 000e 064B     		ldr	r3, .L69
 881 0010 1B68     		ldr	r3, [r3]
 882 0012 01A9     		add	r1, sp, #4
 883 0014 3046     		mov	r0, r6
 884 0016 9847     		blx	r3
 885              	.LVL79:
 722:lvgl/src/misc/lv_txt.c ****         char_cnt++;
 886              		.loc 1 722 9 view .LVU280
 887              		.loc 1 722 17 is_stmt 0 view .LVU281
 888 0018 0134     		adds	r4, r4, #1
 889              	.LVL80:
 890              	.L66:
 720:lvgl/src/misc/lv_txt.c ****         _lv_txt_encoded_next(txt, &i); /*'i' points to the next letter so use the prev. value*/
 891              		.loc 1 720 13 is_stmt 1 view .LVU282
 892 001a 019B     		ldr	r3, [sp, #4]
 893 001c AB42     		cmp	r3, r5
 894 001e F6D3     		bcc	.L67
 723:lvgl/src/misc/lv_txt.c ****     }
 724:lvgl/src/misc/lv_txt.c **** 
 725:lvgl/src/misc/lv_txt.c ****     return char_cnt;
 895              		.loc 1 725 5 view .LVU283
 726:lvgl/src/misc/lv_txt.c **** }
 896              		.loc 1 726 1 is_stmt 0 view .LVU284
 897 0020 2046     		mov	r0, r4
 898 0022 02B0     		add	sp, sp, #8
 899              	.LCFI17:
 900              		.cfi_def_cfa_offset 16
 901              		@ sp needed
 902 0024 70BD     		pop	{r4, r5, r6, pc}
 903              	.LVL81:
 904              	.L70:
 905              		.loc 1 726 1 view .LVU285
 906 0026 00BF     		.align	2
 907              	.L69:
ARM GAS  C:\usertemp\ccUwScgV.s 			page 36


 908 0028 00000000 		.word	_lv_txt_encoded_next
 909              		.cfi_endproc
 910              	.LFE71:
 912              		.section	.text.lv_txt_utf8_get_length,"ax",%progbits
 913              		.align	1
 914              		.syntax unified
 915              		.thumb
 916              		.thumb_func
 918              	lv_txt_utf8_get_length:
 919              	.LVL82:
 920              	.LFB72:
 727:lvgl/src/misc/lv_txt.c **** 
 728:lvgl/src/misc/lv_txt.c **** /**
 729:lvgl/src/misc/lv_txt.c ****  * Get the number of characters (and NOT bytes) in a string. Decode it with UTF-8 if enabled.
 730:lvgl/src/misc/lv_txt.c ****  * E.g.: "ÁBC" is 3 characters (but 4 bytes)
 731:lvgl/src/misc/lv_txt.c ****  * @param txt a '\0' terminated char string
 732:lvgl/src/misc/lv_txt.c ****  * @return number of characters
 733:lvgl/src/misc/lv_txt.c ****  */
 734:lvgl/src/misc/lv_txt.c **** static uint32_t lv_txt_utf8_get_length(const char * txt)
 735:lvgl/src/misc/lv_txt.c **** {
 921              		.loc 1 735 1 is_stmt 1 view -0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 8
 924              		@ frame_needed = 0, uses_anonymous_args = 0
 925              		.loc 1 735 1 is_stmt 0 view .LVU287
 926 0000 30B5     		push	{r4, r5, lr}
 927              	.LCFI18:
 928              		.cfi_def_cfa_offset 12
 929              		.cfi_offset 4, -12
 930              		.cfi_offset 5, -8
 931              		.cfi_offset 14, -4
 932 0002 83B0     		sub	sp, sp, #12
 933              	.LCFI19:
 934              		.cfi_def_cfa_offset 24
 935 0004 0546     		mov	r5, r0
 736:lvgl/src/misc/lv_txt.c ****     uint32_t len = 0;
 936              		.loc 1 736 5 is_stmt 1 view .LVU288
 937              	.LVL83:
 737:lvgl/src/misc/lv_txt.c ****     uint32_t i   = 0;
 938              		.loc 1 737 5 view .LVU289
 939              		.loc 1 737 14 is_stmt 0 view .LVU290
 940 0006 0024     		movs	r4, #0
 941 0008 0194     		str	r4, [sp, #4]
 738:lvgl/src/misc/lv_txt.c **** 
 739:lvgl/src/misc/lv_txt.c ****     while(txt[i] != '\0') {
 942              		.loc 1 739 5 is_stmt 1 view .LVU291
 943              		.loc 1 739 10 is_stmt 0 view .LVU292
 944 000a 05E0     		b	.L72
 945              	.LVL84:
 946              	.L73:
 740:lvgl/src/misc/lv_txt.c ****         _lv_txt_encoded_next(txt, &i);
 947              		.loc 1 740 9 is_stmt 1 view .LVU293
 948 000c 064B     		ldr	r3, .L75
 949 000e 1B68     		ldr	r3, [r3]
 950 0010 01A9     		add	r1, sp, #4
 951 0012 2846     		mov	r0, r5
 952 0014 9847     		blx	r3
ARM GAS  C:\usertemp\ccUwScgV.s 			page 37


 953              	.LVL85:
 741:lvgl/src/misc/lv_txt.c ****         len++;
 954              		.loc 1 741 9 view .LVU294
 955              		.loc 1 741 12 is_stmt 0 view .LVU295
 956 0016 0134     		adds	r4, r4, #1
 957              	.LVL86:
 958              	.L72:
 739:lvgl/src/misc/lv_txt.c ****         _lv_txt_encoded_next(txt, &i);
 959              		.loc 1 739 18 is_stmt 1 view .LVU296
 739:lvgl/src/misc/lv_txt.c ****         _lv_txt_encoded_next(txt, &i);
 960              		.loc 1 739 14 is_stmt 0 view .LVU297
 961 0018 019B     		ldr	r3, [sp, #4]
 962 001a EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 739:lvgl/src/misc/lv_txt.c ****         _lv_txt_encoded_next(txt, &i);
 963              		.loc 1 739 18 view .LVU298
 964 001c 002B     		cmp	r3, #0
 965 001e F5D1     		bne	.L73
 742:lvgl/src/misc/lv_txt.c ****     }
 743:lvgl/src/misc/lv_txt.c **** 
 744:lvgl/src/misc/lv_txt.c ****     return len;
 966              		.loc 1 744 5 is_stmt 1 view .LVU299
 745:lvgl/src/misc/lv_txt.c **** }
 967              		.loc 1 745 1 is_stmt 0 view .LVU300
 968 0020 2046     		mov	r0, r4
 969 0022 03B0     		add	sp, sp, #12
 970              	.LCFI20:
 971              		.cfi_def_cfa_offset 12
 972              		@ sp needed
 973 0024 30BD     		pop	{r4, r5, pc}
 974              	.LVL87:
 975              	.L76:
 976              		.loc 1 745 1 view .LVU301
 977 0026 00BF     		.align	2
 978              	.L75:
 979 0028 00000000 		.word	_lv_txt_encoded_next
 980              		.cfi_endproc
 981              	.LFE72:
 983              		.section	.text._lv_txt_is_cmd,"ax",%progbits
 984              		.align	1
 985              		.global	_lv_txt_is_cmd
 986              		.syntax unified
 987              		.thumb
 988              		.thumb_func
 990              	_lv_txt_is_cmd:
 991              	.LVL88:
 992              	.LFB60:
 382:lvgl/src/misc/lv_txt.c ****     bool ret = false;
 993              		.loc 1 382 1 is_stmt 1 view -0
 994              		.cfi_startproc
 995              		@ args = 0, pretend = 0, frame = 0
 996              		@ frame_needed = 0, uses_anonymous_args = 0
 997              		@ link register save eliminated.
 382:lvgl/src/misc/lv_txt.c ****     bool ret = false;
 998              		.loc 1 382 1 is_stmt 0 view .LVU303
 999 0000 0346     		mov	r3, r0
 383:lvgl/src/misc/lv_txt.c **** 
 1000              		.loc 1 383 5 is_stmt 1 view .LVU304
ARM GAS  C:\usertemp\ccUwScgV.s 			page 38


 1001              	.LVL89:
 385:lvgl/src/misc/lv_txt.c ****         if(*state == LV_TEXT_CMD_STATE_WAIT) { /*Start char*/
 1002              		.loc 1 385 5 view .LVU305
 385:lvgl/src/misc/lv_txt.c ****         if(*state == LV_TEXT_CMD_STATE_WAIT) { /*Start char*/
 1003              		.loc 1 385 7 is_stmt 0 view .LVU306
 1004 0002 2329     		cmp	r1, #35
 1005 0004 04D0     		beq	.L85
 383:lvgl/src/misc/lv_txt.c **** 
 1006              		.loc 1 383 10 view .LVU307
 1007 0006 0020     		movs	r0, #0
 1008              	.LVL90:
 1009              	.L78:
 402:lvgl/src/misc/lv_txt.c ****         if(c == ' ') {
 1010              		.loc 1 402 5 is_stmt 1 view .LVU308
 402:lvgl/src/misc/lv_txt.c ****         if(c == ' ') {
 1011              		.loc 1 402 8 is_stmt 0 view .LVU309
 1012 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 402:lvgl/src/misc/lv_txt.c ****         if(c == ' ') {
 1013              		.loc 1 402 7 view .LVU310
 1014 000a 012A     		cmp	r2, #1
 1015 000c 12D0     		beq	.L86
 1016              	.LVL91:
 1017              	.L81:
 409:lvgl/src/misc/lv_txt.c **** }
 1018              		.loc 1 409 5 is_stmt 1 view .LVU311
 410:lvgl/src/misc/lv_txt.c **** 
 1019              		.loc 1 410 1 is_stmt 0 view .LVU312
 1020 000e 7047     		bx	lr
 1021              	.LVL92:
 1022              	.L85:
 386:lvgl/src/misc/lv_txt.c ****             *state = LV_TEXT_CMD_STATE_PAR;
 1023              		.loc 1 386 9 is_stmt 1 view .LVU313
 386:lvgl/src/misc/lv_txt.c ****             *state = LV_TEXT_CMD_STATE_PAR;
 1024              		.loc 1 386 12 is_stmt 0 view .LVU314
 1025 0010 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 386:lvgl/src/misc/lv_txt.c ****             *state = LV_TEXT_CMD_STATE_PAR;
 1026              		.loc 1 386 11 view .LVU315
 1027 0012 12B9     		cbnz	r2, .L79
 387:lvgl/src/misc/lv_txt.c ****             ret    = true;
 1028              		.loc 1 387 13 is_stmt 1 view .LVU316
 387:lvgl/src/misc/lv_txt.c ****             ret    = true;
 1029              		.loc 1 387 20 is_stmt 0 view .LVU317
 1030 0014 0120     		movs	r0, #1
 1031              	.LVL93:
 387:lvgl/src/misc/lv_txt.c ****             ret    = true;
 1032              		.loc 1 387 20 view .LVU318
 1033 0016 1870     		strb	r0, [r3]
 388:lvgl/src/misc/lv_txt.c ****         }
 1034              		.loc 1 388 13 is_stmt 1 view .LVU319
 1035              	.LVL94:
 388:lvgl/src/misc/lv_txt.c ****         }
 1036              		.loc 1 388 13 is_stmt 0 view .LVU320
 1037 0018 F6E7     		b	.L78
 1038              	.LVL95:
 1039              	.L79:
 391:lvgl/src/misc/lv_txt.c ****             *state = LV_TEXT_CMD_STATE_WAIT;
 1040              		.loc 1 391 14 is_stmt 1 view .LVU321
ARM GAS  C:\usertemp\ccUwScgV.s 			page 39


 391:lvgl/src/misc/lv_txt.c ****             *state = LV_TEXT_CMD_STATE_WAIT;
 1041              		.loc 1 391 16 is_stmt 0 view .LVU322
 1042 001a 012A     		cmp	r2, #1
 1043 001c 03D0     		beq	.L87
 395:lvgl/src/misc/lv_txt.c ****             *state = LV_TEXT_CMD_STATE_WAIT;
 1044              		.loc 1 395 14 is_stmt 1 view .LVU323
 395:lvgl/src/misc/lv_txt.c ****             *state = LV_TEXT_CMD_STATE_WAIT;
 1045              		.loc 1 395 16 is_stmt 0 view .LVU324
 1046 001e 022A     		cmp	r2, #2
 1047 0020 04D0     		beq	.L88
 383:lvgl/src/misc/lv_txt.c **** 
 1048              		.loc 1 383 10 view .LVU325
 1049 0022 0020     		movs	r0, #0
 1050              	.LVL96:
 383:lvgl/src/misc/lv_txt.c **** 
 1051              		.loc 1 383 10 view .LVU326
 1052 0024 F0E7     		b	.L78
 1053              	.LVL97:
 1054              	.L87:
 392:lvgl/src/misc/lv_txt.c ****         }
 1055              		.loc 1 392 13 is_stmt 1 view .LVU327
 392:lvgl/src/misc/lv_txt.c ****         }
 1056              		.loc 1 392 20 is_stmt 0 view .LVU328
 1057 0026 0020     		movs	r0, #0
 1058              	.LVL98:
 392:lvgl/src/misc/lv_txt.c ****         }
 1059              		.loc 1 392 20 view .LVU329
 1060 0028 1870     		strb	r0, [r3]
 1061 002a EDE7     		b	.L78
 1062              	.LVL99:
 1063              	.L88:
 396:lvgl/src/misc/lv_txt.c ****             ret    = true;
 1064              		.loc 1 396 13 is_stmt 1 view .LVU330
 396:lvgl/src/misc/lv_txt.c ****             ret    = true;
 1065              		.loc 1 396 20 is_stmt 0 view .LVU331
 1066 002c 0022     		movs	r2, #0
 1067 002e 0270     		strb	r2, [r0]
 397:lvgl/src/misc/lv_txt.c ****         }
 1068              		.loc 1 397 13 is_stmt 1 view .LVU332
 1069              	.LVL100:
 397:lvgl/src/misc/lv_txt.c ****         }
 1070              		.loc 1 397 20 is_stmt 0 view .LVU333
 1071 0030 0120     		movs	r0, #1
 1072              	.LVL101:
 397:lvgl/src/misc/lv_txt.c ****         }
 1073              		.loc 1 397 20 view .LVU334
 1074 0032 E9E7     		b	.L78
 1075              	.LVL102:
 1076              	.L86:
 403:lvgl/src/misc/lv_txt.c ****             *state = LV_TEXT_CMD_STATE_IN; /*After the parameter the text is in the command*/
 1077              		.loc 1 403 9 is_stmt 1 view .LVU335
 403:lvgl/src/misc/lv_txt.c ****             *state = LV_TEXT_CMD_STATE_IN; /*After the parameter the text is in the command*/
 1078              		.loc 1 403 11 is_stmt 0 view .LVU336
 1079 0034 2029     		cmp	r1, #32
 1080 0036 01D0     		beq	.L89
 406:lvgl/src/misc/lv_txt.c ****     }
 1081              		.loc 1 406 13 view .LVU337
ARM GAS  C:\usertemp\ccUwScgV.s 			page 40


 1082 0038 0120     		movs	r0, #1
 1083              	.LVL103:
 406:lvgl/src/misc/lv_txt.c ****     }
 1084              		.loc 1 406 13 view .LVU338
 1085 003a E8E7     		b	.L81
 1086              	.LVL104:
 1087              	.L89:
 404:lvgl/src/misc/lv_txt.c ****         }
 1088              		.loc 1 404 13 is_stmt 1 view .LVU339
 404:lvgl/src/misc/lv_txt.c ****         }
 1089              		.loc 1 404 20 is_stmt 0 view .LVU340
 1090 003c 0222     		movs	r2, #2
 1091 003e 1A70     		strb	r2, [r3]
 406:lvgl/src/misc/lv_txt.c ****     }
 1092              		.loc 1 406 13 view .LVU341
 1093 0040 0120     		movs	r0, #1
 1094              	.LVL105:
 406:lvgl/src/misc/lv_txt.c ****     }
 1095              		.loc 1 406 13 view .LVU342
 1096 0042 7047     		bx	lr
 1097              		.cfi_endproc
 1098              	.LFE60:
 1100              		.section	.rodata.lv_txt_get_next_word.str1.4,"aMS",%progbits,1
 1101              		.align	2
 1102              	.LC0:
 1103 0000 202C2E3B 		.ascii	" ,.;:-_\000"
 1103      3A2D5F00 
 1104              		.section	.text.lv_txt_get_next_word,"ax",%progbits
 1105              		.align	1
 1106              		.syntax unified
 1107              		.thumb
 1108              		.thumb_func
 1110              	lv_txt_get_next_word:
 1111              	.LVL106:
 1112              	.LFB57:
 173:lvgl/src/misc/lv_txt.c ****     if(txt == NULL || txt[0] == '\0') return 0;
 1113              		.loc 1 173 1 is_stmt 1 view -0
 1114              		.cfi_startproc
 1115              		@ args = 16, pretend = 0, frame = 32
 1116              		@ frame_needed = 0, uses_anonymous_args = 0
 173:lvgl/src/misc/lv_txt.c ****     if(txt == NULL || txt[0] == '\0') return 0;
 1117              		.loc 1 173 1 is_stmt 0 view .LVU344
 1118 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1119              	.LCFI21:
 1120              		.cfi_def_cfa_offset 36
 1121              		.cfi_offset 4, -36
 1122              		.cfi_offset 5, -32
 1123              		.cfi_offset 6, -28
 1124              		.cfi_offset 7, -24
 1125              		.cfi_offset 8, -20
 1126              		.cfi_offset 9, -16
 1127              		.cfi_offset 10, -12
 1128              		.cfi_offset 11, -8
 1129              		.cfi_offset 14, -4
 1130 0004 89B0     		sub	sp, sp, #36
 1131              	.LCFI22:
 1132              		.cfi_def_cfa_offset 72
ARM GAS  C:\usertemp\ccUwScgV.s 			page 41


 1133 0006 0291     		str	r1, [sp, #8]
 1134 0008 0392     		str	r2, [sp, #12]
 1135 000a 0493     		str	r3, [sp, #16]
 1136 000c 9DF848A0 		ldrb	r10, [sp, #72]	@ zero_extendqisi2
 1137 0010 9DF854B0 		ldrb	fp, [sp, #84]	@ zero_extendqisi2
 174:lvgl/src/misc/lv_txt.c ****     if(font == NULL) return 0;
 1138              		.loc 1 174 5 is_stmt 1 view .LVU345
 174:lvgl/src/misc/lv_txt.c ****     if(font == NULL) return 0;
 1139              		.loc 1 174 7 is_stmt 0 view .LVU346
 1140 0014 0028     		cmp	r0, #0
 1141 0016 00F09D80 		beq	.L109
 1142 001a 8046     		mov	r8, r0
 174:lvgl/src/misc/lv_txt.c ****     if(font == NULL) return 0;
 1143              		.loc 1 174 26 discriminator 2 view .LVU347
 1144 001c 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1145              	.LVL107:
 174:lvgl/src/misc/lv_txt.c ****     if(font == NULL) return 0;
 1146              		.loc 1 174 20 discriminator 2 view .LVU348
 1147 001e 002B     		cmp	r3, #0
 1148 0020 00F09A80 		beq	.L110
 175:lvgl/src/misc/lv_txt.c **** 
 1149              		.loc 1 175 5 is_stmt 1 view .LVU349
 175:lvgl/src/misc/lv_txt.c **** 
 1150              		.loc 1 175 7 is_stmt 0 view .LVU350
 1151 0024 0029     		cmp	r1, #0
 1152 0026 00F09C80 		beq	.L111
 177:lvgl/src/misc/lv_txt.c **** 
 1153              		.loc 1 177 5 is_stmt 1 view .LVU351
 177:lvgl/src/misc/lv_txt.c **** 
 1154              		.loc 1 177 7 is_stmt 0 view .LVU352
 1155 002a 1AF0020F 		tst	r10, #2
 1156 002e 02D0     		beq	.L92
 177:lvgl/src/misc/lv_txt.c **** 
 1157              		.loc 1 177 46 discriminator 1 view .LVU353
 1158 0030 41F6FF73 		movw	r3, #8191
 1159 0034 0493     		str	r3, [sp, #16]
 1160              	.LVL108:
 1161              	.L92:
 179:lvgl/src/misc/lv_txt.c ****     uint32_t letter = 0;      /*Letter at i*/
 1162              		.loc 1 179 5 is_stmt 1 view .LVU354
 179:lvgl/src/misc/lv_txt.c ****     uint32_t letter = 0;      /*Letter at i*/
 1163              		.loc 1 179 21 is_stmt 0 view .LVU355
 1164 0036 0027     		movs	r7, #0
 1165 0038 0797     		str	r7, [sp, #28]
 179:lvgl/src/misc/lv_txt.c ****     uint32_t letter = 0;      /*Letter at i*/
 1166              		.loc 1 179 33 view .LVU356
 1167 003a 0697     		str	r7, [sp, #24]
 180:lvgl/src/misc/lv_txt.c ****     uint32_t letter_next = 0; /*Letter at i_next*/
 1168              		.loc 1 180 5 is_stmt 1 view .LVU357
 1169              	.LVL109:
 181:lvgl/src/misc/lv_txt.c ****     lv_coord_t letter_w;
 1170              		.loc 1 181 5 view .LVU358
 182:lvgl/src/misc/lv_txt.c ****     lv_coord_t cur_w = 0;  /*Pixel Width of transversed string*/
 1171              		.loc 1 182 5 view .LVU359
 183:lvgl/src/misc/lv_txt.c ****     uint32_t word_len = 0;   /*Number of characters in the transversed word*/
 1172              		.loc 1 183 5 view .LVU360
 184:lvgl/src/misc/lv_txt.c ****     uint32_t break_index = NO_BREAK_FOUND; /*only used for "long" words*/
ARM GAS  C:\usertemp\ccUwScgV.s 			page 42


 1173              		.loc 1 184 5 view .LVU361
 185:lvgl/src/misc/lv_txt.c ****     uint32_t break_letter_count = 0; /*Number of characters up to the long word break point*/
 1174              		.loc 1 185 5 view .LVU362
 186:lvgl/src/misc/lv_txt.c **** 
 1175              		.loc 1 186 5 view .LVU363
 188:lvgl/src/misc/lv_txt.c ****     i_next_next = i_next;
 1176              		.loc 1 188 5 view .LVU364
 188:lvgl/src/misc/lv_txt.c ****     i_next_next = i_next;
 1177              		.loc 1 188 14 is_stmt 0 view .LVU365
 1178 003c 4B4B     		ldr	r3, .L121
 1179 003e 1B68     		ldr	r3, [r3]
 1180 0040 07A9     		add	r1, sp, #28
 1181              	.LVL110:
 188:lvgl/src/misc/lv_txt.c ****     i_next_next = i_next;
 1182              		.loc 1 188 14 view .LVU366
 1183 0042 4046     		mov	r0, r8
 1184              	.LVL111:
 188:lvgl/src/misc/lv_txt.c ****     i_next_next = i_next;
 1185              		.loc 1 188 14 view .LVU367
 1186 0044 9847     		blx	r3
 1187              	.LVL112:
 188:lvgl/src/misc/lv_txt.c ****     i_next_next = i_next;
 1188              		.loc 1 188 14 view .LVU368
 1189 0046 0446     		mov	r4, r0
 1190              	.LVL113:
 189:lvgl/src/misc/lv_txt.c **** 
 1191              		.loc 1 189 5 is_stmt 1 view .LVU369
 189:lvgl/src/misc/lv_txt.c **** 
 1192              		.loc 1 189 17 is_stmt 0 view .LVU370
 1193 0048 079B     		ldr	r3, [sp, #28]
 1194 004a 0693     		str	r3, [sp, #24]
 192:lvgl/src/misc/lv_txt.c ****         letter_next = _lv_txt_encoded_next(txt, &i_next_next);
 1195              		.loc 1 192 5 is_stmt 1 view .LVU371
 185:lvgl/src/misc/lv_txt.c ****     uint32_t break_letter_count = 0; /*Number of characters up to the long word break point*/
 1196              		.loc 1 185 14 is_stmt 0 view .LVU372
 1197 004c 4FF0FF36 		mov	r6, #-1
 184:lvgl/src/misc/lv_txt.c ****     uint32_t break_index = NO_BREAK_FOUND; /*only used for "long" words*/
 1198              		.loc 1 184 14 view .LVU373
 1199 0050 B946     		mov	r9, r7
 183:lvgl/src/misc/lv_txt.c ****     uint32_t word_len = 0;   /*Number of characters in the transversed word*/
 1200              		.loc 1 183 16 view .LVU374
 1201 0052 3D46     		mov	r5, r7
 181:lvgl/src/misc/lv_txt.c ****     lv_coord_t letter_w;
 1202              		.loc 1 181 14 view .LVU375
 1203 0054 0197     		str	r7, [sp, #4]
 1204 0056 CDF814B0 		str	fp, [sp, #20]
 192:lvgl/src/misc/lv_txt.c ****         letter_next = _lv_txt_encoded_next(txt, &i_next_next);
 1205              		.loc 1 192 10 view .LVU376
 1206 005a 3FE0     		b	.L93
 1207              	.LVL114:
 1208              	.L94:
 206:lvgl/src/misc/lv_txt.c ****         cur_w += letter_w;
 1209              		.loc 1 206 9 is_stmt 1 view .LVU377
 206:lvgl/src/misc/lv_txt.c ****         cur_w += letter_w;
 1210              		.loc 1 206 20 is_stmt 0 view .LVU378
 1211 005c 019A     		ldr	r2, [sp, #4]
 1212 005e 2146     		mov	r1, r4
ARM GAS  C:\usertemp\ccUwScgV.s 			page 43


 1213 0060 0298     		ldr	r0, [sp, #8]
 1214 0062 FFF7FEFF 		bl	lv_font_get_glyph_width
 1215              	.LVL115:
 206:lvgl/src/misc/lv_txt.c ****         cur_w += letter_w;
 1216              		.loc 1 206 18 discriminator 1 view .LVU379
 1217 0066 02B2     		sxth	r2, r0
 1218              	.LVL116:
 207:lvgl/src/misc/lv_txt.c **** 
 1219              		.loc 1 207 9 is_stmt 1 view .LVU380
 207:lvgl/src/misc/lv_txt.c **** 
 1220              		.loc 1 207 15 is_stmt 0 view .LVU381
 1221 0068 2844     		add	r0, r0, r5
 1222 006a 83B2     		uxth	r3, r0
 1223 006c 05B2     		sxth	r5, r0
 1224              	.LVL117:
 209:lvgl/src/misc/lv_txt.c ****             cur_w += letter_space;
 1225              		.loc 1 209 9 is_stmt 1 view .LVU382
 209:lvgl/src/misc/lv_txt.c ****             cur_w += letter_space;
 1226              		.loc 1 209 11 is_stmt 0 view .LVU383
 1227 006e 002A     		cmp	r2, #0
 1228 0070 02DD     		ble	.L96
 210:lvgl/src/misc/lv_txt.c ****         }
 1229              		.loc 1 210 13 is_stmt 1 view .LVU384
 210:lvgl/src/misc/lv_txt.c ****         }
 1230              		.loc 1 210 19 is_stmt 0 view .LVU385
 1231 0072 039A     		ldr	r2, [sp, #12]
 1232              	.LVL118:
 210:lvgl/src/misc/lv_txt.c ****         }
 1233              		.loc 1 210 19 view .LVU386
 1234 0074 1344     		add	r3, r3, r2
 1235 0076 1DB2     		sxth	r5, r3
 1236              	.LVL119:
 1237              	.L96:
 214:lvgl/src/misc/lv_txt.c ****             break_index = i;
 1238              		.loc 1 214 9 is_stmt 1 view .LVU387
 214:lvgl/src/misc/lv_txt.c ****             break_index = i;
 1239              		.loc 1 214 11 is_stmt 0 view .LVU388
 1240 0078 B6F1FF3F 		cmp	r6, #-1
 1241 007c 15D0     		beq	.L118
 1242              	.LVL120:
 1243              	.L97:
 221:lvgl/src/misc/lv_txt.c ****             /*Update the output width on the first character if it fits.
 1244              		.loc 1 221 9 is_stmt 1 view .LVU389
 221:lvgl/src/misc/lv_txt.c ****             /*Update the output width on the first character if it fits.
 1245              		.loc 1 221 11 is_stmt 0 view .LVU390
 1246 007e 0D2C     		cmp	r4, #13
 1247 0080 18BF     		it	ne
 1248 0082 0A2C     		cmpne	r4, #10
 1249 0084 0CBF     		ite	eq
 1250 0086 0121     		moveq	r1, #1
 1251 0088 0021     		movne	r1, #0
 1252 008a 3FD0     		beq	.L98
 1253              	.LVL121:
 1254              	.LBB20:
 1255              	.LBI20:
 1256              		.file 3 "lvgl/src/misc/lv_txt.h"
   1:lvgl/src/misc/lv_txt.h **** /**
ARM GAS  C:\usertemp\ccUwScgV.s 			page 44


   2:lvgl/src/misc/lv_txt.h ****  * @file lv_txt.h
   3:lvgl/src/misc/lv_txt.h ****  *
   4:lvgl/src/misc/lv_txt.h ****  */
   5:lvgl/src/misc/lv_txt.h **** 
   6:lvgl/src/misc/lv_txt.h **** #ifndef LV_TXT_H
   7:lvgl/src/misc/lv_txt.h **** #define LV_TXT_H
   8:lvgl/src/misc/lv_txt.h **** 
   9:lvgl/src/misc/lv_txt.h **** #ifdef __cplusplus
  10:lvgl/src/misc/lv_txt.h **** extern "C" {
  11:lvgl/src/misc/lv_txt.h **** #endif
  12:lvgl/src/misc/lv_txt.h **** 
  13:lvgl/src/misc/lv_txt.h **** /*********************
  14:lvgl/src/misc/lv_txt.h ****  *      INCLUDES
  15:lvgl/src/misc/lv_txt.h ****  *********************/
  16:lvgl/src/misc/lv_txt.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/misc/lv_txt.h **** 
  18:lvgl/src/misc/lv_txt.h **** #include <stdbool.h>
  19:lvgl/src/misc/lv_txt.h **** #include <stdarg.h>
  20:lvgl/src/misc/lv_txt.h **** #include "lv_area.h"
  21:lvgl/src/misc/lv_txt.h **** #include "../font/lv_font.h"
  22:lvgl/src/misc/lv_txt.h **** #include "lv_printf.h"
  23:lvgl/src/misc/lv_txt.h **** #include "lv_types.h"
  24:lvgl/src/misc/lv_txt.h **** 
  25:lvgl/src/misc/lv_txt.h **** /*********************
  26:lvgl/src/misc/lv_txt.h ****  *      DEFINES
  27:lvgl/src/misc/lv_txt.h ****  *********************/
  28:lvgl/src/misc/lv_txt.h **** #ifndef LV_TXT_COLOR_CMD
  29:lvgl/src/misc/lv_txt.h **** #define LV_TXT_COLOR_CMD "#"
  30:lvgl/src/misc/lv_txt.h **** #endif
  31:lvgl/src/misc/lv_txt.h **** 
  32:lvgl/src/misc/lv_txt.h **** #define LV_TXT_ENC_UTF8 1
  33:lvgl/src/misc/lv_txt.h **** #define LV_TXT_ENC_ASCII 2
  34:lvgl/src/misc/lv_txt.h **** 
  35:lvgl/src/misc/lv_txt.h **** /**********************
  36:lvgl/src/misc/lv_txt.h ****  *      TYPEDEFS
  37:lvgl/src/misc/lv_txt.h ****  **********************/
  38:lvgl/src/misc/lv_txt.h **** 
  39:lvgl/src/misc/lv_txt.h **** /**
  40:lvgl/src/misc/lv_txt.h ****  * Options for text rendering.
  41:lvgl/src/misc/lv_txt.h ****  */
  42:lvgl/src/misc/lv_txt.h **** enum {
  43:lvgl/src/misc/lv_txt.h ****     LV_TEXT_FLAG_NONE    = 0x00,
  44:lvgl/src/misc/lv_txt.h ****     LV_TEXT_FLAG_RECOLOR = 0x01, /**< Enable parsing of recolor command*/
  45:lvgl/src/misc/lv_txt.h ****     LV_TEXT_FLAG_EXPAND  = 0x02, /**< Ignore max-width to avoid automatic word wrapping*/
  46:lvgl/src/misc/lv_txt.h ****     LV_TEXT_FLAG_FIT     = 0x04, /**< Max-width is already equal to the longest line. (Used to skip
  47:lvgl/src/misc/lv_txt.h **** };
  48:lvgl/src/misc/lv_txt.h **** typedef uint8_t lv_text_flag_t;
  49:lvgl/src/misc/lv_txt.h **** 
  50:lvgl/src/misc/lv_txt.h **** /**
  51:lvgl/src/misc/lv_txt.h ****  * State machine for text renderer.*/
  52:lvgl/src/misc/lv_txt.h **** enum {
  53:lvgl/src/misc/lv_txt.h ****     LV_TEXT_CMD_STATE_WAIT, /**< Waiting for command*/
  54:lvgl/src/misc/lv_txt.h ****     LV_TEXT_CMD_STATE_PAR,  /**< Processing the parameter*/
  55:lvgl/src/misc/lv_txt.h ****     LV_TEXT_CMD_STATE_IN,   /**< Processing the command*/
  56:lvgl/src/misc/lv_txt.h **** };
  57:lvgl/src/misc/lv_txt.h **** typedef uint8_t lv_text_cmd_state_t;
  58:lvgl/src/misc/lv_txt.h **** 
ARM GAS  C:\usertemp\ccUwScgV.s 			page 45


  59:lvgl/src/misc/lv_txt.h **** /** Label align policy*/
  60:lvgl/src/misc/lv_txt.h **** enum {
  61:lvgl/src/misc/lv_txt.h ****     LV_TEXT_ALIGN_AUTO, /**< Align text auto*/
  62:lvgl/src/misc/lv_txt.h ****     LV_TEXT_ALIGN_LEFT, /**< Align text to left*/
  63:lvgl/src/misc/lv_txt.h ****     LV_TEXT_ALIGN_CENTER, /**< Align text to center*/
  64:lvgl/src/misc/lv_txt.h ****     LV_TEXT_ALIGN_RIGHT, /**< Align text to right*/
  65:lvgl/src/misc/lv_txt.h **** };
  66:lvgl/src/misc/lv_txt.h **** typedef uint8_t lv_text_align_t;
  67:lvgl/src/misc/lv_txt.h **** 
  68:lvgl/src/misc/lv_txt.h **** /**********************
  69:lvgl/src/misc/lv_txt.h ****  * GLOBAL PROTOTYPES
  70:lvgl/src/misc/lv_txt.h ****  **********************/
  71:lvgl/src/misc/lv_txt.h **** 
  72:lvgl/src/misc/lv_txt.h **** /**
  73:lvgl/src/misc/lv_txt.h ****  * Get size of a text
  74:lvgl/src/misc/lv_txt.h ****  * @param size_res pointer to a 'point_t' variable to store the result
  75:lvgl/src/misc/lv_txt.h ****  * @param text pointer to a text
  76:lvgl/src/misc/lv_txt.h ****  * @param font pointer to font of the text
  77:lvgl/src/misc/lv_txt.h ****  * @param letter_space letter space of the text
  78:lvgl/src/misc/lv_txt.h ****  * @param line_space line space of the text
  79:lvgl/src/misc/lv_txt.h ****  * @param flags settings for the text from ::lv_text_flag_t
  80:lvgl/src/misc/lv_txt.h ****  * @param max_width max with of the text (break the lines to fit this size) Set CORD_MAX to avoid
  81:lvgl/src/misc/lv_txt.h ****  * line breaks
  82:lvgl/src/misc/lv_txt.h ****  */
  83:lvgl/src/misc/lv_txt.h **** void lv_txt_get_size(lv_point_t * size_res, const char * text, const lv_font_t * font, lv_coord_t l
  84:lvgl/src/misc/lv_txt.h ****                      lv_coord_t line_space, lv_coord_t max_width, lv_text_flag_t flag);
  85:lvgl/src/misc/lv_txt.h **** 
  86:lvgl/src/misc/lv_txt.h **** /**
  87:lvgl/src/misc/lv_txt.h ****  * Get the next line of text. Check line length and break chars too.
  88:lvgl/src/misc/lv_txt.h ****  * @param txt a '\0' terminated string
  89:lvgl/src/misc/lv_txt.h ****  * @param font pointer to a font
  90:lvgl/src/misc/lv_txt.h ****  * @param letter_space letter space
  91:lvgl/src/misc/lv_txt.h ****  * @param max_width max with of the text (break the lines to fit this size) Set CORD_MAX to avoid
  92:lvgl/src/misc/lv_txt.h ****  * line breaks
  93:lvgl/src/misc/lv_txt.h ****  * @param used_width When used_width != NULL, save the width of this line if
  94:lvgl/src/misc/lv_txt.h ****  * flag == LV_TEXT_FLAG_NONE, otherwise save -1.
  95:lvgl/src/misc/lv_txt.h ****  * @param flags settings for the text from 'txt_flag_type' enum
  96:lvgl/src/misc/lv_txt.h ****  * @return the index of the first char of the new line (in byte index not letter index. With UTF-8
  97:lvgl/src/misc/lv_txt.h ****  * they are different)
  98:lvgl/src/misc/lv_txt.h ****  */
  99:lvgl/src/misc/lv_txt.h **** uint32_t _lv_txt_get_next_line(const char * txt, const lv_font_t * font, lv_coord_t letter_space,
 100:lvgl/src/misc/lv_txt.h ****                                lv_coord_t max_width, lv_coord_t * used_width, lv_text_flag_t flag);
 101:lvgl/src/misc/lv_txt.h **** 
 102:lvgl/src/misc/lv_txt.h **** /**
 103:lvgl/src/misc/lv_txt.h ****  * Give the length of a text with a given font
 104:lvgl/src/misc/lv_txt.h ****  * @param txt a '\0' terminate string
 105:lvgl/src/misc/lv_txt.h ****  * @param length length of 'txt' in byte count and not characters (Á is 1 character but 2 bytes in
 106:lvgl/src/misc/lv_txt.h ****  * UTF-8)
 107:lvgl/src/misc/lv_txt.h ****  * @param font pointer to a font
 108:lvgl/src/misc/lv_txt.h ****  * @param letter_space letter space
 109:lvgl/src/misc/lv_txt.h ****  * @param flags settings for the text from 'txt_flag_t' enum
 110:lvgl/src/misc/lv_txt.h ****  * @return length of a char_num long text
 111:lvgl/src/misc/lv_txt.h ****  */
 112:lvgl/src/misc/lv_txt.h **** lv_coord_t lv_txt_get_width(const char * txt, uint32_t length, const lv_font_t * font, lv_coord_t l
 113:lvgl/src/misc/lv_txt.h ****                             lv_text_flag_t flag);
 114:lvgl/src/misc/lv_txt.h **** 
 115:lvgl/src/misc/lv_txt.h **** /**
ARM GAS  C:\usertemp\ccUwScgV.s 			page 46


 116:lvgl/src/misc/lv_txt.h ****  * Check next character in a string and decide if the character is part of the command or not
 117:lvgl/src/misc/lv_txt.h ****  * @param state pointer to a txt_cmd_state_t variable which stores the current state of command
 118:lvgl/src/misc/lv_txt.h ****  * processing
 119:lvgl/src/misc/lv_txt.h ****  * @param c the current character
 120:lvgl/src/misc/lv_txt.h ****  * @return true: the character is part of a command and should not be written,
 121:lvgl/src/misc/lv_txt.h ****  *         false: the character should be written
 122:lvgl/src/misc/lv_txt.h ****  */
 123:lvgl/src/misc/lv_txt.h **** bool _lv_txt_is_cmd(lv_text_cmd_state_t * state, uint32_t c);
 124:lvgl/src/misc/lv_txt.h **** 
 125:lvgl/src/misc/lv_txt.h **** /**
 126:lvgl/src/misc/lv_txt.h ****  * Insert a string into an other
 127:lvgl/src/misc/lv_txt.h ****  * @param txt_buf the original text (must be big enough for the result text and NULL terminated)
 128:lvgl/src/misc/lv_txt.h ****  * @param pos position to insert (0: before the original text, 1: after the first char etc.)
 129:lvgl/src/misc/lv_txt.h ****  * @param ins_txt text to insert, must be '\0' terminated
 130:lvgl/src/misc/lv_txt.h ****  */
 131:lvgl/src/misc/lv_txt.h **** void _lv_txt_ins(char * txt_buf, uint32_t pos, const char * ins_txt);
 132:lvgl/src/misc/lv_txt.h **** 
 133:lvgl/src/misc/lv_txt.h **** /**
 134:lvgl/src/misc/lv_txt.h ****  * Delete a part of a string
 135:lvgl/src/misc/lv_txt.h ****  * @param txt string to modify, must be '\0' terminated and should point to a heap or stack frame, 
 136:lvgl/src/misc/lv_txt.h ****  * @param pos position where to start the deleting (0: before the first char, 1: after the first
 137:lvgl/src/misc/lv_txt.h ****  * char etc.)
 138:lvgl/src/misc/lv_txt.h ****  * @param len number of characters to delete
 139:lvgl/src/misc/lv_txt.h ****  */
 140:lvgl/src/misc/lv_txt.h **** void _lv_txt_cut(char * txt, uint32_t pos, uint32_t len);
 141:lvgl/src/misc/lv_txt.h **** 
 142:lvgl/src/misc/lv_txt.h **** /**
 143:lvgl/src/misc/lv_txt.h ****  * return a new formatted text. Memory will be allocated to store the text.
 144:lvgl/src/misc/lv_txt.h ****  * @param fmt `printf`-like format
 145:lvgl/src/misc/lv_txt.h ****  * @return pointer to the allocated text string.
 146:lvgl/src/misc/lv_txt.h ****  */
 147:lvgl/src/misc/lv_txt.h **** char * _lv_txt_set_text_vfmt(const char * fmt, va_list ap) LV_FORMAT_ATTRIBUTE(1, 0);
 148:lvgl/src/misc/lv_txt.h **** 
 149:lvgl/src/misc/lv_txt.h **** /**
 150:lvgl/src/misc/lv_txt.h ****  * Decode two encoded character from a string.
 151:lvgl/src/misc/lv_txt.h ****  * @param txt pointer to '\0' terminated string
 152:lvgl/src/misc/lv_txt.h ****  * @param letter the first decoded Unicode character or 0 on invalid data code
 153:lvgl/src/misc/lv_txt.h ****  * @param letter_next the second decoded Unicode character or 0 on invalid data code
 154:lvgl/src/misc/lv_txt.h ****  * @param ofs start index in 'txt' where to start.
 155:lvgl/src/misc/lv_txt.h ****  *                After the call it will point to the next encoded char in 'txt'.
 156:lvgl/src/misc/lv_txt.h ****  *                NULL to use txt[0] as index
 157:lvgl/src/misc/lv_txt.h ****  */
 158:lvgl/src/misc/lv_txt.h **** void _lv_txt_encoded_letter_next_2(const char * txt, uint32_t * letter, uint32_t * letter_next, uin
 159:lvgl/src/misc/lv_txt.h **** 
 160:lvgl/src/misc/lv_txt.h **** /**
 161:lvgl/src/misc/lv_txt.h ****  * Test if char is break char or not (a text can broken here or not)
 162:lvgl/src/misc/lv_txt.h ****  * @param letter a letter
 163:lvgl/src/misc/lv_txt.h ****  * @return false: 'letter' is not break char
 164:lvgl/src/misc/lv_txt.h ****  */
 165:lvgl/src/misc/lv_txt.h **** static inline bool _lv_txt_is_break_char(uint32_t letter)
 1257              		.loc 3 165 20 is_stmt 1 view .LVU391
 1258              	.LBB21:
 166:lvgl/src/misc/lv_txt.h **** {
 167:lvgl/src/misc/lv_txt.h ****     uint8_t i;
 1259              		.loc 3 167 5 view .LVU392
 168:lvgl/src/misc/lv_txt.h ****     bool ret = false;
 1260              		.loc 3 168 5 view .LVU393
ARM GAS  C:\usertemp\ccUwScgV.s 			page 47


 169:lvgl/src/misc/lv_txt.h **** 
 170:lvgl/src/misc/lv_txt.h ****     /* each chinese character can be break */
 171:lvgl/src/misc/lv_txt.h ****     if(letter >= 0x4E00 && letter <= 0x9FA5) {
 1261              		.loc 3 171 5 view .LVU394
 1262              		.loc 3 171 25 is_stmt 0 view .LVU395
 1263 008c A4F59C42 		sub	r2, r4, #19968
 1264              		.loc 3 171 7 view .LVU396
 1265 0090 45F2A513 		movw	r3, #20901
 1266 0094 9A42     		cmp	r2, r3
 1267 0096 39D9     		bls	.L98
 172:lvgl/src/misc/lv_txt.h ****         return true;
 173:lvgl/src/misc/lv_txt.h ****     }
 174:lvgl/src/misc/lv_txt.h **** 
 175:lvgl/src/misc/lv_txt.h ****     /*Compare the letter to TXT_BREAK_CHARS*/
 176:lvgl/src/misc/lv_txt.h ****     for(i = 0; LV_TXT_BREAK_CHARS[i] != '\0'; i++) {
 1268              		.loc 3 176 11 view .LVU397
 1269 0098 0023     		movs	r3, #0
 1270              	.L99:
 1271              	.LVL122:
 1272              		.loc 3 176 38 is_stmt 1 discriminator 1 view .LVU398
 1273              		.loc 3 176 34 is_stmt 0 discriminator 1 view .LVU399
 1274 009a 354A     		ldr	r2, .L121+4
 1275 009c D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1276              		.loc 3 176 38 discriminator 1 view .LVU400
 1277 009e 62B1     		cbz	r2, .L100
 177:lvgl/src/misc/lv_txt.h ****         if(letter == (uint32_t)LV_TXT_BREAK_CHARS[i]) {
 1278              		.loc 3 177 9 is_stmt 1 view .LVU401
 1279              		.loc 3 177 11 is_stmt 0 view .LVU402
 1280 00a0 9442     		cmp	r4, r2
 1281 00a2 09D0     		beq	.L114
 176:lvgl/src/misc/lv_txt.h ****         if(letter == (uint32_t)LV_TXT_BREAK_CHARS[i]) {
 1282              		.loc 3 176 48 is_stmt 1 discriminator 2 view .LVU403
 1283 00a4 0133     		adds	r3, r3, #1
 1284              	.LVL123:
 176:lvgl/src/misc/lv_txt.h ****         if(letter == (uint32_t)LV_TXT_BREAK_CHARS[i]) {
 1285              		.loc 3 176 48 is_stmt 0 discriminator 2 view .LVU404
 1286 00a6 DBB2     		uxtb	r3, r3
 1287              	.LVL124:
 176:lvgl/src/misc/lv_txt.h ****         if(letter == (uint32_t)LV_TXT_BREAK_CHARS[i]) {
 1288              		.loc 3 176 48 discriminator 2 view .LVU405
 1289 00a8 F7E7     		b	.L99
 1290              	.LVL125:
 1291              	.L118:
 176:lvgl/src/misc/lv_txt.h ****         if(letter == (uint32_t)LV_TXT_BREAK_CHARS[i]) {
 1292              		.loc 3 176 48 discriminator 2 view .LVU406
 1293              	.LBE21:
 1294              	.LBE20:
 214:lvgl/src/misc/lv_txt.c ****             break_index = i;
 1295              		.loc 1 214 52 discriminator 1 view .LVU407
 1296 00aa 039B     		ldr	r3, [sp, #12]
 1297 00ac EB1A     		subs	r3, r5, r3
 214:lvgl/src/misc/lv_txt.c ****             break_index = i;
 1298              		.loc 1 214 42 discriminator 1 view .LVU408
 1299 00ae 049A     		ldr	r2, [sp, #16]
 1300 00b0 9342     		cmp	r3, r2
 1301 00b2 E4DD     		ble	.L97
 215:lvgl/src/misc/lv_txt.c ****             break_letter_count = word_len - 1;
ARM GAS  C:\usertemp\ccUwScgV.s 			page 48


 1302              		.loc 1 215 25 view .LVU409
 1303 00b4 3E46     		mov	r6, r7
 1304              	.LVL126:
 215:lvgl/src/misc/lv_txt.c ****             break_letter_count = word_len - 1;
 1305              		.loc 1 215 25 view .LVU410
 1306 00b6 E2E7     		b	.L97
 1307              	.LVL127:
 1308              	.L114:
 1309              	.LBB24:
 1310              	.LBB22:
 178:lvgl/src/misc/lv_txt.h ****             ret = true; /*If match then it is break char*/
 1311              		.loc 3 178 17 view .LVU411
 1312 00b8 0121     		movs	r1, #1
 1313              	.L100:
 1314              	.LVL128:
 1315              		.loc 3 178 17 view .LVU412
 1316              	.LBE22:
 1317              	.LBE24:
 221:lvgl/src/misc/lv_txt.c ****             /*Update the output width on the first character if it fits.
 1318              		.loc 1 221 45 discriminator 1 view .LVU413
 1319 00ba 39BB     		cbnz	r1, .L98
 230:lvgl/src/misc/lv_txt.c **** 
 1320              		.loc 1 230 9 is_stmt 1 view .LVU414
 230:lvgl/src/misc/lv_txt.c **** 
 1321              		.loc 1 230 31 is_stmt 0 view .LVU415
 1322 00bc 139B     		ldr	r3, [sp, #76]
 1323 00be 003B     		subs	r3, r3, #0
 1324 00c0 18BF     		it	ne
 1325 00c2 0123     		movne	r3, #1
 1326 00c4 B6F1FF3F 		cmp	r6, #-1
 1327 00c8 18BF     		it	ne
 1328 00ca 0023     		movne	r3, #0
 230:lvgl/src/misc/lv_txt.c **** 
 1329              		.loc 1 230 11 view .LVU416
 1330 00cc 0BB1     		cbz	r3, .L104
 230:lvgl/src/misc/lv_txt.c **** 
 1331              		.loc 1 230 65 is_stmt 1 discriminator 1 view .LVU417
 230:lvgl/src/misc/lv_txt.c **** 
 1332              		.loc 1 230 77 is_stmt 0 discriminator 1 view .LVU418
 1333 00ce 139B     		ldr	r3, [sp, #76]
 1334 00d0 1D60     		str	r5, [r3]
 1335              	.L104:
 232:lvgl/src/misc/lv_txt.c ****         i_next = i_next_next;
 1336              		.loc 1 232 9 is_stmt 1 view .LVU419
 232:lvgl/src/misc/lv_txt.c ****         i_next = i_next_next;
 1337              		.loc 1 232 11 is_stmt 0 view .LVU420
 1338 00d2 079F     		ldr	r7, [sp, #28]
 1339              	.LVL129:
 233:lvgl/src/misc/lv_txt.c ****         letter = letter_next;
 1340              		.loc 1 233 9 is_stmt 1 view .LVU421
 233:lvgl/src/misc/lv_txt.c ****         letter = letter_next;
 1341              		.loc 1 233 16 is_stmt 0 view .LVU422
 1342 00d4 069B     		ldr	r3, [sp, #24]
 1343 00d6 0793     		str	r3, [sp, #28]
 234:lvgl/src/misc/lv_txt.c ****     }
 1344              		.loc 1 234 9 is_stmt 1 view .LVU423
 1345              	.LVL130:
ARM GAS  C:\usertemp\ccUwScgV.s 			page 49


 1346              	.L95:
 1347              	.LBB25:
 1348              	.LBB23:
 1349              		.loc 3 178 17 is_stmt 0 view .LVU424
 1350 00d8 D946     		mov	r9, fp
 1351 00da 019C     		ldr	r4, [sp, #4]
 1352              	.LVL131:
 1353              	.L93:
 1354              		.loc 3 178 17 view .LVU425
 1355              	.LBE23:
 1356              	.LBE25:
 192:lvgl/src/misc/lv_txt.c ****         letter_next = _lv_txt_encoded_next(txt, &i_next_next);
 1357              		.loc 1 192 18 is_stmt 1 view .LVU426
 192:lvgl/src/misc/lv_txt.c ****         letter_next = _lv_txt_encoded_next(txt, &i_next_next);
 1358              		.loc 1 192 14 is_stmt 0 view .LVU427
 1359 00dc 18F80730 		ldrb	r3, [r8, r7]	@ zero_extendqisi2
 192:lvgl/src/misc/lv_txt.c ****         letter_next = _lv_txt_encoded_next(txt, &i_next_next);
 1360              		.loc 1 192 18 view .LVU428
 1361 00e0 4BB3     		cbz	r3, .L119
 193:lvgl/src/misc/lv_txt.c ****         word_len++;
 1362              		.loc 1 193 9 is_stmt 1 view .LVU429
 193:lvgl/src/misc/lv_txt.c ****         word_len++;
 1363              		.loc 1 193 23 is_stmt 0 view .LVU430
 1364 00e2 224B     		ldr	r3, .L121
 1365 00e4 1B68     		ldr	r3, [r3]
 1366 00e6 06A9     		add	r1, sp, #24
 1367 00e8 4046     		mov	r0, r8
 1368 00ea 9847     		blx	r3
 1369              	.LVL132:
 1370 00ec 0190     		str	r0, [sp, #4]
 1371              	.LVL133:
 194:lvgl/src/misc/lv_txt.c **** 
 1372              		.loc 1 194 9 is_stmt 1 view .LVU431
 194:lvgl/src/misc/lv_txt.c **** 
 1373              		.loc 1 194 17 is_stmt 0 view .LVU432
 1374 00ee 09F1010B 		add	fp, r9, #1
 1375              	.LVL134:
 197:lvgl/src/misc/lv_txt.c ****             if(_lv_txt_is_cmd(cmd_state, letter) != false) {
 1376              		.loc 1 197 9 is_stmt 1 view .LVU433
 197:lvgl/src/misc/lv_txt.c ****             if(_lv_txt_is_cmd(cmd_state, letter) != false) {
 1377              		.loc 1 197 11 is_stmt 0 view .LVU434
 1378 00f2 1AF0010F 		tst	r10, #1
 1379 00f6 B1D0     		beq	.L94
 198:lvgl/src/misc/lv_txt.c ****                 i = i_next;
 1380              		.loc 1 198 13 is_stmt 1 view .LVU435
 198:lvgl/src/misc/lv_txt.c ****                 i = i_next;
 1381              		.loc 1 198 16 is_stmt 0 view .LVU436
 1382 00f8 2146     		mov	r1, r4
 1383 00fa 1498     		ldr	r0, [sp, #80]
 1384              	.LVL135:
 198:lvgl/src/misc/lv_txt.c ****                 i = i_next;
 1385              		.loc 1 198 16 view .LVU437
 1386 00fc FFF7FEFF 		bl	_lv_txt_is_cmd
 1387              	.LVL136:
 198:lvgl/src/misc/lv_txt.c ****                 i = i_next;
 1388              		.loc 1 198 15 discriminator 1 view .LVU438
 1389 0100 0028     		cmp	r0, #0
ARM GAS  C:\usertemp\ccUwScgV.s 			page 50


 1390 0102 ABD0     		beq	.L94
 199:lvgl/src/misc/lv_txt.c ****                 i_next = i_next_next;
 1391              		.loc 1 199 17 is_stmt 1 view .LVU439
 199:lvgl/src/misc/lv_txt.c ****                 i_next = i_next_next;
 1392              		.loc 1 199 19 is_stmt 0 view .LVU440
 1393 0104 079F     		ldr	r7, [sp, #28]
 1394              	.LVL137:
 200:lvgl/src/misc/lv_txt.c ****                 letter = letter_next;
 1395              		.loc 1 200 17 is_stmt 1 view .LVU441
 200:lvgl/src/misc/lv_txt.c ****                 letter = letter_next;
 1396              		.loc 1 200 24 is_stmt 0 view .LVU442
 1397 0106 069B     		ldr	r3, [sp, #24]
 1398 0108 0793     		str	r3, [sp, #28]
 201:lvgl/src/misc/lv_txt.c ****                 continue;   /*Skip the letter if it is part of a command*/
 1399              		.loc 1 201 17 is_stmt 1 view .LVU443
 1400              	.LVL138:
 202:lvgl/src/misc/lv_txt.c ****             }
 1401              		.loc 1 202 17 view .LVU444
 1402 010a E5E7     		b	.L95
 1403              	.LVL139:
 1404              	.L98:
 224:lvgl/src/misc/lv_txt.c ****             word_len--;
 1405              		.loc 1 224 15 is_stmt 0 view .LVU445
 1406 010c DDF814B0 		ldr	fp, [sp, #20]
 1407              	.LVL140:
 224:lvgl/src/misc/lv_txt.c ****             word_len--;
 1408              		.loc 1 224 13 is_stmt 1 view .LVU446
 224:lvgl/src/misc/lv_txt.c ****             word_len--;
 1409              		.loc 1 224 15 is_stmt 0 view .LVU447
 1410 0110 002F     		cmp	r7, #0
 1411 0112 08BF     		it	eq
 1412 0114 B6F1FF3F 		cmpeq	r6, #-1
 1413 0118 02D1     		bne	.L103
 224:lvgl/src/misc/lv_txt.c ****             word_len--;
 1414              		.loc 1 224 56 discriminator 1 view .LVU448
 1415 011a 139B     		ldr	r3, [sp, #76]
 1416 011c 03B1     		cbz	r3, .L103
 224:lvgl/src/misc/lv_txt.c ****             word_len--;
 1417              		.loc 1 224 79 is_stmt 1 discriminator 2 view .LVU449
 224:lvgl/src/misc/lv_txt.c ****             word_len--;
 1418              		.loc 1 224 91 is_stmt 0 discriminator 2 view .LVU450
 1419 011e 1D60     		str	r5, [r3]
 1420              	.LVL141:
 1421              	.L103:
 238:lvgl/src/misc/lv_txt.c ****         if(word_len == 0 || (letter == '\r' && letter_next == '\n')) i = i_next;
 1422              		.loc 1 238 5 is_stmt 1 view .LVU451
 238:lvgl/src/misc/lv_txt.c ****         if(word_len == 0 || (letter == '\r' && letter_next == '\n')) i = i_next;
 1423              		.loc 1 238 7 is_stmt 0 view .LVU452
 1424 0120 B6F1FF3F 		cmp	r6, #-1
 1425 0124 0AD0     		beq	.L120
 271:lvgl/src/misc/lv_txt.c ****     if(word_w_ptr != NULL) *word_w_ptr = 0; /*Return no word*/
 1426              		.loc 1 271 5 is_stmt 1 view .LVU453
 271:lvgl/src/misc/lv_txt.c ****     if(word_w_ptr != NULL) *word_w_ptr = 0; /*Return no word*/
 1427              		.loc 1 271 7 is_stmt 0 view .LVU454
 1428 0126 BBF1000F 		cmp	fp, #0
 1429 012a 16D1     		bne	.L90
 272:lvgl/src/misc/lv_txt.c ****     (void) break_letter_count;
ARM GAS  C:\usertemp\ccUwScgV.s 			page 51


 1430              		.loc 1 272 5 is_stmt 1 view .LVU455
 272:lvgl/src/misc/lv_txt.c ****     (void) break_letter_count;
 1431              		.loc 1 272 7 is_stmt 0 view .LVU456
 1432 012c 139B     		ldr	r3, [sp, #76]
 1433 012e D3B1     		cbz	r3, .L116
 272:lvgl/src/misc/lv_txt.c ****     (void) break_letter_count;
 1434              		.loc 1 272 28 is_stmt 1 discriminator 1 view .LVU457
 272:lvgl/src/misc/lv_txt.c ****     (void) break_letter_count;
 1435              		.loc 1 272 40 is_stmt 0 discriminator 1 view .LVU458
 1436 0130 0026     		movs	r6, #0
 1437              	.LVL142:
 272:lvgl/src/misc/lv_txt.c ****     (void) break_letter_count;
 1438              		.loc 1 272 40 discriminator 1 view .LVU459
 1439 0132 1E60     		str	r6, [r3]
 1440 0134 11E0     		b	.L90
 1441              	.LVL143:
 1442              	.L119:
 272:lvgl/src/misc/lv_txt.c ****     (void) break_letter_count;
 1443              		.loc 1 272 40 discriminator 1 view .LVU460
 1444 0136 DDF814B0 		ldr	fp, [sp, #20]
 1445 013a F1E7     		b	.L103
 1446              	.L120:
 239:lvgl/src/misc/lv_txt.c ****         return i;
 1447              		.loc 1 239 9 is_stmt 1 view .LVU461
 239:lvgl/src/misc/lv_txt.c ****         return i;
 1448              		.loc 1 239 11 is_stmt 0 view .LVU462
 1449 013c B9F1000F 		cmp	r9, #0
 1450 0140 04D0     		beq	.L107
 239:lvgl/src/misc/lv_txt.c ****         return i;
 1451              		.loc 1 239 26 discriminator 2 view .LVU463
 1452 0142 019B     		ldr	r3, [sp, #4]
 1453 0144 0D2C     		cmp	r4, #13
 1454 0146 08BF     		it	eq
 1455 0148 0A2B     		cmpeq	r3, #10
 1456 014a 01D1     		bne	.L115
 1457              	.L107:
 239:lvgl/src/misc/lv_txt.c ****         return i;
 1458              		.loc 1 239 70 is_stmt 1 discriminator 3 view .LVU464
 239:lvgl/src/misc/lv_txt.c ****         return i;
 1459              		.loc 1 239 72 is_stmt 0 discriminator 3 view .LVU465
 1460 014c 079E     		ldr	r6, [sp, #28]
 1461              	.LVL144:
 239:lvgl/src/misc/lv_txt.c ****         return i;
 1462              		.loc 1 239 72 discriminator 3 view .LVU466
 1463 014e 04E0     		b	.L90
 1464              	.LVL145:
 1465              	.L115:
 239:lvgl/src/misc/lv_txt.c ****         return i;
 1466              		.loc 1 239 72 discriminator 3 view .LVU467
 1467 0150 3E46     		mov	r6, r7
 1468              	.LVL146:
 240:lvgl/src/misc/lv_txt.c ****     }
 1469              		.loc 1 240 9 is_stmt 1 view .LVU468
 240:lvgl/src/misc/lv_txt.c ****     }
 1470              		.loc 1 240 16 is_stmt 0 view .LVU469
 1471 0152 02E0     		b	.L90
 1472              	.LVL147:
ARM GAS  C:\usertemp\ccUwScgV.s 			page 52


 1473              	.L109:
 174:lvgl/src/misc/lv_txt.c ****     if(font == NULL) return 0;
 1474              		.loc 1 174 46 discriminator 3 view .LVU470
 1475 0154 0026     		movs	r6, #0
 1476 0156 00E0     		b	.L90
 1477              	.LVL148:
 1478              	.L110:
 174:lvgl/src/misc/lv_txt.c ****     if(font == NULL) return 0;
 1479              		.loc 1 174 46 discriminator 3 view .LVU471
 1480 0158 0026     		movs	r6, #0
 1481              	.LVL149:
 1482              	.L90:
 276:lvgl/src/misc/lv_txt.c **** 
 1483              		.loc 1 276 1 view .LVU472
 1484 015a 3046     		mov	r0, r6
 1485 015c 09B0     		add	sp, sp, #36
 1486              	.LCFI23:
 1487              		.cfi_remember_state
 1488              		.cfi_def_cfa_offset 36
 1489              		@ sp needed
 1490 015e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1491              	.LVL150:
 1492              	.L111:
 1493              	.LCFI24:
 1494              		.cfi_restore_state
 175:lvgl/src/misc/lv_txt.c **** 
 1495              		.loc 1 175 29 discriminator 1 view .LVU473
 1496 0162 0026     		movs	r6, #0
 1497 0164 F9E7     		b	.L90
 1498              	.LVL151:
 1499              	.L116:
 274:lvgl/src/misc/lv_txt.c **** #endif
 1500              		.loc 1 274 12 view .LVU474
 1501 0166 0026     		movs	r6, #0
 1502              	.LVL152:
 274:lvgl/src/misc/lv_txt.c **** #endif
 1503              		.loc 1 274 12 view .LVU475
 1504 0168 F7E7     		b	.L90
 1505              	.L122:
 1506 016a 00BF     		.align	2
 1507              	.L121:
 1508 016c 00000000 		.word	_lv_txt_encoded_next
 1509 0170 00000000 		.word	.LC0
 1510              		.cfi_endproc
 1511              	.LFE57:
 1513              		.section	.text._lv_txt_get_next_line,"ax",%progbits
 1514              		.align	1
 1515              		.global	_lv_txt_get_next_line
 1516              		.syntax unified
 1517              		.thumb
 1518              		.thumb_func
 1520              	_lv_txt_get_next_line:
 1521              	.LVL153:
 1522              	.LFB58:
 281:lvgl/src/misc/lv_txt.c ****     if(used_width) *used_width = 0;
 1523              		.loc 1 281 1 is_stmt 1 view -0
 1524              		.cfi_startproc
ARM GAS  C:\usertemp\ccUwScgV.s 			page 53


 1525              		@ args = 8, pretend = 0, frame = 16
 1526              		@ frame_needed = 0, uses_anonymous_args = 0
 281:lvgl/src/misc/lv_txt.c ****     if(used_width) *used_width = 0;
 1527              		.loc 1 281 1 is_stmt 0 view .LVU477
 1528 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1529              	.LCFI25:
 1530              		.cfi_def_cfa_offset 36
 1531              		.cfi_offset 4, -36
 1532              		.cfi_offset 5, -32
 1533              		.cfi_offset 6, -28
 1534              		.cfi_offset 7, -24
 1535              		.cfi_offset 8, -20
 1536              		.cfi_offset 9, -16
 1537              		.cfi_offset 10, -12
 1538              		.cfi_offset 11, -8
 1539              		.cfi_offset 14, -4
 1540 0004 89B0     		sub	sp, sp, #36
 1541              	.LCFI26:
 1542              		.cfi_def_cfa_offset 72
 1543 0006 0646     		mov	r6, r0
 1544 0008 8846     		mov	r8, r1
 1545 000a 9146     		mov	r9, r2
 1546 000c 1D46     		mov	r5, r3
 1547 000e DDF848B0 		ldr	fp, [sp, #72]
 1548 0012 9DF84CA0 		ldrb	r10, [sp, #76]	@ zero_extendqisi2
 282:lvgl/src/misc/lv_txt.c **** 
 1549              		.loc 1 282 5 is_stmt 1 view .LVU478
 282:lvgl/src/misc/lv_txt.c **** 
 1550              		.loc 1 282 7 is_stmt 0 view .LVU479
 1551 0016 BBF1000F 		cmp	fp, #0
 1552 001a 02D0     		beq	.L124
 282:lvgl/src/misc/lv_txt.c **** 
 1553              		.loc 1 282 20 is_stmt 1 discriminator 1 view .LVU480
 282:lvgl/src/misc/lv_txt.c **** 
 1554              		.loc 1 282 32 is_stmt 0 discriminator 1 view .LVU481
 1555 001c 0023     		movs	r3, #0
 1556              	.LVL154:
 282:lvgl/src/misc/lv_txt.c **** 
 1557              		.loc 1 282 32 discriminator 1 view .LVU482
 1558 001e ABF80030 		strh	r3, [fp]	@ movhi
 1559              	.L124:
 284:lvgl/src/misc/lv_txt.c ****     if(txt[0] == '\0') return 0;
 1560              		.loc 1 284 5 is_stmt 1 view .LVU483
 284:lvgl/src/misc/lv_txt.c ****     if(txt[0] == '\0') return 0;
 1561              		.loc 1 284 7 is_stmt 0 view .LVU484
 1562 0022 002E     		cmp	r6, #0
 1563 0024 68D0     		beq	.L139
 285:lvgl/src/misc/lv_txt.c ****     if(font == NULL) return 0;
 1564              		.loc 1 285 5 is_stmt 1 view .LVU485
 285:lvgl/src/misc/lv_txt.c ****     if(font == NULL) return 0;
 1565              		.loc 1 285 11 is_stmt 0 view .LVU486
 1566 0026 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 285:lvgl/src/misc/lv_txt.c ****     if(font == NULL) return 0;
 1567              		.loc 1 285 7 view .LVU487
 1568 0028 002B     		cmp	r3, #0
 1569 002a 67D0     		beq	.L140
 286:lvgl/src/misc/lv_txt.c **** 
ARM GAS  C:\usertemp\ccUwScgV.s 			page 54


 1570              		.loc 1 286 5 is_stmt 1 view .LVU488
 286:lvgl/src/misc/lv_txt.c **** 
 1571              		.loc 1 286 7 is_stmt 0 view .LVU489
 1572 002c B8F1000F 		cmp	r8, #0
 1573 0030 66D0     		beq	.L141
 288:lvgl/src/misc/lv_txt.c **** 
 1574              		.loc 1 288 5 is_stmt 1 view .LVU490
 1575              	.LVL155:
 292:lvgl/src/misc/lv_txt.c ****         uint32_t i;
 1576              		.loc 1 292 5 view .LVU491
 292:lvgl/src/misc/lv_txt.c ****         uint32_t i;
 1577              		.loc 1 292 7 is_stmt 0 view .LVU492
 1578 0032 1AF0060F 		tst	r10, #6
 1579 0036 5DD1     		bne	.L145
 302:lvgl/src/misc/lv_txt.c ****     lv_text_cmd_state_t cmd_state = LV_TEXT_CMD_STATE_WAIT;
 1580              		.loc 1 302 5 is_stmt 1 view .LVU493
 303:lvgl/src/misc/lv_txt.c ****     uint32_t i = 0;                                        /*Iterating index into txt*/
 1581              		.loc 1 303 5 view .LVU494
 303:lvgl/src/misc/lv_txt.c ****     uint32_t i = 0;                                        /*Iterating index into txt*/
 1582              		.loc 1 303 25 is_stmt 0 view .LVU495
 1583 0038 0027     		movs	r7, #0
 1584 003a 8DF81F70 		strb	r7, [sp, #31]
 304:lvgl/src/misc/lv_txt.c **** 
 1585              		.loc 1 304 5 is_stmt 1 view .LVU496
 304:lvgl/src/misc/lv_txt.c **** 
 1586              		.loc 1 304 14 is_stmt 0 view .LVU497
 1587 003e 0697     		str	r7, [sp, #24]
 306:lvgl/src/misc/lv_txt.c ****         uint32_t word_w = 0;
 1588              		.loc 1 306 5 is_stmt 1 view .LVU498
 1589              	.LVL156:
 1590              	.L132:
 306:lvgl/src/misc/lv_txt.c ****         uint32_t word_w = 0;
 1591              		.loc 1 306 26 view .LVU499
 306:lvgl/src/misc/lv_txt.c ****         uint32_t word_w = 0;
 1592              		.loc 1 306 14 is_stmt 0 view .LVU500
 1593 0040 069C     		ldr	r4, [sp, #24]
 1594 0042 3019     		adds	r0, r6, r4
 1595 0044 335D     		ldrb	r3, [r6, r4]	@ zero_extendqisi2
 306:lvgl/src/misc/lv_txt.c ****         uint32_t word_w = 0;
 1596              		.loc 1 306 26 view .LVU501
 1597 0046 53B3     		cbz	r3, .L135
 306:lvgl/src/misc/lv_txt.c ****         uint32_t word_w = 0;
 1598              		.loc 1 306 26 discriminator 1 view .LVU502
 1599 0048 002D     		cmp	r5, #0
 1600 004a 28DD     		ble	.L135
 1601              	.LBB26:
 307:lvgl/src/misc/lv_txt.c ****         uint32_t advance = lv_txt_get_next_word(&txt[i], font, letter_space, max_width, flag, &word
 1602              		.loc 1 307 9 is_stmt 1 view .LVU503
 307:lvgl/src/misc/lv_txt.c ****         uint32_t advance = lv_txt_get_next_word(&txt[i], font, letter_space, max_width, flag, &word
 1603              		.loc 1 307 18 is_stmt 0 view .LVU504
 1604 004c 0023     		movs	r3, #0
 1605 004e 0593     		str	r3, [sp, #20]
 308:lvgl/src/misc/lv_txt.c ****         max_width -= word_w;
 1606              		.loc 1 308 9 is_stmt 1 view .LVU505
 308:lvgl/src/misc/lv_txt.c ****         max_width -= word_w;
 1607              		.loc 1 308 28 is_stmt 0 view .LVU506
 1608 0050 B4FA84F4 		clz	r4, r4
ARM GAS  C:\usertemp\ccUwScgV.s 			page 55


 1609 0054 6409     		lsrs	r4, r4, #5
 1610 0056 0394     		str	r4, [sp, #12]
 1611 0058 0DF11F03 		add	r3, sp, #31
 1612 005c 0293     		str	r3, [sp, #8]
 1613 005e 05AB     		add	r3, sp, #20
 1614 0060 0193     		str	r3, [sp, #4]
 1615 0062 CDF800A0 		str	r10, [sp]
 1616 0066 2B46     		mov	r3, r5
 1617 0068 4A46     		mov	r2, r9
 1618 006a 4146     		mov	r1, r8
 1619 006c FFF7FEFF 		bl	lv_txt_get_next_word
 1620              	.LVL157:
 309:lvgl/src/misc/lv_txt.c ****         line_w += word_w;
 1621              		.loc 1 309 9 is_stmt 1 view .LVU507
 309:lvgl/src/misc/lv_txt.c ****         line_w += word_w;
 1622              		.loc 1 309 19 is_stmt 0 view .LVU508
 1623 0070 BDF81430 		ldrh	r3, [sp, #20]
 1624 0074 ED1A     		subs	r5, r5, r3
 1625              	.LVL158:
 309:lvgl/src/misc/lv_txt.c ****         line_w += word_w;
 1626              		.loc 1 309 19 view .LVU509
 1627 0076 2DB2     		sxth	r5, r5
 1628              	.LVL159:
 310:lvgl/src/misc/lv_txt.c **** 
 1629              		.loc 1 310 9 is_stmt 1 view .LVU510
 310:lvgl/src/misc/lv_txt.c **** 
 1630              		.loc 1 310 16 is_stmt 0 view .LVU511
 1631 0078 3B44     		add	r3, r3, r7
 1632 007a 1FB2     		sxth	r7, r3
 1633              	.LVL160:
 312:lvgl/src/misc/lv_txt.c ****             break;
 1634              		.loc 1 312 9 is_stmt 1 view .LVU512
 312:lvgl/src/misc/lv_txt.c ****             break;
 1635              		.loc 1 312 11 is_stmt 0 view .LVU513
 1636 007c 0346     		mov	r3, r0
 1637 007e 70B1     		cbz	r0, .L135
 316:lvgl/src/misc/lv_txt.c **** 
 1638              		.loc 1 316 9 is_stmt 1 view .LVU514
 316:lvgl/src/misc/lv_txt.c **** 
 1639              		.loc 1 316 11 is_stmt 0 view .LVU515
 1640 0080 069A     		ldr	r2, [sp, #24]
 1641 0082 1344     		add	r3, r3, r2
 1642 0084 0693     		str	r3, [sp, #24]
 318:lvgl/src/misc/lv_txt.c **** 
 1643              		.loc 1 318 9 is_stmt 1 view .LVU516
 318:lvgl/src/misc/lv_txt.c **** 
 1644              		.loc 1 318 15 is_stmt 0 view .LVU517
 1645 0086 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 318:lvgl/src/misc/lv_txt.c **** 
 1646              		.loc 1 318 11 view .LVU518
 1647 0088 0D2A     		cmp	r2, #13
 1648 008a 18BF     		it	ne
 1649 008c 0A2A     		cmpne	r2, #10
 1650 008e 06D0     		beq	.L135
 320:lvgl/src/misc/lv_txt.c ****             i++;  /*Include the following newline in the current line*/
 1651              		.loc 1 320 9 is_stmt 1 view .LVU519
 320:lvgl/src/misc/lv_txt.c ****             i++;  /*Include the following newline in the current line*/
ARM GAS  C:\usertemp\ccUwScgV.s 			page 56


 1652              		.loc 1 320 15 is_stmt 0 view .LVU520
 1653 0090 F25C     		ldrb	r2, [r6, r3]	@ zero_extendqisi2
 320:lvgl/src/misc/lv_txt.c ****             i++;  /*Include the following newline in the current line*/
 1654              		.loc 1 320 11 view .LVU521
 1655 0092 0D2A     		cmp	r2, #13
 1656 0094 18BF     		it	ne
 1657 0096 0A2A     		cmpne	r2, #10
 1658 0098 D2D1     		bne	.L132
 321:lvgl/src/misc/lv_txt.c ****             break;
 1659              		.loc 1 321 13 is_stmt 1 view .LVU522
 321:lvgl/src/misc/lv_txt.c ****             break;
 1660              		.loc 1 321 14 is_stmt 0 view .LVU523
 1661 009a 0133     		adds	r3, r3, #1
 1662 009c 0693     		str	r3, [sp, #24]
 322:lvgl/src/misc/lv_txt.c ****         }
 1663              		.loc 1 322 13 is_stmt 1 view .LVU524
 1664              	.LVL161:
 1665              	.L135:
 322:lvgl/src/misc/lv_txt.c ****         }
 1666              		.loc 1 322 13 is_stmt 0 view .LVU525
 1667              	.LBE26:
 328:lvgl/src/misc/lv_txt.c ****         uint32_t letter = _lv_txt_encoded_next(txt, &i);
 1668              		.loc 1 328 5 is_stmt 1 view .LVU526
 328:lvgl/src/misc/lv_txt.c ****         uint32_t letter = _lv_txt_encoded_next(txt, &i);
 1669              		.loc 1 328 10 is_stmt 0 view .LVU527
 1670 009e 069B     		ldr	r3, [sp, #24]
 328:lvgl/src/misc/lv_txt.c ****         uint32_t letter = _lv_txt_encoded_next(txt, &i);
 1671              		.loc 1 328 7 view .LVU528
 1672 00a0 6BB9     		cbnz	r3, .L137
 1673              	.LBB27:
 329:lvgl/src/misc/lv_txt.c ****         if(used_width != NULL) {
 1674              		.loc 1 329 9 is_stmt 1 view .LVU529
 329:lvgl/src/misc/lv_txt.c ****         if(used_width != NULL) {
 1675              		.loc 1 329 27 is_stmt 0 view .LVU530
 1676 00a2 184B     		ldr	r3, .L146
 1677 00a4 1B68     		ldr	r3, [r3]
 1678 00a6 06A9     		add	r1, sp, #24
 1679 00a8 3046     		mov	r0, r6
 1680 00aa 9847     		blx	r3
 1681              	.LVL162:
 1682 00ac 0146     		mov	r1, r0
 1683              	.LVL163:
 330:lvgl/src/misc/lv_txt.c ****             line_w = lv_font_get_glyph_width(font, letter, '\0');
 1684              		.loc 1 330 9 is_stmt 1 view .LVU531
 330:lvgl/src/misc/lv_txt.c ****             line_w = lv_font_get_glyph_width(font, letter, '\0');
 1685              		.loc 1 330 11 is_stmt 0 view .LVU532
 1686 00ae BBF1000F 		cmp	fp, #0
 1687 00b2 09D0     		beq	.L138
 331:lvgl/src/misc/lv_txt.c ****         }
 1688              		.loc 1 331 13 is_stmt 1 view .LVU533
 331:lvgl/src/misc/lv_txt.c ****         }
 1689              		.loc 1 331 22 is_stmt 0 view .LVU534
 1690 00b4 0022     		movs	r2, #0
 1691 00b6 4046     		mov	r0, r8
 1692              	.LVL164:
 331:lvgl/src/misc/lv_txt.c ****         }
 1693              		.loc 1 331 22 view .LVU535
ARM GAS  C:\usertemp\ccUwScgV.s 			page 57


 1694 00b8 FFF7FEFF 		bl	lv_font_get_glyph_width
 1695              	.LVL165:
 331:lvgl/src/misc/lv_txt.c ****         }
 1696              		.loc 1 331 20 discriminator 1 view .LVU536
 1697 00bc 07B2     		sxth	r7, r0
 1698              	.LVL166:
 1699              	.L137:
 331:lvgl/src/misc/lv_txt.c ****         }
 1700              		.loc 1 331 20 discriminator 1 view .LVU537
 1701              	.LBE27:
 335:lvgl/src/misc/lv_txt.c ****         *used_width = line_w;
 1702              		.loc 1 335 5 is_stmt 1 view .LVU538
 335:lvgl/src/misc/lv_txt.c ****         *used_width = line_w;
 1703              		.loc 1 335 7 is_stmt 0 view .LVU539
 1704 00be BBF1000F 		cmp	fp, #0
 1705 00c2 01D0     		beq	.L138
 336:lvgl/src/misc/lv_txt.c ****     }
 1706              		.loc 1 336 9 is_stmt 1 view .LVU540
 336:lvgl/src/misc/lv_txt.c ****     }
 1707              		.loc 1 336 21 is_stmt 0 view .LVU541
 1708 00c4 ABF80070 		strh	r7, [fp]	@ movhi
 1709              	.L138:
 1710              	.LVL167:
 339:lvgl/src/misc/lv_txt.c **** }
 1711              		.loc 1 339 5 is_stmt 1 view .LVU542
 339:lvgl/src/misc/lv_txt.c **** }
 1712              		.loc 1 339 12 is_stmt 0 view .LVU543
 1713 00c8 0698     		ldr	r0, [sp, #24]
 1714              	.LVL168:
 1715              	.L123:
 340:lvgl/src/misc/lv_txt.c **** 
 1716              		.loc 1 340 1 view .LVU544
 1717 00ca 09B0     		add	sp, sp, #36
 1718              	.LCFI27:
 1719              		.cfi_remember_state
 1720              		.cfi_def_cfa_offset 36
 1721              		@ sp needed
 1722 00cc BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1723              	.LVL169:
 1724              	.L129:
 1725              	.LCFI28:
 1726              		.cfi_restore_state
 1727              	.LBB28:
 296:lvgl/src/misc/lv_txt.c ****         if(txt[i] != '\0') i++;    /*To go beyond `\n`*/
 1728              		.loc 1 296 9 is_stmt 1 view .LVU545
 294:lvgl/src/misc/lv_txt.c ****             /*Just find the new line chars or string ends by incrementing `i`*/
 1729              		.loc 1 294 73 discriminator 4 view .LVU546
 1730 00d0 0130     		adds	r0, r0, #1
 1731              	.LVL170:
 1732              	.L126:
 294:lvgl/src/misc/lv_txt.c ****             /*Just find the new line chars or string ends by incrementing `i`*/
 1733              		.loc 1 294 53 discriminator 1 view .LVU547
 294:lvgl/src/misc/lv_txt.c ****             /*Just find the new line chars or string ends by incrementing `i`*/
 1734              		.loc 1 294 23 is_stmt 0 discriminator 1 view .LVU548
 1735 00d2 335C     		ldrb	r3, [r6, r0]	@ zero_extendqisi2
 294:lvgl/src/misc/lv_txt.c ****             /*Just find the new line chars or string ends by incrementing `i`*/
 1736              		.loc 1 294 53 discriminator 1 view .LVU549
ARM GAS  C:\usertemp\ccUwScgV.s 			page 58


 1737 00d4 0A2B     		cmp	r3, #10
 1738 00d6 18BF     		it	ne
 1739 00d8 0D2B     		cmpne	r3, #13
 1740 00da 01D0     		beq	.L128
 294:lvgl/src/misc/lv_txt.c ****             /*Just find the new line chars or string ends by incrementing `i`*/
 1741              		.loc 1 294 53 discriminator 3 view .LVU550
 1742 00dc 002B     		cmp	r3, #0
 1743 00de F7D1     		bne	.L129
 1744              	.L128:
 297:lvgl/src/misc/lv_txt.c ****         if(used_width) *used_width = -1;
 1745              		.loc 1 297 9 is_stmt 1 view .LVU551
 297:lvgl/src/misc/lv_txt.c ****         if(used_width) *used_width = -1;
 1746              		.loc 1 297 11 is_stmt 0 view .LVU552
 1747 00e0 03B1     		cbz	r3, .L130
 297:lvgl/src/misc/lv_txt.c ****         if(used_width) *used_width = -1;
 1748              		.loc 1 297 28 is_stmt 1 discriminator 1 view .LVU553
 297:lvgl/src/misc/lv_txt.c ****         if(used_width) *used_width = -1;
 1749              		.loc 1 297 29 is_stmt 0 discriminator 1 view .LVU554
 1750 00e2 0130     		adds	r0, r0, #1
 1751              	.LVL171:
 1752              	.L130:
 298:lvgl/src/misc/lv_txt.c ****         return i;
 1753              		.loc 1 298 9 is_stmt 1 view .LVU555
 298:lvgl/src/misc/lv_txt.c ****         return i;
 1754              		.loc 1 298 11 is_stmt 0 view .LVU556
 1755 00e4 BBF1000F 		cmp	fp, #0
 1756 00e8 EFD0     		beq	.L123
 298:lvgl/src/misc/lv_txt.c ****         return i;
 1757              		.loc 1 298 24 is_stmt 1 discriminator 1 view .LVU557
 298:lvgl/src/misc/lv_txt.c ****         return i;
 1758              		.loc 1 298 36 is_stmt 0 discriminator 1 view .LVU558
 1759 00ea 4FF6FF73 		movw	r3, #65535
 1760 00ee ABF80030 		strh	r3, [fp]	@ movhi
 299:lvgl/src/misc/lv_txt.c ****     }
 1761              		.loc 1 299 9 is_stmt 1 view .LVU559
 299:lvgl/src/misc/lv_txt.c ****     }
 1762              		.loc 1 299 16 is_stmt 0 view .LVU560
 1763 00f2 EAE7     		b	.L123
 1764              	.LVL172:
 1765              	.L145:
 294:lvgl/src/misc/lv_txt.c ****             /*Just find the new line chars or string ends by incrementing `i`*/
 1766              		.loc 1 294 15 view .LVU561
 1767 00f4 0020     		movs	r0, #0
 1768              	.LVL173:
 294:lvgl/src/misc/lv_txt.c ****             /*Just find the new line chars or string ends by incrementing `i`*/
 1769              		.loc 1 294 15 view .LVU562
 1770 00f6 ECE7     		b	.L126
 1771              	.LVL174:
 1772              	.L139:
 294:lvgl/src/misc/lv_txt.c ****             /*Just find the new line chars or string ends by incrementing `i`*/
 1773              		.loc 1 294 15 view .LVU563
 1774              	.LBE28:
 284:lvgl/src/misc/lv_txt.c ****     if(txt[0] == '\0') return 0;
 1775              		.loc 1 284 28 discriminator 1 view .LVU564
 1776 00f8 0020     		movs	r0, #0
 1777              	.LVL175:
 284:lvgl/src/misc/lv_txt.c ****     if(txt[0] == '\0') return 0;
ARM GAS  C:\usertemp\ccUwScgV.s 			page 59


 1778              		.loc 1 284 28 discriminator 1 view .LVU565
 1779 00fa E6E7     		b	.L123
 1780              	.LVL176:
 1781              	.L140:
 285:lvgl/src/misc/lv_txt.c ****     if(font == NULL) return 0;
 1782              		.loc 1 285 31 discriminator 1 view .LVU566
 1783 00fc 0020     		movs	r0, #0
 1784              	.LVL177:
 285:lvgl/src/misc/lv_txt.c ****     if(font == NULL) return 0;
 1785              		.loc 1 285 31 discriminator 1 view .LVU567
 1786 00fe E4E7     		b	.L123
 1787              	.LVL178:
 1788              	.L141:
 286:lvgl/src/misc/lv_txt.c **** 
 1789              		.loc 1 286 29 discriminator 1 view .LVU568
 1790 0100 0020     		movs	r0, #0
 1791              	.LVL179:
 286:lvgl/src/misc/lv_txt.c **** 
 1792              		.loc 1 286 29 discriminator 1 view .LVU569
 1793 0102 E2E7     		b	.L123
 1794              	.L147:
 1795              		.align	2
 1796              	.L146:
 1797 0104 00000000 		.word	_lv_txt_encoded_next
 1798              		.cfi_endproc
 1799              	.LFE58:
 1801              		.section	.text._lv_txt_ins,"ax",%progbits
 1802              		.align	1
 1803              		.global	_lv_txt_ins
 1804              		.syntax unified
 1805              		.thumb
 1806              		.thumb_func
 1808              	_lv_txt_ins:
 1809              	.LVL180:
 1810              	.LFB61:
 413:lvgl/src/misc/lv_txt.c ****     if(txt_buf == NULL || ins_txt == NULL) return;
 1811              		.loc 1 413 1 is_stmt 1 view -0
 1812              		.cfi_startproc
 1813              		@ args = 0, pretend = 0, frame = 0
 1814              		@ frame_needed = 0, uses_anonymous_args = 0
 414:lvgl/src/misc/lv_txt.c **** 
 1815              		.loc 1 414 5 view .LVU571
 414:lvgl/src/misc/lv_txt.c **** 
 1816              		.loc 1 414 7 is_stmt 0 view .LVU572
 1817 0000 002A     		cmp	r2, #0
 1818 0002 18BF     		it	ne
 1819 0004 0028     		cmpne	r0, #0
 1820 0006 25D0     		beq	.L155
 413:lvgl/src/misc/lv_txt.c ****     if(txt_buf == NULL || ins_txt == NULL) return;
 1821              		.loc 1 413 1 view .LVU573
 1822 0008 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1823              	.LCFI29:
 1824              		.cfi_def_cfa_offset 24
 1825              		.cfi_offset 4, -24
 1826              		.cfi_offset 5, -20
 1827              		.cfi_offset 6, -16
 1828              		.cfi_offset 7, -12
ARM GAS  C:\usertemp\ccUwScgV.s 			page 60


 1829              		.cfi_offset 8, -8
 1830              		.cfi_offset 14, -4
 1831 000c 8846     		mov	r8, r1
 1832 000e 0646     		mov	r6, r0
 1833 0010 1746     		mov	r7, r2
 416:lvgl/src/misc/lv_txt.c ****     size_t ins_len = strlen(ins_txt);
 1834              		.loc 1 416 5 is_stmt 1 view .LVU574
 416:lvgl/src/misc/lv_txt.c ****     size_t ins_len = strlen(ins_txt);
 1835              		.loc 1 416 22 is_stmt 0 view .LVU575
 1836 0012 FFF7FEFF 		bl	strlen
 1837              	.LVL181:
 416:lvgl/src/misc/lv_txt.c ****     size_t ins_len = strlen(ins_txt);
 1838              		.loc 1 416 22 view .LVU576
 1839 0016 0446     		mov	r4, r0
 1840              	.LVL182:
 417:lvgl/src/misc/lv_txt.c ****     if(ins_len == 0) return;
 1841              		.loc 1 417 5 is_stmt 1 view .LVU577
 417:lvgl/src/misc/lv_txt.c ****     if(ins_len == 0) return;
 1842              		.loc 1 417 22 is_stmt 0 view .LVU578
 1843 0018 3846     		mov	r0, r7
 1844              	.LVL183:
 417:lvgl/src/misc/lv_txt.c ****     if(ins_len == 0) return;
 1845              		.loc 1 417 22 view .LVU579
 1846 001a FFF7FEFF 		bl	strlen
 1847              	.LVL184:
 418:lvgl/src/misc/lv_txt.c **** 
 1848              		.loc 1 418 5 is_stmt 1 view .LVU580
 418:lvgl/src/misc/lv_txt.c **** 
 1849              		.loc 1 418 7 is_stmt 0 view .LVU581
 1850 001e 0546     		mov	r5, r0
 1851 0020 B0B1     		cbz	r0, .L148
 420:lvgl/src/misc/lv_txt.c ****     pos              = _lv_txt_encoded_get_byte_id(txt_buf, pos); /*Convert to byte index instead o
 1852              		.loc 1 420 5 is_stmt 1 view .LVU582
 420:lvgl/src/misc/lv_txt.c ****     pos              = _lv_txt_encoded_get_byte_id(txt_buf, pos); /*Convert to byte index instead o
 1853              		.loc 1 420 12 is_stmt 0 view .LVU583
 1854 0022 0444     		add	r4, r4, r0
 1855              	.LVL185:
 421:lvgl/src/misc/lv_txt.c **** 
 1856              		.loc 1 421 5 is_stmt 1 view .LVU584
 421:lvgl/src/misc/lv_txt.c **** 
 1857              		.loc 1 421 24 is_stmt 0 view .LVU585
 1858 0024 0C4B     		ldr	r3, .L158
 1859 0026 1B68     		ldr	r3, [r3]
 1860 0028 4146     		mov	r1, r8
 1861 002a 3046     		mov	r0, r6
 1862              	.LVL186:
 421:lvgl/src/misc/lv_txt.c **** 
 1863              		.loc 1 421 24 view .LVU586
 1864 002c 9847     		blx	r3
 1865              	.LVL187:
 424:lvgl/src/misc/lv_txt.c ****     for(i = new_len; i >= pos + ins_len; i--) {
 1866              		.loc 1 424 5 is_stmt 1 view .LVU587
 425:lvgl/src/misc/lv_txt.c ****         txt_buf[i] = txt_buf[i - ins_len];
 1867              		.loc 1 425 5 view .LVU588
 425:lvgl/src/misc/lv_txt.c ****         txt_buf[i] = txt_buf[i - ins_len];
 1868              		.loc 1 425 5 is_stmt 0 view .LVU589
 1869 002e 03E0     		b	.L150
ARM GAS  C:\usertemp\ccUwScgV.s 			page 61


 1870              	.LVL188:
 1871              	.L151:
 426:lvgl/src/misc/lv_txt.c ****     }
 1872              		.loc 1 426 9 is_stmt 1 view .LVU590
 426:lvgl/src/misc/lv_txt.c ****     }
 1873              		.loc 1 426 32 is_stmt 0 view .LVU591
 1874 0030 631B     		subs	r3, r4, r5
 426:lvgl/src/misc/lv_txt.c ****     }
 1875              		.loc 1 426 29 view .LVU592
 1876 0032 F35C     		ldrb	r3, [r6, r3]	@ zero_extendqisi2
 426:lvgl/src/misc/lv_txt.c ****     }
 1877              		.loc 1 426 20 view .LVU593
 1878 0034 3355     		strb	r3, [r6, r4]
 425:lvgl/src/misc/lv_txt.c ****         txt_buf[i] = txt_buf[i - ins_len];
 1879              		.loc 1 425 43 is_stmt 1 discriminator 3 view .LVU594
 1880 0036 013C     		subs	r4, r4, #1
 1881              	.LVL189:
 1882              	.L150:
 425:lvgl/src/misc/lv_txt.c ****         txt_buf[i] = txt_buf[i - ins_len];
 1883              		.loc 1 425 24 discriminator 1 view .LVU595
 425:lvgl/src/misc/lv_txt.c ****         txt_buf[i] = txt_buf[i - ins_len];
 1884              		.loc 1 425 31 is_stmt 0 discriminator 1 view .LVU596
 1885 0038 2B18     		adds	r3, r5, r0
 425:lvgl/src/misc/lv_txt.c ****         txt_buf[i] = txt_buf[i - ins_len];
 1886              		.loc 1 425 24 discriminator 1 view .LVU597
 1887 003a A342     		cmp	r3, r4
 1888 003c F8D9     		bls	.L151
 430:lvgl/src/misc/lv_txt.c **** }
 1889              		.loc 1 430 5 is_stmt 1 view .LVU598
 430:lvgl/src/misc/lv_txt.c **** }
 1890              		.loc 1 430 29 is_stmt 0 view .LVU599
 1891 003e 0644     		add	r6, r6, r0
 1892              	.LVL190:
 1893              	.LBB29:
 1894              	.LBI29:
 194:lvgl/src/misc/../draw/../misc/lv_mem.h **** {
 1895              		.loc 2 194 44 is_stmt 1 view .LVU600
 1896              	.LBB30:
 196:lvgl/src/misc/../draw/../misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 1897              		.loc 2 196 5 view .LVU601
 197:lvgl/src/misc/../draw/../misc/lv_mem.h **** 
 1898              		.loc 2 197 5 view .LVU602
 199:lvgl/src/misc/../draw/../misc/lv_mem.h ****         *d8 = *s8;
 1899              		.loc 2 199 5 view .LVU603
 199:lvgl/src/misc/../draw/../misc/lv_mem.h ****         *d8 = *s8;
 1900              		.loc 2 199 10 is_stmt 0 view .LVU604
 1901 0040 04E0     		b	.L152
 1902              	.LVL191:
 1903              	.L153:
 200:lvgl/src/misc/../draw/../misc/lv_mem.h ****         d8++;
 1904              		.loc 2 200 9 is_stmt 1 view .LVU605
 200:lvgl/src/misc/../draw/../misc/lv_mem.h ****         d8++;
 1905              		.loc 2 200 15 is_stmt 0 view .LVU606
 1906 0042 17F8013B 		ldrb	r3, [r7], #1	@ zero_extendqisi2
 1907              	.LVL192:
 200:lvgl/src/misc/../draw/../misc/lv_mem.h ****         d8++;
 1908              		.loc 2 200 13 view .LVU607
ARM GAS  C:\usertemp\ccUwScgV.s 			page 62


 1909 0046 06F8013B 		strb	r3, [r6], #1
 1910              	.LVL193:
 201:lvgl/src/misc/../draw/../misc/lv_mem.h ****         s8++;
 1911              		.loc 2 201 9 is_stmt 1 view .LVU608
 202:lvgl/src/misc/../draw/../misc/lv_mem.h ****         len--;
 1912              		.loc 2 202 9 view .LVU609
 203:lvgl/src/misc/../draw/../misc/lv_mem.h ****     }
 1913              		.loc 2 203 9 view .LVU610
 203:lvgl/src/misc/../draw/../misc/lv_mem.h ****     }
 1914              		.loc 2 203 12 is_stmt 0 view .LVU611
 1915 004a 013D     		subs	r5, r5, #1
 1916              	.LVL194:
 1917              	.L152:
 199:lvgl/src/misc/../draw/../misc/lv_mem.h ****         *d8 = *s8;
 1918              		.loc 2 199 11 is_stmt 1 view .LVU612
 1919 004c 002D     		cmp	r5, #0
 1920 004e F8D1     		bne	.L153
 1921              	.LVL195:
 1922              	.L148:
 199:lvgl/src/misc/../draw/../misc/lv_mem.h ****         *d8 = *s8;
 1923              		.loc 2 199 11 is_stmt 0 view .LVU613
 1924              	.LBE30:
 1925              	.LBE29:
 431:lvgl/src/misc/lv_txt.c **** 
 1926              		.loc 1 431 1 view .LVU614
 1927 0050 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1928              	.LVL196:
 1929              	.L155:
 1930              	.LCFI30:
 1931              		.cfi_def_cfa_offset 0
 1932              		.cfi_restore 4
 1933              		.cfi_restore 5
 1934              		.cfi_restore 6
 1935              		.cfi_restore 7
 1936              		.cfi_restore 8
 1937              		.cfi_restore 14
 431:lvgl/src/misc/lv_txt.c **** 
 1938              		.loc 1 431 1 view .LVU615
 1939 0054 7047     		bx	lr
 1940              	.L159:
 1941 0056 00BF     		.align	2
 1942              	.L158:
 1943 0058 00000000 		.word	_lv_txt_encoded_get_byte_id
 1944              		.cfi_endproc
 1945              	.LFE61:
 1947              		.section	.text._lv_txt_cut,"ax",%progbits
 1948              		.align	1
 1949              		.global	_lv_txt_cut
 1950              		.syntax unified
 1951              		.thumb
 1952              		.thumb_func
 1954              	_lv_txt_cut:
 1955              	.LVL197:
 1956              	.LFB62:
 434:lvgl/src/misc/lv_txt.c ****     if(txt == NULL) return;
 1957              		.loc 1 434 1 is_stmt 1 view -0
 1958              		.cfi_startproc
ARM GAS  C:\usertemp\ccUwScgV.s 			page 63


 1959              		@ args = 0, pretend = 0, frame = 0
 1960              		@ frame_needed = 0, uses_anonymous_args = 0
 435:lvgl/src/misc/lv_txt.c **** 
 1961              		.loc 1 435 5 view .LVU617
 435:lvgl/src/misc/lv_txt.c **** 
 1962              		.loc 1 435 7 is_stmt 0 view .LVU618
 1963 0000 D8B1     		cbz	r0, .L165
 434:lvgl/src/misc/lv_txt.c ****     if(txt == NULL) return;
 1964              		.loc 1 434 1 view .LVU619
 1965 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1966              	.LCFI31:
 1967              		.cfi_def_cfa_offset 24
 1968              		.cfi_offset 4, -24
 1969              		.cfi_offset 5, -20
 1970              		.cfi_offset 6, -16
 1971              		.cfi_offset 7, -12
 1972              		.cfi_offset 8, -8
 1973              		.cfi_offset 14, -4
 1974 0006 0C46     		mov	r4, r1
 1975 0008 9046     		mov	r8, r2
 1976 000a 0546     		mov	r5, r0
 437:lvgl/src/misc/lv_txt.c **** 
 1977              		.loc 1 437 5 is_stmt 1 view .LVU620
 437:lvgl/src/misc/lv_txt.c **** 
 1978              		.loc 1 437 22 is_stmt 0 view .LVU621
 1979 000c FFF7FEFF 		bl	strlen
 1980              	.LVL198:
 437:lvgl/src/misc/lv_txt.c **** 
 1981              		.loc 1 437 22 view .LVU622
 1982 0010 0646     		mov	r6, r0
 1983              	.LVL199:
 439:lvgl/src/misc/lv_txt.c ****     len = _lv_txt_encoded_get_byte_id(&txt[pos], len);
 1984              		.loc 1 439 5 is_stmt 1 view .LVU623
 439:lvgl/src/misc/lv_txt.c ****     len = _lv_txt_encoded_get_byte_id(&txt[pos], len);
 1985              		.loc 1 439 11 is_stmt 0 view .LVU624
 1986 0012 0A4F     		ldr	r7, .L168
 1987 0014 3B68     		ldr	r3, [r7]
 1988 0016 2146     		mov	r1, r4
 1989 0018 2846     		mov	r0, r5
 1990              	.LVL200:
 439:lvgl/src/misc/lv_txt.c ****     len = _lv_txt_encoded_get_byte_id(&txt[pos], len);
 1991              		.loc 1 439 11 view .LVU625
 1992 001a 9847     		blx	r3
 1993              	.LVL201:
 1994 001c 0446     		mov	r4, r0
 1995              	.LVL202:
 440:lvgl/src/misc/lv_txt.c **** 
 1996              		.loc 1 440 5 is_stmt 1 view .LVU626
 440:lvgl/src/misc/lv_txt.c **** 
 1997              		.loc 1 440 11 is_stmt 0 view .LVU627
 1998 001e 3B68     		ldr	r3, [r7]
 1999 0020 4146     		mov	r1, r8
 2000 0022 2818     		adds	r0, r5, r0
 2001              	.LVL203:
 440:lvgl/src/misc/lv_txt.c **** 
 2002              		.loc 1 440 11 view .LVU628
 2003 0024 9847     		blx	r3
ARM GAS  C:\usertemp\ccUwScgV.s 			page 64


 2004              	.LVL204:
 443:lvgl/src/misc/lv_txt.c ****     for(i = pos; i <= old_len - len; i++) {
 2005              		.loc 1 443 5 is_stmt 1 view .LVU629
 444:lvgl/src/misc/lv_txt.c ****         txt[i] = txt[i + len];
 2006              		.loc 1 444 5 view .LVU630
 444:lvgl/src/misc/lv_txt.c ****         txt[i] = txt[i + len];
 2007              		.loc 1 444 5 is_stmt 0 view .LVU631
 2008 0026 03E0     		b	.L162
 2009              	.LVL205:
 2010              	.L163:
 445:lvgl/src/misc/lv_txt.c ****     }
 2011              		.loc 1 445 9 is_stmt 1 view .LVU632
 445:lvgl/src/misc/lv_txt.c ****     }
 2012              		.loc 1 445 24 is_stmt 0 view .LVU633
 2013 0028 2318     		adds	r3, r4, r0
 445:lvgl/src/misc/lv_txt.c ****     }
 2014              		.loc 1 445 21 view .LVU634
 2015 002a EB5C     		ldrb	r3, [r5, r3]	@ zero_extendqisi2
 445:lvgl/src/misc/lv_txt.c ****     }
 2016              		.loc 1 445 16 view .LVU635
 2017 002c 2B55     		strb	r3, [r5, r4]
 444:lvgl/src/misc/lv_txt.c ****         txt[i] = txt[i + len];
 2018              		.loc 1 444 39 is_stmt 1 discriminator 3 view .LVU636
 2019 002e 0134     		adds	r4, r4, #1
 2020              	.LVL206:
 2021              	.L162:
 444:lvgl/src/misc/lv_txt.c ****         txt[i] = txt[i + len];
 2022              		.loc 1 444 20 discriminator 1 view .LVU637
 444:lvgl/src/misc/lv_txt.c ****         txt[i] = txt[i + len];
 2023              		.loc 1 444 31 is_stmt 0 discriminator 1 view .LVU638
 2024 0030 331A     		subs	r3, r6, r0
 444:lvgl/src/misc/lv_txt.c ****         txt[i] = txt[i + len];
 2025              		.loc 1 444 20 discriminator 1 view .LVU639
 2026 0032 A342     		cmp	r3, r4
 2027 0034 F8D2     		bcs	.L163
 447:lvgl/src/misc/lv_txt.c **** 
 2028              		.loc 1 447 1 view .LVU640
 2029 0036 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2030              	.LVL207:
 2031              	.L165:
 2032              	.LCFI32:
 2033              		.cfi_def_cfa_offset 0
 2034              		.cfi_restore 4
 2035              		.cfi_restore 5
 2036              		.cfi_restore 6
 2037              		.cfi_restore 7
 2038              		.cfi_restore 8
 2039              		.cfi_restore 14
 447:lvgl/src/misc/lv_txt.c **** 
 2040              		.loc 1 447 1 view .LVU641
 2041 003a 7047     		bx	lr
 2042              	.L169:
 2043              		.align	2
 2044              	.L168:
 2045 003c 00000000 		.word	_lv_txt_encoded_get_byte_id
 2046              		.cfi_endproc
 2047              	.LFE62:
ARM GAS  C:\usertemp\ccUwScgV.s 			page 65


 2049              		.section	.text._lv_txt_set_text_vfmt,"ax",%progbits
 2050              		.align	1
 2051              		.global	_lv_txt_set_text_vfmt
 2052              		.syntax unified
 2053              		.thumb
 2054              		.thumb_func
 2056              	_lv_txt_set_text_vfmt:
 2057              	.LVL208:
 2058              	.LFB63:
 450:lvgl/src/misc/lv_txt.c ****     /*Allocate space for the new text by using trick from C99 standard section 7.19.6.12*/
 2059              		.loc 1 450 1 is_stmt 1 view -0
 2060              		.cfi_startproc
 2061              		@ args = 0, pretend = 0, frame = 8
 2062              		@ frame_needed = 0, uses_anonymous_args = 0
 450:lvgl/src/misc/lv_txt.c ****     /*Allocate space for the new text by using trick from C99 standard section 7.19.6.12*/
 2063              		.loc 1 450 1 is_stmt 0 view .LVU643
 2064 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2065              	.LCFI33:
 2066              		.cfi_def_cfa_offset 24
 2067              		.cfi_offset 4, -24
 2068              		.cfi_offset 5, -20
 2069              		.cfi_offset 6, -16
 2070              		.cfi_offset 7, -12
 2071              		.cfi_offset 8, -8
 2072              		.cfi_offset 14, -4
 2073 0004 82B0     		sub	sp, sp, #8
 2074              	.LCFI34:
 2075              		.cfi_def_cfa_offset 32
 2076 0006 0546     		mov	r5, r0
 2077 0008 0C46     		mov	r4, r1
 2078              	.LVL209:
 452:lvgl/src/misc/lv_txt.c ****     va_copy(ap_copy, ap);
 2079              		.loc 1 452 5 is_stmt 1 view .LVU644
 453:lvgl/src/misc/lv_txt.c ****     uint32_t len = lv_vsnprintf(NULL, 0, fmt, ap_copy);
 2080              		.loc 1 453 5 view .LVU645
 453:lvgl/src/misc/lv_txt.c ****     uint32_t len = lv_vsnprintf(NULL, 0, fmt, ap_copy);
 2081              		.loc 1 453 5 is_stmt 0 view .LVU646
 2082 000a 0191     		str	r1, [sp, #4]
 454:lvgl/src/misc/lv_txt.c ****     va_end(ap_copy);
 2083              		.loc 1 454 5 is_stmt 1 view .LVU647
 454:lvgl/src/misc/lv_txt.c ****     va_end(ap_copy);
 2084              		.loc 1 454 20 is_stmt 0 view .LVU648
 2085 000c 0B46     		mov	r3, r1
 2086 000e 0246     		mov	r2, r0
 2087 0010 0021     		movs	r1, #0
 2088              	.LVL210:
 454:lvgl/src/misc/lv_txt.c ****     va_end(ap_copy);
 2089              		.loc 1 454 20 view .LVU649
 2090 0012 0846     		mov	r0, r1
 2091              	.LVL211:
 454:lvgl/src/misc/lv_txt.c ****     va_end(ap_copy);
 2092              		.loc 1 454 20 view .LVU650
 2093 0014 FFF7FEFF 		bl	vsnprintf
 2094              	.LVL212:
 454:lvgl/src/misc/lv_txt.c ****     va_end(ap_copy);
 2095              		.loc 1 454 20 view .LVU651
 2096 0018 0646     		mov	r6, r0
ARM GAS  C:\usertemp\ccUwScgV.s 			page 66


 2097              	.LVL213:
 455:lvgl/src/misc/lv_txt.c **** 
 2098              		.loc 1 455 5 is_stmt 1 view .LVU652
 457:lvgl/src/misc/lv_txt.c **** #if LV_USE_ARABIC_PERSIAN_CHARS
 2099              		.loc 1 457 5 view .LVU653
 479:lvgl/src/misc/lv_txt.c ****     LV_ASSERT_MALLOC(text);
 2100              		.loc 1 479 5 view .LVU654
 479:lvgl/src/misc/lv_txt.c ****     LV_ASSERT_MALLOC(text);
 2101              		.loc 1 479 29 is_stmt 0 view .LVU655
 2102 001a 00F10108 		add	r8, r0, #1
 479:lvgl/src/misc/lv_txt.c ****     LV_ASSERT_MALLOC(text);
 2103              		.loc 1 479 12 view .LVU656
 2104 001e 4046     		mov	r0, r8
 2105              	.LVL214:
 479:lvgl/src/misc/lv_txt.c ****     LV_ASSERT_MALLOC(text);
 2106              		.loc 1 479 12 view .LVU657
 2107 0020 FFF7FEFF 		bl	lv_mem_alloc
 2108              	.LVL215:
 480:lvgl/src/misc/lv_txt.c ****     if(text == NULL) {
 2109              		.loc 1 480 5 is_stmt 1 view .LVU658
 480:lvgl/src/misc/lv_txt.c ****     if(text == NULL) {
 2110              		.loc 1 480 5 view .LVU659
 2111 0024 58B1     		cbz	r0, .L172
 2112 0026 0746     		mov	r7, r0
 480:lvgl/src/misc/lv_txt.c ****     if(text == NULL) {
 2113              		.loc 1 480 5 discriminator 2 view .LVU660
 480:lvgl/src/misc/lv_txt.c ****     if(text == NULL) {
 2114              		.loc 1 480 27 discriminator 2 view .LVU661
 481:lvgl/src/misc/lv_txt.c ****         return NULL;
 2115              		.loc 1 481 5 view .LVU662
 484:lvgl/src/misc/lv_txt.c **** 
 2116              		.loc 1 484 5 view .LVU663
 484:lvgl/src/misc/lv_txt.c **** 
 2117              		.loc 1 484 15 is_stmt 0 view .LVU664
 2118 0028 0023     		movs	r3, #0
 2119 002a 8355     		strb	r3, [r0, r6]
 486:lvgl/src/misc/lv_txt.c **** #endif
 2120              		.loc 1 486 5 is_stmt 1 view .LVU665
 2121              	.LVL216:
 486:lvgl/src/misc/lv_txt.c **** #endif
 2122              		.loc 1 486 5 is_stmt 0 view .LVU666
 2123 002c 2346     		mov	r3, r4
 2124 002e 2A46     		mov	r2, r5
 2125 0030 4146     		mov	r1, r8
 2126 0032 FFF7FEFF 		bl	vsnprintf
 2127              	.LVL217:
 489:lvgl/src/misc/lv_txt.c **** }
 2128              		.loc 1 489 5 is_stmt 1 view .LVU667
 490:lvgl/src/misc/lv_txt.c **** 
 2129              		.loc 1 490 1 is_stmt 0 view .LVU668
 2130 0036 3846     		mov	r0, r7
 2131 0038 02B0     		add	sp, sp, #8
 2132              	.LCFI35:
 2133              		.cfi_remember_state
 2134              		.cfi_def_cfa_offset 24
 2135              		@ sp needed
 2136 003a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
ARM GAS  C:\usertemp\ccUwScgV.s 			page 67


 2137              	.LVL218:
 2138              	.L172:
 2139              	.LCFI36:
 2140              		.cfi_restore_state
 480:lvgl/src/misc/lv_txt.c ****     if(text == NULL) {
 2141              		.loc 1 480 5 is_stmt 1 discriminator 1 view .LVU669
 480:lvgl/src/misc/lv_txt.c ****     if(text == NULL) {
 2142              		.loc 1 480 5 discriminator 1 view .LVU670
 480:lvgl/src/misc/lv_txt.c ****     if(text == NULL) {
 2143              		.loc 1 480 5 discriminator 1 view .LVU671
 480:lvgl/src/misc/lv_txt.c ****     if(text == NULL) {
 2144              		.loc 1 480 5 discriminator 1 view .LVU672
 480:lvgl/src/misc/lv_txt.c ****     if(text == NULL) {
 2145              		.loc 1 480 5 discriminator 1 view .LVU673
 2146 003e FEE7     		b	.L172
 2147              		.cfi_endproc
 2148              	.LFE63:
 2150              		.section	.text._lv_txt_encoded_letter_next_2,"ax",%progbits
 2151              		.align	1
 2152              		.global	_lv_txt_encoded_letter_next_2
 2153              		.syntax unified
 2154              		.thumb
 2155              		.thumb_func
 2157              	_lv_txt_encoded_letter_next_2:
 2158              	.LVL219:
 2159              	.LFB64:
 493:lvgl/src/misc/lv_txt.c ****     *letter = _lv_txt_encoded_next(txt, ofs);
 2160              		.loc 1 493 1 view -0
 2161              		.cfi_startproc
 2162              		@ args = 0, pretend = 0, frame = 0
 2163              		@ frame_needed = 0, uses_anonymous_args = 0
 493:lvgl/src/misc/lv_txt.c ****     *letter = _lv_txt_encoded_next(txt, ofs);
 2164              		.loc 1 493 1 is_stmt 0 view .LVU675
 2165 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2166              	.LCFI37:
 2167              		.cfi_def_cfa_offset 24
 2168              		.cfi_offset 3, -24
 2169              		.cfi_offset 4, -20
 2170              		.cfi_offset 5, -16
 2171              		.cfi_offset 6, -12
 2172              		.cfi_offset 7, -8
 2173              		.cfi_offset 14, -4
 2174 0002 0746     		mov	r7, r0
 2175 0004 0E46     		mov	r6, r1
 2176 0006 1546     		mov	r5, r2
 2177 0008 1C46     		mov	r4, r3
 494:lvgl/src/misc/lv_txt.c ****     *letter_next = *letter != '\0' ? _lv_txt_encoded_next(&txt[*ofs], NULL) : 0;
 2178              		.loc 1 494 5 is_stmt 1 view .LVU676
 494:lvgl/src/misc/lv_txt.c ****     *letter_next = *letter != '\0' ? _lv_txt_encoded_next(&txt[*ofs], NULL) : 0;
 2179              		.loc 1 494 15 is_stmt 0 view .LVU677
 2180 000a 074B     		ldr	r3, .L177
 2181              	.LVL220:
 494:lvgl/src/misc/lv_txt.c ****     *letter_next = *letter != '\0' ? _lv_txt_encoded_next(&txt[*ofs], NULL) : 0;
 2182              		.loc 1 494 15 view .LVU678
 2183 000c 1B68     		ldr	r3, [r3]
 2184 000e 2146     		mov	r1, r4
 2185              	.LVL221:
ARM GAS  C:\usertemp\ccUwScgV.s 			page 68


 494:lvgl/src/misc/lv_txt.c ****     *letter_next = *letter != '\0' ? _lv_txt_encoded_next(&txt[*ofs], NULL) : 0;
 2186              		.loc 1 494 15 view .LVU679
 2187 0010 9847     		blx	r3
 2188              	.LVL222:
 494:lvgl/src/misc/lv_txt.c ****     *letter_next = *letter != '\0' ? _lv_txt_encoded_next(&txt[*ofs], NULL) : 0;
 2189              		.loc 1 494 13 discriminator 1 view .LVU680
 2190 0012 3060     		str	r0, [r6]
 495:lvgl/src/misc/lv_txt.c **** }
 2191              		.loc 1 495 5 is_stmt 1 view .LVU681
 495:lvgl/src/misc/lv_txt.c **** }
 2192              		.loc 1 495 77 is_stmt 0 view .LVU682
 2193 0014 28B1     		cbz	r0, .L175
 495:lvgl/src/misc/lv_txt.c **** }
 2194              		.loc 1 495 64 discriminator 1 view .LVU683
 2195 0016 2068     		ldr	r0, [r4]
 495:lvgl/src/misc/lv_txt.c **** }
 2196              		.loc 1 495 38 discriminator 1 view .LVU684
 2197 0018 034B     		ldr	r3, .L177
 2198 001a 1B68     		ldr	r3, [r3]
 2199 001c 0021     		movs	r1, #0
 2200 001e 3844     		add	r0, r0, r7
 2201 0020 9847     		blx	r3
 2202              	.LVL223:
 2203              	.L175:
 495:lvgl/src/misc/lv_txt.c **** }
 2204              		.loc 1 495 18 discriminator 4 view .LVU685
 2205 0022 2860     		str	r0, [r5]
 496:lvgl/src/misc/lv_txt.c **** 
 2206              		.loc 1 496 1 view .LVU686
 2207 0024 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2208              	.LVL224:
 2209              	.L178:
 496:lvgl/src/misc/lv_txt.c **** 
 2210              		.loc 1 496 1 view .LVU687
 2211 0026 00BF     		.align	2
 2212              	.L177:
 2213 0028 00000000 		.word	_lv_txt_encoded_next
 2214              		.cfi_endproc
 2215              	.LFE64:
 2217              		.section	.text.lv_txt_get_width,"ax",%progbits
 2218              		.align	1
 2219              		.global	lv_txt_get_width
 2220              		.syntax unified
 2221              		.thumb
 2222              		.thumb_func
 2224              	lv_txt_get_width:
 2225              	.LVL225:
 2226              	.LFB59:
 344:lvgl/src/misc/lv_txt.c ****     if(txt == NULL) return 0;
 2227              		.loc 1 344 1 is_stmt 1 view -0
 2228              		.cfi_startproc
 2229              		@ args = 4, pretend = 0, frame = 16
 2230              		@ frame_needed = 0, uses_anonymous_args = 0
 344:lvgl/src/misc/lv_txt.c ****     if(txt == NULL) return 0;
 2231              		.loc 1 344 1 is_stmt 0 view .LVU689
 2232 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 2233              	.LCFI38:
ARM GAS  C:\usertemp\ccUwScgV.s 			page 69


 2234              		.cfi_def_cfa_offset 28
 2235              		.cfi_offset 4, -28
 2236              		.cfi_offset 5, -24
 2237              		.cfi_offset 6, -20
 2238              		.cfi_offset 7, -16
 2239              		.cfi_offset 8, -12
 2240              		.cfi_offset 9, -8
 2241              		.cfi_offset 14, -4
 2242 0004 85B0     		sub	sp, sp, #20
 2243              	.LCFI39:
 2244              		.cfi_def_cfa_offset 48
 2245 0006 9DF83080 		ldrb	r8, [sp, #48]	@ zero_extendqisi2
 345:lvgl/src/misc/lv_txt.c ****     if(font == NULL) return 0;
 2246              		.loc 1 345 5 is_stmt 1 view .LVU690
 345:lvgl/src/misc/lv_txt.c ****     if(font == NULL) return 0;
 2247              		.loc 1 345 7 is_stmt 0 view .LVU691
 2248 000a 0028     		cmp	r0, #0
 2249 000c 3BD0     		beq	.L186
 2250 000e 0C46     		mov	r4, r1
 2251 0010 1546     		mov	r5, r2
 2252 0012 1E46     		mov	r6, r3
 2253 0014 0746     		mov	r7, r0
 346:lvgl/src/misc/lv_txt.c ****     if(txt[0] == '\0') return 0;
 2254              		.loc 1 346 5 is_stmt 1 view .LVU692
 346:lvgl/src/misc/lv_txt.c ****     if(txt[0] == '\0') return 0;
 2255              		.loc 1 346 7 is_stmt 0 view .LVU693
 2256 0016 002A     		cmp	r2, #0
 2257 0018 38D0     		beq	.L187
 347:lvgl/src/misc/lv_txt.c **** 
 2258              		.loc 1 347 5 is_stmt 1 view .LVU694
 347:lvgl/src/misc/lv_txt.c **** 
 2259              		.loc 1 347 11 is_stmt 0 view .LVU695
 2260 001a 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 2261              	.LVL226:
 347:lvgl/src/misc/lv_txt.c **** 
 2262              		.loc 1 347 7 view .LVU696
 2263 001c 002B     		cmp	r3, #0
 2264 001e 38D0     		beq	.L188
 349:lvgl/src/misc/lv_txt.c ****     lv_coord_t width             = 0;
 2265              		.loc 1 349 5 is_stmt 1 view .LVU697
 349:lvgl/src/misc/lv_txt.c ****     lv_coord_t width             = 0;
 2266              		.loc 1 349 14 is_stmt 0 view .LVU698
 2267 0020 0023     		movs	r3, #0
 2268 0022 0393     		str	r3, [sp, #12]
 350:lvgl/src/misc/lv_txt.c ****     lv_text_cmd_state_t cmd_state = LV_TEXT_CMD_STATE_WAIT;
 2269              		.loc 1 350 5 is_stmt 1 view .LVU699
 2270              	.LVL227:
 351:lvgl/src/misc/lv_txt.c **** 
 2271              		.loc 1 351 5 view .LVU700
 351:lvgl/src/misc/lv_txt.c **** 
 2272              		.loc 1 351 25 is_stmt 0 view .LVU701
 2273 0024 8DF80B30 		strb	r3, [sp, #11]
 353:lvgl/src/misc/lv_txt.c ****         while(i < length) {
 2274              		.loc 1 353 5 is_stmt 1 view .LVU702
 353:lvgl/src/misc/lv_txt.c ****         while(i < length) {
 2275              		.loc 1 353 7 is_stmt 0 view .LVU703
 2276 0028 11BB     		cbnz	r1, .L189
ARM GAS  C:\usertemp\ccUwScgV.s 			page 70


 350:lvgl/src/misc/lv_txt.c ****     lv_text_cmd_state_t cmd_state = LV_TEXT_CMD_STATE_WAIT;
 2277              		.loc 1 350 16 view .LVU704
 2278 002a 9946     		mov	r9, r3
 2279 002c 33E0     		b	.L180
 2280              	.LVL228:
 2281              	.L182:
 2282              	.LBB31:
 365:lvgl/src/misc/lv_txt.c ****             if(char_width > 0) {
 2283              		.loc 1 365 13 is_stmt 1 view .LVU705
 365:lvgl/src/misc/lv_txt.c ****             if(char_width > 0) {
 2284              		.loc 1 365 37 is_stmt 0 view .LVU706
 2285 002e 019A     		ldr	r2, [sp, #4]
 2286 0030 0099     		ldr	r1, [sp]
 2287 0032 2846     		mov	r0, r5
 2288 0034 FFF7FEFF 		bl	lv_font_get_glyph_width
 2289              	.LVL229:
 365:lvgl/src/misc/lv_txt.c ****             if(char_width > 0) {
 2290              		.loc 1 365 24 discriminator 1 view .LVU707
 2291 0038 03B2     		sxth	r3, r0
 2292              	.LVL230:
 366:lvgl/src/misc/lv_txt.c ****                 width += char_width;
 2293              		.loc 1 366 13 is_stmt 1 view .LVU708
 366:lvgl/src/misc/lv_txt.c ****                 width += char_width;
 2294              		.loc 1 366 15 is_stmt 0 view .LVU709
 2295 003a 002B     		cmp	r3, #0
 2296 003c 04DD     		ble	.L181
 367:lvgl/src/misc/lv_txt.c ****                 width += letter_space;
 2297              		.loc 1 367 17 is_stmt 1 view .LVU710
 367:lvgl/src/misc/lv_txt.c ****                 width += letter_space;
 2298              		.loc 1 367 23 is_stmt 0 view .LVU711
 2299 003e 4844     		add	r0, r0, r9
 2300              	.LVL231:
 368:lvgl/src/misc/lv_txt.c ****             }
 2301              		.loc 1 368 17 is_stmt 1 view .LVU712
 368:lvgl/src/misc/lv_txt.c ****             }
 2302              		.loc 1 368 23 is_stmt 0 view .LVU713
 2303 0040 16FA80F0 		uxtah	r0, r6, r0
 2304              	.LVL232:
 368:lvgl/src/misc/lv_txt.c ****             }
 2305              		.loc 1 368 23 view .LVU714
 2306 0044 0FFA80F9 		sxth	r9, r0
 2307              	.LVL233:
 2308              	.L181:
 368:lvgl/src/misc/lv_txt.c ****             }
 2309              		.loc 1 368 23 view .LVU715
 2310              	.LBE31:
 354:lvgl/src/misc/lv_txt.c ****             uint32_t letter;
 2311              		.loc 1 354 17 is_stmt 1 view .LVU716
 2312 0048 039B     		ldr	r3, [sp, #12]
 2313 004a A342     		cmp	r3, r4
 2314 004c 13D2     		bcs	.L191
 2315              	.LBB32:
 355:lvgl/src/misc/lv_txt.c ****             uint32_t letter_next;
 2316              		.loc 1 355 13 view .LVU717
 356:lvgl/src/misc/lv_txt.c ****             _lv_txt_encoded_letter_next_2(txt, &letter, &letter_next, &i);
 2317              		.loc 1 356 13 view .LVU718
 357:lvgl/src/misc/lv_txt.c **** 
ARM GAS  C:\usertemp\ccUwScgV.s 			page 71


 2318              		.loc 1 357 13 view .LVU719
 2319 004e 03AB     		add	r3, sp, #12
 2320 0050 01AA     		add	r2, sp, #4
 2321 0052 6946     		mov	r1, sp
 2322 0054 3846     		mov	r0, r7
 2323 0056 FFF7FEFF 		bl	_lv_txt_encoded_letter_next_2
 2324              	.LVL234:
 359:lvgl/src/misc/lv_txt.c ****                 if(_lv_txt_is_cmd(&cmd_state, letter) != false) {
 2325              		.loc 1 359 13 view .LVU720
 359:lvgl/src/misc/lv_txt.c ****                 if(_lv_txt_is_cmd(&cmd_state, letter) != false) {
 2326              		.loc 1 359 15 is_stmt 0 view .LVU721
 2327 005a 18F0010F 		tst	r8, #1
 2328 005e E6D0     		beq	.L182
 360:lvgl/src/misc/lv_txt.c ****                     continue;
 2329              		.loc 1 360 17 is_stmt 1 view .LVU722
 360:lvgl/src/misc/lv_txt.c ****                     continue;
 2330              		.loc 1 360 20 is_stmt 0 view .LVU723
 2331 0060 0099     		ldr	r1, [sp]
 2332 0062 0DF10B00 		add	r0, sp, #11
 2333 0066 FFF7FEFF 		bl	_lv_txt_is_cmd
 2334              	.LVL235:
 360:lvgl/src/misc/lv_txt.c ****                     continue;
 2335              		.loc 1 360 19 discriminator 1 view .LVU724
 2336 006a 0028     		cmp	r0, #0
 2337 006c DFD0     		beq	.L182
 2338 006e EBE7     		b	.L181
 2339              	.LVL236:
 2340              	.L189:
 360:lvgl/src/misc/lv_txt.c ****                     continue;
 2341              		.loc 1 360 19 discriminator 1 view .LVU725
 2342              	.LBE32:
 350:lvgl/src/misc/lv_txt.c ****     lv_text_cmd_state_t cmd_state = LV_TEXT_CMD_STATE_WAIT;
 2343              		.loc 1 350 16 view .LVU726
 2344 0070 4FF00009 		mov	r9, #0
 2345 0074 E8E7     		b	.L181
 2346              	.LVL237:
 2347              	.L191:
 372:lvgl/src/misc/lv_txt.c ****             width -= letter_space; /*Trim the last letter space. Important if the text is center
 2348              		.loc 1 372 9 is_stmt 1 view .LVU727
 372:lvgl/src/misc/lv_txt.c ****             width -= letter_space; /*Trim the last letter space. Important if the text is center
 2349              		.loc 1 372 11 is_stmt 0 view .LVU728
 2350 0076 B9F1000F 		cmp	r9, #0
 2351 007a 0CDD     		ble	.L180
 373:lvgl/src/misc/lv_txt.c ****                                       aligned*/
 2352              		.loc 1 373 13 is_stmt 1 view .LVU729
 373:lvgl/src/misc/lv_txt.c ****                                       aligned*/
 2353              		.loc 1 373 19 is_stmt 0 view .LVU730
 2354 007c A9EB0606 		sub	r6, r9, r6
 2355              	.LVL238:
 373:lvgl/src/misc/lv_txt.c ****                                       aligned*/
 2356              		.loc 1 373 19 view .LVU731
 2357 0080 0FFA86F9 		sxth	r9, r6
 2358              	.LVL239:
 373:lvgl/src/misc/lv_txt.c ****                                       aligned*/
 2359              		.loc 1 373 19 view .LVU732
 2360 0084 07E0     		b	.L180
 2361              	.LVL240:
ARM GAS  C:\usertemp\ccUwScgV.s 			page 72


 2362              	.L186:
 345:lvgl/src/misc/lv_txt.c ****     if(font == NULL) return 0;
 2363              		.loc 1 345 28 discriminator 1 view .LVU733
 2364 0086 4FF00009 		mov	r9, #0
 2365 008a 04E0     		b	.L180
 2366              	.L187:
 346:lvgl/src/misc/lv_txt.c ****     if(txt[0] == '\0') return 0;
 2367              		.loc 1 346 29 discriminator 1 view .LVU734
 2368 008c 4FF00009 		mov	r9, #0
 2369 0090 01E0     		b	.L180
 2370              	.LVL241:
 2371              	.L188:
 347:lvgl/src/misc/lv_txt.c **** 
 2372              		.loc 1 347 31 discriminator 1 view .LVU735
 2373 0092 4FF00009 		mov	r9, #0
 2374              	.LVL242:
 2375              	.L180:
 379:lvgl/src/misc/lv_txt.c **** 
 2376              		.loc 1 379 1 view .LVU736
 2377 0096 4846     		mov	r0, r9
 2378 0098 05B0     		add	sp, sp, #20
 2379              	.LCFI40:
 2380              		.cfi_def_cfa_offset 28
 2381              		@ sp needed
 2382 009a BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 379:lvgl/src/misc/lv_txt.c **** 
 2383              		.loc 1 379 1 view .LVU737
 2384              		.cfi_endproc
 2385              	.LFE59:
 2387              		.section	.text.lv_txt_get_size,"ax",%progbits
 2388              		.align	1
 2389              		.global	lv_txt_get_size
 2390              		.syntax unified
 2391              		.thumb
 2392              		.thumb_func
 2394              	lv_txt_get_size:
 2395              	.LVL243:
 2396              	.LFB56:
  93:lvgl/src/misc/lv_txt.c ****     size_res->x = 0;
 2397              		.loc 1 93 1 is_stmt 1 view -0
 2398              		.cfi_startproc
 2399              		@ args = 12, pretend = 0, frame = 16
 2400              		@ frame_needed = 0, uses_anonymous_args = 0
  93:lvgl/src/misc/lv_txt.c ****     size_res->x = 0;
 2401              		.loc 1 93 1 is_stmt 0 view .LVU739
 2402 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2403              	.LCFI41:
 2404              		.cfi_def_cfa_offset 36
 2405              		.cfi_offset 4, -36
 2406              		.cfi_offset 5, -32
 2407              		.cfi_offset 6, -28
 2408              		.cfi_offset 7, -24
 2409              		.cfi_offset 8, -20
 2410              		.cfi_offset 9, -16
 2411              		.cfi_offset 10, -12
 2412              		.cfi_offset 11, -8
 2413              		.cfi_offset 14, -4
ARM GAS  C:\usertemp\ccUwScgV.s 			page 73


 2414 0004 87B0     		sub	sp, sp, #28
 2415              	.LCFI42:
 2416              		.cfi_def_cfa_offset 64
 2417 0006 0446     		mov	r4, r0
 2418 0008 0393     		str	r3, [sp, #12]
 2419 000a BDF940A0 		ldrsh	r10, [sp, #64]
 2420 000e BDF94430 		ldrsh	r3, [sp, #68]
 2421              	.LVL244:
  93:lvgl/src/misc/lv_txt.c ****     size_res->x = 0;
 2422              		.loc 1 93 1 view .LVU740
 2423 0012 9DF84860 		ldrb	r6, [sp, #72]	@ zero_extendqisi2
  94:lvgl/src/misc/lv_txt.c ****     size_res->y = 0;
 2424              		.loc 1 94 5 is_stmt 1 view .LVU741
  94:lvgl/src/misc/lv_txt.c ****     size_res->y = 0;
 2425              		.loc 1 94 17 is_stmt 0 view .LVU742
 2426 0016 0020     		movs	r0, #0
 2427              	.LVL245:
  94:lvgl/src/misc/lv_txt.c ****     size_res->y = 0;
 2428              		.loc 1 94 17 view .LVU743
 2429 0018 2080     		strh	r0, [r4]	@ movhi
  95:lvgl/src/misc/lv_txt.c **** 
 2430              		.loc 1 95 5 is_stmt 1 view .LVU744
  95:lvgl/src/misc/lv_txt.c **** 
 2431              		.loc 1 95 17 is_stmt 0 view .LVU745
 2432 001a 6080     		strh	r0, [r4, #2]	@ movhi
  97:lvgl/src/misc/lv_txt.c ****     if(font == NULL) return;
 2433              		.loc 1 97 5 is_stmt 1 view .LVU746
  97:lvgl/src/misc/lv_txt.c ****     if(font == NULL) return;
 2434              		.loc 1 97 7 is_stmt 0 view .LVU747
 2435 001c 0029     		cmp	r1, #0
 2436 001e 4DD0     		beq	.L192
 2437 0020 9346     		mov	fp, r2
 2438 0022 8846     		mov	r8, r1
  98:lvgl/src/misc/lv_txt.c **** 
 2439              		.loc 1 98 5 is_stmt 1 view .LVU748
  98:lvgl/src/misc/lv_txt.c **** 
 2440              		.loc 1 98 7 is_stmt 0 view .LVU749
 2441 0024 002A     		cmp	r2, #0
 2442 0026 49D0     		beq	.L192
 100:lvgl/src/misc/lv_txt.c **** 
 2443              		.loc 1 100 5 is_stmt 1 view .LVU750
 100:lvgl/src/misc/lv_txt.c **** 
 2444              		.loc 1 100 7 is_stmt 0 view .LVU751
 2445 0028 16F0020F 		tst	r6, #2
 2446 002c 01D0     		beq	.L194
 100:lvgl/src/misc/lv_txt.c **** 
 2447              		.loc 1 100 46 discriminator 1 view .LVU752
 2448 002e 41F6FF73 		movw	r3, #8191
 2449              	.L194:
 2450              	.LVL246:
 102:lvgl/src/misc/lv_txt.c ****     uint32_t new_line_start = 0;
 2451              		.loc 1 102 5 is_stmt 1 view .LVU753
 103:lvgl/src/misc/lv_txt.c ****     uint16_t letter_height = lv_font_get_line_height(font);
 2452              		.loc 1 103 5 view .LVU754
 104:lvgl/src/misc/lv_txt.c **** 
 2453              		.loc 1 104 5 view .LVU755
 2454              	.LBB33:
ARM GAS  C:\usertemp\ccUwScgV.s 			page 74


 2455              	.LBI33:
 2456              		.file 4 "lvgl/src/misc/../font/lv_font.h"
   1:lvgl/src/misc/../font/lv_font.h **** /**
   2:lvgl/src/misc/../font/lv_font.h ****  * @file lv_font.h
   3:lvgl/src/misc/../font/lv_font.h ****  *
   4:lvgl/src/misc/../font/lv_font.h ****  */
   5:lvgl/src/misc/../font/lv_font.h **** 
   6:lvgl/src/misc/../font/lv_font.h **** #ifndef LV_FONT_H
   7:lvgl/src/misc/../font/lv_font.h **** #define LV_FONT_H
   8:lvgl/src/misc/../font/lv_font.h **** 
   9:lvgl/src/misc/../font/lv_font.h **** #ifdef __cplusplus
  10:lvgl/src/misc/../font/lv_font.h **** extern "C" {
  11:lvgl/src/misc/../font/lv_font.h **** #endif
  12:lvgl/src/misc/../font/lv_font.h **** 
  13:lvgl/src/misc/../font/lv_font.h **** /*********************
  14:lvgl/src/misc/../font/lv_font.h ****  *      INCLUDES
  15:lvgl/src/misc/../font/lv_font.h ****  *********************/
  16:lvgl/src/misc/../font/lv_font.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/misc/../font/lv_font.h **** #include <stdint.h>
  18:lvgl/src/misc/../font/lv_font.h **** #include <stddef.h>
  19:lvgl/src/misc/../font/lv_font.h **** #include <stdbool.h>
  20:lvgl/src/misc/../font/lv_font.h **** 
  21:lvgl/src/misc/../font/lv_font.h **** #include "lv_symbol_def.h"
  22:lvgl/src/misc/../font/lv_font.h **** #include "../misc/lv_area.h"
  23:lvgl/src/misc/../font/lv_font.h **** 
  24:lvgl/src/misc/../font/lv_font.h **** /*********************
  25:lvgl/src/misc/../font/lv_font.h ****  *      DEFINES
  26:lvgl/src/misc/../font/lv_font.h ****  *********************/
  27:lvgl/src/misc/../font/lv_font.h **** 
  28:lvgl/src/misc/../font/lv_font.h **** /**********************
  29:lvgl/src/misc/../font/lv_font.h ****  *      TYPEDEFS
  30:lvgl/src/misc/../font/lv_font.h ****  **********************/
  31:lvgl/src/misc/../font/lv_font.h **** 
  32:lvgl/src/misc/../font/lv_font.h **** /*------------------
  33:lvgl/src/misc/../font/lv_font.h ****  * General types
  34:lvgl/src/misc/../font/lv_font.h ****  *-----------------*/
  35:lvgl/src/misc/../font/lv_font.h **** 
  36:lvgl/src/misc/../font/lv_font.h **** struct _lv_font_t;
  37:lvgl/src/misc/../font/lv_font.h **** /** Describes the properties of a glyph.*/
  38:lvgl/src/misc/../font/lv_font.h **** typedef struct {
  39:lvgl/src/misc/../font/lv_font.h ****     const struct _lv_font_t *
  40:lvgl/src/misc/../font/lv_font.h ****         resolved_font; /**< Pointer to a font where the gylph was actually found after handling fal
  41:lvgl/src/misc/../font/lv_font.h ****     uint16_t adv_w; /**< The glyph needs this space. Draw the next glyph after this width.*/
  42:lvgl/src/misc/../font/lv_font.h ****     uint16_t box_w; /**< Width of the glyph's bounding box*/
  43:lvgl/src/misc/../font/lv_font.h ****     uint16_t box_h; /**< Height of the glyph's bounding box*/
  44:lvgl/src/misc/../font/lv_font.h ****     int16_t ofs_x;  /**< x offset of the bounding box*/
  45:lvgl/src/misc/../font/lv_font.h ****     int16_t ofs_y;  /**< y offset of the bounding box*/
  46:lvgl/src/misc/../font/lv_font.h ****     uint8_t bpp: 4;  /**< Bit-per-pixel: 1, 2, 4, 8*/
  47:lvgl/src/misc/../font/lv_font.h ****     uint8_t is_placeholder: 1; /** Glyph is missing. But placeholder will still be displayed */
  48:lvgl/src/misc/../font/lv_font.h **** } lv_font_glyph_dsc_t;
  49:lvgl/src/misc/../font/lv_font.h **** 
  50:lvgl/src/misc/../font/lv_font.h **** /** The bitmaps might be upscaled by 3 to achieve subpixel rendering.*/
  51:lvgl/src/misc/../font/lv_font.h **** enum {
  52:lvgl/src/misc/../font/lv_font.h ****     LV_FONT_SUBPX_NONE,
  53:lvgl/src/misc/../font/lv_font.h ****     LV_FONT_SUBPX_HOR,
  54:lvgl/src/misc/../font/lv_font.h ****     LV_FONT_SUBPX_VER,
  55:lvgl/src/misc/../font/lv_font.h ****     LV_FONT_SUBPX_BOTH,
ARM GAS  C:\usertemp\ccUwScgV.s 			page 75


  56:lvgl/src/misc/../font/lv_font.h **** };
  57:lvgl/src/misc/../font/lv_font.h **** 
  58:lvgl/src/misc/../font/lv_font.h **** typedef uint8_t lv_font_subpx_t;
  59:lvgl/src/misc/../font/lv_font.h **** 
  60:lvgl/src/misc/../font/lv_font.h **** /** Describe the properties of a font*/
  61:lvgl/src/misc/../font/lv_font.h **** typedef struct _lv_font_t {
  62:lvgl/src/misc/../font/lv_font.h ****     /** Get a glyph's descriptor from a font*/
  63:lvgl/src/misc/../font/lv_font.h ****     bool (*get_glyph_dsc)(const struct _lv_font_t *, lv_font_glyph_dsc_t *, uint32_t letter, uint32
  64:lvgl/src/misc/../font/lv_font.h **** 
  65:lvgl/src/misc/../font/lv_font.h ****     /** Get a glyph's bitmap from a font*/
  66:lvgl/src/misc/../font/lv_font.h ****     const uint8_t * (*get_glyph_bitmap)(const struct _lv_font_t *, uint32_t);
  67:lvgl/src/misc/../font/lv_font.h **** 
  68:lvgl/src/misc/../font/lv_font.h ****     /*Pointer to the font in a font pack (must have the same line height)*/
  69:lvgl/src/misc/../font/lv_font.h ****     lv_coord_t line_height;         /**< The real line height where any text fits*/
  70:lvgl/src/misc/../font/lv_font.h ****     lv_coord_t base_line;           /**< Base line measured from the top of the line_height*/
  71:lvgl/src/misc/../font/lv_font.h ****     uint8_t subpx  : 2;             /**< An element of `lv_font_subpx_t`*/
  72:lvgl/src/misc/../font/lv_font.h **** 
  73:lvgl/src/misc/../font/lv_font.h ****     int8_t underline_position;      /**< Distance between the top of the underline and base line (<
  74:lvgl/src/misc/../font/lv_font.h ****     int8_t underline_thickness;     /**< Thickness of the underline*/
  75:lvgl/src/misc/../font/lv_font.h **** 
  76:lvgl/src/misc/../font/lv_font.h ****     const void * dsc;               /**< Store implementation specific or run_time data or caching 
  77:lvgl/src/misc/../font/lv_font.h ****     const struct _lv_font_t * fallback;   /**< Fallback font for missing glyph. Resolved recursivel
  78:lvgl/src/misc/../font/lv_font.h **** #if LV_USE_USER_DATA
  79:lvgl/src/misc/../font/lv_font.h ****     void * user_data;               /**< Custom user data for font.*/
  80:lvgl/src/misc/../font/lv_font.h **** #endif
  81:lvgl/src/misc/../font/lv_font.h **** } lv_font_t;
  82:lvgl/src/misc/../font/lv_font.h **** 
  83:lvgl/src/misc/../font/lv_font.h **** /**********************
  84:lvgl/src/misc/../font/lv_font.h ****  * GLOBAL PROTOTYPES
  85:lvgl/src/misc/../font/lv_font.h ****  **********************/
  86:lvgl/src/misc/../font/lv_font.h **** 
  87:lvgl/src/misc/../font/lv_font.h **** /**
  88:lvgl/src/misc/../font/lv_font.h ****  * Return with the bitmap of a font.
  89:lvgl/src/misc/../font/lv_font.h ****  * @param font_p pointer to a font
  90:lvgl/src/misc/../font/lv_font.h ****  * @param letter an UNICODE character code
  91:lvgl/src/misc/../font/lv_font.h ****  * @return pointer to the bitmap of the letter
  92:lvgl/src/misc/../font/lv_font.h ****  */
  93:lvgl/src/misc/../font/lv_font.h **** const uint8_t * lv_font_get_glyph_bitmap(const lv_font_t * font_p, uint32_t letter);
  94:lvgl/src/misc/../font/lv_font.h **** 
  95:lvgl/src/misc/../font/lv_font.h **** /**
  96:lvgl/src/misc/../font/lv_font.h ****  * Get the descriptor of a glyph
  97:lvgl/src/misc/../font/lv_font.h ****  * @param font_p pointer to font
  98:lvgl/src/misc/../font/lv_font.h ****  * @param dsc_out store the result descriptor here
  99:lvgl/src/misc/../font/lv_font.h ****  * @param letter an UNICODE letter code
 100:lvgl/src/misc/../font/lv_font.h ****  * @param letter_next the next letter after `letter`. Used for kerning
 101:lvgl/src/misc/../font/lv_font.h ****  * @return true: descriptor is successfully loaded into `dsc_out`.
 102:lvgl/src/misc/../font/lv_font.h ****  *         false: the letter was not found, no data is loaded to `dsc_out`
 103:lvgl/src/misc/../font/lv_font.h ****  */
 104:lvgl/src/misc/../font/lv_font.h **** bool lv_font_get_glyph_dsc(const lv_font_t * font_p, lv_font_glyph_dsc_t * dsc_out, uint32_t letter
 105:lvgl/src/misc/../font/lv_font.h ****                            uint32_t letter_next);
 106:lvgl/src/misc/../font/lv_font.h **** 
 107:lvgl/src/misc/../font/lv_font.h **** /**
 108:lvgl/src/misc/../font/lv_font.h ****  * Get the width of a glyph with kerning
 109:lvgl/src/misc/../font/lv_font.h ****  * @param font pointer to a font
 110:lvgl/src/misc/../font/lv_font.h ****  * @param letter an UNICODE letter
 111:lvgl/src/misc/../font/lv_font.h ****  * @param letter_next the next letter after `letter`. Used for kerning
 112:lvgl/src/misc/../font/lv_font.h ****  * @return the width of the glyph
ARM GAS  C:\usertemp\ccUwScgV.s 			page 76


 113:lvgl/src/misc/../font/lv_font.h ****  */
 114:lvgl/src/misc/../font/lv_font.h **** uint16_t lv_font_get_glyph_width(const lv_font_t * font, uint32_t letter, uint32_t letter_next);
 115:lvgl/src/misc/../font/lv_font.h **** 
 116:lvgl/src/misc/../font/lv_font.h **** /**
 117:lvgl/src/misc/../font/lv_font.h ****  * Get the line height of a font. All characters fit into this height
 118:lvgl/src/misc/../font/lv_font.h ****  * @param font_p pointer to a font
 119:lvgl/src/misc/../font/lv_font.h ****  * @return the height of a font
 120:lvgl/src/misc/../font/lv_font.h ****  */
 121:lvgl/src/misc/../font/lv_font.h **** static inline lv_coord_t lv_font_get_line_height(const lv_font_t * font_p)
 2457              		.loc 4 121 26 view .LVU756
 2458              	.LBB34:
 122:lvgl/src/misc/../font/lv_font.h **** {
 123:lvgl/src/misc/../font/lv_font.h ****     return font_p->line_height;
 2459              		.loc 4 123 5 view .LVU757
 2460              		.loc 4 123 18 is_stmt 0 view .LVU758
 2461 0032 BBF90870 		ldrsh	r7, [fp, #8]
 2462              	.LVL247:
 2463              		.loc 4 123 18 view .LVU759
 2464              	.LBE34:
 2465              	.LBE33:
 104:lvgl/src/misc/lv_txt.c **** 
 2466              		.loc 1 104 14 discriminator 1 view .LVU760
 2467 0036 1FFA87F9 		uxth	r9, r7
 2468              	.LVL248:
 107:lvgl/src/misc/lv_txt.c ****         new_line_start += _lv_txt_get_next_line(&text[line_start], font, letter_space, max_width, N
 2469              		.loc 1 107 5 is_stmt 1 view .LVU761
 102:lvgl/src/misc/lv_txt.c ****     uint32_t new_line_start = 0;
 2470              		.loc 1 102 14 is_stmt 0 view .LVU762
 2471 003a 0025     		movs	r5, #0
 2472 003c 0597     		str	r7, [sp, #20]
 2473 003e 0493     		str	r3, [sp, #16]
 2474              	.LVL249:
 2475              	.L195:
 107:lvgl/src/misc/lv_txt.c ****         new_line_start += _lv_txt_get_next_line(&text[line_start], font, letter_space, max_width, N
 2476              		.loc 1 107 28 is_stmt 1 view .LVU763
 107:lvgl/src/misc/lv_txt.c ****         new_line_start += _lv_txt_get_next_line(&text[line_start], font, letter_space, max_width, N
 2477              		.loc 1 107 15 is_stmt 0 view .LVU764
 2478 0040 08EB0507 		add	r7, r8, r5
 2479 0044 18F80530 		ldrb	r3, [r8, r5]	@ zero_extendqisi2
 107:lvgl/src/misc/lv_txt.c ****         new_line_start += _lv_txt_get_next_line(&text[line_start], font, letter_space, max_width, N
 2480              		.loc 1 107 28 view .LVU765
 2481 0048 2BB3     		cbz	r3, .L201
 2482              	.LBB35:
 108:lvgl/src/misc/lv_txt.c **** 
 2483              		.loc 1 108 9 is_stmt 1 view .LVU766
 108:lvgl/src/misc/lv_txt.c **** 
 2484              		.loc 1 108 27 is_stmt 0 view .LVU767
 2485 004a 0196     		str	r6, [sp, #4]
 2486 004c 0023     		movs	r3, #0
 2487 004e 0093     		str	r3, [sp]
 2488 0050 049B     		ldr	r3, [sp, #16]
 2489 0052 039A     		ldr	r2, [sp, #12]
 2490 0054 5946     		mov	r1, fp
 2491 0056 3846     		mov	r0, r7
 2492 0058 FFF7FEFF 		bl	_lv_txt_get_next_line
 2493              	.LVL250:
 2494 005c 0146     		mov	r1, r0
ARM GAS  C:\usertemp\ccUwScgV.s 			page 77


 108:lvgl/src/misc/lv_txt.c **** 
 2495              		.loc 1 108 24 discriminator 1 view .LVU768
 2496 005e 0544     		add	r5, r5, r0
 2497              	.LVL251:
 110:lvgl/src/misc/lv_txt.c ****             LV_LOG_WARN("lv_txt_get_size: integer overflow while calculating text height");
 2498              		.loc 1 110 9 is_stmt 1 view .LVU769
 110:lvgl/src/misc/lv_txt.c ****             LV_LOG_WARN("lv_txt_get_size: integer overflow while calculating text height");
 2499              		.loc 1 110 35 is_stmt 0 view .LVU770
 2500 0060 B4F90230 		ldrsh	r3, [r4, #2]
 110:lvgl/src/misc/lv_txt.c ****             LV_LOG_WARN("lv_txt_get_size: integer overflow while calculating text height");
 2501              		.loc 1 110 39 view .LVU771
 2502 0064 03EB0902 		add	r2, r3, r9
 110:lvgl/src/misc/lv_txt.c ****             LV_LOG_WARN("lv_txt_get_size: integer overflow while calculating text height");
 2503              		.loc 1 110 70 view .LVU772
 2504 0068 5244     		add	r2, r2, r10
 110:lvgl/src/misc/lv_txt.c ****             LV_LOG_WARN("lv_txt_get_size: integer overflow while calculating text height");
 2505              		.loc 1 110 11 view .LVU773
 2506 006a B2F5004F 		cmp	r2, #32768
 2507 006e 25D2     		bcs	.L192
 115:lvgl/src/misc/lv_txt.c ****             size_res->y += line_space;
 2508              		.loc 1 115 13 is_stmt 1 view .LVU774
 115:lvgl/src/misc/lv_txt.c ****             size_res->y += line_space;
 2509              		.loc 1 115 25 is_stmt 0 view .LVU775
 2510 0070 19FA83F3 		uxtah	r3, r9, r3
 2511 0074 9BB2     		uxth	r3, r3
 2512 0076 6380     		strh	r3, [r4, #2]	@ movhi
 116:lvgl/src/misc/lv_txt.c ****         }
 2513              		.loc 1 116 13 is_stmt 1 view .LVU776
 116:lvgl/src/misc/lv_txt.c ****         }
 2514              		.loc 1 116 25 is_stmt 0 view .LVU777
 2515 0078 5344     		add	r3, r3, r10
 2516 007a 6380     		strh	r3, [r4, #2]	@ movhi
 120:lvgl/src/misc/lv_txt.c ****                                                       flag);
 2517              		.loc 1 120 9 is_stmt 1 view .LVU778
 120:lvgl/src/misc/lv_txt.c ****                                                       flag);
 2518              		.loc 1 120 38 is_stmt 0 view .LVU779
 2519 007c 0096     		str	r6, [sp]
 2520 007e 039B     		ldr	r3, [sp, #12]
 2521 0080 5A46     		mov	r2, fp
 2522 0082 3846     		mov	r0, r7
 2523 0084 FFF7FEFF 		bl	lv_txt_get_width
 2524              	.LVL252:
 123:lvgl/src/misc/lv_txt.c ****         line_start  = new_line_start;
 2525              		.loc 1 123 9 is_stmt 1 view .LVU780
 123:lvgl/src/misc/lv_txt.c ****         line_start  = new_line_start;
 2526              		.loc 1 123 23 is_stmt 0 view .LVU781
 2527 0088 B4F90030 		ldrsh	r3, [r4]
 2528 008c 8342     		cmp	r3, r0
 2529 008e B8BF     		it	lt
 2530 0090 0346     		movlt	r3, r0
 123:lvgl/src/misc/lv_txt.c ****         line_start  = new_line_start;
 2531              		.loc 1 123 21 view .LVU782
 2532 0092 2380     		strh	r3, [r4]	@ movhi
 124:lvgl/src/misc/lv_txt.c ****     }
 2533              		.loc 1 124 9 is_stmt 1 view .LVU783
 2534              	.LVL253:
 124:lvgl/src/misc/lv_txt.c ****     }
ARM GAS  C:\usertemp\ccUwScgV.s 			page 78


 2535              		.loc 1 124 9 is_stmt 0 view .LVU784
 2536 0094 D4E7     		b	.L195
 2537              	.LVL254:
 2538              	.L201:
 124:lvgl/src/misc/lv_txt.c ****     }
 2539              		.loc 1 124 9 view .LVU785
 2540              	.LBE35:
 128:lvgl/src/misc/lv_txt.c ****         size_res->y += letter_height + line_space;
 2541              		.loc 1 128 7 view .LVU786
 2542 0096 059F     		ldr	r7, [sp, #20]
 128:lvgl/src/misc/lv_txt.c ****         size_res->y += letter_height + line_space;
 2543              		.loc 1 128 5 is_stmt 1 view .LVU787
 128:lvgl/src/misc/lv_txt.c ****         size_res->y += letter_height + line_space;
 2544              		.loc 1 128 7 is_stmt 0 view .LVU788
 2545 0098 65B1     		cbz	r5, .L197
 128:lvgl/src/misc/lv_txt.c ****         size_res->y += letter_height + line_space;
 2546              		.loc 1 128 34 discriminator 1 view .LVU789
 2547 009a A844     		add	r8, r8, r5
 2548              	.LVL255:
 128:lvgl/src/misc/lv_txt.c ****         size_res->y += letter_height + line_space;
 2549              		.loc 1 128 34 discriminator 1 view .LVU790
 2550 009c 18F8013C 		ldrb	r3, [r8, #-1]	@ zero_extendqisi2
 128:lvgl/src/misc/lv_txt.c ****         size_res->y += letter_height + line_space;
 2551              		.loc 1 128 26 discriminator 1 view .LVU791
 2552 00a0 0D2B     		cmp	r3, #13
 2553 00a2 18BF     		it	ne
 2554 00a4 0A2B     		cmpne	r3, #10
 2555 00a6 05D1     		bne	.L197
 129:lvgl/src/misc/lv_txt.c ****     }
 2556              		.loc 1 129 9 is_stmt 1 view .LVU792
 129:lvgl/src/misc/lv_txt.c ****     }
 2557              		.loc 1 129 17 is_stmt 0 view .LVU793
 2558 00a8 6288     		ldrh	r2, [r4, #2]
 129:lvgl/src/misc/lv_txt.c ****     }
 2559              		.loc 1 129 38 view .LVU794
 2560 00aa 09EB0A03 		add	r3, r9, r10
 129:lvgl/src/misc/lv_txt.c ****     }
 2561              		.loc 1 129 21 view .LVU795
 2562 00ae 12FA83F3 		uxtah	r3, r2, r3
 2563 00b2 6380     		strh	r3, [r4, #2]	@ movhi
 2564              	.L197:
 133:lvgl/src/misc/lv_txt.c ****         size_res->y = letter_height;
 2565              		.loc 1 133 5 is_stmt 1 view .LVU796
 133:lvgl/src/misc/lv_txt.c ****         size_res->y = letter_height;
 2566              		.loc 1 133 16 is_stmt 0 view .LVU797
 2567 00b4 B4F90230 		ldrsh	r3, [r4, #2]
 133:lvgl/src/misc/lv_txt.c ****         size_res->y = letter_height;
 2568              		.loc 1 133 7 view .LVU798
 2569 00b8 1BB9     		cbnz	r3, .L198
 134:lvgl/src/misc/lv_txt.c ****     else
 2570              		.loc 1 134 9 is_stmt 1 view .LVU799
 134:lvgl/src/misc/lv_txt.c ****     else
 2571              		.loc 1 134 21 is_stmt 0 view .LVU800
 2572 00ba 6780     		strh	r7, [r4, #2]	@ movhi
 2573              	.LVL256:
 2574              	.L192:
 137:lvgl/src/misc/lv_txt.c **** 
ARM GAS  C:\usertemp\ccUwScgV.s 			page 79


 2575              		.loc 1 137 1 view .LVU801
 2576 00bc 07B0     		add	sp, sp, #28
 2577              	.LCFI43:
 2578              		.cfi_remember_state
 2579              		.cfi_def_cfa_offset 36
 2580              		@ sp needed
 2581 00be BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2582              	.LVL257:
 2583              	.L198:
 2584              	.LCFI44:
 2585              		.cfi_restore_state
 136:lvgl/src/misc/lv_txt.c **** }
 2586              		.loc 1 136 9 is_stmt 1 view .LVU802
 136:lvgl/src/misc/lv_txt.c **** }
 2587              		.loc 1 136 17 is_stmt 0 view .LVU803
 2588 00c2 9BB2     		uxth	r3, r3
 136:lvgl/src/misc/lv_txt.c **** }
 2589              		.loc 1 136 21 view .LVU804
 2590 00c4 A3EB0A03 		sub	r3, r3, r10
 2591 00c8 6380     		strh	r3, [r4, #2]	@ movhi
 2592 00ca F7E7     		b	.L192
 2593              		.cfi_endproc
 2594              	.LFE56:
 2596              		.global	_lv_txt_get_encoded_length
 2597              		.section	.data._lv_txt_get_encoded_length,"aw"
 2598              		.align	2
 2601              	_lv_txt_get_encoded_length:
 2602 0000 00000000 		.word	lv_txt_utf8_get_length
 2603              		.global	_lv_txt_encoded_get_char_id
 2604              		.section	.data._lv_txt_encoded_get_char_id,"aw"
 2605              		.align	2
 2608              	_lv_txt_encoded_get_char_id:
 2609 0000 00000000 		.word	lv_txt_utf8_get_char_id
 2610              		.global	_lv_txt_encoded_get_byte_id
 2611              		.section	.data._lv_txt_encoded_get_byte_id,"aw"
 2612              		.align	2
 2615              	_lv_txt_encoded_get_byte_id:
 2616 0000 00000000 		.word	lv_txt_utf8_get_byte_id
 2617              		.global	_lv_txt_encoded_prev
 2618              		.section	.data._lv_txt_encoded_prev,"aw"
 2619              		.align	2
 2622              	_lv_txt_encoded_prev:
 2623 0000 00000000 		.word	lv_txt_utf8_prev
 2624              		.global	_lv_txt_encoded_next
 2625              		.section	.data._lv_txt_encoded_next,"aw"
 2626              		.align	2
 2629              	_lv_txt_encoded_next:
 2630 0000 00000000 		.word	lv_txt_utf8_next
 2631              		.global	_lv_txt_encoded_conv_wc
 2632              		.section	.data._lv_txt_encoded_conv_wc,"aw"
 2633              		.align	2
 2636              	_lv_txt_encoded_conv_wc:
 2637 0000 00000000 		.word	lv_txt_utf8_conv_wc
 2638              		.global	_lv_txt_unicode_to_encoded
 2639              		.section	.data._lv_txt_unicode_to_encoded,"aw"
 2640              		.align	2
 2643              	_lv_txt_unicode_to_encoded:
ARM GAS  C:\usertemp\ccUwScgV.s 			page 80


 2644 0000 00000000 		.word	lv_txt_unicode_to_utf8
 2645              		.global	_lv_txt_encoded_size
 2646              		.section	.data._lv_txt_encoded_size,"aw"
 2647              		.align	2
 2650              	_lv_txt_encoded_size:
 2651 0000 00000000 		.word	lv_txt_utf8_size
 2652              		.text
 2653              	.Letext0:
 2654              		.file 5 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/lib/gcc/arm-none
 2655              		.file 6 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 2656              		.file 7 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 2657              		.file 8 "lvgl/src/misc/lv_area.h"
 2658              		.file 9 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/lib/gcc/arm-none
 2659              		.file 10 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/i
 2660              		.file 11 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/i
 2661              		.file 12 "<built-in>"
ARM GAS  C:\usertemp\ccUwScgV.s 			page 81


DEFINED SYMBOLS
                            *ABS*:00000000 lv_txt.c
C:\usertemp\ccUwScgV.s:20     .text.lv_txt_utf8_size:00000000 $t
C:\usertemp\ccUwScgV.s:25     .text.lv_txt_utf8_size:00000000 lv_txt_utf8_size
C:\usertemp\ccUwScgV.s:92     .text.lv_txt_unicode_to_utf8:00000000 $t
C:\usertemp\ccUwScgV.s:97     .text.lv_txt_unicode_to_utf8:00000000 lv_txt_unicode_to_utf8
C:\usertemp\ccUwScgV.s:236    .text.lv_txt_utf8_conv_wc:00000000 $t
C:\usertemp\ccUwScgV.s:241    .text.lv_txt_utf8_conv_wc:00000000 lv_txt_utf8_conv_wc
C:\usertemp\ccUwScgV.s:369    .text.lv_txt_utf8_next:00000000 $t
C:\usertemp\ccUwScgV.s:374    .text.lv_txt_utf8_next:00000000 lv_txt_utf8_next
C:\usertemp\ccUwScgV.s:635    .text.lv_txt_utf8_prev:00000000 $t
C:\usertemp\ccUwScgV.s:640    .text.lv_txt_utf8_prev:00000000 lv_txt_utf8_prev
C:\usertemp\ccUwScgV.s:751    .text.lv_txt_utf8_prev:00000050 $d
C:\usertemp\ccUwScgV.s:2650   .data._lv_txt_encoded_size:00000000 _lv_txt_encoded_size
C:\usertemp\ccUwScgV.s:2629   .data._lv_txt_encoded_next:00000000 _lv_txt_encoded_next
C:\usertemp\ccUwScgV.s:757    .text.lv_txt_utf8_get_byte_id:00000000 $t
C:\usertemp\ccUwScgV.s:762    .text.lv_txt_utf8_get_byte_id:00000000 lv_txt_utf8_get_byte_id
C:\usertemp\ccUwScgV.s:838    .text.lv_txt_utf8_get_byte_id:00000030 $d
C:\usertemp\ccUwScgV.s:843    .text.lv_txt_utf8_get_char_id:00000000 $t
C:\usertemp\ccUwScgV.s:848    .text.lv_txt_utf8_get_char_id:00000000 lv_txt_utf8_get_char_id
C:\usertemp\ccUwScgV.s:908    .text.lv_txt_utf8_get_char_id:00000028 $d
C:\usertemp\ccUwScgV.s:913    .text.lv_txt_utf8_get_length:00000000 $t
C:\usertemp\ccUwScgV.s:918    .text.lv_txt_utf8_get_length:00000000 lv_txt_utf8_get_length
C:\usertemp\ccUwScgV.s:979    .text.lv_txt_utf8_get_length:00000028 $d
C:\usertemp\ccUwScgV.s:984    .text._lv_txt_is_cmd:00000000 $t
C:\usertemp\ccUwScgV.s:990    .text._lv_txt_is_cmd:00000000 _lv_txt_is_cmd
C:\usertemp\ccUwScgV.s:1101   .rodata.lv_txt_get_next_word.str1.4:00000000 $d
C:\usertemp\ccUwScgV.s:1105   .text.lv_txt_get_next_word:00000000 $t
C:\usertemp\ccUwScgV.s:1110   .text.lv_txt_get_next_word:00000000 lv_txt_get_next_word
C:\usertemp\ccUwScgV.s:1508   .text.lv_txt_get_next_word:0000016c $d
C:\usertemp\ccUwScgV.s:1514   .text._lv_txt_get_next_line:00000000 $t
C:\usertemp\ccUwScgV.s:1520   .text._lv_txt_get_next_line:00000000 _lv_txt_get_next_line
C:\usertemp\ccUwScgV.s:1797   .text._lv_txt_get_next_line:00000104 $d
C:\usertemp\ccUwScgV.s:1802   .text._lv_txt_ins:00000000 $t
C:\usertemp\ccUwScgV.s:1808   .text._lv_txt_ins:00000000 _lv_txt_ins
C:\usertemp\ccUwScgV.s:1943   .text._lv_txt_ins:00000058 $d
C:\usertemp\ccUwScgV.s:2615   .data._lv_txt_encoded_get_byte_id:00000000 _lv_txt_encoded_get_byte_id
C:\usertemp\ccUwScgV.s:1948   .text._lv_txt_cut:00000000 $t
C:\usertemp\ccUwScgV.s:1954   .text._lv_txt_cut:00000000 _lv_txt_cut
C:\usertemp\ccUwScgV.s:2045   .text._lv_txt_cut:0000003c $d
C:\usertemp\ccUwScgV.s:2050   .text._lv_txt_set_text_vfmt:00000000 $t
C:\usertemp\ccUwScgV.s:2056   .text._lv_txt_set_text_vfmt:00000000 _lv_txt_set_text_vfmt
C:\usertemp\ccUwScgV.s:2151   .text._lv_txt_encoded_letter_next_2:00000000 $t
C:\usertemp\ccUwScgV.s:2157   .text._lv_txt_encoded_letter_next_2:00000000 _lv_txt_encoded_letter_next_2
C:\usertemp\ccUwScgV.s:2213   .text._lv_txt_encoded_letter_next_2:00000028 $d
C:\usertemp\ccUwScgV.s:2218   .text.lv_txt_get_width:00000000 $t
C:\usertemp\ccUwScgV.s:2224   .text.lv_txt_get_width:00000000 lv_txt_get_width
C:\usertemp\ccUwScgV.s:2388   .text.lv_txt_get_size:00000000 $t
C:\usertemp\ccUwScgV.s:2394   .text.lv_txt_get_size:00000000 lv_txt_get_size
C:\usertemp\ccUwScgV.s:2601   .data._lv_txt_get_encoded_length:00000000 _lv_txt_get_encoded_length
C:\usertemp\ccUwScgV.s:2598   .data._lv_txt_get_encoded_length:00000000 $d
C:\usertemp\ccUwScgV.s:2608   .data._lv_txt_encoded_get_char_id:00000000 _lv_txt_encoded_get_char_id
C:\usertemp\ccUwScgV.s:2605   .data._lv_txt_encoded_get_char_id:00000000 $d
C:\usertemp\ccUwScgV.s:2612   .data._lv_txt_encoded_get_byte_id:00000000 $d
C:\usertemp\ccUwScgV.s:2622   .data._lv_txt_encoded_prev:00000000 _lv_txt_encoded_prev
C:\usertemp\ccUwScgV.s:2619   .data._lv_txt_encoded_prev:00000000 $d
C:\usertemp\ccUwScgV.s:2626   .data._lv_txt_encoded_next:00000000 $d
ARM GAS  C:\usertemp\ccUwScgV.s 			page 82


C:\usertemp\ccUwScgV.s:2636   .data._lv_txt_encoded_conv_wc:00000000 _lv_txt_encoded_conv_wc
C:\usertemp\ccUwScgV.s:2633   .data._lv_txt_encoded_conv_wc:00000000 $d
C:\usertemp\ccUwScgV.s:2643   .data._lv_txt_unicode_to_encoded:00000000 _lv_txt_unicode_to_encoded
C:\usertemp\ccUwScgV.s:2640   .data._lv_txt_unicode_to_encoded:00000000 $d
C:\usertemp\ccUwScgV.s:2647   .data._lv_txt_encoded_size:00000000 $d

UNDEFINED SYMBOLS
lv_font_get_glyph_width
strlen
vsnprintf
lv_mem_alloc
