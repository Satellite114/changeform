ARM GAS  C:\usertemp\ccx2olIC.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"arm_cmplx_dot_prod_f32.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c"
  19              		.section	.text.arm_cmplx_dot_prod_f32,"ax",%progbits
  20              		.align	1
  21              		.global	arm_cmplx_dot_prod_f32
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	arm_cmplx_dot_prod_f32:
  27              	.LVL0:
  28              	.LFB145:
   1:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** /* ----------------------------------------------------------------------
   2:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Project:      CMSIS DSP Library
   3:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Title:        arm_cmplx_dot_prod_f32.c
   4:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Description:  Floating-point complex dot product
   5:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
   6:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * $Date:        18. March 2019
   7:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * $Revision:    V1.6.0
   8:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
   9:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Target Processor: Cortex-M cores
  10:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * -------------------------------------------------------------------- */
  11:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** /*
  12:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
  14:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
  16:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * not use this file except in compliance with the License.
  18:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * You may obtain a copy of the License at
  19:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
  20:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  *
  22:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * See the License for the specific language governing permissions and
  26:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  * limitations under the License.
  27:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  */
  28:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  29:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #include "arm_math.h"
  30:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
ARM GAS  C:\usertemp\ccx2olIC.s 			page 2


  31:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** /**
  32:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @ingroup groupCmplxMath
  33:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  */
  34:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  35:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** /**
  36:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @defgroup cmplx_dot_prod Complex Dot Product
  37:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  38:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   Computes the dot product of two complex vectors.
  39:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   The vectors are multiplied element-by-element and then summed.
  40:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  41:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   The <code>pSrcA</code> points to the first complex input vector and
  42:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   <code>pSrcB</code> points to the second complex input vector.
  43:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   <code>numSamples</code> specifies the number of complex samples
  44:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   and the data in each array is stored in an interleaved fashion
  45:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   (real, imag, real, imag, ...).
  46:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   Each array has a total of <code>2*numSamples</code> values.
  47:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  48:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   The underlying algorithm is used:
  49:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  50:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   <pre>
  51:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   realResult = 0;
  52:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   imagResult = 0;
  53:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   for (n = 0; n < numSamples; n++) {
  54:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       realResult += pSrcA[(2*n)+0] * pSrcB[(2*n)+0] - pSrcA[(2*n)+1] * pSrcB[(2*n)+1];
  55:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****       imagResult += pSrcA[(2*n)+0] * pSrcB[(2*n)+1] + pSrcA[(2*n)+1] * pSrcB[(2*n)+0];
  56:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   }
  57:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   </pre>
  58:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  59:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   There are separate functions for floating-point, Q15, and Q31 data types.
  60:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  */
  61:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  62:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** /**
  63:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @addtogroup cmplx_dot_prod
  64:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @{
  65:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  */
  66:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  67:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** /**
  68:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @brief         Floating-point complex dot product.
  69:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @param[in]     pSrcA       points to the first input vector
  70:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @param[in]     pSrcB       points to the second input vector
  71:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @param[in]     numSamples  number of samples in each vector
  72:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @param[out]    realResult  real part of the result returned here
  73:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @param[out]    imagResult  imaginary part of the result returned here
  74:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   @return        none
  75:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****  */
  76:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  77:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** void arm_cmplx_dot_prod_f32(
  78:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   const float32_t * pSrcA,
  79:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   const float32_t * pSrcB,
  80:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         uint32_t numSamples,
  81:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         float32_t * realResult,
  82:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         float32_t * imagResult)
  83:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** {
  29              		.loc 1 83 1 view -0
  30              		.cfi_startproc
  31              		@ args = 4, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\usertemp\ccx2olIC.s 			page 3


  33              		.loc 1 83 1 is_stmt 0 view .LVU1
  34 0000 00B5     		push	{lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 14, -4
  84:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         uint32_t blkCnt;                               /* Loop counter */
  38              		.loc 1 84 9 is_stmt 1 view .LVU2
  85:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         float32_t real_sum = 0.0f, imag_sum = 0.0f;    /* Temporary result variables */
  39              		.loc 1 85 9 view .LVU3
  40              	.LVL1:
  86:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         float32_t a0,b0,c0,d0;
  41              		.loc 1 86 9 view .LVU4
  87:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  88:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #if defined(ARM_MATH_NEON)
  89:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     float32x4x2_t vec1,vec2,vec3,vec4;
  90:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     float32x4_t accR,accI;
  91:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     float32x2_t accum = vdup_n_f32(0);
  92:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  93:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     accR = vdupq_n_f32(0.0);
  94:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     accI = vdupq_n_f32(0.0);
  95:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  96:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     /* Loop unrolling: Compute 8 outputs at a time */
  97:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     blkCnt = numSamples >> 3U;
  98:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
  99:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     while (blkCnt > 0U)
 100:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     {
 101:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	/* C = (A[0]+jA[1])*(B[0]+jB[1]) + ...  */
 102:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         /* Calculate dot product and then store the result in a temporary buffer. */
 103:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 104:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	vec1 = vld2q_f32(pSrcA);
 105:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         vec2 = vld2q_f32(pSrcB);
 106:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 107:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	/* Increment pointers */
 108:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         pSrcA += 8;
 109:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         pSrcB += 8;
 110:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 111:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	/* Re{C} = Re{A}*Re{B} - Im{A}*Im{B} */
 112:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accR = vmlaq_f32(accR,vec1.val[0],vec2.val[0]);
 113:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accR = vmlsq_f32(accR,vec1.val[1],vec2.val[1]);
 114:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 115:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	/* Im{C} = Re{A}*Im{B} + Im{A}*Re{B} */
 116:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accI = vmlaq_f32(accI,vec1.val[1],vec2.val[0]);
 117:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accI = vmlaq_f32(accI,vec1.val[0],vec2.val[1]);
 118:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 119:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         vec3 = vld2q_f32(pSrcA);
 120:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         vec4 = vld2q_f32(pSrcB);
 121:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	
 122:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	/* Increment pointers */
 123:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         pSrcA += 8;
 124:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         pSrcB += 8;
 125:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 126:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	/* Re{C} = Re{A}*Re{B} - Im{A}*Im{B} */
 127:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accR = vmlaq_f32(accR,vec3.val[0],vec4.val[0]);
 128:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accR = vmlsq_f32(accR,vec3.val[1],vec4.val[1]);
 129:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 130:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 	/* Im{C} = Re{A}*Im{B} + Im{A}*Re{B} */
 131:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accI = vmlaq_f32(accI,vec3.val[1],vec4.val[0]);
ARM GAS  C:\usertemp\ccx2olIC.s 			page 4


 132:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         accI = vmlaq_f32(accI,vec3.val[0],vec4.val[1]);
 133:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 134:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         /* Decrement the loop counter */
 135:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         blkCnt--;
 136:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     }
 137:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 138:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     accum = vpadd_f32(vget_low_f32(accR), vget_high_f32(accR));
 139:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum += accum[0] + accum[1];
 140:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 141:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     accum = vpadd_f32(vget_low_f32(accI), vget_high_f32(accI));
 142:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += accum[0] + accum[1];
 143:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 144:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     /* Tail */
 145:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     blkCnt = numSamples & 0x7;
 146:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 147:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #else
 148:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #if defined (ARM_MATH_LOOPUNROLL)
 149:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 150:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   /* Loop unrolling: Compute 4 outputs at a time */
 151:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   blkCnt = numSamples >> 2U;
 152:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 153:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   while (blkCnt > 0U)
 154:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   {
 155:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     a0 = *pSrcA++;
 156:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     b0 = *pSrcA++;
 157:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     c0 = *pSrcB++;
 158:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     d0 = *pSrcB++;
 159:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 160:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum += a0 * c0;
 161:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += a0 * d0;
 162:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum -= b0 * d0;
 163:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += b0 * c0;
 164:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 165:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     a0 = *pSrcA++;
 166:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     b0 = *pSrcA++;
 167:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     c0 = *pSrcB++;
 168:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     d0 = *pSrcB++;
 169:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 170:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum += a0 * c0;
 171:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += a0 * d0;
 172:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum -= b0 * d0;
 173:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += b0 * c0;
 174:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 175:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     a0 = *pSrcA++;
 176:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     b0 = *pSrcA++;
 177:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     c0 = *pSrcB++;
 178:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     d0 = *pSrcB++;
 179:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 180:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum += a0 * c0;
 181:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += a0 * d0;
 182:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum -= b0 * d0;
 183:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += b0 * c0;
 184:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 185:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     a0 = *pSrcA++;
 186:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     b0 = *pSrcA++;
 187:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     c0 = *pSrcB++;
 188:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     d0 = *pSrcB++;
ARM GAS  C:\usertemp\ccx2olIC.s 			page 5


 189:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 190:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum += a0 * c0;
 191:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += a0 * d0;
 192:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum -= b0 * d0;
 193:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += b0 * c0;
 194:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 195:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     /* Decrement loop counter */
 196:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     blkCnt--;
 197:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   }
 198:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 199:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   /* Loop unrolling: Compute remaining outputs */
 200:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   blkCnt = numSamples % 0x4U;
 201:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 202:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #else
 203:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 204:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   /* Initialize blkCnt with number of samples */
 205:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   blkCnt = numSamples;
  42              		.loc 1 205 3 view .LVU5
 206:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 207:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 208:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** #endif /* #if defined(ARM_MATH_NEON) */
 209:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 210:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   while (blkCnt > 0U)
  43              		.loc 1 210 3 view .LVU6
  85:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         float32_t a0,b0,c0,d0;
  44              		.loc 1 85 36 is_stmt 0 view .LVU7
  45 0002 9FED176A 		vldr.32	s12, .L5
  85:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****         float32_t a0,b0,c0,d0;
  46              		.loc 1 85 19 view .LVU8
  47 0006 F0EE465A 		vmov.f32	s11, s12
  48              		.loc 1 210 9 view .LVU9
  49 000a 1FE0     		b	.L2
  50              	.LVL2:
  51              	.L3:
 211:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   {
 212:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     a0 = *pSrcA++;
  52              		.loc 1 212 5 is_stmt 1 view .LVU10
  53              		.loc 1 212 8 is_stmt 0 view .LVU11
  54 000c 00F1080C 		add	ip, r0, #8
  55 0010 D0ED006A 		vldr.32	s13, [r0]
  56              	.LVL3:
 213:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     b0 = *pSrcA++;
  57              		.loc 1 213 5 is_stmt 1 view .LVU12
  58              		.loc 1 213 8 is_stmt 0 view .LVU13
  59 0014 D0ED017A 		vldr.32	s15, [r0, #4]
  60              	.LVL4:
 214:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     c0 = *pSrcB++;
  61              		.loc 1 214 5 is_stmt 1 view .LVU14
  62              		.loc 1 214 8 is_stmt 0 view .LVU15
  63 0018 0846     		mov	r0, r1
  64 001a 8E46     		mov	lr, r1
  65 001c 0830     		adds	r0, r0, #8
  66 001e 91ED005A 		vldr.32	s10, [r1]
  67              	.LVL5:
 215:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     d0 = *pSrcB++;
  68              		.loc 1 215 5 is_stmt 1 view .LVU16
  69              		.loc 1 215 8 is_stmt 0 view .LVU17
ARM GAS  C:\usertemp\ccx2olIC.s 			page 6


  70 0022 91ED017A 		vldr.32	s14, [r1, #4]
  71              	.LVL6:
 216:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 217:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum += a0 * c0;
  72              		.loc 1 217 5 is_stmt 1 view .LVU18
  73              		.loc 1 217 20 is_stmt 0 view .LVU19
  74 0026 66EE854A 		vmul.f32	s9, s13, s10
  75              		.loc 1 217 14 view .LVU20
  76 002a 74EEA55A 		vadd.f32	s11, s9, s11
  77              	.LVL7:
 218:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += a0 * d0;
  78              		.loc 1 218 5 is_stmt 1 view .LVU21
  79              		.loc 1 218 20 is_stmt 0 view .LVU22
  80 002e 66EE876A 		vmul.f32	s13, s13, s14
  81              	.LVL8:
  82              		.loc 1 218 14 view .LVU23
  83 0032 36EE866A 		vadd.f32	s12, s13, s12
  84              	.LVL9:
 219:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     real_sum -= b0 * d0;
  85              		.loc 1 219 5 is_stmt 1 view .LVU24
  86              		.loc 1 219 20 is_stmt 0 view .LVU25
  87 0036 27EE877A 		vmul.f32	s14, s15, s14
  88              	.LVL10:
  89              		.loc 1 219 14 view .LVU26
  90 003a 75EEC75A 		vsub.f32	s11, s11, s14
  91              	.LVL11:
 220:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     imag_sum += b0 * c0;
  92              		.loc 1 220 5 is_stmt 1 view .LVU27
  93              		.loc 1 220 20 is_stmt 0 view .LVU28
  94 003e 67EE857A 		vmul.f32	s15, s15, s10
  95              	.LVL12:
  96              		.loc 1 220 14 view .LVU29
  97 0042 37EE866A 		vadd.f32	s12, s15, s12
  98              	.LVL13:
 221:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 222:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     /* Decrement loop counter */
 223:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     blkCnt--;
  99              		.loc 1 223 5 is_stmt 1 view .LVU30
 100              		.loc 1 223 11 is_stmt 0 view .LVU31
 101 0046 013A     		subs	r2, r2, #1
 102              	.LVL14:
 215:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 103              		.loc 1 215 16 view .LVU32
 104 0048 0146     		mov	r1, r0
 105              	.LVL15:
 213:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****     c0 = *pSrcB++;
 106              		.loc 1 213 16 view .LVU33
 107 004a 6046     		mov	r0, ip
 108              	.LVL16:
 109              	.L2:
 210:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   {
 110              		.loc 1 210 17 is_stmt 1 view .LVU34
 111 004c 002A     		cmp	r2, #0
 112 004e DDD1     		bne	.L3
 224:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   }
 225:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** 
 226:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   /* Store real and imaginary result in destination buffer. */
ARM GAS  C:\usertemp\ccx2olIC.s 			page 7


 227:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   *realResult = real_sum;
 113              		.loc 1 227 3 view .LVU35
 114              		.loc 1 227 15 is_stmt 0 view .LVU36
 115 0050 C3ED005A 		vstr.32	s11, [r3]
 228:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c ****   *imagResult = imag_sum;
 116              		.loc 1 228 3 is_stmt 1 view .LVU37
 117              		.loc 1 228 15 is_stmt 0 view .LVU38
 118 0054 019B     		ldr	r3, [sp, #4]
 119              	.LVL17:
 120              		.loc 1 228 15 view .LVU39
 121 0056 83ED006A 		vstr.32	s12, [r3]
 229:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_dot_prod_f32.c **** }
 122              		.loc 1 229 1 view .LVU40
 123 005a 5DF804FB 		ldr	pc, [sp], #4
 124              	.LVL18:
 125              	.L6:
 126              		.loc 1 229 1 view .LVU41
 127 005e 00BF     		.align	2
 128              	.L5:
 129 0060 00000000 		.word	0
 130              		.cfi_endproc
 131              	.LFE145:
 133              		.text
 134              	.Letext0:
 135              		.file 2 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 136              		.file 3 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 137              		.file 4 "Drivers/CMSIS/DSP/Include/arm_math.h"
ARM GAS  C:\usertemp\ccx2olIC.s 			page 8


DEFINED SYMBOLS
                            *ABS*:00000000 arm_cmplx_dot_prod_f32.c
C:\usertemp\ccx2olIC.s:20     .text.arm_cmplx_dot_prod_f32:00000000 $t
C:\usertemp\ccx2olIC.s:26     .text.arm_cmplx_dot_prod_f32:00000000 arm_cmplx_dot_prod_f32
C:\usertemp\ccx2olIC.s:129    .text.arm_cmplx_dot_prod_f32:00000060 $d

NO UNDEFINED SYMBOLS
