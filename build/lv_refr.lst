ARM GAS  C:\usertemp\ccxmAei4.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_refr.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "lvgl/src/core/lv_refr.c"
  19              		.section	.text.get_max_row,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	get_max_row:
  26              	.LVL0:
  27              	.LFB177:
   1:lvgl/src/core/lv_refr.c **** /**
   2:lvgl/src/core/lv_refr.c ****  * @file lv_refr.c
   3:lvgl/src/core/lv_refr.c ****  *
   4:lvgl/src/core/lv_refr.c ****  */
   5:lvgl/src/core/lv_refr.c **** 
   6:lvgl/src/core/lv_refr.c **** /*********************
   7:lvgl/src/core/lv_refr.c ****  *      INCLUDES
   8:lvgl/src/core/lv_refr.c ****  *********************/
   9:lvgl/src/core/lv_refr.c **** #include <stddef.h>
  10:lvgl/src/core/lv_refr.c **** #include "lv_refr.h"
  11:lvgl/src/core/lv_refr.c **** #include "lv_disp.h"
  12:lvgl/src/core/lv_refr.c **** #include "../hal/lv_hal_tick.h"
  13:lvgl/src/core/lv_refr.c **** #include "../hal/lv_hal_disp.h"
  14:lvgl/src/core/lv_refr.c **** #include "../misc/lv_timer.h"
  15:lvgl/src/core/lv_refr.c **** #include "../misc/lv_mem.h"
  16:lvgl/src/core/lv_refr.c **** #include "../misc/lv_math.h"
  17:lvgl/src/core/lv_refr.c **** #include "../misc/lv_gc.h"
  18:lvgl/src/core/lv_refr.c **** #include "../draw/lv_draw.h"
  19:lvgl/src/core/lv_refr.c **** #include "../font/lv_font_fmt_txt.h"
  20:lvgl/src/core/lv_refr.c **** 
  21:lvgl/src/core/lv_refr.c **** #if LV_USE_PERF_MONITOR || LV_USE_MEM_MONITOR
  22:lvgl/src/core/lv_refr.c ****     #include "../widgets/lv_label.h"
  23:lvgl/src/core/lv_refr.c **** #endif
  24:lvgl/src/core/lv_refr.c **** 
  25:lvgl/src/core/lv_refr.c **** /*********************
  26:lvgl/src/core/lv_refr.c ****  *      DEFINES
  27:lvgl/src/core/lv_refr.c ****  *********************/
  28:lvgl/src/core/lv_refr.c **** 
  29:lvgl/src/core/lv_refr.c **** /**********************
  30:lvgl/src/core/lv_refr.c ****  *      TYPEDEFS
  31:lvgl/src/core/lv_refr.c ****  **********************/
ARM GAS  C:\usertemp\ccxmAei4.s 			page 2


  32:lvgl/src/core/lv_refr.c **** typedef struct {
  33:lvgl/src/core/lv_refr.c ****     uint32_t    perf_last_time;
  34:lvgl/src/core/lv_refr.c ****     uint32_t    elaps_sum;
  35:lvgl/src/core/lv_refr.c ****     uint32_t    frame_cnt;
  36:lvgl/src/core/lv_refr.c ****     uint32_t    fps_sum_cnt;
  37:lvgl/src/core/lv_refr.c ****     uint32_t    fps_sum_all;
  38:lvgl/src/core/lv_refr.c **** #if LV_USE_LABEL
  39:lvgl/src/core/lv_refr.c ****     lv_obj_t  * perf_label;
  40:lvgl/src/core/lv_refr.c **** #endif
  41:lvgl/src/core/lv_refr.c **** } perf_monitor_t;
  42:lvgl/src/core/lv_refr.c **** 
  43:lvgl/src/core/lv_refr.c **** typedef struct {
  44:lvgl/src/core/lv_refr.c ****     uint32_t     mem_last_time;
  45:lvgl/src/core/lv_refr.c **** #if LV_USE_LABEL
  46:lvgl/src/core/lv_refr.c ****     lv_obj_t  *  mem_label;
  47:lvgl/src/core/lv_refr.c **** #endif
  48:lvgl/src/core/lv_refr.c **** } mem_monitor_t;
  49:lvgl/src/core/lv_refr.c **** 
  50:lvgl/src/core/lv_refr.c **** /**********************
  51:lvgl/src/core/lv_refr.c ****  *  STATIC PROTOTYPES
  52:lvgl/src/core/lv_refr.c ****  **********************/
  53:lvgl/src/core/lv_refr.c **** static void lv_refr_join_area(void);
  54:lvgl/src/core/lv_refr.c **** static void lv_refr_areas(void);
  55:lvgl/src/core/lv_refr.c **** static void lv_refr_area(const lv_area_t * area_p);
  56:lvgl/src/core/lv_refr.c **** static void lv_refr_area_part(lv_draw_ctx_t * draw_ctx);
  57:lvgl/src/core/lv_refr.c **** static lv_obj_t * lv_refr_get_top_obj(const lv_area_t * area_p, lv_obj_t * obj);
  58:lvgl/src/core/lv_refr.c **** static void lv_refr_obj_and_children(lv_draw_ctx_t * draw_ctx, lv_obj_t * top_obj);
  59:lvgl/src/core/lv_refr.c **** static uint32_t get_max_row(lv_disp_t * disp, lv_coord_t area_w, lv_coord_t area_h);
  60:lvgl/src/core/lv_refr.c **** static void draw_buf_flush(lv_disp_t * disp);
  61:lvgl/src/core/lv_refr.c **** static void call_flush_cb(lv_disp_drv_t * drv, const lv_area_t * area, lv_color_t * color_p);
  62:lvgl/src/core/lv_refr.c **** 
  63:lvgl/src/core/lv_refr.c **** #if LV_USE_PERF_MONITOR
  64:lvgl/src/core/lv_refr.c ****     static void perf_monitor_init(perf_monitor_t * perf_monitor);
  65:lvgl/src/core/lv_refr.c **** #endif
  66:lvgl/src/core/lv_refr.c **** #if LV_USE_MEM_MONITOR
  67:lvgl/src/core/lv_refr.c ****     static void mem_monitor_init(mem_monitor_t * mem_monitor);
  68:lvgl/src/core/lv_refr.c **** #endif
  69:lvgl/src/core/lv_refr.c **** 
  70:lvgl/src/core/lv_refr.c **** /**********************
  71:lvgl/src/core/lv_refr.c ****  *  STATIC VARIABLES
  72:lvgl/src/core/lv_refr.c ****  **********************/
  73:lvgl/src/core/lv_refr.c **** static uint32_t px_num;
  74:lvgl/src/core/lv_refr.c **** static lv_disp_t * disp_refr; /*Display being refreshed*/
  75:lvgl/src/core/lv_refr.c **** 
  76:lvgl/src/core/lv_refr.c **** #if LV_USE_PERF_MONITOR
  77:lvgl/src/core/lv_refr.c ****     static perf_monitor_t   perf_monitor;
  78:lvgl/src/core/lv_refr.c **** #endif
  79:lvgl/src/core/lv_refr.c **** 
  80:lvgl/src/core/lv_refr.c **** #if LV_USE_MEM_MONITOR
  81:lvgl/src/core/lv_refr.c ****     static mem_monitor_t    mem_monitor;
  82:lvgl/src/core/lv_refr.c **** #endif
  83:lvgl/src/core/lv_refr.c **** 
  84:lvgl/src/core/lv_refr.c **** /**********************
  85:lvgl/src/core/lv_refr.c ****  *      MACROS
  86:lvgl/src/core/lv_refr.c ****  **********************/
  87:lvgl/src/core/lv_refr.c **** #if LV_LOG_TRACE_DISP_REFR
  88:lvgl/src/core/lv_refr.c ****     #define REFR_TRACE(...) LV_LOG_TRACE(__VA_ARGS__)
ARM GAS  C:\usertemp\ccxmAei4.s 			page 3


  89:lvgl/src/core/lv_refr.c **** #else
  90:lvgl/src/core/lv_refr.c ****     #define REFR_TRACE(...)
  91:lvgl/src/core/lv_refr.c **** #endif
  92:lvgl/src/core/lv_refr.c **** 
  93:lvgl/src/core/lv_refr.c **** /**********************
  94:lvgl/src/core/lv_refr.c ****  *   GLOBAL FUNCTIONS
  95:lvgl/src/core/lv_refr.c ****  **********************/
  96:lvgl/src/core/lv_refr.c **** 
  97:lvgl/src/core/lv_refr.c **** /**
  98:lvgl/src/core/lv_refr.c ****  * Initialize the screen refresh subsystem
  99:lvgl/src/core/lv_refr.c ****  */
 100:lvgl/src/core/lv_refr.c **** void _lv_refr_init(void)
 101:lvgl/src/core/lv_refr.c **** {
 102:lvgl/src/core/lv_refr.c **** #if LV_USE_PERF_MONITOR
 103:lvgl/src/core/lv_refr.c ****     perf_monitor_init(&perf_monitor);
 104:lvgl/src/core/lv_refr.c **** #endif
 105:lvgl/src/core/lv_refr.c **** #if LV_USE_MEM_MONITOR
 106:lvgl/src/core/lv_refr.c ****     mem_monitor_init(&mem_monitor);
 107:lvgl/src/core/lv_refr.c **** #endif
 108:lvgl/src/core/lv_refr.c **** }
 109:lvgl/src/core/lv_refr.c **** 
 110:lvgl/src/core/lv_refr.c **** void lv_refr_now(lv_disp_t * disp)
 111:lvgl/src/core/lv_refr.c **** {
 112:lvgl/src/core/lv_refr.c ****     lv_anim_refr_now();
 113:lvgl/src/core/lv_refr.c **** 
 114:lvgl/src/core/lv_refr.c ****     if(disp) {
 115:lvgl/src/core/lv_refr.c ****         if(disp->refr_timer) _lv_disp_refr_timer(disp->refr_timer);
 116:lvgl/src/core/lv_refr.c ****     }
 117:lvgl/src/core/lv_refr.c ****     else {
 118:lvgl/src/core/lv_refr.c ****         lv_disp_t * d;
 119:lvgl/src/core/lv_refr.c ****         d = lv_disp_get_next(NULL);
 120:lvgl/src/core/lv_refr.c ****         while(d) {
 121:lvgl/src/core/lv_refr.c ****             if(d->refr_timer) _lv_disp_refr_timer(d->refr_timer);
 122:lvgl/src/core/lv_refr.c ****             d = lv_disp_get_next(d);
 123:lvgl/src/core/lv_refr.c ****         }
 124:lvgl/src/core/lv_refr.c ****     }
 125:lvgl/src/core/lv_refr.c **** }
 126:lvgl/src/core/lv_refr.c **** 
 127:lvgl/src/core/lv_refr.c **** void lv_refr_obj(lv_draw_ctx_t * draw_ctx, lv_obj_t * obj)
 128:lvgl/src/core/lv_refr.c **** {
 129:lvgl/src/core/lv_refr.c ****     /*Do not refresh hidden objects*/
 130:lvgl/src/core/lv_refr.c ****     if(lv_obj_has_flag(obj, LV_OBJ_FLAG_HIDDEN)) return;
 131:lvgl/src/core/lv_refr.c **** 
 132:lvgl/src/core/lv_refr.c ****     const lv_area_t * clip_area_ori = draw_ctx->clip_area;
 133:lvgl/src/core/lv_refr.c ****     lv_area_t clip_coords_for_obj;
 134:lvgl/src/core/lv_refr.c **** 
 135:lvgl/src/core/lv_refr.c ****     /*Truncate the clip area to `obj size + ext size` area*/
 136:lvgl/src/core/lv_refr.c ****     lv_area_t obj_coords_ext;
 137:lvgl/src/core/lv_refr.c ****     lv_obj_get_coords(obj, &obj_coords_ext);
 138:lvgl/src/core/lv_refr.c ****     lv_coord_t ext_draw_size = _lv_obj_get_ext_draw_size(obj);
 139:lvgl/src/core/lv_refr.c ****     lv_area_increase(&obj_coords_ext, ext_draw_size, ext_draw_size);
 140:lvgl/src/core/lv_refr.c ****     if(!_lv_area_intersect(&clip_coords_for_obj, clip_area_ori, &obj_coords_ext)) return;
 141:lvgl/src/core/lv_refr.c **** 
 142:lvgl/src/core/lv_refr.c ****     draw_ctx->clip_area = &clip_coords_for_obj;
 143:lvgl/src/core/lv_refr.c **** 
 144:lvgl/src/core/lv_refr.c ****     /*Draw the object*/
 145:lvgl/src/core/lv_refr.c ****     lv_event_send(obj, LV_EVENT_DRAW_MAIN_BEGIN, draw_ctx);
ARM GAS  C:\usertemp\ccxmAei4.s 			page 4


 146:lvgl/src/core/lv_refr.c ****     lv_event_send(obj, LV_EVENT_DRAW_MAIN, draw_ctx);
 147:lvgl/src/core/lv_refr.c ****     lv_event_send(obj, LV_EVENT_DRAW_MAIN_END, draw_ctx);
 148:lvgl/src/core/lv_refr.c **** 
 149:lvgl/src/core/lv_refr.c **** #if LV_USE_REFR_DEBUG
 150:lvgl/src/core/lv_refr.c ****     lv_color_t debug_color = lv_color_make(lv_rand(0, 0xFF), lv_rand(0, 0xFF), lv_rand(0, 0xFF));
 151:lvgl/src/core/lv_refr.c ****     lv_draw_rect_dsc_t draw_dsc;
 152:lvgl/src/core/lv_refr.c ****     lv_draw_rect_dsc_init(&draw_dsc);
 153:lvgl/src/core/lv_refr.c ****     draw_dsc.bg_color.full = debug_color.full;
 154:lvgl/src/core/lv_refr.c ****     draw_dsc.bg_opa = LV_OPA_20;
 155:lvgl/src/core/lv_refr.c ****     draw_dsc.border_width = 1;
 156:lvgl/src/core/lv_refr.c ****     draw_dsc.border_opa = LV_OPA_30;
 157:lvgl/src/core/lv_refr.c ****     draw_dsc.border_color = debug_color;
 158:lvgl/src/core/lv_refr.c ****     lv_draw_rect(draw_ctx, &draw_dsc, &obj_coords_ext);
 159:lvgl/src/core/lv_refr.c **** #endif
 160:lvgl/src/core/lv_refr.c **** 
 161:lvgl/src/core/lv_refr.c ****     /*With overflow visible keep the previous clip area to let the children visible out of this obj
 162:lvgl/src/core/lv_refr.c ****      *With not overflow visible limit the clip are to the object's coordinates to clip the children
 163:lvgl/src/core/lv_refr.c ****     bool refr_children = true;
 164:lvgl/src/core/lv_refr.c ****     lv_area_t clip_coords_for_children;
 165:lvgl/src/core/lv_refr.c ****     if(lv_obj_has_flag(obj, LV_OBJ_FLAG_OVERFLOW_VISIBLE)) {
 166:lvgl/src/core/lv_refr.c ****         clip_coords_for_children  = *clip_area_ori;
 167:lvgl/src/core/lv_refr.c ****     }
 168:lvgl/src/core/lv_refr.c ****     else {
 169:lvgl/src/core/lv_refr.c ****         if(!_lv_area_intersect(&clip_coords_for_children, clip_area_ori, &obj->coords)) {
 170:lvgl/src/core/lv_refr.c ****             refr_children = false;
 171:lvgl/src/core/lv_refr.c ****         }
 172:lvgl/src/core/lv_refr.c ****     }
 173:lvgl/src/core/lv_refr.c **** 
 174:lvgl/src/core/lv_refr.c ****     if(refr_children) {
 175:lvgl/src/core/lv_refr.c ****         draw_ctx->clip_area = &clip_coords_for_children;
 176:lvgl/src/core/lv_refr.c ****         uint32_t i;
 177:lvgl/src/core/lv_refr.c ****         uint32_t child_cnt = lv_obj_get_child_cnt(obj);
 178:lvgl/src/core/lv_refr.c ****         for(i = 0; i < child_cnt; i++) {
 179:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 180:lvgl/src/core/lv_refr.c ****             lv_refr_obj(draw_ctx, child);
 181:lvgl/src/core/lv_refr.c ****         }
 182:lvgl/src/core/lv_refr.c ****     }
 183:lvgl/src/core/lv_refr.c **** 
 184:lvgl/src/core/lv_refr.c ****     draw_ctx->clip_area = &clip_coords_for_obj;
 185:lvgl/src/core/lv_refr.c **** 
 186:lvgl/src/core/lv_refr.c ****     /*If all the children are redrawn make 'post draw' draw*/
 187:lvgl/src/core/lv_refr.c ****     lv_event_send(obj, LV_EVENT_DRAW_POST_BEGIN, draw_ctx);
 188:lvgl/src/core/lv_refr.c ****     lv_event_send(obj, LV_EVENT_DRAW_POST, draw_ctx);
 189:lvgl/src/core/lv_refr.c ****     lv_event_send(obj, LV_EVENT_DRAW_POST_END, draw_ctx);
 190:lvgl/src/core/lv_refr.c **** 
 191:lvgl/src/core/lv_refr.c ****     draw_ctx->clip_area = clip_area_ori;
 192:lvgl/src/core/lv_refr.c **** }
 193:lvgl/src/core/lv_refr.c **** 
 194:lvgl/src/core/lv_refr.c **** /**
 195:lvgl/src/core/lv_refr.c ****  * Invalidate an area on display to redraw it
 196:lvgl/src/core/lv_refr.c ****  * @param area_p pointer to area which should be invalidated (NULL: delete the invalidated areas)
 197:lvgl/src/core/lv_refr.c ****  * @param disp pointer to display where the area should be invalidated (NULL can be used if there i
 198:lvgl/src/core/lv_refr.c ****  * only one display)
 199:lvgl/src/core/lv_refr.c ****  */
 200:lvgl/src/core/lv_refr.c **** void _lv_inv_area(lv_disp_t * disp, const lv_area_t * area_p)
 201:lvgl/src/core/lv_refr.c **** {
 202:lvgl/src/core/lv_refr.c ****     if(!disp) disp = lv_disp_get_default();
ARM GAS  C:\usertemp\ccxmAei4.s 			page 5


 203:lvgl/src/core/lv_refr.c ****     if(!disp) return;
 204:lvgl/src/core/lv_refr.c **** 
 205:lvgl/src/core/lv_refr.c ****     /*Clear the invalidate buffer if the parameter is NULL*/
 206:lvgl/src/core/lv_refr.c ****     if(area_p == NULL) {
 207:lvgl/src/core/lv_refr.c ****         disp->inv_p = 0;
 208:lvgl/src/core/lv_refr.c ****         return;
 209:lvgl/src/core/lv_refr.c ****     }
 210:lvgl/src/core/lv_refr.c **** 
 211:lvgl/src/core/lv_refr.c ****     lv_area_t scr_area;
 212:lvgl/src/core/lv_refr.c ****     scr_area.x1 = 0;
 213:lvgl/src/core/lv_refr.c ****     scr_area.y1 = 0;
 214:lvgl/src/core/lv_refr.c ****     scr_area.x2 = lv_disp_get_hor_res(disp) - 1;
 215:lvgl/src/core/lv_refr.c ****     scr_area.y2 = lv_disp_get_ver_res(disp) - 1;
 216:lvgl/src/core/lv_refr.c **** 
 217:lvgl/src/core/lv_refr.c ****     lv_area_t com_area;
 218:lvgl/src/core/lv_refr.c ****     bool suc;
 219:lvgl/src/core/lv_refr.c **** 
 220:lvgl/src/core/lv_refr.c ****     suc = _lv_area_intersect(&com_area, area_p, &scr_area);
 221:lvgl/src/core/lv_refr.c ****     if(suc == false)  return; /*Out of the screen*/
 222:lvgl/src/core/lv_refr.c **** 
 223:lvgl/src/core/lv_refr.c ****     /*If there were at least 1 invalid area in full refresh mode, redraw the whole screen*/
 224:lvgl/src/core/lv_refr.c ****     if(disp->driver->full_refresh) {
 225:lvgl/src/core/lv_refr.c ****         disp->inv_areas[0] = scr_area;
 226:lvgl/src/core/lv_refr.c ****         disp->inv_p = 1;
 227:lvgl/src/core/lv_refr.c ****         if(disp->refr_timer) lv_timer_resume(disp->refr_timer);
 228:lvgl/src/core/lv_refr.c ****         return;
 229:lvgl/src/core/lv_refr.c ****     }
 230:lvgl/src/core/lv_refr.c **** 
 231:lvgl/src/core/lv_refr.c ****     if(disp->driver->rounder_cb) disp->driver->rounder_cb(disp->driver, &com_area);
 232:lvgl/src/core/lv_refr.c **** 
 233:lvgl/src/core/lv_refr.c ****     /*Save only if this area is not in one of the saved areas*/
 234:lvgl/src/core/lv_refr.c ****     uint16_t i;
 235:lvgl/src/core/lv_refr.c ****     for(i = 0; i < disp->inv_p; i++) {
 236:lvgl/src/core/lv_refr.c ****         if(_lv_area_is_in(&com_area, &disp->inv_areas[i], 0) != false) return;
 237:lvgl/src/core/lv_refr.c ****     }
 238:lvgl/src/core/lv_refr.c **** 
 239:lvgl/src/core/lv_refr.c ****     /*Save the area*/
 240:lvgl/src/core/lv_refr.c ****     if(disp->inv_p < LV_INV_BUF_SIZE) {
 241:lvgl/src/core/lv_refr.c ****         lv_area_copy(&disp->inv_areas[disp->inv_p], &com_area);
 242:lvgl/src/core/lv_refr.c ****     }
 243:lvgl/src/core/lv_refr.c ****     else {   /*If no place for the area add the screen*/
 244:lvgl/src/core/lv_refr.c ****         disp->inv_p = 0;
 245:lvgl/src/core/lv_refr.c ****         lv_area_copy(&disp->inv_areas[disp->inv_p], &scr_area);
 246:lvgl/src/core/lv_refr.c ****     }
 247:lvgl/src/core/lv_refr.c ****     disp->inv_p++;
 248:lvgl/src/core/lv_refr.c ****     if(disp->refr_timer) lv_timer_resume(disp->refr_timer);
 249:lvgl/src/core/lv_refr.c **** }
 250:lvgl/src/core/lv_refr.c **** 
 251:lvgl/src/core/lv_refr.c **** /**
 252:lvgl/src/core/lv_refr.c ****  * Get the display which is being refreshed
 253:lvgl/src/core/lv_refr.c ****  * @return the display being refreshed
 254:lvgl/src/core/lv_refr.c ****  */
 255:lvgl/src/core/lv_refr.c **** lv_disp_t * _lv_refr_get_disp_refreshing(void)
 256:lvgl/src/core/lv_refr.c **** {
 257:lvgl/src/core/lv_refr.c ****     return disp_refr;
 258:lvgl/src/core/lv_refr.c **** }
 259:lvgl/src/core/lv_refr.c **** 
ARM GAS  C:\usertemp\ccxmAei4.s 			page 6


 260:lvgl/src/core/lv_refr.c **** /**
 261:lvgl/src/core/lv_refr.c ****  * Set the display which is being refreshed.
 262:lvgl/src/core/lv_refr.c ****  * It shouldn't be used directly by the user.
 263:lvgl/src/core/lv_refr.c ****  * It can be used to trick the drawing functions about there is an active display.
 264:lvgl/src/core/lv_refr.c ****  * @param the display being refreshed
 265:lvgl/src/core/lv_refr.c ****  */
 266:lvgl/src/core/lv_refr.c **** void _lv_refr_set_disp_refreshing(lv_disp_t * disp)
 267:lvgl/src/core/lv_refr.c **** {
 268:lvgl/src/core/lv_refr.c ****     disp_refr = disp;
 269:lvgl/src/core/lv_refr.c **** }
 270:lvgl/src/core/lv_refr.c **** 
 271:lvgl/src/core/lv_refr.c **** /**
 272:lvgl/src/core/lv_refr.c ****  * Called periodically to handle the refreshing
 273:lvgl/src/core/lv_refr.c ****  * @param tmr pointer to the timer itself
 274:lvgl/src/core/lv_refr.c ****  */
 275:lvgl/src/core/lv_refr.c **** void _lv_disp_refr_timer(lv_timer_t * tmr)
 276:lvgl/src/core/lv_refr.c **** {
 277:lvgl/src/core/lv_refr.c ****     REFR_TRACE("begin");
 278:lvgl/src/core/lv_refr.c **** 
 279:lvgl/src/core/lv_refr.c ****     uint32_t start = lv_tick_get();
 280:lvgl/src/core/lv_refr.c ****     volatile uint32_t elaps = 0;
 281:lvgl/src/core/lv_refr.c **** 
 282:lvgl/src/core/lv_refr.c ****     if(tmr) {
 283:lvgl/src/core/lv_refr.c ****         disp_refr = tmr->user_data;
 284:lvgl/src/core/lv_refr.c **** #if LV_USE_PERF_MONITOR == 0 && LV_USE_MEM_MONITOR == 0
 285:lvgl/src/core/lv_refr.c ****         /**
 286:lvgl/src/core/lv_refr.c ****          * Ensure the timer does not run again automatically.
 287:lvgl/src/core/lv_refr.c ****          * This is done before refreshing in case refreshing invalidates something else.
 288:lvgl/src/core/lv_refr.c ****          */
 289:lvgl/src/core/lv_refr.c ****         lv_timer_pause(tmr);
 290:lvgl/src/core/lv_refr.c **** #endif
 291:lvgl/src/core/lv_refr.c ****     }
 292:lvgl/src/core/lv_refr.c ****     else {
 293:lvgl/src/core/lv_refr.c ****         disp_refr = lv_disp_get_default();
 294:lvgl/src/core/lv_refr.c ****     }
 295:lvgl/src/core/lv_refr.c **** 
 296:lvgl/src/core/lv_refr.c ****     /*Refresh the screen's layout if required*/
 297:lvgl/src/core/lv_refr.c ****     lv_obj_update_layout(disp_refr->act_scr);
 298:lvgl/src/core/lv_refr.c ****     if(disp_refr->prev_scr) lv_obj_update_layout(disp_refr->prev_scr);
 299:lvgl/src/core/lv_refr.c **** 
 300:lvgl/src/core/lv_refr.c ****     lv_obj_update_layout(disp_refr->top_layer);
 301:lvgl/src/core/lv_refr.c ****     lv_obj_update_layout(disp_refr->sys_layer);
 302:lvgl/src/core/lv_refr.c **** 
 303:lvgl/src/core/lv_refr.c ****     /*Do nothing if there is no active screen*/
 304:lvgl/src/core/lv_refr.c ****     if(disp_refr->act_scr == NULL) {
 305:lvgl/src/core/lv_refr.c ****         disp_refr->inv_p = 0;
 306:lvgl/src/core/lv_refr.c ****         LV_LOG_WARN("there is no active screen");
 307:lvgl/src/core/lv_refr.c ****         REFR_TRACE("finished");
 308:lvgl/src/core/lv_refr.c ****         return;
 309:lvgl/src/core/lv_refr.c ****     }
 310:lvgl/src/core/lv_refr.c **** 
 311:lvgl/src/core/lv_refr.c ****     lv_refr_join_area();
 312:lvgl/src/core/lv_refr.c **** 
 313:lvgl/src/core/lv_refr.c ****     lv_refr_areas();
 314:lvgl/src/core/lv_refr.c **** 
 315:lvgl/src/core/lv_refr.c ****     /*If refresh happened ...*/
 316:lvgl/src/core/lv_refr.c ****     if(disp_refr->inv_p != 0) {
ARM GAS  C:\usertemp\ccxmAei4.s 			page 7


 317:lvgl/src/core/lv_refr.c ****         if(disp_refr->driver->full_refresh) {
 318:lvgl/src/core/lv_refr.c ****             lv_area_t disp_area;
 319:lvgl/src/core/lv_refr.c ****             lv_area_set(&disp_area, 0, 0, lv_disp_get_hor_res(disp_refr) - 1, lv_disp_get_ver_res(d
 320:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_ctx->buf_area = &disp_area;
 321:lvgl/src/core/lv_refr.c ****             draw_buf_flush(disp_refr);
 322:lvgl/src/core/lv_refr.c ****         }
 323:lvgl/src/core/lv_refr.c **** 
 324:lvgl/src/core/lv_refr.c ****         /*Clean up*/
 325:lvgl/src/core/lv_refr.c ****         lv_memset_00(disp_refr->inv_areas, sizeof(disp_refr->inv_areas));
 326:lvgl/src/core/lv_refr.c ****         lv_memset_00(disp_refr->inv_area_joined, sizeof(disp_refr->inv_area_joined));
 327:lvgl/src/core/lv_refr.c ****         disp_refr->inv_p = 0;
 328:lvgl/src/core/lv_refr.c **** 
 329:lvgl/src/core/lv_refr.c ****         elaps = lv_tick_elaps(start);
 330:lvgl/src/core/lv_refr.c ****         /*Call monitor cb if present*/
 331:lvgl/src/core/lv_refr.c ****         if(disp_refr->driver->monitor_cb) {
 332:lvgl/src/core/lv_refr.c ****             disp_refr->driver->monitor_cb(disp_refr->driver, elaps, px_num);
 333:lvgl/src/core/lv_refr.c ****         }
 334:lvgl/src/core/lv_refr.c ****     }
 335:lvgl/src/core/lv_refr.c **** 
 336:lvgl/src/core/lv_refr.c ****     lv_mem_buf_free_all();
 337:lvgl/src/core/lv_refr.c ****     _lv_font_clean_up_fmt_txt();
 338:lvgl/src/core/lv_refr.c **** 
 339:lvgl/src/core/lv_refr.c **** #if LV_DRAW_COMPLEX
 340:lvgl/src/core/lv_refr.c ****     _lv_draw_mask_cleanup();
 341:lvgl/src/core/lv_refr.c **** #endif
 342:lvgl/src/core/lv_refr.c **** 
 343:lvgl/src/core/lv_refr.c **** #if LV_USE_PERF_MONITOR && LV_USE_LABEL
 344:lvgl/src/core/lv_refr.c ****     lv_obj_t * perf_label = perf_monitor.perf_label;
 345:lvgl/src/core/lv_refr.c ****     if(perf_label == NULL) {
 346:lvgl/src/core/lv_refr.c ****         perf_label = lv_label_create(lv_layer_sys());
 347:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_bg_opa(perf_label, LV_OPA_50, 0);
 348:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_bg_color(perf_label, lv_color_black(), 0);
 349:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_text_color(perf_label, lv_color_white(), 0);
 350:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_pad_top(perf_label, 3, 0);
 351:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_pad_bottom(perf_label, 3, 0);
 352:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_pad_left(perf_label, 3, 0);
 353:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_pad_right(perf_label, 3, 0);
 354:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_text_align(perf_label, LV_TEXT_ALIGN_RIGHT, 0);
 355:lvgl/src/core/lv_refr.c ****         lv_label_set_text(perf_label, "?");
 356:lvgl/src/core/lv_refr.c ****         lv_obj_align(perf_label, LV_USE_PERF_MONITOR_POS, 0, 0);
 357:lvgl/src/core/lv_refr.c ****         perf_monitor.perf_label = perf_label;
 358:lvgl/src/core/lv_refr.c ****     }
 359:lvgl/src/core/lv_refr.c **** 
 360:lvgl/src/core/lv_refr.c ****     if(lv_tick_elaps(perf_monitor.perf_last_time) < 300) {
 361:lvgl/src/core/lv_refr.c ****         if(px_num > 5000) {
 362:lvgl/src/core/lv_refr.c ****             perf_monitor.elaps_sum += elaps;
 363:lvgl/src/core/lv_refr.c ****             perf_monitor.frame_cnt ++;
 364:lvgl/src/core/lv_refr.c ****         }
 365:lvgl/src/core/lv_refr.c ****     }
 366:lvgl/src/core/lv_refr.c ****     else {
 367:lvgl/src/core/lv_refr.c ****         perf_monitor.perf_last_time = lv_tick_get();
 368:lvgl/src/core/lv_refr.c ****         uint32_t fps_limit = 1000 / disp_refr->refr_timer->period;
 369:lvgl/src/core/lv_refr.c ****         uint32_t fps;
 370:lvgl/src/core/lv_refr.c **** 
 371:lvgl/src/core/lv_refr.c ****         if(perf_monitor.elaps_sum == 0) {
 372:lvgl/src/core/lv_refr.c ****             perf_monitor.elaps_sum = 1;
 373:lvgl/src/core/lv_refr.c ****         }
ARM GAS  C:\usertemp\ccxmAei4.s 			page 8


 374:lvgl/src/core/lv_refr.c ****         if(perf_monitor.frame_cnt == 0) {
 375:lvgl/src/core/lv_refr.c ****             fps = fps_limit;
 376:lvgl/src/core/lv_refr.c ****         }
 377:lvgl/src/core/lv_refr.c ****         else {
 378:lvgl/src/core/lv_refr.c ****             fps = (1000 * perf_monitor.frame_cnt) / perf_monitor.elaps_sum;
 379:lvgl/src/core/lv_refr.c ****         }
 380:lvgl/src/core/lv_refr.c ****         perf_monitor.elaps_sum = 0;
 381:lvgl/src/core/lv_refr.c ****         perf_monitor.frame_cnt = 0;
 382:lvgl/src/core/lv_refr.c ****         if(fps > fps_limit) {
 383:lvgl/src/core/lv_refr.c ****             fps = fps_limit;
 384:lvgl/src/core/lv_refr.c ****         }
 385:lvgl/src/core/lv_refr.c **** 
 386:lvgl/src/core/lv_refr.c ****         perf_monitor.fps_sum_all += fps;
 387:lvgl/src/core/lv_refr.c ****         perf_monitor.fps_sum_cnt ++;
 388:lvgl/src/core/lv_refr.c ****         uint32_t cpu = 100 - lv_timer_get_idle();
 389:lvgl/src/core/lv_refr.c ****         lv_label_set_text_fmt(perf_label, "%"LV_PRIu32" FPS\n%"LV_PRIu32"%% CPU", fps, cpu);
 390:lvgl/src/core/lv_refr.c ****     }
 391:lvgl/src/core/lv_refr.c **** #endif
 392:lvgl/src/core/lv_refr.c **** 
 393:lvgl/src/core/lv_refr.c **** #if LV_USE_MEM_MONITOR && LV_MEM_CUSTOM == 0 && LV_USE_LABEL
 394:lvgl/src/core/lv_refr.c ****     lv_obj_t * mem_label = mem_monitor.mem_label;
 395:lvgl/src/core/lv_refr.c ****     if(mem_label == NULL) {
 396:lvgl/src/core/lv_refr.c ****         mem_label = lv_label_create(lv_layer_sys());
 397:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_bg_opa(mem_label, LV_OPA_50, 0);
 398:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_bg_color(mem_label, lv_color_black(), 0);
 399:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_text_color(mem_label, lv_color_white(), 0);
 400:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_pad_top(mem_label, 3, 0);
 401:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_pad_bottom(mem_label, 3, 0);
 402:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_pad_left(mem_label, 3, 0);
 403:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_pad_right(mem_label, 3, 0);
 404:lvgl/src/core/lv_refr.c ****         lv_label_set_text(mem_label, "?");
 405:lvgl/src/core/lv_refr.c ****         lv_obj_align(mem_label, LV_USE_MEM_MONITOR_POS, 0, 0);
 406:lvgl/src/core/lv_refr.c ****         mem_monitor.mem_label = mem_label;
 407:lvgl/src/core/lv_refr.c ****     }
 408:lvgl/src/core/lv_refr.c **** 
 409:lvgl/src/core/lv_refr.c ****     if(lv_tick_elaps(mem_monitor.mem_last_time) > 300) {
 410:lvgl/src/core/lv_refr.c ****         mem_monitor.mem_last_time = lv_tick_get();
 411:lvgl/src/core/lv_refr.c ****         lv_mem_monitor_t mon;
 412:lvgl/src/core/lv_refr.c ****         lv_mem_monitor(&mon);
 413:lvgl/src/core/lv_refr.c ****         uint32_t used_size = mon.total_size - mon.free_size;;
 414:lvgl/src/core/lv_refr.c ****         uint32_t used_kb = used_size / 1024;
 415:lvgl/src/core/lv_refr.c ****         uint32_t used_kb_tenth = (used_size - (used_kb * 1024)) / 102;
 416:lvgl/src/core/lv_refr.c ****         lv_label_set_text_fmt(mem_label, "%" LV_PRIu32 ".%" LV_PRIu32 " kB used (%d %%)\n" \
 417:lvgl/src/core/lv_refr.c ****                               "%d%% frag.", used_kb, used_kb_tenth, mon.used_pct,
 418:lvgl/src/core/lv_refr.c ****                               mon.frag_pct);
 419:lvgl/src/core/lv_refr.c ****     }
 420:lvgl/src/core/lv_refr.c **** #endif
 421:lvgl/src/core/lv_refr.c **** 
 422:lvgl/src/core/lv_refr.c ****     REFR_TRACE("finished");
 423:lvgl/src/core/lv_refr.c **** }
 424:lvgl/src/core/lv_refr.c **** 
 425:lvgl/src/core/lv_refr.c **** #if LV_USE_PERF_MONITOR
 426:lvgl/src/core/lv_refr.c **** void lv_refr_reset_fps_counter(void)
 427:lvgl/src/core/lv_refr.c **** {
 428:lvgl/src/core/lv_refr.c ****     perf_monitor.fps_sum_all = 0;
 429:lvgl/src/core/lv_refr.c ****     perf_monitor.fps_sum_cnt = 0;
 430:lvgl/src/core/lv_refr.c **** }
ARM GAS  C:\usertemp\ccxmAei4.s 			page 9


 431:lvgl/src/core/lv_refr.c **** 
 432:lvgl/src/core/lv_refr.c **** uint32_t lv_refr_get_fps_avg(void)
 433:lvgl/src/core/lv_refr.c **** {
 434:lvgl/src/core/lv_refr.c ****     if(perf_monitor.fps_sum_cnt == 0) {
 435:lvgl/src/core/lv_refr.c ****         return 0;
 436:lvgl/src/core/lv_refr.c ****     }
 437:lvgl/src/core/lv_refr.c ****     return perf_monitor.fps_sum_all / perf_monitor.fps_sum_cnt;
 438:lvgl/src/core/lv_refr.c **** }
 439:lvgl/src/core/lv_refr.c **** #endif
 440:lvgl/src/core/lv_refr.c **** 
 441:lvgl/src/core/lv_refr.c **** 
 442:lvgl/src/core/lv_refr.c **** /**********************
 443:lvgl/src/core/lv_refr.c ****  *   STATIC FUNCTIONS
 444:lvgl/src/core/lv_refr.c ****  **********************/
 445:lvgl/src/core/lv_refr.c **** 
 446:lvgl/src/core/lv_refr.c **** /**
 447:lvgl/src/core/lv_refr.c ****  * Join the areas which has got common parts
 448:lvgl/src/core/lv_refr.c ****  */
 449:lvgl/src/core/lv_refr.c **** static void lv_refr_join_area(void)
 450:lvgl/src/core/lv_refr.c **** {
 451:lvgl/src/core/lv_refr.c ****     uint32_t join_from;
 452:lvgl/src/core/lv_refr.c ****     uint32_t join_in;
 453:lvgl/src/core/lv_refr.c ****     lv_area_t joined_area;
 454:lvgl/src/core/lv_refr.c ****     for(join_in = 0; join_in < disp_refr->inv_p; join_in++) {
 455:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[join_in] != 0) continue;
 456:lvgl/src/core/lv_refr.c **** 
 457:lvgl/src/core/lv_refr.c ****         /*Check all areas to join them in 'join_in'*/
 458:lvgl/src/core/lv_refr.c ****         for(join_from = 0; join_from < disp_refr->inv_p; join_from++) {
 459:lvgl/src/core/lv_refr.c ****             /*Handle only unjoined areas and ignore itself*/
 460:lvgl/src/core/lv_refr.c ****             if(disp_refr->inv_area_joined[join_from] != 0 || join_in == join_from) {
 461:lvgl/src/core/lv_refr.c ****                 continue;
 462:lvgl/src/core/lv_refr.c ****             }
 463:lvgl/src/core/lv_refr.c **** 
 464:lvgl/src/core/lv_refr.c ****             /*Check if the areas are on each other*/
 465:lvgl/src/core/lv_refr.c ****             if(_lv_area_is_on(&disp_refr->inv_areas[join_in], &disp_refr->inv_areas[join_from]) == 
 466:lvgl/src/core/lv_refr.c ****                 continue;
 467:lvgl/src/core/lv_refr.c ****             }
 468:lvgl/src/core/lv_refr.c **** 
 469:lvgl/src/core/lv_refr.c ****             _lv_area_join(&joined_area, &disp_refr->inv_areas[join_in], &disp_refr->inv_areas[join_
 470:lvgl/src/core/lv_refr.c **** 
 471:lvgl/src/core/lv_refr.c ****             /*Join two area only if the joined area size is smaller*/
 472:lvgl/src/core/lv_refr.c ****             if(lv_area_get_size(&joined_area) < (lv_area_get_size(&disp_refr->inv_areas[join_in]) +
 473:lvgl/src/core/lv_refr.c ****                                                  lv_area_get_size(&disp_refr->inv_areas[join_from])
 474:lvgl/src/core/lv_refr.c ****                 lv_area_copy(&disp_refr->inv_areas[join_in], &joined_area);
 475:lvgl/src/core/lv_refr.c **** 
 476:lvgl/src/core/lv_refr.c ****                 /*Mark 'join_form' is joined into 'join_in'*/
 477:lvgl/src/core/lv_refr.c ****                 disp_refr->inv_area_joined[join_from] = 1;
 478:lvgl/src/core/lv_refr.c ****             }
 479:lvgl/src/core/lv_refr.c ****         }
 480:lvgl/src/core/lv_refr.c ****     }
 481:lvgl/src/core/lv_refr.c **** }
 482:lvgl/src/core/lv_refr.c **** 
 483:lvgl/src/core/lv_refr.c **** /**
 484:lvgl/src/core/lv_refr.c ****  * Refresh the joined areas
 485:lvgl/src/core/lv_refr.c ****  */
 486:lvgl/src/core/lv_refr.c **** static void lv_refr_areas(void)
 487:lvgl/src/core/lv_refr.c **** {
ARM GAS  C:\usertemp\ccxmAei4.s 			page 10


 488:lvgl/src/core/lv_refr.c ****     px_num = 0;
 489:lvgl/src/core/lv_refr.c **** 
 490:lvgl/src/core/lv_refr.c ****     if(disp_refr->inv_p == 0) return;
 491:lvgl/src/core/lv_refr.c **** 
 492:lvgl/src/core/lv_refr.c ****     /*Find the last area which will be drawn*/
 493:lvgl/src/core/lv_refr.c ****     int32_t i;
 494:lvgl/src/core/lv_refr.c ****     int32_t last_i = 0;
 495:lvgl/src/core/lv_refr.c ****     for(i = disp_refr->inv_p - 1; i >= 0; i--) {
 496:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[i] == 0) {
 497:lvgl/src/core/lv_refr.c ****             last_i = i;
 498:lvgl/src/core/lv_refr.c ****             break;
 499:lvgl/src/core/lv_refr.c ****         }
 500:lvgl/src/core/lv_refr.c ****     }
 501:lvgl/src/core/lv_refr.c **** 
 502:lvgl/src/core/lv_refr.c ****     disp_refr->driver->draw_buf->last_area = 0;
 503:lvgl/src/core/lv_refr.c ****     disp_refr->driver->draw_buf->last_part = 0;
 504:lvgl/src/core/lv_refr.c **** 
 505:lvgl/src/core/lv_refr.c ****     for(i = 0; i < disp_refr->inv_p; i++) {
 506:lvgl/src/core/lv_refr.c ****         /*Refresh the unjoined areas*/
 507:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[i] == 0) {
 508:lvgl/src/core/lv_refr.c **** 
 509:lvgl/src/core/lv_refr.c ****             if(i == last_i) disp_refr->driver->draw_buf->last_area = 1;
 510:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_buf->last_part = 0;
 511:lvgl/src/core/lv_refr.c ****             lv_refr_area(&disp_refr->inv_areas[i]);
 512:lvgl/src/core/lv_refr.c **** 
 513:lvgl/src/core/lv_refr.c ****             px_num += lv_area_get_size(&disp_refr->inv_areas[i]);
 514:lvgl/src/core/lv_refr.c ****         }
 515:lvgl/src/core/lv_refr.c ****     }
 516:lvgl/src/core/lv_refr.c **** }
 517:lvgl/src/core/lv_refr.c **** 
 518:lvgl/src/core/lv_refr.c **** /**
 519:lvgl/src/core/lv_refr.c ****  * Refresh an area if there is Virtual Display Buffer
 520:lvgl/src/core/lv_refr.c ****  * @param area_p  pointer to an area to refresh
 521:lvgl/src/core/lv_refr.c ****  */
 522:lvgl/src/core/lv_refr.c **** static void lv_refr_area(const lv_area_t * area_p)
 523:lvgl/src/core/lv_refr.c **** {
 524:lvgl/src/core/lv_refr.c ****     lv_draw_ctx_t * draw_ctx = disp_refr->driver->draw_ctx;
 525:lvgl/src/core/lv_refr.c ****     draw_ctx->buf = disp_refr->driver->draw_buf->buf_act;
 526:lvgl/src/core/lv_refr.c **** 
 527:lvgl/src/core/lv_refr.c ****     /*With full refresh just redraw directly into the buffer*/
 528:lvgl/src/core/lv_refr.c ****     /*In direct mode draw directly on the absolute coordinates of the buffer*/
 529:lvgl/src/core/lv_refr.c ****     if(disp_refr->driver->full_refresh || disp_refr->driver->direct_mode) {
 530:lvgl/src/core/lv_refr.c ****         lv_area_t disp_area;
 531:lvgl/src/core/lv_refr.c ****         lv_area_set(&disp_area, 0, 0, lv_disp_get_hor_res(disp_refr) - 1, lv_disp_get_ver_res(disp_
 532:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &disp_area;
 533:lvgl/src/core/lv_refr.c **** 
 534:lvgl/src/core/lv_refr.c ****         if(disp_refr->driver->full_refresh) {
 535:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_buf->last_part = 1;
 536:lvgl/src/core/lv_refr.c ****             draw_ctx->clip_area = &disp_area;
 537:lvgl/src/core/lv_refr.c ****             lv_refr_area_part(draw_ctx);
 538:lvgl/src/core/lv_refr.c ****         }
 539:lvgl/src/core/lv_refr.c ****         else {
 540:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_buf->last_part = disp_refr->driver->draw_buf->last_area;
 541:lvgl/src/core/lv_refr.c ****             draw_ctx->clip_area = area_p;
 542:lvgl/src/core/lv_refr.c ****             lv_refr_area_part(draw_ctx);
 543:lvgl/src/core/lv_refr.c ****         }
 544:lvgl/src/core/lv_refr.c ****         return;
ARM GAS  C:\usertemp\ccxmAei4.s 			page 11


 545:lvgl/src/core/lv_refr.c ****     }
 546:lvgl/src/core/lv_refr.c **** 
 547:lvgl/src/core/lv_refr.c ****     /*Normal refresh: draw the area in parts*/
 548:lvgl/src/core/lv_refr.c ****     /*Calculate the max row num*/
 549:lvgl/src/core/lv_refr.c ****     lv_coord_t w = lv_area_get_width(area_p);
 550:lvgl/src/core/lv_refr.c ****     lv_coord_t h = lv_area_get_height(area_p);
 551:lvgl/src/core/lv_refr.c ****     lv_coord_t y2 = area_p->y2 >= lv_disp_get_ver_res(disp_refr) ?
 552:lvgl/src/core/lv_refr.c ****                     lv_disp_get_ver_res(disp_refr) - 1 : area_p->y2;
 553:lvgl/src/core/lv_refr.c **** 
 554:lvgl/src/core/lv_refr.c ****     int32_t max_row = get_max_row(disp_refr, w, h);
 555:lvgl/src/core/lv_refr.c **** 
 556:lvgl/src/core/lv_refr.c ****     lv_coord_t row;
 557:lvgl/src/core/lv_refr.c ****     lv_coord_t row_last = 0;
 558:lvgl/src/core/lv_refr.c ****     lv_area_t sub_area;
 559:lvgl/src/core/lv_refr.c ****     for(row = area_p->y1; row + max_row - 1 <= y2; row += max_row) {
 560:lvgl/src/core/lv_refr.c ****         /*Calc. the next y coordinates of draw_buf*/
 561:lvgl/src/core/lv_refr.c ****         sub_area.x1 = area_p->x1;
 562:lvgl/src/core/lv_refr.c ****         sub_area.x2 = area_p->x2;
 563:lvgl/src/core/lv_refr.c ****         sub_area.y1 = row;
 564:lvgl/src/core/lv_refr.c ****         sub_area.y2 = row + max_row - 1;
 565:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &sub_area;
 566:lvgl/src/core/lv_refr.c ****         draw_ctx->clip_area = &sub_area;
 567:lvgl/src/core/lv_refr.c ****         draw_ctx->buf = disp_refr->driver->draw_buf->buf_act;
 568:lvgl/src/core/lv_refr.c ****         if(sub_area.y2 > y2) sub_area.y2 = y2;
 569:lvgl/src/core/lv_refr.c ****         row_last = sub_area.y2;
 570:lvgl/src/core/lv_refr.c ****         if(y2 == row_last) disp_refr->driver->draw_buf->last_part = 1;
 571:lvgl/src/core/lv_refr.c ****         lv_refr_area_part(draw_ctx);
 572:lvgl/src/core/lv_refr.c ****     }
 573:lvgl/src/core/lv_refr.c **** 
 574:lvgl/src/core/lv_refr.c ****     /*If the last y coordinates are not handled yet ...*/
 575:lvgl/src/core/lv_refr.c ****     if(y2 != row_last) {
 576:lvgl/src/core/lv_refr.c ****         /*Calc. the next y coordinates of draw_buf*/
 577:lvgl/src/core/lv_refr.c ****         sub_area.x1 = area_p->x1;
 578:lvgl/src/core/lv_refr.c ****         sub_area.x2 = area_p->x2;
 579:lvgl/src/core/lv_refr.c ****         sub_area.y1 = row;
 580:lvgl/src/core/lv_refr.c ****         sub_area.y2 = y2;
 581:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &sub_area;
 582:lvgl/src/core/lv_refr.c ****         draw_ctx->clip_area = &sub_area;
 583:lvgl/src/core/lv_refr.c ****         draw_ctx->buf = disp_refr->driver->draw_buf->buf_act;
 584:lvgl/src/core/lv_refr.c ****         disp_refr->driver->draw_buf->last_part = 1;
 585:lvgl/src/core/lv_refr.c ****         lv_refr_area_part(draw_ctx);
 586:lvgl/src/core/lv_refr.c ****     }
 587:lvgl/src/core/lv_refr.c **** }
 588:lvgl/src/core/lv_refr.c **** 
 589:lvgl/src/core/lv_refr.c **** static void lv_refr_area_part(lv_draw_ctx_t * draw_ctx)
 590:lvgl/src/core/lv_refr.c **** {
 591:lvgl/src/core/lv_refr.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp_refr);
 592:lvgl/src/core/lv_refr.c **** 
 593:lvgl/src/core/lv_refr.c ****     /* Below the `area_p` area will be redrawn into the draw buffer.
 594:lvgl/src/core/lv_refr.c ****      * In single buffered mode wait here until the buffer is freed.*/
 595:lvgl/src/core/lv_refr.c ****     if(draw_buf->buf1 && !draw_buf->buf2) {
 596:lvgl/src/core/lv_refr.c ****         while(draw_buf->flushing) {
 597:lvgl/src/core/lv_refr.c ****             if(disp_refr->driver->wait_cb) disp_refr->driver->wait_cb(disp_refr->driver);
 598:lvgl/src/core/lv_refr.c ****         }
 599:lvgl/src/core/lv_refr.c ****     }
 600:lvgl/src/core/lv_refr.c **** 
 601:lvgl/src/core/lv_refr.c ****     lv_obj_t * top_act_scr = NULL;
ARM GAS  C:\usertemp\ccxmAei4.s 			page 12


 602:lvgl/src/core/lv_refr.c ****     lv_obj_t * top_prev_scr = NULL;
 603:lvgl/src/core/lv_refr.c **** 
 604:lvgl/src/core/lv_refr.c ****     /*Get the most top object which is not covered by others*/
 605:lvgl/src/core/lv_refr.c ****     top_act_scr = lv_refr_get_top_obj(draw_ctx->buf_area, lv_disp_get_scr_act(disp_refr));
 606:lvgl/src/core/lv_refr.c ****     if(disp_refr->prev_scr) {
 607:lvgl/src/core/lv_refr.c ****         top_prev_scr = lv_refr_get_top_obj(draw_ctx->buf_area, disp_refr->prev_scr);
 608:lvgl/src/core/lv_refr.c ****     }
 609:lvgl/src/core/lv_refr.c **** 
 610:lvgl/src/core/lv_refr.c ****     /*Draw a display background if there is no top object*/
 611:lvgl/src/core/lv_refr.c ****     if(top_act_scr == NULL && top_prev_scr == NULL) {
 612:lvgl/src/core/lv_refr.c ****         if(draw_ctx->draw_bg) {
 613:lvgl/src/core/lv_refr.c ****             lv_draw_rect_dsc_t dsc;
 614:lvgl/src/core/lv_refr.c ****             lv_draw_rect_dsc_init(&dsc);
 615:lvgl/src/core/lv_refr.c ****             dsc.bg_img_src = disp_refr->bg_img;
 616:lvgl/src/core/lv_refr.c ****             dsc.bg_img_opa = disp_refr->bg_opa;
 617:lvgl/src/core/lv_refr.c ****             dsc.bg_color = disp_refr->bg_color;
 618:lvgl/src/core/lv_refr.c ****             dsc.bg_opa = disp_refr->bg_opa;
 619:lvgl/src/core/lv_refr.c ****             draw_ctx->draw_bg(draw_ctx, &dsc, draw_ctx->buf_area);
 620:lvgl/src/core/lv_refr.c ****         }
 621:lvgl/src/core/lv_refr.c ****         else if(disp_refr->bg_img) {
 622:lvgl/src/core/lv_refr.c ****             lv_img_header_t header;
 623:lvgl/src/core/lv_refr.c ****             lv_res_t res;
 624:lvgl/src/core/lv_refr.c ****             res = lv_img_decoder_get_info(disp_refr->bg_img, &header);
 625:lvgl/src/core/lv_refr.c ****             if(res == LV_RES_OK) {
 626:lvgl/src/core/lv_refr.c ****                 lv_area_t a;
 627:lvgl/src/core/lv_refr.c ****                 lv_area_set(&a, 0, 0, header.w - 1, header.h - 1);
 628:lvgl/src/core/lv_refr.c ****                 lv_draw_img_dsc_t dsc;
 629:lvgl/src/core/lv_refr.c ****                 lv_draw_img_dsc_init(&dsc);
 630:lvgl/src/core/lv_refr.c ****                 dsc.opa = disp_refr->bg_opa;
 631:lvgl/src/core/lv_refr.c ****                 lv_draw_img(draw_ctx, &dsc, &a, disp_refr->bg_img);
 632:lvgl/src/core/lv_refr.c ****             }
 633:lvgl/src/core/lv_refr.c ****             else {
 634:lvgl/src/core/lv_refr.c ****                 LV_LOG_WARN("Can't draw the background image");
 635:lvgl/src/core/lv_refr.c ****             }
 636:lvgl/src/core/lv_refr.c ****         }
 637:lvgl/src/core/lv_refr.c ****         else {
 638:lvgl/src/core/lv_refr.c ****             lv_draw_rect_dsc_t dsc;
 639:lvgl/src/core/lv_refr.c ****             lv_draw_rect_dsc_init(&dsc);
 640:lvgl/src/core/lv_refr.c ****             dsc.bg_color = disp_refr->bg_color;
 641:lvgl/src/core/lv_refr.c ****             dsc.bg_opa = disp_refr->bg_opa;
 642:lvgl/src/core/lv_refr.c ****             lv_draw_rect(draw_ctx, &dsc, draw_ctx->buf_area);
 643:lvgl/src/core/lv_refr.c ****         }
 644:lvgl/src/core/lv_refr.c ****     }
 645:lvgl/src/core/lv_refr.c ****     /*Refresh the previous screen if any*/
 646:lvgl/src/core/lv_refr.c ****     if(disp_refr->prev_scr) {
 647:lvgl/src/core/lv_refr.c ****         if(top_prev_scr == NULL) top_prev_scr = disp_refr->prev_scr;
 648:lvgl/src/core/lv_refr.c ****         lv_refr_obj_and_children(draw_ctx, top_prev_scr);
 649:lvgl/src/core/lv_refr.c ****     }
 650:lvgl/src/core/lv_refr.c **** 
 651:lvgl/src/core/lv_refr.c ****     if(top_act_scr == NULL) top_act_scr = disp_refr->act_scr;
 652:lvgl/src/core/lv_refr.c ****     lv_refr_obj_and_children(draw_ctx, top_act_scr);
 653:lvgl/src/core/lv_refr.c **** 
 654:lvgl/src/core/lv_refr.c ****     /*Also refresh top and sys layer unconditionally*/
 655:lvgl/src/core/lv_refr.c ****     lv_refr_obj_and_children(draw_ctx, lv_disp_get_layer_top(disp_refr));
 656:lvgl/src/core/lv_refr.c ****     lv_refr_obj_and_children(draw_ctx, lv_disp_get_layer_sys(disp_refr));
 657:lvgl/src/core/lv_refr.c **** 
 658:lvgl/src/core/lv_refr.c ****     /*In true double buffered mode flush only once when all areas were rendered.
ARM GAS  C:\usertemp\ccxmAei4.s 			page 13


 659:lvgl/src/core/lv_refr.c ****      *In normal mode flush after every area*/
 660:lvgl/src/core/lv_refr.c ****     if(disp_refr->driver->full_refresh == false) {
 661:lvgl/src/core/lv_refr.c ****         draw_buf_flush(disp_refr);
 662:lvgl/src/core/lv_refr.c ****     }
 663:lvgl/src/core/lv_refr.c **** }
 664:lvgl/src/core/lv_refr.c **** 
 665:lvgl/src/core/lv_refr.c **** /**
 666:lvgl/src/core/lv_refr.c ****  * Search the most top object which fully covers an area
 667:lvgl/src/core/lv_refr.c ****  * @param area_p pointer to an area
 668:lvgl/src/core/lv_refr.c ****  * @param obj the first object to start the searching (typically a screen)
 669:lvgl/src/core/lv_refr.c ****  * @return
 670:lvgl/src/core/lv_refr.c ****  */
 671:lvgl/src/core/lv_refr.c **** static lv_obj_t * lv_refr_get_top_obj(const lv_area_t * area_p, lv_obj_t * obj)
 672:lvgl/src/core/lv_refr.c **** {
 673:lvgl/src/core/lv_refr.c ****     lv_obj_t * found_p = NULL;
 674:lvgl/src/core/lv_refr.c **** 
 675:lvgl/src/core/lv_refr.c ****     /*If this object is fully cover the draw area then check the children too*/
 676:lvgl/src/core/lv_refr.c ****     if(_lv_area_is_in(area_p, &obj->coords, 0) && lv_obj_has_flag(obj, LV_OBJ_FLAG_HIDDEN) == false
 677:lvgl/src/core/lv_refr.c ****         lv_cover_check_info_t info;
 678:lvgl/src/core/lv_refr.c ****         info.res = LV_COVER_RES_COVER;
 679:lvgl/src/core/lv_refr.c ****         info.area = area_p;
 680:lvgl/src/core/lv_refr.c ****         lv_event_send(obj, LV_EVENT_COVER_CHECK, &info);
 681:lvgl/src/core/lv_refr.c ****         if(info.res == LV_COVER_RES_MASKED) return NULL;
 682:lvgl/src/core/lv_refr.c **** 
 683:lvgl/src/core/lv_refr.c ****         uint32_t i;
 684:lvgl/src/core/lv_refr.c ****         uint32_t child_cnt = lv_obj_get_child_cnt(obj);
 685:lvgl/src/core/lv_refr.c ****         for(i = 0; i < child_cnt; i++) {
 686:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 687:lvgl/src/core/lv_refr.c ****             found_p = lv_refr_get_top_obj(area_p, child);
 688:lvgl/src/core/lv_refr.c **** 
 689:lvgl/src/core/lv_refr.c ****             /*If a children is ok then break*/
 690:lvgl/src/core/lv_refr.c ****             if(found_p != NULL) {
 691:lvgl/src/core/lv_refr.c ****                 break;
 692:lvgl/src/core/lv_refr.c ****             }
 693:lvgl/src/core/lv_refr.c ****         }
 694:lvgl/src/core/lv_refr.c **** 
 695:lvgl/src/core/lv_refr.c ****         /*If no better children use this object*/
 696:lvgl/src/core/lv_refr.c ****         if(found_p == NULL) {
 697:lvgl/src/core/lv_refr.c ****             if(info.res == LV_COVER_RES_COVER) {
 698:lvgl/src/core/lv_refr.c ****                 found_p = obj;
 699:lvgl/src/core/lv_refr.c ****             }
 700:lvgl/src/core/lv_refr.c ****         }
 701:lvgl/src/core/lv_refr.c ****     }
 702:lvgl/src/core/lv_refr.c **** 
 703:lvgl/src/core/lv_refr.c ****     return found_p;
 704:lvgl/src/core/lv_refr.c **** }
 705:lvgl/src/core/lv_refr.c **** 
 706:lvgl/src/core/lv_refr.c **** /**
 707:lvgl/src/core/lv_refr.c ****  * Make the refreshing from an object. Draw all its children and the youngers too.
 708:lvgl/src/core/lv_refr.c ****  * @param top_p pointer to an objects. Start the drawing from it.
 709:lvgl/src/core/lv_refr.c ****  * @param mask_p pointer to an area, the objects will be drawn only here
 710:lvgl/src/core/lv_refr.c ****  */
 711:lvgl/src/core/lv_refr.c **** static void lv_refr_obj_and_children(lv_draw_ctx_t * draw_ctx, lv_obj_t * top_obj)
 712:lvgl/src/core/lv_refr.c **** {
 713:lvgl/src/core/lv_refr.c ****     /*Normally always will be a top_obj (at least the screen)
 714:lvgl/src/core/lv_refr.c ****      *but in special cases (e.g. if the screen has alpha) it won't.
 715:lvgl/src/core/lv_refr.c ****      *In this case use the screen directly*/
ARM GAS  C:\usertemp\ccxmAei4.s 			page 14


 716:lvgl/src/core/lv_refr.c ****     if(top_obj == NULL) top_obj = lv_disp_get_scr_act(disp_refr);
 717:lvgl/src/core/lv_refr.c ****     if(top_obj == NULL) return;  /*Shouldn't happen*/
 718:lvgl/src/core/lv_refr.c **** 
 719:lvgl/src/core/lv_refr.c ****     /*Refresh the top object and its children*/
 720:lvgl/src/core/lv_refr.c ****     lv_refr_obj(draw_ctx, top_obj);
 721:lvgl/src/core/lv_refr.c **** 
 722:lvgl/src/core/lv_refr.c ****     /*Draw the 'younger' sibling objects because they can be on top_obj*/
 723:lvgl/src/core/lv_refr.c ****     lv_obj_t * parent;
 724:lvgl/src/core/lv_refr.c ****     lv_obj_t * border_p = top_obj;
 725:lvgl/src/core/lv_refr.c **** 
 726:lvgl/src/core/lv_refr.c ****     parent = lv_obj_get_parent(top_obj);
 727:lvgl/src/core/lv_refr.c **** 
 728:lvgl/src/core/lv_refr.c ****     /*Do until not reach the screen*/
 729:lvgl/src/core/lv_refr.c ****     while(parent != NULL) {
 730:lvgl/src/core/lv_refr.c ****         bool go = false;
 731:lvgl/src/core/lv_refr.c ****         uint32_t i;
 732:lvgl/src/core/lv_refr.c ****         uint32_t child_cnt = lv_obj_get_child_cnt(parent);
 733:lvgl/src/core/lv_refr.c ****         for(i = 0; i < child_cnt; i++) {
 734:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = parent->spec_attr->children[i];
 735:lvgl/src/core/lv_refr.c ****             if(!go) {
 736:lvgl/src/core/lv_refr.c ****                 if(child == border_p) go = true;
 737:lvgl/src/core/lv_refr.c ****             }
 738:lvgl/src/core/lv_refr.c ****             else {
 739:lvgl/src/core/lv_refr.c ****                 /*Refresh the objects*/
 740:lvgl/src/core/lv_refr.c ****                 lv_refr_obj(draw_ctx, child);
 741:lvgl/src/core/lv_refr.c ****             }
 742:lvgl/src/core/lv_refr.c ****         }
 743:lvgl/src/core/lv_refr.c **** 
 744:lvgl/src/core/lv_refr.c ****         /*Call the post draw draw function of the parents of the to object*/
 745:lvgl/src/core/lv_refr.c ****         lv_event_send(parent, LV_EVENT_DRAW_POST_BEGIN, (void *)draw_ctx);
 746:lvgl/src/core/lv_refr.c ****         lv_event_send(parent, LV_EVENT_DRAW_POST, (void *)draw_ctx);
 747:lvgl/src/core/lv_refr.c ****         lv_event_send(parent, LV_EVENT_DRAW_POST_END, (void *)draw_ctx);
 748:lvgl/src/core/lv_refr.c **** 
 749:lvgl/src/core/lv_refr.c ****         /*The new border will be the last parents,
 750:lvgl/src/core/lv_refr.c ****          *so the 'younger' brothers of parent will be refreshed*/
 751:lvgl/src/core/lv_refr.c ****         border_p = parent;
 752:lvgl/src/core/lv_refr.c ****         /*Go a level deeper*/
 753:lvgl/src/core/lv_refr.c ****         parent = lv_obj_get_parent(parent);
 754:lvgl/src/core/lv_refr.c ****     }
 755:lvgl/src/core/lv_refr.c **** }
 756:lvgl/src/core/lv_refr.c **** 
 757:lvgl/src/core/lv_refr.c **** static uint32_t get_max_row(lv_disp_t * disp, lv_coord_t area_w, lv_coord_t area_h)
 758:lvgl/src/core/lv_refr.c **** {
  28              		.loc 1 758 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 758 1 is_stmt 0 view .LVU1
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 4, -16
  37              		.cfi_offset 5, -12
  38              		.cfi_offset 6, -8
  39              		.cfi_offset 14, -4
  40 0002 82B0     		sub	sp, sp, #8
  41              	.LCFI1:
ARM GAS  C:\usertemp\ccxmAei4.s 			page 15


  42              		.cfi_def_cfa_offset 24
 759:lvgl/src/core/lv_refr.c ****     int32_t max_row = (uint32_t)disp->driver->draw_buf->size / area_w;
  43              		.loc 1 759 5 is_stmt 1 view .LVU2
  44              		.loc 1 759 37 is_stmt 0 view .LVU3
  45 0004 0368     		ldr	r3, [r0]
  46              		.loc 1 759 45 view .LVU4
  47 0006 DB68     		ldr	r3, [r3, #12]
  48              		.loc 1 759 55 view .LVU5
  49 0008 DB68     		ldr	r3, [r3, #12]
  50              		.loc 1 759 62 view .LVU6
  51 000a B3FBF1F1 		udiv	r1, r3, r1
  52              	.LVL1:
 760:lvgl/src/core/lv_refr.c **** 
 761:lvgl/src/core/lv_refr.c ****     if(max_row > area_h) max_row = area_h;
  53              		.loc 1 761 5 is_stmt 1 view .LVU7
  54              		.loc 1 761 16 is_stmt 0 view .LVU8
  55 000e 1546     		mov	r5, r2
  56              		.loc 1 761 7 view .LVU9
  57 0010 8A42     		cmp	r2, r1
  58 0012 00DB     		blt	.L2
 759:lvgl/src/core/lv_refr.c ****     int32_t max_row = (uint32_t)disp->driver->draw_buf->size / area_w;
  59              		.loc 1 759 13 view .LVU10
  60 0014 0D46     		mov	r5, r1
  61              	.L2:
  62              	.LVL2:
 762:lvgl/src/core/lv_refr.c **** 
 763:lvgl/src/core/lv_refr.c ****     /*Round down the lines of draw_buf if rounding is added*/
 764:lvgl/src/core/lv_refr.c ****     if(disp_refr->driver->rounder_cb) {
  63              		.loc 1 764 5 is_stmt 1 view .LVU11
  64              		.loc 1 764 17 is_stmt 0 view .LVU12
  65 0016 174B     		ldr	r3, .L10
  66 0018 1B68     		ldr	r3, [r3]
  67 001a 1B68     		ldr	r3, [r3]
  68              		.loc 1 764 25 view .LVU13
  69 001c 9B69     		ldr	r3, [r3, #24]
  70              		.loc 1 764 7 view .LVU14
  71 001e 1BB3     		cbz	r3, .L3
  72              	.LBB56:
 765:lvgl/src/core/lv_refr.c ****         lv_area_t tmp;
  73              		.loc 1 765 9 is_stmt 1 view .LVU15
 766:lvgl/src/core/lv_refr.c ****         tmp.x1 = 0;
  74              		.loc 1 766 9 view .LVU16
  75              		.loc 1 766 16 is_stmt 0 view .LVU17
  76 0020 0023     		movs	r3, #0
  77 0022 ADF80030 		strh	r3, [sp]	@ movhi
 767:lvgl/src/core/lv_refr.c ****         tmp.x2 = 0;
  78              		.loc 1 767 9 is_stmt 1 view .LVU18
  79              		.loc 1 767 16 is_stmt 0 view .LVU19
  80 0026 ADF80430 		strh	r3, [sp, #4]	@ movhi
 768:lvgl/src/core/lv_refr.c ****         tmp.y1 = 0;
  81              		.loc 1 768 9 is_stmt 1 view .LVU20
  82              		.loc 1 768 16 is_stmt 0 view .LVU21
  83 002a ADF80230 		strh	r3, [sp, #2]	@ movhi
 769:lvgl/src/core/lv_refr.c **** 
 770:lvgl/src/core/lv_refr.c ****         lv_coord_t h_tmp = max_row;
  84              		.loc 1 770 9 is_stmt 1 view .LVU22
  85              		.loc 1 770 20 is_stmt 0 view .LVU23
ARM GAS  C:\usertemp\ccxmAei4.s 			page 16


  86 002e 2CB2     		sxth	r4, r5
  87              	.LVL3:
  88              	.L5:
 771:lvgl/src/core/lv_refr.c ****         do {
  89              		.loc 1 771 9 is_stmt 1 view .LVU24
 772:lvgl/src/core/lv_refr.c ****             tmp.y2 = h_tmp - 1;
  90              		.loc 1 772 13 view .LVU25
  91 0030 2646     		mov	r6, r4
  92              		.loc 1 772 28 is_stmt 0 view .LVU26
  93 0032 013C     		subs	r4, r4, #1
  94              	.LVL4:
  95              		.loc 1 772 28 view .LVU27
  96 0034 24B2     		sxth	r4, r4
  97              		.loc 1 772 20 view .LVU28
  98 0036 ADF80640 		strh	r4, [sp, #6]	@ movhi
 773:lvgl/src/core/lv_refr.c ****             disp_refr->driver->rounder_cb(disp_refr->driver, &tmp);
  99              		.loc 1 773 13 is_stmt 1 view .LVU29
 100              		.loc 1 773 22 is_stmt 0 view .LVU30
 101 003a 0E4B     		ldr	r3, .L10
 102 003c 1B68     		ldr	r3, [r3]
 103 003e 1868     		ldr	r0, [r3]
 104              		.loc 1 773 30 view .LVU31
 105 0040 8369     		ldr	r3, [r0, #24]
 106              		.loc 1 773 13 view .LVU32
 107 0042 6946     		mov	r1, sp
 108 0044 9847     		blx	r3
 109              	.LVL5:
 774:lvgl/src/core/lv_refr.c **** 
 775:lvgl/src/core/lv_refr.c ****             /*If this height fits into `max_row` then fine*/
 776:lvgl/src/core/lv_refr.c ****             if(lv_area_get_height(&tmp) <= max_row) break;
 110              		.loc 1 776 13 is_stmt 1 view .LVU33
 111              	.LBB57:
 112              	.LBI57:
 113              		.file 2 "lvgl/src/core/../misc/../font/../misc/lv_area.h"
   1:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /**
   2:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @file lv_area.h
   3:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  *
   4:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  */
   5:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
   6:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #ifndef LV_AREA_H
   7:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #define LV_AREA_H
   8:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
   9:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #ifdef __cplusplus
  10:lvgl/src/core/../misc/../font/../misc/lv_area.h **** extern "C" {
  11:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #endif
  12:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  13:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /*********************
  14:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  *      INCLUDES
  15:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  *********************/
  16:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #include <stdbool.h>
  18:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #include <stdint.h>
  19:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  20:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /*********************
  21:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  *      DEFINES
  22:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  *********************/
  23:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
ARM GAS  C:\usertemp\ccxmAei4.s 			page 17


  24:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #if LV_USE_LARGE_COORD
  25:lvgl/src/core/../misc/../font/../misc/lv_area.h **** typedef int32_t lv_coord_t;
  26:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #else
  27:lvgl/src/core/../misc/../font/../misc/lv_area.h **** typedef int16_t lv_coord_t;
  28:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #endif
  29:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  30:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /**********************
  31:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  *      TYPEDEFS
  32:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  **********************/
  33:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  34:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /**
  35:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * Represents a point on the screen.
  36:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  */
  37:lvgl/src/core/../misc/../font/../misc/lv_area.h **** typedef struct {
  38:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     lv_coord_t x;
  39:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     lv_coord_t y;
  40:lvgl/src/core/../misc/../font/../misc/lv_area.h **** } lv_point_t;
  41:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  42:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /** Represents an area of the screen.*/
  43:lvgl/src/core/../misc/../font/../misc/lv_area.h **** typedef struct {
  44:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     lv_coord_t x1;
  45:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     lv_coord_t y1;
  46:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     lv_coord_t x2;
  47:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     lv_coord_t y2;
  48:lvgl/src/core/../misc/../font/../misc/lv_area.h **** } lv_area_t;
  49:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  50:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /** Alignments*/
  51:lvgl/src/core/../misc/../font/../misc/lv_area.h **** enum {
  52:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_DEFAULT = 0,
  53:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_TOP_LEFT,
  54:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_TOP_MID,
  55:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_TOP_RIGHT,
  56:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_LEFT,
  57:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_MID,
  58:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_RIGHT,
  59:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_LEFT_MID,
  60:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_RIGHT_MID,
  61:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_CENTER,
  62:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  63:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  64:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  65:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  66:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  67:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  68:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  69:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  70:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  71:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  72:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  73:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  74:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  75:lvgl/src/core/../misc/../font/../misc/lv_area.h **** };
  76:lvgl/src/core/../misc/../font/../misc/lv_area.h **** typedef uint8_t lv_align_t;
  77:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  78:lvgl/src/core/../misc/../font/../misc/lv_area.h **** enum {
  79:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_NONE     = 0x00,
  80:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_LEFT     = (1 << 0),
ARM GAS  C:\usertemp\ccxmAei4.s 			page 18


  81:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_RIGHT    = (1 << 1),
  82:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_TOP      = (1 << 2),
  83:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_BOTTOM   = (1 << 3),
  84:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_HOR      = LV_DIR_LEFT | LV_DIR_RIGHT,
  85:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_VER      = LV_DIR_TOP | LV_DIR_BOTTOM,
  86:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_ALL      = LV_DIR_HOR | LV_DIR_VER,
  87:lvgl/src/core/../misc/../font/../misc/lv_area.h **** };
  88:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  89:lvgl/src/core/../misc/../font/../misc/lv_area.h **** typedef uint8_t lv_dir_t;
  90:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  91:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /**********************
  92:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * GLOBAL PROTOTYPES
  93:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  **********************/
  94:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  95:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /**
  96:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * Initialize an area
  97:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param area_p pointer to an area
  98:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param x1 left coordinate of the area
  99:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param y1 top coordinate of the area
 100:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param x2 right coordinate of the area
 101:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param y2 bottom coordinate of the area
 102:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  */
 103:lvgl/src/core/../misc/../font/../misc/lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
 104:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
 105:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /**
 106:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * Copy an area
 107:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param dest pointer to the destination area
 108:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param src pointer to the source area
 109:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  */
 110:lvgl/src/core/../misc/../font/../misc/lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
 111:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 112:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x1 = src->x1;
 113:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 114:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 115:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 116:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 117:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
 118:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /**
 119:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * Get the width of an area
 120:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param area_p pointer to an area
 121:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @return the width of the area (if x1 == x2 -> width = 1)
 122:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  */
 123:lvgl/src/core/../misc/../font/../misc/lv_area.h **** static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)
 124:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     return (lv_coord_t)(area_p->x2 - area_p->x1 + 1);
 126:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 127:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
 128:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /**
 129:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * Get the height of an area
 130:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param area_p pointer to an area
 131:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @return the height of the area (if y1 == y2 -> height = 1)
 132:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  */
 133:lvgl/src/core/../misc/../font/../misc/lv_area.h **** static inline lv_coord_t lv_area_get_height(const lv_area_t * area_p)
 114              		.loc 2 133 26 view .LVU34
 115              	.LBB58:
 134:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 135:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     return (lv_coord_t)(area_p->y2 - area_p->y1 + 1);
ARM GAS  C:\usertemp\ccxmAei4.s 			page 19


 116              		.loc 2 135 5 view .LVU35
 117              		.loc 2 135 31 is_stmt 0 view .LVU36
 118 0046 BDF90620 		ldrsh	r2, [sp, #6]
 119 004a 93B2     		uxth	r3, r2
 120              		.loc 2 135 44 view .LVU37
 121 004c BDF80210 		ldrh	r1, [sp, #2]
 122              		.loc 2 135 36 view .LVU38
 123 0050 5B1A     		subs	r3, r3, r1
 124 0052 9BB2     		uxth	r3, r3
 125              		.loc 2 135 49 view .LVU39
 126 0054 0133     		adds	r3, r3, #1
 127              		.loc 2 135 12 view .LVU40
 128 0056 1BB2     		sxth	r3, r3
 129              	.LVL6:
 130              		.loc 2 135 12 view .LVU41
 131              	.LBE58:
 132              	.LBE57:
 133              		.loc 1 776 15 discriminator 1 view .LVU42
 134 0058 AB42     		cmp	r3, r5
 135 005a 02DD     		ble	.L4
 777:lvgl/src/core/lv_refr.c **** 
 778:lvgl/src/core/lv_refr.c ****             /*Decrement the height of the area until it fits into `max_row` after rounding*/
 779:lvgl/src/core/lv_refr.c ****             h_tmp--;
 136              		.loc 1 779 13 is_stmt 1 view .LVU43
 137              	.LVL7:
 780:lvgl/src/core/lv_refr.c ****         } while(h_tmp > 0);
 138              		.loc 1 780 23 view .LVU44
 139 005c 002C     		cmp	r4, #0
 140 005e E7DC     		bgt	.L5
 779:lvgl/src/core/lv_refr.c ****         } while(h_tmp > 0);
 141              		.loc 1 779 18 is_stmt 0 view .LVU45
 142 0060 2646     		mov	r6, r4
 143              	.LVL8:
 144              	.L4:
 781:lvgl/src/core/lv_refr.c **** 
 782:lvgl/src/core/lv_refr.c ****         if(h_tmp <= 0) {
 145              		.loc 1 782 9 is_stmt 1 view .LVU46
 146              		.loc 1 782 11 is_stmt 0 view .LVU47
 147 0062 002E     		cmp	r6, #0
 148 0064 03DD     		ble	.L9
 783:lvgl/src/core/lv_refr.c ****             LV_LOG_WARN("Can't set draw_buf height using the round function. (Wrong round_cb or to 
 784:lvgl/src/core/lv_refr.c ****                         "small draw_buf)");
 785:lvgl/src/core/lv_refr.c ****             return 0;
 786:lvgl/src/core/lv_refr.c ****         }
 787:lvgl/src/core/lv_refr.c ****         else {
 788:lvgl/src/core/lv_refr.c ****             max_row = tmp.y2 + 1;
 149              		.loc 1 788 13 is_stmt 1 view .LVU48
 150              		.loc 1 788 21 is_stmt 0 view .LVU49
 151 0066 551C     		adds	r5, r2, #1
 152              	.LVL9:
 153              	.L3:
 154              		.loc 1 788 21 view .LVU50
 155              	.LBE56:
 789:lvgl/src/core/lv_refr.c ****         }
 790:lvgl/src/core/lv_refr.c ****     }
 791:lvgl/src/core/lv_refr.c **** 
 792:lvgl/src/core/lv_refr.c ****     return max_row;
ARM GAS  C:\usertemp\ccxmAei4.s 			page 20


 156              		.loc 1 792 5 is_stmt 1 view .LVU51
 157              		.loc 1 792 12 is_stmt 0 view .LVU52
 158 0068 2846     		mov	r0, r5
 159              	.L1:
 793:lvgl/src/core/lv_refr.c **** }
 160              		.loc 1 793 1 view .LVU53
 161 006a 02B0     		add	sp, sp, #8
 162              	.LCFI2:
 163              		.cfi_remember_state
 164              		.cfi_def_cfa_offset 16
 165              		@ sp needed
 166 006c 70BD     		pop	{r4, r5, r6, pc}
 167              	.LVL10:
 168              	.L9:
 169              	.LCFI3:
 170              		.cfi_restore_state
 171              	.LBB59:
 783:lvgl/src/core/lv_refr.c ****             LV_LOG_WARN("Can't set draw_buf height using the round function. (Wrong round_cb or to 
 172              		.loc 1 783 13 is_stmt 1 view .LVU54
 783:lvgl/src/core/lv_refr.c ****             LV_LOG_WARN("Can't set draw_buf height using the round function. (Wrong round_cb or to 
 173              		.loc 1 783 13 view .LVU55
 783:lvgl/src/core/lv_refr.c ****             LV_LOG_WARN("Can't set draw_buf height using the round function. (Wrong round_cb or to 
 174              		.loc 1 783 13 view .LVU56
 785:lvgl/src/core/lv_refr.c ****         }
 175              		.loc 1 785 13 view .LVU57
 785:lvgl/src/core/lv_refr.c ****         }
 176              		.loc 1 785 20 is_stmt 0 view .LVU58
 177 006e 0020     		movs	r0, #0
 178 0070 FBE7     		b	.L1
 179              	.L11:
 180 0072 00BF     		.align	2
 181              	.L10:
 182 0074 00000000 		.word	disp_refr
 183              	.LBE59:
 184              		.cfi_endproc
 185              	.LFE177:
 187              		.section	.text.draw_buf_rotate_180,"ax",%progbits
 188              		.align	1
 189              		.syntax unified
 190              		.thumb
 191              		.thumb_func
 193              	draw_buf_rotate_180:
 194              	.LVL11:
 195              	.LFB178:
 794:lvgl/src/core/lv_refr.c **** 
 795:lvgl/src/core/lv_refr.c **** static void draw_buf_rotate_180(lv_disp_drv_t * drv, lv_area_t * area, lv_color_t * color_p)
 796:lvgl/src/core/lv_refr.c **** {
 196              		.loc 1 796 1 is_stmt 1 view -0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		.loc 1 796 1 is_stmt 0 view .LVU60
 201 0000 10B5     		push	{r4, lr}
 202              	.LCFI4:
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 4, -8
 205              		.cfi_offset 14, -4
ARM GAS  C:\usertemp\ccxmAei4.s 			page 21


 797:lvgl/src/core/lv_refr.c ****     lv_coord_t area_w = lv_area_get_width(area);
 206              		.loc 1 797 5 is_stmt 1 view .LVU61
 207              	.LVL12:
 208              	.LBB60:
 209              	.LBI60:
 123:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 210              		.loc 2 123 26 view .LVU62
 211              	.LBB61:
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 212              		.loc 2 125 5 view .LVU63
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 213              		.loc 2 125 31 is_stmt 0 view .LVU64
 214 0002 8B88     		ldrh	r3, [r1, #4]
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 215              		.loc 2 125 44 view .LVU65
 216 0004 B1F800C0 		ldrh	ip, [r1]
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 217              		.loc 2 125 36 view .LVU66
 218 0008 A3EB0C03 		sub	r3, r3, ip
 219 000c 9BB2     		uxth	r3, r3
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 220              		.loc 2 125 49 view .LVU67
 221 000e 0133     		adds	r3, r3, #1
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 222              		.loc 2 125 12 view .LVU68
 223 0010 1BB2     		sxth	r3, r3
 224              	.LVL13:
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 225              		.loc 2 125 12 view .LVU69
 226              	.LBE61:
 227              	.LBE60:
 798:lvgl/src/core/lv_refr.c ****     lv_coord_t area_h = lv_area_get_height(area);
 228              		.loc 1 798 5 is_stmt 1 view .LVU70
 229              	.LBB62:
 230              	.LBI62:
 133:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 231              		.loc 2 133 26 view .LVU71
 232              	.LBB63:
 233              		.loc 2 135 5 view .LVU72
 234              		.loc 2 135 31 is_stmt 0 view .LVU73
 235 0012 B1F806C0 		ldrh	ip, [r1, #6]
 236              		.loc 2 135 44 view .LVU74
 237 0016 B1F802E0 		ldrh	lr, [r1, #2]
 238              		.loc 2 135 36 view .LVU75
 239 001a ACEB0E0C 		sub	ip, ip, lr
 240 001e 1FFA8CFC 		uxth	ip, ip
 241              		.loc 2 135 49 view .LVU76
 242 0022 0CF1010C 		add	ip, ip, #1
 243              		.loc 2 135 12 view .LVU77
 244 0026 0FFA8CFC 		sxth	ip, ip
 245              	.LVL14:
 246              		.loc 2 135 12 view .LVU78
 247              	.LBE63:
 248              	.LBE62:
 799:lvgl/src/core/lv_refr.c ****     uint32_t total = area_w * area_h;
 249              		.loc 1 799 5 is_stmt 1 view .LVU79
 250              		.loc 1 799 29 is_stmt 0 view .LVU80
ARM GAS  C:\usertemp\ccxmAei4.s 			page 22


 251 002a 0CFB03F3 		mul	r3, ip, r3
 252              	.LVL15:
 800:lvgl/src/core/lv_refr.c ****     /*Swap the beginning and end values*/
 801:lvgl/src/core/lv_refr.c ****     lv_color_t tmp;
 253              		.loc 1 801 5 is_stmt 1 view .LVU81
 802:lvgl/src/core/lv_refr.c ****     uint32_t i = total - 1, j = 0;
 254              		.loc 1 802 5 view .LVU82
 255              		.loc 1 802 14 is_stmt 0 view .LVU83
 256 002e 013B     		subs	r3, r3, #1
 257              	.LVL16:
 803:lvgl/src/core/lv_refr.c ****     while(i > j) {
 258              		.loc 1 803 5 is_stmt 1 view .LVU84
 802:lvgl/src/core/lv_refr.c ****     uint32_t i = total - 1, j = 0;
 259              		.loc 1 802 29 is_stmt 0 view .LVU85
 260 0030 4FF0000C 		mov	ip, #0
 261              	.LVL17:
 262              		.loc 1 803 10 view .LVU86
 263 0034 0AE0     		b	.L13
 264              	.LVL18:
 265              	.L14:
 804:lvgl/src/core/lv_refr.c ****         tmp = color_p[i];
 266              		.loc 1 804 9 is_stmt 1 view .LVU87
 267              		.loc 1 804 13 is_stmt 0 view .LVU88
 268 0036 32F813E0 		ldrh	lr, [r2, r3, lsl #1]
 269              	.LVL19:
 805:lvgl/src/core/lv_refr.c ****         color_p[i] = color_p[j];
 270              		.loc 1 805 9 is_stmt 1 view .LVU89
 271              		.loc 1 805 20 is_stmt 0 view .LVU90
 272 003a 32F81C40 		ldrh	r4, [r2, ip, lsl #1]
 273 003e 22F81340 		strh	r4, [r2, r3, lsl #1]	@ movhi
 806:lvgl/src/core/lv_refr.c ****         color_p[j] = tmp;
 274              		.loc 1 806 9 is_stmt 1 view .LVU91
 275              	.LVL20:
 276              		.loc 1 806 20 is_stmt 0 view .LVU92
 277 0042 22F81CE0 		strh	lr, [r2, ip, lsl #1]	@ movhi
 807:lvgl/src/core/lv_refr.c ****         i--;
 278              		.loc 1 807 9 is_stmt 1 view .LVU93
 279              		.loc 1 807 10 is_stmt 0 view .LVU94
 280 0046 013B     		subs	r3, r3, #1
 281              	.LVL21:
 808:lvgl/src/core/lv_refr.c ****         j++;
 282              		.loc 1 808 9 is_stmt 1 view .LVU95
 283              		.loc 1 808 10 is_stmt 0 view .LVU96
 284 0048 0CF1010C 		add	ip, ip, #1
 285              	.LVL22:
 286              	.L13:
 803:lvgl/src/core/lv_refr.c ****         tmp = color_p[i];
 287              		.loc 1 803 13 is_stmt 1 view .LVU97
 288 004c 6345     		cmp	r3, ip
 289 004e F2D8     		bhi	.L14
 809:lvgl/src/core/lv_refr.c ****     }
 810:lvgl/src/core/lv_refr.c ****     lv_coord_t tmp_coord;
 290              		.loc 1 810 5 view .LVU98
 811:lvgl/src/core/lv_refr.c ****     tmp_coord = area->y2;
 291              		.loc 1 811 5 view .LVU99
 292              		.loc 1 811 15 is_stmt 0 view .LVU100
 293 0050 B1F90620 		ldrsh	r2, [r1, #6]
ARM GAS  C:\usertemp\ccxmAei4.s 			page 23


 294              	.LVL23:
 812:lvgl/src/core/lv_refr.c ****     area->y2 = drv->ver_res - area->y1 - 1;
 295              		.loc 1 812 5 is_stmt 1 view .LVU101
 296              		.loc 1 812 19 is_stmt 0 view .LVU102
 297 0054 4388     		ldrh	r3, [r0, #2]
 298              	.LVL24:
 299              		.loc 1 812 35 view .LVU103
 300 0056 B1F802C0 		ldrh	ip, [r1, #2]
 301              	.LVL25:
 302              		.loc 1 812 29 view .LVU104
 303 005a A3EB0C03 		sub	r3, r3, ip
 304 005e 9BB2     		uxth	r3, r3
 305              		.loc 1 812 40 view .LVU105
 306 0060 013B     		subs	r3, r3, #1
 307              		.loc 1 812 14 view .LVU106
 308 0062 CB80     		strh	r3, [r1, #6]	@ movhi
 309              	.LVL26:
 813:lvgl/src/core/lv_refr.c ****     area->y1 = drv->ver_res - tmp_coord - 1;
 310              		.loc 1 813 5 is_stmt 1 view .LVU107
 311              		.loc 1 813 19 is_stmt 0 view .LVU108
 312 0064 4388     		ldrh	r3, [r0, #2]
 313              		.loc 1 813 29 view .LVU109
 314 0066 9B1A     		subs	r3, r3, r2
 315 0068 9BB2     		uxth	r3, r3
 316              		.loc 1 813 41 view .LVU110
 317 006a 013B     		subs	r3, r3, #1
 318              		.loc 1 813 14 view .LVU111
 319 006c 4B80     		strh	r3, [r1, #2]	@ movhi
 814:lvgl/src/core/lv_refr.c ****     tmp_coord = area->x2;
 320              		.loc 1 814 5 is_stmt 1 view .LVU112
 321              		.loc 1 814 15 is_stmt 0 view .LVU113
 322 006e B1F90420 		ldrsh	r2, [r1, #4]
 323              	.LVL27:
 815:lvgl/src/core/lv_refr.c ****     area->x2 = drv->hor_res - area->x1 - 1;
 324              		.loc 1 815 5 is_stmt 1 view .LVU114
 325              		.loc 1 815 19 is_stmt 0 view .LVU115
 326 0072 0388     		ldrh	r3, [r0]
 327              		.loc 1 815 35 view .LVU116
 328 0074 B1F800C0 		ldrh	ip, [r1]
 329              		.loc 1 815 29 view .LVU117
 330 0078 A3EB0C03 		sub	r3, r3, ip
 331 007c 9BB2     		uxth	r3, r3
 332              		.loc 1 815 40 view .LVU118
 333 007e 013B     		subs	r3, r3, #1
 334              		.loc 1 815 14 view .LVU119
 335 0080 8B80     		strh	r3, [r1, #4]	@ movhi
 336              	.LVL28:
 816:lvgl/src/core/lv_refr.c ****     area->x1 = drv->hor_res - tmp_coord - 1;
 337              		.loc 1 816 5 is_stmt 1 view .LVU120
 338              		.loc 1 816 19 is_stmt 0 view .LVU121
 339 0082 0388     		ldrh	r3, [r0]
 340              		.loc 1 816 29 view .LVU122
 341 0084 9B1A     		subs	r3, r3, r2
 342 0086 9BB2     		uxth	r3, r3
 343              		.loc 1 816 41 view .LVU123
 344 0088 013B     		subs	r3, r3, #1
 345              		.loc 1 816 14 view .LVU124
ARM GAS  C:\usertemp\ccxmAei4.s 			page 24


 346 008a 0B80     		strh	r3, [r1]	@ movhi
 817:lvgl/src/core/lv_refr.c **** }
 347              		.loc 1 817 1 view .LVU125
 348 008c 10BD     		pop	{r4, pc}
 349              		.cfi_endproc
 350              	.LFE178:
 352              		.section	.text.draw_buf_rotate_90,"ax",%progbits
 353              		.align	1
 354              		.syntax unified
 355              		.thumb
 356              		.thumb_func
 358              	draw_buf_rotate_90:
 359              	.LVL29:
 360              	.LFB179:
 818:lvgl/src/core/lv_refr.c **** 
 819:lvgl/src/core/lv_refr.c **** static LV_ATTRIBUTE_FAST_MEM void draw_buf_rotate_90(bool invert_i, lv_coord_t area_w, lv_coord_t a
 820:lvgl/src/core/lv_refr.c ****                                                      lv_color_t * orig_color_p, lv_color_t * rot_bu
 821:lvgl/src/core/lv_refr.c **** {
 361              		.loc 1 821 1 is_stmt 1 view -0
 362              		.cfi_startproc
 363              		@ args = 4, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365              		.loc 1 821 1 is_stmt 0 view .LVU127
 366 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 367              	.LCFI5:
 368              		.cfi_def_cfa_offset 24
 369              		.cfi_offset 4, -24
 370              		.cfi_offset 5, -20
 371              		.cfi_offset 6, -16
 372              		.cfi_offset 7, -12
 373              		.cfi_offset 8, -8
 374              		.cfi_offset 14, -4
 375 0004 0446     		mov	r4, r0
 376 0006 0846     		mov	r0, r1
 377              	.LVL30:
 378              		.loc 1 821 1 view .LVU128
 379 0008 1146     		mov	r1, r2
 380              	.LVL31:
 381              		.loc 1 821 1 view .LVU129
 382 000a 069D     		ldr	r5, [sp, #24]
 822:lvgl/src/core/lv_refr.c **** 
 823:lvgl/src/core/lv_refr.c ****     uint32_t invert = (area_w * area_h) - 1;
 383              		.loc 1 823 5 is_stmt 1 view .LVU130
 384              		.loc 1 823 31 is_stmt 0 view .LVU131
 385 000c 02FB00F8 		mul	r8, r2, r0
 386              		.loc 1 823 41 view .LVU132
 387 0010 08F1FF38 		add	r8, r8, #-1
 388              	.LVL32:
 824:lvgl/src/core/lv_refr.c ****     uint32_t initial_i = ((area_w - 1) * area_h);
 389              		.loc 1 824 5 is_stmt 1 view .LVU133
 390              		.loc 1 824 35 is_stmt 0 view .LVU134
 391 0014 471E     		subs	r7, r0, #1
 392              		.loc 1 824 40 view .LVU135
 393 0016 02FB07F7 		mul	r7, r2, r7
 394              	.LVL33:
 825:lvgl/src/core/lv_refr.c ****     for(lv_coord_t y = 0; y < area_h; y++) {
 395              		.loc 1 825 5 is_stmt 1 view .LVU136
ARM GAS  C:\usertemp\ccxmAei4.s 			page 25


 396              	.LBB64:
 397              		.loc 1 825 9 view .LVU137
 398              		.loc 1 825 20 is_stmt 0 view .LVU138
 399 001a 0026     		movs	r6, #0
 400              		.loc 1 825 5 view .LVU139
 401 001c 11E0     		b	.L17
 402              	.LVL34:
 403              	.L20:
 404              	.LBB65:
 405              	.LBB66:
 826:lvgl/src/core/lv_refr.c ****         uint32_t i = initial_i + y;
 827:lvgl/src/core/lv_refr.c ****         if(invert_i)
 828:lvgl/src/core/lv_refr.c ****             i = invert - i;
 829:lvgl/src/core/lv_refr.c ****         for(lv_coord_t x = 0; x < area_w; x++) {
 830:lvgl/src/core/lv_refr.c ****             rot_buf[i] = *(orig_color_p++);
 831:lvgl/src/core/lv_refr.c ****             if(invert_i)
 832:lvgl/src/core/lv_refr.c ****                 i += area_h;
 833:lvgl/src/core/lv_refr.c ****             else
 834:lvgl/src/core/lv_refr.c ****                 i -= area_h;
 406              		.loc 1 834 17 is_stmt 1 view .LVU140
 407              		.loc 1 834 19 is_stmt 0 view .LVU141
 408 001e AEEB010E 		sub	lr, lr, r1
 409              	.LVL35:
 410              	.L21:
 829:lvgl/src/core/lv_refr.c ****             rot_buf[i] = *(orig_color_p++);
 411              		.loc 1 829 44 is_stmt 1 discriminator 2 view .LVU142
 412 0022 0CF1010C 		add	ip, ip, #1
 413              	.LVL36:
 829:lvgl/src/core/lv_refr.c ****             rot_buf[i] = *(orig_color_p++);
 414              		.loc 1 829 44 is_stmt 0 discriminator 2 view .LVU143
 415 0026 0FFA8CFC 		sxth	ip, ip
 416              	.LVL37:
 417              	.L19:
 829:lvgl/src/core/lv_refr.c ****             rot_buf[i] = *(orig_color_p++);
 418              		.loc 1 829 33 is_stmt 1 discriminator 1 view .LVU144
 419 002a 8445     		cmp	ip, r0
 420 002c 07DA     		bge	.L25
 830:lvgl/src/core/lv_refr.c ****             if(invert_i)
 421              		.loc 1 830 13 view .LVU145
 422              	.LVL38:
 830:lvgl/src/core/lv_refr.c ****             if(invert_i)
 423              		.loc 1 830 24 is_stmt 0 view .LVU146
 424 002e 33F8022B 		ldrh	r2, [r3], #2
 425              	.LVL39:
 830:lvgl/src/core/lv_refr.c ****             if(invert_i)
 426              		.loc 1 830 24 view .LVU147
 427 0032 25F81E20 		strh	r2, [r5, lr, lsl #1]	@ movhi
 831:lvgl/src/core/lv_refr.c ****                 i += area_h;
 428              		.loc 1 831 13 is_stmt 1 view .LVU148
 831:lvgl/src/core/lv_refr.c ****                 i += area_h;
 429              		.loc 1 831 15 is_stmt 0 view .LVU149
 430 0036 002C     		cmp	r4, #0
 431 0038 F1D0     		beq	.L20
 832:lvgl/src/core/lv_refr.c ****             else
 432              		.loc 1 832 17 is_stmt 1 view .LVU150
 832:lvgl/src/core/lv_refr.c ****             else
 433              		.loc 1 832 19 is_stmt 0 view .LVU151
ARM GAS  C:\usertemp\ccxmAei4.s 			page 26


 434 003a 8E44     		add	lr, lr, r1
 435              	.LVL40:
 832:lvgl/src/core/lv_refr.c ****             else
 436              		.loc 1 832 19 view .LVU152
 437 003c F1E7     		b	.L21
 438              	.L25:
 832:lvgl/src/core/lv_refr.c ****             else
 439              		.loc 1 832 19 view .LVU153
 440              	.LBE66:
 441              	.LBE65:
 825:lvgl/src/core/lv_refr.c ****         uint32_t i = initial_i + y;
 442              		.loc 1 825 40 is_stmt 1 discriminator 2 view .LVU154
 443 003e 0136     		adds	r6, r6, #1
 444              	.LVL41:
 825:lvgl/src/core/lv_refr.c ****         uint32_t i = initial_i + y;
 445              		.loc 1 825 40 is_stmt 0 discriminator 2 view .LVU155
 446 0040 36B2     		sxth	r6, r6
 447              	.LVL42:
 448              	.L17:
 825:lvgl/src/core/lv_refr.c ****         uint32_t i = initial_i + y;
 449              		.loc 1 825 29 is_stmt 1 discriminator 1 view .LVU156
 450 0042 8E42     		cmp	r6, r1
 451 0044 07DA     		bge	.L26
 452              	.LBB67:
 826:lvgl/src/core/lv_refr.c ****         if(invert_i)
 453              		.loc 1 826 9 view .LVU157
 826:lvgl/src/core/lv_refr.c ****         if(invert_i)
 454              		.loc 1 826 18 is_stmt 0 view .LVU158
 455 0046 06EB070E 		add	lr, r6, r7
 456              	.LVL43:
 827:lvgl/src/core/lv_refr.c ****             i = invert - i;
 457              		.loc 1 827 9 is_stmt 1 view .LVU159
 827:lvgl/src/core/lv_refr.c ****             i = invert - i;
 458              		.loc 1 827 11 is_stmt 0 view .LVU160
 459 004a 0CB1     		cbz	r4, .L18
 828:lvgl/src/core/lv_refr.c ****         for(lv_coord_t x = 0; x < area_w; x++) {
 460              		.loc 1 828 13 is_stmt 1 view .LVU161
 828:lvgl/src/core/lv_refr.c ****         for(lv_coord_t x = 0; x < area_w; x++) {
 461              		.loc 1 828 15 is_stmt 0 view .LVU162
 462 004c A8EB0E0E 		sub	lr, r8, lr
 463              	.LVL44:
 464              	.L18:
 828:lvgl/src/core/lv_refr.c ****         for(lv_coord_t x = 0; x < area_w; x++) {
 465              		.loc 1 828 15 view .LVU163
 466              	.LBE67:
 467              	.LBE64:
 821:lvgl/src/core/lv_refr.c **** 
 468              		.loc 1 821 1 view .LVU164
 469 0050 4FF0000C 		mov	ip, #0
 470 0054 E9E7     		b	.L19
 471              	.LVL45:
 472              	.L26:
 835:lvgl/src/core/lv_refr.c ****         }
 836:lvgl/src/core/lv_refr.c ****     }
 837:lvgl/src/core/lv_refr.c **** }
 473              		.loc 1 837 1 view .LVU165
 474 0056 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
ARM GAS  C:\usertemp\ccxmAei4.s 			page 27


 475              		.loc 1 837 1 view .LVU166
 476              		.cfi_endproc
 477              	.LFE179:
 479              		.section	.text.draw_buf_rotate_90_sqr,"ax",%progbits
 480              		.align	1
 481              		.syntax unified
 482              		.thumb
 483              		.thumb_func
 485              	draw_buf_rotate_90_sqr:
 486              	.LVL46:
 487              	.LFB181:
 838:lvgl/src/core/lv_refr.c **** 
 839:lvgl/src/core/lv_refr.c **** /**
 840:lvgl/src/core/lv_refr.c ****  * Helper function for draw_buf_rotate_90_sqr. Given a list of four numbers, rotate the entire list
 841:lvgl/src/core/lv_refr.c ****  */
 842:lvgl/src/core/lv_refr.c **** static inline void draw_buf_rotate4(lv_color_t * a, lv_color_t * b, lv_color_t * c, lv_color_t * d)
 843:lvgl/src/core/lv_refr.c **** {
 844:lvgl/src/core/lv_refr.c ****     lv_color_t tmp;
 845:lvgl/src/core/lv_refr.c ****     tmp = *a;
 846:lvgl/src/core/lv_refr.c ****     *a = *b;
 847:lvgl/src/core/lv_refr.c ****     *b = *c;
 848:lvgl/src/core/lv_refr.c ****     *c = *d;
 849:lvgl/src/core/lv_refr.c ****     *d = tmp;
 850:lvgl/src/core/lv_refr.c **** }
 851:lvgl/src/core/lv_refr.c **** 
 852:lvgl/src/core/lv_refr.c **** /**
 853:lvgl/src/core/lv_refr.c ****  * Rotate a square image 90/270 degrees in place.
 854:lvgl/src/core/lv_refr.c ****  * @note inspired by https://stackoverflow.com/a/43694906
 855:lvgl/src/core/lv_refr.c ****  */
 856:lvgl/src/core/lv_refr.c **** static void draw_buf_rotate_90_sqr(bool is_270, lv_coord_t w, lv_color_t * color_p)
 857:lvgl/src/core/lv_refr.c **** {
 488              		.loc 1 857 1 is_stmt 1 view -0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 0
 491              		@ frame_needed = 0, uses_anonymous_args = 0
 492              		.loc 1 857 1 is_stmt 0 view .LVU168
 493 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 494              	.LCFI6:
 495              		.cfi_def_cfa_offset 24
 496              		.cfi_offset 4, -24
 497              		.cfi_offset 5, -20
 498              		.cfi_offset 6, -16
 499              		.cfi_offset 7, -12
 500              		.cfi_offset 8, -8
 501              		.cfi_offset 14, -4
 858:lvgl/src/core/lv_refr.c ****     for(lv_coord_t i = 0; i < w / 2; i++) {
 502              		.loc 1 858 5 is_stmt 1 view .LVU169
 503              	.LBB68:
 504              		.loc 1 858 9 view .LVU170
 505              	.LVL47:
 506              		.loc 1 858 20 is_stmt 0 view .LVU171
 507 0004 0024     		movs	r4, #0
 508              		.loc 1 858 5 view .LVU172
 509 0006 4DE0     		b	.L28
 510              	.LVL48:
 511              	.L29:
 512              	.LBB69:
ARM GAS  C:\usertemp\ccxmAei4.s 			page 28


 513              	.LBB70:
 859:lvgl/src/core/lv_refr.c ****         for(lv_coord_t j = 0; j < (w + 1) / 2; j++) {
 860:lvgl/src/core/lv_refr.c ****             lv_coord_t inv_i = (w - 1) - i;
 861:lvgl/src/core/lv_refr.c ****             lv_coord_t inv_j = (w - 1) - j;
 862:lvgl/src/core/lv_refr.c ****             if(is_270) {
 863:lvgl/src/core/lv_refr.c ****                 draw_buf_rotate4(
 864:lvgl/src/core/lv_refr.c ****                     &color_p[i * w + j],
 865:lvgl/src/core/lv_refr.c ****                     &color_p[inv_j * w + i],
 866:lvgl/src/core/lv_refr.c ****                     &color_p[inv_i * w + inv_j],
 867:lvgl/src/core/lv_refr.c ****                     &color_p[j * w + inv_i]
 868:lvgl/src/core/lv_refr.c ****                 );
 869:lvgl/src/core/lv_refr.c ****             }
 870:lvgl/src/core/lv_refr.c ****             else {
 871:lvgl/src/core/lv_refr.c ****                 draw_buf_rotate4(
 514              		.loc 1 871 17 is_stmt 1 view .LVU173
 872:lvgl/src/core/lv_refr.c ****                     &color_p[i * w + j],
 515              		.loc 1 872 36 is_stmt 0 view .LVU174
 516 0008 01FB0456 		mla	r6, r1, r4, r5
 873:lvgl/src/core/lv_refr.c ****                     &color_p[j * w + inv_i],
 517              		.loc 1 873 36 view .LVU175
 518 000c 01FB05C5 		mla	r5, r1, r5, ip
 874:lvgl/src/core/lv_refr.c ****                     &color_p[inv_i * w + inv_j],
 519              		.loc 1 874 40 view .LVU176
 520 0010 01FB0C3C 		mla	ip, r1, ip, r3
 521              	.LVL49:
 875:lvgl/src/core/lv_refr.c ****                     &color_p[inv_j * w + i]
 522              		.loc 1 875 40 view .LVU177
 523 0014 01FB0343 		mla	r3, r1, r3, r4
 524              	.LVL50:
 525              	.LBB71:
 526              	.LBI71:
 842:lvgl/src/core/lv_refr.c **** {
 527              		.loc 1 842 20 is_stmt 1 view .LVU178
 528              	.LBB72:
 844:lvgl/src/core/lv_refr.c ****     tmp = *a;
 529              		.loc 1 844 5 view .LVU179
 845:lvgl/src/core/lv_refr.c ****     *a = *b;
 530              		.loc 1 845 5 view .LVU180
 845:lvgl/src/core/lv_refr.c ****     *a = *b;
 531              		.loc 1 845 9 is_stmt 0 view .LVU181
 532 0018 32F81670 		ldrh	r7, [r2, r6, lsl #1]
 533              	.LVL51:
 846:lvgl/src/core/lv_refr.c ****     *b = *c;
 534              		.loc 1 846 5 is_stmt 1 view .LVU182
 846:lvgl/src/core/lv_refr.c ****     *b = *c;
 535              		.loc 1 846 8 is_stmt 0 view .LVU183
 536 001c 32F81580 		ldrh	r8, [r2, r5, lsl #1]
 537 0020 22F81680 		strh	r8, [r2, r6, lsl #1]	@ movhi
 847:lvgl/src/core/lv_refr.c ****     *c = *d;
 538              		.loc 1 847 5 is_stmt 1 view .LVU184
 847:lvgl/src/core/lv_refr.c ****     *c = *d;
 539              		.loc 1 847 8 is_stmt 0 view .LVU185
 540 0024 32F81C60 		ldrh	r6, [r2, ip, lsl #1]
 541              	.LVL52:
 847:lvgl/src/core/lv_refr.c ****     *c = *d;
 542              		.loc 1 847 8 view .LVU186
 543 0028 22F81560 		strh	r6, [r2, r5, lsl #1]	@ movhi
ARM GAS  C:\usertemp\ccxmAei4.s 			page 29


 848:lvgl/src/core/lv_refr.c ****     *d = tmp;
 544              		.loc 1 848 5 is_stmt 1 view .LVU187
 848:lvgl/src/core/lv_refr.c ****     *d = tmp;
 545              		.loc 1 848 8 is_stmt 0 view .LVU188
 546 002c 32F81350 		ldrh	r5, [r2, r3, lsl #1]
 547              	.LVL53:
 848:lvgl/src/core/lv_refr.c ****     *d = tmp;
 548              		.loc 1 848 8 view .LVU189
 549 0030 22F81C50 		strh	r5, [r2, ip, lsl #1]	@ movhi
 849:lvgl/src/core/lv_refr.c **** }
 550              		.loc 1 849 5 is_stmt 1 view .LVU190
 551              	.LVL54:
 849:lvgl/src/core/lv_refr.c **** }
 552              		.loc 1 849 8 is_stmt 0 view .LVU191
 553 0034 22F81370 		strh	r7, [r2, r3, lsl #1]	@ movhi
 554              	.LVL55:
 555              	.L30:
 849:lvgl/src/core/lv_refr.c **** }
 556              		.loc 1 849 8 view .LVU192
 557              	.LBE72:
 558              	.LBE71:
 559              	.LBE70:
 859:lvgl/src/core/lv_refr.c ****             lv_coord_t inv_i = (w - 1) - i;
 560              		.loc 1 859 49 is_stmt 1 discriminator 2 view .LVU193
 561 0038 0EF1010E 		add	lr, lr, #1
 562              	.LVL56:
 859:lvgl/src/core/lv_refr.c ****             lv_coord_t inv_i = (w - 1) - i;
 563              		.loc 1 859 49 is_stmt 0 discriminator 2 view .LVU194
 564 003c 0FFA8EFE 		sxth	lr, lr
 565              	.LVL57:
 566              	.L33:
 859:lvgl/src/core/lv_refr.c ****             lv_coord_t inv_i = (w - 1) - i;
 567              		.loc 1 859 33 is_stmt 1 discriminator 1 view .LVU195
 568 0040 7546     		mov	r5, lr
 569              	.LVL58:
 859:lvgl/src/core/lv_refr.c ****             lv_coord_t inv_i = (w - 1) - i;
 570              		.loc 1 859 43 is_stmt 0 discriminator 1 view .LVU196
 571 0042 4B1C     		adds	r3, r1, #1
 572 0044 2AD4     		bmi	.L37
 573              	.L31:
 859:lvgl/src/core/lv_refr.c ****             lv_coord_t inv_i = (w - 1) - i;
 574              		.loc 1 859 33 discriminator 1 view .LVU197
 575 0046 B5EB630F 		cmp	r5, r3, asr #1
 576 004a 29DA     		bge	.L38
 577              	.LBB75:
 860:lvgl/src/core/lv_refr.c ****             lv_coord_t inv_j = (w - 1) - j;
 578              		.loc 1 860 13 is_stmt 1 view .LVU198
 860:lvgl/src/core/lv_refr.c ****             lv_coord_t inv_j = (w - 1) - j;
 579              		.loc 1 860 40 is_stmt 0 view .LVU199
 580 004c 8BB2     		uxth	r3, r1
 581 004e A3EB040C 		sub	ip, r3, r4
 582 0052 0CF1FF3C 		add	ip, ip, #-1
 860:lvgl/src/core/lv_refr.c ****             lv_coord_t inv_j = (w - 1) - j;
 583              		.loc 1 860 24 view .LVU200
 584 0056 0FFA8CFC 		sxth	ip, ip
 585              	.LVL59:
 861:lvgl/src/core/lv_refr.c ****             if(is_270) {
ARM GAS  C:\usertemp\ccxmAei4.s 			page 30


 586              		.loc 1 861 13 is_stmt 1 view .LVU201
 861:lvgl/src/core/lv_refr.c ****             if(is_270) {
 587              		.loc 1 861 40 is_stmt 0 view .LVU202
 588 005a 1FFA8EFE 		uxth	lr, lr
 861:lvgl/src/core/lv_refr.c ****             if(is_270) {
 589              		.loc 1 861 40 view .LVU203
 590 005e A3EB0E03 		sub	r3, r3, lr
 591 0062 013B     		subs	r3, r3, #1
 861:lvgl/src/core/lv_refr.c ****             if(is_270) {
 592              		.loc 1 861 24 view .LVU204
 593 0064 1BB2     		sxth	r3, r3
 594              	.LVL60:
 862:lvgl/src/core/lv_refr.c ****                 draw_buf_rotate4(
 595              		.loc 1 862 13 is_stmt 1 view .LVU205
 862:lvgl/src/core/lv_refr.c ****                 draw_buf_rotate4(
 596              		.loc 1 862 15 is_stmt 0 view .LVU206
 597 0066 0028     		cmp	r0, #0
 598 0068 CED0     		beq	.L29
 863:lvgl/src/core/lv_refr.c ****                     &color_p[i * w + j],
 599              		.loc 1 863 17 is_stmt 1 view .LVU207
 864:lvgl/src/core/lv_refr.c ****                     &color_p[inv_j * w + i],
 600              		.loc 1 864 36 is_stmt 0 view .LVU208
 601 006a 01FB0457 		mla	r7, r1, r4, r5
 602              	.LVL61:
 865:lvgl/src/core/lv_refr.c ****                     &color_p[inv_i * w + inv_j],
 603              		.loc 1 865 40 view .LVU209
 604 006e 01FB0346 		mla	r6, r1, r3, r4
 866:lvgl/src/core/lv_refr.c ****                     &color_p[j * w + inv_i]
 605              		.loc 1 866 40 view .LVU210
 606 0072 01FB0C33 		mla	r3, r1, ip, r3
 607              	.LVL62:
 867:lvgl/src/core/lv_refr.c ****                 );
 608              		.loc 1 867 36 view .LVU211
 609 0076 01FB05CC 		mla	ip, r1, r5, ip
 610              	.LVL63:
 611              	.LBB73:
 612              	.LBI73:
 842:lvgl/src/core/lv_refr.c **** {
 613              		.loc 1 842 20 is_stmt 1 view .LVU212
 614              	.LBB74:
 844:lvgl/src/core/lv_refr.c ****     tmp = *a;
 615              		.loc 1 844 5 view .LVU213
 845:lvgl/src/core/lv_refr.c ****     *a = *b;
 616              		.loc 1 845 5 view .LVU214
 845:lvgl/src/core/lv_refr.c ****     *a = *b;
 617              		.loc 1 845 9 is_stmt 0 view .LVU215
 618 007a 32F81750 		ldrh	r5, [r2, r7, lsl #1]
 846:lvgl/src/core/lv_refr.c ****     *b = *c;
 619              		.loc 1 846 5 is_stmt 1 view .LVU216
 846:lvgl/src/core/lv_refr.c ****     *b = *c;
 620              		.loc 1 846 8 is_stmt 0 view .LVU217
 621 007e 32F81680 		ldrh	r8, [r2, r6, lsl #1]
 622 0082 22F81780 		strh	r8, [r2, r7, lsl #1]	@ movhi
 847:lvgl/src/core/lv_refr.c ****     *c = *d;
 623              		.loc 1 847 5 is_stmt 1 view .LVU218
 847:lvgl/src/core/lv_refr.c ****     *c = *d;
 624              		.loc 1 847 8 is_stmt 0 view .LVU219
ARM GAS  C:\usertemp\ccxmAei4.s 			page 31


 625 0086 32F81370 		ldrh	r7, [r2, r3, lsl #1]
 626              	.LVL64:
 847:lvgl/src/core/lv_refr.c ****     *c = *d;
 627              		.loc 1 847 8 view .LVU220
 628 008a 22F81670 		strh	r7, [r2, r6, lsl #1]	@ movhi
 848:lvgl/src/core/lv_refr.c ****     *d = tmp;
 629              		.loc 1 848 5 is_stmt 1 view .LVU221
 848:lvgl/src/core/lv_refr.c ****     *d = tmp;
 630              		.loc 1 848 8 is_stmt 0 view .LVU222
 631 008e 32F81C60 		ldrh	r6, [r2, ip, lsl #1]
 632              	.LVL65:
 848:lvgl/src/core/lv_refr.c ****     *d = tmp;
 633              		.loc 1 848 8 view .LVU223
 634 0092 22F81360 		strh	r6, [r2, r3, lsl #1]	@ movhi
 849:lvgl/src/core/lv_refr.c **** }
 635              		.loc 1 849 5 is_stmt 1 view .LVU224
 636              	.LVL66:
 849:lvgl/src/core/lv_refr.c **** }
 637              		.loc 1 849 8 is_stmt 0 view .LVU225
 638 0096 22F81C50 		strh	r5, [r2, ip, lsl #1]	@ movhi
 639              	.LVL67:
 850:lvgl/src/core/lv_refr.c **** 
 640              		.loc 1 850 1 view .LVU226
 641 009a CDE7     		b	.L30
 642              	.LVL68:
 643              	.L37:
 850:lvgl/src/core/lv_refr.c **** 
 644              		.loc 1 850 1 view .LVU227
 645              	.LBE74:
 646              	.LBE73:
 647              	.LBE75:
 859:lvgl/src/core/lv_refr.c ****             lv_coord_t inv_i = (w - 1) - i;
 648              		.loc 1 859 43 discriminator 1 view .LVU228
 649 009c 0133     		adds	r3, r3, #1
 650 009e D2E7     		b	.L31
 651              	.L38:
 652              	.LBE69:
 858:lvgl/src/core/lv_refr.c ****         for(lv_coord_t j = 0; j < (w + 1) / 2; j++) {
 653              		.loc 1 858 39 is_stmt 1 discriminator 2 view .LVU229
 654 00a0 0134     		adds	r4, r4, #1
 655              	.LVL69:
 858:lvgl/src/core/lv_refr.c ****         for(lv_coord_t j = 0; j < (w + 1) / 2; j++) {
 656              		.loc 1 858 39 is_stmt 0 discriminator 2 view .LVU230
 657 00a2 24B2     		sxth	r4, r4
 658              	.LVL70:
 659              	.L28:
 858:lvgl/src/core/lv_refr.c ****         for(lv_coord_t j = 0; j < (w + 1) / 2; j++) {
 660              		.loc 1 858 29 is_stmt 1 discriminator 1 view .LVU231
 661 00a4 0B46     		mov	r3, r1
 662 00a6 0029     		cmp	r1, #0
 663 00a8 05DB     		blt	.L39
 664              	.L34:
 665 00aa B4EB630F 		cmp	r4, r3, asr #1
 666 00ae 04DA     		bge	.L40
 667              	.LBB76:
 859:lvgl/src/core/lv_refr.c ****             lv_coord_t inv_i = (w - 1) - i;
 668              		.loc 1 859 24 is_stmt 0 view .LVU232
ARM GAS  C:\usertemp\ccxmAei4.s 			page 32


 669 00b0 4FF0000E 		mov	lr, #0
 670 00b4 C4E7     		b	.L33
 671              	.L39:
 672              	.LBE76:
 858:lvgl/src/core/lv_refr.c ****         for(lv_coord_t j = 0; j < (w + 1) / 2; j++) {
 673              		.loc 1 858 29 discriminator 1 view .LVU233
 674 00b6 4B1C     		adds	r3, r1, #1
 675 00b8 F7E7     		b	.L34
 676              	.L40:
 677              	.LBE68:
 876:lvgl/src/core/lv_refr.c ****                 );
 877:lvgl/src/core/lv_refr.c ****             }
 878:lvgl/src/core/lv_refr.c **** 
 879:lvgl/src/core/lv_refr.c ****         }
 880:lvgl/src/core/lv_refr.c ****     }
 881:lvgl/src/core/lv_refr.c **** }
 678              		.loc 1 881 1 view .LVU234
 679 00ba BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 680              		.loc 1 881 1 view .LVU235
 681              		.cfi_endproc
 682              	.LFE181:
 684              		.section	.text.call_flush_cb,"ax",%progbits
 685              		.align	1
 686              		.syntax unified
 687              		.thumb
 688              		.thumb_func
 690              	call_flush_cb:
 691              	.LVL71:
 692              	.LFB184:
 882:lvgl/src/core/lv_refr.c **** 
 883:lvgl/src/core/lv_refr.c **** /**
 884:lvgl/src/core/lv_refr.c ****  * Rotate the draw_buf to the display's native orientation.
 885:lvgl/src/core/lv_refr.c ****  */
 886:lvgl/src/core/lv_refr.c **** static void draw_buf_rotate(lv_area_t * area, lv_color_t * color_p)
 887:lvgl/src/core/lv_refr.c **** {
 888:lvgl/src/core/lv_refr.c ****     lv_disp_drv_t * drv = disp_refr->driver;
 889:lvgl/src/core/lv_refr.c ****     if(disp_refr->driver->full_refresh && drv->sw_rotate) {
 890:lvgl/src/core/lv_refr.c ****         LV_LOG_ERROR("cannot rotate a full refreshed display!");
 891:lvgl/src/core/lv_refr.c ****         return;
 892:lvgl/src/core/lv_refr.c ****     }
 893:lvgl/src/core/lv_refr.c ****     if(drv->rotated == LV_DISP_ROT_180) {
 894:lvgl/src/core/lv_refr.c ****         draw_buf_rotate_180(drv, area, color_p);
 895:lvgl/src/core/lv_refr.c ****         call_flush_cb(drv, area, color_p);
 896:lvgl/src/core/lv_refr.c ****     }
 897:lvgl/src/core/lv_refr.c ****     else if(drv->rotated == LV_DISP_ROT_90 || drv->rotated == LV_DISP_ROT_270) {
 898:lvgl/src/core/lv_refr.c ****         /*Allocate a temporary buffer to store rotated image*/
 899:lvgl/src/core/lv_refr.c ****         lv_color_t * rot_buf = NULL;
 900:lvgl/src/core/lv_refr.c ****         lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp_refr);
 901:lvgl/src/core/lv_refr.c ****         lv_coord_t area_w = lv_area_get_width(area);
 902:lvgl/src/core/lv_refr.c ****         lv_coord_t area_h = lv_area_get_height(area);
 903:lvgl/src/core/lv_refr.c ****         /*Determine the maximum number of rows that can be rotated at a time*/
 904:lvgl/src/core/lv_refr.c ****         lv_coord_t max_row = LV_MIN((lv_coord_t)((LV_DISP_ROT_MAX_BUF / sizeof(lv_color_t)) / area_
 905:lvgl/src/core/lv_refr.c ****         lv_coord_t init_y_off;
 906:lvgl/src/core/lv_refr.c ****         init_y_off = area->y1;
 907:lvgl/src/core/lv_refr.c ****         if(drv->rotated == LV_DISP_ROT_90) {
 908:lvgl/src/core/lv_refr.c ****             area->y2 = drv->ver_res - area->x1 - 1;
 909:lvgl/src/core/lv_refr.c ****             area->y1 = area->y2 - area_w + 1;
ARM GAS  C:\usertemp\ccxmAei4.s 			page 33


 910:lvgl/src/core/lv_refr.c ****         }
 911:lvgl/src/core/lv_refr.c ****         else {
 912:lvgl/src/core/lv_refr.c ****             area->y1 = area->x1;
 913:lvgl/src/core/lv_refr.c ****             area->y2 = area->y1 + area_w - 1;
 914:lvgl/src/core/lv_refr.c ****         }
 915:lvgl/src/core/lv_refr.c **** 
 916:lvgl/src/core/lv_refr.c ****         /*Rotate the screen in chunks, flushing after each one*/
 917:lvgl/src/core/lv_refr.c ****         lv_coord_t row = 0;
 918:lvgl/src/core/lv_refr.c ****         while(row < area_h) {
 919:lvgl/src/core/lv_refr.c ****             lv_coord_t height = LV_MIN(max_row, area_h - row);
 920:lvgl/src/core/lv_refr.c ****             draw_buf->flushing = 1;
 921:lvgl/src/core/lv_refr.c ****             if((row == 0) && (area_h >= area_w)) {
 922:lvgl/src/core/lv_refr.c ****                 /*Rotate the initial area as a square*/
 923:lvgl/src/core/lv_refr.c ****                 height = area_w;
 924:lvgl/src/core/lv_refr.c ****                 draw_buf_rotate_90_sqr(drv->rotated == LV_DISP_ROT_270, area_w, color_p);
 925:lvgl/src/core/lv_refr.c ****                 if(drv->rotated == LV_DISP_ROT_90) {
 926:lvgl/src/core/lv_refr.c ****                     area->x1 = init_y_off;
 927:lvgl/src/core/lv_refr.c ****                     area->x2 = init_y_off + area_w - 1;
 928:lvgl/src/core/lv_refr.c ****                 }
 929:lvgl/src/core/lv_refr.c ****                 else {
 930:lvgl/src/core/lv_refr.c ****                     area->x2 = drv->hor_res - 1 - init_y_off;
 931:lvgl/src/core/lv_refr.c ****                     area->x1 = area->x2 - area_w + 1;
 932:lvgl/src/core/lv_refr.c ****                 }
 933:lvgl/src/core/lv_refr.c ****             }
 934:lvgl/src/core/lv_refr.c ****             else {
 935:lvgl/src/core/lv_refr.c ****                 /*Rotate other areas using a maximum buffer size*/
 936:lvgl/src/core/lv_refr.c ****                 if(rot_buf == NULL) rot_buf = lv_mem_buf_get(LV_DISP_ROT_MAX_BUF);
 937:lvgl/src/core/lv_refr.c ****                 draw_buf_rotate_90(drv->rotated == LV_DISP_ROT_270, area_w, height, color_p, rot_bu
 938:lvgl/src/core/lv_refr.c **** 
 939:lvgl/src/core/lv_refr.c ****                 if(drv->rotated == LV_DISP_ROT_90) {
 940:lvgl/src/core/lv_refr.c ****                     area->x1 = init_y_off + row;
 941:lvgl/src/core/lv_refr.c ****                     area->x2 = init_y_off + row + height - 1;
 942:lvgl/src/core/lv_refr.c ****                 }
 943:lvgl/src/core/lv_refr.c ****                 else {
 944:lvgl/src/core/lv_refr.c ****                     area->x2 = drv->hor_res - 1 - init_y_off - row;
 945:lvgl/src/core/lv_refr.c ****                     area->x1 = area->x2 - height + 1;
 946:lvgl/src/core/lv_refr.c ****                 }
 947:lvgl/src/core/lv_refr.c ****             }
 948:lvgl/src/core/lv_refr.c **** 
 949:lvgl/src/core/lv_refr.c ****             /* The original part (chunk of the current area) were split into more parts here.
 950:lvgl/src/core/lv_refr.c ****              * Set the original last_part flag on the last part of rotation. */
 951:lvgl/src/core/lv_refr.c ****             if(row + height >= area_h && draw_buf->last_area && draw_buf->last_part) {
 952:lvgl/src/core/lv_refr.c ****                 draw_buf->flushing_last = 1;
 953:lvgl/src/core/lv_refr.c ****             }
 954:lvgl/src/core/lv_refr.c ****             else {
 955:lvgl/src/core/lv_refr.c ****                 draw_buf->flushing_last = 0;
 956:lvgl/src/core/lv_refr.c ****             }
 957:lvgl/src/core/lv_refr.c **** 
 958:lvgl/src/core/lv_refr.c ****             /*Flush the completed area to the display*/
 959:lvgl/src/core/lv_refr.c ****             call_flush_cb(drv, area, rot_buf == NULL ? color_p : rot_buf);
 960:lvgl/src/core/lv_refr.c ****             /*FIXME: Rotation forces legacy behavior where rendering and flushing are done serially
 961:lvgl/src/core/lv_refr.c ****             while(draw_buf->flushing) {
 962:lvgl/src/core/lv_refr.c ****                 if(drv->wait_cb) drv->wait_cb(drv);
 963:lvgl/src/core/lv_refr.c ****             }
 964:lvgl/src/core/lv_refr.c ****             color_p += area_w * height;
 965:lvgl/src/core/lv_refr.c ****             row += height;
 966:lvgl/src/core/lv_refr.c ****         }
ARM GAS  C:\usertemp\ccxmAei4.s 			page 34


 967:lvgl/src/core/lv_refr.c ****         /*Free the allocated buffer at the end if necessary*/
 968:lvgl/src/core/lv_refr.c ****         if(rot_buf != NULL) lv_mem_buf_release(rot_buf);
 969:lvgl/src/core/lv_refr.c ****     }
 970:lvgl/src/core/lv_refr.c **** }
 971:lvgl/src/core/lv_refr.c **** 
 972:lvgl/src/core/lv_refr.c **** /**
 973:lvgl/src/core/lv_refr.c ****  * Flush the content of the draw buffer
 974:lvgl/src/core/lv_refr.c ****  */
 975:lvgl/src/core/lv_refr.c **** static void draw_buf_flush(lv_disp_t * disp)
 976:lvgl/src/core/lv_refr.c **** {
 977:lvgl/src/core/lv_refr.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp_refr);
 978:lvgl/src/core/lv_refr.c **** 
 979:lvgl/src/core/lv_refr.c ****     /*Flush the rendered content to the display*/
 980:lvgl/src/core/lv_refr.c ****     lv_draw_ctx_t * draw_ctx = disp->driver->draw_ctx;
 981:lvgl/src/core/lv_refr.c ****     if(draw_ctx->wait_for_finish) draw_ctx->wait_for_finish(draw_ctx);
 982:lvgl/src/core/lv_refr.c **** 
 983:lvgl/src/core/lv_refr.c ****     /* In double buffered mode wait until the other buffer is freed
 984:lvgl/src/core/lv_refr.c ****      * and driver is ready to receive the new buffer */
 985:lvgl/src/core/lv_refr.c ****     if(draw_buf->buf1 && draw_buf->buf2) {
 986:lvgl/src/core/lv_refr.c ****         while(draw_buf->flushing) {
 987:lvgl/src/core/lv_refr.c ****             if(disp_refr->driver->wait_cb) disp_refr->driver->wait_cb(disp_refr->driver);
 988:lvgl/src/core/lv_refr.c ****         }
 989:lvgl/src/core/lv_refr.c ****     }
 990:lvgl/src/core/lv_refr.c **** 
 991:lvgl/src/core/lv_refr.c ****     draw_buf->flushing = 1;
 992:lvgl/src/core/lv_refr.c **** 
 993:lvgl/src/core/lv_refr.c ****     if(disp_refr->driver->draw_buf->last_area && disp_refr->driver->draw_buf->last_part) draw_buf->
 994:lvgl/src/core/lv_refr.c ****     else draw_buf->flushing_last = 0;
 995:lvgl/src/core/lv_refr.c **** 
 996:lvgl/src/core/lv_refr.c ****     bool flushing_last = draw_buf->flushing_last;
 997:lvgl/src/core/lv_refr.c **** 
 998:lvgl/src/core/lv_refr.c ****     if(disp->driver->flush_cb) {
 999:lvgl/src/core/lv_refr.c ****         /*Rotate the buffer to the display's native orientation if necessary*/
1000:lvgl/src/core/lv_refr.c ****         if(disp->driver->rotated != LV_DISP_ROT_NONE && disp->driver->sw_rotate) {
1001:lvgl/src/core/lv_refr.c ****             draw_buf_rotate(draw_ctx->buf_area, draw_ctx->buf);
1002:lvgl/src/core/lv_refr.c ****         }
1003:lvgl/src/core/lv_refr.c ****         else {
1004:lvgl/src/core/lv_refr.c ****             call_flush_cb(disp->driver, draw_ctx->buf_area, draw_ctx->buf);
1005:lvgl/src/core/lv_refr.c ****         }
1006:lvgl/src/core/lv_refr.c ****     }
1007:lvgl/src/core/lv_refr.c ****     /*If there are 2 buffers swap them. With direct mode swap only on the last area*/
1008:lvgl/src/core/lv_refr.c ****     if(draw_buf->buf1 && draw_buf->buf2 && (!disp->driver->direct_mode || flushing_last)) {
1009:lvgl/src/core/lv_refr.c ****         if(draw_buf->buf_act == draw_buf->buf1)
1010:lvgl/src/core/lv_refr.c ****             draw_buf->buf_act = draw_buf->buf2;
1011:lvgl/src/core/lv_refr.c ****         else
1012:lvgl/src/core/lv_refr.c ****             draw_buf->buf_act = draw_buf->buf1;
1013:lvgl/src/core/lv_refr.c ****     }
1014:lvgl/src/core/lv_refr.c **** }
1015:lvgl/src/core/lv_refr.c **** 
1016:lvgl/src/core/lv_refr.c **** static void call_flush_cb(lv_disp_drv_t * drv, const lv_area_t * area, lv_color_t * color_p)
1017:lvgl/src/core/lv_refr.c **** {
 693              		.loc 1 1017 1 is_stmt 1 view -0
 694              		.cfi_startproc
 695              		@ args = 0, pretend = 0, frame = 8
 696              		@ frame_needed = 0, uses_anonymous_args = 0
 697              		.loc 1 1017 1 is_stmt 0 view .LVU237
 698 0000 10B5     		push	{r4, lr}
ARM GAS  C:\usertemp\ccxmAei4.s 			page 35


 699              	.LCFI7:
 700              		.cfi_def_cfa_offset 8
 701              		.cfi_offset 4, -8
 702              		.cfi_offset 14, -4
 703 0002 82B0     		sub	sp, sp, #8
 704              	.LCFI8:
 705              		.cfi_def_cfa_offset 16
1018:lvgl/src/core/lv_refr.c ****     REFR_TRACE("Calling flush_cb on (%d;%d)(%d;%d) area with %p image pointer", area->x1, area->y1,
 706              		.loc 1 1018 5 is_stmt 1 view .LVU238
 707              		.loc 1 1018 5 view .LVU239
 708              		.loc 1 1018 5 view .LVU240
1019:lvgl/src/core/lv_refr.c ****                (void *)color_p);
1020:lvgl/src/core/lv_refr.c **** 
1021:lvgl/src/core/lv_refr.c ****     lv_area_t offset_area = {
 709              		.loc 1 1021 5 view .LVU241
1022:lvgl/src/core/lv_refr.c ****         .x1 = area->x1 + drv->offset_x,
 710              		.loc 1 1022 19 is_stmt 0 view .LVU242
 711 0004 0C88     		ldrh	r4, [r1]
 712              		.loc 1 1022 29 view .LVU243
 713 0006 B0F808E0 		ldrh	lr, [r0, #8]
 714              		.loc 1 1022 24 view .LVU244
 715 000a 7444     		add	r4, r4, lr
1021:lvgl/src/core/lv_refr.c ****         .x1 = area->x1 + drv->offset_x,
 716              		.loc 1 1021 15 view .LVU245
 717 000c ADF80040 		strh	r4, [sp]	@ movhi
1023:lvgl/src/core/lv_refr.c ****         .y1 = area->y1 + drv->offset_y,
 718              		.loc 1 1023 19 view .LVU246
 719 0010 4C88     		ldrh	r4, [r1, #2]
 720              		.loc 1 1023 29 view .LVU247
 721 0012 B0F80AC0 		ldrh	ip, [r0, #10]
 722              		.loc 1 1023 24 view .LVU248
 723 0016 6444     		add	r4, r4, ip
1021:lvgl/src/core/lv_refr.c ****         .x1 = area->x1 + drv->offset_x,
 724              		.loc 1 1021 15 view .LVU249
 725 0018 ADF80240 		strh	r4, [sp, #2]	@ movhi
1024:lvgl/src/core/lv_refr.c ****         .x2 = area->x2 + drv->offset_x,
 726              		.loc 1 1024 19 view .LVU250
 727 001c 8C88     		ldrh	r4, [r1, #4]
 728              		.loc 1 1024 24 view .LVU251
 729 001e A644     		add	lr, lr, r4
1021:lvgl/src/core/lv_refr.c ****         .x1 = area->x1 + drv->offset_x,
 730              		.loc 1 1021 15 view .LVU252
 731 0020 ADF804E0 		strh	lr, [sp, #4]	@ movhi
1025:lvgl/src/core/lv_refr.c ****         .y2 = area->y2 + drv->offset_y
 732              		.loc 1 1025 19 view .LVU253
 733 0024 C988     		ldrh	r1, [r1, #6]
 734              	.LVL72:
 735              		.loc 1 1025 24 view .LVU254
 736 0026 8C44     		add	ip, ip, r1
1021:lvgl/src/core/lv_refr.c ****         .x1 = area->x1 + drv->offset_x,
 737              		.loc 1 1021 15 view .LVU255
 738 0028 ADF806C0 		strh	ip, [sp, #6]	@ movhi
1026:lvgl/src/core/lv_refr.c ****     };
1027:lvgl/src/core/lv_refr.c **** 
1028:lvgl/src/core/lv_refr.c ****     drv->flush_cb(drv, &offset_area, color_p);
 739              		.loc 1 1028 5 is_stmt 1 view .LVU256
 740              		.loc 1 1028 8 is_stmt 0 view .LVU257
ARM GAS  C:\usertemp\ccxmAei4.s 			page 36


 741 002c 4369     		ldr	r3, [r0, #20]
 742              		.loc 1 1028 5 view .LVU258
 743 002e 6946     		mov	r1, sp
 744 0030 9847     		blx	r3
 745              	.LVL73:
1029:lvgl/src/core/lv_refr.c **** }
 746              		.loc 1 1029 1 view .LVU259
 747 0032 02B0     		add	sp, sp, #8
 748              	.LCFI9:
 749              		.cfi_def_cfa_offset 8
 750              		@ sp needed
 751 0034 10BD     		pop	{r4, pc}
 752              		.cfi_endproc
 753              	.LFE184:
 755              		.section	.text.perf_monitor_init,"ax",%progbits
 756              		.align	1
 757              		.syntax unified
 758              		.thumb
 759              		.thumb_func
 761              	perf_monitor_init:
 762              	.LVL74:
 763              	.LFB185:
1030:lvgl/src/core/lv_refr.c **** 
1031:lvgl/src/core/lv_refr.c **** #if LV_USE_PERF_MONITOR
1032:lvgl/src/core/lv_refr.c **** static void perf_monitor_init(perf_monitor_t * _perf_monitor)
1033:lvgl/src/core/lv_refr.c **** {
 764              		.loc 1 1033 1 is_stmt 1 view -0
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 0
 767              		@ frame_needed = 0, uses_anonymous_args = 0
 768              		@ link register save eliminated.
1034:lvgl/src/core/lv_refr.c ****     LV_ASSERT_NULL(_perf_monitor);
 769              		.loc 1 1034 5 view .LVU261
 770              		.loc 1 1034 5 view .LVU262
 771 0000 38B1     		cbz	r0, .L45
 772              		.loc 1 1034 5 discriminator 2 view .LVU263
 773              		.loc 1 1034 34 discriminator 2 view .LVU264
1035:lvgl/src/core/lv_refr.c ****     _perf_monitor->elaps_sum = 0;
 774              		.loc 1 1035 5 view .LVU265
 775              		.loc 1 1035 30 is_stmt 0 view .LVU266
 776 0002 0022     		movs	r2, #0
 777 0004 4260     		str	r2, [r0, #4]
1036:lvgl/src/core/lv_refr.c ****     _perf_monitor->fps_sum_all = 0;
 778              		.loc 1 1036 5 is_stmt 1 view .LVU267
 779              		.loc 1 1036 32 is_stmt 0 view .LVU268
 780 0006 0261     		str	r2, [r0, #16]
1037:lvgl/src/core/lv_refr.c ****     _perf_monitor->fps_sum_cnt = 0;
 781              		.loc 1 1037 5 is_stmt 1 view .LVU269
 782              		.loc 1 1037 32 is_stmt 0 view .LVU270
 783 0008 C260     		str	r2, [r0, #12]
1038:lvgl/src/core/lv_refr.c ****     _perf_monitor->frame_cnt = 0;
 784              		.loc 1 1038 5 is_stmt 1 view .LVU271
 785              		.loc 1 1038 30 is_stmt 0 view .LVU272
 786 000a 8260     		str	r2, [r0, #8]
1039:lvgl/src/core/lv_refr.c ****     _perf_monitor->perf_last_time = 0;
 787              		.loc 1 1039 5 is_stmt 1 view .LVU273
 788              		.loc 1 1039 35 is_stmt 0 view .LVU274
ARM GAS  C:\usertemp\ccxmAei4.s 			page 37


 789 000c 0260     		str	r2, [r0]
1040:lvgl/src/core/lv_refr.c ****     _perf_monitor->perf_label = NULL;
 790              		.loc 1 1040 5 is_stmt 1 view .LVU275
 791              		.loc 1 1040 31 is_stmt 0 view .LVU276
 792 000e 4261     		str	r2, [r0, #20]
1041:lvgl/src/core/lv_refr.c **** }
 793              		.loc 1 1041 1 view .LVU277
 794 0010 7047     		bx	lr
 795              	.L45:
1034:lvgl/src/core/lv_refr.c ****     _perf_monitor->elaps_sum = 0;
 796              		.loc 1 1034 5 is_stmt 1 discriminator 1 view .LVU278
1034:lvgl/src/core/lv_refr.c ****     _perf_monitor->elaps_sum = 0;
 797              		.loc 1 1034 5 discriminator 1 view .LVU279
1034:lvgl/src/core/lv_refr.c ****     _perf_monitor->elaps_sum = 0;
 798              		.loc 1 1034 5 discriminator 1 view .LVU280
1034:lvgl/src/core/lv_refr.c ****     _perf_monitor->elaps_sum = 0;
 799              		.loc 1 1034 5 discriminator 1 view .LVU281
1034:lvgl/src/core/lv_refr.c ****     _perf_monitor->elaps_sum = 0;
 800              		.loc 1 1034 5 discriminator 1 view .LVU282
 801 0012 FEE7     		b	.L45
 802              		.cfi_endproc
 803              	.LFE185:
 805              		.section	.text.mem_monitor_init,"ax",%progbits
 806              		.align	1
 807              		.syntax unified
 808              		.thumb
 809              		.thumb_func
 811              	mem_monitor_init:
 812              	.LVL75:
 813              	.LFB186:
1042:lvgl/src/core/lv_refr.c **** #endif
1043:lvgl/src/core/lv_refr.c **** 
1044:lvgl/src/core/lv_refr.c **** #if LV_USE_MEM_MONITOR
1045:lvgl/src/core/lv_refr.c **** static void mem_monitor_init(mem_monitor_t * _mem_monitor)
1046:lvgl/src/core/lv_refr.c **** {
 814              		.loc 1 1046 1 view -0
 815              		.cfi_startproc
 816              		@ args = 0, pretend = 0, frame = 0
 817              		@ frame_needed = 0, uses_anonymous_args = 0
 818              		@ link register save eliminated.
1047:lvgl/src/core/lv_refr.c ****     LV_ASSERT_NULL(_mem_monitor);
 819              		.loc 1 1047 5 view .LVU284
 820              		.loc 1 1047 5 view .LVU285
 821 0000 18B1     		cbz	r0, .L48
 822              		.loc 1 1047 5 discriminator 2 view .LVU286
 823              		.loc 1 1047 33 discriminator 2 view .LVU287
1048:lvgl/src/core/lv_refr.c ****     _mem_monitor->mem_last_time = 0;
 824              		.loc 1 1048 5 view .LVU288
 825              		.loc 1 1048 33 is_stmt 0 view .LVU289
 826 0002 0022     		movs	r2, #0
 827 0004 0260     		str	r2, [r0]
1049:lvgl/src/core/lv_refr.c ****     _mem_monitor->mem_label = NULL;
 828              		.loc 1 1049 5 is_stmt 1 view .LVU290
 829              		.loc 1 1049 29 is_stmt 0 view .LVU291
 830 0006 4260     		str	r2, [r0, #4]
1050:lvgl/src/core/lv_refr.c **** }
 831              		.loc 1 1050 1 view .LVU292
ARM GAS  C:\usertemp\ccxmAei4.s 			page 38


 832 0008 7047     		bx	lr
 833              	.L48:
1047:lvgl/src/core/lv_refr.c ****     _mem_monitor->mem_last_time = 0;
 834              		.loc 1 1047 5 is_stmt 1 discriminator 1 view .LVU293
1047:lvgl/src/core/lv_refr.c ****     _mem_monitor->mem_last_time = 0;
 835              		.loc 1 1047 5 discriminator 1 view .LVU294
1047:lvgl/src/core/lv_refr.c ****     _mem_monitor->mem_last_time = 0;
 836              		.loc 1 1047 5 discriminator 1 view .LVU295
1047:lvgl/src/core/lv_refr.c ****     _mem_monitor->mem_last_time = 0;
 837              		.loc 1 1047 5 discriminator 1 view .LVU296
1047:lvgl/src/core/lv_refr.c ****     _mem_monitor->mem_last_time = 0;
 838              		.loc 1 1047 5 discriminator 1 view .LVU297
 839 000a FEE7     		b	.L48
 840              		.cfi_endproc
 841              	.LFE186:
 843              		.section	.text.lv_refr_get_top_obj,"ax",%progbits
 844              		.align	1
 845              		.syntax unified
 846              		.thumb
 847              		.thumb_func
 849              	lv_refr_get_top_obj:
 850              	.LVL76:
 851              	.LFB175:
 672:lvgl/src/core/lv_refr.c ****     lv_obj_t * found_p = NULL;
 852              		.loc 1 672 1 view -0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 8
 855              		@ frame_needed = 0, uses_anonymous_args = 0
 672:lvgl/src/core/lv_refr.c ****     lv_obj_t * found_p = NULL;
 856              		.loc 1 672 1 is_stmt 0 view .LVU299
 857 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 858              	.LCFI10:
 859              		.cfi_def_cfa_offset 20
 860              		.cfi_offset 4, -20
 861              		.cfi_offset 5, -16
 862              		.cfi_offset 6, -12
 863              		.cfi_offset 7, -8
 864              		.cfi_offset 14, -4
 865 0002 83B0     		sub	sp, sp, #12
 866              	.LCFI11:
 867              		.cfi_def_cfa_offset 32
 868 0004 0646     		mov	r6, r0
 869 0006 0C46     		mov	r4, r1
 673:lvgl/src/core/lv_refr.c **** 
 870              		.loc 1 673 5 is_stmt 1 view .LVU300
 871              	.LVL77:
 676:lvgl/src/core/lv_refr.c ****         lv_cover_check_info_t info;
 872              		.loc 1 676 5 view .LVU301
 676:lvgl/src/core/lv_refr.c ****         lv_cover_check_info_t info;
 873              		.loc 1 676 8 is_stmt 0 view .LVU302
 874 0008 0022     		movs	r2, #0
 875 000a 1431     		adds	r1, r1, #20
 876              	.LVL78:
 676:lvgl/src/core/lv_refr.c ****         lv_cover_check_info_t info;
 877              		.loc 1 676 8 view .LVU303
 878 000c FFF7FEFF 		bl	_lv_area_is_in
 879              	.LVL79:
ARM GAS  C:\usertemp\ccxmAei4.s 			page 39


 676:lvgl/src/core/lv_refr.c ****         lv_cover_check_info_t info;
 880              		.loc 1 676 7 discriminator 1 view .LVU304
 881 0010 68B3     		cbz	r0, .L56
 676:lvgl/src/core/lv_refr.c ****         lv_cover_check_info_t info;
 882              		.loc 1 676 51 discriminator 1 view .LVU305
 883 0012 0121     		movs	r1, #1
 884 0014 2046     		mov	r0, r4
 885 0016 FFF7FEFF 		bl	lv_obj_has_flag
 886              	.LVL80:
 676:lvgl/src/core/lv_refr.c ****         lv_cover_check_info_t info;
 887              		.loc 1 676 48 discriminator 1 view .LVU306
 888 001a 60BB     		cbnz	r0, .L57
 889              	.LBB77:
 677:lvgl/src/core/lv_refr.c ****         info.res = LV_COVER_RES_COVER;
 890              		.loc 1 677 9 is_stmt 1 view .LVU307
 678:lvgl/src/core/lv_refr.c ****         info.area = area_p;
 891              		.loc 1 678 9 view .LVU308
 678:lvgl/src/core/lv_refr.c ****         info.area = area_p;
 892              		.loc 1 678 18 is_stmt 0 view .LVU309
 893 001c 0023     		movs	r3, #0
 894 001e 8DF80030 		strb	r3, [sp]
 679:lvgl/src/core/lv_refr.c ****         lv_event_send(obj, LV_EVENT_COVER_CHECK, &info);
 895              		.loc 1 679 9 is_stmt 1 view .LVU310
 679:lvgl/src/core/lv_refr.c ****         lv_event_send(obj, LV_EVENT_COVER_CHECK, &info);
 896              		.loc 1 679 19 is_stmt 0 view .LVU311
 897 0022 0196     		str	r6, [sp, #4]
 680:lvgl/src/core/lv_refr.c ****         if(info.res == LV_COVER_RES_MASKED) return NULL;
 898              		.loc 1 680 9 is_stmt 1 view .LVU312
 899 0024 6A46     		mov	r2, sp
 900 0026 1221     		movs	r1, #18
 901 0028 2046     		mov	r0, r4
 902 002a FFF7FEFF 		bl	lv_event_send
 903              	.LVL81:
 681:lvgl/src/core/lv_refr.c **** 
 904              		.loc 1 681 9 view .LVU313
 681:lvgl/src/core/lv_refr.c **** 
 905              		.loc 1 681 16 is_stmt 0 view .LVU314
 906 002e 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 681:lvgl/src/core/lv_refr.c **** 
 907              		.loc 1 681 11 view .LVU315
 908 0032 022B     		cmp	r3, #2
 909 0034 06D0     		beq	.L60
 683:lvgl/src/core/lv_refr.c ****         uint32_t child_cnt = lv_obj_get_child_cnt(obj);
 910              		.loc 1 683 9 is_stmt 1 view .LVU316
 684:lvgl/src/core/lv_refr.c ****         for(i = 0; i < child_cnt; i++) {
 911              		.loc 1 684 9 view .LVU317
 684:lvgl/src/core/lv_refr.c ****         for(i = 0; i < child_cnt; i++) {
 912              		.loc 1 684 30 is_stmt 0 view .LVU318
 913 0036 2046     		mov	r0, r4
 914 0038 FFF7FEFF 		bl	lv_obj_get_child_cnt
 915              	.LVL82:
 916 003c 0746     		mov	r7, r0
 917              	.LVL83:
 685:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 918              		.loc 1 685 9 is_stmt 1 view .LVU319
 685:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 919              		.loc 1 685 15 is_stmt 0 view .LVU320
ARM GAS  C:\usertemp\ccxmAei4.s 			page 40


 920 003e 0025     		movs	r5, #0
 921              	.LBE77:
 673:lvgl/src/core/lv_refr.c **** 
 922              		.loc 1 673 16 view .LVU321
 923 0040 2B46     		mov	r3, r5
 924              	.LBB79:
 685:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 925              		.loc 1 685 9 view .LVU322
 926 0042 02E0     		b	.L52
 927              	.LVL84:
 928              	.L60:
 681:lvgl/src/core/lv_refr.c **** 
 929              		.loc 1 681 45 is_stmt 1 discriminator 1 view .LVU323
 681:lvgl/src/core/lv_refr.c **** 
 930              		.loc 1 681 52 is_stmt 0 discriminator 1 view .LVU324
 931 0044 0023     		movs	r3, #0
 932 0046 13E0     		b	.L49
 933              	.LVL85:
 934              	.L61:
 685:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 935              		.loc 1 685 36 is_stmt 1 discriminator 2 view .LVU325
 936 0048 0135     		adds	r5, r5, #1
 937              	.LVL86:
 938              	.L52:
 685:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 939              		.loc 1 685 22 discriminator 1 view .LVU326
 940 004a BD42     		cmp	r5, r7
 941 004c 09D2     		bcs	.L53
 942              	.LBB78:
 686:lvgl/src/core/lv_refr.c ****             found_p = lv_refr_get_top_obj(area_p, child);
 943              		.loc 1 686 13 view .LVU327
 686:lvgl/src/core/lv_refr.c ****             found_p = lv_refr_get_top_obj(area_p, child);
 944              		.loc 1 686 35 is_stmt 0 view .LVU328
 945 004e A368     		ldr	r3, [r4, #8]
 946              	.LVL87:
 686:lvgl/src/core/lv_refr.c ****             found_p = lv_refr_get_top_obj(area_p, child);
 947              		.loc 1 686 46 view .LVU329
 948 0050 1B68     		ldr	r3, [r3]
 949              	.LVL88:
 687:lvgl/src/core/lv_refr.c **** 
 950              		.loc 1 687 13 is_stmt 1 view .LVU330
 687:lvgl/src/core/lv_refr.c **** 
 951              		.loc 1 687 23 is_stmt 0 view .LVU331
 952 0052 53F82510 		ldr	r1, [r3, r5, lsl #2]
 953 0056 3046     		mov	r0, r6
 954 0058 FFF7D2FF 		bl	lv_refr_get_top_obj
 955              	.LVL89:
 690:lvgl/src/core/lv_refr.c ****                 break;
 956              		.loc 1 690 13 is_stmt 1 view .LVU332
 690:lvgl/src/core/lv_refr.c ****                 break;
 957              		.loc 1 690 15 is_stmt 0 view .LVU333
 958 005c 0346     		mov	r3, r0
 959 005e 0028     		cmp	r0, #0
 960 0060 F2D0     		beq	.L61
 961              	.LVL90:
 962              	.L53:
 690:lvgl/src/core/lv_refr.c ****                 break;
ARM GAS  C:\usertemp\ccxmAei4.s 			page 41


 963              		.loc 1 690 15 view .LVU334
 964              	.LBE78:
 696:lvgl/src/core/lv_refr.c ****             if(info.res == LV_COVER_RES_COVER) {
 965              		.loc 1 696 9 is_stmt 1 view .LVU335
 696:lvgl/src/core/lv_refr.c ****             if(info.res == LV_COVER_RES_COVER) {
 966              		.loc 1 696 11 is_stmt 0 view .LVU336
 967 0062 2BB9     		cbnz	r3, .L49
 697:lvgl/src/core/lv_refr.c ****                 found_p = obj;
 968              		.loc 1 697 13 is_stmt 1 view .LVU337
 697:lvgl/src/core/lv_refr.c ****                 found_p = obj;
 969              		.loc 1 697 20 is_stmt 0 view .LVU338
 970 0064 9DF80020 		ldrb	r2, [sp]	@ zero_extendqisi2
 697:lvgl/src/core/lv_refr.c ****                 found_p = obj;
 971              		.loc 1 697 15 view .LVU339
 972 0068 12B9     		cbnz	r2, .L49
 698:lvgl/src/core/lv_refr.c ****             }
 973              		.loc 1 698 25 view .LVU340
 974 006a 2346     		mov	r3, r4
 975              	.LVL91:
 698:lvgl/src/core/lv_refr.c ****             }
 976              		.loc 1 698 25 view .LVU341
 977 006c 00E0     		b	.L49
 978              	.LVL92:
 979              	.L56:
 698:lvgl/src/core/lv_refr.c ****             }
 980              		.loc 1 698 25 view .LVU342
 981              	.LBE79:
 673:lvgl/src/core/lv_refr.c **** 
 982              		.loc 1 673 16 view .LVU343
 983 006e 0023     		movs	r3, #0
 984              	.LVL93:
 985              	.L49:
 704:lvgl/src/core/lv_refr.c **** 
 986              		.loc 1 704 1 view .LVU344
 987 0070 1846     		mov	r0, r3
 988 0072 03B0     		add	sp, sp, #12
 989              	.LCFI12:
 990              		.cfi_remember_state
 991              		.cfi_def_cfa_offset 20
 992              		@ sp needed
 993 0074 F0BD     		pop	{r4, r5, r6, r7, pc}
 994              	.LVL94:
 995              	.L57:
 996              	.LCFI13:
 997              		.cfi_restore_state
 673:lvgl/src/core/lv_refr.c **** 
 998              		.loc 1 673 16 view .LVU345
 999 0076 0023     		movs	r3, #0
 1000              	.LVL95:
 673:lvgl/src/core/lv_refr.c **** 
 1001              		.loc 1 673 16 view .LVU346
 1002 0078 FAE7     		b	.L49
 1003              		.cfi_endproc
 1004              	.LFE175:
 1006              		.section	.text.lv_refr_join_area,"ax",%progbits
 1007              		.align	1
 1008              		.syntax unified
ARM GAS  C:\usertemp\ccxmAei4.s 			page 42


 1009              		.thumb
 1010              		.thumb_func
 1012              	lv_refr_join_area:
 1013              	.LFB171:
 450:lvgl/src/core/lv_refr.c ****     uint32_t join_from;
 1014              		.loc 1 450 1 is_stmt 1 view -0
 1015              		.cfi_startproc
 1016              		@ args = 0, pretend = 0, frame = 8
 1017              		@ frame_needed = 0, uses_anonymous_args = 0
 1018 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1019              	.LCFI14:
 1020              		.cfi_def_cfa_offset 28
 1021              		.cfi_offset 4, -28
 1022              		.cfi_offset 5, -24
 1023              		.cfi_offset 6, -20
 1024              		.cfi_offset 7, -16
 1025              		.cfi_offset 8, -12
 1026              		.cfi_offset 9, -8
 1027              		.cfi_offset 14, -4
 1028 0004 83B0     		sub	sp, sp, #12
 1029              	.LCFI15:
 1030              		.cfi_def_cfa_offset 40
 451:lvgl/src/core/lv_refr.c ****     uint32_t join_in;
 1031              		.loc 1 451 5 view .LVU348
 452:lvgl/src/core/lv_refr.c ****     lv_area_t joined_area;
 1032              		.loc 1 452 5 view .LVU349
 453:lvgl/src/core/lv_refr.c ****     for(join_in = 0; join_in < disp_refr->inv_p; join_in++) {
 1033              		.loc 1 453 5 view .LVU350
 454:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[join_in] != 0) continue;
 1034              		.loc 1 454 5 view .LVU351
 1035              	.LVL96:
 454:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[join_in] != 0) continue;
 1036              		.loc 1 454 17 is_stmt 0 view .LVU352
 1037 0006 0025     		movs	r5, #0
 454:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[join_in] != 0) continue;
 1038              		.loc 1 454 5 view .LVU353
 1039 0008 51E0     		b	.L63
 1040              	.LVL97:
 1041              	.L66:
 458:lvgl/src/core/lv_refr.c ****             /*Handle only unjoined areas and ignore itself*/
 1042              		.loc 1 458 67 is_stmt 1 discriminator 2 view .LVU354
 1043 000a 0134     		adds	r4, r4, #1
 1044              	.LVL98:
 1045              	.L65:
 458:lvgl/src/core/lv_refr.c ****             /*Handle only unjoined areas and ignore itself*/
 1046              		.loc 1 458 38 discriminator 1 view .LVU355
 458:lvgl/src/core/lv_refr.c ****             /*Handle only unjoined areas and ignore itself*/
 1047              		.loc 1 458 49 is_stmt 0 discriminator 1 view .LVU356
 1048 000c 304B     		ldr	r3, .L71
 1049 000e 1B68     		ldr	r3, [r3]
 1050 0010 B3F85021 		ldrh	r2, [r3, #336]
 458:lvgl/src/core/lv_refr.c ****             /*Handle only unjoined areas and ignore itself*/
 1051              		.loc 1 458 38 discriminator 1 view .LVU357
 1052 0014 A242     		cmp	r2, r4
 1053 0016 49D9     		bls	.L64
 460:lvgl/src/core/lv_refr.c ****                 continue;
 1054              		.loc 1 460 13 is_stmt 1 view .LVU358
ARM GAS  C:\usertemp\ccxmAei4.s 			page 43


 460:lvgl/src/core/lv_refr.c ****                 continue;
 1055              		.loc 1 460 42 is_stmt 0 view .LVU359
 1056 0018 1A19     		adds	r2, r3, r4
 1057 001a 92F83021 		ldrb	r2, [r2, #304]	@ zero_extendqisi2
 460:lvgl/src/core/lv_refr.c ****                 continue;
 1058              		.loc 1 460 15 view .LVU360
 1059 001e 002A     		cmp	r2, #0
 1060 0020 F3D1     		bne	.L66
 460:lvgl/src/core/lv_refr.c ****                 continue;
 1061              		.loc 1 460 59 discriminator 2 view .LVU361
 1062 0022 AC42     		cmp	r4, r5
 1063 0024 F1D0     		beq	.L66
 465:lvgl/src/core/lv_refr.c ****                 continue;
 1064              		.loc 1 465 13 is_stmt 1 view .LVU362
 465:lvgl/src/core/lv_refr.c ****                 continue;
 1065              		.loc 1 465 31 is_stmt 0 view .LVU363
 1066 0026 A81D     		adds	r0, r5, #6
 465:lvgl/src/core/lv_refr.c ****                 continue;
 1067              		.loc 1 465 63 view .LVU364
 1068 0028 A11D     		adds	r1, r4, #6
 465:lvgl/src/core/lv_refr.c ****                 continue;
 1069              		.loc 1 465 16 view .LVU365
 1070 002a 03EBC101 		add	r1, r3, r1, lsl #3
 1071 002e 03EBC000 		add	r0, r3, r0, lsl #3
 1072 0032 FFF7FEFF 		bl	_lv_area_is_on
 1073              	.LVL99:
 465:lvgl/src/core/lv_refr.c ****                 continue;
 1074              		.loc 1 465 15 discriminator 1 view .LVU366
 1075 0036 0028     		cmp	r0, #0
 1076 0038 E7D0     		beq	.L66
 469:lvgl/src/core/lv_refr.c **** 
 1077              		.loc 1 469 13 is_stmt 1 view .LVU367
 469:lvgl/src/core/lv_refr.c **** 
 1078              		.loc 1 469 51 is_stmt 0 view .LVU368
 1079 003a DFF89480 		ldr	r8, .L71
 1080 003e D8F80030 		ldr	r3, [r8]
 469:lvgl/src/core/lv_refr.c **** 
 1081              		.loc 1 469 41 view .LVU369
 1082 0042 A91D     		adds	r1, r5, #6
 1083 0044 CE00     		lsls	r6, r1, #3
 469:lvgl/src/core/lv_refr.c **** 
 1084              		.loc 1 469 73 view .LVU370
 1085 0046 A21D     		adds	r2, r4, #6
 1086 0048 4FEAC209 		lsl	r9, r2, #3
 469:lvgl/src/core/lv_refr.c **** 
 1087              		.loc 1 469 13 view .LVU371
 1088 004c 03EBC202 		add	r2, r3, r2, lsl #3
 1089 0050 03EBC101 		add	r1, r3, r1, lsl #3
 1090 0054 6846     		mov	r0, sp
 1091 0056 FFF7FEFF 		bl	_lv_area_join
 1092              	.LVL100:
 472:lvgl/src/core/lv_refr.c ****                                                  lv_area_get_size(&disp_refr->inv_areas[join_from])
 1093              		.loc 1 472 13 is_stmt 1 view .LVU372
 472:lvgl/src/core/lv_refr.c ****                                                  lv_area_get_size(&disp_refr->inv_areas[join_from])
 1094              		.loc 1 472 16 is_stmt 0 view .LVU373
 1095 005a 6846     		mov	r0, sp
 1096 005c FFF7FEFF 		bl	lv_area_get_size
ARM GAS  C:\usertemp\ccxmAei4.s 			page 44


 1097              	.LVL101:
 1098 0060 0746     		mov	r7, r0
 472:lvgl/src/core/lv_refr.c ****                                                  lv_area_get_size(&disp_refr->inv_areas[join_from])
 1099              		.loc 1 472 77 discriminator 1 view .LVU374
 1100 0062 D8F80000 		ldr	r0, [r8]
 472:lvgl/src/core/lv_refr.c ****                                                  lv_area_get_size(&disp_refr->inv_areas[join_from])
 1101              		.loc 1 472 50 discriminator 1 view .LVU375
 1102 0066 3044     		add	r0, r0, r6
 1103 0068 FFF7FEFF 		bl	lv_area_get_size
 1104              	.LVL102:
 1105 006c 0646     		mov	r6, r0
 473:lvgl/src/core/lv_refr.c ****                 lv_area_copy(&disp_refr->inv_areas[join_in], &joined_area);
 1106              		.loc 1 473 77 view .LVU376
 1107 006e D8F80000 		ldr	r0, [r8]
 473:lvgl/src/core/lv_refr.c ****                 lv_area_copy(&disp_refr->inv_areas[join_in], &joined_area);
 1108              		.loc 1 473 50 view .LVU377
 1109 0072 4844     		add	r0, r0, r9
 1110 0074 FFF7FEFF 		bl	lv_area_get_size
 1111              	.LVL103:
 472:lvgl/src/core/lv_refr.c ****                                                  lv_area_get_size(&disp_refr->inv_areas[join_from])
 1112              		.loc 1 472 99 view .LVU378
 1113 0078 0644     		add	r6, r6, r0
 472:lvgl/src/core/lv_refr.c ****                                                  lv_area_get_size(&disp_refr->inv_areas[join_from])
 1114              		.loc 1 472 15 view .LVU379
 1115 007a B742     		cmp	r7, r6
 1116 007c C5D2     		bcs	.L66
 474:lvgl/src/core/lv_refr.c **** 
 1117              		.loc 1 474 17 is_stmt 1 view .LVU380
 474:lvgl/src/core/lv_refr.c **** 
 1118              		.loc 1 474 40 is_stmt 0 view .LVU381
 1119 007e D8F80020 		ldr	r2, [r8]
 1120              	.LVL104:
 1121              	.LBB80:
 1122              	.LBI80:
 110:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 1123              		.loc 2 110 20 is_stmt 1 view .LVU382
 1124              	.LBB81:
 112:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 1125              		.loc 2 112 5 view .LVU383
 112:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 1126              		.loc 2 112 19 is_stmt 0 view .LVU384
 1127 0082 BDF90010 		ldrsh	r1, [sp]
 112:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 1128              		.loc 2 112 14 view .LVU385
 1129 0086 AB1D     		adds	r3, r5, #6
 1130 0088 22F83310 		strh	r1, [r2, r3, lsl #3]	@ movhi
 113:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 1131              		.loc 2 113 5 is_stmt 1 view .LVU386
 113:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 1132              		.loc 2 113 19 is_stmt 0 view .LVU387
 1133 008c BDF90210 		ldrsh	r1, [sp, #2]
 113:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 1134              		.loc 2 113 14 view .LVU388
 1135 0090 02EBC303 		add	r3, r2, r3, lsl #3
 1136              	.LVL105:
 113:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 1137              		.loc 2 113 14 view .LVU389
ARM GAS  C:\usertemp\ccxmAei4.s 			page 45


 1138 0094 5980     		strh	r1, [r3, #2]	@ movhi
 114:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 1139              		.loc 2 114 5 is_stmt 1 view .LVU390
 114:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 1140              		.loc 2 114 19 is_stmt 0 view .LVU391
 1141 0096 BDF90410 		ldrsh	r1, [sp, #4]
 114:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 1142              		.loc 2 114 14 view .LVU392
 1143 009a 9980     		strh	r1, [r3, #4]	@ movhi
 115:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1144              		.loc 2 115 5 is_stmt 1 view .LVU393
 115:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1145              		.loc 2 115 19 is_stmt 0 view .LVU394
 1146 009c BDF90610 		ldrsh	r1, [sp, #6]
 115:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1147              		.loc 2 115 14 view .LVU395
 1148 00a0 D980     		strh	r1, [r3, #6]	@ movhi
 1149              	.LVL106:
 115:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1150              		.loc 2 115 14 view .LVU396
 1151              	.LBE81:
 1152              	.LBE80:
 477:lvgl/src/core/lv_refr.c ****             }
 1153              		.loc 1 477 17 is_stmt 1 view .LVU397
 477:lvgl/src/core/lv_refr.c ****             }
 1154              		.loc 1 477 55 is_stmt 0 view .LVU398
 1155 00a2 2244     		add	r2, r2, r4
 1156 00a4 0123     		movs	r3, #1
 1157 00a6 82F83031 		strb	r3, [r2, #304]
 1158 00aa AEE7     		b	.L66
 1159              	.LVL107:
 1160              	.L64:
 454:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[join_in] != 0) continue;
 1161              		.loc 1 454 57 is_stmt 1 discriminator 2 view .LVU399
 1162 00ac 0135     		adds	r5, r5, #1
 1163              	.LVL108:
 1164              	.L63:
 454:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[join_in] != 0) continue;
 1165              		.loc 1 454 30 discriminator 1 view .LVU400
 454:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[join_in] != 0) continue;
 1166              		.loc 1 454 41 is_stmt 0 discriminator 1 view .LVU401
 1167 00ae 084B     		ldr	r3, .L71
 1168 00b0 1B68     		ldr	r3, [r3]
 1169 00b2 B3F85021 		ldrh	r2, [r3, #336]
 454:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[join_in] != 0) continue;
 1170              		.loc 1 454 30 discriminator 1 view .LVU402
 1171 00b6 AA42     		cmp	r2, r5
 1172 00b8 06D9     		bls	.L70
 455:lvgl/src/core/lv_refr.c **** 
 1173              		.loc 1 455 9 is_stmt 1 view .LVU403
 455:lvgl/src/core/lv_refr.c **** 
 1174              		.loc 1 455 38 is_stmt 0 view .LVU404
 1175 00ba 2B44     		add	r3, r3, r5
 1176 00bc 93F83031 		ldrb	r3, [r3, #304]	@ zero_extendqisi2
 455:lvgl/src/core/lv_refr.c **** 
 1177              		.loc 1 455 11 view .LVU405
 1178 00c0 002B     		cmp	r3, #0
ARM GAS  C:\usertemp\ccxmAei4.s 			page 46


 1179 00c2 F3D1     		bne	.L64
 458:lvgl/src/core/lv_refr.c ****             /*Handle only unjoined areas and ignore itself*/
 1180              		.loc 1 458 23 view .LVU406
 1181 00c4 0024     		movs	r4, #0
 1182 00c6 A1E7     		b	.L65
 1183              	.L70:
 481:lvgl/src/core/lv_refr.c **** 
 1184              		.loc 1 481 1 view .LVU407
 1185 00c8 03B0     		add	sp, sp, #12
 1186              	.LCFI16:
 1187              		.cfi_def_cfa_offset 28
 1188              		@ sp needed
 1189 00ca BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1190              	.LVL109:
 1191              	.L72:
 481:lvgl/src/core/lv_refr.c **** 
 1192              		.loc 1 481 1 view .LVU408
 1193 00ce 00BF     		.align	2
 1194              	.L71:
 1195 00d0 00000000 		.word	disp_refr
 1196              		.cfi_endproc
 1197              	.LFE171:
 1199              		.section	.text.lv_layer_sys,"ax",%progbits
 1200              		.align	1
 1201              		.syntax unified
 1202              		.thumb
 1203              		.thumb_func
 1205              	lv_layer_sys:
 1206              	.LFB158:
 1207              		.file 3 "lvgl/src/core/lv_disp.h"
   1:lvgl/src/core/lv_disp.h **** /**
   2:lvgl/src/core/lv_disp.h ****  * @file lv_disp.h
   3:lvgl/src/core/lv_disp.h ****  *
   4:lvgl/src/core/lv_disp.h ****  */
   5:lvgl/src/core/lv_disp.h **** 
   6:lvgl/src/core/lv_disp.h **** #ifndef LV_DISP_H
   7:lvgl/src/core/lv_disp.h **** #define LV_DISP_H
   8:lvgl/src/core/lv_disp.h **** 
   9:lvgl/src/core/lv_disp.h **** #ifdef __cplusplus
  10:lvgl/src/core/lv_disp.h **** extern "C" {
  11:lvgl/src/core/lv_disp.h **** #endif
  12:lvgl/src/core/lv_disp.h **** 
  13:lvgl/src/core/lv_disp.h **** /*********************
  14:lvgl/src/core/lv_disp.h ****  *      INCLUDES
  15:lvgl/src/core/lv_disp.h ****  *********************/
  16:lvgl/src/core/lv_disp.h **** #include "../hal/lv_hal.h"
  17:lvgl/src/core/lv_disp.h **** #include "lv_obj.h"
  18:lvgl/src/core/lv_disp.h **** #include "lv_theme.h"
  19:lvgl/src/core/lv_disp.h **** 
  20:lvgl/src/core/lv_disp.h **** /*********************
  21:lvgl/src/core/lv_disp.h ****  *      DEFINES
  22:lvgl/src/core/lv_disp.h ****  *********************/
  23:lvgl/src/core/lv_disp.h **** 
  24:lvgl/src/core/lv_disp.h **** /**********************
  25:lvgl/src/core/lv_disp.h ****  *      TYPEDEFS
  26:lvgl/src/core/lv_disp.h ****  **********************/
  27:lvgl/src/core/lv_disp.h **** 
ARM GAS  C:\usertemp\ccxmAei4.s 			page 47


  28:lvgl/src/core/lv_disp.h **** typedef enum {
  29:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  33:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON,
  39:lvgl/src/core/lv_disp.h **** } lv_scr_load_anim_t;
  40:lvgl/src/core/lv_disp.h **** 
  41:lvgl/src/core/lv_disp.h **** /**********************
  42:lvgl/src/core/lv_disp.h ****  * GLOBAL PROTOTYPES
  43:lvgl/src/core/lv_disp.h ****  **********************/
  44:lvgl/src/core/lv_disp.h **** 
  45:lvgl/src/core/lv_disp.h **** /**
  46:lvgl/src/core/lv_disp.h ****  * Return with a pointer to the active screen
  47:lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  48:lvgl/src/core/lv_disp.h ****  * screen)
  49:lvgl/src/core/lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  50:lvgl/src/core/lv_disp.h ****  */
  51:lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  52:lvgl/src/core/lv_disp.h **** 
  53:lvgl/src/core/lv_disp.h **** /**
  54:lvgl/src/core/lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  55:lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  56:lvgl/src/core/lv_disp.h ****  * screen)
  57:lvgl/src/core/lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  58:lvgl/src/core/lv_disp.h ****  */
  59:lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  60:lvgl/src/core/lv_disp.h **** 
  61:lvgl/src/core/lv_disp.h **** /**
  62:lvgl/src/core/lv_disp.h ****  * Make a screen active
  63:lvgl/src/core/lv_disp.h ****  * @param scr pointer to a screen
  64:lvgl/src/core/lv_disp.h ****  */
  65:lvgl/src/core/lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  66:lvgl/src/core/lv_disp.h **** 
  67:lvgl/src/core/lv_disp.h **** /**
  68:lvgl/src/core/lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  69:lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  70:lvgl/src/core/lv_disp.h ****  * @return pointer to the top layer object (transparent screen sized lv_obj)
  71:lvgl/src/core/lv_disp.h ****  */
  72:lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  73:lvgl/src/core/lv_disp.h **** 
  74:lvgl/src/core/lv_disp.h **** /**
  75:lvgl/src/core/lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  76:lvgl/src/core/lv_disp.h ****  * layer)
  77:lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which sys. layer should be retrieved. (NULL to use the default sc
  78:lvgl/src/core/lv_disp.h ****  * @return pointer to the sys layer object (transparent screen sized lv_obj)
  79:lvgl/src/core/lv_disp.h ****  */
  80:lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  81:lvgl/src/core/lv_disp.h **** 
  82:lvgl/src/core/lv_disp.h **** /**
  83:lvgl/src/core/lv_disp.h ****  * Set the theme of a display
  84:lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
ARM GAS  C:\usertemp\ccxmAei4.s 			page 48


  85:lvgl/src/core/lv_disp.h ****  */
  86:lvgl/src/core/lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  87:lvgl/src/core/lv_disp.h **** 
  88:lvgl/src/core/lv_disp.h **** /**
  89:lvgl/src/core/lv_disp.h ****  * Get the theme of a display
  90:lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
  91:lvgl/src/core/lv_disp.h ****  * @return the display's theme (can be NULL)
  92:lvgl/src/core/lv_disp.h ****  */
  93:lvgl/src/core/lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
  94:lvgl/src/core/lv_disp.h **** 
  95:lvgl/src/core/lv_disp.h **** /**
  96:lvgl/src/core/lv_disp.h ****  * Set the background color of a display
  97:lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
  98:lvgl/src/core/lv_disp.h ****  * @param color color of the background
  99:lvgl/src/core/lv_disp.h ****  */
 100:lvgl/src/core/lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 101:lvgl/src/core/lv_disp.h **** 
 102:lvgl/src/core/lv_disp.h **** /**
 103:lvgl/src/core/lv_disp.h ****  * Set the background image of a display
 104:lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
 105:lvgl/src/core/lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 106:lvgl/src/core/lv_disp.h ****  */
 107:lvgl/src/core/lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 108:lvgl/src/core/lv_disp.h **** 
 109:lvgl/src/core/lv_disp.h **** /**
 110:lvgl/src/core/lv_disp.h ****  * Set opacity of the background
 111:lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
 112:lvgl/src/core/lv_disp.h ****  * @param opa opacity (0..255)
 113:lvgl/src/core/lv_disp.h ****  */
 114:lvgl/src/core/lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 115:lvgl/src/core/lv_disp.h **** 
 116:lvgl/src/core/lv_disp.h **** /**
 117:lvgl/src/core/lv_disp.h ****  * Switch screen with animation
 118:lvgl/src/core/lv_disp.h ****  * @param scr pointer to the new screen to load
 119:lvgl/src/core/lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`. E.g.  `LV_SCR_LOAD_ANIM_MOVE_L
 120:lvgl/src/core/lv_disp.h ****  * @param time time of the animation
 121:lvgl/src/core/lv_disp.h ****  * @param delay delay before the transition
 122:lvgl/src/core/lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 123:lvgl/src/core/lv_disp.h ****  */
 124:lvgl/src/core/lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 125:lvgl/src/core/lv_disp.h **** 
 126:lvgl/src/core/lv_disp.h **** /**
 127:lvgl/src/core/lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 128:lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to get the overall smallest inactivity)
 129:lvgl/src/core/lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 130:lvgl/src/core/lv_disp.h ****  */
 131:lvgl/src/core/lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 132:lvgl/src/core/lv_disp.h **** 
 133:lvgl/src/core/lv_disp.h **** /**
 134:lvgl/src/core/lv_disp.h ****  * Manually trigger an activity on a display
 135:lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 136:lvgl/src/core/lv_disp.h ****  */
 137:lvgl/src/core/lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 138:lvgl/src/core/lv_disp.h **** 
 139:lvgl/src/core/lv_disp.h **** /**
 140:lvgl/src/core/lv_disp.h ****  * Clean any CPU cache that is related to the display.
 141:lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
ARM GAS  C:\usertemp\ccxmAei4.s 			page 49


 142:lvgl/src/core/lv_disp.h ****  */
 143:lvgl/src/core/lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 144:lvgl/src/core/lv_disp.h **** 
 145:lvgl/src/core/lv_disp.h **** /**
 146:lvgl/src/core/lv_disp.h ****  * Get a pointer to the screen refresher timer to
 147:lvgl/src/core/lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 148:lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
 149:lvgl/src/core/lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 150:lvgl/src/core/lv_disp.h ****  */
 151:lvgl/src/core/lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
 152:lvgl/src/core/lv_disp.h **** 
 153:lvgl/src/core/lv_disp.h **** /*------------------------------------------------
 154:lvgl/src/core/lv_disp.h ****  * To improve backward compatibility
 155:lvgl/src/core/lv_disp.h ****  * Recommended only if you have one display
 156:lvgl/src/core/lv_disp.h ****  *------------------------------------------------*/
 157:lvgl/src/core/lv_disp.h **** 
 158:lvgl/src/core/lv_disp.h **** /**
 159:lvgl/src/core/lv_disp.h ****  * Get the active screen of the default display
 160:lvgl/src/core/lv_disp.h ****  * @return pointer to the active screen
 161:lvgl/src/core/lv_disp.h ****  */
 162:lvgl/src/core/lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
 163:lvgl/src/core/lv_disp.h **** {
 164:lvgl/src/core/lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
 165:lvgl/src/core/lv_disp.h **** }
 166:lvgl/src/core/lv_disp.h **** 
 167:lvgl/src/core/lv_disp.h **** /**
 168:lvgl/src/core/lv_disp.h ****  * Get the top layer  of the default display
 169:lvgl/src/core/lv_disp.h ****  * @return pointer to the top layer
 170:lvgl/src/core/lv_disp.h ****  */
 171:lvgl/src/core/lv_disp.h **** static inline lv_obj_t * lv_layer_top(void)
 172:lvgl/src/core/lv_disp.h **** {
 173:lvgl/src/core/lv_disp.h ****     return lv_disp_get_layer_top(lv_disp_get_default());
 174:lvgl/src/core/lv_disp.h **** }
 175:lvgl/src/core/lv_disp.h **** 
 176:lvgl/src/core/lv_disp.h **** /**
 177:lvgl/src/core/lv_disp.h ****  * Get the active screen of the default display
 178:lvgl/src/core/lv_disp.h ****  * @return  pointer to the sys layer
 179:lvgl/src/core/lv_disp.h ****  */
 180:lvgl/src/core/lv_disp.h **** static inline lv_obj_t * lv_layer_sys(void)
 181:lvgl/src/core/lv_disp.h **** {
 1208              		.loc 3 181 1 is_stmt 1 view -0
 1209              		.cfi_startproc
 1210              		@ args = 0, pretend = 0, frame = 0
 1211              		@ frame_needed = 0, uses_anonymous_args = 0
 1212 0000 08B5     		push	{r3, lr}
 1213              	.LCFI17:
 1214              		.cfi_def_cfa_offset 8
 1215              		.cfi_offset 3, -8
 1216              		.cfi_offset 14, -4
 182:lvgl/src/core/lv_disp.h ****     return lv_disp_get_layer_sys(lv_disp_get_default());
 1217              		.loc 3 182 5 view .LVU410
 1218              		.loc 3 182 12 is_stmt 0 view .LVU411
 1219 0002 FFF7FEFF 		bl	lv_disp_get_default
 1220              	.LVL110:
 1221              		.loc 3 182 12 discriminator 1 view .LVU412
 1222 0006 FFF7FEFF 		bl	lv_disp_get_layer_sys
 1223              	.LVL111:
ARM GAS  C:\usertemp\ccxmAei4.s 			page 50


 183:lvgl/src/core/lv_disp.h **** }
 1224              		.loc 3 183 1 view .LVU413
 1225 000a 08BD     		pop	{r3, pc}
 1226              		.cfi_endproc
 1227              	.LFE158:
 1229              		.section	.text.draw_buf_rotate,"ax",%progbits
 1230              		.align	1
 1231              		.syntax unified
 1232              		.thumb
 1233              		.thumb_func
 1235              	draw_buf_rotate:
 1236              	.LVL112:
 1237              	.LFB182:
 887:lvgl/src/core/lv_refr.c ****     lv_disp_drv_t * drv = disp_refr->driver;
 1238              		.loc 1 887 1 is_stmt 1 view -0
 1239              		.cfi_startproc
 1240              		@ args = 0, pretend = 0, frame = 32
 1241              		@ frame_needed = 0, uses_anonymous_args = 0
 887:lvgl/src/core/lv_refr.c ****     lv_disp_drv_t * drv = disp_refr->driver;
 1242              		.loc 1 887 1 is_stmt 0 view .LVU415
 1243 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1244              	.LCFI18:
 1245              		.cfi_def_cfa_offset 36
 1246              		.cfi_offset 4, -36
 1247              		.cfi_offset 5, -32
 1248              		.cfi_offset 6, -28
 1249              		.cfi_offset 7, -24
 1250              		.cfi_offset 8, -20
 1251              		.cfi_offset 9, -16
 1252              		.cfi_offset 10, -12
 1253              		.cfi_offset 11, -8
 1254              		.cfi_offset 14, -4
 1255 0004 8BB0     		sub	sp, sp, #44
 1256              	.LCFI19:
 1257              		.cfi_def_cfa_offset 80
 1258 0006 8046     		mov	r8, r0
 1259 0008 0391     		str	r1, [sp, #12]
 888:lvgl/src/core/lv_refr.c ****     if(disp_refr->driver->full_refresh && drv->sw_rotate) {
 1260              		.loc 1 888 5 is_stmt 1 view .LVU416
 888:lvgl/src/core/lv_refr.c ****     if(disp_refr->driver->full_refresh && drv->sw_rotate) {
 1261              		.loc 1 888 36 is_stmt 0 view .LVU417
 1262 000a 854B     		ldr	r3, .L106
 1263 000c 1868     		ldr	r0, [r3]
 1264              	.LVL113:
 888:lvgl/src/core/lv_refr.c ****     if(disp_refr->driver->full_refresh && drv->sw_rotate) {
 1265              		.loc 1 888 21 view .LVU418
 1266 000e 0468     		ldr	r4, [r0]
 1267              	.LVL114:
 889:lvgl/src/core/lv_refr.c ****         LV_LOG_ERROR("cannot rotate a full refreshed display!");
 1268              		.loc 1 889 5 is_stmt 1 view .LVU419
 889:lvgl/src/core/lv_refr.c ****         LV_LOG_ERROR("cannot rotate a full refreshed display!");
 1269              		.loc 1 889 8 is_stmt 0 view .LVU420
 1270 0010 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 889:lvgl/src/core/lv_refr.c ****         LV_LOG_ERROR("cannot rotate a full refreshed display!");
 1271              		.loc 1 889 7 view .LVU421
 1272 0012 13F0020F 		tst	r3, #2
 1273 0016 02D0     		beq	.L76
ARM GAS  C:\usertemp\ccxmAei4.s 			page 51


 889:lvgl/src/core/lv_refr.c ****         LV_LOG_ERROR("cannot rotate a full refreshed display!");
 1274              		.loc 1 889 40 discriminator 1 view .LVU422
 1275 0018 13F0040F 		tst	r3, #4
 1276 001c 07D1     		bne	.L75
 1277              	.L76:
 893:lvgl/src/core/lv_refr.c ****         draw_buf_rotate_180(drv, area, color_p);
 1278              		.loc 1 893 5 is_stmt 1 view .LVU423
 893:lvgl/src/core/lv_refr.c ****         draw_buf_rotate_180(drv, area, color_p);
 1279              		.loc 1 893 21 is_stmt 0 view .LVU424
 1280 001e 03F03003 		and	r3, r3, #48
 893:lvgl/src/core/lv_refr.c ****         draw_buf_rotate_180(drv, area, color_p);
 1281              		.loc 1 893 7 view .LVU425
 1282 0022 202B     		cmp	r3, #32
 1283 0024 06D0     		beq	.L96
 897:lvgl/src/core/lv_refr.c ****         /*Allocate a temporary buffer to store rotated image*/
 1284              		.loc 1 897 10 is_stmt 1 view .LVU426
 897:lvgl/src/core/lv_refr.c ****         /*Allocate a temporary buffer to store rotated image*/
 1285              		.loc 1 897 12 is_stmt 0 view .LVU427
 1286 0026 302B     		cmp	r3, #48
 1287 0028 18BF     		it	ne
 1288 002a 102B     		cmpne	r3, #16
 1289 002c 0ED0     		beq	.L97
 1290              	.LVL115:
 1291              	.L75:
 970:lvgl/src/core/lv_refr.c **** 
 1292              		.loc 1 970 1 view .LVU428
 1293 002e 0BB0     		add	sp, sp, #44
 1294              	.LCFI20:
 1295              		.cfi_remember_state
 1296              		.cfi_def_cfa_offset 36
 1297              		@ sp needed
 1298 0030 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1299              	.LVL116:
 1300              	.L96:
 1301              	.LCFI21:
 1302              		.cfi_restore_state
 894:lvgl/src/core/lv_refr.c ****         call_flush_cb(drv, area, color_p);
 1303              		.loc 1 894 9 is_stmt 1 view .LVU429
 1304 0034 039D     		ldr	r5, [sp, #12]
 1305 0036 2A46     		mov	r2, r5
 1306 0038 4146     		mov	r1, r8
 1307              	.LVL117:
 894:lvgl/src/core/lv_refr.c ****         call_flush_cb(drv, area, color_p);
 1308              		.loc 1 894 9 is_stmt 0 view .LVU430
 1309 003a 2046     		mov	r0, r4
 1310 003c FFF7FEFF 		bl	draw_buf_rotate_180
 1311              	.LVL118:
 895:lvgl/src/core/lv_refr.c ****     }
 1312              		.loc 1 895 9 is_stmt 1 view .LVU431
 1313 0040 2A46     		mov	r2, r5
 1314 0042 4146     		mov	r1, r8
 1315 0044 2046     		mov	r0, r4
 1316 0046 FFF7FEFF 		bl	call_flush_cb
 1317              	.LVL119:
 1318 004a F0E7     		b	.L75
 1319              	.LVL120:
 1320              	.L97:
ARM GAS  C:\usertemp\ccxmAei4.s 			page 52


 1321              	.LBB82:
 899:lvgl/src/core/lv_refr.c ****         lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp_refr);
 1322              		.loc 1 899 9 view .LVU432
 900:lvgl/src/core/lv_refr.c ****         lv_coord_t area_w = lv_area_get_width(area);
 1323              		.loc 1 900 9 view .LVU433
 900:lvgl/src/core/lv_refr.c ****         lv_coord_t area_w = lv_area_get_width(area);
 1324              		.loc 1 900 41 is_stmt 0 view .LVU434
 1325 004c FFF7FEFF 		bl	lv_disp_get_draw_buf
 1326              	.LVL121:
 900:lvgl/src/core/lv_refr.c ****         lv_coord_t area_w = lv_area_get_width(area);
 1327              		.loc 1 900 41 view .LVU435
 1328 0050 0546     		mov	r5, r0
 1329              	.LVL122:
 901:lvgl/src/core/lv_refr.c ****         lv_coord_t area_h = lv_area_get_height(area);
 1330              		.loc 1 901 9 is_stmt 1 view .LVU436
 1331              	.LBB83:
 1332              	.LBI83:
 123:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 1333              		.loc 2 123 26 view .LVU437
 1334              	.LBB84:
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1335              		.loc 2 125 5 view .LVU438
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1336              		.loc 2 125 31 is_stmt 0 view .LVU439
 1337 0052 B8F80410 		ldrh	r1, [r8, #4]
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1338              		.loc 2 125 44 view .LVU440
 1339 0056 B8F90020 		ldrsh	r2, [r8]
 1340 005a 93B2     		uxth	r3, r2
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1341              		.loc 2 125 36 view .LVU441
 1342 005c C91A     		subs	r1, r1, r3
 1343 005e 89B2     		uxth	r1, r1
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1344              		.loc 2 125 49 view .LVU442
 1345 0060 0131     		adds	r1, r1, #1
 1346 0062 88B2     		uxth	r0, r1
 1347              	.LVL123:
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1348              		.loc 2 125 49 view .LVU443
 1349 0064 0890     		str	r0, [sp, #32]
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1350              		.loc 2 125 12 view .LVU444
 1351 0066 09B2     		sxth	r1, r1
 1352              	.LVL124:
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1353              		.loc 2 125 12 view .LVU445
 1354              	.LBE84:
 1355              	.LBE83:
 902:lvgl/src/core/lv_refr.c ****         /*Determine the maximum number of rows that can be rotated at a time*/
 1356              		.loc 1 902 9 is_stmt 1 view .LVU446
 1357              	.LBB85:
 1358              	.LBI85:
 133:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 1359              		.loc 2 133 26 view .LVU447
 1360              	.LBB86:
 1361              		.loc 2 135 5 view .LVU448
ARM GAS  C:\usertemp\ccxmAei4.s 			page 53


 1362              		.loc 2 135 31 is_stmt 0 view .LVU449
 1363 0068 B8F806C0 		ldrh	ip, [r8, #6]
 1364              		.loc 2 135 44 view .LVU450
 1365 006c B8F90200 		ldrsh	r0, [r8, #2]
 1366 0070 0990     		str	r0, [sp, #36]
 1367 0072 1FFA80FE 		uxth	lr, r0
 1368              		.loc 2 135 36 view .LVU451
 1369 0076 ACEB0E0C 		sub	ip, ip, lr
 1370 007a 1FFA8CFC 		uxth	ip, ip
 1371              		.loc 2 135 49 view .LVU452
 1372 007e 0CF1010C 		add	ip, ip, #1
 1373              		.loc 2 135 12 view .LVU453
 1374 0082 0FFA8CF9 		sxth	r9, ip
 1375              	.LVL125:
 1376              		.loc 2 135 12 view .LVU454
 1377              	.LBE86:
 1378              	.LBE85:
 904:lvgl/src/core/lv_refr.c ****         lv_coord_t init_y_off;
 1379              		.loc 1 904 9 is_stmt 1 view .LVU455
 904:lvgl/src/core/lv_refr.c ****         lv_coord_t init_y_off;
 1380              		.loc 1 904 30 is_stmt 0 view .LVU456
 1381 0086 4FF4A050 		mov	r0, #5120
 1382 008a B0FBF1F0 		udiv	r0, r0, r1
 904:lvgl/src/core/lv_refr.c ****         lv_coord_t init_y_off;
 1383              		.loc 1 904 20 view .LVU457
 1384 008e 4845     		cmp	r0, r9
 1385 0090 A8BF     		it	ge
 1386 0092 4846     		movge	r0, r9
 1387 0094 0690     		str	r0, [sp, #24]
 1388              	.LVL126:
 905:lvgl/src/core/lv_refr.c ****         init_y_off = area->y1;
 1389              		.loc 1 905 9 is_stmt 1 view .LVU458
 906:lvgl/src/core/lv_refr.c ****         if(drv->rotated == LV_DISP_ROT_90) {
 1390              		.loc 1 906 9 view .LVU459
 907:lvgl/src/core/lv_refr.c ****             area->y2 = drv->ver_res - area->x1 - 1;
 1391              		.loc 1 907 9 view .LVU460
 907:lvgl/src/core/lv_refr.c ****             area->y2 = drv->ver_res - area->x1 - 1;
 1392              		.loc 1 907 25 is_stmt 0 view .LVU461
 1393 0096 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 1394 0098 00F03000 		and	r0, r0, #48
 907:lvgl/src/core/lv_refr.c ****             area->y2 = drv->ver_res - area->x1 - 1;
 1395              		.loc 1 907 11 view .LVU462
 1396 009c 1028     		cmp	r0, #16
 1397 009e 0DD0     		beq	.L98
 912:lvgl/src/core/lv_refr.c ****             area->y2 = area->y1 + area_w - 1;
 1398              		.loc 1 912 13 is_stmt 1 view .LVU463
 912:lvgl/src/core/lv_refr.c ****             area->y2 = area->y1 + area_w - 1;
 1399              		.loc 1 912 22 is_stmt 0 view .LVU464
 1400 00a0 A8F80220 		strh	r2, [r8, #2]	@ movhi
 913:lvgl/src/core/lv_refr.c ****         }
 1401              		.loc 1 913 13 is_stmt 1 view .LVU465
 913:lvgl/src/core/lv_refr.c ****         }
 1402              		.loc 1 913 33 is_stmt 0 view .LVU466
 1403 00a4 089A     		ldr	r2, [sp, #32]
 1404 00a6 1344     		add	r3, r3, r2
 1405 00a8 9BB2     		uxth	r3, r3
 913:lvgl/src/core/lv_refr.c ****         }
ARM GAS  C:\usertemp\ccxmAei4.s 			page 54


 1406              		.loc 1 913 42 view .LVU467
 1407 00aa 013B     		subs	r3, r3, #1
 913:lvgl/src/core/lv_refr.c ****         }
 1408              		.loc 1 913 22 view .LVU468
 1409 00ac A8F80630 		strh	r3, [r8, #6]	@ movhi
 1410              	.L81:
 1411              	.LBB87:
 959:lvgl/src/core/lv_refr.c ****             /*FIXME: Rotation forces legacy behavior where rendering and flushing are done serially
 1412              		.loc 1 959 13 discriminator 2 view .LVU469
 1413 00b0 0026     		movs	r6, #0
 1414 00b2 0496     		str	r6, [sp, #16]
 1415 00b4 CDF81CE0 		str	lr, [sp, #28]
 1416 00b8 8B46     		mov	fp, r1
 1417 00ba 63E0     		b	.L80
 1418              	.L98:
 1419              	.LBE87:
 908:lvgl/src/core/lv_refr.c ****             area->y1 = area->y2 - area_w + 1;
 1420              		.loc 1 908 13 is_stmt 1 view .LVU470
 908:lvgl/src/core/lv_refr.c ****             area->y1 = area->y2 - area_w + 1;
 1421              		.loc 1 908 27 is_stmt 0 view .LVU471
 1422 00bc 6288     		ldrh	r2, [r4, #2]
 908:lvgl/src/core/lv_refr.c ****             area->y1 = area->y2 - area_w + 1;
 1423              		.loc 1 908 37 view .LVU472
 1424 00be D31A     		subs	r3, r2, r3
 1425 00c0 9BB2     		uxth	r3, r3
 908:lvgl/src/core/lv_refr.c ****             area->y1 = area->y2 - area_w + 1;
 1426              		.loc 1 908 48 view .LVU473
 1427 00c2 013B     		subs	r3, r3, #1
 1428 00c4 9AB2     		uxth	r2, r3
 908:lvgl/src/core/lv_refr.c ****             area->y1 = area->y2 - area_w + 1;
 1429              		.loc 1 908 22 view .LVU474
 1430 00c6 A8F80630 		strh	r3, [r8, #6]	@ movhi
 909:lvgl/src/core/lv_refr.c ****         }
 1431              		.loc 1 909 13 is_stmt 1 view .LVU475
 909:lvgl/src/core/lv_refr.c ****         }
 1432              		.loc 1 909 33 is_stmt 0 view .LVU476
 1433 00ca 089B     		ldr	r3, [sp, #32]
 1434 00cc D31A     		subs	r3, r2, r3
 1435 00ce 9BB2     		uxth	r3, r3
 909:lvgl/src/core/lv_refr.c ****         }
 1436              		.loc 1 909 42 view .LVU477
 1437 00d0 0133     		adds	r3, r3, #1
 909:lvgl/src/core/lv_refr.c ****         }
 1438              		.loc 1 909 22 view .LVU478
 1439 00d2 A8F80230 		strh	r3, [r8, #2]	@ movhi
 1440 00d6 EBE7     		b	.L81
 1441              	.LVL127:
 1442              	.L103:
 1443              	.LBB88:
 923:lvgl/src/core/lv_refr.c ****                 draw_buf_rotate_90_sqr(drv->rotated == LV_DISP_ROT_270, area_w, color_p);
 1444              		.loc 1 923 17 is_stmt 1 view .LVU479
 924:lvgl/src/core/lv_refr.c ****                 if(drv->rotated == LV_DISP_ROT_90) {
 1445              		.loc 1 924 17 view .LVU480
 924:lvgl/src/core/lv_refr.c ****                 if(drv->rotated == LV_DISP_ROT_90) {
 1446              		.loc 1 924 53 is_stmt 0 view .LVU481
 1447 00d8 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 924:lvgl/src/core/lv_refr.c ****                 if(drv->rotated == LV_DISP_ROT_90) {
ARM GAS  C:\usertemp\ccxmAei4.s 			page 55


 1448              		.loc 1 924 17 view .LVU482
 1449 00da 00F03000 		and	r0, r0, #48
 1450 00de 039A     		ldr	r2, [sp, #12]
 1451 00e0 5946     		mov	r1, fp
 1452 00e2 3028     		cmp	r0, #48
 1453 00e4 14BF     		ite	ne
 1454 00e6 0020     		movne	r0, #0
 1455 00e8 0120     		moveq	r0, #1
 1456 00ea FFF7FEFF 		bl	draw_buf_rotate_90_sqr
 1457              	.LVL128:
 925:lvgl/src/core/lv_refr.c ****                     area->x1 = init_y_off;
 1458              		.loc 1 925 17 is_stmt 1 view .LVU483
 925:lvgl/src/core/lv_refr.c ****                     area->x1 = init_y_off;
 1459              		.loc 1 925 33 is_stmt 0 view .LVU484
 1460 00ee 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 1461 00f0 03F03003 		and	r3, r3, #48
 925:lvgl/src/core/lv_refr.c ****                     area->x1 = init_y_off;
 1462              		.loc 1 925 19 view .LVU485
 1463 00f4 102B     		cmp	r3, #16
 1464 00f6 0ED0     		beq	.L99
 930:lvgl/src/core/lv_refr.c ****                     area->x1 = area->x2 - area_w + 1;
 1465              		.loc 1 930 21 is_stmt 1 view .LVU486
 930:lvgl/src/core/lv_refr.c ****                     area->x1 = area->x2 - area_w + 1;
 1466              		.loc 1 930 35 is_stmt 0 view .LVU487
 1467 00f8 2288     		ldrh	r2, [r4]
 930:lvgl/src/core/lv_refr.c ****                     area->x1 = area->x2 - area_w + 1;
 1468              		.loc 1 930 49 view .LVU488
 1469 00fa 079B     		ldr	r3, [sp, #28]
 1470 00fc D21A     		subs	r2, r2, r3
 1471 00fe 013A     		subs	r2, r2, #1
 1472 0100 93B2     		uxth	r3, r2
 930:lvgl/src/core/lv_refr.c ****                     area->x1 = area->x2 - area_w + 1;
 1473              		.loc 1 930 30 view .LVU489
 1474 0102 A8F80420 		strh	r2, [r8, #4]	@ movhi
 931:lvgl/src/core/lv_refr.c ****                 }
 1475              		.loc 1 931 21 is_stmt 1 view .LVU490
 931:lvgl/src/core/lv_refr.c ****                 }
 1476              		.loc 1 931 41 is_stmt 0 view .LVU491
 1477 0106 089A     		ldr	r2, [sp, #32]
 1478 0108 9B1A     		subs	r3, r3, r2
 1479 010a 9BB2     		uxth	r3, r3
 931:lvgl/src/core/lv_refr.c ****                 }
 1480              		.loc 1 931 50 view .LVU492
 1481 010c 0133     		adds	r3, r3, #1
 931:lvgl/src/core/lv_refr.c ****                 }
 1482              		.loc 1 931 30 view .LVU493
 1483 010e A8F80030 		strh	r3, [r8]	@ movhi
 923:lvgl/src/core/lv_refr.c ****                 draw_buf_rotate_90_sqr(drv->rotated == LV_DISP_ROT_270, area_w, color_p);
 1484              		.loc 1 923 24 view .LVU494
 1485 0112 5F46     		mov	r7, fp
 1486 0114 6CE0     		b	.L84
 1487              	.L99:
 926:lvgl/src/core/lv_refr.c ****                     area->x2 = init_y_off + area_w - 1;
 1488              		.loc 1 926 21 is_stmt 1 view .LVU495
 926:lvgl/src/core/lv_refr.c ****                     area->x2 = init_y_off + area_w - 1;
 1489              		.loc 1 926 30 is_stmt 0 view .LVU496
 1490 0116 099B     		ldr	r3, [sp, #36]
ARM GAS  C:\usertemp\ccxmAei4.s 			page 56


 1491 0118 A8F80030 		strh	r3, [r8]	@ movhi
 927:lvgl/src/core/lv_refr.c ****                 }
 1492              		.loc 1 927 21 is_stmt 1 view .LVU497
 927:lvgl/src/core/lv_refr.c ****                 }
 1493              		.loc 1 927 43 is_stmt 0 view .LVU498
 1494 011c 079B     		ldr	r3, [sp, #28]
 1495 011e 089A     		ldr	r2, [sp, #32]
 1496 0120 1344     		add	r3, r3, r2
 1497 0122 9BB2     		uxth	r3, r3
 927:lvgl/src/core/lv_refr.c ****                 }
 1498              		.loc 1 927 52 view .LVU499
 1499 0124 013B     		subs	r3, r3, #1
 927:lvgl/src/core/lv_refr.c ****                 }
 1500              		.loc 1 927 30 view .LVU500
 1501 0126 A8F80430 		strh	r3, [r8, #4]	@ movhi
 923:lvgl/src/core/lv_refr.c ****                 draw_buf_rotate_90_sqr(drv->rotated == LV_DISP_ROT_270, area_w, color_p);
 1502              		.loc 1 923 24 view .LVU501
 1503 012a 5F46     		mov	r7, fp
 1504 012c 60E0     		b	.L84
 1505              	.LVL129:
 1506              	.L104:
 936:lvgl/src/core/lv_refr.c ****                 draw_buf_rotate_90(drv->rotated == LV_DISP_ROT_270, area_w, height, color_p, rot_bu
 1507              		.loc 1 936 37 is_stmt 1 discriminator 1 view .LVU502
 936:lvgl/src/core/lv_refr.c ****                 draw_buf_rotate_90(drv->rotated == LV_DISP_ROT_270, area_w, height, color_p, rot_bu
 1508              		.loc 1 936 47 is_stmt 0 discriminator 1 view .LVU503
 1509 012e 4FF42050 		mov	r0, #10240
 1510 0132 FFF7FEFF 		bl	lv_mem_buf_get
 1511              	.LVL130:
 936:lvgl/src/core/lv_refr.c ****                 draw_buf_rotate_90(drv->rotated == LV_DISP_ROT_270, area_w, height, color_p, rot_bu
 1512              		.loc 1 936 47 discriminator 1 view .LVU504
 1513 0136 0490     		str	r0, [sp, #16]
 1514              	.LVL131:
 936:lvgl/src/core/lv_refr.c ****                 draw_buf_rotate_90(drv->rotated == LV_DISP_ROT_270, area_w, height, color_p, rot_bu
 1515              		.loc 1 936 47 discriminator 1 view .LVU505
 1516 0138 38E0     		b	.L85
 1517              	.LVL132:
 1518              	.L105:
 940:lvgl/src/core/lv_refr.c ****                     area->x2 = init_y_off + row + height - 1;
 1519              		.loc 1 940 21 is_stmt 1 view .LVU506
 940:lvgl/src/core/lv_refr.c ****                     area->x2 = init_y_off + row + height - 1;
 1520              		.loc 1 940 43 is_stmt 0 view .LVU507
 1521 013a 079B     		ldr	r3, [sp, #28]
 1522 013c 3344     		add	r3, r3, r6
 940:lvgl/src/core/lv_refr.c ****                     area->x2 = init_y_off + row + height - 1;
 1523              		.loc 1 940 30 view .LVU508
 1524 013e A8F80030 		strh	r3, [r8]	@ movhi
 941:lvgl/src/core/lv_refr.c ****                 }
 1525              		.loc 1 941 21 is_stmt 1 view .LVU509
 941:lvgl/src/core/lv_refr.c ****                 }
 1526              		.loc 1 941 49 is_stmt 0 view .LVU510
 1527 0142 1AFA83F3 		uxtah	r3, r10, r3
 1528 0146 9BB2     		uxth	r3, r3
 941:lvgl/src/core/lv_refr.c ****                 }
 1529              		.loc 1 941 58 view .LVU511
 1530 0148 013B     		subs	r3, r3, #1
 941:lvgl/src/core/lv_refr.c ****                 }
 1531              		.loc 1 941 30 view .LVU512
ARM GAS  C:\usertemp\ccxmAei4.s 			page 57


 1532 014a A8F80430 		strh	r3, [r8, #4]	@ movhi
 1533 014e 4FE0     		b	.L84
 1534              	.L87:
 955:lvgl/src/core/lv_refr.c ****             }
 1535              		.loc 1 955 17 is_stmt 1 view .LVU513
 955:lvgl/src/core/lv_refr.c ****             }
 1536              		.loc 1 955 41 is_stmt 0 view .LVU514
 1537 0150 0023     		movs	r3, #0
 1538 0152 6B61     		str	r3, [r5, #20]
 1539              	.L88:
 959:lvgl/src/core/lv_refr.c ****             /*FIXME: Rotation forces legacy behavior where rendering and flushing are done serially
 1540              		.loc 1 959 13 is_stmt 1 view .LVU515
 1541 0154 049A     		ldr	r2, [sp, #16]
 1542 0156 5AB1     		cbz	r2, .L100
 1543              	.L89:
 959:lvgl/src/core/lv_refr.c ****             /*FIXME: Rotation forces legacy behavior where rendering and flushing are done serially
 1544              		.loc 1 959 13 is_stmt 0 discriminator 4 view .LVU516
 1545 0158 4146     		mov	r1, r8
 1546 015a 2046     		mov	r0, r4
 1547 015c FFF7FEFF 		bl	call_flush_cb
 1548              	.LVL133:
 961:lvgl/src/core/lv_refr.c ****                 if(drv->wait_cb) drv->wait_cb(drv);
 1549              		.loc 1 961 13 is_stmt 1 view .LVU517
 1550              	.L91:
 961:lvgl/src/core/lv_refr.c ****                 if(drv->wait_cb) drv->wait_cb(drv);
 1551              		.loc 1 961 19 view .LVU518
 961:lvgl/src/core/lv_refr.c ****                 if(drv->wait_cb) drv->wait_cb(drv);
 1552              		.loc 1 961 27 is_stmt 0 view .LVU519
 1553 0160 2B69     		ldr	r3, [r5, #16]
 961:lvgl/src/core/lv_refr.c ****                 if(drv->wait_cb) drv->wait_cb(drv);
 1554              		.loc 1 961 19 view .LVU520
 1555 0162 3BB1     		cbz	r3, .L101
 962:lvgl/src/core/lv_refr.c ****             }
 1556              		.loc 1 962 17 is_stmt 1 view .LVU521
 962:lvgl/src/core/lv_refr.c ****             }
 1557              		.loc 1 962 23 is_stmt 0 view .LVU522
 1558 0164 A36A     		ldr	r3, [r4, #40]
 962:lvgl/src/core/lv_refr.c ****             }
 1559              		.loc 1 962 19 view .LVU523
 1560 0166 002B     		cmp	r3, #0
 1561 0168 FAD0     		beq	.L91
 962:lvgl/src/core/lv_refr.c ****             }
 1562              		.loc 1 962 34 is_stmt 1 discriminator 1 view .LVU524
 1563 016a 2046     		mov	r0, r4
 1564 016c 9847     		blx	r3
 1565              	.LVL134:
 1566 016e F7E7     		b	.L91
 1567              	.L100:
 959:lvgl/src/core/lv_refr.c ****             /*FIXME: Rotation forces legacy behavior where rendering and flushing are done serially
 1568              		.loc 1 959 13 is_stmt 0 discriminator 1 view .LVU525
 1569 0170 039A     		ldr	r2, [sp, #12]
 1570 0172 F1E7     		b	.L89
 1571              	.L101:
 964:lvgl/src/core/lv_refr.c ****             row += height;
 1572              		.loc 1 964 13 is_stmt 1 view .LVU526
 964:lvgl/src/core/lv_refr.c ****             row += height;
 1573              		.loc 1 964 31 is_stmt 0 view .LVU527
ARM GAS  C:\usertemp\ccxmAei4.s 			page 58


 1574 0174 0AFB0BFA 		mul	r10, r10, fp
 964:lvgl/src/core/lv_refr.c ****             row += height;
 1575              		.loc 1 964 21 view .LVU528
 1576 0178 039B     		ldr	r3, [sp, #12]
 1577 017a 03EB4A03 		add	r3, r3, r10, lsl #1
 1578 017e 0393     		str	r3, [sp, #12]
 1579              	.LVL135:
 965:lvgl/src/core/lv_refr.c ****         }
 1580              		.loc 1 965 13 is_stmt 1 view .LVU529
 965:lvgl/src/core/lv_refr.c ****         }
 1581              		.loc 1 965 17 is_stmt 0 view .LVU530
 1582 0180 3744     		add	r7, r7, r6
 1583              	.LVL136:
 965:lvgl/src/core/lv_refr.c ****         }
 1584              		.loc 1 965 17 view .LVU531
 1585 0182 3EB2     		sxth	r6, r7
 1586              	.LVL137:
 1587              	.L80:
 965:lvgl/src/core/lv_refr.c ****         }
 1588              		.loc 1 965 17 view .LVU532
 1589              	.LBE88:
 918:lvgl/src/core/lv_refr.c ****             lv_coord_t height = LV_MIN(max_row, area_h - row);
 1590              		.loc 1 918 19 is_stmt 1 view .LVU533
 1591 0184 4E45     		cmp	r6, r9
 1592 0186 43DA     		bge	.L102
 1593              	.LBB89:
 919:lvgl/src/core/lv_refr.c ****             draw_buf->flushing = 1;
 1594              		.loc 1 919 13 view .LVU534
 919:lvgl/src/core/lv_refr.c ****             draw_buf->flushing = 1;
 1595              		.loc 1 919 33 is_stmt 0 view .LVU535
 1596 0188 0596     		str	r6, [sp, #20]
 1597 018a A9EB060A 		sub	r10, r9, r6
 1598 018e 069B     		ldr	r3, [sp, #24]
 1599 0190 9A45     		cmp	r10, r3
 1600 0192 A8BF     		it	ge
 1601 0194 9A46     		movge	r10, r3
 919:lvgl/src/core/lv_refr.c ****             draw_buf->flushing = 1;
 1602              		.loc 1 919 24 view .LVU536
 1603 0196 0FFA8AF7 		sxth	r7, r10
 1604              	.LVL138:
 920:lvgl/src/core/lv_refr.c ****             if((row == 0) && (area_h >= area_w)) {
 1605              		.loc 1 920 13 is_stmt 1 view .LVU537
 920:lvgl/src/core/lv_refr.c ****             if((row == 0) && (area_h >= area_w)) {
 1606              		.loc 1 920 32 is_stmt 0 view .LVU538
 1607 019a 0123     		movs	r3, #1
 1608 019c 2B61     		str	r3, [r5, #16]
 921:lvgl/src/core/lv_refr.c ****                 /*Rotate the initial area as a square*/
 1609              		.loc 1 921 13 is_stmt 1 view .LVU539
 921:lvgl/src/core/lv_refr.c ****                 /*Rotate the initial area as a square*/
 1610              		.loc 1 921 15 is_stmt 0 view .LVU540
 1611 019e D945     		cmp	r9, fp
 1612 01a0 A8BF     		it	ge
 1613 01a2 002E     		cmpge	r6, #0
 1614 01a4 98D0     		beq	.L103
 936:lvgl/src/core/lv_refr.c ****                 draw_buf_rotate_90(drv->rotated == LV_DISP_ROT_270, area_w, height, color_p, rot_bu
 1615              		.loc 1 936 17 is_stmt 1 view .LVU541
 936:lvgl/src/core/lv_refr.c ****                 draw_buf_rotate_90(drv->rotated == LV_DISP_ROT_270, area_w, height, color_p, rot_bu
ARM GAS  C:\usertemp\ccxmAei4.s 			page 59


 1616              		.loc 1 936 19 is_stmt 0 view .LVU542
 1617 01a6 049B     		ldr	r3, [sp, #16]
 1618 01a8 002B     		cmp	r3, #0
 1619 01aa C0D0     		beq	.L104
 1620              	.L85:
 937:lvgl/src/core/lv_refr.c **** 
 1621              		.loc 1 937 17 is_stmt 1 view .LVU543
 937:lvgl/src/core/lv_refr.c **** 
 1622              		.loc 1 937 49 is_stmt 0 view .LVU544
 1623 01ac 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 937:lvgl/src/core/lv_refr.c **** 
 1624              		.loc 1 937 17 view .LVU545
 1625 01ae 00F03000 		and	r0, r0, #48
 1626 01b2 049B     		ldr	r3, [sp, #16]
 1627 01b4 0093     		str	r3, [sp]
 1628 01b6 039B     		ldr	r3, [sp, #12]
 1629 01b8 3A46     		mov	r2, r7
 1630 01ba 5946     		mov	r1, fp
 1631 01bc 3028     		cmp	r0, #48
 1632 01be 14BF     		ite	ne
 1633 01c0 0020     		movne	r0, #0
 1634 01c2 0120     		moveq	r0, #1
 1635 01c4 FFF7FEFF 		bl	draw_buf_rotate_90
 1636              	.LVL139:
 939:lvgl/src/core/lv_refr.c ****                     area->x1 = init_y_off + row;
 1637              		.loc 1 939 17 is_stmt 1 view .LVU546
 939:lvgl/src/core/lv_refr.c ****                     area->x1 = init_y_off + row;
 1638              		.loc 1 939 33 is_stmt 0 view .LVU547
 1639 01c8 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 1640 01ca 03F03003 		and	r3, r3, #48
 939:lvgl/src/core/lv_refr.c ****                     area->x1 = init_y_off + row;
 1641              		.loc 1 939 19 view .LVU548
 1642 01ce 102B     		cmp	r3, #16
 1643 01d0 B3D0     		beq	.L105
 944:lvgl/src/core/lv_refr.c ****                     area->x1 = area->x2 - height + 1;
 1644              		.loc 1 944 21 is_stmt 1 view .LVU549
 944:lvgl/src/core/lv_refr.c ****                     area->x1 = area->x2 - height + 1;
 1645              		.loc 1 944 35 is_stmt 0 view .LVU550
 1646 01d2 2388     		ldrh	r3, [r4]
 944:lvgl/src/core/lv_refr.c ****                     area->x1 = area->x2 - height + 1;
 1647              		.loc 1 944 49 view .LVU551
 1648 01d4 079A     		ldr	r2, [sp, #28]
 1649 01d6 9B1A     		subs	r3, r3, r2
 1650 01d8 9BB2     		uxth	r3, r3
 944:lvgl/src/core/lv_refr.c ****                     area->x1 = area->x2 - height + 1;
 1651              		.loc 1 944 62 view .LVU552
 1652 01da 9B1B     		subs	r3, r3, r6
 1653 01dc 013B     		subs	r3, r3, #1
 1654 01de 9AB2     		uxth	r2, r3
 944:lvgl/src/core/lv_refr.c ****                     area->x1 = area->x2 - height + 1;
 1655              		.loc 1 944 30 view .LVU553
 1656 01e0 A8F80430 		strh	r3, [r8, #4]	@ movhi
 945:lvgl/src/core/lv_refr.c ****                 }
 1657              		.loc 1 945 21 is_stmt 1 view .LVU554
 945:lvgl/src/core/lv_refr.c ****                 }
 1658              		.loc 1 945 41 is_stmt 0 view .LVU555
 1659 01e4 A2EB0A03 		sub	r3, r2, r10
ARM GAS  C:\usertemp\ccxmAei4.s 			page 60


 1660 01e8 9BB2     		uxth	r3, r3
 945:lvgl/src/core/lv_refr.c ****                 }
 1661              		.loc 1 945 50 view .LVU556
 1662 01ea 0133     		adds	r3, r3, #1
 945:lvgl/src/core/lv_refr.c ****                 }
 1663              		.loc 1 945 30 view .LVU557
 1664 01ec A8F80030 		strh	r3, [r8]	@ movhi
 1665              	.LVL140:
 1666              	.L84:
 951:lvgl/src/core/lv_refr.c ****                 draw_buf->flushing_last = 1;
 1667              		.loc 1 951 13 is_stmt 1 view .LVU558
 951:lvgl/src/core/lv_refr.c ****                 draw_buf->flushing_last = 1;
 1668              		.loc 1 951 20 is_stmt 0 view .LVU559
 1669 01f0 BA46     		mov	r10, r7
 1670 01f2 059B     		ldr	r3, [sp, #20]
 1671 01f4 3B44     		add	r3, r3, r7
 951:lvgl/src/core/lv_refr.c ****                 draw_buf->flushing_last = 1;
 1672              		.loc 1 951 15 view .LVU560
 1673 01f6 9945     		cmp	r9, r3
 1674 01f8 AADC     		bgt	.L87
 951:lvgl/src/core/lv_refr.c ****                 draw_buf->flushing_last = 1;
 1675              		.loc 1 951 50 discriminator 1 view .LVU561
 1676 01fa AB69     		ldr	r3, [r5, #24]
 951:lvgl/src/core/lv_refr.c ****                 draw_buf->flushing_last = 1;
 1677              		.loc 1 951 39 discriminator 1 view .LVU562
 1678 01fc 13F0010F 		tst	r3, #1
 1679 0200 A6D0     		beq	.L87
 951:lvgl/src/core/lv_refr.c ****                 draw_buf->flushing_last = 1;
 1680              		.loc 1 951 73 discriminator 2 view .LVU563
 1681 0202 AB69     		ldr	r3, [r5, #24]
 951:lvgl/src/core/lv_refr.c ****                 draw_buf->flushing_last = 1;
 1682              		.loc 1 951 62 discriminator 2 view .LVU564
 1683 0204 13F0020F 		tst	r3, #2
 1684 0208 A2D0     		beq	.L87
 952:lvgl/src/core/lv_refr.c ****             }
 1685              		.loc 1 952 17 is_stmt 1 view .LVU565
 952:lvgl/src/core/lv_refr.c ****             }
 1686              		.loc 1 952 41 is_stmt 0 view .LVU566
 1687 020a 0123     		movs	r3, #1
 1688 020c 6B61     		str	r3, [r5, #20]
 1689 020e A1E7     		b	.L88
 1690              	.LVL141:
 1691              	.L102:
 952:lvgl/src/core/lv_refr.c ****             }
 1692              		.loc 1 952 41 view .LVU567
 1693              	.LBE89:
 968:lvgl/src/core/lv_refr.c ****     }
 1694              		.loc 1 968 9 is_stmt 1 view .LVU568
 968:lvgl/src/core/lv_refr.c ****     }
 1695              		.loc 1 968 11 is_stmt 0 view .LVU569
 1696 0210 049B     		ldr	r3, [sp, #16]
 1697 0212 002B     		cmp	r3, #0
 1698 0214 3FF40BAF 		beq	.L75
 968:lvgl/src/core/lv_refr.c ****     }
 1699              		.loc 1 968 29 is_stmt 1 discriminator 1 view .LVU570
 1700 0218 1846     		mov	r0, r3
 1701 021a FFF7FEFF 		bl	lv_mem_buf_release
ARM GAS  C:\usertemp\ccxmAei4.s 			page 61


 1702              	.LVL142:
 1703 021e 06E7     		b	.L75
 1704              	.L107:
 1705              		.align	2
 1706              	.L106:
 1707 0220 00000000 		.word	disp_refr
 1708              	.LBE82:
 1709              		.cfi_endproc
 1710              	.LFE182:
 1712              		.section	.text.draw_buf_flush,"ax",%progbits
 1713              		.align	1
 1714              		.syntax unified
 1715              		.thumb
 1716              		.thumb_func
 1718              	draw_buf_flush:
 1719              	.LVL143:
 1720              	.LFB183:
 976:lvgl/src/core/lv_refr.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp_refr);
 1721              		.loc 1 976 1 view -0
 1722              		.cfi_startproc
 1723              		@ args = 0, pretend = 0, frame = 0
 1724              		@ frame_needed = 0, uses_anonymous_args = 0
 976:lvgl/src/core/lv_refr.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp_refr);
 1725              		.loc 1 976 1 is_stmt 0 view .LVU572
 1726 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1727              	.LCFI22:
 1728              		.cfi_def_cfa_offset 24
 1729              		.cfi_offset 3, -24
 1730              		.cfi_offset 4, -20
 1731              		.cfi_offset 5, -16
 1732              		.cfi_offset 6, -12
 1733              		.cfi_offset 7, -8
 1734              		.cfi_offset 14, -4
 1735 0002 0546     		mov	r5, r0
 977:lvgl/src/core/lv_refr.c **** 
 1736              		.loc 1 977 5 is_stmt 1 view .LVU573
 977:lvgl/src/core/lv_refr.c **** 
 1737              		.loc 1 977 37 is_stmt 0 view .LVU574
 1738 0004 284B     		ldr	r3, .L124
 1739 0006 1868     		ldr	r0, [r3]
 1740              	.LVL144:
 977:lvgl/src/core/lv_refr.c **** 
 1741              		.loc 1 977 37 view .LVU575
 1742 0008 FFF7FEFF 		bl	lv_disp_get_draw_buf
 1743              	.LVL145:
 1744 000c 0446     		mov	r4, r0
 1745              	.LVL146:
 980:lvgl/src/core/lv_refr.c ****     if(draw_ctx->wait_for_finish) draw_ctx->wait_for_finish(draw_ctx);
 1746              		.loc 1 980 5 is_stmt 1 view .LVU576
 980:lvgl/src/core/lv_refr.c ****     if(draw_ctx->wait_for_finish) draw_ctx->wait_for_finish(draw_ctx);
 1747              		.loc 1 980 36 is_stmt 0 view .LVU577
 1748 000e 2B68     		ldr	r3, [r5]
 980:lvgl/src/core/lv_refr.c ****     if(draw_ctx->wait_for_finish) draw_ctx->wait_for_finish(draw_ctx);
 1749              		.loc 1 980 21 view .LVU578
 1750 0010 9E6B     		ldr	r6, [r3, #56]
 1751              	.LVL147:
 981:lvgl/src/core/lv_refr.c **** 
ARM GAS  C:\usertemp\ccxmAei4.s 			page 62


 1752              		.loc 1 981 5 is_stmt 1 view .LVU579
 981:lvgl/src/core/lv_refr.c **** 
 1753              		.loc 1 981 16 is_stmt 0 view .LVU580
 1754 0012 F36A     		ldr	r3, [r6, #44]
 981:lvgl/src/core/lv_refr.c **** 
 1755              		.loc 1 981 7 view .LVU581
 1756 0014 0BB1     		cbz	r3, .L109
 981:lvgl/src/core/lv_refr.c **** 
 1757              		.loc 1 981 35 is_stmt 1 discriminator 1 view .LVU582
 1758 0016 3046     		mov	r0, r6
 1759              	.LVL148:
 981:lvgl/src/core/lv_refr.c **** 
 1760              		.loc 1 981 35 is_stmt 0 discriminator 1 view .LVU583
 1761 0018 9847     		blx	r3
 1762              	.LVL149:
 1763              	.L109:
 985:lvgl/src/core/lv_refr.c ****         while(draw_buf->flushing) {
 1764              		.loc 1 985 5 is_stmt 1 view .LVU584
 985:lvgl/src/core/lv_refr.c ****         while(draw_buf->flushing) {
 1765              		.loc 1 985 16 is_stmt 0 view .LVU585
 1766 001a 2368     		ldr	r3, [r4]
 985:lvgl/src/core/lv_refr.c ****         while(draw_buf->flushing) {
 1767              		.loc 1 985 7 view .LVU586
 1768 001c 5BB1     		cbz	r3, .L110
 985:lvgl/src/core/lv_refr.c ****         while(draw_buf->flushing) {
 1769              		.loc 1 985 34 discriminator 1 view .LVU587
 1770 001e 6368     		ldr	r3, [r4, #4]
 985:lvgl/src/core/lv_refr.c ****         while(draw_buf->flushing) {
 1771              		.loc 1 985 23 discriminator 1 view .LVU588
 1772 0020 4BB1     		cbz	r3, .L110
 1773              	.L112:
 986:lvgl/src/core/lv_refr.c ****             if(disp_refr->driver->wait_cb) disp_refr->driver->wait_cb(disp_refr->driver);
 1774              		.loc 1 986 15 is_stmt 1 view .LVU589
 986:lvgl/src/core/lv_refr.c ****             if(disp_refr->driver->wait_cb) disp_refr->driver->wait_cb(disp_refr->driver);
 1775              		.loc 1 986 23 is_stmt 0 view .LVU590
 1776 0022 2369     		ldr	r3, [r4, #16]
 986:lvgl/src/core/lv_refr.c ****             if(disp_refr->driver->wait_cb) disp_refr->driver->wait_cb(disp_refr->driver);
 1777              		.loc 1 986 15 view .LVU591
 1778 0024 3BB1     		cbz	r3, .L110
 987:lvgl/src/core/lv_refr.c ****         }
 1779              		.loc 1 987 13 is_stmt 1 view .LVU592
 987:lvgl/src/core/lv_refr.c ****         }
 1780              		.loc 1 987 25 is_stmt 0 view .LVU593
 1781 0026 204B     		ldr	r3, .L124
 1782 0028 1B68     		ldr	r3, [r3]
 1783 002a 1868     		ldr	r0, [r3]
 987:lvgl/src/core/lv_refr.c ****         }
 1784              		.loc 1 987 33 view .LVU594
 1785 002c 836A     		ldr	r3, [r0, #40]
 987:lvgl/src/core/lv_refr.c ****         }
 1786              		.loc 1 987 15 view .LVU595
 1787 002e 002B     		cmp	r3, #0
 1788 0030 F7D0     		beq	.L112
 987:lvgl/src/core/lv_refr.c ****         }
 1789              		.loc 1 987 44 is_stmt 1 discriminator 1 view .LVU596
 1790 0032 9847     		blx	r3
 1791              	.LVL150:
ARM GAS  C:\usertemp\ccxmAei4.s 			page 63


 1792 0034 F5E7     		b	.L112
 1793              	.L110:
 991:lvgl/src/core/lv_refr.c **** 
 1794              		.loc 1 991 5 view .LVU597
 991:lvgl/src/core/lv_refr.c **** 
 1795              		.loc 1 991 24 is_stmt 0 view .LVU598
 1796 0036 0123     		movs	r3, #1
 1797 0038 2361     		str	r3, [r4, #16]
 993:lvgl/src/core/lv_refr.c ****     else draw_buf->flushing_last = 0;
 1798              		.loc 1 993 5 is_stmt 1 view .LVU599
 993:lvgl/src/core/lv_refr.c ****     else draw_buf->flushing_last = 0;
 1799              		.loc 1 993 17 is_stmt 0 view .LVU600
 1800 003a 1B4B     		ldr	r3, .L124
 1801 003c 1B68     		ldr	r3, [r3]
 1802 003e 1B68     		ldr	r3, [r3]
 993:lvgl/src/core/lv_refr.c ****     else draw_buf->flushing_last = 0;
 1803              		.loc 1 993 25 view .LVU601
 1804 0040 DB68     		ldr	r3, [r3, #12]
 993:lvgl/src/core/lv_refr.c ****     else draw_buf->flushing_last = 0;
 1805              		.loc 1 993 35 view .LVU602
 1806 0042 9A69     		ldr	r2, [r3, #24]
 993:lvgl/src/core/lv_refr.c ****     else draw_buf->flushing_last = 0;
 1807              		.loc 1 993 7 view .LVU603
 1808 0044 12F0010F 		tst	r2, #1
 1809 0048 06D0     		beq	.L114
 993:lvgl/src/core/lv_refr.c ****     else draw_buf->flushing_last = 0;
 1810              		.loc 1 993 77 discriminator 1 view .LVU604
 1811 004a 9B69     		ldr	r3, [r3, #24]
 993:lvgl/src/core/lv_refr.c ****     else draw_buf->flushing_last = 0;
 1812              		.loc 1 993 47 discriminator 1 view .LVU605
 1813 004c 13F0020F 		tst	r3, #2
 1814 0050 02D0     		beq	.L114
 993:lvgl/src/core/lv_refr.c ****     else draw_buf->flushing_last = 0;
 1815              		.loc 1 993 90 is_stmt 1 discriminator 2 view .LVU606
 993:lvgl/src/core/lv_refr.c ****     else draw_buf->flushing_last = 0;
 1816              		.loc 1 993 114 is_stmt 0 discriminator 2 view .LVU607
 1817 0052 0123     		movs	r3, #1
 1818 0054 6361     		str	r3, [r4, #20]
 993:lvgl/src/core/lv_refr.c ****     else draw_buf->flushing_last = 0;
 1819              		.loc 1 993 114 view .LVU608
 1820 0056 01E0     		b	.L115
 1821              	.L114:
 994:lvgl/src/core/lv_refr.c **** 
 1822              		.loc 1 994 10 is_stmt 1 view .LVU609
 994:lvgl/src/core/lv_refr.c **** 
 1823              		.loc 1 994 34 is_stmt 0 view .LVU610
 1824 0058 0023     		movs	r3, #0
 1825 005a 6361     		str	r3, [r4, #20]
 1826              	.L115:
 996:lvgl/src/core/lv_refr.c **** 
 1827              		.loc 1 996 5 is_stmt 1 view .LVU611
 996:lvgl/src/core/lv_refr.c **** 
 1828              		.loc 1 996 34 is_stmt 0 view .LVU612
 1829 005c 6769     		ldr	r7, [r4, #20]
 1830              	.LVL151:
 998:lvgl/src/core/lv_refr.c ****         /*Rotate the buffer to the display's native orientation if necessary*/
 1831              		.loc 1 998 5 is_stmt 1 view .LVU613
ARM GAS  C:\usertemp\ccxmAei4.s 			page 64


 998:lvgl/src/core/lv_refr.c ****         /*Rotate the buffer to the display's native orientation if necessary*/
 1832              		.loc 1 998 12 is_stmt 0 view .LVU614
 1833 005e 2868     		ldr	r0, [r5]
 998:lvgl/src/core/lv_refr.c ****         /*Rotate the buffer to the display's native orientation if necessary*/
 1834              		.loc 1 998 20 view .LVU615
 1835 0060 4369     		ldr	r3, [r0, #20]
 998:lvgl/src/core/lv_refr.c ****         /*Rotate the buffer to the display's native orientation if necessary*/
 1836              		.loc 1 998 7 view .LVU616
 1837 0062 53B1     		cbz	r3, .L116
1000:lvgl/src/core/lv_refr.c ****             draw_buf_rotate(draw_ctx->buf_area, draw_ctx->buf);
 1838              		.loc 1 1000 9 is_stmt 1 view .LVU617
1000:lvgl/src/core/lv_refr.c ****             draw_buf_rotate(draw_ctx->buf_area, draw_ctx->buf);
 1839              		.loc 1 1000 34 is_stmt 0 view .LVU618
 1840 0064 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
1000:lvgl/src/core/lv_refr.c ****             draw_buf_rotate(draw_ctx->buf_area, draw_ctx->buf);
 1841              		.loc 1 1000 11 view .LVU619
 1842 0066 13F0300F 		tst	r3, #48
 1843 006a 02D0     		beq	.L117
1000:lvgl/src/core/lv_refr.c ****             draw_buf_rotate(draw_ctx->buf_area, draw_ctx->buf);
 1844              		.loc 1 1000 54 discriminator 1 view .LVU620
 1845 006c 13F0040F 		tst	r3, #4
 1846 0070 12D1     		bne	.L122
 1847              	.L117:
1004:lvgl/src/core/lv_refr.c ****         }
 1848              		.loc 1 1004 13 is_stmt 1 view .LVU621
 1849 0072 3268     		ldr	r2, [r6]
 1850 0074 7168     		ldr	r1, [r6, #4]
 1851 0076 FFF7FEFF 		bl	call_flush_cb
 1852              	.LVL152:
 1853              	.L116:
1008:lvgl/src/core/lv_refr.c ****         if(draw_buf->buf_act == draw_buf->buf1)
 1854              		.loc 1 1008 5 view .LVU622
1008:lvgl/src/core/lv_refr.c ****         if(draw_buf->buf_act == draw_buf->buf1)
 1855              		.loc 1 1008 16 is_stmt 0 view .LVU623
 1856 007a 2368     		ldr	r3, [r4]
1008:lvgl/src/core/lv_refr.c ****         if(draw_buf->buf_act == draw_buf->buf1)
 1857              		.loc 1 1008 7 view .LVU624
 1858 007c 5BB1     		cbz	r3, .L108
1008:lvgl/src/core/lv_refr.c ****         if(draw_buf->buf_act == draw_buf->buf1)
 1859              		.loc 1 1008 34 discriminator 1 view .LVU625
 1860 007e 6268     		ldr	r2, [r4, #4]
1008:lvgl/src/core/lv_refr.c ****         if(draw_buf->buf_act == draw_buf->buf1)
 1861              		.loc 1 1008 23 discriminator 1 view .LVU626
 1862 0080 4AB1     		cbz	r2, .L108
1008:lvgl/src/core/lv_refr.c ****         if(draw_buf->buf_act == draw_buf->buf1)
 1863              		.loc 1 1008 50 discriminator 2 view .LVU627
 1864 0082 2968     		ldr	r1, [r5]
1008:lvgl/src/core/lv_refr.c ****         if(draw_buf->buf_act == draw_buf->buf1)
 1865              		.loc 1 1008 45 discriminator 2 view .LVU628
 1866 0084 097C     		ldrb	r1, [r1, #16]	@ zero_extendqisi2
1008:lvgl/src/core/lv_refr.c ****         if(draw_buf->buf_act == draw_buf->buf1)
 1867              		.loc 1 1008 41 discriminator 2 view .LVU629
 1868 0086 11F0010F 		tst	r1, #1
 1869 008a 00D0     		beq	.L119
1008:lvgl/src/core/lv_refr.c ****         if(draw_buf->buf_act == draw_buf->buf1)
 1870              		.loc 1 1008 72 discriminator 3 view .LVU630
 1871 008c 1FB1     		cbz	r7, .L108
ARM GAS  C:\usertemp\ccxmAei4.s 			page 65


 1872              	.L119:
1009:lvgl/src/core/lv_refr.c ****             draw_buf->buf_act = draw_buf->buf2;
 1873              		.loc 1 1009 9 is_stmt 1 view .LVU631
1009:lvgl/src/core/lv_refr.c ****             draw_buf->buf_act = draw_buf->buf2;
 1874              		.loc 1 1009 20 is_stmt 0 view .LVU632
 1875 008e A168     		ldr	r1, [r4, #8]
1009:lvgl/src/core/lv_refr.c ****             draw_buf->buf_act = draw_buf->buf2;
 1876              		.loc 1 1009 11 view .LVU633
 1877 0090 8B42     		cmp	r3, r1
 1878 0092 06D0     		beq	.L123
1012:lvgl/src/core/lv_refr.c ****     }
 1879              		.loc 1 1012 13 is_stmt 1 view .LVU634
1012:lvgl/src/core/lv_refr.c ****     }
 1880              		.loc 1 1012 31 is_stmt 0 view .LVU635
 1881 0094 A360     		str	r3, [r4, #8]
 1882              	.L108:
1014:lvgl/src/core/lv_refr.c **** 
 1883              		.loc 1 1014 1 view .LVU636
 1884 0096 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1885              	.LVL153:
 1886              	.L122:
1001:lvgl/src/core/lv_refr.c ****         }
 1887              		.loc 1 1001 13 is_stmt 1 view .LVU637
 1888 0098 3168     		ldr	r1, [r6]
 1889 009a 7068     		ldr	r0, [r6, #4]
 1890 009c FFF7FEFF 		bl	draw_buf_rotate
 1891              	.LVL154:
 1892 00a0 EBE7     		b	.L116
 1893              	.L123:
1010:lvgl/src/core/lv_refr.c ****         else
 1894              		.loc 1 1010 13 view .LVU638
1010:lvgl/src/core/lv_refr.c ****         else
 1895              		.loc 1 1010 31 is_stmt 0 view .LVU639
 1896 00a2 A260     		str	r2, [r4, #8]
 1897 00a4 F7E7     		b	.L108
 1898              	.L125:
 1899 00a6 00BF     		.align	2
 1900              	.L124:
 1901 00a8 00000000 		.word	disp_refr
 1902              		.cfi_endproc
 1903              	.LFE183:
 1905              		.section	.text._lv_refr_init,"ax",%progbits
 1906              		.align	1
 1907              		.global	_lv_refr_init
 1908              		.syntax unified
 1909              		.thumb
 1910              		.thumb_func
 1912              	_lv_refr_init:
 1913              	.LFB162:
 101:lvgl/src/core/lv_refr.c **** #if LV_USE_PERF_MONITOR
 1914              		.loc 1 101 1 is_stmt 1 view -0
 1915              		.cfi_startproc
 1916              		@ args = 0, pretend = 0, frame = 0
 1917              		@ frame_needed = 0, uses_anonymous_args = 0
 1918 0000 08B5     		push	{r3, lr}
 1919              	.LCFI23:
 1920              		.cfi_def_cfa_offset 8
ARM GAS  C:\usertemp\ccxmAei4.s 			page 66


 1921              		.cfi_offset 3, -8
 1922              		.cfi_offset 14, -4
 103:lvgl/src/core/lv_refr.c **** #endif
 1923              		.loc 1 103 5 view .LVU641
 1924 0002 0348     		ldr	r0, .L128
 1925 0004 FFF7FEFF 		bl	perf_monitor_init
 1926              	.LVL155:
 106:lvgl/src/core/lv_refr.c **** #endif
 1927              		.loc 1 106 5 view .LVU642
 1928 0008 0248     		ldr	r0, .L128+4
 1929 000a FFF7FEFF 		bl	mem_monitor_init
 1930              	.LVL156:
 108:lvgl/src/core/lv_refr.c **** 
 1931              		.loc 1 108 1 is_stmt 0 view .LVU643
 1932 000e 08BD     		pop	{r3, pc}
 1933              	.L129:
 1934              		.align	2
 1935              	.L128:
 1936 0010 00000000 		.word	perf_monitor
 1937 0014 00000000 		.word	mem_monitor
 1938              		.cfi_endproc
 1939              	.LFE162:
 1941              		.section	.text.lv_refr_obj,"ax",%progbits
 1942              		.align	1
 1943              		.global	lv_refr_obj
 1944              		.syntax unified
 1945              		.thumb
 1946              		.thumb_func
 1948              	lv_refr_obj:
 1949              	.LVL157:
 1950              	.LFB164:
 128:lvgl/src/core/lv_refr.c ****     /*Do not refresh hidden objects*/
 1951              		.loc 1 128 1 is_stmt 1 view -0
 1952              		.cfi_startproc
 1953              		@ args = 0, pretend = 0, frame = 24
 1954              		@ frame_needed = 0, uses_anonymous_args = 0
 128:lvgl/src/core/lv_refr.c ****     /*Do not refresh hidden objects*/
 1955              		.loc 1 128 1 is_stmt 0 view .LVU645
 1956 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1957              	.LCFI24:
 1958              		.cfi_def_cfa_offset 24
 1959              		.cfi_offset 4, -24
 1960              		.cfi_offset 5, -20
 1961              		.cfi_offset 6, -16
 1962              		.cfi_offset 7, -12
 1963              		.cfi_offset 8, -8
 1964              		.cfi_offset 14, -4
 1965 0004 86B0     		sub	sp, sp, #24
 1966              	.LCFI25:
 1967              		.cfi_def_cfa_offset 48
 1968 0006 0646     		mov	r6, r0
 1969 0008 0C46     		mov	r4, r1
 130:lvgl/src/core/lv_refr.c **** 
 1970              		.loc 1 130 5 is_stmt 1 view .LVU646
 130:lvgl/src/core/lv_refr.c **** 
 1971              		.loc 1 130 8 is_stmt 0 view .LVU647
 1972 000a 0121     		movs	r1, #1
ARM GAS  C:\usertemp\ccxmAei4.s 			page 67


 1973              	.LVL158:
 130:lvgl/src/core/lv_refr.c **** 
 1974              		.loc 1 130 8 view .LVU648
 1975 000c 2046     		mov	r0, r4
 1976              	.LVL159:
 130:lvgl/src/core/lv_refr.c **** 
 1977              		.loc 1 130 8 view .LVU649
 1978 000e FFF7FEFF 		bl	lv_obj_has_flag
 1979              	.LVL160:
 130:lvgl/src/core/lv_refr.c **** 
 1980              		.loc 1 130 7 discriminator 1 view .LVU650
 1981 0012 10B1     		cbz	r0, .L139
 1982              	.L130:
 192:lvgl/src/core/lv_refr.c **** 
 1983              		.loc 1 192 1 view .LVU651
 1984 0014 06B0     		add	sp, sp, #24
 1985              	.LCFI26:
 1986              		.cfi_remember_state
 1987              		.cfi_def_cfa_offset 24
 1988              		@ sp needed
 1989 0016 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1990              	.LVL161:
 1991              	.L139:
 1992              	.LCFI27:
 1993              		.cfi_restore_state
 132:lvgl/src/core/lv_refr.c ****     lv_area_t clip_coords_for_obj;
 1994              		.loc 1 132 5 is_stmt 1 view .LVU652
 132:lvgl/src/core/lv_refr.c ****     lv_area_t clip_coords_for_obj;
 1995              		.loc 1 132 23 is_stmt 0 view .LVU653
 1996 001a B768     		ldr	r7, [r6, #8]
 1997              	.LVL162:
 133:lvgl/src/core/lv_refr.c **** 
 1998              		.loc 1 133 5 is_stmt 1 view .LVU654
 136:lvgl/src/core/lv_refr.c ****     lv_obj_get_coords(obj, &obj_coords_ext);
 1999              		.loc 1 136 5 view .LVU655
 137:lvgl/src/core/lv_refr.c ****     lv_coord_t ext_draw_size = _lv_obj_get_ext_draw_size(obj);
 2000              		.loc 1 137 5 view .LVU656
 2001 001c 02A9     		add	r1, sp, #8
 2002 001e 2046     		mov	r0, r4
 2003 0020 FFF7FEFF 		bl	lv_obj_get_coords
 2004              	.LVL163:
 138:lvgl/src/core/lv_refr.c ****     lv_area_increase(&obj_coords_ext, ext_draw_size, ext_draw_size);
 2005              		.loc 1 138 5 view .LVU657
 138:lvgl/src/core/lv_refr.c ****     lv_area_increase(&obj_coords_ext, ext_draw_size, ext_draw_size);
 2006              		.loc 1 138 32 is_stmt 0 view .LVU658
 2007 0024 2046     		mov	r0, r4
 2008 0026 FFF7FEFF 		bl	_lv_obj_get_ext_draw_size
 2009              	.LVL164:
 2010 002a 0146     		mov	r1, r0
 2011              	.LVL165:
 139:lvgl/src/core/lv_refr.c ****     if(!_lv_area_intersect(&clip_coords_for_obj, clip_area_ori, &obj_coords_ext)) return;
 2012              		.loc 1 139 5 is_stmt 1 view .LVU659
 2013 002c 0246     		mov	r2, r0
 2014 002e 02A8     		add	r0, sp, #8
 2015              	.LVL166:
 139:lvgl/src/core/lv_refr.c ****     if(!_lv_area_intersect(&clip_coords_for_obj, clip_area_ori, &obj_coords_ext)) return;
 2016              		.loc 1 139 5 is_stmt 0 view .LVU660
ARM GAS  C:\usertemp\ccxmAei4.s 			page 68


 2017 0030 FFF7FEFF 		bl	lv_area_increase
 2018              	.LVL167:
 140:lvgl/src/core/lv_refr.c **** 
 2019              		.loc 1 140 5 is_stmt 1 view .LVU661
 140:lvgl/src/core/lv_refr.c **** 
 2020              		.loc 1 140 9 is_stmt 0 view .LVU662
 2021 0034 02AA     		add	r2, sp, #8
 2022 0036 3946     		mov	r1, r7
 2023 0038 04A8     		add	r0, sp, #16
 2024 003a FFF7FEFF 		bl	_lv_area_intersect
 2025              	.LVL168:
 140:lvgl/src/core/lv_refr.c **** 
 2026              		.loc 1 140 7 discriminator 1 view .LVU663
 2027 003e 0028     		cmp	r0, #0
 2028 0040 E8D0     		beq	.L130
 142:lvgl/src/core/lv_refr.c **** 
 2029              		.loc 1 142 5 is_stmt 1 view .LVU664
 142:lvgl/src/core/lv_refr.c **** 
 2030              		.loc 1 142 25 is_stmt 0 view .LVU665
 2031 0042 04AB     		add	r3, sp, #16
 2032 0044 B360     		str	r3, [r6, #8]
 145:lvgl/src/core/lv_refr.c ****     lv_event_send(obj, LV_EVENT_DRAW_MAIN, draw_ctx);
 2033              		.loc 1 145 5 is_stmt 1 view .LVU666
 2034 0046 3246     		mov	r2, r6
 2035 0048 1421     		movs	r1, #20
 2036 004a 2046     		mov	r0, r4
 2037 004c FFF7FEFF 		bl	lv_event_send
 2038              	.LVL169:
 146:lvgl/src/core/lv_refr.c ****     lv_event_send(obj, LV_EVENT_DRAW_MAIN_END, draw_ctx);
 2039              		.loc 1 146 5 view .LVU667
 2040 0050 3246     		mov	r2, r6
 2041 0052 1521     		movs	r1, #21
 2042 0054 2046     		mov	r0, r4
 2043 0056 FFF7FEFF 		bl	lv_event_send
 2044              	.LVL170:
 147:lvgl/src/core/lv_refr.c **** 
 2045              		.loc 1 147 5 view .LVU668
 2046 005a 3246     		mov	r2, r6
 2047 005c 1621     		movs	r1, #22
 2048 005e 2046     		mov	r0, r4
 2049 0060 FFF7FEFF 		bl	lv_event_send
 2050              	.LVL171:
 163:lvgl/src/core/lv_refr.c ****     lv_area_t clip_coords_for_children;
 2051              		.loc 1 163 5 view .LVU669
 164:lvgl/src/core/lv_refr.c ****     if(lv_obj_has_flag(obj, LV_OBJ_FLAG_OVERFLOW_VISIBLE)) {
 2052              		.loc 1 164 5 view .LVU670
 165:lvgl/src/core/lv_refr.c ****         clip_coords_for_children  = *clip_area_ori;
 2053              		.loc 1 165 5 view .LVU671
 165:lvgl/src/core/lv_refr.c ****         clip_coords_for_children  = *clip_area_ori;
 2054              		.loc 1 165 8 is_stmt 0 view .LVU672
 2055 0064 4FF40021 		mov	r1, #524288
 2056 0068 2046     		mov	r0, r4
 2057 006a FFF7FEFF 		bl	lv_obj_has_flag
 2058              	.LVL172:
 165:lvgl/src/core/lv_refr.c ****         clip_coords_for_children  = *clip_area_ori;
 2059              		.loc 1 165 7 discriminator 1 view .LVU673
 2060 006e 58B1     		cbz	r0, .L132
ARM GAS  C:\usertemp\ccxmAei4.s 			page 69


 166:lvgl/src/core/lv_refr.c ****     }
 2061              		.loc 1 166 9 is_stmt 1 view .LVU674
 166:lvgl/src/core/lv_refr.c ****     }
 2062              		.loc 1 166 35 is_stmt 0 view .LVU675
 2063 0070 6B46     		mov	r3, sp
 2064 0072 3868     		ldr	r0, [r7]	@ unaligned
 2065 0074 7968     		ldr	r1, [r7, #4]	@ unaligned
 2066 0076 03C3     		stmia	r3!, {r0, r1}
 174:lvgl/src/core/lv_refr.c ****         draw_ctx->clip_area = &clip_coords_for_children;
 2067              		.loc 1 174 5 is_stmt 1 view .LVU676
 2068              	.L133:
 2069              	.LVL173:
 2070              	.LBB90:
 175:lvgl/src/core/lv_refr.c ****         uint32_t i;
 2071              		.loc 1 175 9 view .LVU677
 175:lvgl/src/core/lv_refr.c ****         uint32_t i;
 2072              		.loc 1 175 29 is_stmt 0 view .LVU678
 2073 0078 C6F808D0 		str	sp, [r6, #8]
 176:lvgl/src/core/lv_refr.c ****         uint32_t child_cnt = lv_obj_get_child_cnt(obj);
 2074              		.loc 1 176 9 is_stmt 1 view .LVU679
 177:lvgl/src/core/lv_refr.c ****         for(i = 0; i < child_cnt; i++) {
 2075              		.loc 1 177 9 view .LVU680
 177:lvgl/src/core/lv_refr.c ****         for(i = 0; i < child_cnt; i++) {
 2076              		.loc 1 177 30 is_stmt 0 view .LVU681
 2077 007c 2046     		mov	r0, r4
 2078 007e FFF7FEFF 		bl	lv_obj_get_child_cnt
 2079              	.LVL174:
 2080 0082 8046     		mov	r8, r0
 2081              	.LVL175:
 178:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 2082              		.loc 1 178 9 is_stmt 1 view .LVU682
 178:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 2083              		.loc 1 178 15 is_stmt 0 view .LVU683
 2084 0084 0025     		movs	r5, #0
 178:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 2085              		.loc 1 178 9 view .LVU684
 2086 0086 0FE0     		b	.L135
 2087              	.LVL176:
 2088              	.L132:
 178:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 2089              		.loc 1 178 9 view .LVU685
 2090              	.LBE90:
 169:lvgl/src/core/lv_refr.c ****             refr_children = false;
 2091              		.loc 1 169 9 is_stmt 1 view .LVU686
 169:lvgl/src/core/lv_refr.c ****             refr_children = false;
 2092              		.loc 1 169 13 is_stmt 0 view .LVU687
 2093 0088 04F11402 		add	r2, r4, #20
 2094 008c 3946     		mov	r1, r7
 2095 008e 6846     		mov	r0, sp
 2096 0090 FFF7FEFF 		bl	_lv_area_intersect
 2097              	.LVL177:
 169:lvgl/src/core/lv_refr.c ****             refr_children = false;
 2098              		.loc 1 169 11 discriminator 1 view .LVU688
 2099 0094 50B1     		cbz	r0, .L134
 2100 0096 EFE7     		b	.L133
 2101              	.LVL178:
 2102              	.L136:
ARM GAS  C:\usertemp\ccxmAei4.s 			page 70


 2103              	.LBB92:
 2104              	.LBB91:
 179:lvgl/src/core/lv_refr.c ****             lv_refr_obj(draw_ctx, child);
 2105              		.loc 1 179 13 is_stmt 1 view .LVU689
 179:lvgl/src/core/lv_refr.c ****             lv_refr_obj(draw_ctx, child);
 2106              		.loc 1 179 35 is_stmt 0 view .LVU690
 2107 0098 A368     		ldr	r3, [r4, #8]
 179:lvgl/src/core/lv_refr.c ****             lv_refr_obj(draw_ctx, child);
 2108              		.loc 1 179 46 view .LVU691
 2109 009a 1B68     		ldr	r3, [r3]
 2110              	.LVL179:
 180:lvgl/src/core/lv_refr.c ****         }
 2111              		.loc 1 180 13 is_stmt 1 view .LVU692
 2112 009c 53F82510 		ldr	r1, [r3, r5, lsl #2]
 2113 00a0 3046     		mov	r0, r6
 2114 00a2 FFF7FEFF 		bl	lv_refr_obj
 2115              	.LVL180:
 180:lvgl/src/core/lv_refr.c ****         }
 2116              		.loc 1 180 13 is_stmt 0 view .LVU693
 2117              	.LBE91:
 178:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 2118              		.loc 1 178 36 is_stmt 1 discriminator 3 view .LVU694
 2119 00a6 0135     		adds	r5, r5, #1
 2120              	.LVL181:
 2121              	.L135:
 178:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 2122              		.loc 1 178 22 discriminator 1 view .LVU695
 2123 00a8 4545     		cmp	r5, r8
 2124 00aa F5D3     		bcc	.L136
 2125              	.LVL182:
 2126              	.L134:
 178:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 2127              		.loc 1 178 22 is_stmt 0 discriminator 1 view .LVU696
 2128              	.LBE92:
 184:lvgl/src/core/lv_refr.c **** 
 2129              		.loc 1 184 5 is_stmt 1 view .LVU697
 184:lvgl/src/core/lv_refr.c **** 
 2130              		.loc 1 184 25 is_stmt 0 view .LVU698
 2131 00ac 04AB     		add	r3, sp, #16
 2132 00ae B360     		str	r3, [r6, #8]
 187:lvgl/src/core/lv_refr.c ****     lv_event_send(obj, LV_EVENT_DRAW_POST, draw_ctx);
 2133              		.loc 1 187 5 is_stmt 1 view .LVU699
 2134 00b0 3246     		mov	r2, r6
 2135 00b2 1721     		movs	r1, #23
 2136 00b4 2046     		mov	r0, r4
 2137 00b6 FFF7FEFF 		bl	lv_event_send
 2138              	.LVL183:
 188:lvgl/src/core/lv_refr.c ****     lv_event_send(obj, LV_EVENT_DRAW_POST_END, draw_ctx);
 2139              		.loc 1 188 5 view .LVU700
 2140 00ba 3246     		mov	r2, r6
 2141 00bc 1821     		movs	r1, #24
 2142 00be 2046     		mov	r0, r4
 2143 00c0 FFF7FEFF 		bl	lv_event_send
 2144              	.LVL184:
 189:lvgl/src/core/lv_refr.c **** 
 2145              		.loc 1 189 5 view .LVU701
 2146 00c4 3246     		mov	r2, r6
ARM GAS  C:\usertemp\ccxmAei4.s 			page 71


 2147 00c6 1921     		movs	r1, #25
 2148 00c8 2046     		mov	r0, r4
 2149 00ca FFF7FEFF 		bl	lv_event_send
 2150              	.LVL185:
 191:lvgl/src/core/lv_refr.c **** }
 2151              		.loc 1 191 5 view .LVU702
 191:lvgl/src/core/lv_refr.c **** }
 2152              		.loc 1 191 25 is_stmt 0 view .LVU703
 2153 00ce B760     		str	r7, [r6, #8]
 2154 00d0 A0E7     		b	.L130
 2155              		.cfi_endproc
 2156              	.LFE164:
 2158              		.section	.text.lv_refr_obj_and_children,"ax",%progbits
 2159              		.align	1
 2160              		.syntax unified
 2161              		.thumb
 2162              		.thumb_func
 2164              	lv_refr_obj_and_children:
 2165              	.LVL186:
 2166              	.LFB176:
 712:lvgl/src/core/lv_refr.c ****     /*Normally always will be a top_obj (at least the screen)
 2167              		.loc 1 712 1 is_stmt 1 view -0
 2168              		.cfi_startproc
 2169              		@ args = 0, pretend = 0, frame = 0
 2170              		@ frame_needed = 0, uses_anonymous_args = 0
 712:lvgl/src/core/lv_refr.c ****     /*Normally always will be a top_obj (at least the screen)
 2171              		.loc 1 712 1 is_stmt 0 view .LVU705
 2172 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2173              	.LCFI28:
 2174              		.cfi_def_cfa_offset 32
 2175              		.cfi_offset 3, -32
 2176              		.cfi_offset 4, -28
 2177              		.cfi_offset 5, -24
 2178              		.cfi_offset 6, -20
 2179              		.cfi_offset 7, -16
 2180              		.cfi_offset 8, -12
 2181              		.cfi_offset 9, -8
 2182              		.cfi_offset 14, -4
 2183 0004 8146     		mov	r9, r0
 716:lvgl/src/core/lv_refr.c ****     if(top_obj == NULL) return;  /*Shouldn't happen*/
 2184              		.loc 1 716 5 is_stmt 1 view .LVU706
 716:lvgl/src/core/lv_refr.c ****     if(top_obj == NULL) return;  /*Shouldn't happen*/
 2185              		.loc 1 716 7 is_stmt 0 view .LVU707
 2186 0006 8846     		mov	r8, r1
 2187 0008 41B1     		cbz	r1, .L151
 2188              	.LVL187:
 2189              	.L141:
 720:lvgl/src/core/lv_refr.c **** 
 2190              		.loc 1 720 5 is_stmt 1 view .LVU708
 2191 000a 4146     		mov	r1, r8
 2192 000c 4846     		mov	r0, r9
 2193 000e FFF7FEFF 		bl	lv_refr_obj
 2194              	.LVL188:
 723:lvgl/src/core/lv_refr.c ****     lv_obj_t * border_p = top_obj;
 2195              		.loc 1 723 5 view .LVU709
 724:lvgl/src/core/lv_refr.c **** 
 2196              		.loc 1 724 5 view .LVU710
ARM GAS  C:\usertemp\ccxmAei4.s 			page 72


 726:lvgl/src/core/lv_refr.c **** 
 2197              		.loc 1 726 5 view .LVU711
 726:lvgl/src/core/lv_refr.c **** 
 2198              		.loc 1 726 14 is_stmt 0 view .LVU712
 2199 0012 4046     		mov	r0, r8
 2200 0014 FFF7FEFF 		bl	lv_obj_get_parent
 2201              	.LVL189:
 2202 0018 0546     		mov	r5, r0
 2203              	.LVL190:
 729:lvgl/src/core/lv_refr.c ****         bool go = false;
 2204              		.loc 1 729 5 is_stmt 1 view .LVU713
 729:lvgl/src/core/lv_refr.c ****         bool go = false;
 2205              		.loc 1 729 10 is_stmt 0 view .LVU714
 2206 001a 2CE0     		b	.L143
 2207              	.LVL191:
 2208              	.L151:
 716:lvgl/src/core/lv_refr.c ****     if(top_obj == NULL) return;  /*Shouldn't happen*/
 2209              		.loc 1 716 25 is_stmt 1 discriminator 1 view .LVU715
 716:lvgl/src/core/lv_refr.c ****     if(top_obj == NULL) return;  /*Shouldn't happen*/
 2210              		.loc 1 716 35 is_stmt 0 discriminator 1 view .LVU716
 2211 001c 1A4B     		ldr	r3, .L153
 2212 001e 1868     		ldr	r0, [r3]
 2213              	.LVL192:
 716:lvgl/src/core/lv_refr.c ****     if(top_obj == NULL) return;  /*Shouldn't happen*/
 2214              		.loc 1 716 35 discriminator 1 view .LVU717
 2215 0020 FFF7FEFF 		bl	lv_disp_get_scr_act
 2216              	.LVL193:
 717:lvgl/src/core/lv_refr.c **** 
 2217              		.loc 1 717 5 is_stmt 1 view .LVU718
 717:lvgl/src/core/lv_refr.c **** 
 2218              		.loc 1 717 7 is_stmt 0 view .LVU719
 2219 0024 8046     		mov	r8, r0
 2220 0026 0028     		cmp	r0, #0
 2221 0028 EFD1     		bne	.L141
 2222              	.LVL194:
 2223              	.L140:
 755:lvgl/src/core/lv_refr.c **** 
 2224              		.loc 1 755 1 view .LVU720
 2225 002a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2226              	.LVL195:
 2227              	.L145:
 2228              	.LBB93:
 2229              	.LBB94:
 740:lvgl/src/core/lv_refr.c ****             }
 2230              		.loc 1 740 17 is_stmt 1 view .LVU721
 2231 002e 4846     		mov	r0, r9
 2232 0030 FFF7FEFF 		bl	lv_refr_obj
 2233              	.LVL196:
 2234              	.L146:
 740:lvgl/src/core/lv_refr.c ****             }
 2235              		.loc 1 740 17 is_stmt 0 view .LVU722
 2236              	.LBE94:
 733:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = parent->spec_attr->children[i];
 2237              		.loc 1 733 36 is_stmt 1 discriminator 2 view .LVU723
 2238 0034 0134     		adds	r4, r4, #1
 2239              	.LVL197:
 2240              	.L144:
ARM GAS  C:\usertemp\ccxmAei4.s 			page 73


 733:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = parent->spec_attr->children[i];
 2241              		.loc 1 733 22 discriminator 1 view .LVU724
 2242 0036 B442     		cmp	r4, r6
 2243 0038 09D2     		bcs	.L152
 2244              	.LBB95:
 734:lvgl/src/core/lv_refr.c ****             if(!go) {
 2245              		.loc 1 734 13 view .LVU725
 734:lvgl/src/core/lv_refr.c ****             if(!go) {
 2246              		.loc 1 734 38 is_stmt 0 view .LVU726
 2247 003a AB68     		ldr	r3, [r5, #8]
 734:lvgl/src/core/lv_refr.c ****             if(!go) {
 2248              		.loc 1 734 49 view .LVU727
 2249 003c 1B68     		ldr	r3, [r3]
 734:lvgl/src/core/lv_refr.c ****             if(!go) {
 2250              		.loc 1 734 24 view .LVU728
 2251 003e 53F82410 		ldr	r1, [r3, r4, lsl #2]
 2252              	.LVL198:
 735:lvgl/src/core/lv_refr.c ****                 if(child == border_p) go = true;
 2253              		.loc 1 735 13 is_stmt 1 view .LVU729
 735:lvgl/src/core/lv_refr.c ****                 if(child == border_p) go = true;
 2254              		.loc 1 735 15 is_stmt 0 view .LVU730
 2255 0042 002F     		cmp	r7, #0
 2256 0044 F3D1     		bne	.L145
 736:lvgl/src/core/lv_refr.c ****             }
 2257              		.loc 1 736 17 is_stmt 1 view .LVU731
 736:lvgl/src/core/lv_refr.c ****             }
 2258              		.loc 1 736 19 is_stmt 0 view .LVU732
 2259 0046 8845     		cmp	r8, r1
 2260 0048 F4D1     		bne	.L146
 736:lvgl/src/core/lv_refr.c ****             }
 2261              		.loc 1 736 42 discriminator 1 view .LVU733
 2262 004a 0127     		movs	r7, #1
 2263              	.LVL199:
 736:lvgl/src/core/lv_refr.c ****             }
 2264              		.loc 1 736 42 discriminator 1 view .LVU734
 2265 004c F2E7     		b	.L146
 2266              	.LVL200:
 2267              	.L152:
 736:lvgl/src/core/lv_refr.c ****             }
 2268              		.loc 1 736 42 discriminator 1 view .LVU735
 2269              	.LBE95:
 745:lvgl/src/core/lv_refr.c ****         lv_event_send(parent, LV_EVENT_DRAW_POST, (void *)draw_ctx);
 2270              		.loc 1 745 9 is_stmt 1 view .LVU736
 2271 004e 4A46     		mov	r2, r9
 2272 0050 1721     		movs	r1, #23
 2273 0052 2846     		mov	r0, r5
 2274 0054 FFF7FEFF 		bl	lv_event_send
 2275              	.LVL201:
 746:lvgl/src/core/lv_refr.c ****         lv_event_send(parent, LV_EVENT_DRAW_POST_END, (void *)draw_ctx);
 2276              		.loc 1 746 9 view .LVU737
 2277 0058 4A46     		mov	r2, r9
 2278 005a 1821     		movs	r1, #24
 2279 005c 2846     		mov	r0, r5
 2280 005e FFF7FEFF 		bl	lv_event_send
 2281              	.LVL202:
 747:lvgl/src/core/lv_refr.c **** 
 2282              		.loc 1 747 9 view .LVU738
ARM GAS  C:\usertemp\ccxmAei4.s 			page 74


 2283 0062 4A46     		mov	r2, r9
 2284 0064 1921     		movs	r1, #25
 2285 0066 2846     		mov	r0, r5
 2286 0068 FFF7FEFF 		bl	lv_event_send
 2287              	.LVL203:
 751:lvgl/src/core/lv_refr.c ****         /*Go a level deeper*/
 2288              		.loc 1 751 9 view .LVU739
 753:lvgl/src/core/lv_refr.c ****     }
 2289              		.loc 1 753 9 view .LVU740
 753:lvgl/src/core/lv_refr.c ****     }
 2290              		.loc 1 753 18 is_stmt 0 view .LVU741
 2291 006c 2846     		mov	r0, r5
 2292 006e FFF7FEFF 		bl	lv_obj_get_parent
 2293              	.LVL204:
 751:lvgl/src/core/lv_refr.c ****         /*Go a level deeper*/
 2294              		.loc 1 751 18 view .LVU742
 2295 0072 A846     		mov	r8, r5
 753:lvgl/src/core/lv_refr.c ****     }
 2296              		.loc 1 753 18 view .LVU743
 2297 0074 0546     		mov	r5, r0
 2298              	.LVL205:
 2299              	.L143:
 753:lvgl/src/core/lv_refr.c ****     }
 2300              		.loc 1 753 18 view .LVU744
 2301              	.LBE93:
 729:lvgl/src/core/lv_refr.c ****         bool go = false;
 2302              		.loc 1 729 18 is_stmt 1 view .LVU745
 2303 0076 002D     		cmp	r5, #0
 2304 0078 D7D0     		beq	.L140
 2305              	.LBB96:
 730:lvgl/src/core/lv_refr.c ****         uint32_t i;
 2306              		.loc 1 730 9 view .LVU746
 2307              	.LVL206:
 731:lvgl/src/core/lv_refr.c ****         uint32_t child_cnt = lv_obj_get_child_cnt(parent);
 2308              		.loc 1 731 9 view .LVU747
 732:lvgl/src/core/lv_refr.c ****         for(i = 0; i < child_cnt; i++) {
 2309              		.loc 1 732 9 view .LVU748
 732:lvgl/src/core/lv_refr.c ****         for(i = 0; i < child_cnt; i++) {
 2310              		.loc 1 732 30 is_stmt 0 view .LVU749
 2311 007a 2846     		mov	r0, r5
 732:lvgl/src/core/lv_refr.c ****         for(i = 0; i < child_cnt; i++) {
 2312              		.loc 1 732 30 view .LVU750
 2313 007c FFF7FEFF 		bl	lv_obj_get_child_cnt
 2314              	.LVL207:
 732:lvgl/src/core/lv_refr.c ****         for(i = 0; i < child_cnt; i++) {
 2315              		.loc 1 732 30 view .LVU751
 2316 0080 0646     		mov	r6, r0
 2317              	.LVL208:
 733:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = parent->spec_attr->children[i];
 2318              		.loc 1 733 9 is_stmt 1 view .LVU752
 733:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = parent->spec_attr->children[i];
 2319              		.loc 1 733 15 is_stmt 0 view .LVU753
 2320 0082 0024     		movs	r4, #0
 730:lvgl/src/core/lv_refr.c ****         uint32_t i;
 2321              		.loc 1 730 14 view .LVU754
 2322 0084 2746     		mov	r7, r4
 733:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = parent->spec_attr->children[i];
ARM GAS  C:\usertemp\ccxmAei4.s 			page 75


 2323              		.loc 1 733 9 view .LVU755
 2324 0086 D6E7     		b	.L144
 2325              	.L154:
 2326              		.align	2
 2327              	.L153:
 2328 0088 00000000 		.word	disp_refr
 2329              	.LBE96:
 2330              		.cfi_endproc
 2331              	.LFE176:
 2333              		.section	.text.lv_refr_area_part,"ax",%progbits
 2334              		.align	1
 2335              		.syntax unified
 2336              		.thumb
 2337              		.thumb_func
 2339              	lv_refr_area_part:
 2340              	.LVL209:
 2341              	.LFB174:
 590:lvgl/src/core/lv_refr.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp_refr);
 2342              		.loc 1 590 1 is_stmt 1 view -0
 2343              		.cfi_startproc
 2344              		@ args = 0, pretend = 0, frame = 72
 2345              		@ frame_needed = 0, uses_anonymous_args = 0
 590:lvgl/src/core/lv_refr.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp_refr);
 2346              		.loc 1 590 1 is_stmt 0 view .LVU757
 2347 0000 70B5     		push	{r4, r5, r6, lr}
 2348              	.LCFI29:
 2349              		.cfi_def_cfa_offset 16
 2350              		.cfi_offset 4, -16
 2351              		.cfi_offset 5, -12
 2352              		.cfi_offset 6, -8
 2353              		.cfi_offset 14, -4
 2354 0002 94B0     		sub	sp, sp, #80
 2355              	.LCFI30:
 2356              		.cfi_def_cfa_offset 96
 2357 0004 0446     		mov	r4, r0
 591:lvgl/src/core/lv_refr.c **** 
 2358              		.loc 1 591 5 is_stmt 1 view .LVU758
 591:lvgl/src/core/lv_refr.c **** 
 2359              		.loc 1 591 37 is_stmt 0 view .LVU759
 2360 0006 564B     		ldr	r3, .L174
 2361 0008 1868     		ldr	r0, [r3]
 2362              	.LVL210:
 591:lvgl/src/core/lv_refr.c **** 
 2363              		.loc 1 591 37 view .LVU760
 2364 000a FFF7FEFF 		bl	lv_disp_get_draw_buf
 2365              	.LVL211:
 595:lvgl/src/core/lv_refr.c ****         while(draw_buf->flushing) {
 2366              		.loc 1 595 5 is_stmt 1 view .LVU761
 595:lvgl/src/core/lv_refr.c ****         while(draw_buf->flushing) {
 2367              		.loc 1 595 16 is_stmt 0 view .LVU762
 2368 000e 0368     		ldr	r3, [r0]
 595:lvgl/src/core/lv_refr.c ****         while(draw_buf->flushing) {
 2369              		.loc 1 595 7 view .LVU763
 2370 0010 1BB1     		cbz	r3, .L156
 2371 0012 0546     		mov	r5, r0
 595:lvgl/src/core/lv_refr.c ****         while(draw_buf->flushing) {
 2372              		.loc 1 595 35 discriminator 1 view .LVU764
ARM GAS  C:\usertemp\ccxmAei4.s 			page 76


 2373 0014 4368     		ldr	r3, [r0, #4]
 595:lvgl/src/core/lv_refr.c ****         while(draw_buf->flushing) {
 2374              		.loc 1 595 23 discriminator 1 view .LVU765
 2375 0016 002B     		cmp	r3, #0
 2376 0018 54D0     		beq	.L158
 2377              	.LVL212:
 2378              	.L156:
 601:lvgl/src/core/lv_refr.c ****     lv_obj_t * top_prev_scr = NULL;
 2379              		.loc 1 601 5 is_stmt 1 view .LVU766
 602:lvgl/src/core/lv_refr.c **** 
 2380              		.loc 1 602 5 view .LVU767
 605:lvgl/src/core/lv_refr.c ****     if(disp_refr->prev_scr) {
 2381              		.loc 1 605 5 view .LVU768
 605:lvgl/src/core/lv_refr.c ****     if(disp_refr->prev_scr) {
 2382              		.loc 1 605 47 is_stmt 0 view .LVU769
 2383 001a 6668     		ldr	r6, [r4, #4]
 605:lvgl/src/core/lv_refr.c ****     if(disp_refr->prev_scr) {
 2384              		.loc 1 605 19 view .LVU770
 2385 001c 504D     		ldr	r5, .L174
 2386 001e 2868     		ldr	r0, [r5]
 2387 0020 FFF7FEFF 		bl	lv_disp_get_scr_act
 2388              	.LVL213:
 2389 0024 0146     		mov	r1, r0
 605:lvgl/src/core/lv_refr.c ****     if(disp_refr->prev_scr) {
 2390              		.loc 1 605 19 discriminator 1 view .LVU771
 2391 0026 3046     		mov	r0, r6
 2392 0028 FFF7FEFF 		bl	lv_refr_get_top_obj
 2393              	.LVL214:
 2394 002c 0646     		mov	r6, r0
 2395              	.LVL215:
 606:lvgl/src/core/lv_refr.c ****         top_prev_scr = lv_refr_get_top_obj(draw_ctx->buf_area, disp_refr->prev_scr);
 2396              		.loc 1 606 5 is_stmt 1 view .LVU772
 606:lvgl/src/core/lv_refr.c ****         top_prev_scr = lv_refr_get_top_obj(draw_ctx->buf_area, disp_refr->prev_scr);
 2397              		.loc 1 606 17 is_stmt 0 view .LVU773
 2398 002e 2B68     		ldr	r3, [r5]
 2399 0030 5D69     		ldr	r5, [r3, #20]
 606:lvgl/src/core/lv_refr.c ****         top_prev_scr = lv_refr_get_top_obj(draw_ctx->buf_area, disp_refr->prev_scr);
 2400              		.loc 1 606 7 view .LVU774
 2401 0032 25B1     		cbz	r5, .L160
 607:lvgl/src/core/lv_refr.c ****     }
 2402              		.loc 1 607 9 is_stmt 1 view .LVU775
 607:lvgl/src/core/lv_refr.c ****     }
 2403              		.loc 1 607 24 is_stmt 0 view .LVU776
 2404 0034 2946     		mov	r1, r5
 2405 0036 6068     		ldr	r0, [r4, #4]
 2406              	.LVL216:
 607:lvgl/src/core/lv_refr.c ****     }
 2407              		.loc 1 607 24 view .LVU777
 2408 0038 FFF7FEFF 		bl	lv_refr_get_top_obj
 2409              	.LVL217:
 2410 003c 0546     		mov	r5, r0
 2411              	.LVL218:
 2412              	.L160:
 611:lvgl/src/core/lv_refr.c ****         if(draw_ctx->draw_bg) {
 2413              		.loc 1 611 5 is_stmt 1 view .LVU778
 611:lvgl/src/core/lv_refr.c ****         if(draw_ctx->draw_bg) {
 2414              		.loc 1 611 7 is_stmt 0 view .LVU779
ARM GAS  C:\usertemp\ccxmAei4.s 			page 77


 2415 003e 002E     		cmp	r6, #0
 2416 0040 08BF     		it	eq
 2417 0042 002D     		cmpeq	r5, #0
 2418 0044 17D1     		bne	.L161
 612:lvgl/src/core/lv_refr.c ****             lv_draw_rect_dsc_t dsc;
 2419              		.loc 1 612 9 is_stmt 1 view .LVU780
 612:lvgl/src/core/lv_refr.c ****             lv_draw_rect_dsc_t dsc;
 2420              		.loc 1 612 20 is_stmt 0 view .LVU781
 2421 0046 A36A     		ldr	r3, [r4, #40]
 612:lvgl/src/core/lv_refr.c ****             lv_draw_rect_dsc_t dsc;
 2422              		.loc 1 612 11 view .LVU782
 2423 0048 002B     		cmp	r3, #0
 2424 004a 46D0     		beq	.L162
 2425              	.LBB97:
 613:lvgl/src/core/lv_refr.c ****             lv_draw_rect_dsc_init(&dsc);
 2426              		.loc 1 613 13 is_stmt 1 view .LVU783
 614:lvgl/src/core/lv_refr.c ****             dsc.bg_img_src = disp_refr->bg_img;
 2427              		.loc 1 614 13 view .LVU784
 2428 004c 06A8     		add	r0, sp, #24
 2429 004e FFF7FEFF 		bl	lv_draw_rect_dsc_init
 2430              	.LVL219:
 615:lvgl/src/core/lv_refr.c ****             dsc.bg_img_opa = disp_refr->bg_opa;
 2431              		.loc 1 615 13 view .LVU785
 615:lvgl/src/core/lv_refr.c ****             dsc.bg_img_opa = disp_refr->bg_opa;
 2432              		.loc 1 615 39 is_stmt 0 view .LVU786
 2433 0052 434B     		ldr	r3, .L174
 2434 0054 1B68     		ldr	r3, [r3]
 2435 0056 DA6A     		ldr	r2, [r3, #44]
 615:lvgl/src/core/lv_refr.c ****             dsc.bg_img_opa = disp_refr->bg_opa;
 2436              		.loc 1 615 28 view .LVU787
 2437 0058 0A92     		str	r2, [sp, #40]
 616:lvgl/src/core/lv_refr.c ****             dsc.bg_color = disp_refr->bg_color;
 2438              		.loc 1 616 13 is_stmt 1 view .LVU788
 616:lvgl/src/core/lv_refr.c ****             dsc.bg_color = disp_refr->bg_color;
 2439              		.loc 1 616 39 is_stmt 0 view .LVU789
 2440 005a 93F82920 		ldrb	r2, [r3, #41]	@ zero_extendqisi2
 616:lvgl/src/core/lv_refr.c ****             dsc.bg_color = disp_refr->bg_color;
 2441              		.loc 1 616 28 view .LVU790
 2442 005e 8DF83220 		strb	r2, [sp, #50]
 617:lvgl/src/core/lv_refr.c ****             dsc.bg_opa = disp_refr->bg_opa;
 2443              		.loc 1 617 13 is_stmt 1 view .LVU791
 617:lvgl/src/core/lv_refr.c ****             dsc.bg_opa = disp_refr->bg_opa;
 2444              		.loc 1 617 26 is_stmt 0 view .LVU792
 2445 0062 5B8D     		ldrh	r3, [r3, #42]
 2446 0064 ADF81C30 		strh	r3, [sp, #28]	@ movhi
 618:lvgl/src/core/lv_refr.c ****             draw_ctx->draw_bg(draw_ctx, &dsc, draw_ctx->buf_area);
 2447              		.loc 1 618 13 is_stmt 1 view .LVU793
 618:lvgl/src/core/lv_refr.c ****             draw_ctx->draw_bg(draw_ctx, &dsc, draw_ctx->buf_area);
 2448              		.loc 1 618 24 is_stmt 0 view .LVU794
 2449 0068 8DF81B20 		strb	r2, [sp, #27]
 619:lvgl/src/core/lv_refr.c ****         }
 2450              		.loc 1 619 13 is_stmt 1 view .LVU795
 619:lvgl/src/core/lv_refr.c ****         }
 2451              		.loc 1 619 21 is_stmt 0 view .LVU796
 2452 006c A36A     		ldr	r3, [r4, #40]
 619:lvgl/src/core/lv_refr.c ****         }
 2453              		.loc 1 619 13 view .LVU797
ARM GAS  C:\usertemp\ccxmAei4.s 			page 78


 2454 006e 6268     		ldr	r2, [r4, #4]
 2455 0070 06A9     		add	r1, sp, #24
 2456 0072 2046     		mov	r0, r4
 2457 0074 9847     		blx	r3
 2458              	.LVL220:
 2459              	.L161:
 619:lvgl/src/core/lv_refr.c ****         }
 2460              		.loc 1 619 13 view .LVU798
 2461              	.LBE97:
 646:lvgl/src/core/lv_refr.c ****         if(top_prev_scr == NULL) top_prev_scr = disp_refr->prev_scr;
 2462              		.loc 1 646 5 is_stmt 1 view .LVU799
 646:lvgl/src/core/lv_refr.c ****         if(top_prev_scr == NULL) top_prev_scr = disp_refr->prev_scr;
 2463              		.loc 1 646 17 is_stmt 0 view .LVU800
 2464 0076 3A4B     		ldr	r3, .L174
 2465 0078 1B68     		ldr	r3, [r3]
 2466 007a 5B69     		ldr	r3, [r3, #20]
 646:lvgl/src/core/lv_refr.c ****         if(top_prev_scr == NULL) top_prev_scr = disp_refr->prev_scr;
 2467              		.loc 1 646 7 view .LVU801
 2468 007c 2BB1     		cbz	r3, .L165
 647:lvgl/src/core/lv_refr.c ****         lv_refr_obj_and_children(draw_ctx, top_prev_scr);
 2469              		.loc 1 647 9 is_stmt 1 view .LVU802
 647:lvgl/src/core/lv_refr.c ****         lv_refr_obj_and_children(draw_ctx, top_prev_scr);
 2470              		.loc 1 647 11 is_stmt 0 view .LVU803
 2471 007e 002D     		cmp	r5, #0
 2472 0080 65D0     		beq	.L171
 2473              	.LVL221:
 2474              	.L166:
 648:lvgl/src/core/lv_refr.c ****     }
 2475              		.loc 1 648 9 is_stmt 1 view .LVU804
 2476 0082 2946     		mov	r1, r5
 2477 0084 2046     		mov	r0, r4
 2478 0086 FFF7FEFF 		bl	lv_refr_obj_and_children
 2479              	.LVL222:
 2480              	.L165:
 651:lvgl/src/core/lv_refr.c ****     lv_refr_obj_and_children(draw_ctx, top_act_scr);
 2481              		.loc 1 651 5 view .LVU805
 651:lvgl/src/core/lv_refr.c ****     lv_refr_obj_and_children(draw_ctx, top_act_scr);
 2482              		.loc 1 651 7 is_stmt 0 view .LVU806
 2483 008a 002E     		cmp	r6, #0
 2484 008c 61D0     		beq	.L172
 2485              	.L167:
 652:lvgl/src/core/lv_refr.c **** 
 2486              		.loc 1 652 5 is_stmt 1 view .LVU807
 2487 008e 3146     		mov	r1, r6
 2488 0090 2046     		mov	r0, r4
 2489 0092 FFF7FEFF 		bl	lv_refr_obj_and_children
 2490              	.LVL223:
 655:lvgl/src/core/lv_refr.c ****     lv_refr_obj_and_children(draw_ctx, lv_disp_get_layer_sys(disp_refr));
 2491              		.loc 1 655 5 view .LVU808
 2492 0096 324D     		ldr	r5, .L174
 2493              	.LVL224:
 655:lvgl/src/core/lv_refr.c ****     lv_refr_obj_and_children(draw_ctx, lv_disp_get_layer_sys(disp_refr));
 2494              		.loc 1 655 5 is_stmt 0 view .LVU809
 2495 0098 2868     		ldr	r0, [r5]
 2496 009a FFF7FEFF 		bl	lv_disp_get_layer_top
 2497              	.LVL225:
 2498 009e 0146     		mov	r1, r0
ARM GAS  C:\usertemp\ccxmAei4.s 			page 79


 655:lvgl/src/core/lv_refr.c ****     lv_refr_obj_and_children(draw_ctx, lv_disp_get_layer_sys(disp_refr));
 2499              		.loc 1 655 5 discriminator 1 view .LVU810
 2500 00a0 2046     		mov	r0, r4
 2501 00a2 FFF7FEFF 		bl	lv_refr_obj_and_children
 2502              	.LVL226:
 656:lvgl/src/core/lv_refr.c **** 
 2503              		.loc 1 656 5 is_stmt 1 view .LVU811
 2504 00a6 2868     		ldr	r0, [r5]
 2505 00a8 FFF7FEFF 		bl	lv_disp_get_layer_sys
 2506              	.LVL227:
 2507 00ac 0146     		mov	r1, r0
 656:lvgl/src/core/lv_refr.c **** 
 2508              		.loc 1 656 5 is_stmt 0 discriminator 1 view .LVU812
 2509 00ae 2046     		mov	r0, r4
 2510 00b0 FFF7FEFF 		bl	lv_refr_obj_and_children
 2511              	.LVL228:
 660:lvgl/src/core/lv_refr.c ****         draw_buf_flush(disp_refr);
 2512              		.loc 1 660 5 is_stmt 1 view .LVU813
 660:lvgl/src/core/lv_refr.c ****         draw_buf_flush(disp_refr);
 2513              		.loc 1 660 17 is_stmt 0 view .LVU814
 2514 00b4 2868     		ldr	r0, [r5]
 2515 00b6 0368     		ldr	r3, [r0]
 660:lvgl/src/core/lv_refr.c ****         draw_buf_flush(disp_refr);
 2516              		.loc 1 660 40 view .LVU815
 2517 00b8 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 660:lvgl/src/core/lv_refr.c ****         draw_buf_flush(disp_refr);
 2518              		.loc 1 660 7 view .LVU816
 2519 00ba 13F0020F 		tst	r3, #2
 2520 00be 4CD0     		beq	.L173
 2521              	.L155:
 663:lvgl/src/core/lv_refr.c **** 
 2522              		.loc 1 663 1 view .LVU817
 2523 00c0 14B0     		add	sp, sp, #80
 2524              	.LCFI31:
 2525              		.cfi_remember_state
 2526              		.cfi_def_cfa_offset 16
 2527              		@ sp needed
 2528 00c2 70BD     		pop	{r4, r5, r6, pc}
 2529              	.LVL229:
 2530              	.L158:
 2531              	.LCFI32:
 2532              		.cfi_restore_state
 596:lvgl/src/core/lv_refr.c ****             if(disp_refr->driver->wait_cb) disp_refr->driver->wait_cb(disp_refr->driver);
 2533              		.loc 1 596 15 is_stmt 1 view .LVU818
 596:lvgl/src/core/lv_refr.c ****             if(disp_refr->driver->wait_cb) disp_refr->driver->wait_cb(disp_refr->driver);
 2534              		.loc 1 596 23 is_stmt 0 view .LVU819
 2535 00c4 2B69     		ldr	r3, [r5, #16]
 596:lvgl/src/core/lv_refr.c ****             if(disp_refr->driver->wait_cb) disp_refr->driver->wait_cb(disp_refr->driver);
 2536              		.loc 1 596 15 view .LVU820
 2537 00c6 002B     		cmp	r3, #0
 2538 00c8 A7D0     		beq	.L156
 597:lvgl/src/core/lv_refr.c ****         }
 2539              		.loc 1 597 13 is_stmt 1 view .LVU821
 597:lvgl/src/core/lv_refr.c ****         }
 2540              		.loc 1 597 25 is_stmt 0 view .LVU822
 2541 00ca 254B     		ldr	r3, .L174
 2542 00cc 1B68     		ldr	r3, [r3]
ARM GAS  C:\usertemp\ccxmAei4.s 			page 80


 2543 00ce 1868     		ldr	r0, [r3]
 597:lvgl/src/core/lv_refr.c ****         }
 2544              		.loc 1 597 33 view .LVU823
 2545 00d0 836A     		ldr	r3, [r0, #40]
 597:lvgl/src/core/lv_refr.c ****         }
 2546              		.loc 1 597 15 view .LVU824
 2547 00d2 002B     		cmp	r3, #0
 2548 00d4 F6D0     		beq	.L158
 597:lvgl/src/core/lv_refr.c ****         }
 2549              		.loc 1 597 44 is_stmt 1 discriminator 1 view .LVU825
 2550 00d6 9847     		blx	r3
 2551              	.LVL230:
 2552 00d8 F4E7     		b	.L158
 2553              	.LVL231:
 2554              	.L162:
 621:lvgl/src/core/lv_refr.c ****             lv_img_header_t header;
 2555              		.loc 1 621 14 view .LVU826
 621:lvgl/src/core/lv_refr.c ****             lv_img_header_t header;
 2556              		.loc 1 621 26 is_stmt 0 view .LVU827
 2557 00da 214B     		ldr	r3, .L174
 2558 00dc 1B68     		ldr	r3, [r3]
 2559 00de D86A     		ldr	r0, [r3, #44]
 621:lvgl/src/core/lv_refr.c ****             lv_img_header_t header;
 2560              		.loc 1 621 16 view .LVU828
 2561 00e0 18B3     		cbz	r0, .L163
 2562              	.LBB98:
 622:lvgl/src/core/lv_refr.c ****             lv_res_t res;
 2563              		.loc 1 622 13 is_stmt 1 view .LVU829
 623:lvgl/src/core/lv_refr.c ****             res = lv_img_decoder_get_info(disp_refr->bg_img, &header);
 2564              		.loc 1 623 13 view .LVU830
 624:lvgl/src/core/lv_refr.c ****             if(res == LV_RES_OK) {
 2565              		.loc 1 624 13 view .LVU831
 624:lvgl/src/core/lv_refr.c ****             if(res == LV_RES_OK) {
 2566              		.loc 1 624 19 is_stmt 0 view .LVU832
 2567 00e2 03A9     		add	r1, sp, #12
 2568 00e4 FFF7FEFF 		bl	lv_img_decoder_get_info
 2569              	.LVL232:
 625:lvgl/src/core/lv_refr.c ****                 lv_area_t a;
 2570              		.loc 1 625 13 is_stmt 1 view .LVU833
 625:lvgl/src/core/lv_refr.c ****                 lv_area_t a;
 2571              		.loc 1 625 15 is_stmt 0 view .LVU834
 2572 00e8 0128     		cmp	r0, #1
 2573 00ea C4D1     		bne	.L161
 2574              	.LBB99:
 626:lvgl/src/core/lv_refr.c ****                 lv_area_set(&a, 0, 0, header.w - 1, header.h - 1);
 2575              		.loc 1 626 17 is_stmt 1 view .LVU835
 627:lvgl/src/core/lv_refr.c ****                 lv_draw_img_dsc_t dsc;
 2576              		.loc 1 627 17 view .LVU836
 627:lvgl/src/core/lv_refr.c ****                 lv_draw_img_dsc_t dsc;
 2577              		.loc 1 627 45 is_stmt 0 view .LVU837
 2578 00ec 039B     		ldr	r3, [sp, #12]
 2579 00ee C3F38A23 		ubfx	r3, r3, #10, #11
 627:lvgl/src/core/lv_refr.c ****                 lv_draw_img_dsc_t dsc;
 2580              		.loc 1 627 59 view .LVU838
 2581 00f2 BDF80E20 		ldrh	r2, [sp, #14]
 2582 00f6 C2F34A12 		ubfx	r2, r2, #5, #11
 627:lvgl/src/core/lv_refr.c ****                 lv_draw_img_dsc_t dsc;
ARM GAS  C:\usertemp\ccxmAei4.s 			page 81


 2583              		.loc 1 627 17 view .LVU839
 2584 00fa 013A     		subs	r2, r2, #1
 2585 00fc 0092     		str	r2, [sp]
 2586 00fe 013B     		subs	r3, r3, #1
 2587 0100 0022     		movs	r2, #0
 2588 0102 1146     		mov	r1, r2
 2589 0104 04A8     		add	r0, sp, #16
 2590              	.LVL233:
 627:lvgl/src/core/lv_refr.c ****                 lv_draw_img_dsc_t dsc;
 2591              		.loc 1 627 17 view .LVU840
 2592 0106 FFF7FEFF 		bl	lv_area_set
 2593              	.LVL234:
 628:lvgl/src/core/lv_refr.c ****                 lv_draw_img_dsc_init(&dsc);
 2594              		.loc 1 628 17 is_stmt 1 view .LVU841
 629:lvgl/src/core/lv_refr.c ****                 dsc.opa = disp_refr->bg_opa;
 2595              		.loc 1 629 17 view .LVU842
 2596 010a 06A8     		add	r0, sp, #24
 2597 010c FFF7FEFF 		bl	lv_draw_img_dsc_init
 2598              	.LVL235:
 630:lvgl/src/core/lv_refr.c ****                 lv_draw_img(draw_ctx, &dsc, &a, disp_refr->bg_img);
 2599              		.loc 1 630 17 view .LVU843
 630:lvgl/src/core/lv_refr.c ****                 lv_draw_img(draw_ctx, &dsc, &a, disp_refr->bg_img);
 2600              		.loc 1 630 36 is_stmt 0 view .LVU844
 2601 0110 134B     		ldr	r3, .L174
 2602 0112 1B68     		ldr	r3, [r3]
 2603 0114 93F82920 		ldrb	r2, [r3, #41]	@ zero_extendqisi2
 630:lvgl/src/core/lv_refr.c ****                 lv_draw_img(draw_ctx, &dsc, &a, disp_refr->bg_img);
 2604              		.loc 1 630 25 view .LVU845
 2605 0118 8DF82320 		strb	r2, [sp, #35]
 631:lvgl/src/core/lv_refr.c ****             }
 2606              		.loc 1 631 17 is_stmt 1 view .LVU846
 2607 011c DB6A     		ldr	r3, [r3, #44]
 2608 011e 04AA     		add	r2, sp, #16
 2609 0120 06A9     		add	r1, sp, #24
 2610 0122 2046     		mov	r0, r4
 2611 0124 FFF7FEFF 		bl	lv_draw_img
 2612              	.LVL236:
 2613              	.LBE99:
 634:lvgl/src/core/lv_refr.c ****             }
 2614              		.loc 1 634 17 view .LVU847
 634:lvgl/src/core/lv_refr.c ****             }
 2615              		.loc 1 634 17 view .LVU848
 634:lvgl/src/core/lv_refr.c ****             }
 2616              		.loc 1 634 17 view .LVU849
 2617 0128 A5E7     		b	.L161
 2618              	.LVL237:
 2619              	.L163:
 634:lvgl/src/core/lv_refr.c ****             }
 2620              		.loc 1 634 17 is_stmt 0 view .LVU850
 2621              	.LBE98:
 2622              	.LBB100:
 638:lvgl/src/core/lv_refr.c ****             lv_draw_rect_dsc_init(&dsc);
 2623              		.loc 1 638 13 is_stmt 1 view .LVU851
 639:lvgl/src/core/lv_refr.c ****             dsc.bg_color = disp_refr->bg_color;
 2624              		.loc 1 639 13 view .LVU852
 2625 012a 06A8     		add	r0, sp, #24
 2626 012c FFF7FEFF 		bl	lv_draw_rect_dsc_init
ARM GAS  C:\usertemp\ccxmAei4.s 			page 82


 2627              	.LVL238:
 640:lvgl/src/core/lv_refr.c ****             dsc.bg_opa = disp_refr->bg_opa;
 2628              		.loc 1 640 13 view .LVU853
 640:lvgl/src/core/lv_refr.c ****             dsc.bg_opa = disp_refr->bg_opa;
 2629              		.loc 1 640 37 is_stmt 0 view .LVU854
 2630 0130 0B4B     		ldr	r3, .L174
 2631 0132 1B68     		ldr	r3, [r3]
 640:lvgl/src/core/lv_refr.c ****             dsc.bg_opa = disp_refr->bg_opa;
 2632              		.loc 1 640 26 view .LVU855
 2633 0134 5A8D     		ldrh	r2, [r3, #42]
 2634 0136 ADF81C20 		strh	r2, [sp, #28]	@ movhi
 641:lvgl/src/core/lv_refr.c ****             lv_draw_rect(draw_ctx, &dsc, draw_ctx->buf_area);
 2635              		.loc 1 641 13 is_stmt 1 view .LVU856
 641:lvgl/src/core/lv_refr.c ****             lv_draw_rect(draw_ctx, &dsc, draw_ctx->buf_area);
 2636              		.loc 1 641 35 is_stmt 0 view .LVU857
 2637 013a 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 641:lvgl/src/core/lv_refr.c ****             lv_draw_rect(draw_ctx, &dsc, draw_ctx->buf_area);
 2638              		.loc 1 641 24 view .LVU858
 2639 013e 8DF81B30 		strb	r3, [sp, #27]
 642:lvgl/src/core/lv_refr.c ****         }
 2640              		.loc 1 642 13 is_stmt 1 view .LVU859
 2641 0142 6268     		ldr	r2, [r4, #4]
 2642 0144 06A9     		add	r1, sp, #24
 2643 0146 2046     		mov	r0, r4
 2644 0148 FFF7FEFF 		bl	lv_draw_rect
 2645              	.LVL239:
 2646 014c 93E7     		b	.L161
 2647              	.L171:
 642:lvgl/src/core/lv_refr.c ****         }
 2648              		.loc 1 642 13 is_stmt 0 view .LVU860
 2649              	.LBE100:
 647:lvgl/src/core/lv_refr.c ****         lv_refr_obj_and_children(draw_ctx, top_prev_scr);
 2650              		.loc 1 647 47 discriminator 1 view .LVU861
 2651 014e 1D46     		mov	r5, r3
 2652              	.LVL240:
 647:lvgl/src/core/lv_refr.c ****         lv_refr_obj_and_children(draw_ctx, top_prev_scr);
 2653              		.loc 1 647 47 discriminator 1 view .LVU862
 2654 0150 97E7     		b	.L166
 2655              	.LVL241:
 2656              	.L172:
 651:lvgl/src/core/lv_refr.c ****     lv_refr_obj_and_children(draw_ctx, top_act_scr);
 2657              		.loc 1 651 29 is_stmt 1 discriminator 1 view .LVU863
 651:lvgl/src/core/lv_refr.c ****     lv_refr_obj_and_children(draw_ctx, top_act_scr);
 2658              		.loc 1 651 52 is_stmt 0 discriminator 1 view .LVU864
 2659 0152 034B     		ldr	r3, .L174
 2660 0154 1B68     		ldr	r3, [r3]
 651:lvgl/src/core/lv_refr.c ****     lv_refr_obj_and_children(draw_ctx, top_act_scr);
 2661              		.loc 1 651 41 discriminator 1 view .LVU865
 2662 0156 1E69     		ldr	r6, [r3, #16]
 2663              	.LVL242:
 651:lvgl/src/core/lv_refr.c ****     lv_refr_obj_and_children(draw_ctx, top_act_scr);
 2664              		.loc 1 651 41 discriminator 1 view .LVU866
 2665 0158 99E7     		b	.L167
 2666              	.LVL243:
 2667              	.L173:
 661:lvgl/src/core/lv_refr.c ****     }
 2668              		.loc 1 661 9 is_stmt 1 view .LVU867
ARM GAS  C:\usertemp\ccxmAei4.s 			page 83


 2669 015a FFF7FEFF 		bl	draw_buf_flush
 2670              	.LVL244:
 663:lvgl/src/core/lv_refr.c **** 
 2671              		.loc 1 663 1 is_stmt 0 view .LVU868
 2672 015e AFE7     		b	.L155
 2673              	.L175:
 2674              		.align	2
 2675              	.L174:
 2676 0160 00000000 		.word	disp_refr
 2677              		.cfi_endproc
 2678              	.LFE174:
 2680              		.section	.text.lv_refr_area,"ax",%progbits
 2681              		.align	1
 2682              		.syntax unified
 2683              		.thumb
 2684              		.thumb_func
 2686              	lv_refr_area:
 2687              	.LVL245:
 2688              	.LFB173:
 523:lvgl/src/core/lv_refr.c ****     lv_draw_ctx_t * draw_ctx = disp_refr->driver->draw_ctx;
 2689              		.loc 1 523 1 is_stmt 1 view -0
 2690              		.cfi_startproc
 2691              		@ args = 0, pretend = 0, frame = 16
 2692              		@ frame_needed = 0, uses_anonymous_args = 0
 523:lvgl/src/core/lv_refr.c ****     lv_draw_ctx_t * draw_ctx = disp_refr->driver->draw_ctx;
 2693              		.loc 1 523 1 is_stmt 0 view .LVU870
 2694 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 2695              	.LCFI33:
 2696              		.cfi_def_cfa_offset 28
 2697              		.cfi_offset 4, -28
 2698              		.cfi_offset 5, -24
 2699              		.cfi_offset 6, -20
 2700              		.cfi_offset 7, -16
 2701              		.cfi_offset 8, -12
 2702              		.cfi_offset 9, -8
 2703              		.cfi_offset 14, -4
 2704 0004 87B0     		sub	sp, sp, #28
 2705              	.LCFI34:
 2706              		.cfi_def_cfa_offset 56
 2707 0006 0746     		mov	r7, r0
 524:lvgl/src/core/lv_refr.c ****     draw_ctx->buf = disp_refr->driver->draw_buf->buf_act;
 2708              		.loc 1 524 5 is_stmt 1 view .LVU871
 524:lvgl/src/core/lv_refr.c ****     draw_ctx->buf = disp_refr->driver->draw_buf->buf_act;
 2709              		.loc 1 524 41 is_stmt 0 view .LVU872
 2710 0008 614B     		ldr	r3, .L194
 2711 000a 1868     		ldr	r0, [r3]
 2712              	.LVL246:
 524:lvgl/src/core/lv_refr.c ****     draw_ctx->buf = disp_refr->driver->draw_buf->buf_act;
 2713              		.loc 1 524 41 view .LVU873
 2714 000c 0368     		ldr	r3, [r0]
 524:lvgl/src/core/lv_refr.c ****     draw_ctx->buf = disp_refr->driver->draw_buf->buf_act;
 2715              		.loc 1 524 21 view .LVU874
 2716 000e 9D6B     		ldr	r5, [r3, #56]
 2717              	.LVL247:
 525:lvgl/src/core/lv_refr.c **** 
 2718              		.loc 1 525 5 is_stmt 1 view .LVU875
 525:lvgl/src/core/lv_refr.c **** 
ARM GAS  C:\usertemp\ccxmAei4.s 			page 84


 2719              		.loc 1 525 38 is_stmt 0 view .LVU876
 2720 0010 DB68     		ldr	r3, [r3, #12]
 525:lvgl/src/core/lv_refr.c **** 
 2721              		.loc 1 525 48 view .LVU877
 2722 0012 9B68     		ldr	r3, [r3, #8]
 525:lvgl/src/core/lv_refr.c **** 
 2723              		.loc 1 525 19 view .LVU878
 2724 0014 2B60     		str	r3, [r5]
 529:lvgl/src/core/lv_refr.c ****         lv_area_t disp_area;
 2725              		.loc 1 529 5 is_stmt 1 view .LVU879
 529:lvgl/src/core/lv_refr.c ****         lv_area_t disp_area;
 2726              		.loc 1 529 17 is_stmt 0 view .LVU880
 2727 0016 0368     		ldr	r3, [r0]
 529:lvgl/src/core/lv_refr.c ****         lv_area_t disp_area;
 2728              		.loc 1 529 40 view .LVU881
 2729 0018 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 529:lvgl/src/core/lv_refr.c ****         lv_area_t disp_area;
 2730              		.loc 1 529 7 view .LVU882
 2731 001a 13F0030F 		tst	r3, #3
 2732 001e 24D1     		bne	.L189
 549:lvgl/src/core/lv_refr.c ****     lv_coord_t h = lv_area_get_height(area_p);
 2733              		.loc 1 549 5 is_stmt 1 view .LVU883
 2734              	.LVL248:
 2735              	.LBB101:
 2736              	.LBI101:
 123:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 2737              		.loc 2 123 26 view .LVU884
 2738              	.LBB102:
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 2739              		.loc 2 125 5 view .LVU885
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 2740              		.loc 2 125 31 is_stmt 0 view .LVU886
 2741 0020 BC88     		ldrh	r4, [r7, #4]
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 2742              		.loc 2 125 44 view .LVU887
 2743 0022 3B88     		ldrh	r3, [r7]
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 2744              		.loc 2 125 36 view .LVU888
 2745 0024 E41A     		subs	r4, r4, r3
 2746 0026 A4B2     		uxth	r4, r4
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 2747              		.loc 2 125 49 view .LVU889
 2748 0028 0134     		adds	r4, r4, #1
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 2749              		.loc 2 125 12 view .LVU890
 2750 002a 24B2     		sxth	r4, r4
 2751              	.LVL249:
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 2752              		.loc 2 125 12 view .LVU891
 2753              	.LBE102:
 2754              	.LBE101:
 550:lvgl/src/core/lv_refr.c ****     lv_coord_t y2 = area_p->y2 >= lv_disp_get_ver_res(disp_refr) ?
 2755              		.loc 1 550 5 is_stmt 1 view .LVU892
 2756              	.LBB103:
 2757              	.LBI103:
 133:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 2758              		.loc 2 133 26 view .LVU893
ARM GAS  C:\usertemp\ccxmAei4.s 			page 85


 2759              	.LBB104:
 2760              		.loc 2 135 5 view .LVU894
 2761              		.loc 2 135 31 is_stmt 0 view .LVU895
 2762 002c B7F90660 		ldrsh	r6, [r7, #6]
 2763 0030 1FFA86F8 		uxth	r8, r6
 2764              		.loc 2 135 44 view .LVU896
 2765 0034 7B88     		ldrh	r3, [r7, #2]
 2766              		.loc 2 135 36 view .LVU897
 2767 0036 A8EB0308 		sub	r8, r8, r3
 2768 003a 1FFA88F8 		uxth	r8, r8
 2769              		.loc 2 135 49 view .LVU898
 2770 003e 08F10108 		add	r8, r8, #1
 2771              		.loc 2 135 12 view .LVU899
 2772 0042 0FFA88F8 		sxth	r8, r8
 2773              	.LVL250:
 2774              		.loc 2 135 12 view .LVU900
 2775              	.LBE104:
 2776              	.LBE103:
 551:lvgl/src/core/lv_refr.c ****                     lv_disp_get_ver_res(disp_refr) - 1 : area_p->y2;
 2777              		.loc 1 551 5 is_stmt 1 view .LVU901
 551:lvgl/src/core/lv_refr.c ****                     lv_disp_get_ver_res(disp_refr) - 1 : area_p->y2;
 2778              		.loc 1 551 35 is_stmt 0 view .LVU902
 2779 0046 FFF7FEFF 		bl	lv_disp_get_ver_res
 2780              	.LVL251:
 551:lvgl/src/core/lv_refr.c ****                     lv_disp_get_ver_res(disp_refr) - 1 : area_p->y2;
 2781              		.loc 1 551 16 discriminator 1 view .LVU903
 2782 004a B042     		cmp	r0, r6
 2783 004c 40DD     		ble	.L190
 551:lvgl/src/core/lv_refr.c ****                     lv_disp_get_ver_res(disp_refr) - 1 : area_p->y2;
 2784              		.loc 1 551 16 discriminator 2 view .LVU904
 2785 004e B7F90660 		ldrsh	r6, [r7, #6]
 2786              	.L182:
 2787              	.LVL252:
 554:lvgl/src/core/lv_refr.c **** 
 2788              		.loc 1 554 5 is_stmt 1 view .LVU905
 554:lvgl/src/core/lv_refr.c **** 
 2789              		.loc 1 554 23 is_stmt 0 view .LVU906
 2790 0052 4246     		mov	r2, r8
 2791 0054 2146     		mov	r1, r4
 2792 0056 4E4B     		ldr	r3, .L194
 2793 0058 1868     		ldr	r0, [r3]
 2794 005a FFF7FEFF 		bl	get_max_row
 2795              	.LVL253:
 2796 005e 8046     		mov	r8, r0
 2797              	.LVL254:
 556:lvgl/src/core/lv_refr.c ****     lv_coord_t row_last = 0;
 2798              		.loc 1 556 5 is_stmt 1 view .LVU907
 557:lvgl/src/core/lv_refr.c ****     lv_area_t sub_area;
 2799              		.loc 1 557 5 view .LVU908
 558:lvgl/src/core/lv_refr.c ****     for(row = area_p->y1; row + max_row - 1 <= y2; row += max_row) {
 2800              		.loc 1 558 5 view .LVU909
 559:lvgl/src/core/lv_refr.c ****         /*Calc. the next y coordinates of draw_buf*/
 2801              		.loc 1 559 5 view .LVU910
 559:lvgl/src/core/lv_refr.c ****         /*Calc. the next y coordinates of draw_buf*/
 2802              		.loc 1 559 13 is_stmt 0 view .LVU911
 2803 0060 B7F90230 		ldrsh	r3, [r7, #2]
 2804              	.LVL255:
ARM GAS  C:\usertemp\ccxmAei4.s 			page 86


 557:lvgl/src/core/lv_refr.c ****     lv_area_t sub_area;
 2805              		.loc 1 557 16 view .LVU912
 2806 0064 4FF00009 		mov	r9, #0
 559:lvgl/src/core/lv_refr.c ****         /*Calc. the next y coordinates of draw_buf*/
 2807              		.loc 1 559 5 view .LVU913
 2808 0068 42E0     		b	.L183
 2809              	.LVL256:
 2810              	.L189:
 2811              	.LBB105:
 530:lvgl/src/core/lv_refr.c ****         lv_area_set(&disp_area, 0, 0, lv_disp_get_hor_res(disp_refr) - 1, lv_disp_get_ver_res(disp_
 2812              		.loc 1 530 9 is_stmt 1 view .LVU914
 531:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &disp_area;
 2813              		.loc 1 531 9 view .LVU915
 531:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &disp_area;
 2814              		.loc 1 531 39 is_stmt 0 view .LVU916
 2815 006a FFF7FEFF 		bl	lv_disp_get_hor_res
 2816              	.LVL257:
 531:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &disp_area;
 2817              		.loc 1 531 39 discriminator 1 view .LVU917
 2818 006e 84B2     		uxth	r4, r0
 531:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &disp_area;
 2819              		.loc 1 531 70 discriminator 1 view .LVU918
 2820 0070 013C     		subs	r4, r4, #1
 2821 0072 A4B2     		uxth	r4, r4
 531:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &disp_area;
 2822              		.loc 1 531 75 discriminator 1 view .LVU919
 2823 0074 464E     		ldr	r6, .L194
 2824 0076 3068     		ldr	r0, [r6]
 2825 0078 FFF7FEFF 		bl	lv_disp_get_ver_res
 2826              	.LVL258:
 531:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &disp_area;
 2827              		.loc 1 531 75 discriminator 2 view .LVU920
 2828 007c 83B2     		uxth	r3, r0
 531:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &disp_area;
 2829              		.loc 1 531 106 discriminator 2 view .LVU921
 2830 007e 013B     		subs	r3, r3, #1
 531:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &disp_area;
 2831              		.loc 1 531 9 discriminator 2 view .LVU922
 2832 0080 0DF10808 		add	r8, sp, #8
 2833 0084 1BB2     		sxth	r3, r3
 2834 0086 0093     		str	r3, [sp]
 2835 0088 23B2     		sxth	r3, r4
 2836 008a 0022     		movs	r2, #0
 2837 008c 1146     		mov	r1, r2
 2838 008e 4046     		mov	r0, r8
 2839 0090 FFF7FEFF 		bl	lv_area_set
 2840              	.LVL259:
 532:lvgl/src/core/lv_refr.c **** 
 2841              		.loc 1 532 9 is_stmt 1 view .LVU923
 532:lvgl/src/core/lv_refr.c **** 
 2842              		.loc 1 532 28 is_stmt 0 view .LVU924
 2843 0094 C5F80480 		str	r8, [r5, #4]
 534:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_buf->last_part = 1;
 2844              		.loc 1 534 9 is_stmt 1 view .LVU925
 534:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_buf->last_part = 1;
 2845              		.loc 1 534 21 is_stmt 0 view .LVU926
 2846 0098 3368     		ldr	r3, [r6]
ARM GAS  C:\usertemp\ccxmAei4.s 			page 87


 2847 009a 1B68     		ldr	r3, [r3]
 534:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_buf->last_part = 1;
 2848              		.loc 1 534 12 view .LVU927
 2849 009c 1A7C     		ldrb	r2, [r3, #16]	@ zero_extendqisi2
 534:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_buf->last_part = 1;
 2850              		.loc 1 534 11 view .LVU928
 2851 009e 12F0020F 		tst	r2, #2
 2852 00a2 0AD0     		beq	.L178
 535:lvgl/src/core/lv_refr.c ****             draw_ctx->clip_area = &disp_area;
 2853              		.loc 1 535 13 is_stmt 1 view .LVU929
 535:lvgl/src/core/lv_refr.c ****             draw_ctx->clip_area = &disp_area;
 2854              		.loc 1 535 30 is_stmt 0 view .LVU930
 2855 00a4 DA68     		ldr	r2, [r3, #12]
 535:lvgl/src/core/lv_refr.c ****             draw_ctx->clip_area = &disp_area;
 2856              		.loc 1 535 52 view .LVU931
 2857 00a6 137E     		ldrb	r3, [r2, #24]	@ zero_extendqisi2
 2858 00a8 43F00203 		orr	r3, r3, #2
 2859 00ac 1376     		strb	r3, [r2, #24]
 536:lvgl/src/core/lv_refr.c ****             lv_refr_area_part(draw_ctx);
 2860              		.loc 1 536 13 is_stmt 1 view .LVU932
 536:lvgl/src/core/lv_refr.c ****             lv_refr_area_part(draw_ctx);
 2861              		.loc 1 536 33 is_stmt 0 view .LVU933
 2862 00ae C5F80880 		str	r8, [r5, #8]
 537:lvgl/src/core/lv_refr.c ****         }
 2863              		.loc 1 537 13 is_stmt 1 view .LVU934
 2864 00b2 2846     		mov	r0, r5
 2865 00b4 FFF7FEFF 		bl	lv_refr_area_part
 2866              	.LVL260:
 2867 00b8 47E0     		b	.L176
 2868              	.L178:
 540:lvgl/src/core/lv_refr.c ****             draw_ctx->clip_area = area_p;
 2869              		.loc 1 540 13 view .LVU935
 540:lvgl/src/core/lv_refr.c ****             draw_ctx->clip_area = area_p;
 2870              		.loc 1 540 71 is_stmt 0 view .LVU936
 2871 00ba DA68     		ldr	r2, [r3, #12]
 540:lvgl/src/core/lv_refr.c ****             draw_ctx->clip_area = area_p;
 2872              		.loc 1 540 81 view .LVU937
 2873 00bc 9169     		ldr	r1, [r2, #24]
 540:lvgl/src/core/lv_refr.c ****             draw_ctx->clip_area = area_p;
 2874              		.loc 1 540 52 view .LVU938
 2875 00be 137E     		ldrb	r3, [r2, #24]	@ zero_extendqisi2
 2876 00c0 61F34103 		bfi	r3, r1, #1, #1
 2877 00c4 1376     		strb	r3, [r2, #24]
 541:lvgl/src/core/lv_refr.c ****             lv_refr_area_part(draw_ctx);
 2878              		.loc 1 541 13 is_stmt 1 view .LVU939
 541:lvgl/src/core/lv_refr.c ****             lv_refr_area_part(draw_ctx);
 2879              		.loc 1 541 33 is_stmt 0 view .LVU940
 2880 00c6 AF60     		str	r7, [r5, #8]
 542:lvgl/src/core/lv_refr.c ****         }
 2881              		.loc 1 542 13 is_stmt 1 view .LVU941
 2882 00c8 2846     		mov	r0, r5
 2883 00ca FFF7FEFF 		bl	lv_refr_area_part
 2884              	.LVL261:
 544:lvgl/src/core/lv_refr.c ****     }
 2885              		.loc 1 544 9 view .LVU942
 2886 00ce 3CE0     		b	.L176
 2887              	.LVL262:
ARM GAS  C:\usertemp\ccxmAei4.s 			page 88


 2888              	.L190:
 544:lvgl/src/core/lv_refr.c ****     }
 2889              		.loc 1 544 9 is_stmt 0 view .LVU943
 2890              	.LBE105:
 552:lvgl/src/core/lv_refr.c **** 
 2891              		.loc 1 552 21 view .LVU944
 2892 00d0 2F4B     		ldr	r3, .L194
 2893 00d2 1868     		ldr	r0, [r3]
 2894 00d4 FFF7FEFF 		bl	lv_disp_get_ver_res
 2895              	.LVL263:
 552:lvgl/src/core/lv_refr.c **** 
 2896              		.loc 1 552 21 discriminator 1 view .LVU945
 2897 00d8 86B2     		uxth	r6, r0
 552:lvgl/src/core/lv_refr.c **** 
 2898              		.loc 1 552 52 discriminator 1 view .LVU946
 2899 00da 013E     		subs	r6, r6, #1
 551:lvgl/src/core/lv_refr.c ****                     lv_disp_get_ver_res(disp_refr) - 1 : area_p->y2;
 2900              		.loc 1 551 16 discriminator 1 view .LVU947
 2901 00dc 36B2     		sxth	r6, r6
 2902 00de B8E7     		b	.L182
 2903              	.LVL264:
 2904              	.L184:
 569:lvgl/src/core/lv_refr.c ****         if(y2 == row_last) disp_refr->driver->draw_buf->last_part = 1;
 2905              		.loc 1 569 9 is_stmt 1 view .LVU948
 569:lvgl/src/core/lv_refr.c ****         if(y2 == row_last) disp_refr->driver->draw_buf->last_part = 1;
 2906              		.loc 1 569 18 is_stmt 0 view .LVU949
 2907 00e0 BDF91690 		ldrsh	r9, [sp, #22]
 2908              	.LVL265:
 570:lvgl/src/core/lv_refr.c ****         lv_refr_area_part(draw_ctx);
 2909              		.loc 1 570 9 is_stmt 1 view .LVU950
 570:lvgl/src/core/lv_refr.c ****         lv_refr_area_part(draw_ctx);
 2910              		.loc 1 570 11 is_stmt 0 view .LVU951
 2911 00e4 4E45     		cmp	r6, r9
 2912 00e6 27D0     		beq	.L191
 2913              	.L185:
 571:lvgl/src/core/lv_refr.c ****     }
 2914              		.loc 1 571 9 is_stmt 1 view .LVU952
 2915 00e8 2846     		mov	r0, r5
 2916 00ea FFF7FEFF 		bl	lv_refr_area_part
 2917              	.LVL266:
 559:lvgl/src/core/lv_refr.c ****         /*Calc. the next y coordinates of draw_buf*/
 2918              		.loc 1 559 56 discriminator 2 view .LVU953
 2919 00ee 23B2     		sxth	r3, r4
 2920              	.LVL267:
 2921              	.L183:
 559:lvgl/src/core/lv_refr.c ****         /*Calc. the next y coordinates of draw_buf*/
 2922              		.loc 1 559 45 discriminator 1 view .LVU954
 559:lvgl/src/core/lv_refr.c ****         /*Calc. the next y coordinates of draw_buf*/
 2923              		.loc 1 559 31 is_stmt 0 discriminator 1 view .LVU955
 2924 00f0 03EB0802 		add	r2, r3, r8
 559:lvgl/src/core/lv_refr.c ****         /*Calc. the next y coordinates of draw_buf*/
 2925              		.loc 1 559 41 discriminator 1 view .LVU956
 2926 00f4 013A     		subs	r2, r2, #1
 559:lvgl/src/core/lv_refr.c ****         /*Calc. the next y coordinates of draw_buf*/
 2927              		.loc 1 559 45 discriminator 1 view .LVU957
 2928 00f6 B242     		cmp	r2, r6
 2929 00f8 25DC     		bgt	.L192
ARM GAS  C:\usertemp\ccxmAei4.s 			page 89


 561:lvgl/src/core/lv_refr.c ****         sub_area.x2 = area_p->x2;
 2930              		.loc 1 561 9 is_stmt 1 view .LVU958
 561:lvgl/src/core/lv_refr.c ****         sub_area.x2 = area_p->x2;
 2931              		.loc 1 561 29 is_stmt 0 view .LVU959
 2932 00fa B7F90020 		ldrsh	r2, [r7]
 561:lvgl/src/core/lv_refr.c ****         sub_area.x2 = area_p->x2;
 2933              		.loc 1 561 21 view .LVU960
 2934 00fe ADF81020 		strh	r2, [sp, #16]	@ movhi
 562:lvgl/src/core/lv_refr.c ****         sub_area.y1 = row;
 2935              		.loc 1 562 9 is_stmt 1 view .LVU961
 562:lvgl/src/core/lv_refr.c ****         sub_area.y1 = row;
 2936              		.loc 1 562 29 is_stmt 0 view .LVU962
 2937 0102 B7F90420 		ldrsh	r2, [r7, #4]
 562:lvgl/src/core/lv_refr.c ****         sub_area.y1 = row;
 2938              		.loc 1 562 21 view .LVU963
 2939 0106 ADF81420 		strh	r2, [sp, #20]	@ movhi
 563:lvgl/src/core/lv_refr.c ****         sub_area.y2 = row + max_row - 1;
 2940              		.loc 1 563 9 is_stmt 1 view .LVU964
 563:lvgl/src/core/lv_refr.c ****         sub_area.y2 = row + max_row - 1;
 2941              		.loc 1 563 21 is_stmt 0 view .LVU965
 2942 010a ADF81230 		strh	r3, [sp, #18]	@ movhi
 564:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &sub_area;
 2943              		.loc 1 564 9 is_stmt 1 view .LVU966
 564:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &sub_area;
 2944              		.loc 1 564 27 is_stmt 0 view .LVU967
 2945 010e 4344     		add	r3, r3, r8
 2946              	.LVL268:
 564:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &sub_area;
 2947              		.loc 1 564 27 view .LVU968
 2948 0110 9CB2     		uxth	r4, r3
 564:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &sub_area;
 2949              		.loc 1 564 37 view .LVU969
 2950 0112 631E     		subs	r3, r4, #1
 564:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &sub_area;
 2951              		.loc 1 564 21 view .LVU970
 2952 0114 ADF81630 		strh	r3, [sp, #22]	@ movhi
 565:lvgl/src/core/lv_refr.c ****         draw_ctx->clip_area = &sub_area;
 2953              		.loc 1 565 9 is_stmt 1 view .LVU971
 565:lvgl/src/core/lv_refr.c ****         draw_ctx->clip_area = &sub_area;
 2954              		.loc 1 565 28 is_stmt 0 view .LVU972
 2955 0118 04AB     		add	r3, sp, #16
 2956 011a 6B60     		str	r3, [r5, #4]
 566:lvgl/src/core/lv_refr.c ****         draw_ctx->buf = disp_refr->driver->draw_buf->buf_act;
 2957              		.loc 1 566 9 is_stmt 1 view .LVU973
 566:lvgl/src/core/lv_refr.c ****         draw_ctx->buf = disp_refr->driver->draw_buf->buf_act;
 2958              		.loc 1 566 29 is_stmt 0 view .LVU974
 2959 011c AB60     		str	r3, [r5, #8]
 567:lvgl/src/core/lv_refr.c ****         if(sub_area.y2 > y2) sub_area.y2 = y2;
 2960              		.loc 1 567 9 is_stmt 1 view .LVU975
 567:lvgl/src/core/lv_refr.c ****         if(sub_area.y2 > y2) sub_area.y2 = y2;
 2961              		.loc 1 567 34 is_stmt 0 view .LVU976
 2962 011e 1C4B     		ldr	r3, .L194
 2963 0120 1B68     		ldr	r3, [r3]
 2964 0122 1A68     		ldr	r2, [r3]
 567:lvgl/src/core/lv_refr.c ****         if(sub_area.y2 > y2) sub_area.y2 = y2;
 2965              		.loc 1 567 42 view .LVU977
 2966 0124 D268     		ldr	r2, [r2, #12]
ARM GAS  C:\usertemp\ccxmAei4.s 			page 90


 567:lvgl/src/core/lv_refr.c ****         if(sub_area.y2 > y2) sub_area.y2 = y2;
 2967              		.loc 1 567 52 view .LVU978
 2968 0126 9268     		ldr	r2, [r2, #8]
 567:lvgl/src/core/lv_refr.c ****         if(sub_area.y2 > y2) sub_area.y2 = y2;
 2969              		.loc 1 567 23 view .LVU979
 2970 0128 2A60     		str	r2, [r5]
 2971              	.LVL269:
 568:lvgl/src/core/lv_refr.c ****         row_last = sub_area.y2;
 2972              		.loc 1 568 9 is_stmt 1 view .LVU980
 568:lvgl/src/core/lv_refr.c ****         row_last = sub_area.y2;
 2973              		.loc 1 568 20 is_stmt 0 view .LVU981
 2974 012a BDF91620 		ldrsh	r2, [sp, #22]
 568:lvgl/src/core/lv_refr.c ****         row_last = sub_area.y2;
 2975              		.loc 1 568 11 view .LVU982
 2976 012e B242     		cmp	r2, r6
 2977 0130 D6DD     		ble	.L184
 568:lvgl/src/core/lv_refr.c ****         row_last = sub_area.y2;
 2978              		.loc 1 568 30 is_stmt 1 discriminator 1 view .LVU983
 568:lvgl/src/core/lv_refr.c ****         row_last = sub_area.y2;
 2979              		.loc 1 568 42 is_stmt 0 discriminator 1 view .LVU984
 2980 0132 ADF81660 		strh	r6, [sp, #22]	@ movhi
 2981 0136 D3E7     		b	.L184
 2982              	.L191:
 570:lvgl/src/core/lv_refr.c ****         lv_refr_area_part(draw_ctx);
 2983              		.loc 1 570 28 is_stmt 1 discriminator 1 view .LVU985
 570:lvgl/src/core/lv_refr.c ****         lv_refr_area_part(draw_ctx);
 2984              		.loc 1 570 37 is_stmt 0 discriminator 1 view .LVU986
 2985 0138 1B68     		ldr	r3, [r3]
 570:lvgl/src/core/lv_refr.c ****         lv_refr_area_part(draw_ctx);
 2986              		.loc 1 570 45 discriminator 1 view .LVU987
 2987 013a DA68     		ldr	r2, [r3, #12]
 570:lvgl/src/core/lv_refr.c ****         lv_refr_area_part(draw_ctx);
 2988              		.loc 1 570 67 discriminator 1 view .LVU988
 2989 013c 137E     		ldrb	r3, [r2, #24]	@ zero_extendqisi2
 2990 013e 43F00203 		orr	r3, r3, #2
 2991 0142 1376     		strb	r3, [r2, #24]
 2992 0144 D0E7     		b	.L185
 2993              	.LVL270:
 2994              	.L192:
 575:lvgl/src/core/lv_refr.c ****         /*Calc. the next y coordinates of draw_buf*/
 2995              		.loc 1 575 5 is_stmt 1 view .LVU989
 575:lvgl/src/core/lv_refr.c ****         /*Calc. the next y coordinates of draw_buf*/
 2996              		.loc 1 575 7 is_stmt 0 view .LVU990
 2997 0146 B145     		cmp	r9, r6
 2998 0148 02D1     		bne	.L193
 2999              	.LVL271:
 3000              	.L176:
 587:lvgl/src/core/lv_refr.c **** 
 3001              		.loc 1 587 1 view .LVU991
 3002 014a 07B0     		add	sp, sp, #28
 3003              	.LCFI35:
 3004              		.cfi_remember_state
 3005              		.cfi_def_cfa_offset 28
 3006              		@ sp needed
 3007 014c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 3008              	.LVL272:
 3009              	.L193:
ARM GAS  C:\usertemp\ccxmAei4.s 			page 91


 3010              	.LCFI36:
 3011              		.cfi_restore_state
 577:lvgl/src/core/lv_refr.c ****         sub_area.x2 = area_p->x2;
 3012              		.loc 1 577 9 is_stmt 1 view .LVU992
 577:lvgl/src/core/lv_refr.c ****         sub_area.x2 = area_p->x2;
 3013              		.loc 1 577 29 is_stmt 0 view .LVU993
 3014 0150 B7F90020 		ldrsh	r2, [r7]
 577:lvgl/src/core/lv_refr.c ****         sub_area.x2 = area_p->x2;
 3015              		.loc 1 577 21 view .LVU994
 3016 0154 ADF81020 		strh	r2, [sp, #16]	@ movhi
 578:lvgl/src/core/lv_refr.c ****         sub_area.y1 = row;
 3017              		.loc 1 578 9 is_stmt 1 view .LVU995
 578:lvgl/src/core/lv_refr.c ****         sub_area.y1 = row;
 3018              		.loc 1 578 29 is_stmt 0 view .LVU996
 3019 0158 B7F90420 		ldrsh	r2, [r7, #4]
 578:lvgl/src/core/lv_refr.c ****         sub_area.y1 = row;
 3020              		.loc 1 578 21 view .LVU997
 3021 015c ADF81420 		strh	r2, [sp, #20]	@ movhi
 579:lvgl/src/core/lv_refr.c ****         sub_area.y2 = y2;
 3022              		.loc 1 579 9 is_stmt 1 view .LVU998
 579:lvgl/src/core/lv_refr.c ****         sub_area.y2 = y2;
 3023              		.loc 1 579 21 is_stmt 0 view .LVU999
 3024 0160 ADF81230 		strh	r3, [sp, #18]	@ movhi
 580:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &sub_area;
 3025              		.loc 1 580 9 is_stmt 1 view .LVU1000
 580:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &sub_area;
 3026              		.loc 1 580 21 is_stmt 0 view .LVU1001
 3027 0164 ADF81660 		strh	r6, [sp, #22]	@ movhi
 581:lvgl/src/core/lv_refr.c ****         draw_ctx->clip_area = &sub_area;
 3028              		.loc 1 581 9 is_stmt 1 view .LVU1002
 581:lvgl/src/core/lv_refr.c ****         draw_ctx->clip_area = &sub_area;
 3029              		.loc 1 581 28 is_stmt 0 view .LVU1003
 3030 0168 04AB     		add	r3, sp, #16
 3031              	.LVL273:
 581:lvgl/src/core/lv_refr.c ****         draw_ctx->clip_area = &sub_area;
 3032              		.loc 1 581 28 view .LVU1004
 3033 016a 6B60     		str	r3, [r5, #4]
 582:lvgl/src/core/lv_refr.c ****         draw_ctx->buf = disp_refr->driver->draw_buf->buf_act;
 3034              		.loc 1 582 9 is_stmt 1 view .LVU1005
 582:lvgl/src/core/lv_refr.c ****         draw_ctx->buf = disp_refr->driver->draw_buf->buf_act;
 3035              		.loc 1 582 29 is_stmt 0 view .LVU1006
 3036 016c AB60     		str	r3, [r5, #8]
 583:lvgl/src/core/lv_refr.c ****         disp_refr->driver->draw_buf->last_part = 1;
 3037              		.loc 1 583 9 is_stmt 1 view .LVU1007
 583:lvgl/src/core/lv_refr.c ****         disp_refr->driver->draw_buf->last_part = 1;
 3038              		.loc 1 583 34 is_stmt 0 view .LVU1008
 3039 016e 084B     		ldr	r3, .L194
 3040 0170 1B68     		ldr	r3, [r3]
 3041 0172 1A68     		ldr	r2, [r3]
 583:lvgl/src/core/lv_refr.c ****         disp_refr->driver->draw_buf->last_part = 1;
 3042              		.loc 1 583 42 view .LVU1009
 3043 0174 D268     		ldr	r2, [r2, #12]
 583:lvgl/src/core/lv_refr.c ****         disp_refr->driver->draw_buf->last_part = 1;
 3044              		.loc 1 583 52 view .LVU1010
 3045 0176 9268     		ldr	r2, [r2, #8]
 583:lvgl/src/core/lv_refr.c ****         disp_refr->driver->draw_buf->last_part = 1;
 3046              		.loc 1 583 23 view .LVU1011
ARM GAS  C:\usertemp\ccxmAei4.s 			page 92


 3047 0178 2A60     		str	r2, [r5]
 3048              	.LVL274:
 584:lvgl/src/core/lv_refr.c ****         lv_refr_area_part(draw_ctx);
 3049              		.loc 1 584 9 is_stmt 1 view .LVU1012
 584:lvgl/src/core/lv_refr.c ****         lv_refr_area_part(draw_ctx);
 3050              		.loc 1 584 18 is_stmt 0 view .LVU1013
 3051 017a 1B68     		ldr	r3, [r3]
 584:lvgl/src/core/lv_refr.c ****         lv_refr_area_part(draw_ctx);
 3052              		.loc 1 584 26 view .LVU1014
 3053 017c DA68     		ldr	r2, [r3, #12]
 584:lvgl/src/core/lv_refr.c ****         lv_refr_area_part(draw_ctx);
 3054              		.loc 1 584 48 view .LVU1015
 3055 017e 137E     		ldrb	r3, [r2, #24]	@ zero_extendqisi2
 3056 0180 43F00203 		orr	r3, r3, #2
 3057 0184 1376     		strb	r3, [r2, #24]
 585:lvgl/src/core/lv_refr.c ****     }
 3058              		.loc 1 585 9 is_stmt 1 view .LVU1016
 3059 0186 2846     		mov	r0, r5
 3060 0188 FFF7FEFF 		bl	lv_refr_area_part
 3061              	.LVL275:
 3062 018c DDE7     		b	.L176
 3063              	.L195:
 3064 018e 00BF     		.align	2
 3065              	.L194:
 3066 0190 00000000 		.word	disp_refr
 3067              		.cfi_endproc
 3068              	.LFE173:
 3070              		.section	.text.lv_refr_areas,"ax",%progbits
 3071              		.align	1
 3072              		.syntax unified
 3073              		.thumb
 3074              		.thumb_func
 3076              	lv_refr_areas:
 3077              	.LFB172:
 487:lvgl/src/core/lv_refr.c ****     px_num = 0;
 3078              		.loc 1 487 1 view -0
 3079              		.cfi_startproc
 3080              		@ args = 0, pretend = 0, frame = 0
 3081              		@ frame_needed = 0, uses_anonymous_args = 0
 3082 0000 70B5     		push	{r4, r5, r6, lr}
 3083              	.LCFI37:
 3084              		.cfi_def_cfa_offset 16
 3085              		.cfi_offset 4, -16
 3086              		.cfi_offset 5, -12
 3087              		.cfi_offset 6, -8
 3088              		.cfi_offset 14, -4
 488:lvgl/src/core/lv_refr.c **** 
 3089              		.loc 1 488 5 view .LVU1018
 488:lvgl/src/core/lv_refr.c **** 
 3090              		.loc 1 488 12 is_stmt 0 view .LVU1019
 3091 0002 264B     		ldr	r3, .L207
 3092 0004 0022     		movs	r2, #0
 3093 0006 1A60     		str	r2, [r3]
 490:lvgl/src/core/lv_refr.c **** 
 3094              		.loc 1 490 5 is_stmt 1 view .LVU1020
 490:lvgl/src/core/lv_refr.c **** 
 3095              		.loc 1 490 17 is_stmt 0 view .LVU1021
ARM GAS  C:\usertemp\ccxmAei4.s 			page 93


 3096 0008 254B     		ldr	r3, .L207+4
 3097 000a 1A68     		ldr	r2, [r3]
 3098 000c B2F85041 		ldrh	r4, [r2, #336]
 490:lvgl/src/core/lv_refr.c **** 
 3099              		.loc 1 490 7 view .LVU1022
 3100 0010 002C     		cmp	r4, #0
 3101 0012 41D0     		beq	.L196
 493:lvgl/src/core/lv_refr.c ****     int32_t last_i = 0;
 3102              		.loc 1 493 5 is_stmt 1 view .LVU1023
 494:lvgl/src/core/lv_refr.c ****     for(i = disp_refr->inv_p - 1; i >= 0; i--) {
 3103              		.loc 1 494 5 view .LVU1024
 3104              	.LVL276:
 495:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[i] == 0) {
 3105              		.loc 1 495 5 view .LVU1025
 495:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[i] == 0) {
 3106              		.loc 1 495 11 is_stmt 0 view .LVU1026
 3107 0014 013C     		subs	r4, r4, #1
 3108              	.LVL277:
 3109              	.L198:
 495:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[i] == 0) {
 3110              		.loc 1 495 37 is_stmt 1 discriminator 1 view .LVU1027
 3111 0016 002C     		cmp	r4, #0
 3112 0018 05DB     		blt	.L206
 496:lvgl/src/core/lv_refr.c ****             last_i = i;
 3113              		.loc 1 496 9 view .LVU1028
 496:lvgl/src/core/lv_refr.c ****             last_i = i;
 3114              		.loc 1 496 38 is_stmt 0 view .LVU1029
 3115 001a 1319     		adds	r3, r2, r4
 3116 001c 93F83031 		ldrb	r3, [r3, #304]	@ zero_extendqisi2
 496:lvgl/src/core/lv_refr.c ****             last_i = i;
 3117              		.loc 1 496 11 view .LVU1030
 3118 0020 13B1     		cbz	r3, .L199
 495:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[i] == 0) {
 3119              		.loc 1 495 44 is_stmt 1 discriminator 2 view .LVU1031
 3120 0022 013C     		subs	r4, r4, #1
 3121              	.LVL278:
 495:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[i] == 0) {
 3122              		.loc 1 495 44 is_stmt 0 discriminator 2 view .LVU1032
 3123 0024 F7E7     		b	.L198
 3124              	.L206:
 494:lvgl/src/core/lv_refr.c ****     for(i = disp_refr->inv_p - 1; i >= 0; i--) {
 3125              		.loc 1 494 13 view .LVU1033
 3126 0026 0024     		movs	r4, #0
 3127              	.LVL279:
 3128              	.L199:
 502:lvgl/src/core/lv_refr.c ****     disp_refr->driver->draw_buf->last_part = 0;
 3129              		.loc 1 502 5 is_stmt 1 view .LVU1034
 502:lvgl/src/core/lv_refr.c ****     disp_refr->driver->draw_buf->last_part = 0;
 3130              		.loc 1 502 14 is_stmt 0 view .LVU1035
 3131 0028 1368     		ldr	r3, [r2]
 502:lvgl/src/core/lv_refr.c ****     disp_refr->driver->draw_buf->last_part = 0;
 3132              		.loc 1 502 22 view .LVU1036
 3133 002a D968     		ldr	r1, [r3, #12]
 502:lvgl/src/core/lv_refr.c ****     disp_refr->driver->draw_buf->last_part = 0;
 3134              		.loc 1 502 44 view .LVU1037
 3135 002c 0B7E     		ldrb	r3, [r1, #24]	@ zero_extendqisi2
 3136 002e 23F00103 		bic	r3, r3, #1
ARM GAS  C:\usertemp\ccxmAei4.s 			page 94


 3137 0032 0B76     		strb	r3, [r1, #24]
 503:lvgl/src/core/lv_refr.c **** 
 3138              		.loc 1 503 5 is_stmt 1 view .LVU1038
 503:lvgl/src/core/lv_refr.c **** 
 3139              		.loc 1 503 14 is_stmt 0 view .LVU1039
 3140 0034 1368     		ldr	r3, [r2]
 503:lvgl/src/core/lv_refr.c **** 
 3141              		.loc 1 503 22 view .LVU1040
 3142 0036 DA68     		ldr	r2, [r3, #12]
 503:lvgl/src/core/lv_refr.c **** 
 3143              		.loc 1 503 44 view .LVU1041
 3144 0038 137E     		ldrb	r3, [r2, #24]	@ zero_extendqisi2
 3145 003a 23F00203 		bic	r3, r3, #2
 3146 003e 1376     		strb	r3, [r2, #24]
 505:lvgl/src/core/lv_refr.c ****         /*Refresh the unjoined areas*/
 3147              		.loc 1 505 5 is_stmt 1 view .LVU1042
 3148              	.LVL280:
 505:lvgl/src/core/lv_refr.c ****         /*Refresh the unjoined areas*/
 3149              		.loc 1 505 11 is_stmt 0 view .LVU1043
 3150 0040 0025     		movs	r5, #0
 505:lvgl/src/core/lv_refr.c ****         /*Refresh the unjoined areas*/
 3151              		.loc 1 505 5 view .LVU1044
 3152 0042 15E0     		b	.L201
 3153              	.LVL281:
 3154              	.L203:
 510:lvgl/src/core/lv_refr.c ****             lv_refr_area(&disp_refr->inv_areas[i]);
 3155              		.loc 1 510 13 is_stmt 1 view .LVU1045
 510:lvgl/src/core/lv_refr.c ****             lv_refr_area(&disp_refr->inv_areas[i]);
 3156              		.loc 1 510 22 is_stmt 0 view .LVU1046
 3157 0044 1A68     		ldr	r2, [r3]
 510:lvgl/src/core/lv_refr.c ****             lv_refr_area(&disp_refr->inv_areas[i]);
 3158              		.loc 1 510 30 view .LVU1047
 3159 0046 D168     		ldr	r1, [r2, #12]
 510:lvgl/src/core/lv_refr.c ****             lv_refr_area(&disp_refr->inv_areas[i]);
 3160              		.loc 1 510 52 view .LVU1048
 3161 0048 0A7E     		ldrb	r2, [r1, #24]	@ zero_extendqisi2
 3162 004a 22F00202 		bic	r2, r2, #2
 3163 004e 0A76     		strb	r2, [r1, #24]
 511:lvgl/src/core/lv_refr.c **** 
 3164              		.loc 1 511 13 is_stmt 1 view .LVU1049
 511:lvgl/src/core/lv_refr.c **** 
 3165              		.loc 1 511 26 is_stmt 0 view .LVU1050
 3166 0050 A81D     		adds	r0, r5, #6
 3167 0052 C600     		lsls	r6, r0, #3
 511:lvgl/src/core/lv_refr.c **** 
 3168              		.loc 1 511 13 view .LVU1051
 3169 0054 03EBC000 		add	r0, r3, r0, lsl #3
 3170 0058 FFF7FEFF 		bl	lv_refr_area
 3171              	.LVL282:
 513:lvgl/src/core/lv_refr.c ****         }
 3172              		.loc 1 513 13 is_stmt 1 view .LVU1052
 513:lvgl/src/core/lv_refr.c ****         }
 3173              		.loc 1 513 50 is_stmt 0 view .LVU1053
 3174 005c 104B     		ldr	r3, .L207+4
 3175 005e 1868     		ldr	r0, [r3]
 513:lvgl/src/core/lv_refr.c ****         }
 3176              		.loc 1 513 23 view .LVU1054
ARM GAS  C:\usertemp\ccxmAei4.s 			page 95


 3177 0060 3044     		add	r0, r0, r6
 3178 0062 FFF7FEFF 		bl	lv_area_get_size
 3179              	.LVL283:
 513:lvgl/src/core/lv_refr.c ****         }
 3180              		.loc 1 513 20 discriminator 1 view .LVU1055
 3181 0066 0D4A     		ldr	r2, .L207
 3182 0068 1368     		ldr	r3, [r2]
 3183 006a 0344     		add	r3, r3, r0
 3184 006c 1360     		str	r3, [r2]
 3185              	.L202:
 505:lvgl/src/core/lv_refr.c ****         /*Refresh the unjoined areas*/
 3186              		.loc 1 505 39 is_stmt 1 discriminator 2 view .LVU1056
 3187 006e 0135     		adds	r5, r5, #1
 3188              	.LVL284:
 3189              	.L201:
 505:lvgl/src/core/lv_refr.c ****         /*Refresh the unjoined areas*/
 3190              		.loc 1 505 18 discriminator 1 view .LVU1057
 505:lvgl/src/core/lv_refr.c ****         /*Refresh the unjoined areas*/
 3191              		.loc 1 505 29 is_stmt 0 discriminator 1 view .LVU1058
 3192 0070 0B4B     		ldr	r3, .L207+4
 3193 0072 1B68     		ldr	r3, [r3]
 3194 0074 B3F85021 		ldrh	r2, [r3, #336]
 505:lvgl/src/core/lv_refr.c ****         /*Refresh the unjoined areas*/
 3195              		.loc 1 505 18 discriminator 1 view .LVU1059
 3196 0078 AA42     		cmp	r2, r5
 3197 007a 0DDD     		ble	.L196
 507:lvgl/src/core/lv_refr.c **** 
 3198              		.loc 1 507 9 is_stmt 1 view .LVU1060
 507:lvgl/src/core/lv_refr.c **** 
 3199              		.loc 1 507 38 is_stmt 0 view .LVU1061
 3200 007c 5A19     		adds	r2, r3, r5
 3201 007e 92F83021 		ldrb	r2, [r2, #304]	@ zero_extendqisi2
 507:lvgl/src/core/lv_refr.c **** 
 3202              		.loc 1 507 11 view .LVU1062
 3203 0082 002A     		cmp	r2, #0
 3204 0084 F3D1     		bne	.L202
 509:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_buf->last_part = 0;
 3205              		.loc 1 509 13 is_stmt 1 view .LVU1063
 509:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_buf->last_part = 0;
 3206              		.loc 1 509 15 is_stmt 0 view .LVU1064
 3207 0086 A542     		cmp	r5, r4
 3208 0088 DCD1     		bne	.L203
 509:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_buf->last_part = 0;
 3209              		.loc 1 509 29 is_stmt 1 discriminator 1 view .LVU1065
 509:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_buf->last_part = 0;
 3210              		.loc 1 509 38 is_stmt 0 discriminator 1 view .LVU1066
 3211 008a 1A68     		ldr	r2, [r3]
 509:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_buf->last_part = 0;
 3212              		.loc 1 509 46 discriminator 1 view .LVU1067
 3213 008c D168     		ldr	r1, [r2, #12]
 509:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_buf->last_part = 0;
 3214              		.loc 1 509 68 discriminator 1 view .LVU1068
 3215 008e 0A7E     		ldrb	r2, [r1, #24]	@ zero_extendqisi2
 3216 0090 42F00102 		orr	r2, r2, #1
 3217 0094 0A76     		strb	r2, [r1, #24]
 3218 0096 D5E7     		b	.L203
 3219              	.LVL285:
ARM GAS  C:\usertemp\ccxmAei4.s 			page 96


 3220              	.L196:
 516:lvgl/src/core/lv_refr.c **** 
 3221              		.loc 1 516 1 view .LVU1069
 3222 0098 70BD     		pop	{r4, r5, r6, pc}
 3223              	.L208:
 3224 009a 00BF     		.align	2
 3225              	.L207:
 3226 009c 00000000 		.word	px_num
 3227 00a0 00000000 		.word	disp_refr
 3228              		.cfi_endproc
 3229              	.LFE172:
 3231              		.section	.text._lv_inv_area,"ax",%progbits
 3232              		.align	1
 3233              		.global	_lv_inv_area
 3234              		.syntax unified
 3235              		.thumb
 3236              		.thumb_func
 3238              	_lv_inv_area:
 3239              	.LVL286:
 3240              	.LFB165:
 201:lvgl/src/core/lv_refr.c ****     if(!disp) disp = lv_disp_get_default();
 3241              		.loc 1 201 1 is_stmt 1 view -0
 3242              		.cfi_startproc
 3243              		@ args = 0, pretend = 0, frame = 16
 3244              		@ frame_needed = 0, uses_anonymous_args = 0
 201:lvgl/src/core/lv_refr.c ****     if(!disp) disp = lv_disp_get_default();
 3245              		.loc 1 201 1 is_stmt 0 view .LVU1071
 3246 0000 30B5     		push	{r4, r5, lr}
 3247              	.LCFI38:
 3248              		.cfi_def_cfa_offset 12
 3249              		.cfi_offset 4, -12
 3250              		.cfi_offset 5, -8
 3251              		.cfi_offset 14, -4
 3252 0002 85B0     		sub	sp, sp, #20
 3253              	.LCFI39:
 3254              		.cfi_def_cfa_offset 32
 3255 0004 0C46     		mov	r4, r1
 202:lvgl/src/core/lv_refr.c ****     if(!disp) return;
 3256              		.loc 1 202 5 is_stmt 1 view .LVU1072
 202:lvgl/src/core/lv_refr.c ****     if(!disp) return;
 3257              		.loc 1 202 7 is_stmt 0 view .LVU1073
 3258 0006 0546     		mov	r5, r0
 3259 0008 20B3     		cbz	r0, .L223
 3260              	.LVL287:
 3261              	.L210:
 206:lvgl/src/core/lv_refr.c ****         disp->inv_p = 0;
 3262              		.loc 1 206 5 is_stmt 1 view .LVU1074
 206:lvgl/src/core/lv_refr.c ****         disp->inv_p = 0;
 3263              		.loc 1 206 7 is_stmt 0 view .LVU1075
 3264 000a 4CB3     		cbz	r4, .L224
 211:lvgl/src/core/lv_refr.c ****     scr_area.x1 = 0;
 3265              		.loc 1 211 5 is_stmt 1 view .LVU1076
 212:lvgl/src/core/lv_refr.c ****     scr_area.y1 = 0;
 3266              		.loc 1 212 5 view .LVU1077
 212:lvgl/src/core/lv_refr.c ****     scr_area.y1 = 0;
 3267              		.loc 1 212 17 is_stmt 0 view .LVU1078
 3268 000c 0023     		movs	r3, #0
ARM GAS  C:\usertemp\ccxmAei4.s 			page 97


 3269 000e ADF80830 		strh	r3, [sp, #8]	@ movhi
 213:lvgl/src/core/lv_refr.c ****     scr_area.x2 = lv_disp_get_hor_res(disp) - 1;
 3270              		.loc 1 213 5 is_stmt 1 view .LVU1079
 213:lvgl/src/core/lv_refr.c ****     scr_area.x2 = lv_disp_get_hor_res(disp) - 1;
 3271              		.loc 1 213 17 is_stmt 0 view .LVU1080
 3272 0012 ADF80A30 		strh	r3, [sp, #10]	@ movhi
 214:lvgl/src/core/lv_refr.c ****     scr_area.y2 = lv_disp_get_ver_res(disp) - 1;
 3273              		.loc 1 214 5 is_stmt 1 view .LVU1081
 214:lvgl/src/core/lv_refr.c ****     scr_area.y2 = lv_disp_get_ver_res(disp) - 1;
 3274              		.loc 1 214 19 is_stmt 0 view .LVU1082
 3275 0016 2846     		mov	r0, r5
 3276 0018 FFF7FEFF 		bl	lv_disp_get_hor_res
 3277              	.LVL288:
 214:lvgl/src/core/lv_refr.c ****     scr_area.y2 = lv_disp_get_ver_res(disp) - 1;
 3278              		.loc 1 214 19 discriminator 1 view .LVU1083
 3279 001c 80B2     		uxth	r0, r0
 214:lvgl/src/core/lv_refr.c ****     scr_area.y2 = lv_disp_get_ver_res(disp) - 1;
 3280              		.loc 1 214 45 discriminator 1 view .LVU1084
 3281 001e 0138     		subs	r0, r0, #1
 214:lvgl/src/core/lv_refr.c ****     scr_area.y2 = lv_disp_get_ver_res(disp) - 1;
 3282              		.loc 1 214 17 discriminator 1 view .LVU1085
 3283 0020 ADF80C00 		strh	r0, [sp, #12]	@ movhi
 215:lvgl/src/core/lv_refr.c **** 
 3284              		.loc 1 215 5 is_stmt 1 view .LVU1086
 215:lvgl/src/core/lv_refr.c **** 
 3285              		.loc 1 215 19 is_stmt 0 view .LVU1087
 3286 0024 2846     		mov	r0, r5
 3287 0026 FFF7FEFF 		bl	lv_disp_get_ver_res
 3288              	.LVL289:
 215:lvgl/src/core/lv_refr.c **** 
 3289              		.loc 1 215 19 discriminator 1 view .LVU1088
 3290 002a 80B2     		uxth	r0, r0
 215:lvgl/src/core/lv_refr.c **** 
 3291              		.loc 1 215 45 discriminator 1 view .LVU1089
 3292 002c 0138     		subs	r0, r0, #1
 215:lvgl/src/core/lv_refr.c **** 
 3293              		.loc 1 215 17 discriminator 1 view .LVU1090
 3294 002e ADF80E00 		strh	r0, [sp, #14]	@ movhi
 217:lvgl/src/core/lv_refr.c ****     bool suc;
 3295              		.loc 1 217 5 is_stmt 1 view .LVU1091
 218:lvgl/src/core/lv_refr.c **** 
 3296              		.loc 1 218 5 view .LVU1092
 220:lvgl/src/core/lv_refr.c ****     if(suc == false)  return; /*Out of the screen*/
 3297              		.loc 1 220 5 view .LVU1093
 220:lvgl/src/core/lv_refr.c ****     if(suc == false)  return; /*Out of the screen*/
 3298              		.loc 1 220 11 is_stmt 0 view .LVU1094
 3299 0032 02AA     		add	r2, sp, #8
 3300 0034 2146     		mov	r1, r4
 3301 0036 6846     		mov	r0, sp
 3302 0038 FFF7FEFF 		bl	_lv_area_intersect
 3303              	.LVL290:
 221:lvgl/src/core/lv_refr.c **** 
 3304              		.loc 1 221 5 is_stmt 1 view .LVU1095
 221:lvgl/src/core/lv_refr.c **** 
 3305              		.loc 1 221 7 is_stmt 0 view .LVU1096
 3306 003c 98B1     		cbz	r0, .L209
 224:lvgl/src/core/lv_refr.c ****         disp->inv_areas[0] = scr_area;
ARM GAS  C:\usertemp\ccxmAei4.s 			page 98


 3307              		.loc 1 224 5 is_stmt 1 view .LVU1097
 224:lvgl/src/core/lv_refr.c ****         disp->inv_areas[0] = scr_area;
 3308              		.loc 1 224 12 is_stmt 0 view .LVU1098
 3309 003e 2868     		ldr	r0, [r5]
 3310              	.LVL291:
 224:lvgl/src/core/lv_refr.c ****         disp->inv_areas[0] = scr_area;
 3311              		.loc 1 224 8 view .LVU1099
 3312 0040 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
 224:lvgl/src/core/lv_refr.c ****         disp->inv_areas[0] = scr_area;
 3313              		.loc 1 224 7 view .LVU1100
 3314 0042 13F0020F 		tst	r3, #2
 3315 0046 10D1     		bne	.L225
 231:lvgl/src/core/lv_refr.c **** 
 3316              		.loc 1 231 5 is_stmt 1 view .LVU1101
 231:lvgl/src/core/lv_refr.c **** 
 3317              		.loc 1 231 20 is_stmt 0 view .LVU1102
 3318 0048 8369     		ldr	r3, [r0, #24]
 231:lvgl/src/core/lv_refr.c **** 
 3319              		.loc 1 231 7 view .LVU1103
 3320 004a 0BB1     		cbz	r3, .L215
 231:lvgl/src/core/lv_refr.c **** 
 3321              		.loc 1 231 34 is_stmt 1 discriminator 1 view .LVU1104
 3322 004c 6946     		mov	r1, sp
 3323 004e 9847     		blx	r3
 3324              	.LVL292:
 3325              	.L215:
 201:lvgl/src/core/lv_refr.c ****     if(!disp) disp = lv_disp_get_default();
 3326              		.loc 1 201 1 is_stmt 0 view .LVU1105
 3327 0050 0024     		movs	r4, #0
 3328              	.LVL293:
 201:lvgl/src/core/lv_refr.c ****     if(!disp) disp = lv_disp_get_default();
 3329              		.loc 1 201 1 view .LVU1106
 3330 0052 1CE0     		b	.L216
 3331              	.LVL294:
 3332              	.L223:
 202:lvgl/src/core/lv_refr.c ****     if(!disp) return;
 3333              		.loc 1 202 15 is_stmt 1 discriminator 1 view .LVU1107
 202:lvgl/src/core/lv_refr.c ****     if(!disp) return;
 3334              		.loc 1 202 22 is_stmt 0 discriminator 1 view .LVU1108
 3335 0054 FFF7FEFF 		bl	lv_disp_get_default
 3336              	.LVL295:
 203:lvgl/src/core/lv_refr.c **** 
 3337              		.loc 1 203 5 is_stmt 1 view .LVU1109
 203:lvgl/src/core/lv_refr.c **** 
 3338              		.loc 1 203 7 is_stmt 0 view .LVU1110
 3339 0058 0546     		mov	r5, r0
 3340 005a 0028     		cmp	r0, #0
 3341 005c D5D1     		bne	.L210
 3342 005e 02E0     		b	.L209
 3343              	.LVL296:
 3344              	.L224:
 207:lvgl/src/core/lv_refr.c ****         return;
 3345              		.loc 1 207 9 is_stmt 1 view .LVU1111
 207:lvgl/src/core/lv_refr.c ****         return;
 3346              		.loc 1 207 21 is_stmt 0 view .LVU1112
 3347 0060 0023     		movs	r3, #0
 3348 0062 A5F85031 		strh	r3, [r5, #336]	@ movhi
ARM GAS  C:\usertemp\ccxmAei4.s 			page 99


 208:lvgl/src/core/lv_refr.c ****     }
 3349              		.loc 1 208 9 is_stmt 1 view .LVU1113
 3350              	.LVL297:
 3351              	.L209:
 249:lvgl/src/core/lv_refr.c **** 
 3352              		.loc 1 249 1 is_stmt 0 view .LVU1114
 3353 0066 05B0     		add	sp, sp, #20
 3354              	.LCFI40:
 3355              		.cfi_remember_state
 3356              		.cfi_def_cfa_offset 12
 3357              		@ sp needed
 3358 0068 30BD     		pop	{r4, r5, pc}
 3359              	.LVL298:
 3360              	.L225:
 3361              	.LCFI41:
 3362              		.cfi_restore_state
 225:lvgl/src/core/lv_refr.c ****         disp->inv_p = 1;
 3363              		.loc 1 225 9 is_stmt 1 view .LVU1115
 225:lvgl/src/core/lv_refr.c ****         disp->inv_p = 1;
 3364              		.loc 1 225 28 is_stmt 0 view .LVU1116
 3365 006a 05F13003 		add	r3, r5, #48
 3366 006e 04AA     		add	r2, sp, #16
 3367 0070 12E90300 		ldmdb	r2, {r0, r1}
 3368 0074 83E80300 		stm	r3, {r0, r1}
 226:lvgl/src/core/lv_refr.c ****         if(disp->refr_timer) lv_timer_resume(disp->refr_timer);
 3369              		.loc 1 226 9 is_stmt 1 view .LVU1117
 226:lvgl/src/core/lv_refr.c ****         if(disp->refr_timer) lv_timer_resume(disp->refr_timer);
 3370              		.loc 1 226 21 is_stmt 0 view .LVU1118
 3371 0078 0123     		movs	r3, #1
 3372 007a A5F85031 		strh	r3, [r5, #336]	@ movhi
 227:lvgl/src/core/lv_refr.c ****         return;
 3373              		.loc 1 227 9 is_stmt 1 view .LVU1119
 227:lvgl/src/core/lv_refr.c ****         return;
 3374              		.loc 1 227 16 is_stmt 0 view .LVU1120
 3375 007e 6868     		ldr	r0, [r5, #4]
 227:lvgl/src/core/lv_refr.c ****         return;
 3376              		.loc 1 227 11 view .LVU1121
 3377 0080 0028     		cmp	r0, #0
 3378 0082 F0D0     		beq	.L209
 227:lvgl/src/core/lv_refr.c ****         return;
 3379              		.loc 1 227 30 is_stmt 1 discriminator 1 view .LVU1122
 3380 0084 FFF7FEFF 		bl	lv_timer_resume
 3381              	.LVL299:
 228:lvgl/src/core/lv_refr.c ****     }
 3382              		.loc 1 228 9 view .LVU1123
 3383 0088 EDE7     		b	.L209
 3384              	.LVL300:
 3385              	.L227:
 235:lvgl/src/core/lv_refr.c ****         if(_lv_area_is_in(&com_area, &disp->inv_areas[i], 0) != false) return;
 3386              		.loc 1 235 34 discriminator 2 view .LVU1124
 3387 008a 0134     		adds	r4, r4, #1
 3388              	.LVL301:
 235:lvgl/src/core/lv_refr.c ****         if(_lv_area_is_in(&com_area, &disp->inv_areas[i], 0) != false) return;
 3389              		.loc 1 235 34 is_stmt 0 discriminator 2 view .LVU1125
 3390 008c A4B2     		uxth	r4, r4
 3391              	.LVL302:
 3392              	.L216:
ARM GAS  C:\usertemp\ccxmAei4.s 			page 100


 235:lvgl/src/core/lv_refr.c ****         if(_lv_area_is_in(&com_area, &disp->inv_areas[i], 0) != false) return;
 3393              		.loc 1 235 18 is_stmt 1 discriminator 1 view .LVU1126
 235:lvgl/src/core/lv_refr.c ****         if(_lv_area_is_in(&com_area, &disp->inv_areas[i], 0) != false) return;
 3394              		.loc 1 235 24 is_stmt 0 discriminator 1 view .LVU1127
 3395 008e B5F85031 		ldrh	r3, [r5, #336]
 235:lvgl/src/core/lv_refr.c ****         if(_lv_area_is_in(&com_area, &disp->inv_areas[i], 0) != false) return;
 3396              		.loc 1 235 18 discriminator 1 view .LVU1128
 3397 0092 A342     		cmp	r3, r4
 3398 0094 09D9     		bls	.L226
 236:lvgl/src/core/lv_refr.c ****     }
 3399              		.loc 1 236 9 is_stmt 1 view .LVU1129
 236:lvgl/src/core/lv_refr.c ****     }
 3400              		.loc 1 236 38 is_stmt 0 view .LVU1130
 3401 0096 A11D     		adds	r1, r4, #6
 236:lvgl/src/core/lv_refr.c ****     }
 3402              		.loc 1 236 12 view .LVU1131
 3403 0098 0022     		movs	r2, #0
 3404 009a 05EBC101 		add	r1, r5, r1, lsl #3
 3405 009e 6846     		mov	r0, sp
 3406 00a0 FFF7FEFF 		bl	_lv_area_is_in
 3407              	.LVL303:
 236:lvgl/src/core/lv_refr.c ****     }
 3408              		.loc 1 236 11 discriminator 1 view .LVU1132
 3409 00a4 0028     		cmp	r0, #0
 3410 00a6 F0D0     		beq	.L227
 3411 00a8 DDE7     		b	.L209
 3412              	.L226:
 240:lvgl/src/core/lv_refr.c ****         lv_area_copy(&disp->inv_areas[disp->inv_p], &com_area);
 3413              		.loc 1 240 5 is_stmt 1 view .LVU1133
 240:lvgl/src/core/lv_refr.c ****         lv_area_copy(&disp->inv_areas[disp->inv_p], &com_area);
 3414              		.loc 1 240 7 is_stmt 0 view .LVU1134
 3415 00aa 1F2B     		cmp	r3, #31
 3416 00ac 1AD8     		bhi	.L218
 241:lvgl/src/core/lv_refr.c ****     }
 3417              		.loc 1 241 9 is_stmt 1 view .LVU1135
 3418              	.LVL304:
 3419              	.LBB106:
 3420              	.LBI106:
 110:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 3421              		.loc 2 110 20 view .LVU1136
 3422              	.LBB107:
 112:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 3423              		.loc 2 112 5 view .LVU1137
 112:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 3424              		.loc 2 112 19 is_stmt 0 view .LVU1138
 3425 00ae BDF90020 		ldrsh	r2, [sp]
 112:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 3426              		.loc 2 112 14 view .LVU1139
 3427 00b2 0633     		adds	r3, r3, #6
 3428              	.LVL305:
 112:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 3429              		.loc 2 112 14 view .LVU1140
 3430 00b4 25F83320 		strh	r2, [r5, r3, lsl #3]	@ movhi
 3431              	.LVL306:
 113:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 3432              		.loc 2 113 5 is_stmt 1 view .LVU1141
 113:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
ARM GAS  C:\usertemp\ccxmAei4.s 			page 101


 3433              		.loc 2 113 19 is_stmt 0 view .LVU1142
 3434 00b8 BDF90220 		ldrsh	r2, [sp, #2]
 113:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 3435              		.loc 2 113 14 view .LVU1143
 3436 00bc 05EBC303 		add	r3, r5, r3, lsl #3
 3437              	.LVL307:
 113:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 3438              		.loc 2 113 14 view .LVU1144
 3439 00c0 5A80     		strh	r2, [r3, #2]	@ movhi
 114:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 3440              		.loc 2 114 5 is_stmt 1 view .LVU1145
 114:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 3441              		.loc 2 114 19 is_stmt 0 view .LVU1146
 3442 00c2 BDF90420 		ldrsh	r2, [sp, #4]
 114:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 3443              		.loc 2 114 14 view .LVU1147
 3444 00c6 9A80     		strh	r2, [r3, #4]	@ movhi
 115:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 3445              		.loc 2 115 5 is_stmt 1 view .LVU1148
 115:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 3446              		.loc 2 115 19 is_stmt 0 view .LVU1149
 3447 00c8 BDF90620 		ldrsh	r2, [sp, #6]
 115:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 3448              		.loc 2 115 14 view .LVU1150
 3449 00cc DA80     		strh	r2, [r3, #6]	@ movhi
 3450              	.LVL308:
 3451              	.L219:
 115:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 3452              		.loc 2 115 14 view .LVU1151
 3453              	.LBE107:
 3454              	.LBE106:
 247:lvgl/src/core/lv_refr.c ****     if(disp->refr_timer) lv_timer_resume(disp->refr_timer);
 3455              		.loc 1 247 5 is_stmt 1 view .LVU1152
 247:lvgl/src/core/lv_refr.c ****     if(disp->refr_timer) lv_timer_resume(disp->refr_timer);
 3456              		.loc 1 247 9 is_stmt 0 view .LVU1153
 3457 00ce B5F85031 		ldrh	r3, [r5, #336]
 247:lvgl/src/core/lv_refr.c ****     if(disp->refr_timer) lv_timer_resume(disp->refr_timer);
 3458              		.loc 1 247 16 view .LVU1154
 3459 00d2 0133     		adds	r3, r3, #1
 3460 00d4 A5F85031 		strh	r3, [r5, #336]	@ movhi
 248:lvgl/src/core/lv_refr.c **** }
 3461              		.loc 1 248 5 is_stmt 1 view .LVU1155
 248:lvgl/src/core/lv_refr.c **** }
 3462              		.loc 1 248 12 is_stmt 0 view .LVU1156
 3463 00d8 6868     		ldr	r0, [r5, #4]
 248:lvgl/src/core/lv_refr.c **** }
 3464              		.loc 1 248 7 view .LVU1157
 3465 00da 0028     		cmp	r0, #0
 3466 00dc C3D0     		beq	.L209
 248:lvgl/src/core/lv_refr.c **** }
 3467              		.loc 1 248 26 is_stmt 1 discriminator 1 view .LVU1158
 3468 00de FFF7FEFF 		bl	lv_timer_resume
 3469              	.LVL309:
 3470 00e2 C0E7     		b	.L209
 3471              	.L218:
 244:lvgl/src/core/lv_refr.c ****         lv_area_copy(&disp->inv_areas[disp->inv_p], &scr_area);
 3472              		.loc 1 244 9 view .LVU1159
ARM GAS  C:\usertemp\ccxmAei4.s 			page 102


 244:lvgl/src/core/lv_refr.c ****         lv_area_copy(&disp->inv_areas[disp->inv_p], &scr_area);
 3473              		.loc 1 244 21 is_stmt 0 view .LVU1160
 3474 00e4 0023     		movs	r3, #0
 3475 00e6 A5F85031 		strh	r3, [r5, #336]	@ movhi
 245:lvgl/src/core/lv_refr.c ****     }
 3476              		.loc 1 245 9 is_stmt 1 view .LVU1161
 3477              	.LVL310:
 3478              	.LBB108:
 3479              	.LBI108:
 110:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 3480              		.loc 2 110 20 view .LVU1162
 3481              	.LBB109:
 112:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 3482              		.loc 2 112 5 view .LVU1163
 112:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 3483              		.loc 2 112 19 is_stmt 0 view .LVU1164
 3484 00ea BDF90830 		ldrsh	r3, [sp, #8]
 112:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 3485              		.loc 2 112 14 view .LVU1165
 3486 00ee 2B86     		strh	r3, [r5, #48]	@ movhi
 113:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 3487              		.loc 2 113 5 is_stmt 1 view .LVU1166
 113:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 3488              		.loc 2 113 19 is_stmt 0 view .LVU1167
 3489 00f0 BDF90A30 		ldrsh	r3, [sp, #10]
 113:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 3490              		.loc 2 113 14 view .LVU1168
 3491 00f4 6B86     		strh	r3, [r5, #50]	@ movhi
 114:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 3492              		.loc 2 114 5 is_stmt 1 view .LVU1169
 114:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 3493              		.loc 2 114 19 is_stmt 0 view .LVU1170
 3494 00f6 BDF90C30 		ldrsh	r3, [sp, #12]
 114:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 3495              		.loc 2 114 14 view .LVU1171
 3496 00fa AB86     		strh	r3, [r5, #52]	@ movhi
 115:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 3497              		.loc 2 115 5 is_stmt 1 view .LVU1172
 115:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 3498              		.loc 2 115 19 is_stmt 0 view .LVU1173
 3499 00fc BDF90E30 		ldrsh	r3, [sp, #14]
 115:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 3500              		.loc 2 115 14 view .LVU1174
 3501 0100 EB86     		strh	r3, [r5, #54]	@ movhi
 3502              	.LVL311:
 116:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
 3503              		.loc 2 116 1 view .LVU1175
 3504 0102 E4E7     		b	.L219
 3505              	.LBE109:
 3506              	.LBE108:
 3507              		.cfi_endproc
 3508              	.LFE165:
 3510              		.section	.text._lv_refr_get_disp_refreshing,"ax",%progbits
 3511              		.align	1
 3512              		.global	_lv_refr_get_disp_refreshing
 3513              		.syntax unified
 3514              		.thumb
ARM GAS  C:\usertemp\ccxmAei4.s 			page 103


 3515              		.thumb_func
 3517              	_lv_refr_get_disp_refreshing:
 3518              	.LFB166:
 256:lvgl/src/core/lv_refr.c ****     return disp_refr;
 3519              		.loc 1 256 1 is_stmt 1 view -0
 3520              		.cfi_startproc
 3521              		@ args = 0, pretend = 0, frame = 0
 3522              		@ frame_needed = 0, uses_anonymous_args = 0
 3523              		@ link register save eliminated.
 257:lvgl/src/core/lv_refr.c **** }
 3524              		.loc 1 257 5 view .LVU1177
 258:lvgl/src/core/lv_refr.c **** 
 3525              		.loc 1 258 1 is_stmt 0 view .LVU1178
 3526 0000 014B     		ldr	r3, .L229
 3527 0002 1868     		ldr	r0, [r3]
 3528 0004 7047     		bx	lr
 3529              	.L230:
 3530 0006 00BF     		.align	2
 3531              	.L229:
 3532 0008 00000000 		.word	disp_refr
 3533              		.cfi_endproc
 3534              	.LFE166:
 3536              		.section	.text._lv_refr_set_disp_refreshing,"ax",%progbits
 3537              		.align	1
 3538              		.global	_lv_refr_set_disp_refreshing
 3539              		.syntax unified
 3540              		.thumb
 3541              		.thumb_func
 3543              	_lv_refr_set_disp_refreshing:
 3544              	.LVL312:
 3545              	.LFB167:
 267:lvgl/src/core/lv_refr.c ****     disp_refr = disp;
 3546              		.loc 1 267 1 is_stmt 1 view -0
 3547              		.cfi_startproc
 3548              		@ args = 0, pretend = 0, frame = 0
 3549              		@ frame_needed = 0, uses_anonymous_args = 0
 3550              		@ link register save eliminated.
 268:lvgl/src/core/lv_refr.c **** }
 3551              		.loc 1 268 5 view .LVU1180
 268:lvgl/src/core/lv_refr.c **** }
 3552              		.loc 1 268 15 is_stmt 0 view .LVU1181
 3553 0000 014B     		ldr	r3, .L232
 3554 0002 1860     		str	r0, [r3]
 269:lvgl/src/core/lv_refr.c **** 
 3555              		.loc 1 269 1 view .LVU1182
 3556 0004 7047     		bx	lr
 3557              	.L233:
 3558 0006 00BF     		.align	2
 3559              	.L232:
 3560 0008 00000000 		.word	disp_refr
 3561              		.cfi_endproc
 3562              	.LFE167:
 3564              		.section	.rodata._lv_disp_refr_timer.str1.4,"aMS",%progbits,1
 3565              		.align	2
 3566              	.LC0:
 3567 0000 3F00     		.ascii	"?\000"
 3568 0002 0000     		.align	2
ARM GAS  C:\usertemp\ccxmAei4.s 			page 104


 3569              	.LC1:
 3570 0004 256C7520 		.ascii	"%lu FPS\012%lu%% CPU\000"
 3570      4650530A 
 3570      256C7525 
 3570      25204350 
 3570      5500
 3571 0016 0000     		.align	2
 3572              	.LC2:
 3573 0018 256C752E 		.ascii	"%lu.%lu kB used (%d %%)\012%d%% frag.\000"
 3573      256C7520 
 3573      6B422075 
 3573      73656420 
 3573      28256420 
 3574              		.section	.text._lv_disp_refr_timer,"ax",%progbits
 3575              		.align	1
 3576              		.global	_lv_disp_refr_timer
 3577              		.syntax unified
 3578              		.thumb
 3579              		.thumb_func
 3581              	_lv_disp_refr_timer:
 3582              	.LVL313:
 3583              	.LFB168:
 276:lvgl/src/core/lv_refr.c ****     REFR_TRACE("begin");
 3584              		.loc 1 276 1 is_stmt 1 view -0
 3585              		.cfi_startproc
 3586              		@ args = 0, pretend = 0, frame = 32
 3587              		@ frame_needed = 0, uses_anonymous_args = 0
 276:lvgl/src/core/lv_refr.c ****     REFR_TRACE("begin");
 3588              		.loc 1 276 1 is_stmt 0 view .LVU1184
 3589 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3590              	.LCFI42:
 3591              		.cfi_def_cfa_offset 20
 3592              		.cfi_offset 4, -20
 3593              		.cfi_offset 5, -16
 3594              		.cfi_offset 6, -12
 3595              		.cfi_offset 7, -8
 3596              		.cfi_offset 14, -4
 3597 0002 8BB0     		sub	sp, sp, #44
 3598              	.LCFI43:
 3599              		.cfi_def_cfa_offset 64
 3600 0004 0446     		mov	r4, r0
 277:lvgl/src/core/lv_refr.c **** 
 3601              		.loc 1 277 5 is_stmt 1 view .LVU1185
 277:lvgl/src/core/lv_refr.c **** 
 3602              		.loc 1 277 5 view .LVU1186
 277:lvgl/src/core/lv_refr.c **** 
 3603              		.loc 1 277 5 view .LVU1187
 279:lvgl/src/core/lv_refr.c ****     volatile uint32_t elaps = 0;
 3604              		.loc 1 279 5 view .LVU1188
 279:lvgl/src/core/lv_refr.c ****     volatile uint32_t elaps = 0;
 3605              		.loc 1 279 22 is_stmt 0 view .LVU1189
 3606 0006 FFF7FEFF 		bl	lv_tick_get
 3607              	.LVL314:
 279:lvgl/src/core/lv_refr.c ****     volatile uint32_t elaps = 0;
 3608              		.loc 1 279 22 view .LVU1190
 3609 000a 0546     		mov	r5, r0
 3610              	.LVL315:
ARM GAS  C:\usertemp\ccxmAei4.s 			page 105


 280:lvgl/src/core/lv_refr.c **** 
 3611              		.loc 1 280 5 is_stmt 1 view .LVU1191
 280:lvgl/src/core/lv_refr.c **** 
 3612              		.loc 1 280 23 is_stmt 0 view .LVU1192
 3613 000c 0023     		movs	r3, #0
 3614 000e 0993     		str	r3, [sp, #36]
 282:lvgl/src/core/lv_refr.c ****         disp_refr = tmr->user_data;
 3615              		.loc 1 282 5 is_stmt 1 view .LVU1193
 282:lvgl/src/core/lv_refr.c ****         disp_refr = tmr->user_data;
 3616              		.loc 1 282 7 is_stmt 0 view .LVU1194
 3617 0010 002C     		cmp	r4, #0
 3618 0012 73D0     		beq	.L235
 283:lvgl/src/core/lv_refr.c **** #if LV_USE_PERF_MONITOR == 0 && LV_USE_MEM_MONITOR == 0
 3619              		.loc 1 283 9 is_stmt 1 view .LVU1195
 283:lvgl/src/core/lv_refr.c **** #if LV_USE_PERF_MONITOR == 0 && LV_USE_MEM_MONITOR == 0
 3620              		.loc 1 283 24 is_stmt 0 view .LVU1196
 3621 0014 E268     		ldr	r2, [r4, #12]
 283:lvgl/src/core/lv_refr.c **** #if LV_USE_PERF_MONITOR == 0 && LV_USE_MEM_MONITOR == 0
 3622              		.loc 1 283 19 view .LVU1197
 3623 0016 B24B     		ldr	r3, .L256
 3624 0018 1A60     		str	r2, [r3]
 3625              	.LVL316:
 3626              	.L236:
 297:lvgl/src/core/lv_refr.c ****     if(disp_refr->prev_scr) lv_obj_update_layout(disp_refr->prev_scr);
 3627              		.loc 1 297 5 is_stmt 1 view .LVU1198
 297:lvgl/src/core/lv_refr.c ****     if(disp_refr->prev_scr) lv_obj_update_layout(disp_refr->prev_scr);
 3628              		.loc 1 297 35 is_stmt 0 view .LVU1199
 3629 001a B14C     		ldr	r4, .L256
 3630              	.LVL317:
 297:lvgl/src/core/lv_refr.c ****     if(disp_refr->prev_scr) lv_obj_update_layout(disp_refr->prev_scr);
 3631              		.loc 1 297 35 view .LVU1200
 3632 001c 2368     		ldr	r3, [r4]
 297:lvgl/src/core/lv_refr.c ****     if(disp_refr->prev_scr) lv_obj_update_layout(disp_refr->prev_scr);
 3633              		.loc 1 297 5 view .LVU1201
 3634 001e 1869     		ldr	r0, [r3, #16]
 3635 0020 FFF7FEFF 		bl	lv_obj_update_layout
 3636              	.LVL318:
 298:lvgl/src/core/lv_refr.c **** 
 3637              		.loc 1 298 5 is_stmt 1 view .LVU1202
 298:lvgl/src/core/lv_refr.c **** 
 3638              		.loc 1 298 17 is_stmt 0 view .LVU1203
 3639 0024 2368     		ldr	r3, [r4]
 3640 0026 5869     		ldr	r0, [r3, #20]
 298:lvgl/src/core/lv_refr.c **** 
 3641              		.loc 1 298 7 view .LVU1204
 3642 0028 08B1     		cbz	r0, .L237
 298:lvgl/src/core/lv_refr.c **** 
 3643              		.loc 1 298 29 is_stmt 1 discriminator 1 view .LVU1205
 3644 002a FFF7FEFF 		bl	lv_obj_update_layout
 3645              	.LVL319:
 3646              	.L237:
 300:lvgl/src/core/lv_refr.c ****     lv_obj_update_layout(disp_refr->sys_layer);
 3647              		.loc 1 300 5 view .LVU1206
 300:lvgl/src/core/lv_refr.c ****     lv_obj_update_layout(disp_refr->sys_layer);
 3648              		.loc 1 300 35 is_stmt 0 view .LVU1207
 3649 002e AC4C     		ldr	r4, .L256
 3650 0030 2368     		ldr	r3, [r4]
ARM GAS  C:\usertemp\ccxmAei4.s 			page 106


 300:lvgl/src/core/lv_refr.c ****     lv_obj_update_layout(disp_refr->sys_layer);
 3651              		.loc 1 300 5 view .LVU1208
 3652 0032 D869     		ldr	r0, [r3, #28]
 3653 0034 FFF7FEFF 		bl	lv_obj_update_layout
 3654              	.LVL320:
 301:lvgl/src/core/lv_refr.c **** 
 3655              		.loc 1 301 5 is_stmt 1 view .LVU1209
 301:lvgl/src/core/lv_refr.c **** 
 3656              		.loc 1 301 35 is_stmt 0 view .LVU1210
 3657 0038 2368     		ldr	r3, [r4]
 301:lvgl/src/core/lv_refr.c **** 
 3658              		.loc 1 301 5 view .LVU1211
 3659 003a 186A     		ldr	r0, [r3, #32]
 3660 003c FFF7FEFF 		bl	lv_obj_update_layout
 3661              	.LVL321:
 304:lvgl/src/core/lv_refr.c ****         disp_refr->inv_p = 0;
 3662              		.loc 1 304 5 is_stmt 1 view .LVU1212
 304:lvgl/src/core/lv_refr.c ****         disp_refr->inv_p = 0;
 3663              		.loc 1 304 17 is_stmt 0 view .LVU1213
 3664 0040 2368     		ldr	r3, [r4]
 3665 0042 1A69     		ldr	r2, [r3, #16]
 304:lvgl/src/core/lv_refr.c ****         disp_refr->inv_p = 0;
 3666              		.loc 1 304 7 view .LVU1214
 3667 0044 002A     		cmp	r2, #0
 3668 0046 5ED0     		beq	.L251
 311:lvgl/src/core/lv_refr.c **** 
 3669              		.loc 1 311 5 is_stmt 1 view .LVU1215
 3670 0048 FFF7FEFF 		bl	lv_refr_join_area
 3671              	.LVL322:
 313:lvgl/src/core/lv_refr.c **** 
 3672              		.loc 1 313 5 view .LVU1216
 3673 004c FFF7FEFF 		bl	lv_refr_areas
 3674              	.LVL323:
 316:lvgl/src/core/lv_refr.c ****         if(disp_refr->driver->full_refresh) {
 3675              		.loc 1 316 5 view .LVU1217
 316:lvgl/src/core/lv_refr.c ****         if(disp_refr->driver->full_refresh) {
 3676              		.loc 1 316 17 is_stmt 0 view .LVU1218
 3677 0050 A34B     		ldr	r3, .L256
 3678 0052 1868     		ldr	r0, [r3]
 3679 0054 B0F85031 		ldrh	r3, [r0, #336]
 316:lvgl/src/core/lv_refr.c ****         if(disp_refr->driver->full_refresh) {
 3680              		.loc 1 316 7 view .LVU1219
 3681 0058 0BB3     		cbz	r3, .L240
 317:lvgl/src/core/lv_refr.c ****             lv_area_t disp_area;
 3682              		.loc 1 317 9 is_stmt 1 view .LVU1220
 317:lvgl/src/core/lv_refr.c ****             lv_area_t disp_area;
 3683              		.loc 1 317 21 is_stmt 0 view .LVU1221
 3684 005a 0368     		ldr	r3, [r0]
 317:lvgl/src/core/lv_refr.c ****             lv_area_t disp_area;
 3685              		.loc 1 317 12 view .LVU1222
 3686 005c 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 317:lvgl/src/core/lv_refr.c ****             lv_area_t disp_area;
 3687              		.loc 1 317 11 view .LVU1223
 3688 005e 13F0020F 		tst	r3, #2
 3689 0062 53D1     		bne	.L252
 3690              	.L241:
 325:lvgl/src/core/lv_refr.c ****         lv_memset_00(disp_refr->inv_area_joined, sizeof(disp_refr->inv_area_joined));
ARM GAS  C:\usertemp\ccxmAei4.s 			page 107


 3691              		.loc 1 325 9 is_stmt 1 view .LVU1224
 325:lvgl/src/core/lv_refr.c ****         lv_memset_00(disp_refr->inv_area_joined, sizeof(disp_refr->inv_area_joined));
 3692              		.loc 1 325 31 is_stmt 0 view .LVU1225
 3693 0064 9E4C     		ldr	r4, .L256
 3694 0066 2068     		ldr	r0, [r4]
 325:lvgl/src/core/lv_refr.c ****         lv_memset_00(disp_refr->inv_area_joined, sizeof(disp_refr->inv_area_joined));
 3695              		.loc 1 325 9 view .LVU1226
 3696 0068 4FF48071 		mov	r1, #256
 3697 006c 3030     		adds	r0, r0, #48
 3698 006e FFF7FEFF 		bl	lv_memset_00
 3699              	.LVL324:
 326:lvgl/src/core/lv_refr.c ****         disp_refr->inv_p = 0;
 3700              		.loc 1 326 9 is_stmt 1 view .LVU1227
 326:lvgl/src/core/lv_refr.c ****         disp_refr->inv_p = 0;
 3701              		.loc 1 326 31 is_stmt 0 view .LVU1228
 3702 0072 2068     		ldr	r0, [r4]
 326:lvgl/src/core/lv_refr.c ****         disp_refr->inv_p = 0;
 3703              		.loc 1 326 9 view .LVU1229
 3704 0074 2021     		movs	r1, #32
 3705 0076 00F59870 		add	r0, r0, #304
 3706 007a FFF7FEFF 		bl	lv_memset_00
 3707              	.LVL325:
 327:lvgl/src/core/lv_refr.c **** 
 3708              		.loc 1 327 9 is_stmt 1 view .LVU1230
 327:lvgl/src/core/lv_refr.c **** 
 3709              		.loc 1 327 18 is_stmt 0 view .LVU1231
 3710 007e 2368     		ldr	r3, [r4]
 327:lvgl/src/core/lv_refr.c **** 
 3711              		.loc 1 327 26 view .LVU1232
 3712 0080 0022     		movs	r2, #0
 3713 0082 A3F85021 		strh	r2, [r3, #336]	@ movhi
 329:lvgl/src/core/lv_refr.c ****         /*Call monitor cb if present*/
 3714              		.loc 1 329 9 is_stmt 1 view .LVU1233
 329:lvgl/src/core/lv_refr.c ****         /*Call monitor cb if present*/
 3715              		.loc 1 329 17 is_stmt 0 view .LVU1234
 3716 0086 2846     		mov	r0, r5
 3717 0088 FFF7FEFF 		bl	lv_tick_elaps
 3718              	.LVL326:
 329:lvgl/src/core/lv_refr.c ****         /*Call monitor cb if present*/
 3719              		.loc 1 329 15 discriminator 1 view .LVU1235
 3720 008c 0990     		str	r0, [sp, #36]
 331:lvgl/src/core/lv_refr.c ****             disp_refr->driver->monitor_cb(disp_refr->driver, elaps, px_num);
 3721              		.loc 1 331 9 is_stmt 1 view .LVU1236
 331:lvgl/src/core/lv_refr.c ****             disp_refr->driver->monitor_cb(disp_refr->driver, elaps, px_num);
 3722              		.loc 1 331 21 is_stmt 0 view .LVU1237
 3723 008e 2368     		ldr	r3, [r4]
 3724 0090 1868     		ldr	r0, [r3]
 331:lvgl/src/core/lv_refr.c ****             disp_refr->driver->monitor_cb(disp_refr->driver, elaps, px_num);
 3725              		.loc 1 331 29 view .LVU1238
 3726 0092 436A     		ldr	r3, [r0, #36]
 331:lvgl/src/core/lv_refr.c ****             disp_refr->driver->monitor_cb(disp_refr->driver, elaps, px_num);
 3727              		.loc 1 331 11 view .LVU1239
 3728 0094 1BB1     		cbz	r3, .L240
 332:lvgl/src/core/lv_refr.c ****         }
 3729              		.loc 1 332 13 is_stmt 1 view .LVU1240
 3730 0096 0999     		ldr	r1, [sp, #36]
 3731 0098 924A     		ldr	r2, .L256+4
ARM GAS  C:\usertemp\ccxmAei4.s 			page 108


 3732 009a 1268     		ldr	r2, [r2]
 3733 009c 9847     		blx	r3
 3734              	.LVL327:
 3735              	.L240:
 336:lvgl/src/core/lv_refr.c ****     _lv_font_clean_up_fmt_txt();
 3736              		.loc 1 336 5 view .LVU1241
 3737 009e FFF7FEFF 		bl	lv_mem_buf_free_all
 3738              	.LVL328:
 337:lvgl/src/core/lv_refr.c **** 
 3739              		.loc 1 337 5 view .LVU1242
 3740 00a2 FFF7FEFF 		bl	_lv_font_clean_up_fmt_txt
 3741              	.LVL329:
 340:lvgl/src/core/lv_refr.c **** #endif
 3742              		.loc 1 340 5 view .LVU1243
 3743 00a6 FFF7FEFF 		bl	_lv_draw_mask_cleanup
 3744              	.LVL330:
 344:lvgl/src/core/lv_refr.c ****     if(perf_label == NULL) {
 3745              		.loc 1 344 5 view .LVU1244
 344:lvgl/src/core/lv_refr.c ****     if(perf_label == NULL) {
 3746              		.loc 1 344 16 is_stmt 0 view .LVU1245
 3747 00aa 8F4B     		ldr	r3, .L256+8
 3748 00ac 5C69     		ldr	r4, [r3, #20]
 3749              	.LVL331:
 345:lvgl/src/core/lv_refr.c ****         perf_label = lv_label_create(lv_layer_sys());
 3750              		.loc 1 345 5 is_stmt 1 view .LVU1246
 345:lvgl/src/core/lv_refr.c ****         perf_label = lv_label_create(lv_layer_sys());
 3751              		.loc 1 345 7 is_stmt 0 view .LVU1247
 3752 00ae 002C     		cmp	r4, #0
 3753 00b0 47D0     		beq	.L253
 3754              	.L242:
 360:lvgl/src/core/lv_refr.c ****         if(px_num > 5000) {
 3755              		.loc 1 360 5 is_stmt 1 view .LVU1248
 360:lvgl/src/core/lv_refr.c ****         if(px_num > 5000) {
 3756              		.loc 1 360 8 is_stmt 0 view .LVU1249
 3757 00b2 8D4B     		ldr	r3, .L256+8
 3758 00b4 1868     		ldr	r0, [r3]
 3759 00b6 FFF7FEFF 		bl	lv_tick_elaps
 3760              	.LVL332:
 360:lvgl/src/core/lv_refr.c ****         if(px_num > 5000) {
 3761              		.loc 1 360 7 discriminator 1 view .LVU1250
 3762 00ba B0F5967F 		cmp	r0, #300
 3763 00be 80F08180 		bcs	.L243
 361:lvgl/src/core/lv_refr.c ****             perf_monitor.elaps_sum += elaps;
 3764              		.loc 1 361 9 is_stmt 1 view .LVU1251
 361:lvgl/src/core/lv_refr.c ****             perf_monitor.elaps_sum += elaps;
 3765              		.loc 1 361 19 is_stmt 0 view .LVU1252
 3766 00c2 884B     		ldr	r3, .L256+4
 3767 00c4 1A68     		ldr	r2, [r3]
 361:lvgl/src/core/lv_refr.c ****             perf_monitor.elaps_sum += elaps;
 3768              		.loc 1 361 11 view .LVU1253
 3769 00c6 41F28833 		movw	r3, #5000
 3770 00ca 9A42     		cmp	r2, r3
 3771 00cc 07D9     		bls	.L244
 362:lvgl/src/core/lv_refr.c ****             perf_monitor.frame_cnt ++;
 3772              		.loc 1 362 13 is_stmt 1 view .LVU1254
 3773 00ce 0999     		ldr	r1, [sp, #36]
 362:lvgl/src/core/lv_refr.c ****             perf_monitor.frame_cnt ++;
ARM GAS  C:\usertemp\ccxmAei4.s 			page 109


 3774              		.loc 1 362 25 is_stmt 0 view .LVU1255
 3775 00d0 854B     		ldr	r3, .L256+8
 3776 00d2 5A68     		ldr	r2, [r3, #4]
 362:lvgl/src/core/lv_refr.c ****             perf_monitor.frame_cnt ++;
 3777              		.loc 1 362 36 view .LVU1256
 3778 00d4 0A44     		add	r2, r2, r1
 3779 00d6 5A60     		str	r2, [r3, #4]
 363:lvgl/src/core/lv_refr.c ****         }
 3780              		.loc 1 363 13 is_stmt 1 view .LVU1257
 363:lvgl/src/core/lv_refr.c ****         }
 3781              		.loc 1 363 25 is_stmt 0 view .LVU1258
 3782 00d8 9A68     		ldr	r2, [r3, #8]
 363:lvgl/src/core/lv_refr.c ****         }
 3783              		.loc 1 363 36 view .LVU1259
 3784 00da 0132     		adds	r2, r2, #1
 3785 00dc 9A60     		str	r2, [r3, #8]
 3786              	.LVL333:
 3787              	.L244:
 394:lvgl/src/core/lv_refr.c ****     if(mem_label == NULL) {
 3788              		.loc 1 394 5 is_stmt 1 view .LVU1260
 394:lvgl/src/core/lv_refr.c ****     if(mem_label == NULL) {
 3789              		.loc 1 394 16 is_stmt 0 view .LVU1261
 3790 00de 834B     		ldr	r3, .L256+12
 3791 00e0 5C68     		ldr	r4, [r3, #4]
 3792              	.LVL334:
 395:lvgl/src/core/lv_refr.c ****         mem_label = lv_label_create(lv_layer_sys());
 3793              		.loc 1 395 5 is_stmt 1 view .LVU1262
 395:lvgl/src/core/lv_refr.c ****         mem_label = lv_label_create(lv_layer_sys());
 3794              		.loc 1 395 7 is_stmt 0 view .LVU1263
 3795 00e2 002C     		cmp	r4, #0
 3796 00e4 00F0A480 		beq	.L254
 3797              	.L248:
 409:lvgl/src/core/lv_refr.c ****         mem_monitor.mem_last_time = lv_tick_get();
 3798              		.loc 1 409 5 is_stmt 1 view .LVU1264
 409:lvgl/src/core/lv_refr.c ****         mem_monitor.mem_last_time = lv_tick_get();
 3799              		.loc 1 409 8 is_stmt 0 view .LVU1265
 3800 00e8 804B     		ldr	r3, .L256+12
 3801 00ea 1868     		ldr	r0, [r3]
 3802 00ec FFF7FEFF 		bl	lv_tick_elaps
 3803              	.LVL335:
 409:lvgl/src/core/lv_refr.c ****         mem_monitor.mem_last_time = lv_tick_get();
 3804              		.loc 1 409 7 discriminator 1 view .LVU1266
 3805 00f0 B0F5967F 		cmp	r0, #300
 3806 00f4 00F2D880 		bhi	.L255
 3807              	.LVL336:
 3808              	.L234:
 423:lvgl/src/core/lv_refr.c **** 
 3809              		.loc 1 423 1 view .LVU1267
 3810 00f8 0BB0     		add	sp, sp, #44
 3811              	.LCFI44:
 3812              		.cfi_remember_state
 3813              		.cfi_def_cfa_offset 20
 3814              		@ sp needed
 3815 00fa F0BD     		pop	{r4, r5, r6, r7, pc}
 3816              	.LVL337:
 3817              	.L235:
 3818              	.LCFI45:
ARM GAS  C:\usertemp\ccxmAei4.s 			page 110


 3819              		.cfi_restore_state
 293:lvgl/src/core/lv_refr.c ****     }
 3820              		.loc 1 293 9 is_stmt 1 view .LVU1268
 293:lvgl/src/core/lv_refr.c ****     }
 3821              		.loc 1 293 21 is_stmt 0 view .LVU1269
 3822 00fc FFF7FEFF 		bl	lv_disp_get_default
 3823              	.LVL338:
 293:lvgl/src/core/lv_refr.c ****     }
 3824              		.loc 1 293 19 discriminator 1 view .LVU1270
 3825 0100 774B     		ldr	r3, .L256
 3826 0102 1860     		str	r0, [r3]
 3827 0104 89E7     		b	.L236
 3828              	.LVL339:
 3829              	.L251:
 305:lvgl/src/core/lv_refr.c ****         LV_LOG_WARN("there is no active screen");
 3830              		.loc 1 305 9 is_stmt 1 view .LVU1271
 305:lvgl/src/core/lv_refr.c ****         LV_LOG_WARN("there is no active screen");
 3831              		.loc 1 305 26 is_stmt 0 view .LVU1272
 3832 0106 A3F85021 		strh	r2, [r3, #336]	@ movhi
 306:lvgl/src/core/lv_refr.c ****         REFR_TRACE("finished");
 3833              		.loc 1 306 9 is_stmt 1 view .LVU1273
 306:lvgl/src/core/lv_refr.c ****         REFR_TRACE("finished");
 3834              		.loc 1 306 9 view .LVU1274
 306:lvgl/src/core/lv_refr.c ****         REFR_TRACE("finished");
 3835              		.loc 1 306 9 view .LVU1275
 307:lvgl/src/core/lv_refr.c ****         return;
 3836              		.loc 1 307 9 view .LVU1276
 307:lvgl/src/core/lv_refr.c ****         return;
 3837              		.loc 1 307 9 view .LVU1277
 307:lvgl/src/core/lv_refr.c ****         return;
 3838              		.loc 1 307 9 view .LVU1278
 308:lvgl/src/core/lv_refr.c ****     }
 3839              		.loc 1 308 9 view .LVU1279
 3840 010a F5E7     		b	.L234
 3841              	.L252:
 3842              	.LBB110:
 318:lvgl/src/core/lv_refr.c ****             lv_area_set(&disp_area, 0, 0, lv_disp_get_hor_res(disp_refr) - 1, lv_disp_get_ver_res(d
 3843              		.loc 1 318 13 view .LVU1280
 319:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_ctx->buf_area = &disp_area;
 3844              		.loc 1 319 13 view .LVU1281
 319:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_ctx->buf_area = &disp_area;
 3845              		.loc 1 319 43 is_stmt 0 view .LVU1282
 3846 010c FFF7FEFF 		bl	lv_disp_get_hor_res
 3847              	.LVL340:
 319:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_ctx->buf_area = &disp_area;
 3848              		.loc 1 319 43 discriminator 1 view .LVU1283
 3849 0110 84B2     		uxth	r4, r0
 319:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_ctx->buf_area = &disp_area;
 3850              		.loc 1 319 74 discriminator 1 view .LVU1284
 3851 0112 013C     		subs	r4, r4, #1
 3852 0114 A4B2     		uxth	r4, r4
 319:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_ctx->buf_area = &disp_area;
 3853              		.loc 1 319 79 discriminator 1 view .LVU1285
 3854 0116 724F     		ldr	r7, .L256
 3855 0118 3868     		ldr	r0, [r7]
 3856 011a FFF7FEFF 		bl	lv_disp_get_ver_res
 3857              	.LVL341:
ARM GAS  C:\usertemp\ccxmAei4.s 			page 111


 319:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_ctx->buf_area = &disp_area;
 3858              		.loc 1 319 79 discriminator 2 view .LVU1286
 3859 011e 83B2     		uxth	r3, r0
 319:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_ctx->buf_area = &disp_area;
 3860              		.loc 1 319 110 discriminator 2 view .LVU1287
 3861 0120 013B     		subs	r3, r3, #1
 319:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_ctx->buf_area = &disp_area;
 3862              		.loc 1 319 13 discriminator 2 view .LVU1288
 3863 0122 02AE     		add	r6, sp, #8
 3864 0124 1BB2     		sxth	r3, r3
 3865 0126 0093     		str	r3, [sp]
 3866 0128 23B2     		sxth	r3, r4
 3867 012a 0022     		movs	r2, #0
 3868 012c 1146     		mov	r1, r2
 3869 012e 3046     		mov	r0, r6
 3870 0130 FFF7FEFF 		bl	lv_area_set
 3871              	.LVL342:
 320:lvgl/src/core/lv_refr.c ****             draw_buf_flush(disp_refr);
 3872              		.loc 1 320 13 is_stmt 1 view .LVU1289
 320:lvgl/src/core/lv_refr.c ****             draw_buf_flush(disp_refr);
 3873              		.loc 1 320 22 is_stmt 0 view .LVU1290
 3874 0134 3868     		ldr	r0, [r7]
 3875 0136 0368     		ldr	r3, [r0]
 320:lvgl/src/core/lv_refr.c ****             draw_buf_flush(disp_refr);
 3876              		.loc 1 320 30 view .LVU1291
 3877 0138 9B6B     		ldr	r3, [r3, #56]
 320:lvgl/src/core/lv_refr.c ****             draw_buf_flush(disp_refr);
 3878              		.loc 1 320 51 view .LVU1292
 3879 013a 5E60     		str	r6, [r3, #4]
 321:lvgl/src/core/lv_refr.c ****         }
 3880              		.loc 1 321 13 is_stmt 1 view .LVU1293
 3881 013c FFF7FEFF 		bl	draw_buf_flush
 3882              	.LVL343:
 3883 0140 90E7     		b	.L241
 3884              	.LVL344:
 3885              	.L253:
 321:lvgl/src/core/lv_refr.c ****         }
 3886              		.loc 1 321 13 is_stmt 0 view .LVU1294
 3887              	.LBE110:
 346:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_bg_opa(perf_label, LV_OPA_50, 0);
 3888              		.loc 1 346 9 is_stmt 1 view .LVU1295
 346:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_bg_opa(perf_label, LV_OPA_50, 0);
 3889              		.loc 1 346 22 is_stmt 0 view .LVU1296
 3890 0142 FFF7FEFF 		bl	lv_layer_sys
 3891              	.LVL345:
 346:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_bg_opa(perf_label, LV_OPA_50, 0);
 3892              		.loc 1 346 22 discriminator 1 view .LVU1297
 3893 0146 FFF7FEFF 		bl	lv_label_create
 3894              	.LVL346:
 3895 014a 0446     		mov	r4, r0
 3896              	.LVL347:
 347:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_bg_color(perf_label, lv_color_black(), 0);
 3897              		.loc 1 347 9 is_stmt 1 view .LVU1298
 3898 014c 0022     		movs	r2, #0
 3899 014e 7F21     		movs	r1, #127
 3900 0150 FFF7FEFF 		bl	lv_obj_set_style_bg_opa
 3901              	.LVL348:
ARM GAS  C:\usertemp\ccxmAei4.s 			page 112


 348:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_text_color(perf_label, lv_color_white(), 0);
 3902              		.loc 1 348 9 view .LVU1299
 3903              	.LBB111:
 3904              	.LBI111:
 3905              		.file 4 "lvgl/src/core/../misc/lv_color.h"
   1:lvgl/src/core/../misc/lv_color.h **** /**
   2:lvgl/src/core/../misc/lv_color.h ****  * @file lv_color.h
   3:lvgl/src/core/../misc/lv_color.h ****  *
   4:lvgl/src/core/../misc/lv_color.h ****  */
   5:lvgl/src/core/../misc/lv_color.h **** 
   6:lvgl/src/core/../misc/lv_color.h **** #ifndef LV_COLOR_H
   7:lvgl/src/core/../misc/lv_color.h **** #define LV_COLOR_H
   8:lvgl/src/core/../misc/lv_color.h **** 
   9:lvgl/src/core/../misc/lv_color.h **** #ifdef __cplusplus
  10:lvgl/src/core/../misc/lv_color.h **** extern "C" {
  11:lvgl/src/core/../misc/lv_color.h **** #endif
  12:lvgl/src/core/../misc/lv_color.h **** 
  13:lvgl/src/core/../misc/lv_color.h **** /*********************
  14:lvgl/src/core/../misc/lv_color.h ****  *      INCLUDES
  15:lvgl/src/core/../misc/lv_color.h ****  *********************/
  16:lvgl/src/core/../misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/core/../misc/lv_color.h **** #include "lv_assert.h"
  18:lvgl/src/core/../misc/lv_color.h **** #include "lv_math.h"
  19:lvgl/src/core/../misc/lv_color.h **** #include "lv_types.h"
  20:lvgl/src/core/../misc/lv_color.h **** 
  21:lvgl/src/core/../misc/lv_color.h **** /*Error checking*/
  22:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  23:lvgl/src/core/../misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  24:lvgl/src/core/../misc/lv_color.h **** #endif
  25:lvgl/src/core/../misc/lv_color.h **** 
  26:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 32 && LV_COLOR_SCREEN_TRANSP != 0
  27:lvgl/src/core/../misc/lv_color.h **** #error "LV_COLOR_SCREEN_TRANSP requires LV_COLOR_DEPTH == 32. Set it in lv_conf.h"
  28:lvgl/src/core/../misc/lv_color.h **** #endif
  29:lvgl/src/core/../misc/lv_color.h **** 
  30:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  31:lvgl/src/core/../misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  32:lvgl/src/core/../misc/lv_color.h **** #endif
  33:lvgl/src/core/../misc/lv_color.h **** 
  34:lvgl/src/core/../misc/lv_color.h **** #include <stdint.h>
  35:lvgl/src/core/../misc/lv_color.h **** 
  36:lvgl/src/core/../misc/lv_color.h **** /*********************
  37:lvgl/src/core/../misc/lv_color.h ****  *      DEFINES
  38:lvgl/src/core/../misc/lv_color.h ****  *********************/
  39:lvgl/src/core/../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_DEPTH);
  40:lvgl/src/core/../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_16_SWAP);
  41:lvgl/src/core/../misc/lv_color.h **** 
  42:lvgl/src/core/../misc/lv_color.h **** /**
  43:lvgl/src/core/../misc/lv_color.h ****  * Opacity percentages.
  44:lvgl/src/core/../misc/lv_color.h ****  */
  45:lvgl/src/core/../misc/lv_color.h **** enum {
  46:lvgl/src/core/../misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  47:lvgl/src/core/../misc/lv_color.h ****     LV_OPA_0      = 0,
  48:lvgl/src/core/../misc/lv_color.h ****     LV_OPA_10     = 25,
  49:lvgl/src/core/../misc/lv_color.h ****     LV_OPA_20     = 51,
  50:lvgl/src/core/../misc/lv_color.h ****     LV_OPA_30     = 76,
  51:lvgl/src/core/../misc/lv_color.h ****     LV_OPA_40     = 102,
  52:lvgl/src/core/../misc/lv_color.h ****     LV_OPA_50     = 127,
ARM GAS  C:\usertemp\ccxmAei4.s 			page 113


  53:lvgl/src/core/../misc/lv_color.h ****     LV_OPA_60     = 153,
  54:lvgl/src/core/../misc/lv_color.h ****     LV_OPA_70     = 178,
  55:lvgl/src/core/../misc/lv_color.h ****     LV_OPA_80     = 204,
  56:lvgl/src/core/../misc/lv_color.h ****     LV_OPA_90     = 229,
  57:lvgl/src/core/../misc/lv_color.h ****     LV_OPA_100    = 255,
  58:lvgl/src/core/../misc/lv_color.h ****     LV_OPA_COVER  = 255,
  59:lvgl/src/core/../misc/lv_color.h **** };
  60:lvgl/src/core/../misc/lv_color.h **** 
  61:lvgl/src/core/../misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  62:lvgl/src/core/../misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  63:lvgl/src/core/../misc/lv_color.h **** 
  64:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  65:lvgl/src/core/../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  66:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  67:lvgl/src/core/../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  68:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  69:lvgl/src/core/../misc/lv_color.h **** #define LV_COLOR_SIZE 16
  70:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
  71:lvgl/src/core/../misc/lv_color.h **** #define LV_COLOR_SIZE 32
  72:lvgl/src/core/../misc/lv_color.h **** #else
  73:lvgl/src/core/../misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  74:lvgl/src/core/../misc/lv_color.h **** #endif
  75:lvgl/src/core/../misc/lv_color.h **** 
  76:lvgl/src/core/../misc/lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  77:lvgl/src/core/../misc/lv_color.h **** /**
  78:lvgl/src/core/../misc/lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  79:lvgl/src/core/../misc/lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  80:lvgl/src/core/../misc/lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  81:lvgl/src/core/../misc/lv_color.h **** */
  82:lvgl/src/core/../misc/lv_color.h **** #ifdef _MSC_VER
  83:lvgl/src/core/../misc/lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  84:lvgl/src/core/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  85:lvgl/src/core/../misc/lv_color.h **** #endif
  86:lvgl/src/core/../misc/lv_color.h **** #else
  87:lvgl/src/core/../misc/lv_color.h **** #if __cplusplus >= 201103L
  88:lvgl/src/core/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  89:lvgl/src/core/../misc/lv_color.h **** #endif
  90:lvgl/src/core/../misc/lv_color.h **** #endif
  91:lvgl/src/core/../misc/lv_color.h **** #endif /*__cplusplus*/
  92:lvgl/src/core/../misc/lv_color.h **** 
  93:lvgl/src/core/../misc/lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
  94:lvgl/src/core/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
  95:lvgl/src/core/../misc/lv_color.h **** #endif
  96:lvgl/src/core/../misc/lv_color.h **** 
  97:lvgl/src/core/../misc/lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
  98:lvgl/src/core/../misc/lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
  99:lvgl/src/core/../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
 100:lvgl/src/core/../misc/lv_color.h **** #else
 101:lvgl/src/core/../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
 102:lvgl/src/core/../misc/lv_color.h **** #endif
 103:lvgl/src/core/../misc/lv_color.h **** 
 104:lvgl/src/core/../misc/lv_color.h **** /*---------------------------------------
 105:lvgl/src/core/../misc/lv_color.h ****  * Macros for all existing color depths
 106:lvgl/src/core/../misc/lv_color.h ****  * to set/get values of the color channels
 107:lvgl/src/core/../misc/lv_color.h ****  *------------------------------------------*/
 108:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 109:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
ARM GAS  C:\usertemp\ccxmAei4.s 			page 114


 110:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 111:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 112:lvgl/src/core/../misc/lv_color.h **** 
 113:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 114:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 115:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 116:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 117:lvgl/src/core/../misc/lv_color.h **** 
 118:lvgl/src/core/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 119:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 120:lvgl/src/core/../misc/lv_color.h **** 
 121:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 122:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 123:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 124:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 125:lvgl/src/core/../misc/lv_color.h **** 
 126:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 127:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 128:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 129:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 130:lvgl/src/core/../misc/lv_color.h **** 
 131:lvgl/src/core/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 132:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 133:lvgl/src/core/../misc/lv_color.h **** 
 134:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 135:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 136:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 137:lvgl/src/core/../misc/lv_color.h **** #else
 138:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 139:lvgl/src/core/../misc/lv_color.h **** #endif
 140:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 141:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 142:lvgl/src/core/../misc/lv_color.h **** 
 143:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 144:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 145:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 146:lvgl/src/core/../misc/lv_color.h **** #else
 147:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 148:lvgl/src/core/../misc/lv_color.h **** #endif
 149:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 150:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 151:lvgl/src/core/../misc/lv_color.h **** 
 152:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 153:lvgl/src/core/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 154:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 155:lvgl/src/core/../misc/lv_color.h **** #else
 156:lvgl/src/core/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 157:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 158:lvgl/src/core/../misc/lv_color.h **** #endif
 159:lvgl/src/core/../misc/lv_color.h **** 
 160:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 161:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 162:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 163:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 164:lvgl/src/core/../misc/lv_color.h **** 
 165:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 166:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
ARM GAS  C:\usertemp\ccxmAei4.s 			page 115


 167:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 168:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 169:lvgl/src/core/../misc/lv_color.h **** 
 170:lvgl/src/core/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 171:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 172:lvgl/src/core/../misc/lv_color.h **** 
 173:lvgl/src/core/../misc/lv_color.h **** /*---------------------------------------
 174:lvgl/src/core/../misc/lv_color.h ****  * Macros for the current color depth
 175:lvgl/src/core/../misc/lv_color.h ****  * to set/get values of the color channels
 176:lvgl/src/core/../misc/lv_color.h ****  *------------------------------------------*/
 177:lvgl/src/core/../misc/lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 178:lvgl/src/core/../misc/lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 179:lvgl/src/core/../misc/lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 180:lvgl/src/core/../misc/lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 181:lvgl/src/core/../misc/lv_color.h **** 
 182:lvgl/src/core/../misc/lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 183:lvgl/src/core/../misc/lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 184:lvgl/src/core/../misc/lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 185:lvgl/src/core/../misc/lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 186:lvgl/src/core/../misc/lv_color.h **** 
 187:lvgl/src/core/../misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 188:lvgl/src/core/../misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 189:lvgl/src/core/../misc/lv_color.h **** 
 190:lvgl/src/core/../misc/lv_color.h **** /**********************
 191:lvgl/src/core/../misc/lv_color.h ****  *      TYPEDEFS
 192:lvgl/src/core/../misc/lv_color.h ****  **********************/
 193:lvgl/src/core/../misc/lv_color.h **** 
 194:lvgl/src/core/../misc/lv_color.h **** typedef union {
 195:lvgl/src/core/../misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 196:lvgl/src/core/../misc/lv_color.h ****     union {
 197:lvgl/src/core/../misc/lv_color.h ****         uint8_t blue : 1;
 198:lvgl/src/core/../misc/lv_color.h ****         uint8_t green : 1;
 199:lvgl/src/core/../misc/lv_color.h ****         uint8_t red : 1;
 200:lvgl/src/core/../misc/lv_color.h ****     } ch;
 201:lvgl/src/core/../misc/lv_color.h **** } lv_color1_t;
 202:lvgl/src/core/../misc/lv_color.h **** 
 203:lvgl/src/core/../misc/lv_color.h **** typedef union {
 204:lvgl/src/core/../misc/lv_color.h ****     struct {
 205:lvgl/src/core/../misc/lv_color.h ****         uint8_t blue : 2;
 206:lvgl/src/core/../misc/lv_color.h ****         uint8_t green : 3;
 207:lvgl/src/core/../misc/lv_color.h ****         uint8_t red : 3;
 208:lvgl/src/core/../misc/lv_color.h ****     } ch;
 209:lvgl/src/core/../misc/lv_color.h ****     uint8_t full;
 210:lvgl/src/core/../misc/lv_color.h **** } lv_color8_t;
 211:lvgl/src/core/../misc/lv_color.h **** 
 212:lvgl/src/core/../misc/lv_color.h **** typedef union {
 213:lvgl/src/core/../misc/lv_color.h ****     struct {
 214:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 215:lvgl/src/core/../misc/lv_color.h ****         uint16_t blue : 5;
 216:lvgl/src/core/../misc/lv_color.h ****         uint16_t green : 6;
 217:lvgl/src/core/../misc/lv_color.h ****         uint16_t red : 5;
 218:lvgl/src/core/../misc/lv_color.h **** #else
 219:lvgl/src/core/../misc/lv_color.h ****         uint16_t green_h : 3;
 220:lvgl/src/core/../misc/lv_color.h ****         uint16_t red : 5;
 221:lvgl/src/core/../misc/lv_color.h ****         uint16_t blue : 5;
 222:lvgl/src/core/../misc/lv_color.h ****         uint16_t green_l : 3;
 223:lvgl/src/core/../misc/lv_color.h **** #endif
ARM GAS  C:\usertemp\ccxmAei4.s 			page 116


 224:lvgl/src/core/../misc/lv_color.h ****     } ch;
 225:lvgl/src/core/../misc/lv_color.h ****     uint16_t full;
 226:lvgl/src/core/../misc/lv_color.h **** } lv_color16_t;
 227:lvgl/src/core/../misc/lv_color.h **** 
 228:lvgl/src/core/../misc/lv_color.h **** typedef union {
 229:lvgl/src/core/../misc/lv_color.h ****     struct {
 230:lvgl/src/core/../misc/lv_color.h ****         uint8_t blue;
 231:lvgl/src/core/../misc/lv_color.h ****         uint8_t green;
 232:lvgl/src/core/../misc/lv_color.h ****         uint8_t red;
 233:lvgl/src/core/../misc/lv_color.h ****         uint8_t alpha;
 234:lvgl/src/core/../misc/lv_color.h ****     } ch;
 235:lvgl/src/core/../misc/lv_color.h ****     uint32_t full;
 236:lvgl/src/core/../misc/lv_color.h **** } lv_color32_t;
 237:lvgl/src/core/../misc/lv_color.h **** 
 238:lvgl/src/core/../misc/lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 239:lvgl/src/core/../misc/lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 240:lvgl/src/core/../misc/lv_color.h **** 
 241:lvgl/src/core/../misc/lv_color.h **** typedef struct {
 242:lvgl/src/core/../misc/lv_color.h ****     uint16_t h;
 243:lvgl/src/core/../misc/lv_color.h ****     uint8_t s;
 244:lvgl/src/core/../misc/lv_color.h ****     uint8_t v;
 245:lvgl/src/core/../misc/lv_color.h **** } lv_color_hsv_t;
 246:lvgl/src/core/../misc/lv_color.h **** 
 247:lvgl/src/core/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 248:lvgl/src/core/../misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 249:lvgl/src/core/../misc/lv_color.h **** typedef uint8_t lv_opa_t;
 250:lvgl/src/core/../misc/lv_color.h **** //! @endcond
 251:lvgl/src/core/../misc/lv_color.h **** 
 252:lvgl/src/core/../misc/lv_color.h **** struct _lv_color_filter_dsc_t;
 253:lvgl/src/core/../misc/lv_color.h **** 
 254:lvgl/src/core/../misc/lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 255:lvgl/src/core/../misc/lv_color.h **** 
 256:lvgl/src/core/../misc/lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 257:lvgl/src/core/../misc/lv_color.h ****     lv_color_filter_cb_t filter_cb;
 258:lvgl/src/core/../misc/lv_color.h ****     void * user_data;
 259:lvgl/src/core/../misc/lv_color.h **** } lv_color_filter_dsc_t;
 260:lvgl/src/core/../misc/lv_color.h **** 
 261:lvgl/src/core/../misc/lv_color.h **** 
 262:lvgl/src/core/../misc/lv_color.h **** typedef enum {
 263:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_RED,
 264:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_PINK,
 265:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_PURPLE,
 266:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 267:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_INDIGO,
 268:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_BLUE,
 269:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 270:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_CYAN,
 271:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_TEAL,
 272:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_GREEN,
 273:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 274:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_LIME,
 275:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_YELLOW,
 276:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_AMBER,
 277:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_ORANGE,
 278:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 279:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_BROWN,
 280:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_BLUE_GREY,
ARM GAS  C:\usertemp\ccxmAei4.s 			page 117


 281:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_GREY,
 282:lvgl/src/core/../misc/lv_color.h ****     _LV_PALETTE_LAST,
 283:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_NONE = 0xff,
 284:lvgl/src/core/../misc/lv_color.h **** } lv_palette_t;
 285:lvgl/src/core/../misc/lv_color.h **** 
 286:lvgl/src/core/../misc/lv_color.h **** /**********************
 287:lvgl/src/core/../misc/lv_color.h ****  * GLOBAL PROTOTYPES
 288:lvgl/src/core/../misc/lv_color.h ****  **********************/
 289:lvgl/src/core/../misc/lv_color.h **** 
 290:lvgl/src/core/../misc/lv_color.h **** /*In color conversations:
 291:lvgl/src/core/../misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 292:lvgl/src/core/../misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 293:lvgl/src/core/../misc/lv_color.h ****  *         8 bit Red has 3 bits
 294:lvgl/src/core/../misc/lv_color.h ****  *        ----------------------
 295:lvgl/src/core/../misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 296:lvgl/src/core/../misc/lv_color.h ****  *
 297:lvgl/src/core/../misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 298:lvgl/src/core/../misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 299:lvgl/src/core/../misc/lv_color.h ****  *        16 bit Red has 5 bits
 300:lvgl/src/core/../misc/lv_color.h ****  *        ----------------------
 301:lvgl/src/core/../misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 302:lvgl/src/core/../misc/lv_color.h ****  */
 303:lvgl/src/core/../misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 304:lvgl/src/core/../misc/lv_color.h **** {
 305:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 306:lvgl/src/core/../misc/lv_color.h ****     return color.full;
 307:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 308:lvgl/src/core/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 309:lvgl/src/core/../misc/lv_color.h ****         return 1;
 310:lvgl/src/core/../misc/lv_color.h ****     }
 311:lvgl/src/core/../misc/lv_color.h ****     else {
 312:lvgl/src/core/../misc/lv_color.h ****         return 0;
 313:lvgl/src/core/../misc/lv_color.h ****     }
 314:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 315:lvgl/src/core/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 316:lvgl/src/core/../misc/lv_color.h ****         return 1;
 317:lvgl/src/core/../misc/lv_color.h ****     }
 318:lvgl/src/core/../misc/lv_color.h ****     else {
 319:lvgl/src/core/../misc/lv_color.h ****         return 0;
 320:lvgl/src/core/../misc/lv_color.h ****     }
 321:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 322:lvgl/src/core/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 323:lvgl/src/core/../misc/lv_color.h ****         return 1;
 324:lvgl/src/core/../misc/lv_color.h ****     }
 325:lvgl/src/core/../misc/lv_color.h ****     else {
 326:lvgl/src/core/../misc/lv_color.h ****         return 0;
 327:lvgl/src/core/../misc/lv_color.h ****     }
 328:lvgl/src/core/../misc/lv_color.h **** #endif
 329:lvgl/src/core/../misc/lv_color.h **** }
 330:lvgl/src/core/../misc/lv_color.h **** 
 331:lvgl/src/core/../misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 332:lvgl/src/core/../misc/lv_color.h **** {
 333:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 334:lvgl/src/core/../misc/lv_color.h ****     if(color.full == 0)
 335:lvgl/src/core/../misc/lv_color.h ****         return 0;
 336:lvgl/src/core/../misc/lv_color.h ****     else
 337:lvgl/src/core/../misc/lv_color.h ****         return 0xFF;
ARM GAS  C:\usertemp\ccxmAei4.s 			page 118


 338:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 339:lvgl/src/core/../misc/lv_color.h ****     return color.full;
 340:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 341:lvgl/src/core/../misc/lv_color.h ****     lv_color8_t ret;
 342:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 343:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 344:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 345:lvgl/src/core/../misc/lv_color.h ****     return ret.full;
 346:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 347:lvgl/src/core/../misc/lv_color.h ****     lv_color8_t ret;
 348:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 349:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 350:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 351:lvgl/src/core/../misc/lv_color.h ****     return ret.full;
 352:lvgl/src/core/../misc/lv_color.h **** #endif
 353:lvgl/src/core/../misc/lv_color.h **** }
 354:lvgl/src/core/../misc/lv_color.h **** 
 355:lvgl/src/core/../misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 356:lvgl/src/core/../misc/lv_color.h **** {
 357:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 358:lvgl/src/core/../misc/lv_color.h ****     if(color.full == 0)
 359:lvgl/src/core/../misc/lv_color.h ****         return 0;
 360:lvgl/src/core/../misc/lv_color.h ****     else
 361:lvgl/src/core/../misc/lv_color.h ****         return 0xFFFF;
 362:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 363:lvgl/src/core/../misc/lv_color.h ****     lv_color16_t ret;
 364:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 365:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 366:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 367:lvgl/src/core/../misc/lv_color.h ****     return ret.full;
 368:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 369:lvgl/src/core/../misc/lv_color.h ****     return color.full;
 370:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 371:lvgl/src/core/../misc/lv_color.h ****     lv_color16_t ret;
 372:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
 373:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 374:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 375:lvgl/src/core/../misc/lv_color.h ****     return ret.full;
 376:lvgl/src/core/../misc/lv_color.h **** #endif
 377:lvgl/src/core/../misc/lv_color.h **** }
 378:lvgl/src/core/../misc/lv_color.h **** 
 379:lvgl/src/core/../misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 380:lvgl/src/core/../misc/lv_color.h **** {
 381:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 382:lvgl/src/core/../misc/lv_color.h ****     if(color.full == 0)
 383:lvgl/src/core/../misc/lv_color.h ****         return 0xFF000000;
 384:lvgl/src/core/../misc/lv_color.h ****     else
 385:lvgl/src/core/../misc/lv_color.h ****         return 0xFFFFFFFF;
 386:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 387:lvgl/src/core/../misc/lv_color.h ****     lv_color32_t ret;
 388:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 389:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 390:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 391:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 392:lvgl/src/core/../misc/lv_color.h ****     return ret.full;
 393:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 394:lvgl/src/core/../misc/lv_color.h ****     /**
ARM GAS  C:\usertemp\ccxmAei4.s 			page 119


 395:lvgl/src/core/../misc/lv_color.h ****      * The floating point math for conversion is:
 396:lvgl/src/core/../misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 397:lvgl/src/core/../misc/lv_color.h ****      * The faster integer math for conversion is:
 398:lvgl/src/core/../misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 399:lvgl/src/core/../misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 400:lvgl/src/core/../misc/lv_color.h ****      *
 401:lvgl/src/core/../misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 402:lvgl/src/core/../misc/lv_color.h ****      *
 403:lvgl/src/core/../misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 404:lvgl/src/core/../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 405:lvgl/src/core/../misc/lv_color.h ****      *       0           8      7        7       255
 406:lvgl/src/core/../misc/lv_color.h ****      *       1          16     14        7       255
 407:lvgl/src/core/../misc/lv_color.h ****      *       2          32     28        7       255
 408:lvgl/src/core/../misc/lv_color.h ****      *       3          65     25        3       255
 409:lvgl/src/core/../misc/lv_color.h ****      *       4         131     19        1       255
 410:lvgl/src/core/../misc/lv_color.h ****      *       5         263      7        0       255
 411:lvgl/src/core/../misc/lv_color.h ****      *
 412:lvgl/src/core/../misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 413:lvgl/src/core/../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 414:lvgl/src/core/../misc/lv_color.h ****      *       0           4      3        3       255
 415:lvgl/src/core/../misc/lv_color.h ****      *       1           8      6        3       255
 416:lvgl/src/core/../misc/lv_color.h ****      *       2          16     12        3       255
 417:lvgl/src/core/../misc/lv_color.h ****      *       3          32     24        3       255
 418:lvgl/src/core/../misc/lv_color.h ****      *       4          64     48        3       255
 419:lvgl/src/core/../misc/lv_color.h ****      *       5         129     33        1       255
 420:lvgl/src/core/../misc/lv_color.h ****      *       6         259      3        0       255
 421:lvgl/src/core/../misc/lv_color.h ****      */
 422:lvgl/src/core/../misc/lv_color.h **** 
 423:lvgl/src/core/../misc/lv_color.h ****     lv_color32_t ret;
 424:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 425:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 426:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 427:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 428:lvgl/src/core/../misc/lv_color.h ****     return ret.full;
 429:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 430:lvgl/src/core/../misc/lv_color.h ****     return color.full;
 431:lvgl/src/core/../misc/lv_color.h **** #endif
 432:lvgl/src/core/../misc/lv_color.h **** }
 433:lvgl/src/core/../misc/lv_color.h **** 
 434:lvgl/src/core/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 435:lvgl/src/core/../misc/lv_color.h **** 
 436:lvgl/src/core/../misc/lv_color.h **** /**
 437:lvgl/src/core/../misc/lv_color.h ****  * Mix two colors with a given ratio.
 438:lvgl/src/core/../misc/lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 439:lvgl/src/core/../misc/lv_color.h ****  * @param c2 the second color to mix (usually the background)
 440:lvgl/src/core/../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 441:lvgl/src/core/../misc/lv_color.h ****  * @return the mixed color
 442:lvgl/src/core/../misc/lv_color.h ****  */
 443:lvgl/src/core/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 444:lvgl/src/core/../misc/lv_color.h **** {
 445:lvgl/src/core/../misc/lv_color.h ****     lv_color_t ret;
 446:lvgl/src/core/../misc/lv_color.h **** 
 447:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_16_SWAP == 0
 448:lvgl/src/core/../misc/lv_color.h ****     /*Source: https://stackoverflow.com/a/50012418/1999969*/
 449:lvgl/src/core/../misc/lv_color.h ****     mix = (mix + 4) >> 3;
 450:lvgl/src/core/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 451:lvgl/src/core/../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
ARM GAS  C:\usertemp\ccxmAei4.s 			page 120


 452:lvgl/src/core/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | ((uint32_t)c1.full << 16)) & 0x7E0F81F;
 453:lvgl/src/core/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 454:lvgl/src/core/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 455:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 456:lvgl/src/core/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 457:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 458:lvgl/src/core/../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 459:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 460:lvgl/src/core/../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 461:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 462:lvgl/src/core/../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 463:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 464:lvgl/src/core/../misc/lv_color.h **** #else
 465:lvgl/src/core/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 466:lvgl/src/core/../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 467:lvgl/src/core/../misc/lv_color.h **** #endif
 468:lvgl/src/core/../misc/lv_color.h **** 
 469:lvgl/src/core/../misc/lv_color.h ****     return ret;
 470:lvgl/src/core/../misc/lv_color.h **** }
 471:lvgl/src/core/../misc/lv_color.h **** 
 472:lvgl/src/core/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 473:lvgl/src/core/../misc/lv_color.h **** {
 474:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 475:lvgl/src/core/../misc/lv_color.h ****     out[0] = (uint16_t)LV_COLOR_GET_R(c) * mix;
 476:lvgl/src/core/../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 477:lvgl/src/core/../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 478:lvgl/src/core/../misc/lv_color.h **** #else
 479:lvgl/src/core/../misc/lv_color.h ****     (void) mix;
 480:lvgl/src/core/../misc/lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 481:lvgl/src/core/../misc/lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 482:lvgl/src/core/../misc/lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 483:lvgl/src/core/../misc/lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 484:lvgl/src/core/../misc/lv_color.h **** #endif
 485:lvgl/src/core/../misc/lv_color.h **** 
 486:lvgl/src/core/../misc/lv_color.h **** }
 487:lvgl/src/core/../misc/lv_color.h **** 
 488:lvgl/src/core/../misc/lv_color.h **** /**
 489:lvgl/src/core/../misc/lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 490:lvgl/src/core/../misc/lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 491:lvgl/src/core/../misc/lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 492:lvgl/src/core/../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 493:lvgl/src/core/../misc/lv_color.h ****  *            Should be modified like mix = `255 - mix`
 494:lvgl/src/core/../misc/lv_color.h ****  * @return the mixed color
 495:lvgl/src/core/../misc/lv_color.h ****  * @note 255 won't give clearly `c1`.
 496:lvgl/src/core/../misc/lv_color.h ****  */
 497:lvgl/src/core/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix_premult(uint16_t * premult_c1, lv_color
 498:lvgl/src/core/../misc/lv_color.h **** {
 499:lvgl/src/core/../misc/lv_color.h ****     lv_color_t ret;
 500:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 501:lvgl/src/core/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8 or 32*/
 502:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROUND_OF
 503:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 504:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 505:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 506:lvgl/src/core/../misc/lv_color.h **** #else
 507:lvgl/src/core/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 508:lvgl/src/core/../misc/lv_color.h ****     /*Restore color1*/
ARM GAS  C:\usertemp\ccxmAei4.s 			page 121


 509:lvgl/src/core/../misc/lv_color.h ****     lv_color_t c1;
 510:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
 511:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 512:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 513:lvgl/src/core/../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
 514:lvgl/src/core/../misc/lv_color.h **** #endif
 515:lvgl/src/core/../misc/lv_color.h **** 
 516:lvgl/src/core/../misc/lv_color.h ****     return ret;
 517:lvgl/src/core/../misc/lv_color.h **** }
 518:lvgl/src/core/../misc/lv_color.h **** 
 519:lvgl/src/core/../misc/lv_color.h **** /**
 520:lvgl/src/core/../misc/lv_color.h ****  * Mix two colors. Both color can have alpha value.
 521:lvgl/src/core/../misc/lv_color.h ****  * @param bg_color background color
 522:lvgl/src/core/../misc/lv_color.h ****  * @param bg_opa alpha of the background color
 523:lvgl/src/core/../misc/lv_color.h ****  * @param fg_color foreground color
 524:lvgl/src/core/../misc/lv_color.h ****  * @param fg_opa alpha of the foreground color
 525:lvgl/src/core/../misc/lv_color.h ****  * @param res_color the result color
 526:lvgl/src/core/../misc/lv_color.h ****  * @param res_opa the result opacity
 527:lvgl/src/core/../misc/lv_color.h ****  */
 528:lvgl/src/core/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 529:lvgl/src/core/../misc/lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
 530:lvgl/src/core/../misc/lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 531:lvgl/src/core/../misc/lv_color.h **** {
 532:lvgl/src/core/../misc/lv_color.h ****     /*Pick the foreground if it's fully opaque or the Background is fully transparent*/
 533:lvgl/src/core/../misc/lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 534:lvgl/src/core/../misc/lv_color.h ****         res_color->full = fg_color.full;
 535:lvgl/src/core/../misc/lv_color.h ****         *res_opa = fg_opa;
 536:lvgl/src/core/../misc/lv_color.h ****     }
 537:lvgl/src/core/../misc/lv_color.h ****     /*Transparent foreground: use the Background*/
 538:lvgl/src/core/../misc/lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 539:lvgl/src/core/../misc/lv_color.h ****         res_color->full = bg_color.full;
 540:lvgl/src/core/../misc/lv_color.h ****         *res_opa = bg_opa;
 541:lvgl/src/core/../misc/lv_color.h ****     }
 542:lvgl/src/core/../misc/lv_color.h ****     /*Opaque background: use simple mix*/
 543:lvgl/src/core/../misc/lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 544:lvgl/src/core/../misc/lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 545:lvgl/src/core/../misc/lv_color.h ****         *res_opa = LV_OPA_COVER;
 546:lvgl/src/core/../misc/lv_color.h ****     }
 547:lvgl/src/core/../misc/lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 548:lvgl/src/core/../misc/lv_color.h ****     else {
 549:lvgl/src/core/../misc/lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
 550:lvgl/src/core/../misc/lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 551:lvgl/src/core/../misc/lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 552:lvgl/src/core/../misc/lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 553:lvgl/src/core/../misc/lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 554:lvgl/src/core/../misc/lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
 555:lvgl/src/core/../misc/lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 556:lvgl/src/core/../misc/lv_color.h **** 
 557:lvgl/src/core/../misc/lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
 558:lvgl/src/core/../misc/lv_color.h ****            bg_color.full != bg_color_save.full) {
 559:lvgl/src/core/../misc/lv_color.h ****             fg_opa_save        = fg_opa;
 560:lvgl/src/core/../misc/lv_color.h ****             bg_opa_save        = bg_opa;
 561:lvgl/src/core/../misc/lv_color.h ****             fg_color_save.full = fg_color.full;
 562:lvgl/src/core/../misc/lv_color.h ****             bg_color_save.full = bg_color.full;
 563:lvgl/src/core/../misc/lv_color.h ****             /*Info:
 564:lvgl/src/core/../misc/lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
 565:lvgl/src/core/../misc/lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
ARM GAS  C:\usertemp\ccxmAei4.s 			page 122


 566:lvgl/src/core/../misc/lv_color.h ****             LV_ASSERT(res_opa_saved != 0);
 567:lvgl/src/core/../misc/lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
 568:lvgl/src/core/../misc/lv_color.h ****             res_color_saved = lv_color_mix(fg_color, bg_color, ratio);
 569:lvgl/src/core/../misc/lv_color.h **** 
 570:lvgl/src/core/../misc/lv_color.h ****         }
 571:lvgl/src/core/../misc/lv_color.h **** 
 572:lvgl/src/core/../misc/lv_color.h ****         res_color->full = res_color_saved.full;
 573:lvgl/src/core/../misc/lv_color.h ****         *res_opa = res_opa_saved;
 574:lvgl/src/core/../misc/lv_color.h ****     }
 575:lvgl/src/core/../misc/lv_color.h **** }
 576:lvgl/src/core/../misc/lv_color.h **** 
 577:lvgl/src/core/../misc/lv_color.h **** //! @endcond
 578:lvgl/src/core/../misc/lv_color.h **** 
 579:lvgl/src/core/../misc/lv_color.h **** /**
 580:lvgl/src/core/../misc/lv_color.h ****  * Get the brightness of a color
 581:lvgl/src/core/../misc/lv_color.h ****  * @param color a color
 582:lvgl/src/core/../misc/lv_color.h ****  * @return the brightness [0..255]
 583:lvgl/src/core/../misc/lv_color.h ****  */
 584:lvgl/src/core/../misc/lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 585:lvgl/src/core/../misc/lv_color.h **** {
 586:lvgl/src/core/../misc/lv_color.h ****     lv_color32_t c32;
 587:lvgl/src/core/../misc/lv_color.h ****     c32.full        = lv_color_to32(color);
 588:lvgl/src/core/../misc/lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 589:lvgl/src/core/../misc/lv_color.h ****     return (uint8_t)(bright >> 3);
 590:lvgl/src/core/../misc/lv_color.h **** }
 591:lvgl/src/core/../misc/lv_color.h **** 
 592:lvgl/src/core/../misc/lv_color.h **** static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)
 593:lvgl/src/core/../misc/lv_color.h **** {
 594:lvgl/src/core/../misc/lv_color.h ****     return _LV_COLOR_MAKE_TYPE_HELPER LV_COLOR_MAKE(r, g, b);
 595:lvgl/src/core/../misc/lv_color.h **** }
 596:lvgl/src/core/../misc/lv_color.h **** 
 597:lvgl/src/core/../misc/lv_color.h **** static inline lv_color_t lv_color_hex(uint32_t c)
 598:lvgl/src/core/../misc/lv_color.h **** {
 599:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 16
 600:lvgl/src/core/../misc/lv_color.h ****     lv_color_t r;
 601:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 602:lvgl/src/core/../misc/lv_color.h ****     /* Convert a 4 bytes per pixel in format ARGB32 to R5G6B5 format
 603:lvgl/src/core/../misc/lv_color.h ****         naive way (by calling lv_color_make with components):
 604:lvgl/src/core/../misc/lv_color.h ****                     r = ((c & 0xFF0000) >> 19)
 605:lvgl/src/core/../misc/lv_color.h ****                     g = ((c & 0xFF00) >> 10)
 606:lvgl/src/core/../misc/lv_color.h ****                     b = ((c & 0xFF) >> 3)
 607:lvgl/src/core/../misc/lv_color.h ****                     rgb565 = (r << 11) | (g << 5) | b
 608:lvgl/src/core/../misc/lv_color.h ****         That's 3 mask, 5 bitshift and 2 or operations
 609:lvgl/src/core/../misc/lv_color.h **** 
 610:lvgl/src/core/../misc/lv_color.h ****         A bit better:
 611:lvgl/src/core/../misc/lv_color.h ****                     r = ((c & 0xF80000) >> 8)
 612:lvgl/src/core/../misc/lv_color.h ****                     g = ((c & 0xFC00) >> 5)
 613:lvgl/src/core/../misc/lv_color.h ****                     b = ((c & 0xFF) >> 3)
 614:lvgl/src/core/../misc/lv_color.h ****                     rgb565 = r | g | b
 615:lvgl/src/core/../misc/lv_color.h ****         That's 3 mask, 3 bitshifts and 2 or operations */
 616:lvgl/src/core/../misc/lv_color.h ****     r.full = (uint16_t)(((c & 0xF80000) >> 8) | ((c & 0xFC00) >> 5) | ((c & 0xFF) >> 3));
 617:lvgl/src/core/../misc/lv_color.h **** #else
 618:lvgl/src/core/../misc/lv_color.h ****     /* We want: rrrr rrrr GGGg gggg bbbb bbbb => gggb bbbb rrrr rGGG */
 619:lvgl/src/core/../misc/lv_color.h ****     r.full = (uint16_t)(((c & 0xF80000) >> 16) | ((c & 0xFC00) >> 13) | ((c & 0x1C00) << 3) | ((c &
 620:lvgl/src/core/../misc/lv_color.h **** #endif
 621:lvgl/src/core/../misc/lv_color.h ****     return r;
 622:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
ARM GAS  C:\usertemp\ccxmAei4.s 			page 123


 623:lvgl/src/core/../misc/lv_color.h ****     lv_color_t r;
 624:lvgl/src/core/../misc/lv_color.h ****     r.full = c | 0xFF000000;
 625:lvgl/src/core/../misc/lv_color.h ****     return r;
 626:lvgl/src/core/../misc/lv_color.h **** #else /*LV_COLOR_DEPTH == 8*/
 627:lvgl/src/core/../misc/lv_color.h ****     return lv_color_make((uint8_t)((c >> 16) & 0xFF), (uint8_t)((c >> 8) & 0xFF), (uint8_t)(c & 0xF
 628:lvgl/src/core/../misc/lv_color.h **** #endif
 629:lvgl/src/core/../misc/lv_color.h **** }
 630:lvgl/src/core/../misc/lv_color.h **** 
 631:lvgl/src/core/../misc/lv_color.h **** static inline lv_color_t lv_color_hex3(uint32_t c)
 632:lvgl/src/core/../misc/lv_color.h **** {
 633:lvgl/src/core/../misc/lv_color.h ****     return lv_color_make((uint8_t)(((c >> 4) & 0xF0) | ((c >> 8) & 0xF)), (uint8_t)((c & 0xF0) | ((
 634:lvgl/src/core/../misc/lv_color.h ****                          (uint8_t)((c & 0xF) | ((c & 0xF) << 4)));
 635:lvgl/src/core/../misc/lv_color.h **** }
 636:lvgl/src/core/../misc/lv_color.h **** 
 637:lvgl/src/core/../misc/lv_color.h **** static inline void lv_color_filter_dsc_init(lv_color_filter_dsc_t * dsc, lv_color_filter_cb_t cb)
 638:lvgl/src/core/../misc/lv_color.h **** {
 639:lvgl/src/core/../misc/lv_color.h ****     dsc->filter_cb = cb;
 640:lvgl/src/core/../misc/lv_color.h **** }
 641:lvgl/src/core/../misc/lv_color.h **** 
 642:lvgl/src/core/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 643:lvgl/src/core/../misc/lv_color.h **** //!
 644:lvgl/src/core/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM void lv_color_fill(lv_color_t * buf, lv_color_t color, uint32_t px_num);
 645:lvgl/src/core/../misc/lv_color.h **** 
 646:lvgl/src/core/../misc/lv_color.h **** //! @endcond
 647:lvgl/src/core/../misc/lv_color.h **** lv_color_t lv_color_lighten(lv_color_t c, lv_opa_t lvl);
 648:lvgl/src/core/../misc/lv_color.h **** 
 649:lvgl/src/core/../misc/lv_color.h **** lv_color_t lv_color_darken(lv_color_t c, lv_opa_t lvl);
 650:lvgl/src/core/../misc/lv_color.h **** 
 651:lvgl/src/core/../misc/lv_color.h **** lv_color_t lv_color_change_lightness(lv_color_t c, lv_opa_t lvl);
 652:lvgl/src/core/../misc/lv_color.h **** 
 653:lvgl/src/core/../misc/lv_color.h **** /**
 654:lvgl/src/core/../misc/lv_color.h ****  * Convert a HSV color to RGB
 655:lvgl/src/core/../misc/lv_color.h ****  * @param h hue [0..359]
 656:lvgl/src/core/../misc/lv_color.h ****  * @param s saturation [0..100]
 657:lvgl/src/core/../misc/lv_color.h ****  * @param v value [0..100]
 658:lvgl/src/core/../misc/lv_color.h ****  * @return the given RGB color in RGB (with LV_COLOR_DEPTH depth)
 659:lvgl/src/core/../misc/lv_color.h ****  */
 660:lvgl/src/core/../misc/lv_color.h **** lv_color_t lv_color_hsv_to_rgb(uint16_t h, uint8_t s, uint8_t v);
 661:lvgl/src/core/../misc/lv_color.h **** 
 662:lvgl/src/core/../misc/lv_color.h **** /**
 663:lvgl/src/core/../misc/lv_color.h ****  * Convert a 32-bit RGB color to HSV
 664:lvgl/src/core/../misc/lv_color.h ****  * @param r8 8-bit red
 665:lvgl/src/core/../misc/lv_color.h ****  * @param g8 8-bit green
 666:lvgl/src/core/../misc/lv_color.h ****  * @param b8 8-bit blue
 667:lvgl/src/core/../misc/lv_color.h ****  * @return the given RGB color in HSV
 668:lvgl/src/core/../misc/lv_color.h ****  */
 669:lvgl/src/core/../misc/lv_color.h **** lv_color_hsv_t lv_color_rgb_to_hsv(uint8_t r8, uint8_t g8, uint8_t b8);
 670:lvgl/src/core/../misc/lv_color.h **** 
 671:lvgl/src/core/../misc/lv_color.h **** /**
 672:lvgl/src/core/../misc/lv_color.h ****  * Convert a color to HSV
 673:lvgl/src/core/../misc/lv_color.h ****  * @param color color
 674:lvgl/src/core/../misc/lv_color.h ****  * @return the given color in HSV
 675:lvgl/src/core/../misc/lv_color.h ****  */
 676:lvgl/src/core/../misc/lv_color.h **** lv_color_hsv_t lv_color_to_hsv(lv_color_t color);
 677:lvgl/src/core/../misc/lv_color.h **** 
 678:lvgl/src/core/../misc/lv_color.h **** /**
 679:lvgl/src/core/../misc/lv_color.h ****  * Just a wrapper around LV_COLOR_CHROMA_KEY because it might be more convenient to use a function 
ARM GAS  C:\usertemp\ccxmAei4.s 			page 124


 680:lvgl/src/core/../misc/lv_color.h ****  * @return LV_COLOR_CHROMA_KEY
 681:lvgl/src/core/../misc/lv_color.h ****  */
 682:lvgl/src/core/../misc/lv_color.h **** static inline lv_color_t lv_color_chroma_key(void)
 683:lvgl/src/core/../misc/lv_color.h **** {
 684:lvgl/src/core/../misc/lv_color.h ****     return LV_COLOR_CHROMA_KEY;
 685:lvgl/src/core/../misc/lv_color.h **** }
 686:lvgl/src/core/../misc/lv_color.h **** 
 687:lvgl/src/core/../misc/lv_color.h **** /**********************
 688:lvgl/src/core/../misc/lv_color.h ****  *  PREDEFINED COLORS
 689:lvgl/src/core/../misc/lv_color.h ****  **********************/
 690:lvgl/src/core/../misc/lv_color.h **** /*Source: https://vuetifyjs.com/en/styles/colors/#material-colors*/
 691:lvgl/src/core/../misc/lv_color.h **** 
 692:lvgl/src/core/../misc/lv_color.h **** lv_color_t lv_palette_main(lv_palette_t p);
 693:lvgl/src/core/../misc/lv_color.h **** static inline lv_color_t lv_color_white(void)
 694:lvgl/src/core/../misc/lv_color.h **** {
 695:lvgl/src/core/../misc/lv_color.h ****     return lv_color_make(0xff, 0xff, 0xff);
 696:lvgl/src/core/../misc/lv_color.h **** }
 697:lvgl/src/core/../misc/lv_color.h **** static inline lv_color_t lv_color_black(void)
 3906              		.loc 4 697 26 view .LVU1300
 698:lvgl/src/core/../misc/lv_color.h **** {
 699:lvgl/src/core/../misc/lv_color.h ****     return lv_color_make(0x00, 0x0, 0x00);
 3907              		.loc 4 699 5 view .LVU1301
 3908              	.LBB112:
 3909              	.LBI112:
 592:lvgl/src/core/../misc/lv_color.h **** {
 3910              		.loc 4 592 26 view .LVU1302
 3911              	.LBB113:
 594:lvgl/src/core/../misc/lv_color.h **** }
 3912              		.loc 4 594 5 view .LVU1303
 594:lvgl/src/core/../misc/lv_color.h **** }
 3913              		.loc 4 594 12 is_stmt 0 view .LVU1304
 3914 0154 4FF00001 		mov	r1, #0	@ movhi
 3915 0158 21F01F01 		bic	r1, r1, #31
 3916 015c 21F4FC61 		bic	r1, r1, #2016
 3917 0160 21F47841 		bic	r1, r1, #63488
 3918              	.LVL349:
 594:lvgl/src/core/../misc/lv_color.h **** }
 3919              		.loc 4 594 12 view .LVU1305
 3920              	.LBE113:
 3921              	.LBE112:
 3922              	.LBE111:
 348:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_text_color(perf_label, lv_color_white(), 0);
 3923              		.loc 1 348 9 discriminator 1 view .LVU1306
 3924 0164 0022     		movs	r2, #0
 3925 0166 2046     		mov	r0, r4
 3926 0168 FFF7FEFF 		bl	lv_obj_set_style_bg_color
 3927              	.LVL350:
 349:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_pad_top(perf_label, 3, 0);
 3928              		.loc 1 349 9 is_stmt 1 view .LVU1307
 3929              	.LBB114:
 3930              	.LBI114:
 693:lvgl/src/core/../misc/lv_color.h **** {
 3931              		.loc 4 693 26 view .LVU1308
 695:lvgl/src/core/../misc/lv_color.h **** }
 3932              		.loc 4 695 5 view .LVU1309
 3933              	.LBB115:
 3934              	.LBI115:
ARM GAS  C:\usertemp\ccxmAei4.s 			page 125


 592:lvgl/src/core/../misc/lv_color.h **** {
 3935              		.loc 4 592 26 view .LVU1310
 3936              	.LBB116:
 594:lvgl/src/core/../misc/lv_color.h **** }
 3937              		.loc 4 594 5 view .LVU1311
 594:lvgl/src/core/../misc/lv_color.h **** }
 3938              		.loc 4 594 5 is_stmt 0 view .LVU1312
 3939              	.LBE116:
 3940              	.LBE115:
 3941              	.LBE114:
 349:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_pad_top(perf_label, 3, 0);
 3942              		.loc 1 349 9 discriminator 1 view .LVU1313
 3943 016c 0022     		movs	r2, #0
 3944 016e 4FF0FF31 		mov	r1, #-1	@ movhi
 3945 0172 2046     		mov	r0, r4
 3946 0174 FFF7FEFF 		bl	lv_obj_set_style_text_color
 3947              	.LVL351:
 350:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_pad_bottom(perf_label, 3, 0);
 3948              		.loc 1 350 9 is_stmt 1 view .LVU1314
 3949 0178 0022     		movs	r2, #0
 3950 017a 0321     		movs	r1, #3
 3951 017c 2046     		mov	r0, r4
 3952 017e FFF7FEFF 		bl	lv_obj_set_style_pad_top
 3953              	.LVL352:
 351:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_pad_left(perf_label, 3, 0);
 3954              		.loc 1 351 9 view .LVU1315
 3955 0182 0022     		movs	r2, #0
 3956 0184 0321     		movs	r1, #3
 3957 0186 2046     		mov	r0, r4
 3958 0188 FFF7FEFF 		bl	lv_obj_set_style_pad_bottom
 3959              	.LVL353:
 352:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_pad_right(perf_label, 3, 0);
 3960              		.loc 1 352 9 view .LVU1316
 3961 018c 0022     		movs	r2, #0
 3962 018e 0321     		movs	r1, #3
 3963 0190 2046     		mov	r0, r4
 3964 0192 FFF7FEFF 		bl	lv_obj_set_style_pad_left
 3965              	.LVL354:
 353:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_text_align(perf_label, LV_TEXT_ALIGN_RIGHT, 0);
 3966              		.loc 1 353 9 view .LVU1317
 3967 0196 0022     		movs	r2, #0
 3968 0198 0321     		movs	r1, #3
 3969 019a 2046     		mov	r0, r4
 3970 019c FFF7FEFF 		bl	lv_obj_set_style_pad_right
 3971              	.LVL355:
 354:lvgl/src/core/lv_refr.c ****         lv_label_set_text(perf_label, "?");
 3972              		.loc 1 354 9 view .LVU1318
 3973 01a0 0022     		movs	r2, #0
 3974 01a2 0321     		movs	r1, #3
 3975 01a4 2046     		mov	r0, r4
 3976 01a6 FFF7FEFF 		bl	lv_obj_set_style_text_align
 3977              	.LVL356:
 355:lvgl/src/core/lv_refr.c ****         lv_obj_align(perf_label, LV_USE_PERF_MONITOR_POS, 0, 0);
 3978              		.loc 1 355 9 view .LVU1319
 3979 01aa 5149     		ldr	r1, .L256+16
 3980 01ac 2046     		mov	r0, r4
 3981 01ae FFF7FEFF 		bl	lv_label_set_text
ARM GAS  C:\usertemp\ccxmAei4.s 			page 126


 3982              	.LVL357:
 356:lvgl/src/core/lv_refr.c ****         perf_monitor.perf_label = perf_label;
 3983              		.loc 1 356 9 view .LVU1320
 3984 01b2 0023     		movs	r3, #0
 3985 01b4 1A46     		mov	r2, r3
 3986 01b6 0621     		movs	r1, #6
 3987 01b8 2046     		mov	r0, r4
 3988 01ba FFF7FEFF 		bl	lv_obj_align
 3989              	.LVL358:
 357:lvgl/src/core/lv_refr.c ****     }
 3990              		.loc 1 357 9 view .LVU1321
 357:lvgl/src/core/lv_refr.c ****     }
 3991              		.loc 1 357 33 is_stmt 0 view .LVU1322
 3992 01be 4A4B     		ldr	r3, .L256+8
 3993 01c0 5C61     		str	r4, [r3, #20]
 3994 01c2 76E7     		b	.L242
 3995              	.L243:
 3996              	.LBB117:
 367:lvgl/src/core/lv_refr.c ****         uint32_t fps_limit = 1000 / disp_refr->refr_timer->period;
 3997              		.loc 1 367 9 is_stmt 1 view .LVU1323
 367:lvgl/src/core/lv_refr.c ****         uint32_t fps_limit = 1000 / disp_refr->refr_timer->period;
 3998              		.loc 1 367 39 is_stmt 0 view .LVU1324
 3999 01c4 FFF7FEFF 		bl	lv_tick_get
 4000              	.LVL359:
 367:lvgl/src/core/lv_refr.c ****         uint32_t fps_limit = 1000 / disp_refr->refr_timer->period;
 4001              		.loc 1 367 37 discriminator 1 view .LVU1325
 4002 01c8 474B     		ldr	r3, .L256+8
 4003 01ca 1860     		str	r0, [r3]
 368:lvgl/src/core/lv_refr.c ****         uint32_t fps;
 4004              		.loc 1 368 9 is_stmt 1 view .LVU1326
 368:lvgl/src/core/lv_refr.c ****         uint32_t fps;
 4005              		.loc 1 368 46 is_stmt 0 view .LVU1327
 4006 01cc 444A     		ldr	r2, .L256
 4007 01ce 1268     		ldr	r2, [r2]
 4008 01d0 5268     		ldr	r2, [r2, #4]
 368:lvgl/src/core/lv_refr.c ****         uint32_t fps;
 4009              		.loc 1 368 58 view .LVU1328
 4010 01d2 1268     		ldr	r2, [r2]
 368:lvgl/src/core/lv_refr.c ****         uint32_t fps;
 4011              		.loc 1 368 18 view .LVU1329
 4012 01d4 4FF47A75 		mov	r5, #1000
 4013              	.LVL360:
 368:lvgl/src/core/lv_refr.c ****         uint32_t fps;
 4014              		.loc 1 368 18 view .LVU1330
 4015 01d8 B5FBF2F5 		udiv	r5, r5, r2
 4016              	.LVL361:
 369:lvgl/src/core/lv_refr.c **** 
 4017              		.loc 1 369 9 is_stmt 1 view .LVU1331
 371:lvgl/src/core/lv_refr.c ****             perf_monitor.elaps_sum = 1;
 4018              		.loc 1 371 9 view .LVU1332
 371:lvgl/src/core/lv_refr.c ****             perf_monitor.elaps_sum = 1;
 4019              		.loc 1 371 24 is_stmt 0 view .LVU1333
 4020 01dc 5B68     		ldr	r3, [r3, #4]
 371:lvgl/src/core/lv_refr.c ****             perf_monitor.elaps_sum = 1;
 4021              		.loc 1 371 11 view .LVU1334
 4022 01de 13B9     		cbnz	r3, .L245
 372:lvgl/src/core/lv_refr.c ****         }
ARM GAS  C:\usertemp\ccxmAei4.s 			page 127


 4023              		.loc 1 372 13 is_stmt 1 view .LVU1335
 372:lvgl/src/core/lv_refr.c ****         }
 4024              		.loc 1 372 36 is_stmt 0 view .LVU1336
 4025 01e0 414B     		ldr	r3, .L256+8
 4026 01e2 0122     		movs	r2, #1
 4027 01e4 5A60     		str	r2, [r3, #4]
 4028              	.L245:
 374:lvgl/src/core/lv_refr.c ****             fps = fps_limit;
 4029              		.loc 1 374 9 is_stmt 1 view .LVU1337
 374:lvgl/src/core/lv_refr.c ****             fps = fps_limit;
 4030              		.loc 1 374 24 is_stmt 0 view .LVU1338
 4031 01e6 404B     		ldr	r3, .L256+8
 4032 01e8 9B68     		ldr	r3, [r3, #8]
 374:lvgl/src/core/lv_refr.c ****             fps = fps_limit;
 4033              		.loc 1 374 11 view .LVU1339
 4034 01ea FBB1     		cbz	r3, .L249
 378:lvgl/src/core/lv_refr.c ****         }
 4035              		.loc 1 378 13 is_stmt 1 view .LVU1340
 378:lvgl/src/core/lv_refr.c ****         }
 4036              		.loc 1 378 25 is_stmt 0 view .LVU1341
 4037 01ec 4FF47A72 		mov	r2, #1000
 4038 01f0 02FB03F3 		mul	r3, r2, r3
 378:lvgl/src/core/lv_refr.c ****         }
 4039              		.loc 1 378 65 view .LVU1342
 4040 01f4 3C4A     		ldr	r2, .L256+8
 4041 01f6 5268     		ldr	r2, [r2, #4]
 378:lvgl/src/core/lv_refr.c ****         }
 4042              		.loc 1 378 17 view .LVU1343
 4043 01f8 B3FBF2F3 		udiv	r3, r3, r2
 4044              	.LVL362:
 4045              	.L246:
 380:lvgl/src/core/lv_refr.c ****         perf_monitor.frame_cnt = 0;
 4046              		.loc 1 380 9 is_stmt 1 view .LVU1344
 380:lvgl/src/core/lv_refr.c ****         perf_monitor.frame_cnt = 0;
 4047              		.loc 1 380 32 is_stmt 0 view .LVU1345
 4048 01fc 3A4A     		ldr	r2, .L256+8
 4049 01fe 0021     		movs	r1, #0
 4050 0200 5160     		str	r1, [r2, #4]
 381:lvgl/src/core/lv_refr.c ****         if(fps > fps_limit) {
 4051              		.loc 1 381 9 is_stmt 1 view .LVU1346
 381:lvgl/src/core/lv_refr.c ****         if(fps > fps_limit) {
 4052              		.loc 1 381 32 is_stmt 0 view .LVU1347
 4053 0202 9160     		str	r1, [r2, #8]
 382:lvgl/src/core/lv_refr.c ****             fps = fps_limit;
 4054              		.loc 1 382 9 is_stmt 1 view .LVU1348
 382:lvgl/src/core/lv_refr.c ****             fps = fps_limit;
 4055              		.loc 1 382 11 is_stmt 0 view .LVU1349
 4056 0204 AB42     		cmp	r3, r5
 4057 0206 00D8     		bhi	.L247
 4058 0208 1D46     		mov	r5, r3
 4059              	.LVL363:
 4060              	.L247:
 386:lvgl/src/core/lv_refr.c ****         perf_monitor.fps_sum_cnt ++;
 4061              		.loc 1 386 9 is_stmt 1 view .LVU1350
 386:lvgl/src/core/lv_refr.c ****         perf_monitor.fps_sum_cnt ++;
 4062              		.loc 1 386 21 is_stmt 0 view .LVU1351
 4063 020a 374B     		ldr	r3, .L256+8
ARM GAS  C:\usertemp\ccxmAei4.s 			page 128


 4064 020c 1A69     		ldr	r2, [r3, #16]
 386:lvgl/src/core/lv_refr.c ****         perf_monitor.fps_sum_cnt ++;
 4065              		.loc 1 386 34 view .LVU1352
 4066 020e 2A44     		add	r2, r2, r5
 4067 0210 1A61     		str	r2, [r3, #16]
 387:lvgl/src/core/lv_refr.c ****         uint32_t cpu = 100 - lv_timer_get_idle();
 4068              		.loc 1 387 9 is_stmt 1 view .LVU1353
 387:lvgl/src/core/lv_refr.c ****         uint32_t cpu = 100 - lv_timer_get_idle();
 4069              		.loc 1 387 21 is_stmt 0 view .LVU1354
 4070 0212 DA68     		ldr	r2, [r3, #12]
 387:lvgl/src/core/lv_refr.c ****         uint32_t cpu = 100 - lv_timer_get_idle();
 4071              		.loc 1 387 34 view .LVU1355
 4072 0214 0132     		adds	r2, r2, #1
 4073 0216 DA60     		str	r2, [r3, #12]
 388:lvgl/src/core/lv_refr.c ****         lv_label_set_text_fmt(perf_label, "%"LV_PRIu32" FPS\n%"LV_PRIu32"%% CPU", fps, cpu);
 4074              		.loc 1 388 9 is_stmt 1 view .LVU1356
 388:lvgl/src/core/lv_refr.c ****         lv_label_set_text_fmt(perf_label, "%"LV_PRIu32" FPS\n%"LV_PRIu32"%% CPU", fps, cpu);
 4075              		.loc 1 388 30 is_stmt 0 view .LVU1357
 4076 0218 FFF7FEFF 		bl	lv_timer_get_idle
 4077              	.LVL364:
 389:lvgl/src/core/lv_refr.c ****     }
 4078              		.loc 1 389 9 is_stmt 1 view .LVU1358
 4079 021c C0F16403 		rsb	r3, r0, #100
 4080              	.LVL365:
 389:lvgl/src/core/lv_refr.c ****     }
 4081              		.loc 1 389 9 is_stmt 0 view .LVU1359
 4082 0220 2A46     		mov	r2, r5
 4083 0222 3449     		ldr	r1, .L256+20
 4084 0224 2046     		mov	r0, r4
 4085 0226 FFF7FEFF 		bl	lv_label_set_text_fmt
 4086              	.LVL366:
 389:lvgl/src/core/lv_refr.c ****     }
 4087              		.loc 1 389 9 view .LVU1360
 4088 022a 58E7     		b	.L244
 4089              	.LVL367:
 4090              	.L249:
 375:lvgl/src/core/lv_refr.c ****         }
 4091              		.loc 1 375 17 view .LVU1361
 4092 022c 2B46     		mov	r3, r5
 4093 022e E5E7     		b	.L246
 4094              	.LVL368:
 4095              	.L254:
 375:lvgl/src/core/lv_refr.c ****         }
 4096              		.loc 1 375 17 view .LVU1362
 4097              	.LBE117:
 396:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_bg_opa(mem_label, LV_OPA_50, 0);
 4098              		.loc 1 396 9 is_stmt 1 view .LVU1363
 396:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_bg_opa(mem_label, LV_OPA_50, 0);
 4099              		.loc 1 396 21 is_stmt 0 view .LVU1364
 4100 0230 FFF7FEFF 		bl	lv_layer_sys
 4101              	.LVL369:
 396:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_bg_opa(mem_label, LV_OPA_50, 0);
 4102              		.loc 1 396 21 discriminator 1 view .LVU1365
 4103 0234 FFF7FEFF 		bl	lv_label_create
 4104              	.LVL370:
 4105 0238 0446     		mov	r4, r0
 4106              	.LVL371:
ARM GAS  C:\usertemp\ccxmAei4.s 			page 129


 397:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_bg_color(mem_label, lv_color_black(), 0);
 4107              		.loc 1 397 9 is_stmt 1 view .LVU1366
 4108 023a 0022     		movs	r2, #0
 4109 023c 7F21     		movs	r1, #127
 4110 023e FFF7FEFF 		bl	lv_obj_set_style_bg_opa
 4111              	.LVL372:
 398:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_text_color(mem_label, lv_color_white(), 0);
 4112              		.loc 1 398 9 view .LVU1367
 4113              	.LBB118:
 4114              	.LBI118:
 697:lvgl/src/core/../misc/lv_color.h **** {
 4115              		.loc 4 697 26 view .LVU1368
 4116              		.loc 4 699 5 view .LVU1369
 4117              	.LBB119:
 4118              	.LBI119:
 592:lvgl/src/core/../misc/lv_color.h **** {
 4119              		.loc 4 592 26 view .LVU1370
 4120              	.LBB120:
 594:lvgl/src/core/../misc/lv_color.h **** }
 4121              		.loc 4 594 5 view .LVU1371
 594:lvgl/src/core/../misc/lv_color.h **** }
 4122              		.loc 4 594 12 is_stmt 0 view .LVU1372
 4123 0242 4FF00001 		mov	r1, #0	@ movhi
 4124 0246 21F01F01 		bic	r1, r1, #31
 4125 024a 21F4FC61 		bic	r1, r1, #2016
 4126 024e 21F47841 		bic	r1, r1, #63488
 4127              	.LVL373:
 594:lvgl/src/core/../misc/lv_color.h **** }
 4128              		.loc 4 594 12 view .LVU1373
 4129              	.LBE120:
 4130              	.LBE119:
 4131              	.LBE118:
 398:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_text_color(mem_label, lv_color_white(), 0);
 4132              		.loc 1 398 9 discriminator 1 view .LVU1374
 4133 0252 0022     		movs	r2, #0
 4134 0254 2046     		mov	r0, r4
 4135 0256 FFF7FEFF 		bl	lv_obj_set_style_bg_color
 4136              	.LVL374:
 399:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_pad_top(mem_label, 3, 0);
 4137              		.loc 1 399 9 is_stmt 1 view .LVU1375
 4138              	.LBB121:
 4139              	.LBI121:
 693:lvgl/src/core/../misc/lv_color.h **** {
 4140              		.loc 4 693 26 view .LVU1376
 695:lvgl/src/core/../misc/lv_color.h **** }
 4141              		.loc 4 695 5 view .LVU1377
 4142              	.LBB122:
 4143              	.LBI122:
 592:lvgl/src/core/../misc/lv_color.h **** {
 4144              		.loc 4 592 26 view .LVU1378
 4145              	.LBB123:
 594:lvgl/src/core/../misc/lv_color.h **** }
 4146              		.loc 4 594 5 view .LVU1379
 594:lvgl/src/core/../misc/lv_color.h **** }
 4147              		.loc 4 594 5 is_stmt 0 view .LVU1380
 4148              	.LBE123:
 4149              	.LBE122:
ARM GAS  C:\usertemp\ccxmAei4.s 			page 130


 4150              	.LBE121:
 399:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_pad_top(mem_label, 3, 0);
 4151              		.loc 1 399 9 discriminator 1 view .LVU1381
 4152 025a 0022     		movs	r2, #0
 4153 025c 4FF0FF31 		mov	r1, #-1	@ movhi
 4154 0260 2046     		mov	r0, r4
 4155 0262 FFF7FEFF 		bl	lv_obj_set_style_text_color
 4156              	.LVL375:
 400:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_pad_bottom(mem_label, 3, 0);
 4157              		.loc 1 400 9 is_stmt 1 view .LVU1382
 4158 0266 0022     		movs	r2, #0
 4159 0268 0321     		movs	r1, #3
 4160 026a 2046     		mov	r0, r4
 4161 026c FFF7FEFF 		bl	lv_obj_set_style_pad_top
 4162              	.LVL376:
 401:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_pad_left(mem_label, 3, 0);
 4163              		.loc 1 401 9 view .LVU1383
 4164 0270 0022     		movs	r2, #0
 4165 0272 0321     		movs	r1, #3
 4166 0274 2046     		mov	r0, r4
 4167 0276 FFF7FEFF 		bl	lv_obj_set_style_pad_bottom
 4168              	.LVL377:
 402:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_pad_right(mem_label, 3, 0);
 4169              		.loc 1 402 9 view .LVU1384
 4170 027a 0022     		movs	r2, #0
 4171 027c 0321     		movs	r1, #3
 4172 027e 2046     		mov	r0, r4
 4173 0280 FFF7FEFF 		bl	lv_obj_set_style_pad_left
 4174              	.LVL378:
 403:lvgl/src/core/lv_refr.c ****         lv_label_set_text(mem_label, "?");
 4175              		.loc 1 403 9 view .LVU1385
 4176 0284 0022     		movs	r2, #0
 4177 0286 0321     		movs	r1, #3
 4178 0288 2046     		mov	r0, r4
 4179 028a FFF7FEFF 		bl	lv_obj_set_style_pad_right
 4180              	.LVL379:
 404:lvgl/src/core/lv_refr.c ****         lv_obj_align(mem_label, LV_USE_MEM_MONITOR_POS, 0, 0);
 4181              		.loc 1 404 9 view .LVU1386
 4182 028e 1849     		ldr	r1, .L256+16
 4183 0290 2046     		mov	r0, r4
 4184 0292 FFF7FEFF 		bl	lv_label_set_text
 4185              	.LVL380:
 405:lvgl/src/core/lv_refr.c ****         mem_monitor.mem_label = mem_label;
 4186              		.loc 1 405 9 view .LVU1387
 4187 0296 0023     		movs	r3, #0
 4188 0298 1A46     		mov	r2, r3
 4189 029a 0421     		movs	r1, #4
 4190 029c 2046     		mov	r0, r4
 4191 029e FFF7FEFF 		bl	lv_obj_align
 4192              	.LVL381:
 406:lvgl/src/core/lv_refr.c ****     }
 4193              		.loc 1 406 9 view .LVU1388
 406:lvgl/src/core/lv_refr.c ****     }
 4194              		.loc 1 406 31 is_stmt 0 view .LVU1389
 4195 02a2 124B     		ldr	r3, .L256+12
 4196 02a4 5C60     		str	r4, [r3, #4]
 4197 02a6 1FE7     		b	.L248
ARM GAS  C:\usertemp\ccxmAei4.s 			page 131


 4198              	.L255:
 4199              	.LBB124:
 410:lvgl/src/core/lv_refr.c ****         lv_mem_monitor_t mon;
 4200              		.loc 1 410 9 is_stmt 1 view .LVU1390
 410:lvgl/src/core/lv_refr.c ****         lv_mem_monitor_t mon;
 4201              		.loc 1 410 37 is_stmt 0 view .LVU1391
 4202 02a8 FFF7FEFF 		bl	lv_tick_get
 4203              	.LVL382:
 410:lvgl/src/core/lv_refr.c ****         lv_mem_monitor_t mon;
 4204              		.loc 1 410 35 discriminator 1 view .LVU1392
 4205 02ac 0F4B     		ldr	r3, .L256+12
 4206 02ae 1860     		str	r0, [r3]
 411:lvgl/src/core/lv_refr.c ****         lv_mem_monitor(&mon);
 4207              		.loc 1 411 9 is_stmt 1 view .LVU1393
 412:lvgl/src/core/lv_refr.c ****         uint32_t used_size = mon.total_size - mon.free_size;;
 4208              		.loc 1 412 9 view .LVU1394
 4209 02b0 02A8     		add	r0, sp, #8
 4210 02b2 FFF7FEFF 		bl	lv_mem_monitor
 4211              	.LVL383:
 413:lvgl/src/core/lv_refr.c ****         uint32_t used_kb = used_size / 1024;
 4212              		.loc 1 413 9 view .LVU1395
 413:lvgl/src/core/lv_refr.c ****         uint32_t used_kb = used_size / 1024;
 4213              		.loc 1 413 18 is_stmt 0 view .LVU1396
 4214 02b6 029A     		ldr	r2, [sp, #8]
 4215 02b8 049B     		ldr	r3, [sp, #16]
 4216 02ba D21A     		subs	r2, r2, r3
 4217              	.LVL384:
 413:lvgl/src/core/lv_refr.c ****         uint32_t used_kb = used_size / 1024;
 4218              		.loc 1 413 61 is_stmt 1 view .LVU1397
 414:lvgl/src/core/lv_refr.c ****         uint32_t used_kb_tenth = (used_size - (used_kb * 1024)) / 102;
 4219              		.loc 1 414 9 view .LVU1398
 415:lvgl/src/core/lv_refr.c ****         lv_label_set_text_fmt(mem_label, "%" LV_PRIu32 ".%" LV_PRIu32 " kB used (%d %%)\n" \
 4220              		.loc 1 415 9 view .LVU1399
 415:lvgl/src/core/lv_refr.c ****         lv_label_set_text_fmt(mem_label, "%" LV_PRIu32 ".%" LV_PRIu32 " kB used (%d %%)\n" \
 4221              		.loc 1 415 18 is_stmt 0 view .LVU1400
 4222 02bc C2F30903 		ubfx	r3, r2, #0, #10
 4223 02c0 0D49     		ldr	r1, .L256+24
 4224 02c2 A1FB0313 		umull	r1, r3, r1, r3
 4225              	.LVL385:
 416:lvgl/src/core/lv_refr.c ****                               "%d%% frag.", used_kb, used_kb_tenth, mon.used_pct,
 4226              		.loc 1 416 9 is_stmt 1 view .LVU1401
 417:lvgl/src/core/lv_refr.c ****                               mon.frag_pct);
 4227              		.loc 1 417 72 is_stmt 0 view .LVU1402
 4228 02c6 9DF82010 		ldrb	r1, [sp, #32]	@ zero_extendqisi2
 418:lvgl/src/core/lv_refr.c ****     }
 4229              		.loc 1 418 34 view .LVU1403
 4230 02ca 9DF82100 		ldrb	r0, [sp, #33]	@ zero_extendqisi2
 416:lvgl/src/core/lv_refr.c ****                               "%d%% frag.", used_kb, used_kb_tenth, mon.used_pct,
 4231              		.loc 1 416 9 view .LVU1404
 4232 02ce 0190     		str	r0, [sp, #4]
 4233 02d0 0091     		str	r1, [sp]
 4234 02d2 9B09     		lsrs	r3, r3, #6
 4235              	.LVL386:
 416:lvgl/src/core/lv_refr.c ****                               "%d%% frag.", used_kb, used_kb_tenth, mon.used_pct,
 4236              		.loc 1 416 9 view .LVU1405
 4237 02d4 920A     		lsrs	r2, r2, #10
 4238              	.LVL387:
ARM GAS  C:\usertemp\ccxmAei4.s 			page 132


 416:lvgl/src/core/lv_refr.c ****                               "%d%% frag.", used_kb, used_kb_tenth, mon.used_pct,
 4239              		.loc 1 416 9 view .LVU1406
 4240 02d6 0949     		ldr	r1, .L256+28
 4241 02d8 2046     		mov	r0, r4
 4242 02da FFF7FEFF 		bl	lv_label_set_text_fmt
 4243              	.LVL388:
 416:lvgl/src/core/lv_refr.c ****                               "%d%% frag.", used_kb, used_kb_tenth, mon.used_pct,
 4244              		.loc 1 416 9 view .LVU1407
 4245              	.LBE124:
 422:lvgl/src/core/lv_refr.c **** }
 4246              		.loc 1 422 5 is_stmt 1 view .LVU1408
 422:lvgl/src/core/lv_refr.c **** }
 4247              		.loc 1 422 5 view .LVU1409
 422:lvgl/src/core/lv_refr.c **** }
 4248              		.loc 1 422 5 view .LVU1410
 4249 02de 0BE7     		b	.L234
 4250              	.L257:
 4251              		.align	2
 4252              	.L256:
 4253 02e0 00000000 		.word	disp_refr
 4254 02e4 00000000 		.word	px_num
 4255 02e8 00000000 		.word	perf_monitor
 4256 02ec 00000000 		.word	mem_monitor
 4257 02f0 00000000 		.word	.LC0
 4258 02f4 04000000 		.word	.LC1
 4259 02f8 A1A0A0A0 		.word	-1600085855
 4260 02fc 18000000 		.word	.LC2
 4261              		.cfi_endproc
 4262              	.LFE168:
 4264              		.section	.text.lv_refr_now,"ax",%progbits
 4265              		.align	1
 4266              		.global	lv_refr_now
 4267              		.syntax unified
 4268              		.thumb
 4269              		.thumb_func
 4271              	lv_refr_now:
 4272              	.LVL389:
 4273              	.LFB163:
 111:lvgl/src/core/lv_refr.c ****     lv_anim_refr_now();
 4274              		.loc 1 111 1 view -0
 4275              		.cfi_startproc
 4276              		@ args = 0, pretend = 0, frame = 0
 4277              		@ frame_needed = 0, uses_anonymous_args = 0
 111:lvgl/src/core/lv_refr.c ****     lv_anim_refr_now();
 4278              		.loc 1 111 1 is_stmt 0 view .LVU1412
 4279 0000 10B5     		push	{r4, lr}
 4280              	.LCFI46:
 4281              		.cfi_def_cfa_offset 8
 4282              		.cfi_offset 4, -8
 4283              		.cfi_offset 14, -4
 4284 0002 0446     		mov	r4, r0
 112:lvgl/src/core/lv_refr.c **** 
 4285              		.loc 1 112 5 is_stmt 1 view .LVU1413
 4286 0004 FFF7FEFF 		bl	lv_anim_refr_now
 4287              	.LVL390:
 114:lvgl/src/core/lv_refr.c ****         if(disp->refr_timer) _lv_disp_refr_timer(disp->refr_timer);
 4288              		.loc 1 114 5 view .LVU1414
ARM GAS  C:\usertemp\ccxmAei4.s 			page 133


 114:lvgl/src/core/lv_refr.c ****         if(disp->refr_timer) _lv_disp_refr_timer(disp->refr_timer);
 4289              		.loc 1 114 7 is_stmt 0 view .LVU1415
 4290 0008 24B1     		cbz	r4, .L259
 115:lvgl/src/core/lv_refr.c ****     }
 4291              		.loc 1 115 9 is_stmt 1 view .LVU1416
 115:lvgl/src/core/lv_refr.c ****     }
 4292              		.loc 1 115 16 is_stmt 0 view .LVU1417
 4293 000a 6068     		ldr	r0, [r4, #4]
 115:lvgl/src/core/lv_refr.c ****     }
 4294              		.loc 1 115 11 view .LVU1418
 4295 000c 08B1     		cbz	r0, .L258
 115:lvgl/src/core/lv_refr.c ****     }
 4296              		.loc 1 115 30 is_stmt 1 discriminator 1 view .LVU1419
 4297 000e FFF7FEFF 		bl	_lv_disp_refr_timer
 4298              	.LVL391:
 4299              	.L258:
 125:lvgl/src/core/lv_refr.c **** 
 4300              		.loc 1 125 1 is_stmt 0 view .LVU1420
 4301 0012 10BD     		pop	{r4, pc}
 4302              	.LVL392:
 4303              	.L259:
 4304              	.LBB125:
 118:lvgl/src/core/lv_refr.c ****         d = lv_disp_get_next(NULL);
 4305              		.loc 1 118 9 is_stmt 1 view .LVU1421
 119:lvgl/src/core/lv_refr.c ****         while(d) {
 4306              		.loc 1 119 9 view .LVU1422
 119:lvgl/src/core/lv_refr.c ****         while(d) {
 4307              		.loc 1 119 13 is_stmt 0 view .LVU1423
 4308 0014 0020     		movs	r0, #0
 4309 0016 FFF7FEFF 		bl	lv_disp_get_next
 4310              	.LVL393:
 4311 001a 0446     		mov	r4, r0
 4312              	.LVL394:
 120:lvgl/src/core/lv_refr.c ****             if(d->refr_timer) _lv_disp_refr_timer(d->refr_timer);
 4313              		.loc 1 120 9 is_stmt 1 view .LVU1424
 120:lvgl/src/core/lv_refr.c ****             if(d->refr_timer) _lv_disp_refr_timer(d->refr_timer);
 4314              		.loc 1 120 14 is_stmt 0 view .LVU1425
 4315 001c 03E0     		b	.L261
 4316              	.LVL395:
 4317              	.L262:
 122:lvgl/src/core/lv_refr.c ****         }
 4318              		.loc 1 122 13 is_stmt 1 view .LVU1426
 122:lvgl/src/core/lv_refr.c ****         }
 4319              		.loc 1 122 17 is_stmt 0 view .LVU1427
 4320 001e 2046     		mov	r0, r4
 4321 0020 FFF7FEFF 		bl	lv_disp_get_next
 4322              	.LVL396:
 4323 0024 0446     		mov	r4, r0
 4324              	.LVL397:
 4325              	.L261:
 120:lvgl/src/core/lv_refr.c ****             if(d->refr_timer) _lv_disp_refr_timer(d->refr_timer);
 4326              		.loc 1 120 15 is_stmt 1 view .LVU1428
 4327 0026 002C     		cmp	r4, #0
 4328 0028 F3D0     		beq	.L258
 121:lvgl/src/core/lv_refr.c ****             d = lv_disp_get_next(d);
 4329              		.loc 1 121 13 view .LVU1429
 121:lvgl/src/core/lv_refr.c ****             d = lv_disp_get_next(d);
ARM GAS  C:\usertemp\ccxmAei4.s 			page 134


 4330              		.loc 1 121 17 is_stmt 0 view .LVU1430
 4331 002a 6068     		ldr	r0, [r4, #4]
 4332              	.LVL398:
 121:lvgl/src/core/lv_refr.c ****             d = lv_disp_get_next(d);
 4333              		.loc 1 121 15 view .LVU1431
 4334 002c 0028     		cmp	r0, #0
 4335 002e F6D0     		beq	.L262
 121:lvgl/src/core/lv_refr.c ****             d = lv_disp_get_next(d);
 4336              		.loc 1 121 31 is_stmt 1 discriminator 1 view .LVU1432
 4337 0030 FFF7FEFF 		bl	_lv_disp_refr_timer
 4338              	.LVL399:
 4339 0034 F3E7     		b	.L262
 4340              	.LBE125:
 4341              		.cfi_endproc
 4342              	.LFE163:
 4344              		.section	.text.lv_refr_reset_fps_counter,"ax",%progbits
 4345              		.align	1
 4346              		.global	lv_refr_reset_fps_counter
 4347              		.syntax unified
 4348              		.thumb
 4349              		.thumb_func
 4351              	lv_refr_reset_fps_counter:
 4352              	.LFB169:
 427:lvgl/src/core/lv_refr.c ****     perf_monitor.fps_sum_all = 0;
 4353              		.loc 1 427 1 view -0
 4354              		.cfi_startproc
 4355              		@ args = 0, pretend = 0, frame = 0
 4356              		@ frame_needed = 0, uses_anonymous_args = 0
 4357              		@ link register save eliminated.
 428:lvgl/src/core/lv_refr.c ****     perf_monitor.fps_sum_cnt = 0;
 4358              		.loc 1 428 5 view .LVU1434
 428:lvgl/src/core/lv_refr.c ****     perf_monitor.fps_sum_cnt = 0;
 4359              		.loc 1 428 30 is_stmt 0 view .LVU1435
 4360 0000 024B     		ldr	r3, .L266
 4361 0002 0022     		movs	r2, #0
 4362 0004 1A61     		str	r2, [r3, #16]
 429:lvgl/src/core/lv_refr.c **** }
 4363              		.loc 1 429 5 is_stmt 1 view .LVU1436
 429:lvgl/src/core/lv_refr.c **** }
 4364              		.loc 1 429 30 is_stmt 0 view .LVU1437
 4365 0006 DA60     		str	r2, [r3, #12]
 430:lvgl/src/core/lv_refr.c **** 
 4366              		.loc 1 430 1 view .LVU1438
 4367 0008 7047     		bx	lr
 4368              	.L267:
 4369 000a 00BF     		.align	2
 4370              	.L266:
 4371 000c 00000000 		.word	perf_monitor
 4372              		.cfi_endproc
 4373              	.LFE169:
 4375              		.section	.text.lv_refr_get_fps_avg,"ax",%progbits
 4376              		.align	1
 4377              		.global	lv_refr_get_fps_avg
 4378              		.syntax unified
 4379              		.thumb
 4380              		.thumb_func
 4382              	lv_refr_get_fps_avg:
ARM GAS  C:\usertemp\ccxmAei4.s 			page 135


 4383              	.LFB170:
 433:lvgl/src/core/lv_refr.c ****     if(perf_monitor.fps_sum_cnt == 0) {
 4384              		.loc 1 433 1 is_stmt 1 view -0
 4385              		.cfi_startproc
 4386              		@ args = 0, pretend = 0, frame = 0
 4387              		@ frame_needed = 0, uses_anonymous_args = 0
 4388              		@ link register save eliminated.
 434:lvgl/src/core/lv_refr.c ****         return 0;
 4389              		.loc 1 434 5 view .LVU1440
 434:lvgl/src/core/lv_refr.c ****         return 0;
 4390              		.loc 1 434 20 is_stmt 0 view .LVU1441
 4391 0000 034B     		ldr	r3, .L270
 4392 0002 D868     		ldr	r0, [r3, #12]
 434:lvgl/src/core/lv_refr.c ****         return 0;
 4393              		.loc 1 434 7 view .LVU1442
 4394 0004 10B1     		cbz	r0, .L268
 437:lvgl/src/core/lv_refr.c **** }
 4395              		.loc 1 437 5 is_stmt 1 view .LVU1443
 437:lvgl/src/core/lv_refr.c **** }
 4396              		.loc 1 437 24 is_stmt 0 view .LVU1444
 4397 0006 1B69     		ldr	r3, [r3, #16]
 437:lvgl/src/core/lv_refr.c **** }
 4398              		.loc 1 437 37 view .LVU1445
 4399 0008 B3FBF0F0 		udiv	r0, r3, r0
 4400              	.L268:
 438:lvgl/src/core/lv_refr.c **** #endif
 4401              		.loc 1 438 1 view .LVU1446
 4402 000c 7047     		bx	lr
 4403              	.L271:
 4404 000e 00BF     		.align	2
 4405              	.L270:
 4406 0010 00000000 		.word	perf_monitor
 4407              		.cfi_endproc
 4408              	.LFE170:
 4410              		.section	.bss.mem_monitor,"aw",%nobits
 4411              		.align	2
 4414              	mem_monitor:
 4415 0000 00000000 		.space	8
 4415      00000000 
 4416              		.section	.bss.perf_monitor,"aw",%nobits
 4417              		.align	2
 4420              	perf_monitor:
 4421 0000 00000000 		.space	24
 4421      00000000 
 4421      00000000 
 4421      00000000 
 4421      00000000 
 4422              		.section	.bss.disp_refr,"aw",%nobits
 4423              		.align	2
 4426              	disp_refr:
 4427 0000 00000000 		.space	4
 4428              		.section	.bss.px_num,"aw",%nobits
 4429              		.align	2
 4432              	px_num:
 4433 0000 00000000 		.space	4
 4434              		.text
 4435              	.Letext0:
ARM GAS  C:\usertemp\ccxmAei4.s 			page 136


 4436              		.file 5 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/lib/gcc/arm-none
 4437              		.file 6 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 4438              		.file 7 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 4439              		.file 8 "lvgl/src/core/../misc/../font/lv_font.h"
 4440              		.file 9 "lvgl/src/core/../misc/lv_types.h"
 4441              		.file 10 "lvgl/src/core/../misc/lv_mem.h"
 4442              		.file 11 "lvgl/src/core/../misc/lv_txt.h"
 4443              		.file 12 "lvgl/src/core/../misc/lv_bidi.h"
 4444              		.file 13 "lvgl/src/core/../misc/lv_style.h"
 4445              		.file 14 "lvgl/src/core/../hal/../draw/lv_img_buf.h"
 4446              		.file 15 "lvgl/src/core/lv_obj.h"
 4447              		.file 16 "lvgl/src/core/../hal/../draw/lv_draw_rect.h"
 4448              		.file 17 "lvgl/src/core/../hal/../draw/lv_draw_label.h"
 4449              		.file 18 "lvgl/src/core/../hal/../draw/lv_draw_img.h"
 4450              		.file 19 "lvgl/src/core/../hal/../draw/lv_draw_line.h"
 4451              		.file 20 "lvgl/src/core/../hal/../draw/lv_draw_arc.h"
 4452              		.file 21 "lvgl/src/core/../hal/../draw/lv_draw.h"
 4453              		.file 22 "lvgl/src/core/../hal/../misc/lv_ll.h"
 4454              		.file 23 "lvgl/src/core/../hal/../misc/lv_timer.h"
 4455              		.file 24 "lvgl/src/core/../hal/lv_hal_disp.h"
 4456              		.file 25 "lvgl/src/core/lv_theme.h"
 4457              		.file 26 "lvgl/src/core/lv_group.h"
 4458              		.file 27 "lvgl/src/core/lv_obj_scroll.h"
 4459              		.file 28 "lvgl/src/core/lv_obj_style.h"
 4460              		.file 29 "lvgl/src/core/lv_obj_draw.h"
 4461              		.file 30 "lvgl/src/core/lv_obj_class.h"
 4462              		.file 31 "lvgl/src/core/lv_event.h"
 4463              		.file 32 "lvgl/src/core/lv_obj_tree.h"
 4464              		.file 33 "lvgl/src/core/../hal/../draw/lv_img_decoder.h"
 4465              		.file 34 "lvgl/src/core/../widgets/lv_label.h"
 4466              		.file 35 "lvgl/src/core/../hal/../draw/sw/../../core/lv_obj_pos.h"
 4467              		.file 36 "lvgl/src/core/lv_obj_style_gen.h"
 4468              		.file 37 "lvgl/src/core/../hal/../draw/lv_draw_mask.h"
 4469              		.file 38 "lvgl/src/core/../font/lv_font_fmt_txt.h"
 4470              		.file 39 "lvgl/src/core/../hal/lv_hal_tick.h"
 4471              		.file 40 "lvgl/src/core/../misc/lv_anim.h"
ARM GAS  C:\usertemp\ccxmAei4.s 			page 137


DEFINED SYMBOLS
                            *ABS*:00000000 lv_refr.c
C:\usertemp\ccxmAei4.s:20     .text.get_max_row:00000000 $t
C:\usertemp\ccxmAei4.s:25     .text.get_max_row:00000000 get_max_row
C:\usertemp\ccxmAei4.s:182    .text.get_max_row:00000074 $d
C:\usertemp\ccxmAei4.s:4426   .bss.disp_refr:00000000 disp_refr
C:\usertemp\ccxmAei4.s:188    .text.draw_buf_rotate_180:00000000 $t
C:\usertemp\ccxmAei4.s:193    .text.draw_buf_rotate_180:00000000 draw_buf_rotate_180
C:\usertemp\ccxmAei4.s:353    .text.draw_buf_rotate_90:00000000 $t
C:\usertemp\ccxmAei4.s:358    .text.draw_buf_rotate_90:00000000 draw_buf_rotate_90
C:\usertemp\ccxmAei4.s:480    .text.draw_buf_rotate_90_sqr:00000000 $t
C:\usertemp\ccxmAei4.s:485    .text.draw_buf_rotate_90_sqr:00000000 draw_buf_rotate_90_sqr
C:\usertemp\ccxmAei4.s:685    .text.call_flush_cb:00000000 $t
C:\usertemp\ccxmAei4.s:690    .text.call_flush_cb:00000000 call_flush_cb
C:\usertemp\ccxmAei4.s:756    .text.perf_monitor_init:00000000 $t
C:\usertemp\ccxmAei4.s:761    .text.perf_monitor_init:00000000 perf_monitor_init
C:\usertemp\ccxmAei4.s:806    .text.mem_monitor_init:00000000 $t
C:\usertemp\ccxmAei4.s:811    .text.mem_monitor_init:00000000 mem_monitor_init
C:\usertemp\ccxmAei4.s:844    .text.lv_refr_get_top_obj:00000000 $t
C:\usertemp\ccxmAei4.s:849    .text.lv_refr_get_top_obj:00000000 lv_refr_get_top_obj
C:\usertemp\ccxmAei4.s:1007   .text.lv_refr_join_area:00000000 $t
C:\usertemp\ccxmAei4.s:1012   .text.lv_refr_join_area:00000000 lv_refr_join_area
C:\usertemp\ccxmAei4.s:1195   .text.lv_refr_join_area:000000d0 $d
C:\usertemp\ccxmAei4.s:1200   .text.lv_layer_sys:00000000 $t
C:\usertemp\ccxmAei4.s:1205   .text.lv_layer_sys:00000000 lv_layer_sys
C:\usertemp\ccxmAei4.s:1230   .text.draw_buf_rotate:00000000 $t
C:\usertemp\ccxmAei4.s:1235   .text.draw_buf_rotate:00000000 draw_buf_rotate
C:\usertemp\ccxmAei4.s:1707   .text.draw_buf_rotate:00000220 $d
C:\usertemp\ccxmAei4.s:1713   .text.draw_buf_flush:00000000 $t
C:\usertemp\ccxmAei4.s:1718   .text.draw_buf_flush:00000000 draw_buf_flush
C:\usertemp\ccxmAei4.s:1901   .text.draw_buf_flush:000000a8 $d
C:\usertemp\ccxmAei4.s:1906   .text._lv_refr_init:00000000 $t
C:\usertemp\ccxmAei4.s:1912   .text._lv_refr_init:00000000 _lv_refr_init
C:\usertemp\ccxmAei4.s:1936   .text._lv_refr_init:00000010 $d
C:\usertemp\ccxmAei4.s:4420   .bss.perf_monitor:00000000 perf_monitor
C:\usertemp\ccxmAei4.s:4414   .bss.mem_monitor:00000000 mem_monitor
C:\usertemp\ccxmAei4.s:1942   .text.lv_refr_obj:00000000 $t
C:\usertemp\ccxmAei4.s:1948   .text.lv_refr_obj:00000000 lv_refr_obj
C:\usertemp\ccxmAei4.s:2159   .text.lv_refr_obj_and_children:00000000 $t
C:\usertemp\ccxmAei4.s:2164   .text.lv_refr_obj_and_children:00000000 lv_refr_obj_and_children
C:\usertemp\ccxmAei4.s:2328   .text.lv_refr_obj_and_children:00000088 $d
C:\usertemp\ccxmAei4.s:2334   .text.lv_refr_area_part:00000000 $t
C:\usertemp\ccxmAei4.s:2339   .text.lv_refr_area_part:00000000 lv_refr_area_part
C:\usertemp\ccxmAei4.s:2676   .text.lv_refr_area_part:00000160 $d
C:\usertemp\ccxmAei4.s:2681   .text.lv_refr_area:00000000 $t
C:\usertemp\ccxmAei4.s:2686   .text.lv_refr_area:00000000 lv_refr_area
C:\usertemp\ccxmAei4.s:3066   .text.lv_refr_area:00000190 $d
C:\usertemp\ccxmAei4.s:3071   .text.lv_refr_areas:00000000 $t
C:\usertemp\ccxmAei4.s:3076   .text.lv_refr_areas:00000000 lv_refr_areas
C:\usertemp\ccxmAei4.s:3226   .text.lv_refr_areas:0000009c $d
C:\usertemp\ccxmAei4.s:4432   .bss.px_num:00000000 px_num
C:\usertemp\ccxmAei4.s:3232   .text._lv_inv_area:00000000 $t
C:\usertemp\ccxmAei4.s:3238   .text._lv_inv_area:00000000 _lv_inv_area
C:\usertemp\ccxmAei4.s:3511   .text._lv_refr_get_disp_refreshing:00000000 $t
C:\usertemp\ccxmAei4.s:3517   .text._lv_refr_get_disp_refreshing:00000000 _lv_refr_get_disp_refreshing
C:\usertemp\ccxmAei4.s:3532   .text._lv_refr_get_disp_refreshing:00000008 $d
C:\usertemp\ccxmAei4.s:3537   .text._lv_refr_set_disp_refreshing:00000000 $t
ARM GAS  C:\usertemp\ccxmAei4.s 			page 138


C:\usertemp\ccxmAei4.s:3543   .text._lv_refr_set_disp_refreshing:00000000 _lv_refr_set_disp_refreshing
C:\usertemp\ccxmAei4.s:3560   .text._lv_refr_set_disp_refreshing:00000008 $d
C:\usertemp\ccxmAei4.s:3565   .rodata._lv_disp_refr_timer.str1.4:00000000 $d
C:\usertemp\ccxmAei4.s:3575   .text._lv_disp_refr_timer:00000000 $t
C:\usertemp\ccxmAei4.s:3581   .text._lv_disp_refr_timer:00000000 _lv_disp_refr_timer
C:\usertemp\ccxmAei4.s:4253   .text._lv_disp_refr_timer:000002e0 $d
C:\usertemp\ccxmAei4.s:4265   .text.lv_refr_now:00000000 $t
C:\usertemp\ccxmAei4.s:4271   .text.lv_refr_now:00000000 lv_refr_now
C:\usertemp\ccxmAei4.s:4345   .text.lv_refr_reset_fps_counter:00000000 $t
C:\usertemp\ccxmAei4.s:4351   .text.lv_refr_reset_fps_counter:00000000 lv_refr_reset_fps_counter
C:\usertemp\ccxmAei4.s:4371   .text.lv_refr_reset_fps_counter:0000000c $d
C:\usertemp\ccxmAei4.s:4376   .text.lv_refr_get_fps_avg:00000000 $t
C:\usertemp\ccxmAei4.s:4382   .text.lv_refr_get_fps_avg:00000000 lv_refr_get_fps_avg
C:\usertemp\ccxmAei4.s:4406   .text.lv_refr_get_fps_avg:00000010 $d
C:\usertemp\ccxmAei4.s:4411   .bss.mem_monitor:00000000 $d
C:\usertemp\ccxmAei4.s:4417   .bss.perf_monitor:00000000 $d
C:\usertemp\ccxmAei4.s:4423   .bss.disp_refr:00000000 $d
C:\usertemp\ccxmAei4.s:4429   .bss.px_num:00000000 $d

UNDEFINED SYMBOLS
_lv_area_is_in
lv_obj_has_flag
lv_event_send
lv_obj_get_child_cnt
_lv_area_is_on
_lv_area_join
lv_area_get_size
lv_disp_get_default
lv_disp_get_layer_sys
lv_disp_get_draw_buf
lv_mem_buf_get
lv_mem_buf_release
lv_obj_get_coords
_lv_obj_get_ext_draw_size
lv_area_increase
_lv_area_intersect
lv_obj_get_parent
lv_disp_get_scr_act
lv_draw_rect_dsc_init
lv_disp_get_layer_top
lv_img_decoder_get_info
lv_area_set
lv_draw_img_dsc_init
lv_draw_img
lv_draw_rect
lv_disp_get_ver_res
lv_disp_get_hor_res
lv_timer_resume
lv_tick_get
lv_obj_update_layout
lv_memset_00
lv_tick_elaps
lv_mem_buf_free_all
_lv_font_clean_up_fmt_txt
_lv_draw_mask_cleanup
lv_label_create
lv_obj_set_style_bg_opa
ARM GAS  C:\usertemp\ccxmAei4.s 			page 139


lv_obj_set_style_bg_color
lv_obj_set_style_text_color
lv_obj_set_style_pad_top
lv_obj_set_style_pad_bottom
lv_obj_set_style_pad_left
lv_obj_set_style_pad_right
lv_obj_set_style_text_align
lv_label_set_text
lv_obj_align
lv_timer_get_idle
lv_label_set_text_fmt
lv_mem_monitor
lv_anim_refr_now
lv_disp_get_next
