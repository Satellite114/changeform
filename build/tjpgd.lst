ARM GAS  C:\usertemp\ccNGkTCU.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"tjpgd.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "lvgl/src/extra/libs/sjpg/tjpgd.c"
  19              		.section	.text.alloc_pool,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	alloc_pool:
  26              	.LVL0:
  27              	.LFB0:
   1:lvgl/src/extra/libs/sjpg/tjpgd.c **** /*----------------------------------------------------------------------------/
   2:lvgl/src/extra/libs/sjpg/tjpgd.c **** / TJpgDec - Tiny JPEG Decompressor R0.03                      (C)ChaN, 2021
   3:lvgl/src/extra/libs/sjpg/tjpgd.c **** /-----------------------------------------------------------------------------/
   4:lvgl/src/extra/libs/sjpg/tjpgd.c **** / The TJpgDec is a generic JPEG decompressor module for tiny embedded systems.
   5:lvgl/src/extra/libs/sjpg/tjpgd.c **** / This is a free software that opened for education, research and commercial
   6:lvgl/src/extra/libs/sjpg/tjpgd.c **** /  developments under license policy of following terms.
   7:lvgl/src/extra/libs/sjpg/tjpgd.c **** /
   8:lvgl/src/extra/libs/sjpg/tjpgd.c **** /  Copyright (C) 2021, ChaN, all right reserved.
   9:lvgl/src/extra/libs/sjpg/tjpgd.c **** /
  10:lvgl/src/extra/libs/sjpg/tjpgd.c **** / * The TJpgDec module is a free software and there is NO WARRANTY.
  11:lvgl/src/extra/libs/sjpg/tjpgd.c **** / * No restriction on use. You can use, modify and redistribute it for
  12:lvgl/src/extra/libs/sjpg/tjpgd.c **** /   personal, non-profit or commercial products UNDER YOUR RESPONSIBILITY.
  13:lvgl/src/extra/libs/sjpg/tjpgd.c **** / * Redistributions of source code must retain the above copyright notice.
  14:lvgl/src/extra/libs/sjpg/tjpgd.c **** /
  15:lvgl/src/extra/libs/sjpg/tjpgd.c **** /-----------------------------------------------------------------------------/
  16:lvgl/src/extra/libs/sjpg/tjpgd.c **** / Oct 04, 2011 R0.01  First release.
  17:lvgl/src/extra/libs/sjpg/tjpgd.c **** / Feb 19, 2012 R0.01a Fixed decompression fails when scan starts with an escape seq.
  18:lvgl/src/extra/libs/sjpg/tjpgd.c **** / Sep 03, 2012 R0.01b Added JD_TBLCLIP option.
  19:lvgl/src/extra/libs/sjpg/tjpgd.c **** / Mar 16, 2019 R0.01c Supprted stdint.h.
  20:lvgl/src/extra/libs/sjpg/tjpgd.c **** / Jul 01, 2020 R0.01d Fixed wrong integer type usage.
  21:lvgl/src/extra/libs/sjpg/tjpgd.c **** / May 08, 2021 R0.02  Supprted grayscale image. Separated configuration options.
  22:lvgl/src/extra/libs/sjpg/tjpgd.c **** / Jun 11, 2021 R0.02a Some performance improvement.
  23:lvgl/src/extra/libs/sjpg/tjpgd.c **** / Jul 01, 2021 R0.03  Added JD_FASTDECODE option.
  24:lvgl/src/extra/libs/sjpg/tjpgd.c **** /                     Some performance improvement.
  25:lvgl/src/extra/libs/sjpg/tjpgd.c **** /----------------------------------------------------------------------------*/
  26:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
  27:lvgl/src/extra/libs/sjpg/tjpgd.c **** #include "tjpgd.h"
  28:lvgl/src/extra/libs/sjpg/tjpgd.c **** #if LV_USE_SJPG
  29:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
  30:lvgl/src/extra/libs/sjpg/tjpgd.c **** #if JD_FASTDECODE == 2
  31:lvgl/src/extra/libs/sjpg/tjpgd.c **** #define HUFF_BIT	10	/* Bit length to apply fast huffman decode */
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 2


  32:lvgl/src/extra/libs/sjpg/tjpgd.c **** #define HUFF_LEN	(1 << HUFF_BIT)
  33:lvgl/src/extra/libs/sjpg/tjpgd.c **** #define HUFF_MASK	(HUFF_LEN - 1)
  34:lvgl/src/extra/libs/sjpg/tjpgd.c **** #endif
  35:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
  36:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
  37:lvgl/src/extra/libs/sjpg/tjpgd.c **** /*-----------------------------------------------*/
  38:lvgl/src/extra/libs/sjpg/tjpgd.c **** /* Zigzag-order to raster-order conversion table */
  39:lvgl/src/extra/libs/sjpg/tjpgd.c **** /*-----------------------------------------------*/
  40:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
  41:lvgl/src/extra/libs/sjpg/tjpgd.c **** static const uint8_t Zig[64] = {	/* Zigzag-order to raster-order conversion table */
  42:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	 0,  1,  8, 16,  9,  2,  3, 10, 17, 24, 32, 25, 18, 11,  4,  5,
  43:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13,  6,  7, 14, 21, 28,
  44:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51,
  45:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63
  46:lvgl/src/extra/libs/sjpg/tjpgd.c **** };
  47:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
  48:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
  49:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
  50:lvgl/src/extra/libs/sjpg/tjpgd.c **** /*-------------------------------------------------*/
  51:lvgl/src/extra/libs/sjpg/tjpgd.c **** /* Input scale factor of Arai algorithm            */
  52:lvgl/src/extra/libs/sjpg/tjpgd.c **** /* (scaled up 16 bits for fixed point operations)  */
  53:lvgl/src/extra/libs/sjpg/tjpgd.c **** /*-------------------------------------------------*/
  54:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
  55:lvgl/src/extra/libs/sjpg/tjpgd.c **** static const uint16_t Ipsf[64] = {	/* See also aa_idct.png */
  56:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	(uint16_t)(1.00000*8192), (uint16_t)(1.38704*8192), (uint16_t)(1.30656*8192), (uint16_t)(1.17588*8
  57:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	(uint16_t)(1.38704*8192), (uint16_t)(1.92388*8192), (uint16_t)(1.81226*8192), (uint16_t)(1.63099*8
  58:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	(uint16_t)(1.30656*8192), (uint16_t)(1.81226*8192), (uint16_t)(1.70711*8192), (uint16_t)(1.53636*8
  59:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	(uint16_t)(1.17588*8192), (uint16_t)(1.63099*8192), (uint16_t)(1.53636*8192), (uint16_t)(1.38268*8
  60:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	(uint16_t)(1.00000*8192), (uint16_t)(1.38704*8192), (uint16_t)(1.30656*8192), (uint16_t)(1.17588*8
  61:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	(uint16_t)(0.78570*8192), (uint16_t)(1.08979*8192), (uint16_t)(1.02656*8192), (uint16_t)(0.92388*8
  62:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	(uint16_t)(0.54120*8192), (uint16_t)(0.75066*8192), (uint16_t)(0.70711*8192), (uint16_t)(0.63638*8
  63:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	(uint16_t)(0.27590*8192), (uint16_t)(0.38268*8192), (uint16_t)(0.36048*8192), (uint16_t)(0.32442*8
  64:lvgl/src/extra/libs/sjpg/tjpgd.c **** };
  65:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
  66:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
  67:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
  68:lvgl/src/extra/libs/sjpg/tjpgd.c **** /*---------------------------------------------*/
  69:lvgl/src/extra/libs/sjpg/tjpgd.c **** /* Conversion table for fast clipping process  */
  70:lvgl/src/extra/libs/sjpg/tjpgd.c **** /*---------------------------------------------*/
  71:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
  72:lvgl/src/extra/libs/sjpg/tjpgd.c **** #if JD_TBLCLIP
  73:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
  74:lvgl/src/extra/libs/sjpg/tjpgd.c **** #define BYTECLIP(v) Clip8[(unsigned int)(v) & 0x3FF]
  75:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
  76:lvgl/src/extra/libs/sjpg/tjpgd.c **** static const uint8_t Clip8[1024] = {
  77:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	/* 0..255 */
  78:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 
  79:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56
  80:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88
  81:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 11
  82:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147
  83:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179
  84:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211
  85:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243
  86:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	/* 256..511 */
  87:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
  88:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 3


  89:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
  90:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
  91:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
  92:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
  93:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
  94:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
  95:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	/* -512..-257 */
  96:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  97:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  98:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  99:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 100:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 101:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 102:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 103:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 104:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	/* -256..-1 */
 105:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 106:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 107:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 108:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 109:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 110:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 111:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
 112:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
 113:lvgl/src/extra/libs/sjpg/tjpgd.c **** };
 114:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 115:lvgl/src/extra/libs/sjpg/tjpgd.c **** #else	/* JD_TBLCLIP */
 116:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 117:lvgl/src/extra/libs/sjpg/tjpgd.c **** static uint8_t BYTECLIP (int val)
 118:lvgl/src/extra/libs/sjpg/tjpgd.c **** {
 119:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	if (val < 0) return 0;
 120:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	if (val > 255) return 255;
 121:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	return (uint8_t)val;
 122:lvgl/src/extra/libs/sjpg/tjpgd.c **** }
 123:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 124:lvgl/src/extra/libs/sjpg/tjpgd.c **** #endif
 125:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 126:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 127:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 128:lvgl/src/extra/libs/sjpg/tjpgd.c **** /*-----------------------------------------------------------------------*/
 129:lvgl/src/extra/libs/sjpg/tjpgd.c **** /* Allocate a memory block from memory pool                              */
 130:lvgl/src/extra/libs/sjpg/tjpgd.c **** /*-----------------------------------------------------------------------*/
 131:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 132:lvgl/src/extra/libs/sjpg/tjpgd.c **** static void* alloc_pool (	/* Pointer to allocated memory block (NULL:no memory available) */
 133:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	JDEC* jd,				/* Pointer to the decompressor object */
 134:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	size_t ndata			/* Number of bytes to allocate */
 135:lvgl/src/extra/libs/sjpg/tjpgd.c **** )
 136:lvgl/src/extra/libs/sjpg/tjpgd.c **** {
  28              		.loc 1 136 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              		.loc 1 136 1 is_stmt 0 view .LVU1
  34 0000 0346     		mov	r3, r0
 137:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	char *rp = 0;
  35              		.loc 1 137 2 is_stmt 1 view .LVU2
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 4


  36              	.LVL1:
 138:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 139:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 140:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	ndata = (ndata + 3) & ~3;			/* Align block size to the word boundary */
  37              		.loc 1 140 2 view .LVU3
  38              		.loc 1 140 17 is_stmt 0 view .LVU4
  39 0002 0331     		adds	r1, r1, #3
  40              	.LVL2:
  41              		.loc 1 140 8 view .LVU5
  42 0004 21F00301 		bic	r1, r1, #3
  43              	.LVL3:
 141:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 142:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	if (jd->sz_pool >= ndata) {
  44              		.loc 1 142 2 is_stmt 1 view .LVU6
  45              		.loc 1 142 8 is_stmt 0 view .LVU7
  46 0008 C26E     		ldr	r2, [r0, #108]
  47              		.loc 1 142 5 view .LVU8
  48 000a 8A42     		cmp	r2, r1
  49 000c 05D3     		bcc	.L3
 143:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		jd->sz_pool -= ndata;
  50              		.loc 1 143 3 is_stmt 1 view .LVU9
  51              		.loc 1 143 15 is_stmt 0 view .LVU10
  52 000e 521A     		subs	r2, r2, r1
  53 0010 C266     		str	r2, [r0, #108]
 144:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		rp = (char*)jd->pool;			/* Get start of available memory pool */
  54              		.loc 1 144 3 is_stmt 1 view .LVU11
  55              		.loc 1 144 6 is_stmt 0 view .LVU12
  56 0012 806E     		ldr	r0, [r0, #104]
  57              	.LVL4:
 145:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		jd->pool = (void*)(rp + ndata);	/* Allocate requierd bytes */
  58              		.loc 1 145 3 is_stmt 1 view .LVU13
  59              		.loc 1 145 25 is_stmt 0 view .LVU14
  60 0014 0144     		add	r1, r1, r0
  61              	.LVL5:
  62              		.loc 1 145 12 view .LVU15
  63 0016 9966     		str	r1, [r3, #104]
  64 0018 7047     		bx	lr
  65              	.LVL6:
  66              	.L3:
 137:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
  67              		.loc 1 137 8 view .LVU16
  68 001a 0020     		movs	r0, #0
  69              	.LVL7:
 146:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	}
 147:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 148:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	return (void*)rp;	/* Return allocated memory block (NULL:no memory to allocate) */
  70              		.loc 1 148 2 is_stmt 1 view .LVU17
 149:lvgl/src/extra/libs/sjpg/tjpgd.c **** }
  71              		.loc 1 149 1 is_stmt 0 view .LVU18
  72 001c 7047     		bx	lr
  73              		.cfi_endproc
  74              	.LFE0:
  76              		.section	.text.create_qt_tbl,"ax",%progbits
  77              		.align	1
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 5


  82              	create_qt_tbl:
  83              	.LVL8:
  84              	.LFB1:
 150:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 151:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 152:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 153:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 154:lvgl/src/extra/libs/sjpg/tjpgd.c **** /*-----------------------------------------------------------------------*/
 155:lvgl/src/extra/libs/sjpg/tjpgd.c **** /* Create de-quantization and prescaling tables with a DQT segment       */
 156:lvgl/src/extra/libs/sjpg/tjpgd.c **** /*-----------------------------------------------------------------------*/
 157:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 158:lvgl/src/extra/libs/sjpg/tjpgd.c **** static JRESULT create_qt_tbl (	/* 0:OK, !0:Failed */
 159:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	JDEC* jd,				/* Pointer to the decompressor object */
 160:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	const uint8_t* data,	/* Pointer to the quantizer tables */
 161:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	size_t ndata			/* Size of input data */
 162:lvgl/src/extra/libs/sjpg/tjpgd.c **** )
 163:lvgl/src/extra/libs/sjpg/tjpgd.c **** {
  85              		.loc 1 163 1 is_stmt 1 view -0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              		.loc 1 163 1 is_stmt 0 view .LVU20
  90 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  91              	.LCFI0:
  92              		.cfi_def_cfa_offset 24
  93              		.cfi_offset 4, -24
  94              		.cfi_offset 5, -20
  95              		.cfi_offset 6, -16
  96              		.cfi_offset 7, -12
  97              		.cfi_offset 8, -8
  98              		.cfi_offset 14, -4
  99 0004 0546     		mov	r5, r0
 100 0006 0B46     		mov	r3, r1
 101 0008 1646     		mov	r6, r2
 164:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	unsigned int i, zi;
 102              		.loc 1 164 2 is_stmt 1 view .LVU21
 165:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	uint8_t d;
 103              		.loc 1 165 2 view .LVU22
 166:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	int32_t *pb;
 104              		.loc 1 166 2 view .LVU23
 167:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 168:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 169:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	while (ndata) {	/* Process all tables in the segment */
 105              		.loc 1 169 2 view .LVU24
 106              		.loc 1 169 8 is_stmt 0 view .LVU25
 107 000a 0DE0     		b	.L5
 108              	.LVL9:
 109              	.L8:
 170:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (ndata < 65) return JDR_FMT1;	/* Err: table size is unaligned */
 171:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		ndata -= 65;
 172:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		d = *data++;							/* Get table property */
 173:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (d & 0xF0) return JDR_FMT1;			/* Err: not 8-bit resolution */
 174:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		i = d & 3;								/* Get table ID */
 175:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		pb = alloc_pool(jd, 64 * sizeof (int32_t));/* Allocate a memory block for the table */
 176:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (!pb) return JDR_MEM1;				/* Err: not enough memory */
 177:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		jd->qttbl[i] = pb;						/* Register the table */
 178:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		for (i = 0; i < 64; i++) {				/* Load the table */
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 6


 179:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			zi = Zig[i];						/* Zigzag-order to raster-order conversion */
 110              		.loc 1 179 4 is_stmt 1 view .LVU26
 111              		.loc 1 179 12 is_stmt 0 view .LVU27
 112 000c 1749     		ldr	r1, .L15
 113 000e 885C     		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 114              	.LVL10:
 180:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			pb[zi] = (int32_t)((uint32_t)*data++ * Ipsf[zi]);	/* Apply scale factor of Arai algorithm to the
 115              		.loc 1 180 4 is_stmt 1 view .LVU28
 116              		.loc 1 180 33 is_stmt 0 view .LVU29
 117 0010 13F8011B 		ldrb	r1, [r3], #1	@ zero_extendqisi2
 118              	.LVL11:
 119              		.loc 1 180 47 view .LVU30
 120 0014 164C     		ldr	r4, .L15+4
 121 0016 34F81040 		ldrh	r4, [r4, r0, lsl #1]
 122              		.loc 1 180 41 view .LVU31
 123 001a 04FB01F1 		mul	r1, r4, r1
 124              		.loc 1 180 11 view .LVU32
 125 001e 47F82010 		str	r1, [r7, r0, lsl #2]
 178:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			zi = Zig[i];						/* Zigzag-order to raster-order conversion */
 126              		.loc 1 178 24 is_stmt 1 discriminator 3 view .LVU33
 127 0022 0132     		adds	r2, r2, #1
 128              	.LVL12:
 129              	.L7:
 178:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			zi = Zig[i];						/* Zigzag-order to raster-order conversion */
 130              		.loc 1 178 17 discriminator 1 view .LVU34
 131 0024 3F2A     		cmp	r2, #63
 132 0026 F1D9     		bls	.L8
 133              	.LVL13:
 134              	.L5:
 169:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (ndata < 65) return JDR_FMT1;	/* Err: table size is unaligned */
 135              		.loc 1 169 9 view .LVU35
 136 0028 BEB1     		cbz	r6, .L14
 170:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		ndata -= 65;
 137              		.loc 1 170 3 view .LVU36
 170:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		ndata -= 65;
 138              		.loc 1 170 6 is_stmt 0 view .LVU37
 139 002a 402E     		cmp	r6, #64
 140 002c 18D9     		bls	.L10
 171:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		d = *data++;							/* Get table property */
 141              		.loc 1 171 3 is_stmt 1 view .LVU38
 171:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		d = *data++;							/* Get table property */
 142              		.loc 1 171 9 is_stmt 0 view .LVU39
 143 002e 413E     		subs	r6, r6, #65
 144              	.LVL14:
 172:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (d & 0xF0) return JDR_FMT1;			/* Err: not 8-bit resolution */
 145              		.loc 1 172 3 is_stmt 1 view .LVU40
 172:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (d & 0xF0) return JDR_FMT1;			/* Err: not 8-bit resolution */
 146              		.loc 1 172 12 is_stmt 0 view .LVU41
 147 0030 1C46     		mov	r4, r3
 148              	.LVL15:
 172:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (d & 0xF0) return JDR_FMT1;			/* Err: not 8-bit resolution */
 149              		.loc 1 172 5 view .LVU42
 150 0032 14F8013B 		ldrb	r3, [r4], #1	@ zero_extendqisi2
 151              	.LVL16:
 173:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		i = d & 3;								/* Get table ID */
 152              		.loc 1 173 3 is_stmt 1 view .LVU43
 173:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		i = d & 3;								/* Get table ID */
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 7


 153              		.loc 1 173 6 is_stmt 0 view .LVU44
 154 0036 0F2B     		cmp	r3, #15
 155 0038 14D8     		bhi	.L11
 174:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		pb = alloc_pool(jd, 64 * sizeof (int32_t));/* Allocate a memory block for the table */
 156              		.loc 1 174 3 is_stmt 1 view .LVU45
 174:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		pb = alloc_pool(jd, 64 * sizeof (int32_t));/* Allocate a memory block for the table */
 157              		.loc 1 174 5 is_stmt 0 view .LVU46
 158 003a 03F00308 		and	r8, r3, #3
 159              	.LVL17:
 175:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (!pb) return JDR_MEM1;				/* Err: not enough memory */
 160              		.loc 1 175 3 is_stmt 1 view .LVU47
 175:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (!pb) return JDR_MEM1;				/* Err: not enough memory */
 161              		.loc 1 175 8 is_stmt 0 view .LVU48
 162 003e 4FF48071 		mov	r1, #256
 163 0042 2846     		mov	r0, r5
 164 0044 FFF7FEFF 		bl	alloc_pool
 165              	.LVL18:
 176:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		jd->qttbl[i] = pb;						/* Register the table */
 166              		.loc 1 176 3 is_stmt 1 view .LVU49
 176:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		jd->qttbl[i] = pb;						/* Register the table */
 167              		.loc 1 176 6 is_stmt 0 view .LVU50
 168 0048 0746     		mov	r7, r0
 169 004a 68B1     		cbz	r0, .L12
 177:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		for (i = 0; i < 64; i++) {				/* Load the table */
 170              		.loc 1 177 3 is_stmt 1 view .LVU51
 177:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		for (i = 0; i < 64; i++) {				/* Load the table */
 171              		.loc 1 177 16 is_stmt 0 view .LVU52
 172 004c 08F11403 		add	r3, r8, #20
 173 0050 45F82300 		str	r0, [r5, r3, lsl #2]
 178:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			zi = Zig[i];						/* Zigzag-order to raster-order conversion */
 174              		.loc 1 178 3 is_stmt 1 view .LVU53
 175              	.LVL19:
 172:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (d & 0xF0) return JDR_FMT1;			/* Err: not 8-bit resolution */
 176              		.loc 1 172 12 is_stmt 0 view .LVU54
 177 0054 2346     		mov	r3, r4
 178:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			zi = Zig[i];						/* Zigzag-order to raster-order conversion */
 178              		.loc 1 178 10 view .LVU55
 179 0056 0022     		movs	r2, #0
 178:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			zi = Zig[i];						/* Zigzag-order to raster-order conversion */
 180              		.loc 1 178 3 view .LVU56
 181 0058 E4E7     		b	.L7
 182              	.LVL20:
 183              	.L14:
 181:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		}
 182:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	}
 183:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 184:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	return JDR_OK;
 184              		.loc 1 184 9 view .LVU57
 185 005a 0020     		movs	r0, #0
 186              	.LVL21:
 187              	.L6:
 185:lvgl/src/extra/libs/sjpg/tjpgd.c **** }
 188              		.loc 1 185 1 view .LVU58
 189 005c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 190              	.LVL22:
 191              	.L10:
 170:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		ndata -= 65;
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 8


 192              		.loc 1 170 26 discriminator 1 view .LVU59
 193 0060 0620     		movs	r0, #6
 194 0062 FBE7     		b	.L6
 195              	.LVL23:
 196              	.L11:
 173:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		i = d & 3;								/* Get table ID */
 197              		.loc 1 173 24 discriminator 1 view .LVU60
 198 0064 0620     		movs	r0, #6
 199 0066 F9E7     		b	.L6
 200              	.LVL24:
 201              	.L12:
 176:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		jd->qttbl[i] = pb;						/* Register the table */
 202              		.loc 1 176 19 discriminator 1 view .LVU61
 203 0068 0320     		movs	r0, #3
 204              	.LVL25:
 176:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		jd->qttbl[i] = pb;						/* Register the table */
 205              		.loc 1 176 19 discriminator 1 view .LVU62
 206 006a F7E7     		b	.L6
 207              	.L16:
 208              		.align	2
 209              	.L15:
 210 006c 00000000 		.word	Zig
 211 0070 00000000 		.word	Ipsf
 212              		.cfi_endproc
 213              	.LFE1:
 215              		.section	.text.create_huffman_tbl,"ax",%progbits
 216              		.align	1
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 221              	create_huffman_tbl:
 222              	.LVL26:
 223              	.LFB2:
 186:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 187:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 188:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 189:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 190:lvgl/src/extra/libs/sjpg/tjpgd.c **** /*-----------------------------------------------------------------------*/
 191:lvgl/src/extra/libs/sjpg/tjpgd.c **** /* Create huffman code tables with a DHT segment                         */
 192:lvgl/src/extra/libs/sjpg/tjpgd.c **** /*-----------------------------------------------------------------------*/
 193:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 194:lvgl/src/extra/libs/sjpg/tjpgd.c **** static JRESULT create_huffman_tbl (	/* 0:OK, !0:Failed */
 195:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	JDEC* jd,					/* Pointer to the decompressor object */
 196:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	const uint8_t* data,		/* Pointer to the packed huffman tables */
 197:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	size_t ndata				/* Size of input data */
 198:lvgl/src/extra/libs/sjpg/tjpgd.c **** )
 199:lvgl/src/extra/libs/sjpg/tjpgd.c **** {
 224              		.loc 1 199 1 is_stmt 1 view -0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		.loc 1 199 1 is_stmt 0 view .LVU64
 229 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 230              	.LCFI1:
 231              		.cfi_def_cfa_offset 32
 232              		.cfi_offset 4, -32
 233              		.cfi_offset 5, -28
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 9


 234              		.cfi_offset 6, -24
 235              		.cfi_offset 7, -20
 236              		.cfi_offset 8, -16
 237              		.cfi_offset 9, -12
 238              		.cfi_offset 10, -8
 239              		.cfi_offset 14, -4
 240 0004 8246     		mov	r10, r0
 241 0006 0C46     		mov	r4, r1
 242 0008 1646     		mov	r6, r2
 200:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	unsigned int i, j, b, cls, num;
 243              		.loc 1 200 2 is_stmt 1 view .LVU65
 201:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	size_t np;
 244              		.loc 1 201 2 view .LVU66
 202:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	uint8_t d, *pb, *pd;
 245              		.loc 1 202 2 view .LVU67
 203:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	uint16_t hc, *ph;
 246              		.loc 1 203 2 view .LVU68
 204:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 205:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 206:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	while (ndata) {	/* Process all tables in the segment */
 247              		.loc 1 206 2 view .LVU69
 248              	.LVL27:
 249              	.L18:
 250              		.loc 1 206 9 view .LVU70
 251 000a 002E     		cmp	r6, #0
 252 000c 64D0     		beq	.L37
 207:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (ndata < 17) return JDR_FMT1;	/* Err: wrong data size */
 253              		.loc 1 207 3 view .LVU71
 254              		.loc 1 207 6 is_stmt 0 view .LVU72
 255 000e 102E     		cmp	r6, #16
 256 0010 64D9     		bls	.L29
 208:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		ndata -= 17;
 257              		.loc 1 208 3 is_stmt 1 view .LVU73
 258              		.loc 1 208 9 is_stmt 0 view .LVU74
 259 0012 A6F11109 		sub	r9, r6, #17
 260              	.LVL28:
 209:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		d = *data++;						/* Get table number and class */
 261              		.loc 1 209 3 is_stmt 1 view .LVU75
 262              		.loc 1 209 5 is_stmt 0 view .LVU76
 263 0016 14F8018B 		ldrb	r8, [r4], #1	@ zero_extendqisi2
 264              	.LVL29:
 210:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (d & 0xEE) return JDR_FMT1;		/* Err: invalid class/number */
 265              		.loc 1 210 3 is_stmt 1 view .LVU77
 266              		.loc 1 210 6 is_stmt 0 view .LVU78
 267 001a 18F0EE0F 		tst	r8, #238
 268 001e 5FD1     		bne	.L30
 211:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		cls = d >> 4; num = d & 0x0F;		/* class = dc(0)/ac(1), table number = 0/1 */
 269              		.loc 1 211 3 is_stmt 1 view .LVU79
 270              		.loc 1 211 11 is_stmt 0 view .LVU80
 271 0020 4FEA1817 		lsr	r7, r8, #4
 272              	.LVL30:
 273              		.loc 1 211 17 is_stmt 1 view .LVU81
 274              		.loc 1 211 21 is_stmt 0 view .LVU82
 275 0024 08F00F08 		and	r8, r8, #15
 276              	.LVL31:
 212:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		pb = alloc_pool(jd, 16);			/* Allocate a memory block for the bit distribution table */
 277              		.loc 1 212 3 is_stmt 1 view .LVU83
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 10


 278              		.loc 1 212 8 is_stmt 0 view .LVU84
 279 0028 1021     		movs	r1, #16
 280 002a 5046     		mov	r0, r10
 281 002c FFF7FEFF 		bl	alloc_pool
 282              	.LVL32:
 213:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (!pb) return JDR_MEM1;			/* Err: not enough memory */
 283              		.loc 1 213 3 is_stmt 1 view .LVU85
 284              		.loc 1 213 6 is_stmt 0 view .LVU86
 285 0030 0646     		mov	r6, r0
 286 0032 0028     		cmp	r0, #0
 287 0034 56D0     		beq	.L31
 214:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		jd->huffbits[num][cls] = pb;
 288              		.loc 1 214 3 is_stmt 1 view .LVU87
 289              		.loc 1 214 26 is_stmt 0 view .LVU88
 290 0036 07EB4803 		add	r3, r7, r8, lsl #1
 291 003a 0833     		adds	r3, r3, #8
 292 003c 4AF82300 		str	r0, [r10, r3, lsl #2]
 215:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		for (np = i = 0; i < 16; i++) {		/* Load number of patterns for 1 to 16-bit code */
 293              		.loc 1 215 3 is_stmt 1 view .LVU89
 294              	.LVL33:
 295              		.loc 1 215 11 is_stmt 0 view .LVU90
 296 0040 0025     		movs	r5, #0
 297              		.loc 1 215 15 view .LVU91
 298 0042 2B46     		mov	r3, r5
 299              		.loc 1 215 3 view .LVU92
 300 0044 04E0     		b	.L20
 301              	.LVL34:
 302              	.L21:
 216:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			np += (pb[i] = *data++);		/* Get sum of code words for each code */
 303              		.loc 1 216 4 is_stmt 1 view .LVU93
 304              		.loc 1 216 19 is_stmt 0 view .LVU94
 305 0046 14F8012B 		ldrb	r2, [r4], #1	@ zero_extendqisi2
 306              	.LVL35:
 307              		.loc 1 216 17 view .LVU95
 308 004a F254     		strb	r2, [r6, r3]
 309              		.loc 1 216 7 view .LVU96
 310 004c 1544     		add	r5, r5, r2
 311              	.LVL36:
 215:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		for (np = i = 0; i < 16; i++) {		/* Load number of patterns for 1 to 16-bit code */
 312              		.loc 1 215 29 is_stmt 1 discriminator 3 view .LVU97
 313 004e 0133     		adds	r3, r3, #1
 314              	.LVL37:
 315              	.L20:
 215:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		for (np = i = 0; i < 16; i++) {		/* Load number of patterns for 1 to 16-bit code */
 316              		.loc 1 215 22 discriminator 1 view .LVU98
 317 0050 0F2B     		cmp	r3, #15
 318 0052 F8D9     		bls	.L21
 217:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		}
 218:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		ph = alloc_pool(jd, np * sizeof (uint16_t));/* Allocate a memory block for the code word table */
 319              		.loc 1 218 3 view .LVU99
 320              		.loc 1 218 8 is_stmt 0 view .LVU100
 321 0054 6900     		lsls	r1, r5, #1
 322 0056 5046     		mov	r0, r10
 323              	.LVL38:
 324              		.loc 1 218 8 view .LVU101
 325 0058 FFF7FEFF 		bl	alloc_pool
 326              	.LVL39:
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 11


 219:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (!ph) return JDR_MEM1;			/* Err: not enough memory */
 327              		.loc 1 219 3 is_stmt 1 view .LVU102
 328              		.loc 1 219 6 is_stmt 0 view .LVU103
 329 005c 8446     		mov	ip, r0
 330 005e 0028     		cmp	r0, #0
 331 0060 42D0     		beq	.L32
 220:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		jd->huffcode[num][cls] = ph;
 332              		.loc 1 220 3 is_stmt 1 view .LVU104
 333              		.loc 1 220 26 is_stmt 0 view .LVU105
 334 0062 07EB4803 		add	r3, r7, r8, lsl #1
 335 0066 0C33     		adds	r3, r3, #12
 336 0068 4AF82300 		str	r0, [r10, r3, lsl #2]
 221:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		hc = 0;
 337              		.loc 1 221 3 is_stmt 1 view .LVU106
 338              	.LVL40:
 222:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		for (j = i = 0; i < 16; i++) {		/* Re-build huffman code word table */
 339              		.loc 1 222 3 view .LVU107
 221:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		hc = 0;
 340              		.loc 1 221 6 is_stmt 0 view .LVU108
 341 006c 0023     		movs	r3, #0
 342              		.loc 1 222 10 view .LVU109
 343 006e 1946     		mov	r1, r3
 344              		.loc 1 222 14 view .LVU110
 345 0070 9E46     		mov	lr, r3
 346              		.loc 1 222 3 view .LVU111
 347 0072 0CE0     		b	.L22
 348              	.LVL41:
 349              	.L24:
 223:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			b = pb[i];
 224:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			while (b--) ph[j++] = hc++;
 350              		.loc 1 224 16 is_stmt 1 discriminator 2 view .LVU112
 351              		.loc 1 224 28 is_stmt 0 discriminator 2 view .LVU113
 352 0074 5A1C     		adds	r2, r3, #1
 353              	.LVL42:
 354              		.loc 1 224 24 discriminator 2 view .LVU114
 355 0076 2CF81130 		strh	r3, [ip, r1, lsl #1]	@ movhi
 356              		.loc 1 224 28 discriminator 2 view .LVU115
 357 007a 93B2     		uxth	r3, r2
 358              		.loc 1 224 12 discriminator 1 view .LVU116
 359 007c 0246     		mov	r2, r0
 360              	.LVL43:
 361              		.loc 1 224 20 discriminator 2 view .LVU117
 362 007e 0131     		adds	r1, r1, #1
 363              	.LVL44:
 364              	.L23:
 365              		.loc 1 224 11 is_stmt 1 discriminator 1 view .LVU118
 366              		.loc 1 224 12 is_stmt 0 discriminator 1 view .LVU119
 367 0080 501E     		subs	r0, r2, #1
 368              	.LVL45:
 369              		.loc 1 224 11 discriminator 1 view .LVU120
 370 0082 002A     		cmp	r2, #0
 371 0084 F6D1     		bne	.L24
 225:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			hc <<= 1;
 372              		.loc 1 225 4 is_stmt 1 view .LVU121
 373              		.loc 1 225 7 is_stmt 0 view .LVU122
 374 0086 5B00     		lsls	r3, r3, #1
 375              	.LVL46:
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 12


 376              		.loc 1 225 7 view .LVU123
 377 0088 9BB2     		uxth	r3, r3
 378              	.LVL47:
 222:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		for (j = i = 0; i < 16; i++) {		/* Re-build huffman code word table */
 379              		.loc 1 222 28 is_stmt 1 discriminator 2 view .LVU124
 380 008a 0EF1010E 		add	lr, lr, #1
 381              	.LVL48:
 382              	.L22:
 222:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		for (j = i = 0; i < 16; i++) {		/* Re-build huffman code word table */
 383              		.loc 1 222 21 discriminator 1 view .LVU125
 384 008e BEF10F0F 		cmp	lr, #15
 385 0092 02D8     		bhi	.L38
 223:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			b = pb[i];
 386              		.loc 1 223 4 view .LVU126
 223:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			b = pb[i];
 387              		.loc 1 223 10 is_stmt 0 view .LVU127
 388 0094 16F80E20 		ldrb	r2, [r6, lr]	@ zero_extendqisi2
 389              	.LVL49:
 224:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			hc <<= 1;
 390              		.loc 1 224 4 is_stmt 1 view .LVU128
 224:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			hc <<= 1;
 391              		.loc 1 224 10 is_stmt 0 view .LVU129
 392 0098 F2E7     		b	.L23
 393              	.LVL50:
 394              	.L38:
 226:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		}
 227:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 228:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (ndata < np) return JDR_FMT1;	/* Err: wrong data size */
 395              		.loc 1 228 3 is_stmt 1 view .LVU130
 396              		.loc 1 228 6 is_stmt 0 view .LVU131
 397 009a 4D45     		cmp	r5, r9
 398 009c 26D8     		bhi	.L33
 229:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		ndata -= np;
 399              		.loc 1 229 3 is_stmt 1 view .LVU132
 400              		.loc 1 229 9 is_stmt 0 view .LVU133
 401 009e A9EB0506 		sub	r6, r9, r5
 402              	.LVL51:
 230:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		pd = alloc_pool(jd, np);			/* Allocate a memory block for the decoded data */
 403              		.loc 1 230 3 is_stmt 1 view .LVU134
 404              		.loc 1 230 8 is_stmt 0 view .LVU135
 405 00a2 2946     		mov	r1, r5
 406              	.LVL52:
 407              		.loc 1 230 8 view .LVU136
 408 00a4 5046     		mov	r0, r10
 409 00a6 FFF7FEFF 		bl	alloc_pool
 410              	.LVL53:
 231:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (!pd) return JDR_MEM1;			/* Err: not enough memory */
 411              		.loc 1 231 3 is_stmt 1 view .LVU137
 412              		.loc 1 231 6 is_stmt 0 view .LVU138
 413 00aa 8446     		mov	ip, r0
 414 00ac 00B3     		cbz	r0, .L34
 232:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		jd->huffdata[num][cls] = pd;
 415              		.loc 1 232 3 is_stmt 1 view .LVU139
 416              		.loc 1 232 26 is_stmt 0 view .LVU140
 417 00ae 07EB4803 		add	r3, r7, r8, lsl #1
 418 00b2 1033     		adds	r3, r3, #16
 419 00b4 4AF82300 		str	r0, [r10, r3, lsl #2]
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 13


 233:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		for (i = 0; i < np; i++) {			/* Load decoded data corresponds to each code word */
 420              		.loc 1 233 3 is_stmt 1 view .LVU141
 421              	.LVL54:
 422              		.loc 1 233 10 is_stmt 0 view .LVU142
 423 00b8 0023     		movs	r3, #0
 424              	.LVL55:
 425              	.L26:
 426              		.loc 1 233 17 is_stmt 1 discriminator 1 view .LVU143
 427 00ba AB42     		cmp	r3, r5
 428 00bc A5D2     		bcs	.L18
 234:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			d = *data++;
 429              		.loc 1 234 4 view .LVU144
 430              	.LVL56:
 431              		.loc 1 234 6 is_stmt 0 view .LVU145
 432 00be 14F8012B 		ldrb	r2, [r4], #1	@ zero_extendqisi2
 433              	.LVL57:
 235:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (!cls && d > 11) return JDR_FMT1;
 434              		.loc 1 235 4 is_stmt 1 view .LVU146
 435              		.loc 1 235 13 is_stmt 0 view .LVU147
 436 00c2 B7FA87F1 		clz	r1, r7
 437 00c6 4909     		lsrs	r1, r1, #5
 438 00c8 0B2A     		cmp	r2, #11
 439 00ca 98BF     		it	ls
 440 00cc 0021     		movls	r1, #0
 441              		.loc 1 235 7 view .LVU148
 442 00ce 89B9     		cbnz	r1, .L35
 236:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			pd[i] = d;
 443              		.loc 1 236 4 is_stmt 1 view .LVU149
 444              		.loc 1 236 10 is_stmt 0 view .LVU150
 445 00d0 0CF80320 		strb	r2, [ip, r3]
 233:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			d = *data++;
 446              		.loc 1 233 24 is_stmt 1 discriminator 2 view .LVU151
 447 00d4 0133     		adds	r3, r3, #1
 448              	.LVL58:
 233:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			d = *data++;
 449              		.loc 1 233 24 is_stmt 0 discriminator 2 view .LVU152
 450 00d6 F0E7     		b	.L26
 451              	.LVL59:
 452              	.L37:
 237:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		}
 238:lvgl/src/extra/libs/sjpg/tjpgd.c **** #if JD_FASTDECODE == 2
 239:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		{	/* Create fast huffman decode table */
 240:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			unsigned int span, td, ti;
 241:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			uint16_t *tbl_ac = 0;
 242:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			uint8_t *tbl_dc = 0;
 243:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 244:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (cls) {
 245:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				tbl_ac = alloc_pool(jd, HUFF_LEN * sizeof (uint16_t));	/* LUT for AC elements */
 246:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (!tbl_ac) return JDR_MEM1;		/* Err: not enough memory */
 247:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				jd->hufflut_ac[num] = tbl_ac;
 248:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				memset(tbl_ac, 0xFF, HUFF_LEN * sizeof (uint16_t));		/* Default value (0xFFFF: may be long code
 249:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			} else {
 250:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				tbl_dc = alloc_pool(jd, HUFF_LEN * sizeof (uint8_t));	/* LUT for AC elements */
 251:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (!tbl_dc) return JDR_MEM1;		/* Err: not enough memory */
 252:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				jd->hufflut_dc[num] = tbl_dc;
 253:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				memset(tbl_dc, 0xFF, HUFF_LEN * sizeof (uint8_t));		/* Default value (0xFF: may be long code) *
 254:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			}
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 14


 255:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			for (i = b = 0; b < HUFF_BIT; b++) {	/* Create LUT */
 256:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				for (j = pb[b]; j; j--) {
 257:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					ti = ph[i] << (HUFF_BIT - 1 - b) & HUFF_MASK;	/* Index of input pattern for the code */
 258:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					if (cls) {
 259:lvgl/src/extra/libs/sjpg/tjpgd.c **** 						td = pd[i++] | ((b + 1) << 8);	/* b15..b8: code length, b7..b0: zero run and data length */
 260:lvgl/src/extra/libs/sjpg/tjpgd.c **** 						for (span = 1 << (HUFF_BIT - 1 - b); span; span--, tbl_ac[ti++] = (uint16_t)td) ;
 261:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					} else {
 262:lvgl/src/extra/libs/sjpg/tjpgd.c **** 						td = pd[i++] | ((b + 1) << 4);	/* b7..b4: code length, b3..b0: data length */
 263:lvgl/src/extra/libs/sjpg/tjpgd.c **** 						for (span = 1 << (HUFF_BIT - 1 - b); span; span--, tbl_dc[ti++] = (uint8_t)td) ;
 264:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					}
 265:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 266:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			}
 267:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			jd->longofs[num][cls] = i;	/* Code table offset for long code */
 268:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		}
 269:lvgl/src/extra/libs/sjpg/tjpgd.c **** #endif
 270:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	}
 271:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 272:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	return JDR_OK;
 453              		.loc 1 272 9 view .LVU153
 454 00d8 0020     		movs	r0, #0
 455 00da 0CE0     		b	.L19
 456              	.L29:
 207:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		ndata -= 17;
 457              		.loc 1 207 26 discriminator 1 view .LVU154
 458 00dc 0620     		movs	r0, #6
 459 00de 0AE0     		b	.L19
 460              	.LVL60:
 461              	.L30:
 210:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		cls = d >> 4; num = d & 0x0F;		/* class = dc(0)/ac(1), table number = 0/1 */
 462              		.loc 1 210 24 discriminator 1 view .LVU155
 463 00e0 0620     		movs	r0, #6
 464 00e2 08E0     		b	.L19
 465              	.LVL61:
 466              	.L31:
 213:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		jd->huffbits[num][cls] = pb;
 467              		.loc 1 213 19 discriminator 1 view .LVU156
 468 00e4 0320     		movs	r0, #3
 469              	.LVL62:
 213:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		jd->huffbits[num][cls] = pb;
 470              		.loc 1 213 19 discriminator 1 view .LVU157
 471 00e6 06E0     		b	.L19
 472              	.LVL63:
 473              	.L32:
 219:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		jd->huffcode[num][cls] = ph;
 474              		.loc 1 219 19 discriminator 1 view .LVU158
 475 00e8 0320     		movs	r0, #3
 476              	.LVL64:
 219:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		jd->huffcode[num][cls] = ph;
 477              		.loc 1 219 19 discriminator 1 view .LVU159
 478 00ea 04E0     		b	.L19
 479              	.LVL65:
 480              	.L33:
 228:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		ndata -= np;
 481              		.loc 1 228 26 discriminator 1 view .LVU160
 482 00ec 0620     		movs	r0, #6
 483 00ee 02E0     		b	.L19
 484              	.LVL66:
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 15


 485              	.L34:
 231:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		jd->huffdata[num][cls] = pd;
 486              		.loc 1 231 19 discriminator 1 view .LVU161
 487 00f0 0320     		movs	r0, #3
 488              	.LVL67:
 231:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		jd->huffdata[num][cls] = pd;
 489              		.loc 1 231 19 discriminator 1 view .LVU162
 490 00f2 00E0     		b	.L19
 491              	.LVL68:
 492              	.L35:
 235:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			pd[i] = d;
 493              		.loc 1 235 31 discriminator 1 view .LVU163
 494 00f4 0620     		movs	r0, #6
 495              	.LVL69:
 496              	.L19:
 273:lvgl/src/extra/libs/sjpg/tjpgd.c **** }
 497              		.loc 1 273 1 view .LVU164
 498 00f6 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 499              		.loc 1 273 1 view .LVU165
 500              		.cfi_endproc
 501              	.LFE2:
 503              		.section	.text.huffext,"ax",%progbits
 504              		.align	1
 505              		.syntax unified
 506              		.thumb
 507              		.thumb_func
 509              	huffext:
 510              	.LVL70:
 511              	.LFB3:
 274:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 275:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 276:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 277:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 278:lvgl/src/extra/libs/sjpg/tjpgd.c **** /*-----------------------------------------------------------------------*/
 279:lvgl/src/extra/libs/sjpg/tjpgd.c **** /* Extract a huffman decoded data from input stream                      */
 280:lvgl/src/extra/libs/sjpg/tjpgd.c **** /*-----------------------------------------------------------------------*/
 281:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 282:lvgl/src/extra/libs/sjpg/tjpgd.c **** static int huffext (	/* >=0: decoded data, <0: error code */
 283:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	JDEC* jd,			/* Pointer to the decompressor object */
 284:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	unsigned int id,	/* Table ID (0:Y, 1:C) */
 285:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	unsigned int cls	/* Table class (0:DC, 1:AC) */
 286:lvgl/src/extra/libs/sjpg/tjpgd.c **** )
 287:lvgl/src/extra/libs/sjpg/tjpgd.c **** {
 512              		.loc 1 287 1 is_stmt 1 view -0
 513              		.cfi_startproc
 514              		@ args = 0, pretend = 0, frame = 8
 515              		@ frame_needed = 0, uses_anonymous_args = 0
 516              		.loc 1 287 1 is_stmt 0 view .LVU167
 517 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 518              	.LCFI2:
 519              		.cfi_def_cfa_offset 36
 520              		.cfi_offset 4, -36
 521              		.cfi_offset 5, -32
 522              		.cfi_offset 6, -28
 523              		.cfi_offset 7, -24
 524              		.cfi_offset 8, -20
 525              		.cfi_offset 9, -16
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 16


 526              		.cfi_offset 10, -12
 527              		.cfi_offset 11, -8
 528              		.cfi_offset 14, -4
 529 0004 83B0     		sub	sp, sp, #12
 530              	.LCFI3:
 531              		.cfi_def_cfa_offset 48
 532 0006 0746     		mov	r7, r0
 288:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	size_t dc = jd->dctr;
 533              		.loc 1 288 2 is_stmt 1 view .LVU168
 534              		.loc 1 288 9 is_stmt 0 view .LVU169
 535 0008 0068     		ldr	r0, [r0]
 536              	.LVL71:
 289:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	uint8_t *dp = jd->dptr;
 537              		.loc 1 289 2 is_stmt 1 view .LVU170
 538              		.loc 1 289 11 is_stmt 0 view .LVU171
 539 000a D7F80490 		ldr	r9, [r7, #4]
 540              	.LVL72:
 290:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	unsigned int d, flg = 0;
 541              		.loc 1 290 2 is_stmt 1 view .LVU172
 291:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 292:lvgl/src/extra/libs/sjpg/tjpgd.c **** #if JD_FASTDECODE == 0
 293:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	uint8_t bm, nd, bl;
 542              		.loc 1 293 2 view .LVU173
 294:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	const uint8_t *hb = jd->huffbits[id][cls];	/* Bit distribution table */
 543              		.loc 1 294 2 view .LVU174
 544              		.loc 1 294 17 is_stmt 0 view .LVU175
 545 000e 02EB4102 		add	r2, r2, r1, lsl #1
 546              	.LVL73:
 547              		.loc 1 294 17 view .LVU176
 548 0012 02F10803 		add	r3, r2, #8
 549 0016 57F82330 		ldr	r3, [r7, r3, lsl #2]
 550 001a 0193     		str	r3, [sp, #4]
 551              	.LVL74:
 295:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	const uint16_t *hc = jd->huffcode[id][cls];	/* Code word table */
 552              		.loc 1 295 2 is_stmt 1 view .LVU177
 553              		.loc 1 295 18 is_stmt 0 view .LVU178
 554 001c 02F10C03 		add	r3, r2, #12
 555              	.LVL75:
 556              		.loc 1 295 18 view .LVU179
 557 0020 57F82340 		ldr	r4, [r7, r3, lsl #2]
 558              	.LVL76:
 296:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	const uint8_t *hd = jd->huffdata[id][cls];	/* Data table */
 559              		.loc 1 296 2 is_stmt 1 view .LVU180
 560              		.loc 1 296 17 is_stmt 0 view .LVU181
 561 0024 1032     		adds	r2, r2, #16
 562              	.LVL77:
 563              		.loc 1 296 17 view .LVU182
 564 0026 57F82250 		ldr	r5, [r7, r2, lsl #2]
 565              	.LVL78:
 297:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 298:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 299:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	bm = jd->dbit;	/* Bit mask to extract */
 566              		.loc 1 299 2 is_stmt 1 view .LVU183
 567              		.loc 1 299 5 is_stmt 0 view .LVU184
 568 002a 97F80C80 		ldrb	r8, [r7, #12]	@ zero_extendqisi2
 569              	.LVL79:
 300:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	d = 0; bl = 16;	/* Max code length */
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 17


 570              		.loc 1 300 2 is_stmt 1 view .LVU185
 571              		.loc 1 300 9 view .LVU186
 572              		.loc 1 300 12 is_stmt 0 view .LVU187
 573 002e 4FF0100A 		mov	r10, #16
 290:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 574              		.loc 1 290 18 view .LVU188
 575 0032 4FF0000B 		mov	fp, #0
 576              		.loc 1 300 4 view .LVU189
 577 0036 5E46     		mov	r6, fp
 578 0038 3CE0     		b	.L50
 579              	.LVL80:
 580              	.L41:
 301:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	do {
 302:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (!bm) {		/* Next byte? */
 303:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (!dc) {	/* No input data is available, re-fill input buffer */
 304:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				dp = jd->inbuf;	/* Top of input buffer */
 305:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				dc = jd->infunc(jd, dp, JD_SZBUF);
 306:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (!dc) return 0 - (int)JDR_INP;	/* Err: read error or wrong stream termination */
 307:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			} else {
 308:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				dp++;	/* Next data ptr */
 581              		.loc 1 308 5 is_stmt 1 view .LVU190
 582              		.loc 1 308 7 is_stmt 0 view .LVU191
 583 003a 09F10109 		add	r9, r9, #1
 584              	.LVL81:
 585              	.L43:
 309:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			}
 310:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			dc--;		/* Decrement number of available bytes */
 586              		.loc 1 310 4 is_stmt 1 view .LVU192
 587              		.loc 1 310 6 is_stmt 0 view .LVU193
 588 003e 0138     		subs	r0, r0, #1
 589              	.LVL82:
 311:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (flg) {		/* In flag sequence? */
 590              		.loc 1 311 4 is_stmt 1 view .LVU194
 591              		.loc 1 311 7 is_stmt 0 view .LVU195
 592 0040 BBF1000F 		cmp	fp, #0
 593 0044 1AD1     		bne	.L55
 312:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				flg = 0;	/* Exit flag sequence */
 313:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (*dp != 0) return 0 - (int)JDR_FMT1;	/* Err: unexpected flag is detected (may be collapted d
 314:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				*dp = 0xFF;				/* The flag is a data 0xFF */
 315:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			} else {
 316:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (*dp == 0xFF) {		/* Is start of flag sequence? */
 594              		.loc 1 316 5 is_stmt 1 view .LVU196
 595              		.loc 1 316 9 is_stmt 0 view .LVU197
 596 0046 99F80030 		ldrb	r3, [r9]	@ zero_extendqisi2
 597              		.loc 1 316 8 view .LVU198
 598 004a FF2B     		cmp	r3, #255
 599 004c 44D0     		beq	.L53
 317:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					flg = 1; continue;	/* Enter flag sequence, get trailing byte */
 318:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 319:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			}
 320:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			bm = 0x80;		/* Read from MSB */
 600              		.loc 1 320 7 view .LVU199
 601 004e 4FF08008 		mov	r8, #128
 602              	.LVL83:
 603              	.L40:
 321:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		}
 322:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		d <<= 1;			/* Get a bit */
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 18


 604              		.loc 1 322 3 is_stmt 1 view .LVU200
 605              		.loc 1 322 5 is_stmt 0 view .LVU201
 606 0052 7600     		lsls	r6, r6, #1
 607              	.LVL84:
 323:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (*dp & bm) d++;
 608              		.loc 1 323 3 is_stmt 1 view .LVU202
 609              		.loc 1 323 7 is_stmt 0 view .LVU203
 610 0054 99F80030 		ldrb	r3, [r9]	@ zero_extendqisi2
 611              		.loc 1 323 6 view .LVU204
 612 0058 18EA030F 		tst	r8, r3
 613 005c 00D0     		beq	.L46
 614              		.loc 1 323 17 is_stmt 1 discriminator 1 view .LVU205
 615              		.loc 1 323 18 is_stmt 0 discriminator 1 view .LVU206
 616 005e 0136     		adds	r6, r6, #1
 617              	.LVL85:
 618              	.L46:
 324:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		bm >>= 1;
 619              		.loc 1 324 3 is_stmt 1 view .LVU207
 620              		.loc 1 324 6 is_stmt 0 view .LVU208
 621 0060 4FEA5808 		lsr	r8, r8, #1
 622              	.LVL86:
 325:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 326:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		for (nd = *hb++; nd; nd--) {	/* Search the code word in this bit length */
 623              		.loc 1 326 3 is_stmt 1 view .LVU209
 624              		.loc 1 326 16 is_stmt 0 view .LVU210
 625 0064 0199     		ldr	r1, [sp, #4]
 626              	.LVL87:
 627              		.loc 1 326 11 view .LVU211
 628 0066 11F8013B 		ldrb	r3, [r1], #1	@ zero_extendqisi2
 629              	.LVL88:
 630              	.L47:
 631              		.loc 1 326 20 is_stmt 1 discriminator 1 view .LVU212
 632 006a DBB1     		cbz	r3, .L56
 327:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (d == *hc++) {	/* Matched? */
 633              		.loc 1 327 4 view .LVU213
 634              	.LVL89:
 635              		.loc 1 327 13 is_stmt 0 view .LVU214
 636 006c 34F8022B 		ldrh	r2, [r4], #2
 637              	.LVL90:
 638              		.loc 1 327 7 view .LVU215
 639 0070 B242     		cmp	r2, r6
 640 0072 0ED0     		beq	.L57
 328:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				jd->dbit = bm; jd->dctr = dc; jd->dptr = dp;
 329:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				return *hd;		/* Return the decoded data */
 330:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			}
 331:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			hd++;
 641              		.loc 1 331 4 is_stmt 1 view .LVU216
 642              		.loc 1 331 6 is_stmt 0 view .LVU217
 643 0074 0135     		adds	r5, r5, #1
 644              	.LVL91:
 326:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (d == *hc++) {	/* Matched? */
 645              		.loc 1 326 26 is_stmt 1 discriminator 2 view .LVU218
 646 0076 013B     		subs	r3, r3, #1
 647              	.LVL92:
 326:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (d == *hc++) {	/* Matched? */
 648              		.loc 1 326 26 is_stmt 0 discriminator 2 view .LVU219
 649 0078 DBB2     		uxtb	r3, r3
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 19


 650              	.LVL93:
 326:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (d == *hc++) {	/* Matched? */
 651              		.loc 1 326 26 discriminator 2 view .LVU220
 652 007a F6E7     		b	.L47
 653              	.LVL94:
 654              	.L55:
 312:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (*dp != 0) return 0 - (int)JDR_FMT1;	/* Err: unexpected flag is detected (may be collapted d
 655              		.loc 1 312 5 is_stmt 1 view .LVU221
 313:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				*dp = 0xFF;				/* The flag is a data 0xFF */
 656              		.loc 1 313 5 view .LVU222
 313:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				*dp = 0xFF;				/* The flag is a data 0xFF */
 657              		.loc 1 313 9 is_stmt 0 view .LVU223
 658 007c 99F80030 		ldrb	r3, [r9]	@ zero_extendqisi2
 313:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				*dp = 0xFF;				/* The flag is a data 0xFF */
 659              		.loc 1 313 8 view .LVU224
 660 0080 83BB     		cbnz	r3, .L52
 314:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			} else {
 661              		.loc 1 314 5 is_stmt 1 view .LVU225
 314:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			} else {
 662              		.loc 1 314 9 is_stmt 0 view .LVU226
 663 0082 FF23     		movs	r3, #255
 664 0084 89F80030 		strb	r3, [r9]
 320:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		}
 665              		.loc 1 320 7 view .LVU227
 666 0088 4FF08008 		mov	r8, #128
 667              	.LVL95:
 320:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		}
 668              		.loc 1 320 7 view .LVU228
 669 008c 4FF0000B 		mov	fp, #0
 670 0090 DFE7     		b	.L40
 671              	.LVL96:
 672              	.L57:
 328:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				return *hd;		/* Return the decoded data */
 673              		.loc 1 328 5 is_stmt 1 view .LVU229
 328:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				return *hd;		/* Return the decoded data */
 674              		.loc 1 328 14 is_stmt 0 view .LVU230
 675 0092 87F80C80 		strb	r8, [r7, #12]
 328:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				return *hd;		/* Return the decoded data */
 676              		.loc 1 328 20 is_stmt 1 view .LVU231
 328:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				return *hd;		/* Return the decoded data */
 677              		.loc 1 328 29 is_stmt 0 view .LVU232
 678 0096 3860     		str	r0, [r7]
 328:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				return *hd;		/* Return the decoded data */
 679              		.loc 1 328 35 is_stmt 1 view .LVU233
 328:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				return *hd;		/* Return the decoded data */
 680              		.loc 1 328 44 is_stmt 0 view .LVU234
 681 0098 C7F80490 		str	r9, [r7, #4]
 329:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			}
 682              		.loc 1 329 5 is_stmt 1 view .LVU235
 329:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			}
 683              		.loc 1 329 12 is_stmt 0 view .LVU236
 684 009c 2878     		ldrb	r0, [r5]	@ zero_extendqisi2
 685              	.LVL97:
 686              	.L39:
 332:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		}
 333:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		bl--;
 334:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	} while (bl);
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 20


 335:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 336:lvgl/src/extra/libs/sjpg/tjpgd.c **** #else
 337:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	const uint8_t *hb, *hd;
 338:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	const uint16_t *hc;
 339:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	unsigned int nc, bl, wbit = jd->dbit % 32;
 340:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	uint32_t w = jd->wreg & ((1UL << wbit) - 1);
 341:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 342:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 343:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	while (wbit < 16) {	/* Prepare 16 bits into the working register */
 344:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (jd->marker) {
 345:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			d = 0xFF;	/* Input stream has stalled for a marker. Generate stuff bits */
 346:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		} else {
 347:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (!dc) {	/* Buffer empty, re-fill input buffer */
 348:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				dp = jd->inbuf;						/* Top of input buffer */
 349:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				dc = jd->infunc(jd, dp, JD_SZBUF);
 350:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (!dc) return 0 - (int)JDR_INP;	/* Err: read error or wrong stream termination */
 351:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			}
 352:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			d = *dp++; dc--;
 353:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (flg) {		/* In flag sequence? */
 354:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				flg = 0;	/* Exit flag sequence */
 355:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (d != 0) jd->marker = d;	/* Not an escape of 0xFF but a marker */
 356:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				d = 0xFF;
 357:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			} else {
 358:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (d == 0xFF) {		/* Is start of flag sequence? */
 359:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					flg = 1; continue;	/* Enter flag sequence, get trailing byte */
 360:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 361:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			}
 362:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		}
 363:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		w = w << 8 | d;	/* Shift 8 bits in the working register */
 364:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		wbit += 8;
 365:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	}
 366:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	jd->dctr = dc; jd->dptr = dp;
 367:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	jd->wreg = w;
 368:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 369:lvgl/src/extra/libs/sjpg/tjpgd.c **** #if JD_FASTDECODE == 2
 370:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	/* Table serch for the short codes */
 371:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	d = (unsigned int)(w >> (wbit - HUFF_BIT));	/* Short code as table index */
 372:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	if (cls) {	/* AC element */
 373:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		d = jd->hufflut_ac[id][d];	/* Table decode */
 374:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (d != 0xFFFF) {	/* It is done if hit in short code */
 375:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			jd->dbit = wbit - (d >> 8);	/* Snip the code length */
 376:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			return d & 0xFF;	/* b7..0: zero run and following data bits */
 377:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		}
 378:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	} else {	/* DC element */
 379:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		d = jd->hufflut_dc[id][d];	/* Table decode */
 380:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (d != 0xFF) {	/* It is done if hit in short code */
 381:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			jd->dbit = wbit - (d >> 4);	/* Snip the code length  */
 382:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			return d & 0xF;	/* b3..0: following data bits */
 383:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		}
 384:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	}
 385:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 386:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	/* Incremental serch for the codes longer than HUFF_BIT */
 387:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	hb = jd->huffbits[id][cls] + HUFF_BIT;				/* Bit distribution table */
 388:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	hc = jd->huffcode[id][cls] + jd->longofs[id][cls];	/* Code word table */
 389:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	hd = jd->huffdata[id][cls] + jd->longofs[id][cls];	/* Data table */
 390:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	bl = HUFF_BIT + 1;
 391:lvgl/src/extra/libs/sjpg/tjpgd.c **** #else
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 21


 392:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	/* Incremental serch for all codes */
 393:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	hb = jd->huffbits[id][cls];	/* Bit distribution table */
 394:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	hc = jd->huffcode[id][cls];	/* Code word table */
 395:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	hd = jd->huffdata[id][cls];	/* Data table */
 396:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	bl = 1;
 397:lvgl/src/extra/libs/sjpg/tjpgd.c **** #endif
 398:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	for ( ; bl <= 16; bl++) {	/* Incremental search */
 399:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		nc = *hb++;
 400:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (nc) {
 401:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			d = w >> (wbit - bl);
 402:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			do {	/* Search the code word in this bit length */
 403:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (d == *hc++) {		/* Matched? */
 404:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					jd->dbit = wbit - bl;	/* Snip the huffman code */
 405:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					return *hd;			/* Return the decoded data */
 406:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 407:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				hd++;
 408:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			} while (--nc);
 409:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		}
 410:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	}
 411:lvgl/src/extra/libs/sjpg/tjpgd.c **** #endif
 412:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 413:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	return 0 - (int)JDR_FMT1;	/* Err: code not found (may be collapted data) */
 414:lvgl/src/extra/libs/sjpg/tjpgd.c **** }
 687              		.loc 1 414 1 view .LVU237
 688 009e 03B0     		add	sp, sp, #12
 689              	.LCFI4:
 690              		.cfi_remember_state
 691              		.cfi_def_cfa_offset 36
 692              		@ sp needed
 693 00a0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 694              	.LVL98:
 695              	.L56:
 696              	.LCFI5:
 697              		.cfi_restore_state
 333:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	} while (bl);
 698              		.loc 1 333 3 is_stmt 1 view .LVU238
 333:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	} while (bl);
 699              		.loc 1 333 5 is_stmt 0 view .LVU239
 700 00a4 0AF1FF3A 		add	r10, r10, #-1
 701              	.LVL99:
 333:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	} while (bl);
 702              		.loc 1 333 5 view .LVU240
 703 00a8 5FFA8AFA 		uxtb	r10, r10
 704              	.LVL100:
 326:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (d == *hc++) {	/* Matched? */
 705              		.loc 1 326 16 view .LVU241
 706 00ac 0191     		str	r1, [sp, #4]
 707              	.LVL101:
 708              	.L45:
 334:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 709              		.loc 1 334 11 is_stmt 1 view .LVU242
 710 00ae BAF1000F 		cmp	r10, #0
 711 00b2 14D0     		beq	.L58
 712              	.LVL102:
 713              	.L50:
 301:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (!bm) {		/* Next byte? */
 714              		.loc 1 301 2 view .LVU243
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 22


 302:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (!dc) {	/* No input data is available, re-fill input buffer */
 715              		.loc 1 302 3 view .LVU244
 302:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (!dc) {	/* No input data is available, re-fill input buffer */
 716              		.loc 1 302 6 is_stmt 0 view .LVU245
 717 00b4 B8F1000F 		cmp	r8, #0
 718 00b8 CBD1     		bne	.L40
 303:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				dp = jd->inbuf;	/* Top of input buffer */
 719              		.loc 1 303 4 is_stmt 1 view .LVU246
 303:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				dp = jd->inbuf;	/* Top of input buffer */
 720              		.loc 1 303 7 is_stmt 0 view .LVU247
 721 00ba 0028     		cmp	r0, #0
 722 00bc BDD1     		bne	.L41
 304:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				dc = jd->infunc(jd, dp, JD_SZBUF);
 723              		.loc 1 304 5 is_stmt 1 view .LVU248
 304:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				dc = jd->infunc(jd, dp, JD_SZBUF);
 724              		.loc 1 304 8 is_stmt 0 view .LVU249
 725 00be D7F80890 		ldr	r9, [r7, #8]
 726              	.LVL103:
 305:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (!dc) return 0 - (int)JDR_INP;	/* Err: read error or wrong stream termination */
 727              		.loc 1 305 5 is_stmt 1 view .LVU250
 305:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (!dc) return 0 - (int)JDR_INP;	/* Err: read error or wrong stream termination */
 728              		.loc 1 305 12 is_stmt 0 view .LVU251
 729 00c2 3B6F     		ldr	r3, [r7, #112]
 305:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (!dc) return 0 - (int)JDR_INP;	/* Err: read error or wrong stream termination */
 730              		.loc 1 305 10 view .LVU252
 731 00c4 4FF40072 		mov	r2, #512
 732 00c8 4946     		mov	r1, r9
 733 00ca 3846     		mov	r0, r7
 734              	.LVL104:
 305:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (!dc) return 0 - (int)JDR_INP;	/* Err: read error or wrong stream termination */
 735              		.loc 1 305 10 view .LVU253
 736 00cc 9847     		blx	r3
 737              	.LVL105:
 306:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			} else {
 738              		.loc 1 306 5 is_stmt 1 view .LVU254
 306:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			} else {
 739              		.loc 1 306 8 is_stmt 0 view .LVU255
 740 00ce 0028     		cmp	r0, #0
 741 00d0 B5D1     		bne	.L43
 306:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			} else {
 742              		.loc 1 306 21 discriminator 1 view .LVU256
 743 00d2 6FF00100 		mvn	r0, #1
 744              	.LVL106:
 306:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			} else {
 745              		.loc 1 306 21 discriminator 1 view .LVU257
 746 00d6 E2E7     		b	.L39
 747              	.LVL107:
 748              	.L53:
 317:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 749              		.loc 1 317 10 view .LVU258
 750 00d8 4FF0010B 		mov	fp, #1
 751              	.LVL108:
 317:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 752              		.loc 1 317 10 view .LVU259
 753 00dc E7E7     		b	.L45
 754              	.LVL109:
 755              	.L58:
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 23


 413:lvgl/src/extra/libs/sjpg/tjpgd.c **** }
 756              		.loc 1 413 9 view .LVU260
 757 00de 6FF00500 		mvn	r0, #5
 758              	.LVL110:
 413:lvgl/src/extra/libs/sjpg/tjpgd.c **** }
 759              		.loc 1 413 9 view .LVU261
 760 00e2 DCE7     		b	.L39
 761              	.LVL111:
 762              	.L52:
 313:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				*dp = 0xFF;				/* The flag is a data 0xFF */
 763              		.loc 1 313 26 discriminator 1 view .LVU262
 764 00e4 6FF00500 		mvn	r0, #5
 765              	.LVL112:
 313:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				*dp = 0xFF;				/* The flag is a data 0xFF */
 766              		.loc 1 313 26 discriminator 1 view .LVU263
 767 00e8 D9E7     		b	.L39
 768              		.cfi_endproc
 769              	.LFE3:
 771              		.section	.text.bitext,"ax",%progbits
 772              		.align	1
 773              		.syntax unified
 774              		.thumb
 775              		.thumb_func
 777              	bitext:
 778              	.LVL113:
 779              	.LFB4:
 415:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 416:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 417:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 418:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 419:lvgl/src/extra/libs/sjpg/tjpgd.c **** /*-----------------------------------------------------------------------*/
 420:lvgl/src/extra/libs/sjpg/tjpgd.c **** /* Extract N bits from input stream                                      */
 421:lvgl/src/extra/libs/sjpg/tjpgd.c **** /*-----------------------------------------------------------------------*/
 422:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 423:lvgl/src/extra/libs/sjpg/tjpgd.c **** static int bitext (	/* >=0: extracted data, <0: error code */
 424:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	JDEC* jd,			/* Pointer to the decompressor object */
 425:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	unsigned int nbit	/* Number of bits to extract (1 to 16) */
 426:lvgl/src/extra/libs/sjpg/tjpgd.c **** )
 427:lvgl/src/extra/libs/sjpg/tjpgd.c **** {
 780              		.loc 1 427 1 is_stmt 1 view -0
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 0
 783              		@ frame_needed = 0, uses_anonymous_args = 0
 784              		.loc 1 427 1 is_stmt 0 view .LVU265
 785 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 786              	.LCFI6:
 787              		.cfi_def_cfa_offset 32
 788              		.cfi_offset 3, -32
 789              		.cfi_offset 4, -28
 790              		.cfi_offset 5, -24
 791              		.cfi_offset 6, -20
 792              		.cfi_offset 7, -16
 793              		.cfi_offset 8, -12
 794              		.cfi_offset 9, -8
 795              		.cfi_offset 14, -4
 796 0004 8046     		mov	r8, r0
 797 0006 0D46     		mov	r5, r1
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 24


 428:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	size_t dc = jd->dctr;
 798              		.loc 1 428 2 is_stmt 1 view .LVU266
 799              		.loc 1 428 9 is_stmt 0 view .LVU267
 800 0008 0268     		ldr	r2, [r0]
 801              	.LVL114:
 429:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	uint8_t *dp = jd->dptr;
 802              		.loc 1 429 2 is_stmt 1 view .LVU268
 803              		.loc 1 429 11 is_stmt 0 view .LVU269
 804 000a 4768     		ldr	r7, [r0, #4]
 805              	.LVL115:
 430:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	unsigned int d, flg = 0;
 806              		.loc 1 430 2 is_stmt 1 view .LVU270
 431:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 432:lvgl/src/extra/libs/sjpg/tjpgd.c **** #if JD_FASTDECODE == 0
 433:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	uint8_t mbit = jd->dbit;
 807              		.loc 1 433 2 view .LVU271
 808              		.loc 1 433 10 is_stmt 0 view .LVU272
 809 000c 047B     		ldrb	r4, [r0, #12]	@ zero_extendqisi2
 810              	.LVL116:
 434:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 435:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	d = 0;
 811              		.loc 1 435 2 is_stmt 1 view .LVU273
 430:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 812              		.loc 1 430 18 is_stmt 0 view .LVU274
 813 000e 4FF00009 		mov	r9, #0
 814              		.loc 1 435 4 view .LVU275
 815 0012 4E46     		mov	r6, r9
 816 0014 14E0     		b	.L67
 817              	.LVL117:
 818              	.L61:
 436:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	do {
 437:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (!mbit) {			/* Next byte? */
 438:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (!dc) {			/* No input data is available, re-fill input buffer */
 439:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				dp = jd->inbuf;	/* Top of input buffer */
 440:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				dc = jd->infunc(jd, dp, JD_SZBUF);
 441:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (!dc) return 0 - (int)JDR_INP;	/* Err: read error or wrong stream termination */
 442:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			} else {
 443:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				dp++;			/* Next data ptr */
 819              		.loc 1 443 5 is_stmt 1 view .LVU276
 820              		.loc 1 443 7 is_stmt 0 view .LVU277
 821 0016 0137     		adds	r7, r7, #1
 822              	.LVL118:
 823              	.L63:
 444:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			}
 445:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			dc--;				/* Decrement number of available bytes */
 824              		.loc 1 445 4 is_stmt 1 view .LVU278
 825              		.loc 1 445 6 is_stmt 0 view .LVU279
 826 0018 013A     		subs	r2, r2, #1
 827              	.LVL119:
 446:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (flg) {			/* In flag sequence? */
 828              		.loc 1 446 4 is_stmt 1 view .LVU280
 829              		.loc 1 446 7 is_stmt 0 view .LVU281
 830 001a B9F1000F 		cmp	r9, #0
 831 001e 22D0     		beq	.L64
 447:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				flg = 0;		/* Exit flag sequence */
 832              		.loc 1 447 5 is_stmt 1 view .LVU282
 833              	.LVL120:
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 25


 448:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (*dp != 0) return 0 - (int)JDR_FMT1;	/* Err: unexpected flag is detected (may be collapted d
 834              		.loc 1 448 5 view .LVU283
 835              		.loc 1 448 9 is_stmt 0 view .LVU284
 836 0020 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 837              		.loc 1 448 8 view .LVU285
 838 0022 8BBB     		cbnz	r3, .L69
 449:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				*dp = 0xFF;		/* The flag is a data 0xFF */
 839              		.loc 1 449 5 is_stmt 1 view .LVU286
 840              		.loc 1 449 9 is_stmt 0 view .LVU287
 841 0024 FF23     		movs	r3, #255
 842 0026 3B70     		strb	r3, [r7]
 450:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			} else {
 451:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (*dp == 0xFF) {		/* Is start of flag sequence? */
 452:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					flg = 1; continue;	/* Enter flag sequence */
 453:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 454:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			}
 455:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			mbit = 0x80;		/* Read from MSB */
 843              		.loc 1 455 9 view .LVU288
 844 0028 8024     		movs	r4, #128
 845              	.LVL121:
 846              		.loc 1 455 9 view .LVU289
 847 002a 4FF00009 		mov	r9, #0
 848              	.LVL122:
 849              	.L60:
 456:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		}
 457:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		d <<= 1;	/* Get a bit */
 850              		.loc 1 457 3 is_stmt 1 view .LVU290
 851              		.loc 1 457 5 is_stmt 0 view .LVU291
 852 002e 7600     		lsls	r6, r6, #1
 853              	.LVL123:
 458:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (*dp & mbit) d |= 1;
 854              		.loc 1 458 3 is_stmt 1 view .LVU292
 855              		.loc 1 458 7 is_stmt 0 view .LVU293
 856 0030 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 857              		.loc 1 458 6 view .LVU294
 858 0032 1C42     		tst	r4, r3
 859 0034 01D0     		beq	.L66
 860              		.loc 1 458 19 is_stmt 1 discriminator 1 view .LVU295
 861              		.loc 1 458 21 is_stmt 0 discriminator 1 view .LVU296
 862 0036 46F00106 		orr	r6, r6, #1
 863              	.LVL124:
 864              	.L66:
 459:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		mbit >>= 1;
 865              		.loc 1 459 3 is_stmt 1 view .LVU297
 866              		.loc 1 459 8 is_stmt 0 view .LVU298
 867 003a 6408     		lsrs	r4, r4, #1
 868              	.LVL125:
 460:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		nbit--;
 869              		.loc 1 460 3 is_stmt 1 view .LVU299
 870              		.loc 1 460 7 is_stmt 0 view .LVU300
 871 003c 013D     		subs	r5, r5, #1
 872              	.LVL126:
 873              	.L65:
 461:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	} while (nbit);
 874              		.loc 1 461 11 is_stmt 1 view .LVU301
 875 003e D5B1     		cbz	r5, .L72
 876              	.LVL127:
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 26


 877              	.L67:
 436:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (!mbit) {			/* Next byte? */
 878              		.loc 1 436 2 view .LVU302
 437:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (!dc) {			/* No input data is available, re-fill input buffer */
 879              		.loc 1 437 3 view .LVU303
 437:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (!dc) {			/* No input data is available, re-fill input buffer */
 880              		.loc 1 437 6 is_stmt 0 view .LVU304
 881 0040 002C     		cmp	r4, #0
 882 0042 F4D1     		bne	.L60
 438:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				dp = jd->inbuf;	/* Top of input buffer */
 883              		.loc 1 438 4 is_stmt 1 view .LVU305
 438:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				dp = jd->inbuf;	/* Top of input buffer */
 884              		.loc 1 438 7 is_stmt 0 view .LVU306
 885 0044 002A     		cmp	r2, #0
 886 0046 E6D1     		bne	.L61
 439:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				dc = jd->infunc(jd, dp, JD_SZBUF);
 887              		.loc 1 439 5 is_stmt 1 view .LVU307
 439:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				dc = jd->infunc(jd, dp, JD_SZBUF);
 888              		.loc 1 439 8 is_stmt 0 view .LVU308
 889 0048 D8F80870 		ldr	r7, [r8, #8]
 890              	.LVL128:
 440:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (!dc) return 0 - (int)JDR_INP;	/* Err: read error or wrong stream termination */
 891              		.loc 1 440 5 is_stmt 1 view .LVU309
 440:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (!dc) return 0 - (int)JDR_INP;	/* Err: read error or wrong stream termination */
 892              		.loc 1 440 12 is_stmt 0 view .LVU310
 893 004c D8F87030 		ldr	r3, [r8, #112]
 440:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (!dc) return 0 - (int)JDR_INP;	/* Err: read error or wrong stream termination */
 894              		.loc 1 440 10 view .LVU311
 895 0050 4FF40072 		mov	r2, #512
 896              	.LVL129:
 440:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (!dc) return 0 - (int)JDR_INP;	/* Err: read error or wrong stream termination */
 897              		.loc 1 440 10 view .LVU312
 898 0054 3946     		mov	r1, r7
 899 0056 4046     		mov	r0, r8
 900 0058 9847     		blx	r3
 901              	.LVL130:
 441:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			} else {
 902              		.loc 1 441 5 is_stmt 1 view .LVU313
 441:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			} else {
 903              		.loc 1 441 8 is_stmt 0 view .LVU314
 904 005a 0246     		mov	r2, r0
 905 005c 0028     		cmp	r0, #0
 906 005e DBD1     		bne	.L63
 441:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			} else {
 907              		.loc 1 441 21 discriminator 1 view .LVU315
 908 0060 6FF00100 		mvn	r0, #1
 909              	.LVL131:
 441:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			} else {
 910              		.loc 1 441 21 discriminator 1 view .LVU316
 911 0064 0EE0     		b	.L59
 912              	.L64:
 451:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					flg = 1; continue;	/* Enter flag sequence */
 913              		.loc 1 451 5 is_stmt 1 view .LVU317
 451:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					flg = 1; continue;	/* Enter flag sequence */
 914              		.loc 1 451 9 is_stmt 0 view .LVU318
 915 0066 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 451:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					flg = 1; continue;	/* Enter flag sequence */
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 27


 916              		.loc 1 451 8 view .LVU319
 917 0068 FF2B     		cmp	r3, #255
 918 006a 01D0     		beq	.L70
 455:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		}
 919              		.loc 1 455 9 view .LVU320
 920 006c 8024     		movs	r4, #128
 921              	.LVL132:
 455:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		}
 922              		.loc 1 455 9 view .LVU321
 923 006e DEE7     		b	.L60
 924              	.LVL133:
 925              	.L70:
 452:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 926              		.loc 1 452 10 view .LVU322
 927 0070 4FF00109 		mov	r9, #1
 928              	.LVL134:
 452:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 929              		.loc 1 452 10 view .LVU323
 930 0074 E3E7     		b	.L65
 931              	.LVL135:
 932              	.L72:
 462:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 463:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	jd->dbit = mbit; jd->dctr = dc; jd->dptr = dp;
 933              		.loc 1 463 2 is_stmt 1 view .LVU324
 934              		.loc 1 463 11 is_stmt 0 view .LVU325
 935 0076 88F80C40 		strb	r4, [r8, #12]
 936              		.loc 1 463 19 is_stmt 1 view .LVU326
 937              		.loc 1 463 28 is_stmt 0 view .LVU327
 938 007a C8F80020 		str	r2, [r8]
 939              		.loc 1 463 34 is_stmt 1 view .LVU328
 940              		.loc 1 463 43 is_stmt 0 view .LVU329
 941 007e C8F80470 		str	r7, [r8, #4]
 464:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	return (int)d;
 942              		.loc 1 464 2 is_stmt 1 view .LVU330
 943              		.loc 1 464 9 is_stmt 0 view .LVU331
 944 0082 3046     		mov	r0, r6
 945              	.LVL136:
 946              	.L59:
 465:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 466:lvgl/src/extra/libs/sjpg/tjpgd.c **** #else
 467:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	unsigned int wbit = jd->dbit % 32;
 468:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	uint32_t w = jd->wreg & ((1UL << wbit) - 1);
 469:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 470:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 471:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	while (wbit < nbit) {	/* Prepare nbit bits into the working register */
 472:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (jd->marker) {
 473:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			d = 0xFF;	/* Input stream stalled, generate stuff bits */
 474:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		} else {
 475:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (!dc) {	/* Buffer empty, re-fill input buffer */
 476:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				dp = jd->inbuf;	/* Top of input buffer */
 477:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				dc = jd->infunc(jd, dp, JD_SZBUF);
 478:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (!dc) return 0 - (int)JDR_INP;	/* Err: read error or wrong stream termination */
 479:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			}
 480:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			d = *dp++; dc--;
 481:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (flg) {		/* In flag sequence? */
 482:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				flg = 0;	/* Exit flag sequence */
 483:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (d != 0) jd->marker = d;	/* Not an escape of 0xFF but a marker */
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 28


 484:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				d = 0xFF;
 485:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			} else {
 486:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (d == 0xFF) {		/* Is start of flag sequence? */
 487:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					flg = 1; continue;	/* Enter flag sequence, get trailing byte */
 488:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 489:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			}
 490:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		}
 491:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		w = w << 8 | d;	/* Get 8 bits into the working register */
 492:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		wbit += 8;
 493:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	}
 494:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	jd->wreg = w; jd->dbit = wbit - nbit;
 495:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	jd->dctr = dc; jd->dptr = dp;
 496:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 497:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	return (int)(w >> ((wbit - nbit) % 32));
 498:lvgl/src/extra/libs/sjpg/tjpgd.c **** #endif
 499:lvgl/src/extra/libs/sjpg/tjpgd.c **** }
 947              		.loc 1 499 1 view .LVU332
 948 0084 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 949              	.LVL137:
 950              	.L69:
 448:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				*dp = 0xFF;		/* The flag is a data 0xFF */
 951              		.loc 1 448 26 discriminator 1 view .LVU333
 952 0088 6FF00500 		mvn	r0, #5
 953 008c FAE7     		b	.L59
 954              		.cfi_endproc
 955              	.LFE4:
 957              		.section	.text.restart,"ax",%progbits
 958              		.align	1
 959              		.syntax unified
 960              		.thumb
 961              		.thumb_func
 963              	restart:
 964              	.LVL138:
 965              	.LFB5:
 500:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 501:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 502:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 503:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 504:lvgl/src/extra/libs/sjpg/tjpgd.c **** /*-----------------------------------------------------------------------*/
 505:lvgl/src/extra/libs/sjpg/tjpgd.c **** /* Process restart interval                                              */
 506:lvgl/src/extra/libs/sjpg/tjpgd.c **** /*-----------------------------------------------------------------------*/
 507:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 508:lvgl/src/extra/libs/sjpg/tjpgd.c **** static JRESULT restart (
 509:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	JDEC* jd,		/* Pointer to the decompressor object */
 510:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	uint16_t rstn	/* Expected restert sequense number */
 511:lvgl/src/extra/libs/sjpg/tjpgd.c **** )
 512:lvgl/src/extra/libs/sjpg/tjpgd.c **** {
 966              		.loc 1 512 1 is_stmt 1 view -0
 967              		.cfi_startproc
 968              		@ args = 0, pretend = 0, frame = 0
 969              		@ frame_needed = 0, uses_anonymous_args = 0
 970              		.loc 1 512 1 is_stmt 0 view .LVU335
 971 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 972              	.LCFI7:
 973              		.cfi_def_cfa_offset 24
 974              		.cfi_offset 4, -24
 975              		.cfi_offset 5, -20
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 29


 976              		.cfi_offset 6, -16
 977              		.cfi_offset 7, -12
 978              		.cfi_offset 8, -8
 979              		.cfi_offset 14, -4
 980 0004 0446     		mov	r4, r0
 981 0006 8846     		mov	r8, r1
 513:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	unsigned int i;
 982              		.loc 1 513 2 is_stmt 1 view .LVU336
 514:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	uint8_t *dp = jd->dptr;
 983              		.loc 1 514 2 view .LVU337
 984              		.loc 1 514 11 is_stmt 0 view .LVU338
 985 0008 4668     		ldr	r6, [r0, #4]
 986              	.LVL139:
 515:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	size_t dc = jd->dctr;
 987              		.loc 1 515 2 is_stmt 1 view .LVU339
 988              		.loc 1 515 9 is_stmt 0 view .LVU340
 989 000a 0368     		ldr	r3, [r0]
 990              	.LVL140:
 516:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 517:lvgl/src/extra/libs/sjpg/tjpgd.c **** #if JD_FASTDECODE == 0
 518:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	uint16_t d = 0;
 991              		.loc 1 518 2 is_stmt 1 view .LVU341
 519:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 520:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	/* Get two bytes from the input stream */
 521:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	for (i = 0; i < 2; i++) {
 992              		.loc 1 521 2 view .LVU342
 518:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 993              		.loc 1 518 11 is_stmt 0 view .LVU343
 994 000c 0025     		movs	r5, #0
 995              		.loc 1 521 9 view .LVU344
 996 000e 2F46     		mov	r7, r5
 997              		.loc 1 521 2 view .LVU345
 998 0010 06E0     		b	.L74
 999              	.LVL141:
 1000              	.L75:
 522:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (!dc) {	/* No input data is available, re-fill input buffer */
 523:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			dp = jd->inbuf;
 524:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			dc = jd->infunc(jd, dp, JD_SZBUF);
 525:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (!dc) return JDR_INP;
 526:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		} else {
 527:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			dp++;
 1001              		.loc 1 527 4 is_stmt 1 view .LVU346
 1002              		.loc 1 527 6 is_stmt 0 view .LVU347
 1003 0012 0136     		adds	r6, r6, #1
 1004              	.LVL142:
 1005              	.L77:
 528:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		}
 529:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		dc--;
 1006              		.loc 1 529 3 is_stmt 1 view .LVU348
 1007              		.loc 1 529 5 is_stmt 0 view .LVU349
 1008 0014 013B     		subs	r3, r3, #1
 1009              	.LVL143:
 530:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		d = d << 8 | *dp;	/* Get a byte */
 1010              		.loc 1 530 3 is_stmt 1 view .LVU350
 1011              		.loc 1 530 16 is_stmt 0 view .LVU351
 1012 0016 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 1013              		.loc 1 530 14 view .LVU352
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 30


 1014 0018 42EA0522 		orr	r2, r2, r5, lsl #8
 1015              		.loc 1 530 5 view .LVU353
 1016 001c 95B2     		uxth	r5, r2
 1017              	.LVL144:
 521:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (!dc) {	/* No input data is available, re-fill input buffer */
 1018              		.loc 1 521 22 is_stmt 1 discriminator 2 view .LVU354
 1019 001e 0137     		adds	r7, r7, #1
 1020              	.LVL145:
 1021              	.L74:
 521:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (!dc) {	/* No input data is available, re-fill input buffer */
 1022              		.loc 1 521 16 discriminator 1 view .LVU355
 1023 0020 012F     		cmp	r7, #1
 1024 0022 0DD8     		bhi	.L83
 522:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			dp = jd->inbuf;
 1025              		.loc 1 522 3 view .LVU356
 522:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			dp = jd->inbuf;
 1026              		.loc 1 522 6 is_stmt 0 view .LVU357
 1027 0024 002B     		cmp	r3, #0
 1028 0026 F4D1     		bne	.L75
 523:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			dc = jd->infunc(jd, dp, JD_SZBUF);
 1029              		.loc 1 523 4 is_stmt 1 view .LVU358
 523:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			dc = jd->infunc(jd, dp, JD_SZBUF);
 1030              		.loc 1 523 7 is_stmt 0 view .LVU359
 1031 0028 A668     		ldr	r6, [r4, #8]
 1032              	.LVL146:
 524:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (!dc) return JDR_INP;
 1033              		.loc 1 524 4 is_stmt 1 view .LVU360
 524:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (!dc) return JDR_INP;
 1034              		.loc 1 524 11 is_stmt 0 view .LVU361
 1035 002a 236F     		ldr	r3, [r4, #112]
 1036              	.LVL147:
 524:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (!dc) return JDR_INP;
 1037              		.loc 1 524 9 view .LVU362
 1038 002c 4FF40072 		mov	r2, #512
 1039 0030 3146     		mov	r1, r6
 1040 0032 2046     		mov	r0, r4
 1041 0034 9847     		blx	r3
 1042              	.LVL148:
 525:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		} else {
 1043              		.loc 1 525 4 is_stmt 1 view .LVU363
 525:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		} else {
 1044              		.loc 1 525 7 is_stmt 0 view .LVU364
 1045 0036 0346     		mov	r3, r0
 1046 0038 0028     		cmp	r0, #0
 1047 003a EBD1     		bne	.L77
 525:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		} else {
 1048              		.loc 1 525 20 discriminator 1 view .LVU365
 1049 003c 0220     		movs	r0, #2
 1050              	.LVL149:
 525:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		} else {
 1051              		.loc 1 525 20 discriminator 1 view .LVU366
 1052 003e 13E0     		b	.L76
 1053              	.L83:
 531:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	}
 532:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	jd->dptr = dp; jd->dctr = dc; jd->dbit = 0;
 1054              		.loc 1 532 2 is_stmt 1 view .LVU367
 1055              		.loc 1 532 11 is_stmt 0 view .LVU368
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 31


 1056 0040 6660     		str	r6, [r4, #4]
 1057              		.loc 1 532 17 is_stmt 1 view .LVU369
 1058              		.loc 1 532 26 is_stmt 0 view .LVU370
 1059 0042 2360     		str	r3, [r4]
 1060              		.loc 1 532 32 is_stmt 1 view .LVU371
 1061              		.loc 1 532 41 is_stmt 0 view .LVU372
 1062 0044 0023     		movs	r3, #0
 1063              	.LVL150:
 1064              		.loc 1 532 41 view .LVU373
 1065 0046 2373     		strb	r3, [r4, #12]
 533:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 534:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	/* Check the marker */
 535:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	if ((d & 0xFFD8) != 0xFFD0 || (d & 7) != (rstn & 7)) {
 1066              		.loc 1 535 2 is_stmt 1 view .LVU374
 1067              		.loc 1 535 5 is_stmt 0 view .LVU375
 1068 0048 25F02703 		bic	r3, r5, #39
 1069 004c 9BB2     		uxth	r3, r3
 1070 004e 4FF6D072 		movw	r2, #65488
 1071 0052 9342     		cmp	r3, r2
 1072 0054 0AD1     		bne	.L80
 1073              		.loc 1 535 40 discriminator 1 view .LVU376
 1074 0056 85EA0805 		eor	r5, r5, r8
 1075              	.LVL151:
 1076              		.loc 1 535 29 discriminator 1 view .LVU377
 1077 005a 15F0070F 		tst	r5, #7
 1078 005e 07D1     		bne	.L81
 536:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		return JDR_FMT1;	/* Err: expected RSTn marker is not detected (may be collapted data) */
 537:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	}
 538:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 539:lvgl/src/extra/libs/sjpg/tjpgd.c **** #else
 540:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	uint16_t marker;
 541:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 542:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 543:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	if (jd->marker) {	/* Generate a maker if it has been detected */
 544:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		marker = 0xFF00 | jd->marker;
 545:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		jd->marker = 0;
 546:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	} else {
 547:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		marker = 0;
 548:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		for (i = 0; i < 2; i++) {	/* Get a restart marker */
 549:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (!dc) {		/* No input data is available, re-fill input buffer */
 550:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				dp = jd->inbuf;
 551:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				dc = jd->infunc(jd, dp, JD_SZBUF);
 552:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (!dc) return JDR_INP;
 553:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			}
 554:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			marker = (marker << 8) | *dp++;	/* Get a byte */
 555:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			dc--;
 556:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		}
 557:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		jd->dptr = dp; jd->dctr = dc;
 558:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	}
 559:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 560:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	/* Check the marker */
 561:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	if ((marker & 0xFFD8) != 0xFFD0 || (marker & 7) != (rstn & 7)) {
 562:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		return JDR_FMT1;	/* Err: expected RSTn marker was not detected (may be collapted data) */
 563:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	}
 564:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 565:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	jd->dbit = 0;			/* Discard stuff bits */
 566:lvgl/src/extra/libs/sjpg/tjpgd.c **** #endif
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 32


 567:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 568:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	jd->dcv[2] = jd->dcv[1] = jd->dcv[0] = 0;	/* Reset DC offset */
 1079              		.loc 1 568 2 is_stmt 1 view .LVU378
 1080              		.loc 1 568 39 is_stmt 0 view .LVU379
 1081 0060 0020     		movs	r0, #0
 1082 0062 A082     		strh	r0, [r4, #20]	@ movhi
 1083              		.loc 1 568 26 view .LVU380
 1084 0064 E082     		strh	r0, [r4, #22]	@ movhi
 1085              		.loc 1 568 13 view .LVU381
 1086 0066 2083     		strh	r0, [r4, #24]	@ movhi
 569:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	return JDR_OK;
 1087              		.loc 1 569 2 is_stmt 1 view .LVU382
 1088              	.LVL152:
 1089              	.L76:
 570:lvgl/src/extra/libs/sjpg/tjpgd.c **** }
 1090              		.loc 1 570 1 is_stmt 0 view .LVU383
 1091 0068 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1092              	.LVL153:
 1093              	.L80:
 536:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		return JDR_FMT1;	/* Err: expected RSTn marker is not detected (may be collapted data) */
 1094              		.loc 1 536 10 view .LVU384
 1095 006c 0620     		movs	r0, #6
 1096 006e FBE7     		b	.L76
 1097              	.LVL154:
 1098              	.L81:
 536:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		return JDR_FMT1;	/* Err: expected RSTn marker is not detected (may be collapted data) */
 1099              		.loc 1 536 10 view .LVU385
 1100 0070 0620     		movs	r0, #6
 1101 0072 F9E7     		b	.L76
 1102              		.cfi_endproc
 1103              	.LFE5:
 1105              		.section	.text.block_idct,"ax",%progbits
 1106              		.align	1
 1107              		.syntax unified
 1108              		.thumb
 1109              		.thumb_func
 1111              	block_idct:
 1112              	.LVL155:
 1113              	.LFB6:
 571:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 572:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 573:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 574:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 575:lvgl/src/extra/libs/sjpg/tjpgd.c **** /*-----------------------------------------------------------------------*/
 576:lvgl/src/extra/libs/sjpg/tjpgd.c **** /* Apply Inverse-DCT in Arai Algorithm (see also aa_idct.png)            */
 577:lvgl/src/extra/libs/sjpg/tjpgd.c **** /*-----------------------------------------------------------------------*/
 578:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 579:lvgl/src/extra/libs/sjpg/tjpgd.c **** static void block_idct (
 580:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	int32_t* src,	/* Input block data (de-quantized and pre-scaled for Arai Algorithm) */
 581:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	jd_yuv_t* dst	/* Pointer to the destination to store the block as byte array */
 582:lvgl/src/extra/libs/sjpg/tjpgd.c **** )
 583:lvgl/src/extra/libs/sjpg/tjpgd.c **** {
 1114              		.loc 1 583 1 is_stmt 1 view -0
 1115              		.cfi_startproc
 1116              		@ args = 0, pretend = 0, frame = 0
 1117              		@ frame_needed = 0, uses_anonymous_args = 0
 1118              		.loc 1 583 1 is_stmt 0 view .LVU387
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 33


 1119 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1120              	.LCFI8:
 1121              		.cfi_def_cfa_offset 32
 1122              		.cfi_offset 4, -32
 1123              		.cfi_offset 5, -28
 1124              		.cfi_offset 6, -24
 1125              		.cfi_offset 7, -20
 1126              		.cfi_offset 8, -16
 1127              		.cfi_offset 9, -12
 1128              		.cfi_offset 10, -8
 1129              		.cfi_offset 14, -4
 584:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	const int32_t M13 = (int32_t)(1.41421*4096), M2 = (int32_t)(1.08239*4096), M4 = (int32_t)(2.61313*
 1130              		.loc 1 584 2 is_stmt 1 view .LVU388
 1131              	.LVL156:
 585:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	int32_t v0, v1, v2, v3, v4, v5, v6, v7;
 1132              		.loc 1 585 2 view .LVU389
 586:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	int32_t t10, t11, t12, t13;
 1133              		.loc 1 586 2 view .LVU390
 587:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	int i;
 1134              		.loc 1 587 2 view .LVU391
 588:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 589:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	/* Process columns */
 590:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	for (i = 0; i < 8; i++) {
 1135              		.loc 1 590 2 view .LVU392
 1136              		.loc 1 590 9 is_stmt 0 view .LVU393
 1137 0004 4FF00008 		mov	r8, #0
 1138              		.loc 1 590 2 view .LVU394
 1139 0008 5DE0     		b	.L85
 1140              	.LVL157:
 1141              	.L86:
 591:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v0 = src[8 * 0];	/* Get even elements */
 1142              		.loc 1 591 3 is_stmt 1 view .LVU395
 1143              		.loc 1 591 6 is_stmt 0 view .LVU396
 1144 000a 0668     		ldr	r6, [r0]
 1145              	.LVL158:
 592:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v1 = src[8 * 2];
 1146              		.loc 1 592 3 is_stmt 1 view .LVU397
 1147              		.loc 1 592 6 is_stmt 0 view .LVU398
 1148 000c 026C     		ldr	r2, [r0, #64]
 1149              	.LVL159:
 593:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v2 = src[8 * 4];
 1150              		.loc 1 593 3 is_stmt 1 view .LVU399
 1151              		.loc 1 593 6 is_stmt 0 view .LVU400
 1152 000e D0F88030 		ldr	r3, [r0, #128]
 1153              	.LVL160:
 594:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v3 = src[8 * 6];
 1154              		.loc 1 594 3 is_stmt 1 view .LVU401
 1155              		.loc 1 594 6 is_stmt 0 view .LVU402
 1156 0012 D0F8C050 		ldr	r5, [r0, #192]
 1157              	.LVL161:
 595:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 596:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		t10 = v0 + v2;		/* Process the even elements */
 1158              		.loc 1 596 3 is_stmt 1 view .LVU403
 1159              		.loc 1 596 7 is_stmt 0 view .LVU404
 1160 0016 F418     		adds	r4, r6, r3
 1161              	.LVL162:
 597:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		t12 = v0 - v2;
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 34


 1162              		.loc 1 597 3 is_stmt 1 view .LVU405
 1163              		.loc 1 597 7 is_stmt 0 view .LVU406
 1164 0018 A6EB030C 		sub	ip, r6, r3
 1165              	.LVL163:
 598:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		t11 = (v1 - v3) * M13 >> 12;
 1166              		.loc 1 598 3 is_stmt 1 view .LVU407
 1167              		.loc 1 598 13 is_stmt 0 view .LVU408
 1168 001c 531B     		subs	r3, r2, r5
 1169              	.LVL164:
 1170              		.loc 1 598 19 view .LVU409
 1171 001e 4FF4B559 		mov	r9, #5792
 1172 0022 09FB03F3 		mul	r3, r9, r3
 1173              	.LVL165:
 599:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v3 += v1;
 1174              		.loc 1 599 3 is_stmt 1 view .LVU410
 1175              		.loc 1 599 6 is_stmt 0 view .LVU411
 1176 0026 2A44     		add	r2, r2, r5
 1177              	.LVL166:
 600:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		t11 -= v3;
 1178              		.loc 1 600 3 is_stmt 1 view .LVU412
 1179              		.loc 1 600 7 is_stmt 0 view .LVU413
 1180 0028 C2EB2333 		rsb	r3, r2, r3, asr #12
 1181              	.LVL167:
 601:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v0 = t10 + v3;
 1182              		.loc 1 601 3 is_stmt 1 view .LVU414
 1183              		.loc 1 601 6 is_stmt 0 view .LVU415
 1184 002c A718     		adds	r7, r4, r2
 1185              	.LVL168:
 602:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v3 = t10 - v3;
 1186              		.loc 1 602 3 is_stmt 1 view .LVU416
 1187              		.loc 1 602 6 is_stmt 0 view .LVU417
 1188 002e A41A     		subs	r4, r4, r2
 1189              	.LVL169:
 603:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v1 = t11 + t12;
 1190              		.loc 1 603 3 is_stmt 1 view .LVU418
 1191              		.loc 1 603 6 is_stmt 0 view .LVU419
 1192 0030 0CEB0306 		add	r6, ip, r3
 1193              	.LVL170:
 604:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v2 = t12 - t11;
 1194              		.loc 1 604 3 is_stmt 1 view .LVU420
 1195              		.loc 1 604 6 is_stmt 0 view .LVU421
 1196 0034 ACEB030C 		sub	ip, ip, r3
 1197              	.LVL171:
 605:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 606:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v4 = src[8 * 7];	/* Get odd elements */
 1198              		.loc 1 606 3 is_stmt 1 view .LVU422
 1199              		.loc 1 606 6 is_stmt 0 view .LVU423
 1200 0038 D0F8E0E0 		ldr	lr, [r0, #224]
 1201              	.LVL172:
 607:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v5 = src[8 * 1];
 1202              		.loc 1 607 3 is_stmt 1 view .LVU424
 1203              		.loc 1 607 6 is_stmt 0 view .LVU425
 1204 003c 036A     		ldr	r3, [r0, #32]
 1205              	.LVL173:
 608:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v6 = src[8 * 5];
 1206              		.loc 1 608 3 is_stmt 1 view .LVU426
 1207              		.loc 1 608 6 is_stmt 0 view .LVU427
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 35


 1208 003e D0F8A050 		ldr	r5, [r0, #160]
 1209              	.LVL174:
 609:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v7 = src[8 * 3];
 1210              		.loc 1 609 3 is_stmt 1 view .LVU428
 1211              		.loc 1 609 6 is_stmt 0 view .LVU429
 1212 0042 D0F860A0 		ldr	r10, [r0, #96]
 1213              	.LVL175:
 610:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 611:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		t10 = v5 - v4;		/* Process the odd elements */
 1214              		.loc 1 611 3 is_stmt 1 view .LVU430
 1215              		.loc 1 611 7 is_stmt 0 view .LVU431
 1216 0046 A3EB0E02 		sub	r2, r3, lr
 1217              	.LVL176:
 612:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		t11 = v5 + v4;
 1218              		.loc 1 612 3 is_stmt 1 view .LVU432
 1219              		.loc 1 612 7 is_stmt 0 view .LVU433
 1220 004a 9E44     		add	lr, lr, r3
 1221              	.LVL177:
 613:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		t12 = v6 - v7;
 1222              		.loc 1 613 3 is_stmt 1 view .LVU434
 1223              		.loc 1 613 7 is_stmt 0 view .LVU435
 1224 004c A5EB0A03 		sub	r3, r5, r10
 1225              	.LVL178:
 614:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v7 += v6;
 1226              		.loc 1 614 3 is_stmt 1 view .LVU436
 1227              		.loc 1 614 6 is_stmt 0 view .LVU437
 1228 0050 AA44     		add	r10, r10, r5
 1229              	.LVL179:
 615:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v5 = (t11 - v7) * M13 >> 12;
 1230              		.loc 1 615 3 is_stmt 1 view .LVU438
 1231              		.loc 1 615 13 is_stmt 0 view .LVU439
 1232 0052 AEEB0A05 		sub	r5, lr, r10
 1233              	.LVL180:
 1234              		.loc 1 615 19 view .LVU440
 1235 0056 09FB05F5 		mul	r5, r9, r5
 1236              	.LVL181:
 616:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v7 += t11;
 1237              		.loc 1 616 3 is_stmt 1 view .LVU441
 1238              		.loc 1 616 6 is_stmt 0 view .LVU442
 1239 005a D644     		add	lr, lr, r10
 1240              	.LVL182:
 617:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		t13 = (t10 + t12) * M5 >> 12;
 1241              		.loc 1 617 3 is_stmt 1 view .LVU443
 1242              		.loc 1 617 14 is_stmt 0 view .LVU444
 1243 005c 02EB0309 		add	r9, r2, r3
 1244              		.loc 1 617 21 view .LVU445
 1245 0060 41F6905A 		movw	r10, #7568
 1246 0064 0AFB09F9 		mul	r9, r10, r9
 1247              	.LVL183:
 618:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v4 = t13 - (t10 * M2 >> 12);
 1248              		.loc 1 618 3 is_stmt 1 view .LVU446
 1249              		.loc 1 618 19 is_stmt 0 view .LVU447
 1250 0068 41F2511A 		movw	r10, #4433
 1251 006c 0AFB02F2 		mul	r2, r10, r2
 1252              	.LVL184:
 1253              		.loc 1 618 24 view .LVU448
 1254 0070 1213     		asrs	r2, r2, #12
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 36


 1255              		.loc 1 618 6 view .LVU449
 1256 0072 C2EB2932 		rsb	r2, r2, r9, asr #12
 1257              	.LVL185:
 619:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v6 = t13 - (t12 * M4 >> 12) - v7;
 1258              		.loc 1 619 3 is_stmt 1 view .LVU450
 1259              		.loc 1 619 19 is_stmt 0 view .LVU451
 1260 0076 42F6CF1A 		movw	r10, #10703
 1261 007a 0AFB03F3 		mul	r3, r10, r3
 1262              	.LVL186:
 1263              		.loc 1 619 24 view .LVU452
 1264 007e 1B13     		asrs	r3, r3, #12
 1265              		.loc 1 619 12 view .LVU453
 1266 0080 C3EB2933 		rsb	r3, r3, r9, asr #12
 1267              		.loc 1 619 6 view .LVU454
 1268 0084 A3EB0E03 		sub	r3, r3, lr
 1269              	.LVL187:
 620:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v5 -= v6;
 1270              		.loc 1 620 3 is_stmt 1 view .LVU455
 1271              		.loc 1 620 6 is_stmt 0 view .LVU456
 1272 0088 C3EB2535 		rsb	r5, r3, r5, asr #12
 1273              	.LVL188:
 621:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v4 -= v5;
 1274              		.loc 1 621 3 is_stmt 1 view .LVU457
 1275              		.loc 1 621 6 is_stmt 0 view .LVU458
 1276 008c 521B     		subs	r2, r2, r5
 1277              	.LVL189:
 622:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 623:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		src[8 * 0] = v0 + v7;	/* Write-back transformed values */
 1278              		.loc 1 623 3 is_stmt 1 view .LVU459
 1279              		.loc 1 623 19 is_stmt 0 view .LVU460
 1280 008e 07EB0E09 		add	r9, r7, lr
 1281              	.LVL190:
 1282              		.loc 1 623 14 view .LVU461
 1283 0092 C0F80090 		str	r9, [r0]
 624:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		src[8 * 7] = v0 - v7;
 1284              		.loc 1 624 3 is_stmt 1 view .LVU462
 1285              		.loc 1 624 19 is_stmt 0 view .LVU463
 1286 0096 A7EB0E07 		sub	r7, r7, lr
 1287              	.LVL191:
 1288              		.loc 1 624 14 view .LVU464
 1289 009a C0F8E070 		str	r7, [r0, #224]
 1290              	.LVL192:
 625:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		src[8 * 1] = v1 + v6;
 1291              		.loc 1 625 3 is_stmt 1 view .LVU465
 1292              		.loc 1 625 19 is_stmt 0 view .LVU466
 1293 009e F718     		adds	r7, r6, r3
 1294              		.loc 1 625 14 view .LVU467
 1295 00a0 0762     		str	r7, [r0, #32]
 626:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		src[8 * 6] = v1 - v6;
 1296              		.loc 1 626 3 is_stmt 1 view .LVU468
 1297              		.loc 1 626 19 is_stmt 0 view .LVU469
 1298 00a2 F61A     		subs	r6, r6, r3
 1299              	.LVL193:
 1300              		.loc 1 626 14 view .LVU470
 1301 00a4 C0F8C060 		str	r6, [r0, #192]
 627:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		src[8 * 2] = v2 + v5;
 1302              		.loc 1 627 3 is_stmt 1 view .LVU471
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 37


 1303              		.loc 1 627 19 is_stmt 0 view .LVU472
 1304 00a8 0CEB0503 		add	r3, ip, r5
 1305              	.LVL194:
 1306              		.loc 1 627 14 view .LVU473
 1307 00ac 0364     		str	r3, [r0, #64]
 628:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		src[8 * 5] = v2 - v5;
 1308              		.loc 1 628 3 is_stmt 1 view .LVU474
 1309              		.loc 1 628 19 is_stmt 0 view .LVU475
 1310 00ae ACEB0505 		sub	r5, ip, r5
 1311              	.LVL195:
 1312              		.loc 1 628 14 view .LVU476
 1313 00b2 C0F8A050 		str	r5, [r0, #160]
 1314              	.LVL196:
 629:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		src[8 * 3] = v3 + v4;
 1315              		.loc 1 629 3 is_stmt 1 view .LVU477
 1316              		.loc 1 629 19 is_stmt 0 view .LVU478
 1317 00b6 A318     		adds	r3, r4, r2
 1318              		.loc 1 629 14 view .LVU479
 1319 00b8 0366     		str	r3, [r0, #96]
 630:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		src[8 * 4] = v3 - v4;
 1320              		.loc 1 630 3 is_stmt 1 view .LVU480
 1321              		.loc 1 630 19 is_stmt 0 view .LVU481
 1322 00ba A41A     		subs	r4, r4, r2
 1323              	.LVL197:
 1324              		.loc 1 630 14 view .LVU482
 1325 00bc C0F88040 		str	r4, [r0, #128]
 631:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 632:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		src++;	/* Next column */
 1326              		.loc 1 632 3 is_stmt 1 view .LVU483
 1327              		.loc 1 632 6 is_stmt 0 view .LVU484
 1328 00c0 0430     		adds	r0, r0, #4
 1329              	.LVL198:
 590:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v0 = src[8 * 0];	/* Get even elements */
 1330              		.loc 1 590 22 is_stmt 1 discriminator 3 view .LVU485
 1331 00c2 08F10108 		add	r8, r8, #1
 1332              	.LVL199:
 1333              	.L85:
 590:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v0 = src[8 * 0];	/* Get even elements */
 1334              		.loc 1 590 16 discriminator 1 view .LVU486
 1335 00c6 B8F1070F 		cmp	r8, #7
 1336 00ca 9EDD     		ble	.L86
 633:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	}
 634:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 635:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	/* Process rows */
 636:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	src -= 8;
 1337              		.loc 1 636 2 view .LVU487
 1338              		.loc 1 636 6 is_stmt 0 view .LVU488
 1339 00cc 2038     		subs	r0, r0, #32
 1340              	.LVL200:
 637:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	for (i = 0; i < 8; i++) {
 1341              		.loc 1 637 2 is_stmt 1 view .LVU489
 1342              		.loc 1 637 9 is_stmt 0 view .LVU490
 1343 00ce 4FF00008 		mov	r8, #0
 1344              		.loc 1 637 2 view .LVU491
 1345 00d2 74E0     		b	.L87
 1346              	.LVL201:
 1347              	.L88:
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 38


 638:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v0 = src[0] + (128L << 8);	/* Get even elements (remove DC offset (-128) here) */
 1348              		.loc 1 638 3 is_stmt 1 view .LVU492
 1349              		.loc 1 638 11 is_stmt 0 view .LVU493
 1350 00d4 0368     		ldr	r3, [r0]
 1351              		.loc 1 638 6 view .LVU494
 1352 00d6 03F50043 		add	r3, r3, #32768
 1353              	.LVL202:
 639:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v1 = src[2];
 1354              		.loc 1 639 3 is_stmt 1 view .LVU495
 1355              		.loc 1 639 6 is_stmt 0 view .LVU496
 1356 00da 8468     		ldr	r4, [r0, #8]
 1357              	.LVL203:
 640:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v2 = src[4];
 1358              		.loc 1 640 3 is_stmt 1 view .LVU497
 1359              		.loc 1 640 6 is_stmt 0 view .LVU498
 1360 00dc 0269     		ldr	r2, [r0, #16]
 1361              	.LVL204:
 641:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v3 = src[6];
 1362              		.loc 1 641 3 is_stmt 1 view .LVU499
 1363              		.loc 1 641 6 is_stmt 0 view .LVU500
 1364 00de 8669     		ldr	r6, [r0, #24]
 1365              	.LVL205:
 642:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 643:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		t10 = v0 + v2;				/* Process the even elements */
 1366              		.loc 1 643 3 is_stmt 1 view .LVU501
 1367              		.loc 1 643 7 is_stmt 0 view .LVU502
 1368 00e0 9D18     		adds	r5, r3, r2
 1369              	.LVL206:
 644:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		t12 = v0 - v2;
 1370              		.loc 1 644 3 is_stmt 1 view .LVU503
 1371              		.loc 1 644 7 is_stmt 0 view .LVU504
 1372 00e2 9B1A     		subs	r3, r3, r2
 1373              	.LVL207:
 645:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		t11 = (v1 - v3) * M13 >> 12;
 1374              		.loc 1 645 3 is_stmt 1 view .LVU505
 1375              		.loc 1 645 13 is_stmt 0 view .LVU506
 1376 00e4 A21B     		subs	r2, r4, r6
 1377              	.LVL208:
 1378              		.loc 1 645 19 view .LVU507
 1379 00e6 4FF4B559 		mov	r9, #5792
 1380 00ea 09FB02F2 		mul	r2, r9, r2
 1381              	.LVL209:
 646:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v3 += v1;
 1382              		.loc 1 646 3 is_stmt 1 view .LVU508
 1383              		.loc 1 646 6 is_stmt 0 view .LVU509
 1384 00ee 3444     		add	r4, r4, r6
 1385              	.LVL210:
 647:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		t11 -= v3;
 1386              		.loc 1 647 3 is_stmt 1 view .LVU510
 1387              		.loc 1 647 7 is_stmt 0 view .LVU511
 1388 00f0 C4EB2232 		rsb	r2, r4, r2, asr #12
 1389              	.LVL211:
 648:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v0 = t10 + v3;
 1390              		.loc 1 648 3 is_stmt 1 view .LVU512
 1391              		.loc 1 648 6 is_stmt 0 view .LVU513
 1392 00f4 05EB040E 		add	lr, r5, r4
 1393              	.LVL212:
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 39


 649:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v3 = t10 - v3;
 1394              		.loc 1 649 3 is_stmt 1 view .LVU514
 1395              		.loc 1 649 6 is_stmt 0 view .LVU515
 1396 00f8 2D1B     		subs	r5, r5, r4
 1397              	.LVL213:
 650:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v1 = t11 + t12;
 1398              		.loc 1 650 3 is_stmt 1 view .LVU516
 1399              		.loc 1 650 6 is_stmt 0 view .LVU517
 1400 00fa 03EB020C 		add	ip, r3, r2
 1401              	.LVL214:
 651:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v2 = t12 - t11;
 1402              		.loc 1 651 3 is_stmt 1 view .LVU518
 1403              		.loc 1 651 6 is_stmt 0 view .LVU519
 1404 00fe 9B1A     		subs	r3, r3, r2
 1405              	.LVL215:
 652:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 653:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v4 = src[7];				/* Get odd elements */
 1406              		.loc 1 653 3 is_stmt 1 view .LVU520
 1407              		.loc 1 653 6 is_stmt 0 view .LVU521
 1408 0100 C669     		ldr	r6, [r0, #28]
 1409              	.LVL216:
 654:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v5 = src[1];
 1410              		.loc 1 654 3 is_stmt 1 view .LVU522
 1411              		.loc 1 654 6 is_stmt 0 view .LVU523
 1412 0102 4268     		ldr	r2, [r0, #4]
 1413              	.LVL217:
 655:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v6 = src[5];
 1414              		.loc 1 655 3 is_stmt 1 view .LVU524
 1415              		.loc 1 655 6 is_stmt 0 view .LVU525
 1416 0104 4769     		ldr	r7, [r0, #20]
 1417              	.LVL218:
 656:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v7 = src[3];
 1418              		.loc 1 656 3 is_stmt 1 view .LVU526
 1419              		.loc 1 656 6 is_stmt 0 view .LVU527
 1420 0106 D0F80CA0 		ldr	r10, [r0, #12]
 1421              	.LVL219:
 657:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 658:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		t10 = v5 - v4;				/* Process the odd elements */
 1422              		.loc 1 658 3 is_stmt 1 view .LVU528
 1423              		.loc 1 658 7 is_stmt 0 view .LVU529
 1424 010a 941B     		subs	r4, r2, r6
 1425              	.LVL220:
 659:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		t11 = v5 + v4;
 1426              		.loc 1 659 3 is_stmt 1 view .LVU530
 1427              		.loc 1 659 7 is_stmt 0 view .LVU531
 1428 010c 1644     		add	r6, r6, r2
 1429              	.LVL221:
 660:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		t12 = v6 - v7;
 1430              		.loc 1 660 3 is_stmt 1 view .LVU532
 1431              		.loc 1 660 7 is_stmt 0 view .LVU533
 1432 010e A7EB0A02 		sub	r2, r7, r10
 1433              	.LVL222:
 661:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v7 += v6;
 1434              		.loc 1 661 3 is_stmt 1 view .LVU534
 1435              		.loc 1 661 6 is_stmt 0 view .LVU535
 1436 0112 BA44     		add	r10, r10, r7
 1437              	.LVL223:
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 40


 662:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v5 = (t11 - v7) * M13 >> 12;
 1438              		.loc 1 662 3 is_stmt 1 view .LVU536
 1439              		.loc 1 662 13 is_stmt 0 view .LVU537
 1440 0114 A6EB0A07 		sub	r7, r6, r10
 1441              	.LVL224:
 1442              		.loc 1 662 19 view .LVU538
 1443 0118 09FB07F7 		mul	r7, r9, r7
 1444              	.LVL225:
 663:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v7 += t11;
 1445              		.loc 1 663 3 is_stmt 1 view .LVU539
 1446              		.loc 1 663 6 is_stmt 0 view .LVU540
 1447 011c 5644     		add	r6, r6, r10
 1448              	.LVL226:
 664:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		t13 = (t10 + t12) * M5 >> 12;
 1449              		.loc 1 664 3 is_stmt 1 view .LVU541
 1450              		.loc 1 664 14 is_stmt 0 view .LVU542
 1451 011e 04EB0209 		add	r9, r4, r2
 1452              		.loc 1 664 21 view .LVU543
 1453 0122 41F6905A 		movw	r10, #7568
 1454 0126 0AFB09F9 		mul	r9, r10, r9
 1455              	.LVL227:
 665:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v4 = t13 - (t10 * M2 >> 12);
 1456              		.loc 1 665 3 is_stmt 1 view .LVU544
 1457              		.loc 1 665 19 is_stmt 0 view .LVU545
 1458 012a 41F2511A 		movw	r10, #4433
 1459 012e 0AFB04F4 		mul	r4, r10, r4
 1460              	.LVL228:
 1461              		.loc 1 665 24 view .LVU546
 1462 0132 2413     		asrs	r4, r4, #12
 1463              		.loc 1 665 6 view .LVU547
 1464 0134 C4EB2934 		rsb	r4, r4, r9, asr #12
 1465              	.LVL229:
 666:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v6 = t13 - (t12 * M4 >> 12) - v7;
 1466              		.loc 1 666 3 is_stmt 1 view .LVU548
 1467              		.loc 1 666 19 is_stmt 0 view .LVU549
 1468 0138 42F6CF1A 		movw	r10, #10703
 1469 013c 0AFB02F2 		mul	r2, r10, r2
 1470              	.LVL230:
 1471              		.loc 1 666 24 view .LVU550
 1472 0140 1213     		asrs	r2, r2, #12
 1473              		.loc 1 666 12 view .LVU551
 1474 0142 C2EB2932 		rsb	r2, r2, r9, asr #12
 1475              		.loc 1 666 6 view .LVU552
 1476 0146 921B     		subs	r2, r2, r6
 1477              	.LVL231:
 667:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v5 -= v6;
 1478              		.loc 1 667 3 is_stmt 1 view .LVU553
 1479              		.loc 1 667 6 is_stmt 0 view .LVU554
 1480 0148 C2EB2739 		rsb	r9, r2, r7, asr #12
 1481              	.LVL232:
 668:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v4 -= v5;
 1482              		.loc 1 668 3 is_stmt 1 view .LVU555
 1483              		.loc 1 668 6 is_stmt 0 view .LVU556
 1484 014c A4EB0904 		sub	r4, r4, r9
 1485              	.LVL233:
 669:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 670:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		/* Descale the transformed values 8 bits and output a row */
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 41


 671:lvgl/src/extra/libs/sjpg/tjpgd.c **** #if JD_FASTDECODE >= 1
 672:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		dst[0] = (int16_t)((v0 + v7) >> 8);
 673:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		dst[7] = (int16_t)((v0 - v7) >> 8);
 674:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		dst[1] = (int16_t)((v1 + v6) >> 8);
 675:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		dst[6] = (int16_t)((v1 - v6) >> 8);
 676:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		dst[2] = (int16_t)((v2 + v5) >> 8);
 677:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		dst[5] = (int16_t)((v2 - v5) >> 8);
 678:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		dst[3] = (int16_t)((v3 + v4) >> 8);
 679:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		dst[4] = (int16_t)((v3 - v4) >> 8);
 680:lvgl/src/extra/libs/sjpg/tjpgd.c **** #else
 681:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		dst[0] = BYTECLIP((v0 + v7) >> 8);
 1486              		.loc 1 681 3 is_stmt 1 view .LVU557
 1487              		.loc 1 681 12 is_stmt 0 view .LVU558
 1488 0150 0EEB060A 		add	r10, lr, r6
 1489 0154 CAF3092A 		ubfx	r10, r10, #8, #10
 1490 0158 1B4F     		ldr	r7, .L90
 1491 015a 17F80AA0 		ldrb	r10, [r7, r10]	@ zero_extendqisi2
 1492              		.loc 1 681 10 view .LVU559
 1493 015e 81F800A0 		strb	r10, [r1]
 1494              	.LVL234:
 682:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		dst[7] = BYTECLIP((v0 - v7) >> 8);
 1495              		.loc 1 682 3 is_stmt 1 view .LVU560
 1496              		.loc 1 682 12 is_stmt 0 view .LVU561
 1497 0162 AEEB060E 		sub	lr, lr, r6
 1498              	.LVL235:
 1499              		.loc 1 682 12 view .LVU562
 1500 0166 CEF3092E 		ubfx	lr, lr, #8, #10
 1501 016a 17F80E60 		ldrb	r6, [r7, lr]	@ zero_extendqisi2
 1502              	.LVL236:
 1503              		.loc 1 682 10 view .LVU563
 1504 016e CE71     		strb	r6, [r1, #7]
 683:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		dst[1] = BYTECLIP((v1 + v6) >> 8);
 1505              		.loc 1 683 3 is_stmt 1 view .LVU564
 1506              		.loc 1 683 12 is_stmt 0 view .LVU565
 1507 0170 0CEB0206 		add	r6, ip, r2
 1508 0174 C6F30926 		ubfx	r6, r6, #8, #10
 1509 0178 BE5D     		ldrb	r6, [r7, r6]	@ zero_extendqisi2
 1510              		.loc 1 683 10 view .LVU566
 1511 017a 4E70     		strb	r6, [r1, #1]
 684:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		dst[6] = BYTECLIP((v1 - v6) >> 8);
 1512              		.loc 1 684 3 is_stmt 1 view .LVU567
 1513              		.loc 1 684 12 is_stmt 0 view .LVU568
 1514 017c ACEB020C 		sub	ip, ip, r2
 1515              	.LVL237:
 1516              		.loc 1 684 12 view .LVU569
 1517 0180 CCF3092C 		ubfx	ip, ip, #8, #10
 1518 0184 17F80C20 		ldrb	r2, [r7, ip]	@ zero_extendqisi2
 1519              	.LVL238:
 1520              		.loc 1 684 10 view .LVU570
 1521 0188 8A71     		strb	r2, [r1, #6]
 685:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		dst[2] = BYTECLIP((v2 + v5) >> 8);
 1522              		.loc 1 685 3 is_stmt 1 view .LVU571
 1523              		.loc 1 685 12 is_stmt 0 view .LVU572
 1524 018a 03EB0902 		add	r2, r3, r9
 1525 018e C2F30922 		ubfx	r2, r2, #8, #10
 1526 0192 BA5C     		ldrb	r2, [r7, r2]	@ zero_extendqisi2
 1527              		.loc 1 685 10 view .LVU573
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 42


 1528 0194 8A70     		strb	r2, [r1, #2]
 686:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		dst[5] = BYTECLIP((v2 - v5) >> 8);
 1529              		.loc 1 686 3 is_stmt 1 view .LVU574
 1530              		.loc 1 686 12 is_stmt 0 view .LVU575
 1531 0196 A3EB0903 		sub	r3, r3, r9
 1532              	.LVL239:
 1533              		.loc 1 686 12 view .LVU576
 1534 019a C3F30923 		ubfx	r3, r3, #8, #10
 1535 019e FB5C     		ldrb	r3, [r7, r3]	@ zero_extendqisi2
 1536              		.loc 1 686 10 view .LVU577
 1537 01a0 4B71     		strb	r3, [r1, #5]
 687:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		dst[3] = BYTECLIP((v3 + v4) >> 8);
 1538              		.loc 1 687 3 is_stmt 1 view .LVU578
 1539              		.loc 1 687 12 is_stmt 0 view .LVU579
 1540 01a2 2B19     		adds	r3, r5, r4
 1541 01a4 C3F30923 		ubfx	r3, r3, #8, #10
 1542 01a8 FB5C     		ldrb	r3, [r7, r3]	@ zero_extendqisi2
 1543              		.loc 1 687 10 view .LVU580
 1544 01aa CB70     		strb	r3, [r1, #3]
 688:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		dst[4] = BYTECLIP((v3 - v4) >> 8);
 1545              		.loc 1 688 3 is_stmt 1 view .LVU581
 1546              		.loc 1 688 12 is_stmt 0 view .LVU582
 1547 01ac 2D1B     		subs	r5, r5, r4
 1548              	.LVL240:
 1549              		.loc 1 688 12 view .LVU583
 1550 01ae C5F30925 		ubfx	r5, r5, #8, #10
 1551 01b2 7B5D     		ldrb	r3, [r7, r5]	@ zero_extendqisi2
 1552              		.loc 1 688 10 view .LVU584
 1553 01b4 0B71     		strb	r3, [r1, #4]
 689:lvgl/src/extra/libs/sjpg/tjpgd.c **** #endif
 690:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 691:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		dst += 8; src += 8;	/* Next row */
 1554              		.loc 1 691 3 is_stmt 1 view .LVU585
 1555              		.loc 1 691 7 is_stmt 0 view .LVU586
 1556 01b6 0831     		adds	r1, r1, #8
 1557              	.LVL241:
 1558              		.loc 1 691 13 is_stmt 1 view .LVU587
 1559              		.loc 1 691 17 is_stmt 0 view .LVU588
 1560 01b8 2030     		adds	r0, r0, #32
 1561              	.LVL242:
 637:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v0 = src[0] + (128L << 8);	/* Get even elements (remove DC offset (-128) here) */
 1562              		.loc 1 637 22 is_stmt 1 discriminator 3 view .LVU589
 1563 01ba 08F10108 		add	r8, r8, #1
 1564              	.LVL243:
 1565              	.L87:
 637:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		v0 = src[0] + (128L << 8);	/* Get even elements (remove DC offset (-128) here) */
 1566              		.loc 1 637 16 discriminator 1 view .LVU590
 1567 01be B8F1070F 		cmp	r8, #7
 1568 01c2 87DD     		ble	.L88
 692:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	}
 693:lvgl/src/extra/libs/sjpg/tjpgd.c **** }
 1569              		.loc 1 693 1 is_stmt 0 view .LVU591
 1570 01c4 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1571              	.LVL244:
 1572              	.L91:
 1573              		.loc 1 693 1 view .LVU592
 1574              		.align	2
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 43


 1575              	.L90:
 1576 01c8 00000000 		.word	Clip8
 1577              		.cfi_endproc
 1578              	.LFE6:
 1580              		.section	.text.mcu_output,"ax",%progbits
 1581              		.align	1
 1582              		.syntax unified
 1583              		.thumb
 1584              		.thumb_func
 1586              	mcu_output:
 1587              	.LVL245:
 1588              	.LFB8:
 694:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 695:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 696:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 697:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 698:lvgl/src/extra/libs/sjpg/tjpgd.c **** /*-----------------------------------------------------------------------*/
 699:lvgl/src/extra/libs/sjpg/tjpgd.c **** /* Load all blocks in an MCU into working buffer                         */
 700:lvgl/src/extra/libs/sjpg/tjpgd.c **** /*-----------------------------------------------------------------------*/
 701:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 702:lvgl/src/extra/libs/sjpg/tjpgd.c **** static JRESULT mcu_load (
 703:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	JDEC* jd		/* Pointer to the decompressor object */
 704:lvgl/src/extra/libs/sjpg/tjpgd.c **** )
 705:lvgl/src/extra/libs/sjpg/tjpgd.c **** {
 706:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	int32_t *tmp = (int32_t*)jd->workbuf;	/* Block working buffer for de-quantize and IDCT */
 707:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	int d, e;
 708:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	unsigned int blk, nby, i, bc, z, id, cmp;
 709:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	jd_yuv_t *bp;
 710:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	const int32_t *dqf;
 711:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 712:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 713:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	nby = jd->msx * jd->msy;	/* Number of Y blocks (1, 2 or 4) */
 714:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	bp = jd->mcubuf;			/* Pointer to the first block of MCU */
 715:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 716:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	for (blk = 0; blk < nby + 2; blk++) {	/* Get nby Y blocks and two C blocks */
 717:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		cmp = (blk < nby) ? 0 : blk - nby + 1;	/* Component number 0:Y, 1:Cb, 2:Cr */
 718:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 719:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (cmp && jd->ncomp != 3) {		/* Clear C blocks if not exist (monochrome image) */
 720:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			for (i = 0; i < 64; bp[i++] = 128) ;
 721:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 722:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		} else {							/* Load Y/C blocks from input stream */
 723:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			id = cmp ? 1 : 0;						/* Huffman table ID of this component */
 724:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 725:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			/* Extract a DC element from input stream */
 726:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			d = huffext(jd, id, 0);					/* Extract a huffman coded data (bit length) */
 727:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (d < 0) return (JRESULT)(0 - d);		/* Err: invalid code or input */
 728:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			bc = (unsigned int)d;
 729:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			d = jd->dcv[cmp];						/* DC value of previous block */
 730:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (bc) {								/* If there is any difference from previous block */
 731:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				e = bitext(jd, bc);					/* Extract data bits */
 732:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (e < 0) return (JRESULT)(0 - e);	/* Err: input */
 733:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				bc = 1 << (bc - 1);					/* MSB position */
 734:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (!(e & bc)) e -= (bc << 1) - 1;	/* Restore negative value if needed */
 735:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				d += e;								/* Get current value */
 736:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				jd->dcv[cmp] = (int16_t)d;			/* Save current DC value for next block */
 737:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			}
 738:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			dqf = jd->qttbl[jd->qtid[cmp]];			/* De-quantizer table ID for this component */
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 44


 739:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			tmp[0] = d * dqf[0] >> 8;				/* De-quantize, apply scale factor of Arai algorithm and descale 8 
 740:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 741:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			/* Extract following 63 AC elements from input stream */
 742:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			memset(&tmp[1], 0, 63 * sizeof (int32_t));	/* Initialize all AC elements */
 743:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			z = 1;		/* Top of the AC elements (in zigzag-order) */
 744:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			do {
 745:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				d = huffext(jd, id, 1);				/* Extract a huffman coded value (zero runs and bit length) */
 746:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (d == 0) break;					/* EOB? */
 747:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (d < 0) return (JRESULT)(0 - d);	/* Err: invalid code or input error */
 748:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				bc = (unsigned int)d;
 749:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				z += bc >> 4;						/* Skip leading zero run */
 750:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (z >= 64) return JDR_FMT1;		/* Too long zero run */
 751:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (bc &= 0x0F) {					/* Bit length? */
 752:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					d = bitext(jd, bc);				/* Extract data bits */
 753:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					if (d < 0) return (JRESULT)(0 - d);	/* Err: input device */
 754:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					bc = 1 << (bc - 1);				/* MSB position */
 755:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					if (!(d & bc)) d -= (bc << 1) - 1;	/* Restore negative value if needed */
 756:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					i = Zig[z];						/* Get raster-order index */
 757:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					tmp[i] = d * dqf[i] >> 8;		/* De-quantize, apply scale factor of Arai algorithm and descale 8 
 758:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 759:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			} while (++z < 64);		/* Next AC element */
 760:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 761:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (JD_FORMAT != 2 || !cmp) {	/* C components may not be processed if in grayscale output */
 762:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (z == 1 || (JD_USE_SCALE && jd->scale == 3)) {	/* If no AC element or scale ratio is 1/8, ID
 763:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					d = (jd_yuv_t)((*tmp / 256) + 128);
 764:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					if (JD_FASTDECODE >= 1) {
 765:lvgl/src/extra/libs/sjpg/tjpgd.c **** 						for (i = 0; i < 64; bp[i++] = d) ;
 766:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					} else {
 767:lvgl/src/extra/libs/sjpg/tjpgd.c **** 						memset(bp, d, 64);
 768:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					}
 769:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				} else {
 770:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					block_idct(tmp, bp);	/* Apply IDCT and store the block to the MCU buffer */
 771:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 772:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			}
 773:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		}
 774:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 775:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		bp += 64;				/* Next block */
 776:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	}
 777:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 778:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	return JDR_OK;	/* All blocks have been loaded successfully */
 779:lvgl/src/extra/libs/sjpg/tjpgd.c **** }
 780:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 781:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 782:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 783:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 784:lvgl/src/extra/libs/sjpg/tjpgd.c **** /*-----------------------------------------------------------------------*/
 785:lvgl/src/extra/libs/sjpg/tjpgd.c **** /* Output an MCU: Convert YCrCb to RGB and output it in RGB form         */
 786:lvgl/src/extra/libs/sjpg/tjpgd.c **** /*-----------------------------------------------------------------------*/
 787:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 788:lvgl/src/extra/libs/sjpg/tjpgd.c **** static JRESULT mcu_output (
 789:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	JDEC* jd,			/* Pointer to the decompressor object */
 790:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	int (*outfunc)(JDEC*, void*, JRECT*),	/* RGB output function */
 791:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	unsigned int img_x,		/* MCU location in the image */
 792:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	unsigned int img_y		/* MCU location in the image */
 793:lvgl/src/extra/libs/sjpg/tjpgd.c **** )
 794:lvgl/src/extra/libs/sjpg/tjpgd.c **** {
 1589              		.loc 1 794 1 is_stmt 1 view -0
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 45


 1590              		.cfi_startproc
 1591              		@ args = 0, pretend = 0, frame = 32
 1592              		@ frame_needed = 0, uses_anonymous_args = 0
 1593              		.loc 1 794 1 is_stmt 0 view .LVU594
 1594 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1595              	.LCFI9:
 1596              		.cfi_def_cfa_offset 36
 1597              		.cfi_offset 4, -36
 1598              		.cfi_offset 5, -32
 1599              		.cfi_offset 6, -28
 1600              		.cfi_offset 7, -24
 1601              		.cfi_offset 8, -20
 1602              		.cfi_offset 9, -16
 1603              		.cfi_offset 10, -12
 1604              		.cfi_offset 11, -8
 1605              		.cfi_offset 14, -4
 1606 0004 89B0     		sub	sp, sp, #36
 1607              	.LCFI10:
 1608              		.cfi_def_cfa_offset 72
 1609 0006 0746     		mov	r7, r0
 1610 0008 0291     		str	r1, [sp, #8]
 1611 000a 1446     		mov	r4, r2
 1612 000c 1946     		mov	r1, r3
 1613              	.LVL246:
 795:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	const int CVACC = (sizeof (int) > 2) ? 1024 : 128;	/* Adaptive accuracy for both 16-/32-bit system
 1614              		.loc 1 795 2 is_stmt 1 view .LVU595
 796:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	unsigned int ix, iy, mx, my, rx, ry;
 1615              		.loc 1 796 2 view .LVU596
 797:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	int yy, cb, cr;
 1616              		.loc 1 797 2 view .LVU597
 798:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	jd_yuv_t *py, *pc;
 1617              		.loc 1 798 2 view .LVU598
 799:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	uint8_t *pix;
 1618              		.loc 1 799 2 view .LVU599
 800:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	JRECT rect;
 1619              		.loc 1 800 2 view .LVU600
 801:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 802:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 803:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	mx = jd->msx * 8; my = jd->msy * 8;					/* MCU size (pixel) */
 1620              		.loc 1 803 2 view .LVU601
 1621              		.loc 1 803 9 is_stmt 0 view .LVU602
 1622 000e 837B     		ldrb	r3, [r0, #14]	@ zero_extendqisi2
 1623              	.LVL247:
 1624              		.loc 1 803 15 view .LVU603
 1625 0010 D800     		lsls	r0, r3, #3
 1626              	.LVL248:
 1627              		.loc 1 803 20 is_stmt 1 view .LVU604
 1628              		.loc 1 803 27 is_stmt 0 view .LVU605
 1629 0012 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1630              	.LVL249:
 1631              		.loc 1 803 33 view .LVU606
 1632 0014 D200     		lsls	r2, r2, #3
 1633              	.LVL250:
 804:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	rx = (img_x + mx <= jd->width) ? mx : jd->width - img_x;	/* Output rectangular size (it may be cli
 1634              		.loc 1 804 2 is_stmt 1 view .LVU607
 1635              		.loc 1 804 14 is_stmt 0 view .LVU608
 1636 0016 04EBC305 		add	r5, r4, r3, lsl #3
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 46


 1637              		.loc 1 804 24 view .LVU609
 1638 001a BB8B     		ldrh	r3, [r7, #28]
 1639              		.loc 1 804 38 view .LVU610
 1640 001c 9D42     		cmp	r5, r3
 1641 001e 2FD9     		bls	.L128
 1642              		.loc 1 804 38 discriminator 1 view .LVU611
 1643 0020 1B1B     		subs	r3, r3, r4
 1644              	.L93:
 1645              	.LVL251:
 805:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	ry = (img_y + my <= jd->height) ? my : jd->height - img_y;
 1646              		.loc 1 805 2 is_stmt 1 view .LVU612
 1647              		.loc 1 805 14 is_stmt 0 view .LVU613
 1648 0022 5618     		adds	r6, r2, r1
 1649              		.loc 1 805 24 view .LVU614
 1650 0024 FD8B     		ldrh	r5, [r7, #30]
 1651              		.loc 1 805 39 view .LVU615
 1652 0026 AE42     		cmp	r6, r5
 1653 0028 2CD9     		bls	.L129
 1654              		.loc 1 805 39 discriminator 1 view .LVU616
 1655 002a 6D1A     		subs	r5, r5, r1
 1656              	.L94:
 1657              	.LVL252:
 806:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	if (JD_USE_SCALE) {
 1658              		.loc 1 806 2 is_stmt 1 view .LVU617
 807:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		rx >>= jd->scale; ry >>= jd->scale;
 1659              		.loc 1 807 3 view .LVU618
 1660              		.loc 1 807 12 is_stmt 0 view .LVU619
 1661 002c 7E7B     		ldrb	r6, [r7, #13]	@ zero_extendqisi2
 1662              	.LVL253:
 1663              		.loc 1 807 21 is_stmt 1 view .LVU620
 808:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (!rx || !ry) return JDR_OK;					/* Skip this MCU if all pixel is to be rounded off */
 1664              		.loc 1 808 3 view .LVU621
 1665              		.loc 1 808 7 is_stmt 0 view .LVU622
 1666 002e F340     		lsrs	r3, r3, r6
 1667              	.LVL254:
 1668              		.loc 1 808 7 view .LVU623
 1669 0030 0CBF     		ite	eq
 1670 0032 4FF0010C 		moveq	ip, #1
 1671 0036 4FF0000C 		movne	ip, #0
 1672              		.loc 1 808 14 view .LVU624
 1673 003a F540     		lsrs	r5, r5, r6
 1674              	.LVL255:
 1675              		.loc 1 808 11 view .LVU625
 1676 003c 08BF     		it	eq
 1677 003e 4CF0010C 		orreq	ip, ip, #1
 1678              		.loc 1 808 6 view .LVU626
 1679 0042 BCF1000F 		cmp	ip, #0
 1680 0046 40F06C81 		bne	.L130
 809:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		img_x >>= jd->scale; img_y >>= jd->scale;
 1681              		.loc 1 809 3 is_stmt 1 view .LVU627
 1682              		.loc 1 809 9 is_stmt 0 view .LVU628
 1683 004a F440     		lsrs	r4, r4, r6
 1684              	.LVL256:
 1685              		.loc 1 809 24 is_stmt 1 view .LVU629
 1686              		.loc 1 809 30 is_stmt 0 view .LVU630
 1687 004c F140     		lsrs	r1, r1, r6
 1688              	.LVL257:
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 47


 810:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	}
 811:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	rect.left = img_x; rect.right = img_x + rx - 1;				/* Rectangular area in the frame buffer */
 1689              		.loc 1 811 2 is_stmt 1 view .LVU631
 1690              		.loc 1 811 12 is_stmt 0 view .LVU632
 1691 004e A4B2     		uxth	r4, r4
 1692              	.LVL258:
 1693              		.loc 1 811 12 view .LVU633
 1694 0050 ADF81840 		strh	r4, [sp, #24]	@ movhi
 1695              		.loc 1 811 21 is_stmt 1 view .LVU634
 1696              		.loc 1 811 40 is_stmt 0 view .LVU635
 1697 0054 1C44     		add	r4, r4, r3
 1698 0056 A4B2     		uxth	r4, r4
 1699              		.loc 1 811 45 view .LVU636
 1700 0058 013C     		subs	r4, r4, #1
 1701              		.loc 1 811 32 view .LVU637
 1702 005a ADF81A40 		strh	r4, [sp, #26]	@ movhi
 812:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	rect.top = img_y; rect.bottom = img_y + ry - 1;
 1703              		.loc 1 812 2 is_stmt 1 view .LVU638
 1704              		.loc 1 812 11 is_stmt 0 view .LVU639
 1705 005e 89B2     		uxth	r1, r1
 1706              	.LVL259:
 1707              		.loc 1 812 11 view .LVU640
 1708 0060 ADF81C10 		strh	r1, [sp, #28]	@ movhi
 1709              		.loc 1 812 20 is_stmt 1 view .LVU641
 1710              		.loc 1 812 40 is_stmt 0 view .LVU642
 1711 0064 2944     		add	r1, r1, r5
 1712 0066 89B2     		uxth	r1, r1
 1713              		.loc 1 812 45 view .LVU643
 1714 0068 0139     		subs	r1, r1, #1
 1715              		.loc 1 812 32 view .LVU644
 1716 006a ADF81E10 		strh	r1, [sp, #30]	@ movhi
 813:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 814:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 815:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	if (!JD_USE_SCALE || jd->scale != 3) {	/* Not for 1/8 scaling */
 1717              		.loc 1 815 2 is_stmt 1 view .LVU645
 1718              		.loc 1 815 5 is_stmt 0 view .LVU646
 1719 006e 032E     		cmp	r6, #3
 1720 0070 00F0D180 		beq	.L96
 816:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		pix = (uint8_t*)jd->workbuf;
 1721              		.loc 1 816 3 is_stmt 1 view .LVU647
 1722              		.loc 1 816 7 is_stmt 0 view .LVU648
 1723 0074 D7F860C0 		ldr	ip, [r7, #96]
 1724              	.LVL260:
 817:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 818:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (JD_FORMAT != 2) {	/* RGB output (build an RGB MCU from Y/C component) */
 1725              		.loc 1 818 3 is_stmt 1 view .LVU649
 819:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			for (iy = 0; iy < my; iy++) {
 1726              		.loc 1 819 4 view .LVU650
 1727              		.loc 1 819 12 is_stmt 0 view .LVU651
 1728 0078 4FF0000A 		mov	r10, #0
 1729 007c 9B46     		mov	fp, r3
 1730              		.loc 1 819 4 view .LVU652
 1731 007e 66E0     		b	.L97
 1732              	.LVL261:
 1733              	.L128:
 804:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	ry = (img_y + my <= jd->height) ? my : jd->height - img_y;
 1734              		.loc 1 804 38 discriminator 2 view .LVU653
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 48


 1735 0080 0346     		mov	r3, r0
 1736 0082 CEE7     		b	.L93
 1737              	.LVL262:
 1738              	.L129:
 805:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	if (JD_USE_SCALE) {
 1739              		.loc 1 805 39 discriminator 2 view .LVU654
 1740 0084 1546     		mov	r5, r2
 1741 0086 D1E7     		b	.L94
 1742              	.LVL263:
 1743              	.L141:
 820:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				pc = py = jd->mcubuf;
 821:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (my == 16) {		/* Double block height? */
 822:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					pc += 64 * 4 + (iy >> 1) * 8;
 1744              		.loc 1 822 6 is_stmt 1 view .LVU655
 1745              		.loc 1 822 25 is_stmt 0 view .LVU656
 1746 0088 4FEA5A08 		lsr	r8, r10, #1
 1747              		.loc 1 822 19 view .LVU657
 1748 008c 08F12008 		add	r8, r8, #32
 1749              		.loc 1 822 9 view .LVU658
 1750 0090 03EBC808 		add	r8, r3, r8, lsl #3
 1751              	.LVL264:
 823:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					if (iy >= 8) py += 64;
 1752              		.loc 1 823 6 is_stmt 1 view .LVU659
 1753              		.loc 1 823 9 is_stmt 0 view .LVU660
 1754 0094 BAF1070F 		cmp	r10, #7
 1755 0098 62D9     		bls	.L99
 1756              		.loc 1 823 19 is_stmt 1 discriminator 1 view .LVU661
 1757              		.loc 1 823 22 is_stmt 0 discriminator 1 view .LVU662
 1758 009a 4033     		adds	r3, r3, #64
 1759              	.LVL265:
 1760              		.loc 1 823 22 discriminator 1 view .LVU663
 1761 009c 60E0     		b	.L99
 1762              	.LVL266:
 1763              	.L137:
 824:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				} else {			/* Single block height */
 825:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					pc += mx * 8 + iy * 8;
 826:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 827:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				py += iy * 8;
 828:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				for (ix = 0; ix < mx; ix++) {
 829:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					cb = pc[0] - 128; 	/* Get Cb/Cr component and remove offset */
 830:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					cr = pc[64] - 128;
 831:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					if (mx == 16) {					/* Double block width? */
 832:lvgl/src/extra/libs/sjpg/tjpgd.c **** 						if (ix == 8) py += 64 - 8;	/* Jump to next block if double block heigt */
 1764              		.loc 1 832 7 is_stmt 1 view .LVU664
 1765              		.loc 1 832 10 is_stmt 0 view .LVU665
 1766 009e B9F1080F 		cmp	r9, #8
 1767 00a2 03D0     		beq	.L135
 1768              	.L102:
 833:lvgl/src/extra/libs/sjpg/tjpgd.c **** 						pc += ix & 1;				/* Step forward chroma pointer every two pixels */
 1769              		.loc 1 833 7 is_stmt 1 view .LVU666
 1770              		.loc 1 833 16 is_stmt 0 view .LVU667
 1771 00a4 09F00102 		and	r2, r9, #1
 1772              		.loc 1 833 10 view .LVU668
 1773 00a8 9044     		add	r8, r8, r2
 1774              	.LVL267:
 1775              		.loc 1 833 10 view .LVU669
 1776 00aa 20E0     		b	.L103
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 49


 1777              	.L135:
 832:lvgl/src/extra/libs/sjpg/tjpgd.c **** 						pc += ix & 1;				/* Step forward chroma pointer every two pixels */
 1778              		.loc 1 832 20 is_stmt 1 discriminator 1 view .LVU670
 832:lvgl/src/extra/libs/sjpg/tjpgd.c **** 						pc += ix & 1;				/* Step forward chroma pointer every two pixels */
 1779              		.loc 1 832 23 is_stmt 0 discriminator 1 view .LVU671
 1780 00ac 0EF1380E 		add	lr, lr, #56
 1781              	.LVL268:
 832:lvgl/src/extra/libs/sjpg/tjpgd.c **** 						pc += ix & 1;				/* Step forward chroma pointer every two pixels */
 1782              		.loc 1 832 23 discriminator 1 view .LVU672
 1783 00b0 F8E7     		b	.L102
 1784              	.LVL269:
 1785              	.L138:
 834:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					} else {						/* Single block width */
 835:lvgl/src/extra/libs/sjpg/tjpgd.c **** 						pc++;						/* Step forward chroma pointer every pixel */
 836:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					}
 837:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					yy = *py++;			/* Get Y component */
 838:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*pix++ = /*R*/ BYTECLIP(yy + ((int)(1.402 * CVACC) * cr) / CVACC);
 1786              		.loc 1 838 21 view .LVU673
 1787 00b2 01F2FF31 		addw	r1, r1, #1023
 1788 00b6 22E0     		b	.L104
 1789              	.LVL270:
 1790              	.L139:
 839:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*pix++ = /*G*/ BYTECLIP(yy - ((int)(0.344 * CVACC) * cb + (int)(0.714 * CVACC) * cr) / CVACC);
 1791              		.loc 1 839 21 view .LVU674
 1792 00b8 03F2FF33 		addw	r3, r3, #1023
 1793 00bc 31E0     		b	.L105
 1794              	.LVL271:
 1795              	.L106:
 840:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*pix++ = /*B*/ BYTECLIP(yy + ((int)(1.772 * CVACC) * cb) / CVACC);
 1796              		.loc 1 840 21 view .LVU675
 1797 00be 06EBA426 		add	r6, r6, r4, asr #10
 1798              	.LVL272:
 1799              		.loc 1 840 21 view .LVU676
 1800 00c2 C6F30906 		ubfx	r6, r6, #0, #10
 1801              	.LVL273:
 1802              		.loc 1 840 21 view .LVU677
 1803 00c6 984B     		ldr	r3, .L148
 1804 00c8 9B5D     		ldrb	r3, [r3, r6]	@ zero_extendqisi2
 1805              		.loc 1 840 13 view .LVU678
 1806 00ca 8CF80230 		strb	r3, [ip, #2]
 828:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					cb = pc[0] - 128; 	/* Get Cb/Cr component and remove offset */
 1807              		.loc 1 828 29 is_stmt 1 discriminator 2 view .LVU679
 1808 00ce 09F10109 		add	r9, r9, #1
 1809              	.LVL274:
 1810              		.loc 1 840 10 is_stmt 0 view .LVU680
 1811 00d2 0CF1030C 		add	ip, ip, #3
 1812              	.LVL275:
 1813              	.L100:
 828:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					cb = pc[0] - 128; 	/* Get Cb/Cr component and remove offset */
 1814              		.loc 1 828 21 is_stmt 1 discriminator 1 view .LVU681
 1815 00d6 8145     		cmp	r9, r0
 1816 00d8 34D2     		bcs	.L136
 829:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					cr = pc[64] - 128;
 1817              		.loc 1 829 6 view .LVU682
 829:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					cr = pc[64] - 128;
 1818              		.loc 1 829 13 is_stmt 0 view .LVU683
 1819 00da 98F80040 		ldrb	r4, [r8]	@ zero_extendqisi2
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 50


 829:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					cr = pc[64] - 128;
 1820              		.loc 1 829 9 view .LVU684
 1821 00de 803C     		subs	r4, r4, #128
 1822              	.LVL276:
 830:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					if (mx == 16) {					/* Double block width? */
 1823              		.loc 1 830 6 is_stmt 1 view .LVU685
 830:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					if (mx == 16) {					/* Double block width? */
 1824              		.loc 1 830 13 is_stmt 0 view .LVU686
 1825 00e0 98F84030 		ldrb	r3, [r8, #64]	@ zero_extendqisi2
 830:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					if (mx == 16) {					/* Double block width? */
 1826              		.loc 1 830 9 view .LVU687
 1827 00e4 803B     		subs	r3, r3, #128
 1828              	.LVL277:
 831:lvgl/src/extra/libs/sjpg/tjpgd.c **** 						if (ix == 8) py += 64 - 8;	/* Jump to next block if double block heigt */
 1829              		.loc 1 831 6 is_stmt 1 view .LVU688
 831:lvgl/src/extra/libs/sjpg/tjpgd.c **** 						if (ix == 8) py += 64 - 8;	/* Jump to next block if double block heigt */
 1830              		.loc 1 831 9 is_stmt 0 view .LVU689
 1831 00e6 1028     		cmp	r0, #16
 1832 00e8 D9D0     		beq	.L137
 835:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					}
 1833              		.loc 1 835 7 is_stmt 1 view .LVU690
 835:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					}
 1834              		.loc 1 835 9 is_stmt 0 view .LVU691
 1835 00ea 08F10108 		add	r8, r8, #1
 1836              	.LVL278:
 1837              	.L103:
 837:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*pix++ = /*R*/ BYTECLIP(yy + ((int)(1.402 * CVACC) * cr) / CVACC);
 1838              		.loc 1 837 6 is_stmt 1 view .LVU692
 837:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*pix++ = /*R*/ BYTECLIP(yy + ((int)(1.402 * CVACC) * cr) / CVACC);
 1839              		.loc 1 837 11 is_stmt 0 view .LVU693
 1840 00ee 1EF8016B 		ldrb	r6, [lr], #1	@ zero_extendqisi2
 1841              	.LVL279:
 838:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*pix++ = /*G*/ BYTECLIP(yy - ((int)(0.344 * CVACC) * cb + (int)(0.714 * CVACC) * cr) / CVACC);
 1842              		.loc 1 838 6 is_stmt 1 view .LVU694
 838:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*pix++ = /*G*/ BYTECLIP(yy - ((int)(0.344 * CVACC) * cb + (int)(0.714 * CVACC) * cr) / CVACC);
 1843              		.loc 1 838 21 is_stmt 0 view .LVU695
 1844 00f2 40F29B51 		movw	r1, #1435
 1845 00f6 03FB01F1 		mul	r1, r3, r1
 1846 00fa 0029     		cmp	r1, #0
 1847 00fc D9DB     		blt	.L138
 1848              	.L104:
 838:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*pix++ = /*G*/ BYTECLIP(yy - ((int)(0.344 * CVACC) * cb + (int)(0.714 * CVACC) * cr) / CVACC);
 1849              		.loc 1 838 21 view .LVU696
 1850 00fe 06EBA121 		add	r1, r6, r1, asr #10
 1851 0102 C1F30901 		ubfx	r1, r1, #0, #10
 1852              	.LVL280:
 838:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*pix++ = /*G*/ BYTECLIP(yy - ((int)(0.344 * CVACC) * cb + (int)(0.714 * CVACC) * cr) / CVACC);
 1853              		.loc 1 838 21 view .LVU697
 1854 0106 884A     		ldr	r2, .L148
 1855 0108 525C     		ldrb	r2, [r2, r1]	@ zero_extendqisi2
 838:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*pix++ = /*G*/ BYTECLIP(yy - ((int)(0.344 * CVACC) * cb + (int)(0.714 * CVACC) * cr) / CVACC);
 1856              		.loc 1 838 13 view .LVU698
 1857 010a 8CF80020 		strb	r2, [ip]
 839:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*pix++ = /*B*/ BYTECLIP(yy + ((int)(1.772 * CVACC) * cb) / CVACC);
 1858              		.loc 1 839 6 is_stmt 1 view .LVU699
 839:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*pix++ = /*B*/ BYTECLIP(yy + ((int)(1.772 * CVACC) * cb) / CVACC);
 1859              		.loc 1 839 21 is_stmt 0 view .LVU700
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 51


 1860 010e 40F2DB22 		movw	r2, #731
 1861 0112 02FB03F3 		mul	r3, r2, r3
 1862              	.LVL281:
 839:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*pix++ = /*B*/ BYTECLIP(yy + ((int)(1.772 * CVACC) * cb) / CVACC);
 1863              		.loc 1 839 21 view .LVU701
 1864 0116 4FF4B072 		mov	r2, #352
 1865 011a 02FB0433 		mla	r3, r2, r4, r3
 1866 011e 002B     		cmp	r3, #0
 1867 0120 CADB     		blt	.L139
 1868              	.L105:
 1869 0122 A6EBA323 		sub	r3, r6, r3, asr #10
 1870 0126 C3F30903 		ubfx	r3, r3, #0, #10
 1871              	.LVL282:
 839:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*pix++ = /*B*/ BYTECLIP(yy + ((int)(1.772 * CVACC) * cb) / CVACC);
 1872              		.loc 1 839 21 view .LVU702
 1873 012a 7F4A     		ldr	r2, .L148
 1874 012c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 839:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*pix++ = /*B*/ BYTECLIP(yy + ((int)(1.772 * CVACC) * cb) / CVACC);
 1875              		.loc 1 839 13 view .LVU703
 1876 012e 8CF80130 		strb	r3, [ip, #1]
 1877              		.loc 1 840 6 is_stmt 1 view .LVU704
 1878              		.loc 1 840 21 is_stmt 0 view .LVU705
 1879 0132 40F21673 		movw	r3, #1814
 1880 0136 03FB04F4 		mul	r4, r3, r4
 1881              	.LVL283:
 1882              		.loc 1 840 21 view .LVU706
 1883 013a 002C     		cmp	r4, #0
 1884 013c BFDA     		bge	.L106
 1885 013e 04F2FF34 		addw	r4, r4, #1023
 1886 0142 BCE7     		b	.L106
 1887              	.LVL284:
 1888              	.L136:
 819:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				pc = py = jd->mcubuf;
 1889              		.loc 1 819 28 discriminator 2 view .LVU707
 1890 0144 5246     		mov	r2, r10
 1891 0146 DDF804A0 		ldr	r10, [sp, #4]
 1892              	.LVL285:
 819:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				pc = py = jd->mcubuf;
 1893              		.loc 1 819 28 is_stmt 1 discriminator 2 view .LVU708
 1894 014a 0AF1010A 		add	r10, r10, #1
 1895              	.LVL286:
 1896              	.L97:
 819:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				pc = py = jd->mcubuf;
 1897              		.loc 1 819 20 discriminator 1 view .LVU709
 1898 014e 9245     		cmp	r10, r2
 1899 0150 0ED2     		bcs	.L140
 820:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (my == 16) {		/* Double block height? */
 1900              		.loc 1 820 5 view .LVU710
 820:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (my == 16) {		/* Double block height? */
 1901              		.loc 1 820 13 is_stmt 0 view .LVU711
 1902 0152 7B6E     		ldr	r3, [r7, #100]
 1903              	.LVL287:
 821:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					pc += 64 * 4 + (iy >> 1) * 8;
 1904              		.loc 1 821 5 is_stmt 1 view .LVU712
 821:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					pc += 64 * 4 + (iy >> 1) * 8;
 1905              		.loc 1 821 8 is_stmt 0 view .LVU713
 1906 0154 102A     		cmp	r2, #16
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 52


 1907 0156 97D0     		beq	.L141
 825:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 1908              		.loc 1 825 6 is_stmt 1 view .LVU714
 825:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 1909              		.loc 1 825 19 is_stmt 0 view .LVU715
 1910 0158 0AEB0008 		add	r8, r10, r0
 825:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 1911              		.loc 1 825 9 view .LVU716
 1912 015c 03EBC808 		add	r8, r3, r8, lsl #3
 1913              	.LVL288:
 1914              	.L99:
 827:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				for (ix = 0; ix < mx; ix++) {
 1915              		.loc 1 827 5 is_stmt 1 view .LVU717
 827:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				for (ix = 0; ix < mx; ix++) {
 1916              		.loc 1 827 8 is_stmt 0 view .LVU718
 1917 0160 03EBCA0E 		add	lr, r3, r10, lsl #3
 1918              	.LVL289:
 828:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					cb = pc[0] - 128; 	/* Get Cb/Cr component and remove offset */
 1919              		.loc 1 828 5 is_stmt 1 view .LVU719
 828:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					cb = pc[0] - 128; 	/* Get Cb/Cr component and remove offset */
 1920              		.loc 1 828 13 is_stmt 0 view .LVU720
 1921 0164 4FF00009 		mov	r9, #0
 1922 0168 CDF804A0 		str	r10, [sp, #4]
 1923 016c 9246     		mov	r10, r2
 1924              	.LVL290:
 828:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					cb = pc[0] - 128; 	/* Get Cb/Cr component and remove offset */
 1925              		.loc 1 828 5 view .LVU721
 1926 016e B2E7     		b	.L100
 1927              	.LVL291:
 1928              	.L140:
 841:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 842:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			}
 843:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		} else {	/* Monochrome output (build a grayscale MCU from Y comopnent) */
 844:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			for (iy = 0; iy < my; iy++) {
 845:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				py = jd->mcubuf + iy * 8;
 846:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (my == 16) {		/* Double block height? */
 847:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					if (iy >= 8) py += 64;
 848:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 849:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				for (ix = 0; ix < mx; ix++) {
 850:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					if (mx == 16) {					/* Double block width? */
 851:lvgl/src/extra/libs/sjpg/tjpgd.c **** 						if (ix == 8) py += 64 - 8;	/* Jump to next block if double block height */
 852:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					}
 853:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*pix++ = (uint8_t)*py++;			/* Get and store a Y value as grayscale */
 854:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 855:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			}
 856:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		}
 857:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 858:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		/* Descale the MCU rectangular if needed */
 859:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (JD_USE_SCALE && jd->scale) {
 1929              		.loc 1 859 25 view .LVU722
 1930 0170 5B46     		mov	r3, fp
 1931              		.loc 1 859 3 is_stmt 1 view .LVU723
 1932              		.loc 1 859 25 is_stmt 0 view .LVU724
 1933 0172 797B     		ldrb	r1, [r7, #13]	@ zero_extendqisi2
 1934              		.loc 1 859 6 view .LVU725
 1935 0174 0029     		cmp	r1, #0
 1936 0176 00F0AB80 		beq	.L109
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 53


 1937              	.LVL292:
 1938              	.LBB2:
 860:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			unsigned int x, y, r, g, b, s, w, a;
 1939              		.loc 1 860 4 is_stmt 1 view .LVU726
 861:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			uint8_t *op;
 1940              		.loc 1 861 4 view .LVU727
 862:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 863:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			/* Get averaged RGB value of each square correcponds to a pixel */
 864:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			s = jd->scale * 2;	/* Number of shifts for averaging */
 1941              		.loc 1 864 4 view .LVU728
 1942              		.loc 1 864 18 is_stmt 0 view .LVU729
 1943 017a 4FEA410A 		lsl	r10, r1, #1
 1944              	.LVL293:
 865:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			w = 1 << jd->scale;	/* Width of square */
 1945              		.loc 1 865 4 is_stmt 1 view .LVU730
 1946              		.loc 1 865 10 is_stmt 0 view .LVU731
 1947 017e 0124     		movs	r4, #1
 1948 0180 8C40     		lsls	r4, r4, r1
 1949              	.LVL294:
 866:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			a = (mx - w) * (JD_FORMAT != 2 ? 3 : 1);	/* Bytes to skip for next line in the square */
 1950              		.loc 1 866 4 is_stmt 1 view .LVU732
 1951              		.loc 1 866 12 is_stmt 0 view .LVU733
 1952 0182 061B     		subs	r6, r0, r4
 1953              		.loc 1 866 6 view .LVU734
 1954 0184 06EB4606 		add	r6, r6, r6, lsl #1
 1955              	.LVL295:
 867:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			op = (uint8_t*)jd->workbuf;
 1956              		.loc 1 867 4 is_stmt 1 view .LVU735
 1957              		.loc 1 867 7 is_stmt 0 view .LVU736
 1958 0188 D7F86080 		ldr	r8, [r7, #96]
 1959              	.LVL296:
 868:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			for (iy = 0; iy < my; iy += w) {
 1960              		.loc 1 868 4 is_stmt 1 view .LVU737
 1961              		.loc 1 868 12 is_stmt 0 view .LVU738
 1962 018c 4FF0000B 		mov	fp, #0
 1963              		.loc 1 868 4 view .LVU739
 1964 0190 38E0     		b	.L110
 1965              	.LVL297:
 1966              	.L112:
 869:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				for (ix = 0; ix < mx; ix += w) {
 870:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					pix = (uint8_t*)jd->workbuf + (iy * mx + ix) * (JD_FORMAT != 2 ? 3 : 1);
 871:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					r = g = b = 0;
 872:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					for (y = 0; y < w; y++) {	/* Accumulate RGB value in the square */
 873:lvgl/src/extra/libs/sjpg/tjpgd.c **** 						for (x = 0; x < w; x++) {
 874:lvgl/src/extra/libs/sjpg/tjpgd.c **** 							r += *pix++;	/* Accumulate R or Y (monochrome output) */
 1967              		.loc 1 874 8 is_stmt 1 view .LVU740
 1968              		.loc 1 874 13 is_stmt 0 view .LVU741
 1969 0192 93F800E0 		ldrb	lr, [r3]	@ zero_extendqisi2
 1970              		.loc 1 874 10 view .LVU742
 1971 0196 F444     		add	ip, ip, lr
 1972              	.LVL298:
 875:lvgl/src/extra/libs/sjpg/tjpgd.c **** 							if (JD_FORMAT != 2) {	/* RGB output? */
 1973              		.loc 1 875 8 is_stmt 1 view .LVU743
 876:lvgl/src/extra/libs/sjpg/tjpgd.c **** 								g += *pix++;	/* Accumulate G */
 1974              		.loc 1 876 9 view .LVU744
 1975              		.loc 1 876 14 is_stmt 0 view .LVU745
 1976 0198 93F801E0 		ldrb	lr, [r3, #1]	@ zero_extendqisi2
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 54


 1977              		.loc 1 876 11 view .LVU746
 1978 019c 7544     		add	r5, r5, lr
 1979              	.LVL299:
 877:lvgl/src/extra/libs/sjpg/tjpgd.c **** 								b += *pix++;	/* Accumulate B */
 1980              		.loc 1 877 9 is_stmt 1 view .LVU747
 1981              		.loc 1 877 14 is_stmt 0 view .LVU748
 1982 019e 93F802E0 		ldrb	lr, [r3, #2]	@ zero_extendqisi2
 1983              		.loc 1 877 11 view .LVU749
 1984 01a2 7144     		add	r1, r1, lr
 1985              	.LVL300:
 873:lvgl/src/extra/libs/sjpg/tjpgd.c **** 							r += *pix++;	/* Accumulate R or Y (monochrome output) */
 1986              		.loc 1 873 27 is_stmt 1 discriminator 2 view .LVU750
 1987 01a4 0132     		adds	r2, r2, #1
 1988              	.LVL301:
 1989              		.loc 1 877 18 is_stmt 0 view .LVU751
 1990 01a6 0333     		adds	r3, r3, #3
 1991              	.LVL302:
 1992              	.L113:
 873:lvgl/src/extra/libs/sjpg/tjpgd.c **** 							r += *pix++;	/* Accumulate R or Y (monochrome output) */
 1993              		.loc 1 873 21 is_stmt 1 discriminator 1 view .LVU752
 1994 01a8 A242     		cmp	r2, r4
 1995 01aa F2D3     		bcc	.L112
 878:lvgl/src/extra/libs/sjpg/tjpgd.c **** 							}
 879:lvgl/src/extra/libs/sjpg/tjpgd.c **** 						}
 880:lvgl/src/extra/libs/sjpg/tjpgd.c **** 						pix += a;
 1996              		.loc 1 880 7 view .LVU753
 1997              		.loc 1 880 11 is_stmt 0 view .LVU754
 1998 01ac 3344     		add	r3, r3, r6
 1999              	.LVL303:
 872:lvgl/src/extra/libs/sjpg/tjpgd.c **** 						for (x = 0; x < w; x++) {
 2000              		.loc 1 872 26 is_stmt 1 discriminator 2 view .LVU755
 2001 01ae 0BF1010B 		add	fp, fp, #1
 2002              	.LVL304:
 2003              	.L111:
 872:lvgl/src/extra/libs/sjpg/tjpgd.c **** 						for (x = 0; x < w; x++) {
 2004              		.loc 1 872 20 discriminator 1 view .LVU756
 2005 01b2 A345     		cmp	fp, r4
 2006 01b4 01D2     		bcs	.L142
 873:lvgl/src/extra/libs/sjpg/tjpgd.c **** 							r += *pix++;	/* Accumulate R or Y (monochrome output) */
 2007              		.loc 1 873 14 is_stmt 0 view .LVU757
 2008 01b6 0022     		movs	r2, #0
 2009 01b8 F6E7     		b	.L113
 2010              	.L142:
 881:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					}							/* Put the averaged pixel value */
 882:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*op++ = (uint8_t)(r >> s);	/* Put R or Y (monochrome output) */
 2011              		.loc 1 882 26 view .LVU758
 2012 01ba DDF804E0 		ldr	lr, [sp, #4]
 2013              		.loc 1 882 6 is_stmt 1 view .LVU759
 2014              		.loc 1 882 26 is_stmt 0 view .LVU760
 2015 01be 2CFA0AFC 		lsr	ip, ip, r10
 2016              	.LVL305:
 2017              		.loc 1 882 12 view .LVU761
 2018 01c2 88F800C0 		strb	ip, [r8]
 883:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					if (JD_FORMAT != 2) {	/* RGB output? */
 2019              		.loc 1 883 6 is_stmt 1 view .LVU762
 884:lvgl/src/extra/libs/sjpg/tjpgd.c **** 						*op++ = (uint8_t)(g >> s);	/* Put G */
 2020              		.loc 1 884 7 view .LVU763
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 55


 2021              		.loc 1 884 27 is_stmt 0 view .LVU764
 2022 01c6 25FA0AF5 		lsr	r5, r5, r10
 2023              	.LVL306:
 2024              		.loc 1 884 13 view .LVU765
 2025 01ca 88F80150 		strb	r5, [r8, #1]
 885:lvgl/src/extra/libs/sjpg/tjpgd.c **** 						*op++ = (uint8_t)(b >> s);	/* Put B */
 2026              		.loc 1 885 7 is_stmt 1 view .LVU766
 2027              		.loc 1 885 27 is_stmt 0 view .LVU767
 2028 01ce 21FA0AF1 		lsr	r1, r1, r10
 2029              	.LVL307:
 2030              		.loc 1 885 13 view .LVU768
 2031 01d2 88F80210 		strb	r1, [r8, #2]
 869:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					pix = (uint8_t*)jd->workbuf + (iy * mx + ix) * (JD_FORMAT != 2 ? 3 : 1);
 2032              		.loc 1 869 30 is_stmt 1 discriminator 2 view .LVU769
 2033 01d6 A644     		add	lr, lr, r4
 2034              	.LVL308:
 2035              		.loc 1 885 10 is_stmt 0 view .LVU770
 2036 01d8 08F10308 		add	r8, r8, #3
 2037              	.LVL309:
 2038              	.L115:
 869:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					pix = (uint8_t*)jd->workbuf + (iy * mx + ix) * (JD_FORMAT != 2 ? 3 : 1);
 2039              		.loc 1 869 21 is_stmt 1 discriminator 1 view .LVU771
 2040 01dc 8645     		cmp	lr, r0
 2041 01de 0CD2     		bcs	.L143
 870:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					r = g = b = 0;
 2042              		.loc 1 870 6 view .LVU772
 870:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					r = g = b = 0;
 2043              		.loc 1 870 24 is_stmt 0 view .LVU773
 2044 01e0 3B6E     		ldr	r3, [r7, #96]
 870:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					r = g = b = 0;
 2045              		.loc 1 870 45 view .LVU774
 2046 01e2 00FB09E2 		mla	r2, r0, r9, lr
 870:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					r = g = b = 0;
 2047              		.loc 1 870 51 view .LVU775
 2048 01e6 02EB4202 		add	r2, r2, r2, lsl #1
 870:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					r = g = b = 0;
 2049              		.loc 1 870 10 view .LVU776
 2050 01ea 1344     		add	r3, r3, r2
 2051              	.LVL310:
 871:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					for (y = 0; y < w; y++) {	/* Accumulate RGB value in the square */
 2052              		.loc 1 871 6 is_stmt 1 view .LVU777
 872:lvgl/src/extra/libs/sjpg/tjpgd.c **** 						for (x = 0; x < w; x++) {
 2053              		.loc 1 872 6 view .LVU778
 871:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					for (y = 0; y < w; y++) {	/* Accumulate RGB value in the square */
 2054              		.loc 1 871 16 is_stmt 0 view .LVU779
 2055 01ec 0021     		movs	r1, #0
 871:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					for (y = 0; y < w; y++) {	/* Accumulate RGB value in the square */
 2056              		.loc 1 871 12 view .LVU780
 2057 01ee 0D46     		mov	r5, r1
 871:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					for (y = 0; y < w; y++) {	/* Accumulate RGB value in the square */
 2058              		.loc 1 871 8 view .LVU781
 2059 01f0 8C46     		mov	ip, r1
 872:lvgl/src/extra/libs/sjpg/tjpgd.c **** 						for (x = 0; x < w; x++) {
 2060              		.loc 1 872 13 view .LVU782
 2061 01f2 8B46     		mov	fp, r1
 2062 01f4 CDF804E0 		str	lr, [sp, #4]
 872:lvgl/src/extra/libs/sjpg/tjpgd.c **** 						for (x = 0; x < w; x++) {
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 56


 2063              		.loc 1 872 6 view .LVU783
 2064 01f8 DBE7     		b	.L111
 2065              	.LVL311:
 2066              	.L143:
 868:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				for (ix = 0; ix < mx; ix += w) {
 2067              		.loc 1 868 29 discriminator 2 view .LVU784
 2068 01fa CB46     		mov	fp, r9
 2069 01fc 039A     		ldr	r2, [sp, #12]
 2070 01fe 049B     		ldr	r3, [sp, #16]
 2071 0200 059D     		ldr	r5, [sp, #20]
 868:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				for (ix = 0; ix < mx; ix += w) {
 2072              		.loc 1 868 29 is_stmt 1 discriminator 2 view .LVU785
 2073 0202 A344     		add	fp, fp, r4
 2074              	.LVL312:
 2075              	.L110:
 868:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				for (ix = 0; ix < mx; ix += w) {
 2076              		.loc 1 868 20 discriminator 1 view .LVU786
 2077 0204 9345     		cmp	fp, r2
 2078 0206 63D2     		bcs	.L109
 869:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					pix = (uint8_t*)jd->workbuf + (iy * mx + ix) * (JD_FORMAT != 2 ? 3 : 1);
 2079              		.loc 1 869 13 is_stmt 0 view .LVU787
 2080 0208 4FF0000E 		mov	lr, #0
 2081 020c D946     		mov	r9, fp
 2082 020e 0392     		str	r2, [sp, #12]
 2083 0210 0493     		str	r3, [sp, #16]
 2084 0212 0595     		str	r5, [sp, #20]
 2085 0214 E2E7     		b	.L115
 2086              	.LVL313:
 2087              	.L96:
 869:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					pix = (uint8_t*)jd->workbuf + (iy * mx + ix) * (JD_FORMAT != 2 ? 3 : 1);
 2088              		.loc 1 869 13 view .LVU788
 2089              	.LBE2:
 886:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					}
 887:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 888:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			}
 889:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		}
 890:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 891:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	} else {	/* For only 1/8 scaling (left-top pixel in each block are the DC value of the block) */
 892:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 893:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		/* Build a 1/8 descaled RGB MCU from discrete comopnents */
 894:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		pix = (uint8_t*)jd->workbuf;
 2090              		.loc 1 894 3 is_stmt 1 view .LVU789
 2091              		.loc 1 894 7 is_stmt 0 view .LVU790
 2092 0216 3E6E     		ldr	r6, [r7, #96]
 2093              	.LVL314:
 895:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		pc = jd->mcubuf + mx * my;
 2094              		.loc 1 895 3 is_stmt 1 view .LVU791
 2095              		.loc 1 895 10 is_stmt 0 view .LVU792
 2096 0218 7C6E     		ldr	r4, [r7, #100]
 2097              		.loc 1 895 24 view .LVU793
 2098 021a 02FB00F1 		mul	r1, r2, r0
 2099              		.loc 1 895 6 view .LVU794
 2100 021e 04EB010C 		add	ip, r4, r1
 2101              	.LVL315:
 896:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		cb = pc[0] - 128;		/* Get Cb/Cr component and restore right level */
 2102              		.loc 1 896 3 is_stmt 1 view .LVU795
 2103              		.loc 1 896 10 is_stmt 0 view .LVU796
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 57


 2104 0222 14F80180 		ldrb	r8, [r4, r1]	@ zero_extendqisi2
 2105              		.loc 1 896 6 view .LVU797
 2106 0226 A8F18008 		sub	r8, r8, #128
 2107              	.LVL316:
 897:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		cr = pc[64] - 128;
 2108              		.loc 1 897 3 is_stmt 1 view .LVU798
 2109              		.loc 1 897 10 is_stmt 0 view .LVU799
 2110 022a 9CF840E0 		ldrb	lr, [ip, #64]	@ zero_extendqisi2
 2111              		.loc 1 897 6 view .LVU800
 2112 022e AEF1800E 		sub	lr, lr, #128
 2113              	.LVL317:
 898:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		for (iy = 0; iy < my; iy += 8) {
 2114              		.loc 1 898 3 is_stmt 1 view .LVU801
 2115              		.loc 1 898 11 is_stmt 0 view .LVU802
 2116 0232 4FF0000A 		mov	r10, #0
 2117              		.loc 1 898 3 view .LVU803
 2118 0236 40E0     		b	.L116
 2119              	.LVL318:
 2120              	.L147:
 899:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			py = jd->mcubuf;
 900:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (iy == 8) py += 64 * 2;
 2121              		.loc 1 900 17 is_stmt 1 discriminator 1 view .LVU804
 2122              		.loc 1 900 20 is_stmt 0 discriminator 1 view .LVU805
 2123 0238 09F18009 		add	r9, r9, #128
 2124              	.LVL319:
 2125              		.loc 1 900 20 discriminator 1 view .LVU806
 2126 023c 44E0     		b	.L117
 2127              	.LVL320:
 2128              	.L145:
 901:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			for (ix = 0; ix < mx; ix += 8) {
 902:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				yy = *py;	/* Get Y component */
 903:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				py += 64;
 904:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (JD_FORMAT != 2) {
 905:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*pix++ = /*R*/ BYTECLIP(yy + ((int)(1.402 * CVACC) * cr / CVACC));
 2129              		.loc 1 905 21 view .LVU807
 2130 023e 01F2FF31 		addw	r1, r1, #1023
 2131 0242 16E0     		b	.L118
 2132              	.LVL321:
 2133              	.L146:
 906:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*pix++ = /*G*/ BYTECLIP(yy - ((int)(0.344 * CVACC) * cb + (int)(0.714 * CVACC) * cr) / CVACC);
 2134              		.loc 1 906 21 view .LVU808
 2135 0244 01F2FF31 		addw	r1, r1, #1023
 2136 0248 24E0     		b	.L119
 2137              	.LVL322:
 2138              	.L120:
 907:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*pix++ = /*B*/ BYTECLIP(yy + ((int)(1.772 * CVACC) * cb / CVACC));
 2139              		.loc 1 907 21 view .LVU809
 2140 024a 04EBA121 		add	r1, r4, r1, asr #10
 2141 024e C1F30901 		ubfx	r1, r1, #0, #10
 2142              	.LVL323:
 2143              		.loc 1 907 21 view .LVU810
 2144 0252 354C     		ldr	r4, .L148
 2145              	.LVL324:
 2146              		.loc 1 907 21 view .LVU811
 2147 0254 615C     		ldrb	r1, [r4, r1]	@ zero_extendqisi2
 2148              		.loc 1 907 13 view .LVU812
 2149 0256 B170     		strb	r1, [r6, #2]
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 58


 901:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			for (ix = 0; ix < mx; ix += 8) {
 2150              		.loc 1 901 29 is_stmt 1 discriminator 2 view .LVU813
 2151 0258 0CF1080C 		add	ip, ip, #8
 2152              	.LVL325:
 2153              		.loc 1 907 10 is_stmt 0 view .LVU814
 2154 025c 0336     		adds	r6, r6, #3
 2155              	.LVL326:
 2156              	.L121:
 901:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			for (ix = 0; ix < mx; ix += 8) {
 2157              		.loc 1 901 20 is_stmt 1 discriminator 1 view .LVU815
 2158 025e 8445     		cmp	ip, r0
 2159 0260 28D2     		bcs	.L144
 902:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				py += 64;
 2160              		.loc 1 902 5 view .LVU816
 902:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				py += 64;
 2161              		.loc 1 902 10 is_stmt 0 view .LVU817
 2162 0262 19F8404B 		ldrb	r4, [r9], #64	@ zero_extendqisi2
 2163              	.LVL327:
 903:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (JD_FORMAT != 2) {
 2164              		.loc 1 903 5 is_stmt 1 view .LVU818
 904:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*pix++ = /*R*/ BYTECLIP(yy + ((int)(1.402 * CVACC) * cr / CVACC));
 2165              		.loc 1 904 5 view .LVU819
 905:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*pix++ = /*G*/ BYTECLIP(yy - ((int)(0.344 * CVACC) * cb + (int)(0.714 * CVACC) * cr) / CVACC);
 2166              		.loc 1 905 6 view .LVU820
 905:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*pix++ = /*G*/ BYTECLIP(yy - ((int)(0.344 * CVACC) * cb + (int)(0.714 * CVACC) * cr) / CVACC);
 2167              		.loc 1 905 21 is_stmt 0 view .LVU821
 2168 0266 40F29B51 		movw	r1, #1435
 2169 026a 01FB0EF1 		mul	r1, r1, lr
 2170 026e 0029     		cmp	r1, #0
 2171 0270 E5DB     		blt	.L145
 2172              	.L118:
 2173 0272 04EBA121 		add	r1, r4, r1, asr #10
 2174 0276 C1F30901 		ubfx	r1, r1, #0, #10
 2175              	.LVL328:
 905:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*pix++ = /*G*/ BYTECLIP(yy - ((int)(0.344 * CVACC) * cb + (int)(0.714 * CVACC) * cr) / CVACC);
 2176              		.loc 1 905 21 view .LVU822
 2177 027a 2B4B     		ldr	r3, .L148
 2178 027c 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 905:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*pix++ = /*G*/ BYTECLIP(yy - ((int)(0.344 * CVACC) * cb + (int)(0.714 * CVACC) * cr) / CVACC);
 2179              		.loc 1 905 13 view .LVU823
 2180 027e 3170     		strb	r1, [r6]
 906:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*pix++ = /*B*/ BYTECLIP(yy + ((int)(1.772 * CVACC) * cb / CVACC));
 2181              		.loc 1 906 6 is_stmt 1 view .LVU824
 906:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*pix++ = /*B*/ BYTECLIP(yy + ((int)(1.772 * CVACC) * cb / CVACC));
 2182              		.loc 1 906 21 is_stmt 0 view .LVU825
 2183 0280 40F2DB21 		movw	r1, #731
 2184 0284 01FB0EF1 		mul	r1, r1, lr
 2185 0288 4FF4B07B 		mov	fp, #352
 2186 028c 0BFB0811 		mla	r1, fp, r8, r1
 2187 0290 0029     		cmp	r1, #0
 2188 0292 D7DB     		blt	.L146
 2189              	.L119:
 2190 0294 A4EBA121 		sub	r1, r4, r1, asr #10
 2191 0298 C1F30901 		ubfx	r1, r1, #0, #10
 2192              	.LVL329:
 906:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*pix++ = /*B*/ BYTECLIP(yy + ((int)(1.772 * CVACC) * cb / CVACC));
 2193              		.loc 1 906 21 view .LVU826
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 59


 2194 029c 224B     		ldr	r3, .L148
 2195 029e 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 906:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*pix++ = /*B*/ BYTECLIP(yy + ((int)(1.772 * CVACC) * cb / CVACC));
 2196              		.loc 1 906 13 view .LVU827
 2197 02a0 7170     		strb	r1, [r6, #1]
 2198              		.loc 1 907 6 is_stmt 1 view .LVU828
 2199              		.loc 1 907 21 is_stmt 0 view .LVU829
 2200 02a2 40F21671 		movw	r1, #1814
 2201 02a6 01FB08F1 		mul	r1, r1, r8
 2202 02aa 0029     		cmp	r1, #0
 2203 02ac CDDA     		bge	.L120
 2204 02ae 01F2FF31 		addw	r1, r1, #1023
 2205 02b2 CAE7     		b	.L120
 2206              	.LVL330:
 2207              	.L144:
 898:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			py = jd->mcubuf;
 2208              		.loc 1 898 28 discriminator 2 view .LVU830
 2209 02b4 019B     		ldr	r3, [sp, #4]
 898:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			py = jd->mcubuf;
 2210              		.loc 1 898 28 is_stmt 1 discriminator 2 view .LVU831
 2211 02b6 0AF1080A 		add	r10, r10, #8
 2212              	.LVL331:
 2213              	.L116:
 898:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			py = jd->mcubuf;
 2214              		.loc 1 898 19 discriminator 1 view .LVU832
 2215 02ba 9245     		cmp	r10, r2
 2216 02bc 08D2     		bcs	.L109
 899:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (iy == 8) py += 64 * 2;
 2217              		.loc 1 899 4 view .LVU833
 899:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (iy == 8) py += 64 * 2;
 2218              		.loc 1 899 7 is_stmt 0 view .LVU834
 2219 02be D7F86490 		ldr	r9, [r7, #100]
 2220              	.LVL332:
 900:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			for (ix = 0; ix < mx; ix += 8) {
 2221              		.loc 1 900 4 is_stmt 1 view .LVU835
 900:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			for (ix = 0; ix < mx; ix += 8) {
 2222              		.loc 1 900 7 is_stmt 0 view .LVU836
 2223 02c2 BAF1080F 		cmp	r10, #8
 2224 02c6 B7D0     		beq	.L147
 2225              	.L117:
 2226              	.LBB3:
 868:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				for (ix = 0; ix < mx; ix += w) {
 2227              		.loc 1 868 12 view .LVU837
 2228 02c8 4FF0000C 		mov	ip, #0
 2229 02cc 0193     		str	r3, [sp, #4]
 2230 02ce C6E7     		b	.L121
 2231              	.LVL333:
 2232              	.L109:
 868:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				for (ix = 0; ix < mx; ix += w) {
 2233              		.loc 1 868 12 view .LVU838
 2234              	.LBE3:
 908:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				} else {
 909:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*pix++ = yy;
 910:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 911:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			}
 912:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		}
 913:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	}
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 60


 914:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 915:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	/* Squeeze up pixel table if a part of MCU is to be truncated */
 916:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	mx >>= jd->scale;
 2235              		.loc 1 916 2 is_stmt 1 view .LVU839
 2236              		.loc 1 916 11 is_stmt 0 view .LVU840
 2237 02d0 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 2238              		.loc 1 916 5 view .LVU841
 2239 02d2 D040     		lsrs	r0, r0, r2
 2240              	.LVL334:
 917:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	if (rx < mx) {	/* Is the MCU spans rigit edge? */
 2241              		.loc 1 917 2 is_stmt 1 view .LVU842
 2242              		.loc 1 917 5 is_stmt 0 view .LVU843
 2243 02d4 8342     		cmp	r3, r0
 2244 02d6 19D2     		bcs	.L124
 2245              	.LBB4:
 918:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		uint8_t *s, *d;
 2246              		.loc 1 918 3 is_stmt 1 view .LVU844
 919:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		unsigned int x, y;
 2247              		.loc 1 919 3 view .LVU845
 920:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 921:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		s = d = (uint8_t*)jd->workbuf;
 2248              		.loc 1 921 3 view .LVU846
 2249              		.loc 1 921 9 is_stmt 0 view .LVU847
 2250 02d8 3A6E     		ldr	r2, [r7, #96]
 2251              	.LVL335:
 922:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		for (y = 0; y < ry; y++) {
 2252              		.loc 1 922 3 is_stmt 1 view .LVU848
 921:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		for (y = 0; y < ry; y++) {
 2253              		.loc 1 921 9 is_stmt 0 view .LVU849
 2254 02da 1146     		mov	r1, r2
 2255              		.loc 1 922 10 view .LVU850
 2256 02dc 4FF0000C 		mov	ip, #0
 2257              		.loc 1 922 3 view .LVU851
 2258 02e0 10E0     		b	.L125
 2259              	.LVL336:
 2260              	.L126:
 923:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			for (x = 0; x < rx; x++) {	/* Copy effective pixels */
 924:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				*d++ = *s++;
 2261              		.loc 1 924 5 is_stmt 1 view .LVU852
 2262              		.loc 1 924 12 is_stmt 0 view .LVU853
 2263 02e2 1678     		ldrb	r6, [r2]	@ zero_extendqisi2
 2264              		.loc 1 924 10 view .LVU854
 2265 02e4 0E70     		strb	r6, [r1]
 925:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (JD_FORMAT != 2) {
 2266              		.loc 1 925 5 is_stmt 1 view .LVU855
 926:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*d++ = *s++;
 2267              		.loc 1 926 6 view .LVU856
 2268              	.LVL337:
 2269              		.loc 1 926 13 is_stmt 0 view .LVU857
 2270 02e6 5678     		ldrb	r6, [r2, #1]	@ zero_extendqisi2
 2271              		.loc 1 926 11 view .LVU858
 2272 02e8 4E70     		strb	r6, [r1, #1]
 927:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					*d++ = *s++;
 2273              		.loc 1 927 6 is_stmt 1 view .LVU859
 2274              	.LVL338:
 2275              		.loc 1 927 13 is_stmt 0 view .LVU860
 2276 02ea 9678     		ldrb	r6, [r2, #2]	@ zero_extendqisi2
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 61


 2277              		.loc 1 927 11 view .LVU861
 2278 02ec 8E70     		strb	r6, [r1, #2]
 923:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				*d++ = *s++;
 2279              		.loc 1 923 25 is_stmt 1 discriminator 2 view .LVU862
 2280 02ee 0134     		adds	r4, r4, #1
 2281              	.LVL339:
 2282              		.loc 1 927 8 is_stmt 0 view .LVU863
 2283 02f0 0331     		adds	r1, r1, #3
 2284              	.LVL340:
 2285              		.loc 1 927 15 view .LVU864
 2286 02f2 0332     		adds	r2, r2, #3
 2287              	.LVL341:
 2288              	.L127:
 923:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				*d++ = *s++;
 2289              		.loc 1 923 18 is_stmt 1 discriminator 1 view .LVU865
 2290 02f4 9C42     		cmp	r4, r3
 2291 02f6 F4D3     		bcc	.L126
 928:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 929:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			}
 930:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			s += (mx - rx) * (JD_FORMAT != 2 ? 3 : 1);	/* Skip truncated pixels */
 2292              		.loc 1 930 4 view .LVU866
 2293              		.loc 1 930 13 is_stmt 0 view .LVU867
 2294 02f8 C41A     		subs	r4, r0, r3
 2295              	.LVL342:
 2296              		.loc 1 930 19 view .LVU868
 2297 02fa 04EB4404 		add	r4, r4, r4, lsl #1
 2298              		.loc 1 930 6 view .LVU869
 2299 02fe 2244     		add	r2, r2, r4
 2300              	.LVL343:
 922:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			for (x = 0; x < rx; x++) {	/* Copy effective pixels */
 2301              		.loc 1 922 24 is_stmt 1 discriminator 2 view .LVU870
 2302 0300 0CF1010C 		add	ip, ip, #1
 2303              	.LVL344:
 2304              	.L125:
 922:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			for (x = 0; x < rx; x++) {	/* Copy effective pixels */
 2305              		.loc 1 922 17 discriminator 1 view .LVU871
 2306 0304 AC45     		cmp	ip, r5
 2307 0306 01D2     		bcs	.L124
 923:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				*d++ = *s++;
 2308              		.loc 1 923 11 is_stmt 0 view .LVU872
 2309 0308 0024     		movs	r4, #0
 2310 030a F3E7     		b	.L127
 2311              	.LVL345:
 2312              	.L124:
 923:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				*d++ = *s++;
 2313              		.loc 1 923 11 view .LVU873
 2314              	.LBE4:
 931:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		}
 932:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	}
 933:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 934:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	/* Convert RGB888 to RGB565 if needed */
 935:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	if (JD_FORMAT == 1) {
 2315              		.loc 1 935 2 is_stmt 1 view .LVU874
 936:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		uint8_t *s = (uint8_t*)jd->workbuf;
 937:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		uint16_t w, *d = (uint16_t*)s;
 938:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		unsigned int n = rx * ry;
 939:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 62


 940:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		do {
 941:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			w = (*s++ & 0xF8) << 8;		/* RRRRR----------- */
 942:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			w |= (*s++ & 0xFC) << 3;	/* -----GGGGGG----- */
 943:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			w |= *s++ >> 3;				/* -----------BBBBB */
 944:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			*d++ = w;
 945:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		} while (--n);
 946:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	}
 947:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 948:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	/* Output the rectangular */
 949:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	return outfunc(jd, jd->workbuf, &rect) ? JDR_OK : JDR_INTR; 
 2316              		.loc 1 949 2 view .LVU875
 2317              		.loc 1 949 9 is_stmt 0 view .LVU876
 2318 030c 06AA     		add	r2, sp, #24
 2319 030e 396E     		ldr	r1, [r7, #96]
 2320 0310 3846     		mov	r0, r7
 2321              	.LVL346:
 2322              		.loc 1 949 9 view .LVU877
 2323 0312 029B     		ldr	r3, [sp, #8]
 2324 0314 9847     		blx	r3
 2325              	.LVL347:
 2326              		.loc 1 949 50 discriminator 1 view .LVU878
 2327 0316 B0FA80F0 		clz	r0, r0
 2328 031a 4009     		lsrs	r0, r0, #5
 2329              	.LVL348:
 2330              	.L95:
 950:lvgl/src/extra/libs/sjpg/tjpgd.c **** }
 2331              		.loc 1 950 1 view .LVU879
 2332 031c 09B0     		add	sp, sp, #36
 2333              	.LCFI11:
 2334              		.cfi_remember_state
 2335              		.cfi_def_cfa_offset 36
 2336              		@ sp needed
 2337 031e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2338              	.LVL349:
 2339              	.L130:
 2340              	.LCFI12:
 2341              		.cfi_restore_state
 808:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		img_x >>= jd->scale; img_y >>= jd->scale;
 2342              		.loc 1 808 26 discriminator 1 view .LVU880
 2343 0322 0020     		movs	r0, #0
 2344              	.LVL350:
 808:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		img_x >>= jd->scale; img_y >>= jd->scale;
 2345              		.loc 1 808 26 discriminator 1 view .LVU881
 2346 0324 FAE7     		b	.L95
 2347              	.L149:
 2348 0326 00BF     		.align	2
 2349              	.L148:
 2350 0328 00000000 		.word	Clip8
 2351              		.cfi_endproc
 2352              	.LFE8:
 2354              		.section	.text.mcu_load,"ax",%progbits
 2355              		.align	1
 2356              		.syntax unified
 2357              		.thumb
 2358              		.thumb_func
 2360              	mcu_load:
 2361              	.LVL351:
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 63


 2362              	.LFB7:
 705:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	int32_t *tmp = (int32_t*)jd->workbuf;	/* Block working buffer for de-quantize and IDCT */
 2363              		.loc 1 705 1 is_stmt 1 view -0
 2364              		.cfi_startproc
 2365              		@ args = 0, pretend = 0, frame = 8
 2366              		@ frame_needed = 0, uses_anonymous_args = 0
 705:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	int32_t *tmp = (int32_t*)jd->workbuf;	/* Block working buffer for de-quantize and IDCT */
 2367              		.loc 1 705 1 is_stmt 0 view .LVU883
 2368 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2369              	.LCFI13:
 2370              		.cfi_def_cfa_offset 36
 2371              		.cfi_offset 4, -36
 2372              		.cfi_offset 5, -32
 2373              		.cfi_offset 6, -28
 2374              		.cfi_offset 7, -24
 2375              		.cfi_offset 8, -20
 2376              		.cfi_offset 9, -16
 2377              		.cfi_offset 10, -12
 2378              		.cfi_offset 11, -8
 2379              		.cfi_offset 14, -4
 2380 0004 83B0     		sub	sp, sp, #12
 2381              	.LCFI14:
 2382              		.cfi_def_cfa_offset 48
 2383 0006 0646     		mov	r6, r0
 706:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	int d, e;
 2384              		.loc 1 706 2 is_stmt 1 view .LVU884
 706:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	int d, e;
 2385              		.loc 1 706 11 is_stmt 0 view .LVU885
 2386 0008 D0F86090 		ldr	r9, [r0, #96]
 2387              	.LVL352:
 707:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	unsigned int blk, nby, i, bc, z, id, cmp;
 2388              		.loc 1 707 2 is_stmt 1 view .LVU886
 708:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	jd_yuv_t *bp;
 2389              		.loc 1 708 2 view .LVU887
 709:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	const int32_t *dqf;
 2390              		.loc 1 709 2 view .LVU888
 710:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 2391              		.loc 1 710 2 view .LVU889
 713:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	bp = jd->mcubuf;			/* Pointer to the first block of MCU */
 2392              		.loc 1 713 2 view .LVU890
 713:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	bp = jd->mcubuf;			/* Pointer to the first block of MCU */
 2393              		.loc 1 713 10 is_stmt 0 view .LVU891
 2394 000c 837B     		ldrb	r3, [r0, #14]	@ zero_extendqisi2
 713:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	bp = jd->mcubuf;			/* Pointer to the first block of MCU */
 2395              		.loc 1 713 20 view .LVU892
 2396 000e C27B     		ldrb	r2, [r0, #15]	@ zero_extendqisi2
 713:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	bp = jd->mcubuf;			/* Pointer to the first block of MCU */
 2397              		.loc 1 713 16 view .LVU893
 2398 0010 02FB03F3 		mul	r3, r2, r3
 2399 0014 0193     		str	r3, [sp, #4]
 2400              	.LVL353:
 714:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 2401              		.loc 1 714 2 is_stmt 1 view .LVU894
 714:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 2402              		.loc 1 714 5 is_stmt 0 view .LVU895
 2403 0016 476E     		ldr	r7, [r0, #100]
 2404              	.LVL354:
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 64


 716:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		cmp = (blk < nby) ? 0 : blk - nby + 1;	/* Component number 0:Y, 1:Cb, 2:Cr */
 2405              		.loc 1 716 2 is_stmt 1 view .LVU896
 716:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		cmp = (blk < nby) ? 0 : blk - nby + 1;	/* Component number 0:Y, 1:Cb, 2:Cr */
 2406              		.loc 1 716 11 is_stmt 0 view .LVU897
 2407 0018 4FF0000B 		mov	fp, #0
 716:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		cmp = (blk < nby) ? 0 : blk - nby + 1;	/* Component number 0:Y, 1:Cb, 2:Cr */
 2408              		.loc 1 716 2 view .LVU898
 2409 001c 92E0     		b	.L151
 2410              	.LVL355:
 2411              	.L154:
 720:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 2412              		.loc 1 720 32 is_stmt 1 discriminator 3 view .LVU899
 720:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 2413              		.loc 1 720 32 is_stmt 0 discriminator 3 view .LVU900
 2414 001e 8022     		movs	r2, #128
 2415 0020 FA54     		strb	r2, [r7, r3]
 720:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 2416              		.loc 1 720 28 discriminator 3 view .LVU901
 2417 0022 0133     		adds	r3, r3, #1
 2418              	.LVL356:
 2419              	.L153:
 720:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 2420              		.loc 1 720 18 is_stmt 1 discriminator 1 view .LVU902
 2421 0024 3F2B     		cmp	r3, #63
 2422 0026 FAD9     		bls	.L154
 2423 0028 89E0     		b	.L155
 2424              	.LVL357:
 2425              	.L171:
 717:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 2426              		.loc 1 717 25 is_stmt 0 discriminator 2 view .LVU903
 2427 002a 0025     		movs	r5, #0
 2428              	.L152:
 723:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 2429              		.loc 1 723 4 is_stmt 1 view .LVU904
 723:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 2430              		.loc 1 723 17 is_stmt 0 view .LVU905
 2431 002c B5F10008 		subs	r8, r5, #0
 2432 0030 18BF     		it	ne
 2433 0032 4FF00108 		movne	r8, #1
 2434              	.LVL358:
 726:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (d < 0) return (JRESULT)(0 - d);		/* Err: invalid code or input */
 2435              		.loc 1 726 4 is_stmt 1 view .LVU906
 726:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (d < 0) return (JRESULT)(0 - d);		/* Err: invalid code or input */
 2436              		.loc 1 726 8 is_stmt 0 view .LVU907
 2437 0036 0022     		movs	r2, #0
 2438 0038 4146     		mov	r1, r8
 2439 003a 3046     		mov	r0, r6
 2440 003c FFF7FEFF 		bl	huffext
 2441              	.LVL359:
 727:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			bc = (unsigned int)d;
 2442              		.loc 1 727 4 is_stmt 1 view .LVU908
 727:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			bc = (unsigned int)d;
 2443              		.loc 1 727 7 is_stmt 0 view .LVU909
 2444 0040 B0F1000A 		subs	r10, r0, #0
 2445 0044 30DB     		blt	.L175
 728:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			d = jd->dcv[cmp];						/* DC value of previous block */
 2446              		.loc 1 728 4 is_stmt 1 view .LVU910
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 65


 2447              	.LVL360:
 729:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (bc) {								/* If there is any difference from previous block */
 2448              		.loc 1 729 4 view .LVU911
 729:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (bc) {								/* If there is any difference from previous block */
 2449              		.loc 1 729 15 is_stmt 0 view .LVU912
 2450 0046 05F10803 		add	r3, r5, #8
 2451 004a 06EB4303 		add	r3, r6, r3, lsl #1
 2452 004e B3F90440 		ldrsh	r4, [r3, #4]
 2453              	.LVL361:
 730:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				e = bitext(jd, bc);					/* Extract data bits */
 2454              		.loc 1 730 4 is_stmt 1 view .LVU913
 730:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				e = bitext(jd, bc);					/* Extract data bits */
 2455              		.loc 1 730 7 is_stmt 0 view .LVU914
 2456 0052 BAF1000F 		cmp	r10, #0
 2457 0056 14D0     		beq	.L158
 731:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (e < 0) return (JRESULT)(0 - e);	/* Err: input */
 2458              		.loc 1 731 5 is_stmt 1 view .LVU915
 731:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (e < 0) return (JRESULT)(0 - e);	/* Err: input */
 2459              		.loc 1 731 9 is_stmt 0 view .LVU916
 2460 0058 5146     		mov	r1, r10
 2461 005a 3046     		mov	r0, r6
 2462              	.LVL362:
 731:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (e < 0) return (JRESULT)(0 - e);	/* Err: input */
 2463              		.loc 1 731 9 view .LVU917
 2464 005c FFF7FEFF 		bl	bitext
 2465              	.LVL363:
 732:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				bc = 1 << (bc - 1);					/* MSB position */
 2466              		.loc 1 732 5 is_stmt 1 view .LVU918
 732:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				bc = 1 << (bc - 1);					/* MSB position */
 2467              		.loc 1 732 8 is_stmt 0 view .LVU919
 2468 0060 0028     		cmp	r0, #0
 732:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				bc = 1 << (bc - 1);					/* MSB position */
 2469              		.loc 1 732 8 view .LVU920
 2470 0062 26DB     		blt	.L176
 733:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (!(e & bc)) e -= (bc << 1) - 1;	/* Restore negative value if needed */
 2471              		.loc 1 733 5 is_stmt 1 view .LVU921
 733:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (!(e & bc)) e -= (bc << 1) - 1;	/* Restore negative value if needed */
 2472              		.loc 1 733 19 is_stmt 0 view .LVU922
 2473 0064 0AF1FF32 		add	r2, r10, #-1
 733:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (!(e & bc)) e -= (bc << 1) - 1;	/* Restore negative value if needed */
 2474              		.loc 1 733 12 view .LVU923
 2475 0068 0123     		movs	r3, #1
 2476 006a 9340     		lsls	r3, r3, r2
 2477              	.LVL364:
 734:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				d += e;								/* Get current value */
 2478              		.loc 1 734 5 is_stmt 1 view .LVU924
 734:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				d += e;								/* Get current value */
 2479              		.loc 1 734 8 is_stmt 0 view .LVU925
 2480 006c 0342     		tst	r3, r0
 2481 006e 02D1     		bne	.L160
 734:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				d += e;								/* Get current value */
 2482              		.loc 1 734 20 is_stmt 1 discriminator 1 view .LVU926
 734:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				d += e;								/* Get current value */
 2483              		.loc 1 734 22 is_stmt 0 discriminator 1 view .LVU927
 2484 0070 A0EB4300 		sub	r0, r0, r3, lsl #1
 2485              	.LVL365:
 734:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				d += e;								/* Get current value */
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 66


 2486              		.loc 1 734 22 discriminator 1 view .LVU928
 2487 0074 0130     		adds	r0, r0, #1
 2488              	.LVL366:
 2489              	.L160:
 735:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				jd->dcv[cmp] = (int16_t)d;			/* Save current DC value for next block */
 2490              		.loc 1 735 5 is_stmt 1 view .LVU929
 735:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				jd->dcv[cmp] = (int16_t)d;			/* Save current DC value for next block */
 2491              		.loc 1 735 7 is_stmt 0 view .LVU930
 2492 0076 0444     		add	r4, r4, r0
 2493              	.LVL367:
 736:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			}
 2494              		.loc 1 736 5 is_stmt 1 view .LVU931
 736:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			}
 2495              		.loc 1 736 18 is_stmt 0 view .LVU932
 2496 0078 05F10803 		add	r3, r5, #8
 2497              	.LVL368:
 736:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			}
 2498              		.loc 1 736 18 view .LVU933
 2499 007c 06EB4303 		add	r3, r6, r3, lsl #1
 2500 0080 9C80     		strh	r4, [r3, #4]	@ movhi
 2501              	.LVL369:
 2502              	.L158:
 738:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			tmp[0] = d * dqf[0] >> 8;				/* De-quantize, apply scale factor of Arai algorithm and descale 8 
 2503              		.loc 1 738 4 is_stmt 1 view .LVU934
 738:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			tmp[0] = d * dqf[0] >> 8;				/* De-quantize, apply scale factor of Arai algorithm and descale 8 
 2504              		.loc 1 738 28 is_stmt 0 view .LVU935
 2505 0082 3544     		add	r5, r5, r6
 2506 0084 2B7C     		ldrb	r3, [r5, #16]	@ zero_extendqisi2
 738:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			tmp[0] = d * dqf[0] >> 8;				/* De-quantize, apply scale factor of Arai algorithm and descale 8 
 2507              		.loc 1 738 8 view .LVU936
 2508 0086 1433     		adds	r3, r3, #20
 2509 0088 56F823A0 		ldr	r10, [r6, r3, lsl #2]
 2510              	.LVL370:
 739:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 2511              		.loc 1 739 4 is_stmt 1 view .LVU937
 739:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 2512              		.loc 1 739 20 is_stmt 0 view .LVU938
 2513 008c DAF80030 		ldr	r3, [r10]
 739:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 2514              		.loc 1 739 15 view .LVU939
 2515 0090 04FB03F3 		mul	r3, r4, r3
 739:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 2516              		.loc 1 739 24 view .LVU940
 2517 0094 1B12     		asrs	r3, r3, #8
 739:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 2518              		.loc 1 739 11 view .LVU941
 2519 0096 4846     		mov	r0, r9
 2520 0098 40F8043B 		str	r3, [r0], #4
 742:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			z = 1;		/* Top of the AC elements (in zigzag-order) */
 2521              		.loc 1 742 4 is_stmt 1 view .LVU942
 2522 009c FC22     		movs	r2, #252
 2523 009e 0021     		movs	r1, #0
 2524 00a0 FFF7FEFF 		bl	memset
 2525              	.LVL371:
 743:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			do {
 2526              		.loc 1 743 4 view .LVU943
 743:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			do {
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 67


 2527              		.loc 1 743 6 is_stmt 0 view .LVU944
 2528 00a4 0125     		movs	r5, #1
 2529 00a6 1BE0     		b	.L166
 2530              	.LVL372:
 2531              	.L175:
 727:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			bc = (unsigned int)d;
 2532              		.loc 1 727 15 is_stmt 1 discriminator 1 view .LVU945
 727:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			bc = (unsigned int)d;
 2533              		.loc 1 727 22 is_stmt 0 discriminator 1 view .LVU946
 2534 00a8 CAF1000A 		rsb	r10, r10, #0
 2535 00ac 5FFA8AF0 		uxtb	r0, r10
 2536              	.LVL373:
 727:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			bc = (unsigned int)d;
 2537              		.loc 1 727 22 view .LVU947
 2538 00b0 04E0     		b	.L157
 2539              	.LVL374:
 2540              	.L176:
 732:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				bc = 1 << (bc - 1);					/* MSB position */
 2541              		.loc 1 732 16 is_stmt 1 discriminator 1 view .LVU948
 732:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				bc = 1 << (bc - 1);					/* MSB position */
 2542              		.loc 1 732 23 is_stmt 0 discriminator 1 view .LVU949
 2543 00b2 4042     		rsbs	r0, r0, #0
 2544              	.LVL375:
 732:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				bc = 1 << (bc - 1);					/* MSB position */
 2545              		.loc 1 732 23 discriminator 1 view .LVU950
 2546 00b4 C0B2     		uxtb	r0, r0
 2547              	.LVL376:
 732:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				bc = 1 << (bc - 1);					/* MSB position */
 2548              		.loc 1 732 23 view .LVU951
 2549 00b6 01E0     		b	.L157
 2550              	.LVL377:
 2551              	.L177:
 747:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				bc = (unsigned int)d;
 2552              		.loc 1 747 16 is_stmt 1 discriminator 1 view .LVU952
 747:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				bc = (unsigned int)d;
 2553              		.loc 1 747 23 is_stmt 0 discriminator 1 view .LVU953
 2554 00b8 4442     		rsbs	r4, r0, #0
 2555 00ba E0B2     		uxtb	r0, r4
 2556              	.LVL378:
 2557              	.L157:
 779:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 2558              		.loc 1 779 1 view .LVU954
 2559 00bc 03B0     		add	sp, sp, #12
 2560              	.LCFI15:
 2561              		.cfi_remember_state
 2562              		.cfi_def_cfa_offset 36
 2563              		@ sp needed
 2564 00be BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2565              	.LVL379:
 2566              	.L178:
 2567              	.LCFI16:
 2568              		.cfi_restore_state
 753:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					bc = 1 << (bc - 1);				/* MSB position */
 2569              		.loc 1 753 17 is_stmt 1 discriminator 1 view .LVU955
 753:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					bc = 1 << (bc - 1);				/* MSB position */
 2570              		.loc 1 753 24 is_stmt 0 discriminator 1 view .LVU956
 2571 00c2 4042     		rsbs	r0, r0, #0
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 68


 2572              	.LVL380:
 753:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					bc = 1 << (bc - 1);				/* MSB position */
 2573              		.loc 1 753 24 discriminator 1 view .LVU957
 2574 00c4 C0B2     		uxtb	r0, r0
 2575              	.LVL381:
 753:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					bc = 1 << (bc - 1);				/* MSB position */
 2576              		.loc 1 753 24 view .LVU958
 2577 00c6 F9E7     		b	.L157
 2578              	.LVL382:
 2579              	.L165:
 756:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					tmp[i] = d * dqf[i] >> 8;		/* De-quantize, apply scale factor of Arai algorithm and descale 8 
 2580              		.loc 1 756 6 is_stmt 1 view .LVU959
 756:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					tmp[i] = d * dqf[i] >> 8;		/* De-quantize, apply scale factor of Arai algorithm and descale 8 
 2581              		.loc 1 756 13 is_stmt 0 view .LVU960
 2582 00c8 2D4B     		ldr	r3, .L181
 2583 00ca 5A5D     		ldrb	r2, [r3, r5]	@ zero_extendqisi2
 2584              	.LVL383:
 757:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 2585              		.loc 1 757 6 is_stmt 1 view .LVU961
 757:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 2586              		.loc 1 757 22 is_stmt 0 view .LVU962
 2587 00cc 5AF82230 		ldr	r3, [r10, r2, lsl #2]
 757:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 2588              		.loc 1 757 17 view .LVU963
 2589 00d0 00FB03F3 		mul	r3, r0, r3
 757:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 2590              		.loc 1 757 26 view .LVU964
 2591 00d4 1B12     		asrs	r3, r3, #8
 757:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 2592              		.loc 1 757 13 view .LVU965
 2593 00d6 49F82230 		str	r3, [r9, r2, lsl #2]
 2594              	.LVL384:
 2595              	.L163:
 759:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 2596              		.loc 1 759 17 is_stmt 1 view .LVU966
 2597 00da 0135     		adds	r5, r5, #1
 2598              	.LVL385:
 759:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 2599              		.loc 1 759 17 is_stmt 0 view .LVU967
 2600 00dc 3F2D     		cmp	r5, #63
 2601 00de 1DD8     		bhi	.L161
 2602              	.LVL386:
 2603              	.L166:
 744:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				d = huffext(jd, id, 1);				/* Extract a huffman coded value (zero runs and bit length) */
 2604              		.loc 1 744 4 is_stmt 1 view .LVU968
 745:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (d == 0) break;					/* EOB? */
 2605              		.loc 1 745 5 view .LVU969
 745:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (d == 0) break;					/* EOB? */
 2606              		.loc 1 745 9 is_stmt 0 view .LVU970
 2607 00e0 0122     		movs	r2, #1
 2608 00e2 4146     		mov	r1, r8
 2609 00e4 3046     		mov	r0, r6
 2610 00e6 FFF7FEFF 		bl	huffext
 2611              	.LVL387:
 746:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (d < 0) return (JRESULT)(0 - d);	/* Err: invalid code or input error */
 2612              		.loc 1 746 5 is_stmt 1 view .LVU971
 746:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (d < 0) return (JRESULT)(0 - d);	/* Err: invalid code or input error */
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 69


 2613              		.loc 1 746 8 is_stmt 0 view .LVU972
 2614 00ea B8B1     		cbz	r0, .L161
 747:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				bc = (unsigned int)d;
 2615              		.loc 1 747 5 is_stmt 1 view .LVU973
 747:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				bc = (unsigned int)d;
 2616              		.loc 1 747 8 is_stmt 0 view .LVU974
 2617 00ec 0028     		cmp	r0, #0
 2618 00ee E3DB     		blt	.L177
 748:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				z += bc >> 4;						/* Skip leading zero run */
 2619              		.loc 1 748 5 is_stmt 1 view .LVU975
 2620              	.LVL388:
 749:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (z >= 64) return JDR_FMT1;		/* Too long zero run */
 2621              		.loc 1 749 5 view .LVU976
 749:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (z >= 64) return JDR_FMT1;		/* Too long zero run */
 2622              		.loc 1 749 7 is_stmt 0 view .LVU977
 2623 00f0 05EB1015 		add	r5, r5, r0, lsr #4
 2624              	.LVL389:
 750:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (bc &= 0x0F) {					/* Bit length? */
 2625              		.loc 1 750 5 is_stmt 1 view .LVU978
 750:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (bc &= 0x0F) {					/* Bit length? */
 2626              		.loc 1 750 8 is_stmt 0 view .LVU979
 2627 00f4 3F2D     		cmp	r5, #63
 2628 00f6 41D8     		bhi	.L173
 751:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					d = bitext(jd, bc);				/* Extract data bits */
 2629              		.loc 1 751 5 is_stmt 1 view .LVU980
 2630              	.LVL390:
 751:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					d = bitext(jd, bc);				/* Extract data bits */
 2631              		.loc 1 751 8 is_stmt 0 view .LVU981
 2632 00f8 10F00F04 		ands	r4, r0, #15
 2633              	.LVL391:
 751:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					d = bitext(jd, bc);				/* Extract data bits */
 2634              		.loc 1 751 8 view .LVU982
 2635 00fc EDD0     		beq	.L163
 752:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					if (d < 0) return (JRESULT)(0 - d);	/* Err: input device */
 2636              		.loc 1 752 6 is_stmt 1 view .LVU983
 752:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					if (d < 0) return (JRESULT)(0 - d);	/* Err: input device */
 2637              		.loc 1 752 10 is_stmt 0 view .LVU984
 2638 00fe 2146     		mov	r1, r4
 2639 0100 3046     		mov	r0, r6
 2640              	.LVL392:
 752:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					if (d < 0) return (JRESULT)(0 - d);	/* Err: input device */
 2641              		.loc 1 752 10 view .LVU985
 2642 0102 FFF7FEFF 		bl	bitext
 2643              	.LVL393:
 753:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					bc = 1 << (bc - 1);				/* MSB position */
 2644              		.loc 1 753 6 is_stmt 1 view .LVU986
 753:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					bc = 1 << (bc - 1);				/* MSB position */
 2645              		.loc 1 753 9 is_stmt 0 view .LVU987
 2646 0106 0028     		cmp	r0, #0
 753:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					bc = 1 << (bc - 1);				/* MSB position */
 2647              		.loc 1 753 9 view .LVU988
 2648 0108 DBDB     		blt	.L178
 754:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					if (!(d & bc)) d -= (bc << 1) - 1;	/* Restore negative value if needed */
 2649              		.loc 1 754 6 is_stmt 1 view .LVU989
 754:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					if (!(d & bc)) d -= (bc << 1) - 1;	/* Restore negative value if needed */
 2650              		.loc 1 754 20 is_stmt 0 view .LVU990
 2651 010a 013C     		subs	r4, r4, #1
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 70


 2652              	.LVL394:
 754:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					if (!(d & bc)) d -= (bc << 1) - 1;	/* Restore negative value if needed */
 2653              		.loc 1 754 13 view .LVU991
 2654 010c 0123     		movs	r3, #1
 2655 010e A340     		lsls	r3, r3, r4
 2656              	.LVL395:
 755:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					i = Zig[z];						/* Get raster-order index */
 2657              		.loc 1 755 6 is_stmt 1 view .LVU992
 755:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					i = Zig[z];						/* Get raster-order index */
 2658              		.loc 1 755 9 is_stmt 0 view .LVU993
 2659 0110 0342     		tst	r3, r0
 2660 0112 D9D1     		bne	.L165
 755:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					i = Zig[z];						/* Get raster-order index */
 2661              		.loc 1 755 21 is_stmt 1 discriminator 1 view .LVU994
 755:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					i = Zig[z];						/* Get raster-order index */
 2662              		.loc 1 755 23 is_stmt 0 discriminator 1 view .LVU995
 2663 0114 A0EB4303 		sub	r3, r0, r3, lsl #1
 2664              	.LVL396:
 755:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					i = Zig[z];						/* Get raster-order index */
 2665              		.loc 1 755 23 discriminator 1 view .LVU996
 2666 0118 581C     		adds	r0, r3, #1
 2667              	.LVL397:
 755:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					i = Zig[z];						/* Get raster-order index */
 2668              		.loc 1 755 23 discriminator 1 view .LVU997
 2669 011a D5E7     		b	.L165
 2670              	.LVL398:
 2671              	.L161:
 761:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (z == 1 || (JD_USE_SCALE && jd->scale == 3)) {	/* If no AC element or scale ratio is 1/8, ID
 2672              		.loc 1 761 4 is_stmt 1 view .LVU998
 762:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					d = (jd_yuv_t)((*tmp / 256) + 128);
 2673              		.loc 1 762 5 view .LVU999
 762:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					d = (jd_yuv_t)((*tmp / 256) + 128);
 2674              		.loc 1 762 8 is_stmt 0 view .LVU1000
 2675 011c 012D     		cmp	r5, #1
 2676 011e 02D0     		beq	.L167
 762:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					d = (jd_yuv_t)((*tmp / 256) + 128);
 2677              		.loc 1 762 38 discriminator 1 view .LVU1001
 2678 0120 737B     		ldrb	r3, [r6, #13]	@ zero_extendqisi2
 762:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					d = (jd_yuv_t)((*tmp / 256) + 128);
 2679              		.loc 1 762 16 discriminator 1 view .LVU1002
 2680 0122 032B     		cmp	r3, #3
 2681 0124 23D1     		bne	.L168
 2682              	.L167:
 763:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					if (JD_FASTDECODE >= 1) {
 2683              		.loc 1 763 6 is_stmt 1 view .LVU1003
 763:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					if (JD_FASTDECODE >= 1) {
 2684              		.loc 1 763 22 is_stmt 0 view .LVU1004
 2685 0126 D9F80030 		ldr	r3, [r9]
 763:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					if (JD_FASTDECODE >= 1) {
 2686              		.loc 1 763 27 view .LVU1005
 2687 012a 002B     		cmp	r3, #0
 2688 012c 1DDB     		blt	.L179
 2689              	.L169:
 2690 012e 1B12     		asrs	r3, r3, #8
 763:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					if (JD_FASTDECODE >= 1) {
 2691              		.loc 1 763 10 view .LVU1006
 2692 0130 A3F18001 		sub	r1, r3, #128
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 71


 2693              	.LVL399:
 764:lvgl/src/extra/libs/sjpg/tjpgd.c **** 						for (i = 0; i < 64; bp[i++] = d) ;
 2694              		.loc 1 764 6 is_stmt 1 view .LVU1007
 767:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					}
 2695              		.loc 1 767 7 view .LVU1008
 2696 0134 4022     		movs	r2, #64
 2697 0136 C9B2     		uxtb	r1, r1
 2698              	.LVL400:
 767:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					}
 2699              		.loc 1 767 7 is_stmt 0 view .LVU1009
 2700 0138 3846     		mov	r0, r7
 2701 013a FFF7FEFF 		bl	memset
 2702              	.LVL401:
 2703              	.L155:
 775:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	}
 2704              		.loc 1 775 3 is_stmt 1 view .LVU1010
 775:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	}
 2705              		.loc 1 775 6 is_stmt 0 view .LVU1011
 2706 013e 4037     		adds	r7, r7, #64
 2707              	.LVL402:
 716:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		cmp = (blk < nby) ? 0 : blk - nby + 1;	/* Component number 0:Y, 1:Cb, 2:Cr */
 2708              		.loc 1 716 34 is_stmt 1 discriminator 2 view .LVU1012
 2709 0140 0BF1010B 		add	fp, fp, #1
 2710              	.LVL403:
 2711              	.L151:
 716:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		cmp = (blk < nby) ? 0 : blk - nby + 1;	/* Component number 0:Y, 1:Cb, 2:Cr */
 2712              		.loc 1 716 20 discriminator 1 view .LVU1013
 716:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		cmp = (blk < nby) ? 0 : blk - nby + 1;	/* Component number 0:Y, 1:Cb, 2:Cr */
 2713              		.loc 1 716 26 is_stmt 0 discriminator 1 view .LVU1014
 2714 0144 019B     		ldr	r3, [sp, #4]
 2715 0146 0233     		adds	r3, r3, #2
 716:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		cmp = (blk < nby) ? 0 : blk - nby + 1;	/* Component number 0:Y, 1:Cb, 2:Cr */
 2716              		.loc 1 716 20 discriminator 1 view .LVU1015
 2717 0148 5B45     		cmp	r3, fp
 2718 014a 15D9     		bls	.L180
 717:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 2719              		.loc 1 717 3 is_stmt 1 view .LVU1016
 717:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 2720              		.loc 1 717 25 is_stmt 0 view .LVU1017
 2721 014c 019B     		ldr	r3, [sp, #4]
 2722 014e 9B45     		cmp	fp, r3
 2723 0150 FFF46BAF 		bcc	.L171
 717:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 2724              		.loc 1 717 31 discriminator 1 view .LVU1018
 2725 0154 ABEB0305 		sub	r5, fp, r3
 2726              	.LVL404:
 719:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			for (i = 0; i < 64; bp[i++] = 128) ;
 2727              		.loc 1 719 3 is_stmt 1 view .LVU1019
 719:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			for (i = 0; i < 64; bp[i++] = 128) ;
 2728              		.loc 1 719 6 is_stmt 0 view .LVU1020
 2729 0158 0135     		adds	r5, r5, #1
 2730              	.LVL405:
 719:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			for (i = 0; i < 64; bp[i++] = 128) ;
 2731              		.loc 1 719 6 view .LVU1021
 2732 015a 3FF467AF 		beq	.L152
 719:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			for (i = 0; i < 64; bp[i++] = 128) ;
 2733              		.loc 1 719 16 discriminator 1 view .LVU1022
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 72


 2734 015e F37C     		ldrb	r3, [r6, #19]	@ zero_extendqisi2
 719:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			for (i = 0; i < 64; bp[i++] = 128) ;
 2735              		.loc 1 719 11 discriminator 1 view .LVU1023
 2736 0160 032B     		cmp	r3, #3
 2737 0162 3FF463AF 		beq	.L152
 720:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 2738              		.loc 1 720 11 view .LVU1024
 2739 0166 0023     		movs	r3, #0
 2740 0168 5CE7     		b	.L153
 2741              	.LVL406:
 2742              	.L179:
 763:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					if (JD_FASTDECODE >= 1) {
 2743              		.loc 1 763 27 view .LVU1025
 2744 016a FF33     		adds	r3, r3, #255
 2745 016c DFE7     		b	.L169
 2746              	.L168:
 770:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 2747              		.loc 1 770 6 is_stmt 1 view .LVU1026
 2748 016e 3946     		mov	r1, r7
 2749 0170 4846     		mov	r0, r9
 2750              	.LVL407:
 770:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 2751              		.loc 1 770 6 is_stmt 0 view .LVU1027
 2752 0172 FFF7FEFF 		bl	block_idct
 2753              	.LVL408:
 2754 0176 E2E7     		b	.L155
 2755              	.LVL409:
 2756              	.L180:
 778:lvgl/src/extra/libs/sjpg/tjpgd.c **** }
 2757              		.loc 1 778 9 view .LVU1028
 2758 0178 0020     		movs	r0, #0
 2759 017a 9FE7     		b	.L157
 2760              	.LVL410:
 2761              	.L173:
 750:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (bc &= 0x0F) {					/* Bit length? */
 2762              		.loc 1 750 25 discriminator 1 view .LVU1029
 2763 017c 0620     		movs	r0, #6
 2764              	.LVL411:
 750:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (bc &= 0x0F) {					/* Bit length? */
 2765              		.loc 1 750 25 discriminator 1 view .LVU1030
 2766 017e 9DE7     		b	.L157
 2767              	.L182:
 2768              		.align	2
 2769              	.L181:
 2770 0180 00000000 		.word	Zig
 2771              		.cfi_endproc
 2772              	.LFE7:
 2774              		.section	.text.jd_prepare,"ax",%progbits
 2775              		.align	1
 2776              		.global	jd_prepare
 2777              		.syntax unified
 2778              		.thumb
 2779              		.thumb_func
 2781              	jd_prepare:
 2782              	.LVL412:
 2783              	.LFB9:
 951:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 73


 952:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 953:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 954:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 955:lvgl/src/extra/libs/sjpg/tjpgd.c **** /*-----------------------------------------------------------------------*/
 956:lvgl/src/extra/libs/sjpg/tjpgd.c **** /* Analyze the JPEG image and Initialize decompressor object             */
 957:lvgl/src/extra/libs/sjpg/tjpgd.c **** /*-----------------------------------------------------------------------*/
 958:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 959:lvgl/src/extra/libs/sjpg/tjpgd.c **** #define	LDB_WORD(ptr)		(uint16_t)(((uint16_t)*((uint8_t*)(ptr))<<8)|(uint16_t)*(uint8_t*)((ptr)+1))
 960:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 961:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 962:lvgl/src/extra/libs/sjpg/tjpgd.c **** JRESULT jd_prepare (
 963:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	JDEC* jd,				/* Blank decompressor object */
 964:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	size_t (*infunc)(JDEC*, uint8_t*, size_t),	/* JPEG strem input function */
 965:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	void* pool,				/* Working buffer for the decompression session */
 966:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	size_t sz_pool,			/* Size of working buffer */
 967:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	void* dev				/* I/O device identifier for the session */
 968:lvgl/src/extra/libs/sjpg/tjpgd.c **** )
 969:lvgl/src/extra/libs/sjpg/tjpgd.c **** {
 2784              		.loc 1 969 1 is_stmt 1 view -0
 2785              		.cfi_startproc
 2786              		@ args = 4, pretend = 0, frame = 0
 2787              		@ frame_needed = 0, uses_anonymous_args = 0
 2788              		.loc 1 969 1 is_stmt 0 view .LVU1032
 2789 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2790              	.LCFI17:
 2791              		.cfi_def_cfa_offset 24
 2792              		.cfi_offset 3, -24
 2793              		.cfi_offset 4, -20
 2794              		.cfi_offset 5, -16
 2795              		.cfi_offset 6, -12
 2796              		.cfi_offset 7, -8
 2797              		.cfi_offset 14, -4
 2798 0002 0546     		mov	r5, r0
 2799 0004 0C46     		mov	r4, r1
 2800 0006 1746     		mov	r7, r2
 2801 0008 1E46     		mov	r6, r3
 970:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	uint8_t *seg, b;
 2802              		.loc 1 970 2 is_stmt 1 view .LVU1033
 971:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	uint16_t marker;
 2803              		.loc 1 971 2 view .LVU1034
 972:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	unsigned int n, i, ofs;
 2804              		.loc 1 972 2 view .LVU1035
 973:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	size_t len;
 2805              		.loc 1 973 2 view .LVU1036
 974:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	JRESULT rc;
 2806              		.loc 1 974 2 view .LVU1037
 975:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 976:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 977:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	memset(jd, 0, sizeof (JDEC));	/* Clear decompression object (this might be a problem if machine's 
 2807              		.loc 1 977 2 view .LVU1038
 2808 000a 7822     		movs	r2, #120
 2809              	.LVL413:
 2810              		.loc 1 977 2 is_stmt 0 view .LVU1039
 2811 000c 0021     		movs	r1, #0
 2812              	.LVL414:
 2813              		.loc 1 977 2 view .LVU1040
 2814 000e FFF7FEFF 		bl	memset
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 74


 2815              	.LVL415:
 978:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	jd->pool = pool;		/* Work memroy */
 2816              		.loc 1 978 2 is_stmt 1 view .LVU1041
 2817              		.loc 1 978 11 is_stmt 0 view .LVU1042
 2818 0012 AF66     		str	r7, [r5, #104]
 979:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	jd->sz_pool = sz_pool;	/* Size of given work memory */
 2819              		.loc 1 979 2 is_stmt 1 view .LVU1043
 2820              		.loc 1 979 14 is_stmt 0 view .LVU1044
 2821 0014 EE66     		str	r6, [r5, #108]
 980:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	jd->infunc = infunc;	/* Stream input function */
 2822              		.loc 1 980 2 is_stmt 1 view .LVU1045
 2823              		.loc 1 980 13 is_stmt 0 view .LVU1046
 2824 0016 2C67     		str	r4, [r5, #112]
 981:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	jd->device = dev;		/* I/O device identifier */
 2825              		.loc 1 981 2 is_stmt 1 view .LVU1047
 2826              		.loc 1 981 13 is_stmt 0 view .LVU1048
 2827 0018 069B     		ldr	r3, [sp, #24]
 2828 001a 6B67     		str	r3, [r5, #116]
 982:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 983:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	jd->inbuf = seg = alloc_pool(jd, JD_SZBUF);		/* Allocate stream input buffer */
 2829              		.loc 1 983 2 is_stmt 1 view .LVU1049
 2830              		.loc 1 983 20 is_stmt 0 view .LVU1050
 2831 001c 4FF40071 		mov	r1, #512
 2832 0020 2846     		mov	r0, r5
 2833 0022 FFF7FEFF 		bl	alloc_pool
 2834              	.LVL416:
 2835              		.loc 1 983 12 discriminator 1 view .LVU1051
 2836 0026 A860     		str	r0, [r5, #8]
 984:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	if (!seg) return JDR_MEM1;
 2837              		.loc 1 984 2 is_stmt 1 view .LVU1052
 2838              		.loc 1 984 5 is_stmt 0 view .LVU1053
 2839 0028 0028     		cmp	r0, #0
 2840 002a 00F03381 		beq	.L204
 2841 002e 0646     		mov	r6, r0
 2842              	.LVL417:
 985:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 986:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	ofs = marker = 0;		/* Find SOI marker */
 2843              		.loc 1 986 6 view .LVU1054
 2844 0030 0027     		movs	r7, #0
 2845              	.LVL418:
 2846              		.loc 1 986 15 view .LVU1055
 2847 0032 3C46     		mov	r4, r7
 2848              	.LVL419:
 2849              	.L185:
 987:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	do {
 2850              		.loc 1 987 2 is_stmt 1 view .LVU1056
 988:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (jd->infunc(jd, seg, 1) != 1) return JDR_INP;	/* Err: SOI was not detected */
 2851              		.loc 1 988 3 view .LVU1057
 2852              		.loc 1 988 9 is_stmt 0 view .LVU1058
 2853 0034 2B6F     		ldr	r3, [r5, #112]
 2854              		.loc 1 988 7 view .LVU1059
 2855 0036 0122     		movs	r2, #1
 2856 0038 3146     		mov	r1, r6
 2857 003a 2846     		mov	r0, r5
 2858 003c 9847     		blx	r3
 2859              	.LVL420:
 2860              		.loc 1 988 6 discriminator 1 view .LVU1060
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 75


 2861 003e 0128     		cmp	r0, #1
 2862 0040 40F02A81 		bne	.L205
 989:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		ofs++;
 2863              		.loc 1 989 3 is_stmt 1 view .LVU1061
 2864              		.loc 1 989 6 is_stmt 0 view .LVU1062
 2865 0044 0137     		adds	r7, r7, #1
 2866              	.LVL421:
 990:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		marker = marker << 8 | seg[0];
 2867              		.loc 1 990 3 is_stmt 1 view .LVU1063
 2868              		.loc 1 990 29 is_stmt 0 view .LVU1064
 2869 0046 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 2870              		.loc 1 990 24 view .LVU1065
 2871 0048 43EA0424 		orr	r4, r3, r4, lsl #8
 2872              	.LVL422:
 2873              		.loc 1 990 10 view .LVU1066
 2874 004c A4B2     		uxth	r4, r4
 2875              	.LVL423:
 991:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	} while (marker != 0xFFD8);
 2876              		.loc 1 991 18 is_stmt 1 view .LVU1067
 2877 004e 4FF6D873 		movw	r3, #65496
 2878 0052 9C42     		cmp	r4, r3
 2879 0054 EED1     		bne	.L185
 2880              	.LVL424:
 2881              	.L186:
 992:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 993:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	for (;;) {				/* Parse JPEG segments */
 2882              		.loc 1 993 2 view .LVU1068
 994:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		/* Get a JPEG marker */
 995:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (jd->infunc(jd, seg, 4) != 4) return JDR_INP;
 2883              		.loc 1 995 3 view .LVU1069
 2884              		.loc 1 995 9 is_stmt 0 view .LVU1070
 2885 0056 2B6F     		ldr	r3, [r5, #112]
 2886              		.loc 1 995 7 view .LVU1071
 2887 0058 0422     		movs	r2, #4
 2888 005a 3146     		mov	r1, r6
 2889 005c 2846     		mov	r0, r5
 2890 005e 9847     		blx	r3
 2891              	.LVL425:
 2892              		.loc 1 995 6 discriminator 1 view .LVU1072
 2893 0060 0428     		cmp	r0, #4
 2894 0062 40F01B81 		bne	.L206
 996:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		marker = LDB_WORD(seg);		/* Marker */
 2895              		.loc 1 996 3 is_stmt 1 view .LVU1073
 2896              		.loc 1 996 12 is_stmt 0 view .LVU1074
 2897 0066 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 2898 0068 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 2899 006a 43EA0223 		orr	r3, r3, r2, lsl #8
 2900 006e 1AB2     		sxth	r2, r3
 2901              	.LVL426:
 997:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		len = LDB_WORD(seg + 2);	/* Length field */
 2902              		.loc 1 997 3 is_stmt 1 view .LVU1075
 2903              		.loc 1 997 9 is_stmt 0 view .LVU1076
 2904 0070 B178     		ldrb	r1, [r6, #2]	@ zero_extendqisi2
 2905 0072 F478     		ldrb	r4, [r6, #3]	@ zero_extendqisi2
 2906 0074 44EA0124 		orr	r4, r4, r1, lsl #8
 2907              	.LVL427:
 998:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		if (len <= 2 || (marker >> 8) != 0xFF) return JDR_FMT1;
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 76


 2908              		.loc 1 998 3 is_stmt 1 view .LVU1077
 2909              		.loc 1 998 6 is_stmt 0 view .LVU1078
 2910 0078 022C     		cmp	r4, #2
 2911 007a 40F21181 		bls	.L207
 2912              		.loc 1 998 33 discriminator 2 view .LVU1079
 2913 007e 1B0A     		lsrs	r3, r3, #8
 2914              	.LVL428:
 2915              		.loc 1 998 16 discriminator 2 view .LVU1080
 2916 0080 FF2B     		cmp	r3, #255
 2917 0082 40F00F81 		bne	.L208
 999:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		len -= 2;			/* Segent content size */
 2918              		.loc 1 999 3 is_stmt 1 view .LVU1081
 2919              		.loc 1 999 7 is_stmt 0 view .LVU1082
 2920 0086 023C     		subs	r4, r4, #2
 2921              	.LVL429:
1000:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		ofs += 4 + len;		/* Number of bytes loaded */
 2922              		.loc 1 1000 3 is_stmt 1 view .LVU1083
 2923              		.loc 1 1000 7 is_stmt 0 view .LVU1084
 2924 0088 2744     		add	r7, r7, r4
 2925              	.LVL430:
 2926              		.loc 1 1000 7 view .LVU1085
 2927 008a 0437     		adds	r7, r7, #4
 2928              	.LVL431:
1001:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
1002:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		switch (marker & 0xFF) {
 2929              		.loc 1 1002 3 is_stmt 1 view .LVU1086
 2930 008c D3B2     		uxtb	r3, r2
 2931 008e DA2B     		cmp	r3, #218
 2932 0090 00F09880 		beq	.L187
 2933 0094 35DC     		bgt	.L188
 2934 0096 D92B     		cmp	r3, #217
 2935 0098 00F3F280 		bgt	.L189
 2936 009c C02B     		cmp	r3, #192
 2937 009e C0F2EF80 		blt	.L189
 2938 00a2 C03B     		subs	r3, r3, #192
 2939 00a4 9BB2     		uxth	r3, r3
 2940 00a6 0122     		movs	r2, #1
 2941              	.LVL432:
 2942              		.loc 1 1002 3 is_stmt 0 view .LVU1087
 2943 00a8 02FA03F3 		lsl	r3, r2, r3
 2944 00ac 954A     		ldr	r2, .L237
 2945 00ae 1A40     		ands	r2, r2, r3
 2946 00b0 002A     		cmp	r2, #0
 2947 00b2 40F0F980 		bne	.L209
 2948 00b6 13F0100F 		tst	r3, #16
 2949 00ba 59D1     		bne	.L190
 2950 00bc 13F0010F 		tst	r3, #1
 2951 00c0 00F0DE80 		beq	.L189
1003:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		case 0xC0:	/* SOF0 (baseline JPEG) */
1004:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (len > JD_SZBUF) return JDR_MEM2;
 2952              		.loc 1 1004 4 is_stmt 1 view .LVU1088
 2953              		.loc 1 1004 7 is_stmt 0 view .LVU1089
 2954 00c4 B4F5007F 		cmp	r4, #512
 2955 00c8 00F2F080 		bhi	.L210
1005:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (jd->infunc(jd, seg, len) != len) return JDR_INP;	/* Load segment data */
 2956              		.loc 1 1005 4 is_stmt 1 view .LVU1090
 2957              		.loc 1 1005 10 is_stmt 0 view .LVU1091
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 77


 2958 00cc 2B6F     		ldr	r3, [r5, #112]
 2959              		.loc 1 1005 8 view .LVU1092
 2960 00ce 2246     		mov	r2, r4
 2961 00d0 3146     		mov	r1, r6
 2962 00d2 2846     		mov	r0, r5
 2963 00d4 9847     		blx	r3
 2964              	.LVL433:
 2965              		.loc 1 1005 7 discriminator 1 view .LVU1093
 2966 00d6 A042     		cmp	r0, r4
 2967 00d8 40F0EA80 		bne	.L211
1006:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
1007:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			jd->width = LDB_WORD(&seg[3]);		/* Image width in unit of pixel */
 2968              		.loc 1 1007 4 is_stmt 1 view .LVU1094
 2969              		.loc 1 1007 16 is_stmt 0 view .LVU1095
 2970 00dc F278     		ldrb	r2, [r6, #3]	@ zero_extendqisi2
 2971 00de 3379     		ldrb	r3, [r6, #4]	@ zero_extendqisi2
 2972 00e0 43EA0223 		orr	r3, r3, r2, lsl #8
 2973              		.loc 1 1007 14 view .LVU1096
 2974 00e4 AB83     		strh	r3, [r5, #28]	@ movhi
1008:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			jd->height = LDB_WORD(&seg[1]);		/* Image height in unit of pixel */
 2975              		.loc 1 1008 4 is_stmt 1 view .LVU1097
 2976              		.loc 1 1008 17 is_stmt 0 view .LVU1098
 2977 00e6 7278     		ldrb	r2, [r6, #1]	@ zero_extendqisi2
 2978 00e8 B378     		ldrb	r3, [r6, #2]	@ zero_extendqisi2
 2979 00ea 43EA0223 		orr	r3, r3, r2, lsl #8
 2980              		.loc 1 1008 15 view .LVU1099
 2981 00ee EB83     		strh	r3, [r5, #30]	@ movhi
1009:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			jd->ncomp = seg[5];					/* Number of color components */
 2982              		.loc 1 1009 4 is_stmt 1 view .LVU1100
 2983              		.loc 1 1009 14 is_stmt 0 view .LVU1101
 2984 00f0 7079     		ldrb	r0, [r6, #5]	@ zero_extendqisi2
 2985 00f2 E874     		strb	r0, [r5, #19]
1010:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (jd->ncomp != 3 && jd->ncomp != 1) return JDR_FMT3;	/* Err: Supports only Grayscale and Y/Cb/
 2986              		.loc 1 1010 4 is_stmt 1 view .LVU1102
 2987              		.loc 1 1010 7 is_stmt 0 view .LVU1103
 2988 00f4 0328     		cmp	r0, #3
 2989 00f6 18BF     		it	ne
 2990 00f8 0128     		cmpne	r0, #1
 2991 00fa 40F0DB80 		bne	.L212
1011:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
1012:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			/* Check each image component */
1013:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			for (i = 0; i < jd->ncomp; i++) {
 2992              		.loc 1 1013 11 view .LVU1104
 2993 00fe 0023     		movs	r3, #0
 2994 0100 23E0     		b	.L194
 2995              	.LVL434:
 2996              	.L188:
1002:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		case 0xC0:	/* SOF0 (baseline JPEG) */
 2997              		.loc 1 1002 3 view .LVU1105
 2998 0102 DB2B     		cmp	r3, #219
 2999 0104 49D0     		beq	.L192
 3000 0106 DD2B     		cmp	r3, #221
 3001 0108 40F0BA80 		bne	.L189
1014:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				b = seg[7 + 3 * i];							/* Get sampling factor */
1015:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (i == 0) {	/* Y component */
1016:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					if (b != 0x11 && b != 0x22 && b != 0x21) {	/* Check sampling factor */
1017:lvgl/src/extra/libs/sjpg/tjpgd.c **** 						return JDR_FMT3;					/* Err: Supports only 4:4:4, 4:2:0 or 4:2:2 */
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 78


1018:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					}
1019:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					jd->msx = b >> 4; jd->msy = b & 15;		/* Size of MCU [blocks] */
1020:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				} else {		/* Cb/Cr component */
1021:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					if (b != 0x11) return JDR_FMT3;			/* Err: Sampling factor of Cb/Cr must be 1 */
1022:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
1023:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				jd->qtid[i] = seg[8 + 3 * i];				/* Get dequantizer table ID for this component */
1024:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (jd->qtid[i] > 3) return JDR_FMT3;		/* Err: Invalid ID */
1025:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			}
1026:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			break;
1027:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
1028:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		case 0xDD:	/* DRI - Define Restart Interval */
1029:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (len > JD_SZBUF) return JDR_MEM2;
 3002              		.loc 1 1029 4 is_stmt 1 view .LVU1106
 3003              		.loc 1 1029 7 is_stmt 0 view .LVU1107
 3004 010c B4F5007F 		cmp	r4, #512
 3005 0110 00F2D480 		bhi	.L216
1030:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (jd->infunc(jd, seg, len) != len) return JDR_INP;	/* Load segment data */
 3006              		.loc 1 1030 4 is_stmt 1 view .LVU1108
 3007              		.loc 1 1030 10 is_stmt 0 view .LVU1109
 3008 0114 2B6F     		ldr	r3, [r5, #112]
 3009              		.loc 1 1030 8 view .LVU1110
 3010 0116 2246     		mov	r2, r4
 3011              	.LVL435:
 3012              		.loc 1 1030 8 view .LVU1111
 3013 0118 3146     		mov	r1, r6
 3014 011a 2846     		mov	r0, r5
 3015 011c 9847     		blx	r3
 3016              	.LVL436:
 3017              		.loc 1 1030 7 discriminator 1 view .LVU1112
 3018 011e A042     		cmp	r0, r4
 3019 0120 40F0CE80 		bne	.L217
1031:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
1032:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			jd->nrst = LDB_WORD(seg);	/* Get restart interval (MCUs) */
 3020              		.loc 1 1032 4 is_stmt 1 view .LVU1113
 3021              		.loc 1 1032 15 is_stmt 0 view .LVU1114
 3022 0124 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 3023 0126 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 3024 0128 43EA0223 		orr	r3, r3, r2, lsl #8
 3025              		.loc 1 1032 13 view .LVU1115
 3026 012c 6B83     		strh	r3, [r5, #26]	@ movhi
1033:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			break;
 3027              		.loc 1 1033 4 is_stmt 1 view .LVU1116
 3028 012e 92E7     		b	.L186
 3029              	.LVL437:
 3030              	.L196:
1019:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				} else {		/* Cb/Cr component */
 3031              		.loc 1 1019 6 view .LVU1117
1019:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				} else {		/* Cb/Cr component */
 3032              		.loc 1 1019 14 is_stmt 0 view .LVU1118
 3033 0130 0C09     		lsrs	r4, r1, #4
 3034 0132 AC73     		strb	r4, [r5, #14]
1019:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				} else {		/* Cb/Cr component */
 3035              		.loc 1 1019 24 is_stmt 1 view .LVU1119
1019:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				} else {		/* Cb/Cr component */
 3036              		.loc 1 1019 36 is_stmt 0 view .LVU1120
 3037 0134 01F00F01 		and	r1, r1, #15
 3038              	.LVL438:
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 79


1019:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				} else {		/* Cb/Cr component */
 3039              		.loc 1 1019 32 view .LVU1121
 3040 0138 E973     		strb	r1, [r5, #15]
 3041              	.L197:
1023:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (jd->qtid[i] > 3) return JDR_FMT3;		/* Err: Invalid ID */
 3042              		.loc 1 1023 5 is_stmt 1 view .LVU1122
1023:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (jd->qtid[i] > 3) return JDR_FMT3;		/* Err: Invalid ID */
 3043              		.loc 1 1023 25 is_stmt 0 view .LVU1123
 3044 013a 0832     		adds	r2, r2, #8
1023:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (jd->qtid[i] > 3) return JDR_FMT3;		/* Err: Invalid ID */
 3045              		.loc 1 1023 22 view .LVU1124
 3046 013c B25C     		ldrb	r2, [r6, r2]	@ zero_extendqisi2
1023:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (jd->qtid[i] > 3) return JDR_FMT3;		/* Err: Invalid ID */
 3047              		.loc 1 1023 17 view .LVU1125
 3048 013e E918     		adds	r1, r5, r3
 3049 0140 0A74     		strb	r2, [r1, #16]
1024:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			}
 3050              		.loc 1 1024 5 is_stmt 1 view .LVU1126
1024:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			}
 3051              		.loc 1 1024 8 is_stmt 0 view .LVU1127
 3052 0142 032A     		cmp	r2, #3
 3053 0144 00F2B880 		bhi	.L215
1013:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				b = seg[7 + 3 * i];							/* Get sampling factor */
 3054              		.loc 1 1013 32 is_stmt 1 discriminator 2 view .LVU1128
 3055 0148 0133     		adds	r3, r3, #1
 3056              	.LVL439:
 3057              	.L194:
1013:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				b = seg[7 + 3 * i];							/* Get sampling factor */
 3058              		.loc 1 1013 18 discriminator 1 view .LVU1129
 3059 014a 9842     		cmp	r0, r3
 3060 014c 83D9     		bls	.L186
1014:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (i == 0) {	/* Y component */
 3061              		.loc 1 1014 5 view .LVU1130
1014:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (i == 0) {	/* Y component */
 3062              		.loc 1 1014 19 is_stmt 0 view .LVU1131
 3063 014e 03EB4302 		add	r2, r3, r3, lsl #1
1014:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (i == 0) {	/* Y component */
 3064              		.loc 1 1014 15 view .LVU1132
 3065 0152 D11D     		adds	r1, r2, #7
1014:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (i == 0) {	/* Y component */
 3066              		.loc 1 1014 7 view .LVU1133
 3067 0154 715C     		ldrb	r1, [r6, r1]	@ zero_extendqisi2
 3068              	.LVL440:
1015:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					if (b != 0x11 && b != 0x22 && b != 0x21) {	/* Check sampling factor */
 3069              		.loc 1 1015 5 is_stmt 1 view .LVU1134
1015:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					if (b != 0x11 && b != 0x22 && b != 0x21) {	/* Check sampling factor */
 3070              		.loc 1 1015 8 is_stmt 0 view .LVU1135
 3071 0156 3BB9     		cbnz	r3, .L195
1016:lvgl/src/extra/libs/sjpg/tjpgd.c **** 						return JDR_FMT3;					/* Err: Supports only 4:4:4, 4:2:0 or 4:2:2 */
 3072              		.loc 1 1016 6 is_stmt 1 view .LVU1136
1016:lvgl/src/extra/libs/sjpg/tjpgd.c **** 						return JDR_FMT3;					/* Err: Supports only 4:4:4, 4:2:0 or 4:2:2 */
 3073              		.loc 1 1016 9 is_stmt 0 view .LVU1137
 3074 0158 1129     		cmp	r1, #17
 3075 015a 18BF     		it	ne
 3076 015c 2229     		cmpne	r1, #34
 3077 015e E7D0     		beq	.L196
1016:lvgl/src/extra/libs/sjpg/tjpgd.c **** 						return JDR_FMT3;					/* Err: Supports only 4:4:4, 4:2:0 or 4:2:2 */
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 80


 3078              		.loc 1 1016 33 discriminator 1 view .LVU1138
 3079 0160 2129     		cmp	r1, #33
 3080 0162 E5D0     		beq	.L196
1017:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					}
 3081              		.loc 1 1017 14 view .LVU1139
 3082 0164 0820     		movs	r0, #8
 3083 0166 98E0     		b	.L184
 3084              	.L195:
1021:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 3085              		.loc 1 1021 6 is_stmt 1 view .LVU1140
1021:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 3086              		.loc 1 1021 9 is_stmt 0 view .LVU1141
 3087 0168 1129     		cmp	r1, #17
 3088 016a E6D0     		beq	.L197
1021:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 3089              		.loc 1 1021 28 discriminator 1 view .LVU1142
 3090 016c 0820     		movs	r0, #8
 3091 016e 94E0     		b	.L184
 3092              	.LVL441:
 3093              	.L190:
1034:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
1035:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		case 0xC4:	/* DHT - Define Huffman Tables */
1036:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (len > JD_SZBUF) return JDR_MEM2;
 3094              		.loc 1 1036 4 is_stmt 1 view .LVU1143
 3095              		.loc 1 1036 7 is_stmt 0 view .LVU1144
 3096 0170 B4F5007F 		cmp	r4, #512
 3097 0174 00F2A680 		bhi	.L218
1037:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (jd->infunc(jd, seg, len) != len) return JDR_INP;	/* Load segment data */
 3098              		.loc 1 1037 4 is_stmt 1 view .LVU1145
 3099              		.loc 1 1037 10 is_stmt 0 view .LVU1146
 3100 0178 2B6F     		ldr	r3, [r5, #112]
 3101              		.loc 1 1037 8 view .LVU1147
 3102 017a 2246     		mov	r2, r4
 3103 017c 3146     		mov	r1, r6
 3104 017e 2846     		mov	r0, r5
 3105 0180 9847     		blx	r3
 3106              	.LVL442:
 3107              		.loc 1 1037 7 discriminator 1 view .LVU1148
 3108 0182 A042     		cmp	r0, r4
 3109 0184 40F0A080 		bne	.L219
1038:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
1039:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			rc = create_huffman_tbl(jd, seg, len);	/* Create huffman tables */
 3110              		.loc 1 1039 4 is_stmt 1 view .LVU1149
 3111              		.loc 1 1039 9 is_stmt 0 view .LVU1150
 3112 0188 2246     		mov	r2, r4
 3113 018a 3146     		mov	r1, r6
 3114 018c 2846     		mov	r0, r5
 3115 018e FFF7FEFF 		bl	create_huffman_tbl
 3116              	.LVL443:
1040:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (rc) return rc;
 3117              		.loc 1 1040 4 is_stmt 1 view .LVU1151
 3118              		.loc 1 1040 7 is_stmt 0 view .LVU1152
 3119 0192 0028     		cmp	r0, #0
 3120 0194 3FF45FAF 		beq	.L186
 3121 0198 7FE0     		b	.L184
 3122              	.LVL444:
 3123              	.L192:
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 81


1041:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			break;
1042:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
1043:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		case 0xDB:	/* DQT - Define Quaitizer Tables */
1044:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (len > JD_SZBUF) return JDR_MEM2;
 3124              		.loc 1 1044 4 is_stmt 1 view .LVU1153
 3125              		.loc 1 1044 7 is_stmt 0 view .LVU1154
 3126 019a B4F5007F 		cmp	r4, #512
 3127 019e 00F29580 		bhi	.L220
1045:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (jd->infunc(jd, seg, len) != len) return JDR_INP;	/* Load segment data */
 3128              		.loc 1 1045 4 is_stmt 1 view .LVU1155
 3129              		.loc 1 1045 10 is_stmt 0 view .LVU1156
 3130 01a2 2B6F     		ldr	r3, [r5, #112]
 3131              		.loc 1 1045 8 view .LVU1157
 3132 01a4 2246     		mov	r2, r4
 3133              	.LVL445:
 3134              		.loc 1 1045 8 view .LVU1158
 3135 01a6 3146     		mov	r1, r6
 3136 01a8 2846     		mov	r0, r5
 3137 01aa 9847     		blx	r3
 3138              	.LVL446:
 3139              		.loc 1 1045 7 discriminator 1 view .LVU1159
 3140 01ac A042     		cmp	r0, r4
 3141 01ae 40F08F80 		bne	.L221
1046:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
1047:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			rc = create_qt_tbl(jd, seg, len);	/* Create de-quantizer tables */
 3142              		.loc 1 1047 4 is_stmt 1 view .LVU1160
 3143              		.loc 1 1047 9 is_stmt 0 view .LVU1161
 3144 01b2 2246     		mov	r2, r4
 3145 01b4 3146     		mov	r1, r6
 3146 01b6 2846     		mov	r0, r5
 3147 01b8 FFF7FEFF 		bl	create_qt_tbl
 3148              	.LVL447:
1048:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (rc) return rc;
 3149              		.loc 1 1048 4 is_stmt 1 view .LVU1162
 3150              		.loc 1 1048 7 is_stmt 0 view .LVU1163
 3151 01bc 0028     		cmp	r0, #0
 3152 01be 3FF44AAF 		beq	.L186
 3153 01c2 6AE0     		b	.L184
 3154              	.LVL448:
 3155              	.L187:
1049:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			break;
1050:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
1051:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		case 0xDA:	/* SOS - Start of Scan */
1052:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (len > JD_SZBUF) return JDR_MEM2;
 3156              		.loc 1 1052 4 is_stmt 1 view .LVU1164
 3157              		.loc 1 1052 7 is_stmt 0 view .LVU1165
 3158 01c4 B4F5007F 		cmp	r4, #512
 3159 01c8 00F28480 		bhi	.L222
1053:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (jd->infunc(jd, seg, len) != len) return JDR_INP;	/* Load segment data */
 3160              		.loc 1 1053 4 is_stmt 1 view .LVU1166
 3161              		.loc 1 1053 10 is_stmt 0 view .LVU1167
 3162 01cc 2B6F     		ldr	r3, [r5, #112]
 3163              		.loc 1 1053 8 view .LVU1168
 3164 01ce 2246     		mov	r2, r4
 3165              	.LVL449:
 3166              		.loc 1 1053 8 view .LVU1169
 3167 01d0 3146     		mov	r1, r6
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 82


 3168 01d2 2846     		mov	r0, r5
 3169 01d4 9847     		blx	r3
 3170              	.LVL450:
 3171              		.loc 1 1053 7 discriminator 1 view .LVU1170
 3172 01d6 A042     		cmp	r0, r4
 3173 01d8 7ED1     		bne	.L223
1054:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
1055:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (!jd->width || !jd->height) return JDR_FMT1;	/* Err: Invalid image size */
 3174              		.loc 1 1055 4 is_stmt 1 view .LVU1171
 3175              		.loc 1 1055 11 is_stmt 0 view .LVU1172
 3176 01da AB8B     		ldrh	r3, [r5, #28]
 3177              		.loc 1 1055 7 view .LVU1173
 3178 01dc 002B     		cmp	r3, #0
 3179 01de 7DD0     		beq	.L224
 3180              		.loc 1 1055 25 discriminator 2 view .LVU1174
 3181 01e0 EB8B     		ldrh	r3, [r5, #30]
 3182              		.loc 1 1055 19 discriminator 2 view .LVU1175
 3183 01e2 002B     		cmp	r3, #0
 3184 01e4 7CD0     		beq	.L225
1056:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (seg[0] != jd->ncomp) return JDR_FMT3;		/* Err: Wrong color components */
 3185              		.loc 1 1056 4 is_stmt 1 view .LVU1176
 3186              		.loc 1 1056 11 is_stmt 0 view .LVU1177
 3187 01e6 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 3188              		.loc 1 1056 20 view .LVU1178
 3189 01e8 EC7C     		ldrb	r4, [r5, #19]	@ zero_extendqisi2
 3190              	.LVL451:
 3191              		.loc 1 1056 7 view .LVU1179
 3192 01ea A342     		cmp	r3, r4
 3193 01ec 7AD1     		bne	.L226
1057:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
1058:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			/* Check if all tables corresponding to each components have been loaded */
1059:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			for (i = 0; i < jd->ncomp; i++) {
 3194              		.loc 1 1059 11 view .LVU1180
 3195 01ee 0023     		movs	r3, #0
 3196              	.L200:
 3197              	.LVL452:
 3198              		.loc 1 1059 18 is_stmt 1 discriminator 1 view .LVU1181
 3199 01f0 9C42     		cmp	r4, r3
 3200 01f2 1CD9     		bls	.L236
1060:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				b = seg[2 + 2 * i];	/* Get huffman table ID */
 3201              		.loc 1 1060 5 view .LVU1182
 3202              		.loc 1 1060 15 is_stmt 0 view .LVU1183
 3203 01f4 591C     		adds	r1, r3, #1
 3204              		.loc 1 1060 7 view .LVU1184
 3205 01f6 16F81120 		ldrb	r2, [r6, r1, lsl #1]	@ zero_extendqisi2
 3206              	.LVL453:
1061:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (b != 0x00 && b != 0x11)	return JDR_FMT3;	/* Err: Different table number for DC/AC element *
 3207              		.loc 1 1061 5 is_stmt 1 view .LVU1185
 3208              		.loc 1 1061 8 is_stmt 0 view .LVU1186
 3209 01fa 002A     		cmp	r2, #0
 3210 01fc 18BF     		it	ne
 3211 01fe 112A     		cmpne	r2, #17
 3212 0200 72D1     		bne	.L227
1062:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				n = i ? 1 : 0;							/* Component class */
 3213              		.loc 1 1062 5 is_stmt 1 view .LVU1187
 3214              		.loc 1 1062 15 is_stmt 0 view .LVU1188
 3215 0202 1A1E     		subs	r2, r3, #0
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 83


 3216              	.LVL454:
 3217              		.loc 1 1062 15 view .LVU1189
 3218 0204 18BF     		it	ne
 3219 0206 0122     		movne	r2, #1
 3220              	.LVL455:
1063:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (!jd->huffbits[n][0] || !jd->huffbits[n][1]) {	/* Check huffman table for this component */
 3221              		.loc 1 1063 5 is_stmt 1 view .LVU1190
 3222              		.loc 1 1063 25 is_stmt 0 view .LVU1191
 3223 0208 101D     		adds	r0, r2, #4
 3224 020a 55F83000 		ldr	r0, [r5, r0, lsl #3]
 3225              		.loc 1 1063 8 view .LVU1192
 3226 020e 0028     		cmp	r0, #0
 3227 0210 6CD0     		beq	.L228
 3228              		.loc 1 1063 48 discriminator 1 view .LVU1193
 3229 0212 05EBC202 		add	r2, r5, r2, lsl #3
 3230              	.LVL456:
 3231              		.loc 1 1063 48 discriminator 1 view .LVU1194
 3232 0216 526A     		ldr	r2, [r2, #36]
 3233              		.loc 1 1063 29 discriminator 1 view .LVU1195
 3234 0218 002A     		cmp	r2, #0
 3235 021a 69D0     		beq	.L229
1064:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					return JDR_FMT1;					/* Err: Nnot loaded */
1065:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
1066:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (!jd->qttbl[jd->qtid[i]]) {			/* Check dequantizer table for this component */
 3236              		.loc 1 1066 5 is_stmt 1 view .LVU1196
 3237              		.loc 1 1066 28 is_stmt 0 view .LVU1197
 3238 021c 2B44     		add	r3, r3, r5
 3239              	.LVL457:
 3240              		.loc 1 1066 28 view .LVU1198
 3241 021e 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 3242              		.loc 1 1066 19 view .LVU1199
 3243 0220 1433     		adds	r3, r3, #20
 3244 0222 55F82330 		ldr	r3, [r5, r3, lsl #2]
 3245              		.loc 1 1066 8 view .LVU1200
 3246 0226 002B     		cmp	r3, #0
 3247 0228 64D0     		beq	.L230
1059:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				b = seg[2 + 2 * i];	/* Get huffman table ID */
 3248              		.loc 1 1059 32 discriminator 2 view .LVU1201
 3249 022a 0B46     		mov	r3, r1
 3250 022c E0E7     		b	.L200
 3251              	.LVL458:
 3252              	.L236:
1067:lvgl/src/extra/libs/sjpg/tjpgd.c **** 					return JDR_FMT1;					/* Err: Not loaded */
1068:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
1069:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			}
1070:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
1071:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			/* Allocate working buffer for MCU and pixel output */
1072:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			n = jd->msy * jd->msx;						/* Number of Y blocks in the MCU */
 3253              		.loc 1 1072 4 is_stmt 1 view .LVU1202
 3254              		.loc 1 1072 10 is_stmt 0 view .LVU1203
 3255 022e EC7B     		ldrb	r4, [r5, #15]	@ zero_extendqisi2
 3256              		.loc 1 1072 20 view .LVU1204
 3257 0230 AB7B     		ldrb	r3, [r5, #14]	@ zero_extendqisi2
 3258              	.LVL459:
 3259              		.loc 1 1072 16 view .LVU1205
 3260 0232 03FB04F4 		mul	r4, r3, r4
 3261              	.LVL460:
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 84


1073:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (!n) return JDR_FMT1;					/* Err: SOF0 has not been loaded */
 3262              		.loc 1 1073 4 is_stmt 1 view .LVU1206
 3263              		.loc 1 1073 7 is_stmt 0 view .LVU1207
 3264 0236 002C     		cmp	r4, #0
 3265 0238 5ED0     		beq	.L231
1074:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			len = n * 64 * 2 + 64;						/* Allocate buffer for IDCT and RGB output */
 3266              		.loc 1 1074 4 is_stmt 1 view .LVU1208
 3267              		.loc 1 1074 17 is_stmt 0 view .LVU1209
 3268 023a E101     		lsls	r1, r4, #7
 3269              		.loc 1 1074 8 view .LVU1210
 3270 023c 4031     		adds	r1, r1, #64
 3271              	.LVL461:
1075:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (len < 256) len = 256;					/* but at least 256 byte is required for IDCT */
 3272              		.loc 1 1075 4 is_stmt 1 view .LVU1211
 3273              		.loc 1 1075 7 is_stmt 0 view .LVU1212
 3274 023e FF29     		cmp	r1, #255
 3275 0240 01D8     		bhi	.L202
 3276              		.loc 1 1075 23 discriminator 1 view .LVU1213
 3277 0242 4FF48071 		mov	r1, #256
 3278              	.LVL462:
 3279              	.L202:
1076:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			jd->workbuf = alloc_pool(jd, len);			/* and it may occupy a part of following MCU working buffer
 3280              		.loc 1 1076 4 is_stmt 1 view .LVU1214
 3281              		.loc 1 1076 18 is_stmt 0 view .LVU1215
 3282 0246 2846     		mov	r0, r5
 3283 0248 FFF7FEFF 		bl	alloc_pool
 3284              	.LVL463:
 3285              		.loc 1 1076 16 discriminator 1 view .LVU1216
 3286 024c 2866     		str	r0, [r5, #96]
1077:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (!jd->workbuf) return JDR_MEM1;			/* Err: not enough memory */
 3287              		.loc 1 1077 4 is_stmt 1 view .LVU1217
 3288              		.loc 1 1077 7 is_stmt 0 view .LVU1218
 3289 024e 0028     		cmp	r0, #0
 3290 0250 54D0     		beq	.L233
1078:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			jd->mcubuf = alloc_pool(jd, (n + 2) * 64 * sizeof (jd_yuv_t));	/* Allocate MCU working buffer */
 3291              		.loc 1 1078 4 is_stmt 1 view .LVU1219
 3292              		.loc 1 1078 35 is_stmt 0 view .LVU1220
 3293 0252 A11C     		adds	r1, r4, #2
 3294              		.loc 1 1078 17 view .LVU1221
 3295 0254 8901     		lsls	r1, r1, #6
 3296 0256 2846     		mov	r0, r5
 3297 0258 FFF7FEFF 		bl	alloc_pool
 3298              	.LVL464:
 3299              		.loc 1 1078 15 discriminator 1 view .LVU1222
 3300 025c 6866     		str	r0, [r5, #100]
1079:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (!jd->mcubuf) return JDR_MEM1;			/* Err: not enough memory */
 3301              		.loc 1 1079 4 is_stmt 1 view .LVU1223
 3302              		.loc 1 1079 7 is_stmt 0 view .LVU1224
 3303 025e 0028     		cmp	r0, #0
 3304 0260 4ED0     		beq	.L234
1080:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
1081:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			/* Align stream read offset to JD_SZBUF */
1082:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (ofs %= JD_SZBUF) {
 3305              		.loc 1 1082 4 is_stmt 1 view .LVU1225
 3306              		.loc 1 1082 12 is_stmt 0 view .LVU1226
 3307 0262 C7F30807 		ubfx	r7, r7, #0, #9
 3308              	.LVL465:
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 85


 3309              		.loc 1 1082 7 view .LVU1227
 3310 0266 37B1     		cbz	r7, .L203
1083:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				jd->dctr = jd->infunc(jd, seg + ofs, (size_t)(JD_SZBUF - ofs));
 3311              		.loc 1 1083 5 is_stmt 1 view .LVU1228
 3312              		.loc 1 1083 18 is_stmt 0 view .LVU1229
 3313 0268 2B6F     		ldr	r3, [r5, #112]
 3314              		.loc 1 1083 16 view .LVU1230
 3315 026a C7F50072 		rsb	r2, r7, #512
 3316 026e F119     		adds	r1, r6, r7
 3317 0270 2846     		mov	r0, r5
 3318 0272 9847     		blx	r3
 3319              	.LVL466:
 3320              		.loc 1 1083 14 discriminator 1 view .LVU1231
 3321 0274 2860     		str	r0, [r5]
 3322              	.L203:
1084:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			}
1085:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			jd->dptr = seg + ofs - (JD_FASTDECODE ? 0 : 1);
 3323              		.loc 1 1085 4 is_stmt 1 view .LVU1232
 3324              		.loc 1 1085 25 is_stmt 0 view .LVU1233
 3325 0276 013F     		subs	r7, r7, #1
 3326              	.LVL467:
 3327              		.loc 1 1085 25 view .LVU1234
 3328 0278 3E44     		add	r6, r6, r7
 3329              	.LVL468:
 3330              		.loc 1 1085 13 view .LVU1235
 3331 027a 6E60     		str	r6, [r5, #4]
1086:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
1087:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			return JDR_OK;		/* Initialization succeeded. Ready to decompress the JPEG image. */
 3332              		.loc 1 1087 4 is_stmt 1 view .LVU1236
 3333              		.loc 1 1087 11 is_stmt 0 view .LVU1237
 3334 027c 0020     		movs	r0, #0
 3335 027e 0CE0     		b	.L184
 3336              	.LVL469:
 3337              	.L189:
1088:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
1089:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		case 0xC1:	/* SOF1 */
1090:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		case 0xC2:	/* SOF2 */
1091:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		case 0xC3:	/* SOF3 */
1092:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		case 0xC5:	/* SOF5 */
1093:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		case 0xC6:	/* SOF6 */
1094:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		case 0xC7:	/* SOF7 */
1095:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		case 0xC9:	/* SOF9 */
1096:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		case 0xCA:	/* SOF10 */
1097:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		case 0xCB:	/* SOF11 */
1098:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		case 0xCD:	/* SOF13 */
1099:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		case 0xCE:	/* SOF14 */
1100:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		case 0xCF:	/* SOF15 */
1101:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		case 0xD9:	/* EOI */
1102:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			return JDR_FMT3;	/* Unsuppoted JPEG standard (may be progressive JPEG) */
1103:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
1104:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		default:	/* Unknown segment (comment, exif or etc..) */
1105:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			/* Skip segment data (null pointer specifies to remove data from the stream) */
1106:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (jd->infunc(jd, 0, len) != len) return JDR_INP;
 3338              		.loc 1 1106 4 is_stmt 1 view .LVU1238
 3339              		.loc 1 1106 10 is_stmt 0 view .LVU1239
 3340 0280 2B6F     		ldr	r3, [r5, #112]
 3341              		.loc 1 1106 8 view .LVU1240
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 86


 3342 0282 2246     		mov	r2, r4
 3343 0284 0021     		movs	r1, #0
 3344 0286 2846     		mov	r0, r5
 3345 0288 9847     		blx	r3
 3346              	.LVL470:
 3347              		.loc 1 1106 7 discriminator 1 view .LVU1241
 3348 028a A042     		cmp	r0, r4
 3349 028c 3FF4E3AE 		beq	.L186
 3350              		.loc 1 1106 46 discriminator 1 view .LVU1242
 3351 0290 0220     		movs	r0, #2
 3352 0292 02E0     		b	.L184
 3353              	.LVL471:
 3354              	.L204:
 984:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 3355              		.loc 1 984 19 discriminator 1 view .LVU1243
 3356 0294 0320     		movs	r0, #3
 3357              	.LVL472:
 984:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 3358              		.loc 1 984 19 discriminator 1 view .LVU1244
 3359 0296 00E0     		b	.L184
 3360              	.LVL473:
 3361              	.L205:
 988:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		ofs++;
 3362              		.loc 1 988 43 discriminator 1 view .LVU1245
 3363 0298 0220     		movs	r0, #2
 3364              	.LVL474:
 3365              	.L184:
1107:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		}
1108:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	}
1109:lvgl/src/extra/libs/sjpg/tjpgd.c **** }
 3366              		.loc 1 1109 1 view .LVU1246
 3367 029a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3368              	.LVL475:
 3369              	.L206:
 995:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		marker = LDB_WORD(seg);		/* Marker */
 3370              		.loc 1 995 43 discriminator 1 view .LVU1247
 3371 029c 0220     		movs	r0, #2
 3372 029e FCE7     		b	.L184
 3373              	.LVL476:
 3374              	.L207:
 998:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		len -= 2;			/* Segent content size */
 3375              		.loc 1 998 49 discriminator 3 view .LVU1248
 3376 02a0 0620     		movs	r0, #6
 3377 02a2 FAE7     		b	.L184
 3378              	.LVL477:
 3379              	.L208:
 998:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		len -= 2;			/* Segent content size */
 3380              		.loc 1 998 49 discriminator 3 view .LVU1249
 3381 02a4 0620     		movs	r0, #6
 3382 02a6 F8E7     		b	.L184
 3383              	.LVL478:
 3384              	.L209:
1002:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		case 0xC0:	/* SOF0 (baseline JPEG) */
 3385              		.loc 1 1002 3 view .LVU1250
 3386 02a8 0820     		movs	r0, #8
 3387 02aa F6E7     		b	.L184
 3388              	.L210:
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 87


1004:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (jd->infunc(jd, seg, len) != len) return JDR_INP;	/* Load segment data */
 3389              		.loc 1 1004 31 discriminator 1 view .LVU1251
 3390 02ac 0420     		movs	r0, #4
 3391 02ae F4E7     		b	.L184
 3392              	.LVL479:
 3393              	.L211:
1005:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 3394              		.loc 1 1005 48 discriminator 1 view .LVU1252
 3395 02b0 0220     		movs	r0, #2
 3396 02b2 F2E7     		b	.L184
 3397              	.L212:
1010:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 3398              		.loc 1 1010 49 discriminator 1 view .LVU1253
 3399 02b4 0820     		movs	r0, #8
 3400 02b6 F0E7     		b	.L184
 3401              	.LVL480:
 3402              	.L215:
1024:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			}
 3403              		.loc 1 1024 33 discriminator 1 view .LVU1254
 3404 02b8 0820     		movs	r0, #8
 3405 02ba EEE7     		b	.L184
 3406              	.LVL481:
 3407              	.L216:
1029:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (jd->infunc(jd, seg, len) != len) return JDR_INP;	/* Load segment data */
 3408              		.loc 1 1029 31 discriminator 1 view .LVU1255
 3409 02bc 0420     		movs	r0, #4
 3410 02be ECE7     		b	.L184
 3411              	.LVL482:
 3412              	.L217:
1030:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 3413              		.loc 1 1030 48 discriminator 1 view .LVU1256
 3414 02c0 0220     		movs	r0, #2
 3415 02c2 EAE7     		b	.L184
 3416              	.LVL483:
 3417              	.L218:
1036:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (jd->infunc(jd, seg, len) != len) return JDR_INP;	/* Load segment data */
 3418              		.loc 1 1036 31 discriminator 1 view .LVU1257
 3419 02c4 0420     		movs	r0, #4
 3420 02c6 E8E7     		b	.L184
 3421              	.LVL484:
 3422              	.L219:
1037:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 3423              		.loc 1 1037 48 discriminator 1 view .LVU1258
 3424 02c8 0220     		movs	r0, #2
 3425 02ca E6E7     		b	.L184
 3426              	.LVL485:
 3427              	.L220:
1044:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (jd->infunc(jd, seg, len) != len) return JDR_INP;	/* Load segment data */
 3428              		.loc 1 1044 31 discriminator 1 view .LVU1259
 3429 02cc 0420     		movs	r0, #4
 3430 02ce E4E7     		b	.L184
 3431              	.LVL486:
 3432              	.L221:
1045:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 3433              		.loc 1 1045 48 discriminator 1 view .LVU1260
 3434 02d0 0220     		movs	r0, #2
 3435 02d2 E2E7     		b	.L184
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 88


 3436              	.LVL487:
 3437              	.L222:
1052:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (jd->infunc(jd, seg, len) != len) return JDR_INP;	/* Load segment data */
 3438              		.loc 1 1052 31 discriminator 1 view .LVU1261
 3439 02d4 0420     		movs	r0, #4
 3440 02d6 E0E7     		b	.L184
 3441              	.LVL488:
 3442              	.L223:
1053:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 3443              		.loc 1 1053 48 discriminator 1 view .LVU1262
 3444 02d8 0220     		movs	r0, #2
 3445 02da DEE7     		b	.L184
 3446              	.L224:
1055:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (seg[0] != jd->ncomp) return JDR_FMT3;		/* Err: Wrong color components */
 3447              		.loc 1 1055 42 discriminator 3 view .LVU1263
 3448 02dc 0620     		movs	r0, #6
 3449 02de DCE7     		b	.L184
 3450              	.L225:
 3451 02e0 0620     		movs	r0, #6
 3452 02e2 DAE7     		b	.L184
 3453              	.LVL489:
 3454              	.L226:
1056:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 3455              		.loc 1 1056 36 discriminator 1 view .LVU1264
 3456 02e4 0820     		movs	r0, #8
 3457 02e6 D8E7     		b	.L184
 3458              	.LVL490:
 3459              	.L227:
1061:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				n = i ? 1 : 0;							/* Component class */
 3460              		.loc 1 1061 40 discriminator 1 view .LVU1265
 3461 02e8 0820     		movs	r0, #8
 3462 02ea D6E7     		b	.L184
 3463              	.LVL491:
 3464              	.L228:
1064:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 3465              		.loc 1 1064 13 view .LVU1266
 3466 02ec 0620     		movs	r0, #6
 3467 02ee D4E7     		b	.L184
 3468              	.LVL492:
 3469              	.L229:
1064:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 3470              		.loc 1 1064 13 view .LVU1267
 3471 02f0 0620     		movs	r0, #6
 3472 02f2 D2E7     		b	.L184
 3473              	.LVL493:
 3474              	.L230:
1067:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				}
 3475              		.loc 1 1067 13 view .LVU1268
 3476 02f4 0620     		movs	r0, #6
 3477 02f6 D0E7     		b	.L184
 3478              	.LVL494:
 3479              	.L231:
1073:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			len = n * 64 * 2 + 64;						/* Allocate buffer for IDCT and RGB output */
 3480              		.loc 1 1073 19 discriminator 1 view .LVU1269
 3481 02f8 0620     		movs	r0, #6
 3482 02fa CEE7     		b	.L184
 3483              	.L233:
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 89


1077:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			jd->mcubuf = alloc_pool(jd, (n + 2) * 64 * sizeof (jd_yuv_t));	/* Allocate MCU working buffer */
 3484              		.loc 1 1077 29 discriminator 1 view .LVU1270
 3485 02fc 0320     		movs	r0, #3
 3486 02fe CCE7     		b	.L184
 3487              	.L234:
1079:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 3488              		.loc 1 1079 28 discriminator 1 view .LVU1271
 3489 0300 0320     		movs	r0, #3
 3490 0302 CAE7     		b	.L184
 3491              	.L238:
 3492              		.align	2
 3493              	.L237:
 3494 0304 EEEE0002 		.word	33615598
 3495              		.cfi_endproc
 3496              	.LFE9:
 3498              		.section	.text.jd_decomp,"ax",%progbits
 3499              		.align	1
 3500              		.global	jd_decomp
 3501              		.syntax unified
 3502              		.thumb
 3503              		.thumb_func
 3505              	jd_decomp:
 3506              	.LVL495:
 3507              	.LFB10:
1110:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
1111:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
1112:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
1113:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
1114:lvgl/src/extra/libs/sjpg/tjpgd.c **** /*-----------------------------------------------------------------------*/
1115:lvgl/src/extra/libs/sjpg/tjpgd.c **** /* Start to decompress the JPEG picture                                  */
1116:lvgl/src/extra/libs/sjpg/tjpgd.c **** /*-----------------------------------------------------------------------*/
1117:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
1118:lvgl/src/extra/libs/sjpg/tjpgd.c **** JRESULT jd_decomp (
1119:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	JDEC* jd,								/* Initialized decompression object */
1120:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	int (*outfunc)(JDEC*, void*, JRECT*),	/* RGB output function */
1121:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	uint8_t scale							/* Output de-scaling factor (0 to 3) */
1122:lvgl/src/extra/libs/sjpg/tjpgd.c **** )
1123:lvgl/src/extra/libs/sjpg/tjpgd.c **** {
 3508              		.loc 1 1123 1 is_stmt 1 view -0
 3509              		.cfi_startproc
 3510              		@ args = 0, pretend = 0, frame = 0
 3511              		@ frame_needed = 0, uses_anonymous_args = 0
 3512              		.loc 1 1123 1 is_stmt 0 view .LVU1273
 3513 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3514              	.LCFI18:
 3515              		.cfi_def_cfa_offset 40
 3516              		.cfi_offset 3, -40
 3517              		.cfi_offset 4, -36
 3518              		.cfi_offset 5, -32
 3519              		.cfi_offset 6, -28
 3520              		.cfi_offset 7, -24
 3521              		.cfi_offset 8, -20
 3522              		.cfi_offset 9, -16
 3523              		.cfi_offset 10, -12
 3524              		.cfi_offset 11, -8
 3525              		.cfi_offset 14, -4
1124:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	unsigned int x, y, mx, my;
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 90


 3526              		.loc 1 1124 2 is_stmt 1 view .LVU1274
1125:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	uint16_t rst, rsc;
 3527              		.loc 1 1125 2 view .LVU1275
1126:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	JRESULT rc;
 3528              		.loc 1 1126 2 view .LVU1276
1127:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
1128:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
1129:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	if (scale > (JD_USE_SCALE ? 3 : 0)) return JDR_PAR;
 3529              		.loc 1 1129 2 view .LVU1277
 3530              		.loc 1 1129 5 is_stmt 0 view .LVU1278
 3531 0004 032A     		cmp	r2, #3
 3532 0006 3DD8     		bhi	.L245
 3533 0008 0446     		mov	r4, r0
 3534 000a 8846     		mov	r8, r1
1130:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	jd->scale = scale;
 3535              		.loc 1 1130 2 is_stmt 1 view .LVU1279
 3536              		.loc 1 1130 12 is_stmt 0 view .LVU1280
 3537 000c 4273     		strb	r2, [r0, #13]
1131:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
1132:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	mx = jd->msx * 8; my = jd->msy * 8;			/* Size of the MCU (pixel) */
 3538              		.loc 1 1132 2 is_stmt 1 view .LVU1281
 3539              		.loc 1 1132 9 is_stmt 0 view .LVU1282
 3540 000e 90F80E90 		ldrb	r9, [r0, #14]	@ zero_extendqisi2
 3541              		.loc 1 1132 15 view .LVU1283
 3542 0012 4FEAC909 		lsl	r9, r9, #3
 3543              	.LVL496:
 3544              		.loc 1 1132 20 is_stmt 1 view .LVU1284
 3545              		.loc 1 1132 27 is_stmt 0 view .LVU1285
 3546 0016 90F80FB0 		ldrb	fp, [r0, #15]	@ zero_extendqisi2
 3547              		.loc 1 1132 33 view .LVU1286
 3548 001a 4FEACB0B 		lsl	fp, fp, #3
 3549              	.LVL497:
1133:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
1134:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	jd->dcv[2] = jd->dcv[1] = jd->dcv[0] = 0;	/* Initialize DC values */
 3550              		.loc 1 1134 2 is_stmt 1 view .LVU1287
 3551              		.loc 1 1134 39 is_stmt 0 view .LVU1288
 3552 001e 0027     		movs	r7, #0
 3553 0020 8782     		strh	r7, [r0, #20]	@ movhi
 3554              		.loc 1 1134 26 view .LVU1289
 3555 0022 C782     		strh	r7, [r0, #22]	@ movhi
 3556              		.loc 1 1134 13 view .LVU1290
 3557 0024 0783     		strh	r7, [r0, #24]	@ movhi
1135:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	rst = rsc = 0;
 3558              		.loc 1 1135 2 is_stmt 1 view .LVU1291
 3559              	.LVL498:
1136:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
1137:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	rc = JDR_OK;
 3560              		.loc 1 1137 2 view .LVU1292
1138:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	for (y = 0; y < jd->height; y += my) {		/* Vertical loop of MCUs */
 3561              		.loc 1 1138 2 view .LVU1293
1137:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	for (y = 0; y < jd->height; y += my) {		/* Vertical loop of MCUs */
 3562              		.loc 1 1137 5 is_stmt 0 view .LVU1294
 3563 0026 3B46     		mov	r3, r7
1135:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
 3564              		.loc 1 1135 12 view .LVU1295
 3565 0028 BA46     		mov	r10, r7
1135:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 91


 3566              		.loc 1 1135 6 view .LVU1296
 3567 002a 3E46     		mov	r6, r7
 3568              	.LVL499:
 3569              	.L241:
 3570              		.loc 1 1138 16 is_stmt 1 discriminator 1 view .LVU1297
 3571              		.loc 1 1138 20 is_stmt 0 discriminator 1 view .LVU1298
 3572 002c E28B     		ldrh	r2, [r4, #30]
 3573              		.loc 1 1138 16 discriminator 1 view .LVU1299
 3574 002e BA42     		cmp	r2, r7
 3575 0030 29D9     		bls	.L240
1139:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		for (x = 0; x < jd->width; x += mx) {	/* Horizontal loop of MCUs */
 3576              		.loc 1 1139 10 view .LVU1300
 3577 0032 0025     		movs	r5, #0
 3578 0034 18E0     		b	.L244
 3579              	.LVL500:
 3580              	.L250:
1140:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (jd->nrst && rst++ == jd->nrst) {	/* Process restart interval if enabled */
1141:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				rc = restart(jd, rsc++);
 3581              		.loc 1 1141 5 is_stmt 1 view .LVU1301
 3582              		.loc 1 1141 10 is_stmt 0 view .LVU1302
 3583 0036 0AF10106 		add	r6, r10, #1
 3584 003a B6B2     		uxth	r6, r6
 3585              	.LVL501:
 3586              		.loc 1 1141 10 view .LVU1303
 3587 003c 5146     		mov	r1, r10
 3588 003e 2046     		mov	r0, r4
 3589 0040 FFF7FEFF 		bl	restart
 3590              	.LVL502:
1142:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (rc != JDR_OK) return rc;
 3591              		.loc 1 1142 5 is_stmt 1 view .LVU1304
 3592              		.loc 1 1142 8 is_stmt 0 view .LVU1305
 3593 0044 0346     		mov	r3, r0
 3594 0046 F0B9     		cbnz	r0, .L240
1141:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				if (rc != JDR_OK) return rc;
 3595              		.loc 1 1141 10 view .LVU1306
 3596 0048 B246     		mov	r10, r6
1143:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				rst = 1;
 3597              		.loc 1 1143 9 view .LVU1307
 3598 004a 0126     		movs	r6, #1
 3599              	.LVL503:
 3600              	.L242:
1144:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			}
1145:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			rc = mcu_load(jd);					/* Load an MCU (decompress huffman coded stream, dequantize and apply IDC
 3601              		.loc 1 1145 4 is_stmt 1 view .LVU1308
 3602              		.loc 1 1145 9 is_stmt 0 view .LVU1309
 3603 004c 2046     		mov	r0, r4
 3604 004e FFF7FEFF 		bl	mcu_load
 3605              	.LVL504:
1146:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (rc != JDR_OK) return rc;
 3606              		.loc 1 1146 4 is_stmt 1 view .LVU1310
 3607              		.loc 1 1146 7 is_stmt 0 view .LVU1311
 3608 0052 0346     		mov	r3, r0
 3609 0054 B8B9     		cbnz	r0, .L240
1147:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			rc = mcu_output(jd, outfunc, x, y);	/* Output the MCU (YCbCr to RGB, scaling and output) */
 3610              		.loc 1 1147 4 is_stmt 1 view .LVU1312
 3611              		.loc 1 1147 9 is_stmt 0 view .LVU1313
 3612 0056 3B46     		mov	r3, r7
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 92


 3613 0058 2A46     		mov	r2, r5
 3614 005a 4146     		mov	r1, r8
 3615 005c 2046     		mov	r0, r4
 3616              	.LVL505:
 3617              		.loc 1 1147 9 view .LVU1314
 3618 005e FFF7FEFF 		bl	mcu_output
 3619              	.LVL506:
1148:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (rc != JDR_OK) return rc;
 3620              		.loc 1 1148 4 is_stmt 1 view .LVU1315
 3621              		.loc 1 1148 7 is_stmt 0 view .LVU1316
 3622 0062 0346     		mov	r3, r0
 3623 0064 78B9     		cbnz	r0, .L240
1139:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (jd->nrst && rst++ == jd->nrst) {	/* Process restart interval if enabled */
 3624              		.loc 1 1139 32 is_stmt 1 discriminator 2 view .LVU1317
 3625 0066 4D44     		add	r5, r5, r9
 3626              	.LVL507:
 3627              	.L244:
1139:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (jd->nrst && rst++ == jd->nrst) {	/* Process restart interval if enabled */
 3628              		.loc 1 1139 17 discriminator 1 view .LVU1318
1139:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (jd->nrst && rst++ == jd->nrst) {	/* Process restart interval if enabled */
 3629              		.loc 1 1139 21 is_stmt 0 discriminator 1 view .LVU1319
 3630 0068 A28B     		ldrh	r2, [r4, #28]
1139:lvgl/src/extra/libs/sjpg/tjpgd.c **** 			if (jd->nrst && rst++ == jd->nrst) {	/* Process restart interval if enabled */
 3631              		.loc 1 1139 17 discriminator 1 view .LVU1320
 3632 006a AA42     		cmp	r2, r5
 3633 006c 08D9     		bls	.L249
1140:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				rc = restart(jd, rsc++);
 3634              		.loc 1 1140 4 is_stmt 1 view .LVU1321
1140:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				rc = restart(jd, rsc++);
 3635              		.loc 1 1140 10 is_stmt 0 view .LVU1322
 3636 006e 638B     		ldrh	r3, [r4, #26]
 3637              	.LVL508:
1140:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				rc = restart(jd, rsc++);
 3638              		.loc 1 1140 7 view .LVU1323
 3639 0070 002B     		cmp	r3, #0
 3640 0072 EBD0     		beq	.L242
1140:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				rc = restart(jd, rsc++);
 3641              		.loc 1 1140 23 discriminator 1 view .LVU1324
 3642 0074 721C     		adds	r2, r6, #1
 3643 0076 92B2     		uxth	r2, r2
 3644              	.LVL509:
1140:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				rc = restart(jd, rsc++);
 3645              		.loc 1 1140 17 discriminator 1 view .LVU1325
 3646 0078 B342     		cmp	r3, r6
 3647 007a DCD0     		beq	.L250
1140:lvgl/src/extra/libs/sjpg/tjpgd.c **** 				rc = restart(jd, rsc++);
 3648              		.loc 1 1140 23 discriminator 1 view .LVU1326
 3649 007c 1646     		mov	r6, r2
 3650 007e E5E7     		b	.L242
 3651              	.LVL510:
 3652              	.L249:
1138:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		for (x = 0; x < jd->width; x += mx) {	/* Horizontal loop of MCUs */
 3653              		.loc 1 1138 32 is_stmt 1 discriminator 2 view .LVU1327
 3654 0080 5F44     		add	r7, r7, fp
 3655              	.LVL511:
1138:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		for (x = 0; x < jd->width; x += mx) {	/* Horizontal loop of MCUs */
 3656              		.loc 1 1138 32 is_stmt 0 discriminator 2 view .LVU1328
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 93


 3657 0082 D3E7     		b	.L241
 3658              	.LVL512:
 3659              	.L245:
1129:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	jd->scale = scale;
 3660              		.loc 1 1129 45 discriminator 1 view .LVU1329
 3661 0084 0523     		movs	r3, #5
 3662              	.LVL513:
 3663              	.L240:
1149:lvgl/src/extra/libs/sjpg/tjpgd.c **** 		}
1150:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	}
1151:lvgl/src/extra/libs/sjpg/tjpgd.c **** 
1152:lvgl/src/extra/libs/sjpg/tjpgd.c **** 	return rc;
1153:lvgl/src/extra/libs/sjpg/tjpgd.c **** }
 3664              		.loc 1 1153 1 view .LVU1330
 3665 0086 1846     		mov	r0, r3
 3666 0088 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3667              		.cfi_endproc
 3668              	.LFE10:
 3670              		.section	.rodata.Clip8,"a"
 3671              		.align	2
 3674              	Clip8:
 3675 0000 00       		.byte	0
 3676 0001 01       		.byte	1
 3677 0002 02       		.byte	2
 3678 0003 03       		.byte	3
 3679 0004 04       		.byte	4
 3680 0005 05       		.byte	5
 3681 0006 06       		.byte	6
 3682 0007 07       		.byte	7
 3683 0008 08       		.byte	8
 3684 0009 09       		.byte	9
 3685 000a 0A       		.byte	10
 3686 000b 0B       		.byte	11
 3687 000c 0C       		.byte	12
 3688 000d 0D       		.byte	13
 3689 000e 0E       		.byte	14
 3690 000f 0F       		.byte	15
 3691 0010 10       		.byte	16
 3692 0011 11       		.byte	17
 3693 0012 12       		.byte	18
 3694 0013 13       		.byte	19
 3695 0014 14       		.byte	20
 3696 0015 15       		.byte	21
 3697 0016 16       		.byte	22
 3698 0017 17       		.byte	23
 3699 0018 18       		.byte	24
 3700 0019 19       		.byte	25
 3701 001a 1A       		.byte	26
 3702 001b 1B       		.byte	27
 3703 001c 1C       		.byte	28
 3704 001d 1D       		.byte	29
 3705 001e 1E       		.byte	30
 3706 001f 1F       		.byte	31
 3707 0020 20       		.byte	32
 3708 0021 21       		.byte	33
 3709 0022 22       		.byte	34
 3710 0023 23       		.byte	35
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 94


 3711 0024 24       		.byte	36
 3712 0025 25       		.byte	37
 3713 0026 26       		.byte	38
 3714 0027 27       		.byte	39
 3715 0028 28       		.byte	40
 3716 0029 29       		.byte	41
 3717 002a 2A       		.byte	42
 3718 002b 2B       		.byte	43
 3719 002c 2C       		.byte	44
 3720 002d 2D       		.byte	45
 3721 002e 2E       		.byte	46
 3722 002f 2F       		.byte	47
 3723 0030 30       		.byte	48
 3724 0031 31       		.byte	49
 3725 0032 32       		.byte	50
 3726 0033 33       		.byte	51
 3727 0034 34       		.byte	52
 3728 0035 35       		.byte	53
 3729 0036 36       		.byte	54
 3730 0037 37       		.byte	55
 3731 0038 38       		.byte	56
 3732 0039 39       		.byte	57
 3733 003a 3A       		.byte	58
 3734 003b 3B       		.byte	59
 3735 003c 3C       		.byte	60
 3736 003d 3D       		.byte	61
 3737 003e 3E       		.byte	62
 3738 003f 3F       		.byte	63
 3739 0040 40       		.byte	64
 3740 0041 41       		.byte	65
 3741 0042 42       		.byte	66
 3742 0043 43       		.byte	67
 3743 0044 44       		.byte	68
 3744 0045 45       		.byte	69
 3745 0046 46       		.byte	70
 3746 0047 47       		.byte	71
 3747 0048 48       		.byte	72
 3748 0049 49       		.byte	73
 3749 004a 4A       		.byte	74
 3750 004b 4B       		.byte	75
 3751 004c 4C       		.byte	76
 3752 004d 4D       		.byte	77
 3753 004e 4E       		.byte	78
 3754 004f 4F       		.byte	79
 3755 0050 50       		.byte	80
 3756 0051 51       		.byte	81
 3757 0052 52       		.byte	82
 3758 0053 53       		.byte	83
 3759 0054 54       		.byte	84
 3760 0055 55       		.byte	85
 3761 0056 56       		.byte	86
 3762 0057 57       		.byte	87
 3763 0058 58       		.byte	88
 3764 0059 59       		.byte	89
 3765 005a 5A       		.byte	90
 3766 005b 5B       		.byte	91
 3767 005c 5C       		.byte	92
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 95


 3768 005d 5D       		.byte	93
 3769 005e 5E       		.byte	94
 3770 005f 5F       		.byte	95
 3771 0060 60       		.byte	96
 3772 0061 61       		.byte	97
 3773 0062 62       		.byte	98
 3774 0063 63       		.byte	99
 3775 0064 64       		.byte	100
 3776 0065 65       		.byte	101
 3777 0066 66       		.byte	102
 3778 0067 67       		.byte	103
 3779 0068 68       		.byte	104
 3780 0069 69       		.byte	105
 3781 006a 6A       		.byte	106
 3782 006b 6B       		.byte	107
 3783 006c 6C       		.byte	108
 3784 006d 6D       		.byte	109
 3785 006e 6E       		.byte	110
 3786 006f 6F       		.byte	111
 3787 0070 70       		.byte	112
 3788 0071 71       		.byte	113
 3789 0072 72       		.byte	114
 3790 0073 73       		.byte	115
 3791 0074 74       		.byte	116
 3792 0075 75       		.byte	117
 3793 0076 76       		.byte	118
 3794 0077 77       		.byte	119
 3795 0078 78       		.byte	120
 3796 0079 79       		.byte	121
 3797 007a 7A       		.byte	122
 3798 007b 7B       		.byte	123
 3799 007c 7C       		.byte	124
 3800 007d 7D       		.byte	125
 3801 007e 7E       		.byte	126
 3802 007f 7F       		.byte	127
 3803 0080 80       		.byte	-128
 3804 0081 81       		.byte	-127
 3805 0082 82       		.byte	-126
 3806 0083 83       		.byte	-125
 3807 0084 84       		.byte	-124
 3808 0085 85       		.byte	-123
 3809 0086 86       		.byte	-122
 3810 0087 87       		.byte	-121
 3811 0088 88       		.byte	-120
 3812 0089 89       		.byte	-119
 3813 008a 8A       		.byte	-118
 3814 008b 8B       		.byte	-117
 3815 008c 8C       		.byte	-116
 3816 008d 8D       		.byte	-115
 3817 008e 8E       		.byte	-114
 3818 008f 8F       		.byte	-113
 3819 0090 90       		.byte	-112
 3820 0091 91       		.byte	-111
 3821 0092 92       		.byte	-110
 3822 0093 93       		.byte	-109
 3823 0094 94       		.byte	-108
 3824 0095 95       		.byte	-107
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 96


 3825 0096 96       		.byte	-106
 3826 0097 97       		.byte	-105
 3827 0098 98       		.byte	-104
 3828 0099 99       		.byte	-103
 3829 009a 9A       		.byte	-102
 3830 009b 9B       		.byte	-101
 3831 009c 9C       		.byte	-100
 3832 009d 9D       		.byte	-99
 3833 009e 9E       		.byte	-98
 3834 009f 9F       		.byte	-97
 3835 00a0 A0       		.byte	-96
 3836 00a1 A1       		.byte	-95
 3837 00a2 A2       		.byte	-94
 3838 00a3 A3       		.byte	-93
 3839 00a4 A4       		.byte	-92
 3840 00a5 A5       		.byte	-91
 3841 00a6 A6       		.byte	-90
 3842 00a7 A7       		.byte	-89
 3843 00a8 A8       		.byte	-88
 3844 00a9 A9       		.byte	-87
 3845 00aa AA       		.byte	-86
 3846 00ab AB       		.byte	-85
 3847 00ac AC       		.byte	-84
 3848 00ad AD       		.byte	-83
 3849 00ae AE       		.byte	-82
 3850 00af AF       		.byte	-81
 3851 00b0 B0       		.byte	-80
 3852 00b1 B1       		.byte	-79
 3853 00b2 B2       		.byte	-78
 3854 00b3 B3       		.byte	-77
 3855 00b4 B4       		.byte	-76
 3856 00b5 B5       		.byte	-75
 3857 00b6 B6       		.byte	-74
 3858 00b7 B7       		.byte	-73
 3859 00b8 B8       		.byte	-72
 3860 00b9 B9       		.byte	-71
 3861 00ba BA       		.byte	-70
 3862 00bb BB       		.byte	-69
 3863 00bc BC       		.byte	-68
 3864 00bd BD       		.byte	-67
 3865 00be BE       		.byte	-66
 3866 00bf BF       		.byte	-65
 3867 00c0 C0       		.byte	-64
 3868 00c1 C1       		.byte	-63
 3869 00c2 C2       		.byte	-62
 3870 00c3 C3       		.byte	-61
 3871 00c4 C4       		.byte	-60
 3872 00c5 C5       		.byte	-59
 3873 00c6 C6       		.byte	-58
 3874 00c7 C7       		.byte	-57
 3875 00c8 C8       		.byte	-56
 3876 00c9 C9       		.byte	-55
 3877 00ca CA       		.byte	-54
 3878 00cb CB       		.byte	-53
 3879 00cc CC       		.byte	-52
 3880 00cd CD       		.byte	-51
 3881 00ce CE       		.byte	-50
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 97


 3882 00cf CF       		.byte	-49
 3883 00d0 D0       		.byte	-48
 3884 00d1 D1       		.byte	-47
 3885 00d2 D2       		.byte	-46
 3886 00d3 D3       		.byte	-45
 3887 00d4 D4       		.byte	-44
 3888 00d5 D5       		.byte	-43
 3889 00d6 D6       		.byte	-42
 3890 00d7 D7       		.byte	-41
 3891 00d8 D8       		.byte	-40
 3892 00d9 D9       		.byte	-39
 3893 00da DA       		.byte	-38
 3894 00db DB       		.byte	-37
 3895 00dc DC       		.byte	-36
 3896 00dd DD       		.byte	-35
 3897 00de DE       		.byte	-34
 3898 00df DF       		.byte	-33
 3899 00e0 E0       		.byte	-32
 3900 00e1 E1       		.byte	-31
 3901 00e2 E2       		.byte	-30
 3902 00e3 E3       		.byte	-29
 3903 00e4 E4       		.byte	-28
 3904 00e5 E5       		.byte	-27
 3905 00e6 E6       		.byte	-26
 3906 00e7 E7       		.byte	-25
 3907 00e8 E8       		.byte	-24
 3908 00e9 E9       		.byte	-23
 3909 00ea EA       		.byte	-22
 3910 00eb EB       		.byte	-21
 3911 00ec EC       		.byte	-20
 3912 00ed ED       		.byte	-19
 3913 00ee EE       		.byte	-18
 3914 00ef EF       		.byte	-17
 3915 00f0 F0       		.byte	-16
 3916 00f1 F1       		.byte	-15
 3917 00f2 F2       		.byte	-14
 3918 00f3 F3       		.byte	-13
 3919 00f4 F4       		.byte	-12
 3920 00f5 F5       		.byte	-11
 3921 00f6 F6       		.byte	-10
 3922 00f7 F7       		.byte	-9
 3923 00f8 F8       		.byte	-8
 3924 00f9 F9       		.byte	-7
 3925 00fa FA       		.byte	-6
 3926 00fb FB       		.byte	-5
 3927 00fc FC       		.byte	-4
 3928 00fd FD       		.byte	-3
 3929 00fe FE       		.byte	-2
 3930 00ff FF       		.byte	-1
 3931 0100 FF       		.byte	-1
 3932 0101 FF       		.byte	-1
 3933 0102 FF       		.byte	-1
 3934 0103 FF       		.byte	-1
 3935 0104 FF       		.byte	-1
 3936 0105 FF       		.byte	-1
 3937 0106 FF       		.byte	-1
 3938 0107 FF       		.byte	-1
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 98


 3939 0108 FF       		.byte	-1
 3940 0109 FF       		.byte	-1
 3941 010a FF       		.byte	-1
 3942 010b FF       		.byte	-1
 3943 010c FF       		.byte	-1
 3944 010d FF       		.byte	-1
 3945 010e FF       		.byte	-1
 3946 010f FF       		.byte	-1
 3947 0110 FF       		.byte	-1
 3948 0111 FF       		.byte	-1
 3949 0112 FF       		.byte	-1
 3950 0113 FF       		.byte	-1
 3951 0114 FF       		.byte	-1
 3952 0115 FF       		.byte	-1
 3953 0116 FF       		.byte	-1
 3954 0117 FF       		.byte	-1
 3955 0118 FF       		.byte	-1
 3956 0119 FF       		.byte	-1
 3957 011a FF       		.byte	-1
 3958 011b FF       		.byte	-1
 3959 011c FF       		.byte	-1
 3960 011d FF       		.byte	-1
 3961 011e FF       		.byte	-1
 3962 011f FF       		.byte	-1
 3963 0120 FF       		.byte	-1
 3964 0121 FF       		.byte	-1
 3965 0122 FF       		.byte	-1
 3966 0123 FF       		.byte	-1
 3967 0124 FF       		.byte	-1
 3968 0125 FF       		.byte	-1
 3969 0126 FF       		.byte	-1
 3970 0127 FF       		.byte	-1
 3971 0128 FF       		.byte	-1
 3972 0129 FF       		.byte	-1
 3973 012a FF       		.byte	-1
 3974 012b FF       		.byte	-1
 3975 012c FF       		.byte	-1
 3976 012d FF       		.byte	-1
 3977 012e FF       		.byte	-1
 3978 012f FF       		.byte	-1
 3979 0130 FF       		.byte	-1
 3980 0131 FF       		.byte	-1
 3981 0132 FF       		.byte	-1
 3982 0133 FF       		.byte	-1
 3983 0134 FF       		.byte	-1
 3984 0135 FF       		.byte	-1
 3985 0136 FF       		.byte	-1
 3986 0137 FF       		.byte	-1
 3987 0138 FF       		.byte	-1
 3988 0139 FF       		.byte	-1
 3989 013a FF       		.byte	-1
 3990 013b FF       		.byte	-1
 3991 013c FF       		.byte	-1
 3992 013d FF       		.byte	-1
 3993 013e FF       		.byte	-1
 3994 013f FF       		.byte	-1
 3995 0140 FF       		.byte	-1
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 99


 3996 0141 FF       		.byte	-1
 3997 0142 FF       		.byte	-1
 3998 0143 FF       		.byte	-1
 3999 0144 FF       		.byte	-1
 4000 0145 FF       		.byte	-1
 4001 0146 FF       		.byte	-1
 4002 0147 FF       		.byte	-1
 4003 0148 FF       		.byte	-1
 4004 0149 FF       		.byte	-1
 4005 014a FF       		.byte	-1
 4006 014b FF       		.byte	-1
 4007 014c FF       		.byte	-1
 4008 014d FF       		.byte	-1
 4009 014e FF       		.byte	-1
 4010 014f FF       		.byte	-1
 4011 0150 FF       		.byte	-1
 4012 0151 FF       		.byte	-1
 4013 0152 FF       		.byte	-1
 4014 0153 FF       		.byte	-1
 4015 0154 FF       		.byte	-1
 4016 0155 FF       		.byte	-1
 4017 0156 FF       		.byte	-1
 4018 0157 FF       		.byte	-1
 4019 0158 FF       		.byte	-1
 4020 0159 FF       		.byte	-1
 4021 015a FF       		.byte	-1
 4022 015b FF       		.byte	-1
 4023 015c FF       		.byte	-1
 4024 015d FF       		.byte	-1
 4025 015e FF       		.byte	-1
 4026 015f FF       		.byte	-1
 4027 0160 FF       		.byte	-1
 4028 0161 FF       		.byte	-1
 4029 0162 FF       		.byte	-1
 4030 0163 FF       		.byte	-1
 4031 0164 FF       		.byte	-1
 4032 0165 FF       		.byte	-1
 4033 0166 FF       		.byte	-1
 4034 0167 FF       		.byte	-1
 4035 0168 FF       		.byte	-1
 4036 0169 FF       		.byte	-1
 4037 016a FF       		.byte	-1
 4038 016b FF       		.byte	-1
 4039 016c FF       		.byte	-1
 4040 016d FF       		.byte	-1
 4041 016e FF       		.byte	-1
 4042 016f FF       		.byte	-1
 4043 0170 FF       		.byte	-1
 4044 0171 FF       		.byte	-1
 4045 0172 FF       		.byte	-1
 4046 0173 FF       		.byte	-1
 4047 0174 FF       		.byte	-1
 4048 0175 FF       		.byte	-1
 4049 0176 FF       		.byte	-1
 4050 0177 FF       		.byte	-1
 4051 0178 FF       		.byte	-1
 4052 0179 FF       		.byte	-1
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 100


 4053 017a FF       		.byte	-1
 4054 017b FF       		.byte	-1
 4055 017c FF       		.byte	-1
 4056 017d FF       		.byte	-1
 4057 017e FF       		.byte	-1
 4058 017f FF       		.byte	-1
 4059 0180 FF       		.byte	-1
 4060 0181 FF       		.byte	-1
 4061 0182 FF       		.byte	-1
 4062 0183 FF       		.byte	-1
 4063 0184 FF       		.byte	-1
 4064 0185 FF       		.byte	-1
 4065 0186 FF       		.byte	-1
 4066 0187 FF       		.byte	-1
 4067 0188 FF       		.byte	-1
 4068 0189 FF       		.byte	-1
 4069 018a FF       		.byte	-1
 4070 018b FF       		.byte	-1
 4071 018c FF       		.byte	-1
 4072 018d FF       		.byte	-1
 4073 018e FF       		.byte	-1
 4074 018f FF       		.byte	-1
 4075 0190 FF       		.byte	-1
 4076 0191 FF       		.byte	-1
 4077 0192 FF       		.byte	-1
 4078 0193 FF       		.byte	-1
 4079 0194 FF       		.byte	-1
 4080 0195 FF       		.byte	-1
 4081 0196 FF       		.byte	-1
 4082 0197 FF       		.byte	-1
 4083 0198 FF       		.byte	-1
 4084 0199 FF       		.byte	-1
 4085 019a FF       		.byte	-1
 4086 019b FF       		.byte	-1
 4087 019c FF       		.byte	-1
 4088 019d FF       		.byte	-1
 4089 019e FF       		.byte	-1
 4090 019f FF       		.byte	-1
 4091 01a0 FF       		.byte	-1
 4092 01a1 FF       		.byte	-1
 4093 01a2 FF       		.byte	-1
 4094 01a3 FF       		.byte	-1
 4095 01a4 FF       		.byte	-1
 4096 01a5 FF       		.byte	-1
 4097 01a6 FF       		.byte	-1
 4098 01a7 FF       		.byte	-1
 4099 01a8 FF       		.byte	-1
 4100 01a9 FF       		.byte	-1
 4101 01aa FF       		.byte	-1
 4102 01ab FF       		.byte	-1
 4103 01ac FF       		.byte	-1
 4104 01ad FF       		.byte	-1
 4105 01ae FF       		.byte	-1
 4106 01af FF       		.byte	-1
 4107 01b0 FF       		.byte	-1
 4108 01b1 FF       		.byte	-1
 4109 01b2 FF       		.byte	-1
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 101


 4110 01b3 FF       		.byte	-1
 4111 01b4 FF       		.byte	-1
 4112 01b5 FF       		.byte	-1
 4113 01b6 FF       		.byte	-1
 4114 01b7 FF       		.byte	-1
 4115 01b8 FF       		.byte	-1
 4116 01b9 FF       		.byte	-1
 4117 01ba FF       		.byte	-1
 4118 01bb FF       		.byte	-1
 4119 01bc FF       		.byte	-1
 4120 01bd FF       		.byte	-1
 4121 01be FF       		.byte	-1
 4122 01bf FF       		.byte	-1
 4123 01c0 FF       		.byte	-1
 4124 01c1 FF       		.byte	-1
 4125 01c2 FF       		.byte	-1
 4126 01c3 FF       		.byte	-1
 4127 01c4 FF       		.byte	-1
 4128 01c5 FF       		.byte	-1
 4129 01c6 FF       		.byte	-1
 4130 01c7 FF       		.byte	-1
 4131 01c8 FF       		.byte	-1
 4132 01c9 FF       		.byte	-1
 4133 01ca FF       		.byte	-1
 4134 01cb FF       		.byte	-1
 4135 01cc FF       		.byte	-1
 4136 01cd FF       		.byte	-1
 4137 01ce FF       		.byte	-1
 4138 01cf FF       		.byte	-1
 4139 01d0 FF       		.byte	-1
 4140 01d1 FF       		.byte	-1
 4141 01d2 FF       		.byte	-1
 4142 01d3 FF       		.byte	-1
 4143 01d4 FF       		.byte	-1
 4144 01d5 FF       		.byte	-1
 4145 01d6 FF       		.byte	-1
 4146 01d7 FF       		.byte	-1
 4147 01d8 FF       		.byte	-1
 4148 01d9 FF       		.byte	-1
 4149 01da FF       		.byte	-1
 4150 01db FF       		.byte	-1
 4151 01dc FF       		.byte	-1
 4152 01dd FF       		.byte	-1
 4153 01de FF       		.byte	-1
 4154 01df FF       		.byte	-1
 4155 01e0 FF       		.byte	-1
 4156 01e1 FF       		.byte	-1
 4157 01e2 FF       		.byte	-1
 4158 01e3 FF       		.byte	-1
 4159 01e4 FF       		.byte	-1
 4160 01e5 FF       		.byte	-1
 4161 01e6 FF       		.byte	-1
 4162 01e7 FF       		.byte	-1
 4163 01e8 FF       		.byte	-1
 4164 01e9 FF       		.byte	-1
 4165 01ea FF       		.byte	-1
 4166 01eb FF       		.byte	-1
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 102


 4167 01ec FF       		.byte	-1
 4168 01ed FF       		.byte	-1
 4169 01ee FF       		.byte	-1
 4170 01ef FF       		.byte	-1
 4171 01f0 FF       		.byte	-1
 4172 01f1 FF       		.byte	-1
 4173 01f2 FF       		.byte	-1
 4174 01f3 FF       		.byte	-1
 4175 01f4 FF       		.byte	-1
 4176 01f5 FF       		.byte	-1
 4177 01f6 FF       		.byte	-1
 4178 01f7 FF       		.byte	-1
 4179 01f8 FF       		.byte	-1
 4180 01f9 FF       		.byte	-1
 4181 01fa FF       		.byte	-1
 4182 01fb FF       		.byte	-1
 4183 01fc FF       		.byte	-1
 4184 01fd FF       		.byte	-1
 4185 01fe FF       		.byte	-1
 4186 01ff FF       		.byte	-1
 4187 0200 00       		.byte	0
 4188 0201 00       		.byte	0
 4189 0202 00       		.byte	0
 4190 0203 00       		.byte	0
 4191 0204 00       		.byte	0
 4192 0205 00       		.byte	0
 4193 0206 00       		.byte	0
 4194 0207 00       		.byte	0
 4195 0208 00       		.byte	0
 4196 0209 00       		.byte	0
 4197 020a 00       		.byte	0
 4198 020b 00       		.byte	0
 4199 020c 00       		.byte	0
 4200 020d 00       		.byte	0
 4201 020e 00       		.byte	0
 4202 020f 00       		.byte	0
 4203 0210 00       		.byte	0
 4204 0211 00       		.byte	0
 4205 0212 00       		.byte	0
 4206 0213 00       		.byte	0
 4207 0214 00       		.byte	0
 4208 0215 00       		.byte	0
 4209 0216 00       		.byte	0
 4210 0217 00       		.byte	0
 4211 0218 00       		.byte	0
 4212 0219 00       		.byte	0
 4213 021a 00       		.byte	0
 4214 021b 00       		.byte	0
 4215 021c 00       		.byte	0
 4216 021d 00       		.byte	0
 4217 021e 00       		.byte	0
 4218 021f 00       		.byte	0
 4219 0220 00       		.byte	0
 4220 0221 00       		.byte	0
 4221 0222 00       		.byte	0
 4222 0223 00       		.byte	0
 4223 0224 00       		.byte	0
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 103


 4224 0225 00       		.byte	0
 4225 0226 00       		.byte	0
 4226 0227 00       		.byte	0
 4227 0228 00       		.byte	0
 4228 0229 00       		.byte	0
 4229 022a 00       		.byte	0
 4230 022b 00       		.byte	0
 4231 022c 00       		.byte	0
 4232 022d 00       		.byte	0
 4233 022e 00       		.byte	0
 4234 022f 00       		.byte	0
 4235 0230 00       		.byte	0
 4236 0231 00       		.byte	0
 4237 0232 00       		.byte	0
 4238 0233 00       		.byte	0
 4239 0234 00       		.byte	0
 4240 0235 00       		.byte	0
 4241 0236 00       		.byte	0
 4242 0237 00       		.byte	0
 4243 0238 00       		.byte	0
 4244 0239 00       		.byte	0
 4245 023a 00       		.byte	0
 4246 023b 00       		.byte	0
 4247 023c 00       		.byte	0
 4248 023d 00       		.byte	0
 4249 023e 00       		.byte	0
 4250 023f 00       		.byte	0
 4251 0240 00       		.byte	0
 4252 0241 00       		.byte	0
 4253 0242 00       		.byte	0
 4254 0243 00       		.byte	0
 4255 0244 00       		.byte	0
 4256 0245 00       		.byte	0
 4257 0246 00       		.byte	0
 4258 0247 00       		.byte	0
 4259 0248 00       		.byte	0
 4260 0249 00       		.byte	0
 4261 024a 00       		.byte	0
 4262 024b 00       		.byte	0
 4263 024c 00       		.byte	0
 4264 024d 00       		.byte	0
 4265 024e 00       		.byte	0
 4266 024f 00       		.byte	0
 4267 0250 00       		.byte	0
 4268 0251 00       		.byte	0
 4269 0252 00       		.byte	0
 4270 0253 00       		.byte	0
 4271 0254 00       		.byte	0
 4272 0255 00       		.byte	0
 4273 0256 00       		.byte	0
 4274 0257 00       		.byte	0
 4275 0258 00       		.byte	0
 4276 0259 00       		.byte	0
 4277 025a 00       		.byte	0
 4278 025b 00       		.byte	0
 4279 025c 00       		.byte	0
 4280 025d 00       		.byte	0
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 104


 4281 025e 00       		.byte	0
 4282 025f 00       		.byte	0
 4283 0260 00       		.byte	0
 4284 0261 00       		.byte	0
 4285 0262 00       		.byte	0
 4286 0263 00       		.byte	0
 4287 0264 00       		.byte	0
 4288 0265 00       		.byte	0
 4289 0266 00       		.byte	0
 4290 0267 00       		.byte	0
 4291 0268 00       		.byte	0
 4292 0269 00       		.byte	0
 4293 026a 00       		.byte	0
 4294 026b 00       		.byte	0
 4295 026c 00       		.byte	0
 4296 026d 00       		.byte	0
 4297 026e 00       		.byte	0
 4298 026f 00       		.byte	0
 4299 0270 00       		.byte	0
 4300 0271 00       		.byte	0
 4301 0272 00       		.byte	0
 4302 0273 00       		.byte	0
 4303 0274 00       		.byte	0
 4304 0275 00       		.byte	0
 4305 0276 00       		.byte	0
 4306 0277 00       		.byte	0
 4307 0278 00       		.byte	0
 4308 0279 00       		.byte	0
 4309 027a 00       		.byte	0
 4310 027b 00       		.byte	0
 4311 027c 00       		.byte	0
 4312 027d 00       		.byte	0
 4313 027e 00       		.byte	0
 4314 027f 00       		.byte	0
 4315 0280 00       		.byte	0
 4316 0281 00       		.byte	0
 4317 0282 00       		.byte	0
 4318 0283 00       		.byte	0
 4319 0284 00       		.byte	0
 4320 0285 00       		.byte	0
 4321 0286 00       		.byte	0
 4322 0287 00       		.byte	0
 4323 0288 00       		.byte	0
 4324 0289 00       		.byte	0
 4325 028a 00       		.byte	0
 4326 028b 00       		.byte	0
 4327 028c 00       		.byte	0
 4328 028d 00       		.byte	0
 4329 028e 00       		.byte	0
 4330 028f 00       		.byte	0
 4331 0290 00       		.byte	0
 4332 0291 00       		.byte	0
 4333 0292 00       		.byte	0
 4334 0293 00       		.byte	0
 4335 0294 00       		.byte	0
 4336 0295 00       		.byte	0
 4337 0296 00       		.byte	0
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 105


 4338 0297 00       		.byte	0
 4339 0298 00       		.byte	0
 4340 0299 00       		.byte	0
 4341 029a 00       		.byte	0
 4342 029b 00       		.byte	0
 4343 029c 00       		.byte	0
 4344 029d 00       		.byte	0
 4345 029e 00       		.byte	0
 4346 029f 00       		.byte	0
 4347 02a0 00       		.byte	0
 4348 02a1 00       		.byte	0
 4349 02a2 00       		.byte	0
 4350 02a3 00       		.byte	0
 4351 02a4 00       		.byte	0
 4352 02a5 00       		.byte	0
 4353 02a6 00       		.byte	0
 4354 02a7 00       		.byte	0
 4355 02a8 00       		.byte	0
 4356 02a9 00       		.byte	0
 4357 02aa 00       		.byte	0
 4358 02ab 00       		.byte	0
 4359 02ac 00       		.byte	0
 4360 02ad 00       		.byte	0
 4361 02ae 00       		.byte	0
 4362 02af 00       		.byte	0
 4363 02b0 00       		.byte	0
 4364 02b1 00       		.byte	0
 4365 02b2 00       		.byte	0
 4366 02b3 00       		.byte	0
 4367 02b4 00       		.byte	0
 4368 02b5 00       		.byte	0
 4369 02b6 00       		.byte	0
 4370 02b7 00       		.byte	0
 4371 02b8 00       		.byte	0
 4372 02b9 00       		.byte	0
 4373 02ba 00       		.byte	0
 4374 02bb 00       		.byte	0
 4375 02bc 00       		.byte	0
 4376 02bd 00       		.byte	0
 4377 02be 00       		.byte	0
 4378 02bf 00       		.byte	0
 4379 02c0 00       		.byte	0
 4380 02c1 00       		.byte	0
 4381 02c2 00       		.byte	0
 4382 02c3 00       		.byte	0
 4383 02c4 00       		.byte	0
 4384 02c5 00       		.byte	0
 4385 02c6 00       		.byte	0
 4386 02c7 00       		.byte	0
 4387 02c8 00       		.byte	0
 4388 02c9 00       		.byte	0
 4389 02ca 00       		.byte	0
 4390 02cb 00       		.byte	0
 4391 02cc 00       		.byte	0
 4392 02cd 00       		.byte	0
 4393 02ce 00       		.byte	0
 4394 02cf 00       		.byte	0
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 106


 4395 02d0 00       		.byte	0
 4396 02d1 00       		.byte	0
 4397 02d2 00       		.byte	0
 4398 02d3 00       		.byte	0
 4399 02d4 00       		.byte	0
 4400 02d5 00       		.byte	0
 4401 02d6 00       		.byte	0
 4402 02d7 00       		.byte	0
 4403 02d8 00       		.byte	0
 4404 02d9 00       		.byte	0
 4405 02da 00       		.byte	0
 4406 02db 00       		.byte	0
 4407 02dc 00       		.byte	0
 4408 02dd 00       		.byte	0
 4409 02de 00       		.byte	0
 4410 02df 00       		.byte	0
 4411 02e0 00       		.byte	0
 4412 02e1 00       		.byte	0
 4413 02e2 00       		.byte	0
 4414 02e3 00       		.byte	0
 4415 02e4 00       		.byte	0
 4416 02e5 00       		.byte	0
 4417 02e6 00       		.byte	0
 4418 02e7 00       		.byte	0
 4419 02e8 00       		.byte	0
 4420 02e9 00       		.byte	0
 4421 02ea 00       		.byte	0
 4422 02eb 00       		.byte	0
 4423 02ec 00       		.byte	0
 4424 02ed 00       		.byte	0
 4425 02ee 00       		.byte	0
 4426 02ef 00       		.byte	0
 4427 02f0 00       		.byte	0
 4428 02f1 00       		.byte	0
 4429 02f2 00       		.byte	0
 4430 02f3 00       		.byte	0
 4431 02f4 00       		.byte	0
 4432 02f5 00       		.byte	0
 4433 02f6 00       		.byte	0
 4434 02f7 00       		.byte	0
 4435 02f8 00       		.byte	0
 4436 02f9 00       		.byte	0
 4437 02fa 00       		.byte	0
 4438 02fb 00       		.byte	0
 4439 02fc 00       		.byte	0
 4440 02fd 00       		.byte	0
 4441 02fe 00       		.byte	0
 4442 02ff 00       		.byte	0
 4443 0300 00       		.byte	0
 4444 0301 00       		.byte	0
 4445 0302 00       		.byte	0
 4446 0303 00       		.byte	0
 4447 0304 00       		.byte	0
 4448 0305 00       		.byte	0
 4449 0306 00       		.byte	0
 4450 0307 00       		.byte	0
 4451 0308 00       		.byte	0
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 107


 4452 0309 00       		.byte	0
 4453 030a 00       		.byte	0
 4454 030b 00       		.byte	0
 4455 030c 00       		.byte	0
 4456 030d 00       		.byte	0
 4457 030e 00       		.byte	0
 4458 030f 00       		.byte	0
 4459 0310 00       		.byte	0
 4460 0311 00       		.byte	0
 4461 0312 00       		.byte	0
 4462 0313 00       		.byte	0
 4463 0314 00       		.byte	0
 4464 0315 00       		.byte	0
 4465 0316 00       		.byte	0
 4466 0317 00       		.byte	0
 4467 0318 00       		.byte	0
 4468 0319 00       		.byte	0
 4469 031a 00       		.byte	0
 4470 031b 00       		.byte	0
 4471 031c 00       		.byte	0
 4472 031d 00       		.byte	0
 4473 031e 00       		.byte	0
 4474 031f 00       		.byte	0
 4475 0320 00       		.byte	0
 4476 0321 00       		.byte	0
 4477 0322 00       		.byte	0
 4478 0323 00       		.byte	0
 4479 0324 00       		.byte	0
 4480 0325 00       		.byte	0
 4481 0326 00       		.byte	0
 4482 0327 00       		.byte	0
 4483 0328 00       		.byte	0
 4484 0329 00       		.byte	0
 4485 032a 00       		.byte	0
 4486 032b 00       		.byte	0
 4487 032c 00       		.byte	0
 4488 032d 00       		.byte	0
 4489 032e 00       		.byte	0
 4490 032f 00       		.byte	0
 4491 0330 00       		.byte	0
 4492 0331 00       		.byte	0
 4493 0332 00       		.byte	0
 4494 0333 00       		.byte	0
 4495 0334 00       		.byte	0
 4496 0335 00       		.byte	0
 4497 0336 00       		.byte	0
 4498 0337 00       		.byte	0
 4499 0338 00       		.byte	0
 4500 0339 00       		.byte	0
 4501 033a 00       		.byte	0
 4502 033b 00       		.byte	0
 4503 033c 00       		.byte	0
 4504 033d 00       		.byte	0
 4505 033e 00       		.byte	0
 4506 033f 00       		.byte	0
 4507 0340 00       		.byte	0
 4508 0341 00       		.byte	0
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 108


 4509 0342 00       		.byte	0
 4510 0343 00       		.byte	0
 4511 0344 00       		.byte	0
 4512 0345 00       		.byte	0
 4513 0346 00       		.byte	0
 4514 0347 00       		.byte	0
 4515 0348 00       		.byte	0
 4516 0349 00       		.byte	0
 4517 034a 00       		.byte	0
 4518 034b 00       		.byte	0
 4519 034c 00       		.byte	0
 4520 034d 00       		.byte	0
 4521 034e 00       		.byte	0
 4522 034f 00       		.byte	0
 4523 0350 00       		.byte	0
 4524 0351 00       		.byte	0
 4525 0352 00       		.byte	0
 4526 0353 00       		.byte	0
 4527 0354 00       		.byte	0
 4528 0355 00       		.byte	0
 4529 0356 00       		.byte	0
 4530 0357 00       		.byte	0
 4531 0358 00       		.byte	0
 4532 0359 00       		.byte	0
 4533 035a 00       		.byte	0
 4534 035b 00       		.byte	0
 4535 035c 00       		.byte	0
 4536 035d 00       		.byte	0
 4537 035e 00       		.byte	0
 4538 035f 00       		.byte	0
 4539 0360 00       		.byte	0
 4540 0361 00       		.byte	0
 4541 0362 00       		.byte	0
 4542 0363 00       		.byte	0
 4543 0364 00       		.byte	0
 4544 0365 00       		.byte	0
 4545 0366 00       		.byte	0
 4546 0367 00       		.byte	0
 4547 0368 00       		.byte	0
 4548 0369 00       		.byte	0
 4549 036a 00       		.byte	0
 4550 036b 00       		.byte	0
 4551 036c 00       		.byte	0
 4552 036d 00       		.byte	0
 4553 036e 00       		.byte	0
 4554 036f 00       		.byte	0
 4555 0370 00       		.byte	0
 4556 0371 00       		.byte	0
 4557 0372 00       		.byte	0
 4558 0373 00       		.byte	0
 4559 0374 00       		.byte	0
 4560 0375 00       		.byte	0
 4561 0376 00       		.byte	0
 4562 0377 00       		.byte	0
 4563 0378 00       		.byte	0
 4564 0379 00       		.byte	0
 4565 037a 00       		.byte	0
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 109


 4566 037b 00       		.byte	0
 4567 037c 00       		.byte	0
 4568 037d 00       		.byte	0
 4569 037e 00       		.byte	0
 4570 037f 00       		.byte	0
 4571 0380 00       		.byte	0
 4572 0381 00       		.byte	0
 4573 0382 00       		.byte	0
 4574 0383 00       		.byte	0
 4575 0384 00       		.byte	0
 4576 0385 00       		.byte	0
 4577 0386 00       		.byte	0
 4578 0387 00       		.byte	0
 4579 0388 00       		.byte	0
 4580 0389 00       		.byte	0
 4581 038a 00       		.byte	0
 4582 038b 00       		.byte	0
 4583 038c 00       		.byte	0
 4584 038d 00       		.byte	0
 4585 038e 00       		.byte	0
 4586 038f 00       		.byte	0
 4587 0390 00       		.byte	0
 4588 0391 00       		.byte	0
 4589 0392 00       		.byte	0
 4590 0393 00       		.byte	0
 4591 0394 00       		.byte	0
 4592 0395 00       		.byte	0
 4593 0396 00       		.byte	0
 4594 0397 00       		.byte	0
 4595 0398 00       		.byte	0
 4596 0399 00       		.byte	0
 4597 039a 00       		.byte	0
 4598 039b 00       		.byte	0
 4599 039c 00       		.byte	0
 4600 039d 00       		.byte	0
 4601 039e 00       		.byte	0
 4602 039f 00       		.byte	0
 4603 03a0 00       		.byte	0
 4604 03a1 00       		.byte	0
 4605 03a2 00       		.byte	0
 4606 03a3 00       		.byte	0
 4607 03a4 00       		.byte	0
 4608 03a5 00       		.byte	0
 4609 03a6 00       		.byte	0
 4610 03a7 00       		.byte	0
 4611 03a8 00       		.byte	0
 4612 03a9 00       		.byte	0
 4613 03aa 00       		.byte	0
 4614 03ab 00       		.byte	0
 4615 03ac 00       		.byte	0
 4616 03ad 00       		.byte	0
 4617 03ae 00       		.byte	0
 4618 03af 00       		.byte	0
 4619 03b0 00       		.byte	0
 4620 03b1 00       		.byte	0
 4621 03b2 00       		.byte	0
 4622 03b3 00       		.byte	0
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 110


 4623 03b4 00       		.byte	0
 4624 03b5 00       		.byte	0
 4625 03b6 00       		.byte	0
 4626 03b7 00       		.byte	0
 4627 03b8 00       		.byte	0
 4628 03b9 00       		.byte	0
 4629 03ba 00       		.byte	0
 4630 03bb 00       		.byte	0
 4631 03bc 00       		.byte	0
 4632 03bd 00       		.byte	0
 4633 03be 00       		.byte	0
 4634 03bf 00       		.byte	0
 4635 03c0 00       		.byte	0
 4636 03c1 00       		.byte	0
 4637 03c2 00       		.byte	0
 4638 03c3 00       		.byte	0
 4639 03c4 00       		.byte	0
 4640 03c5 00       		.byte	0
 4641 03c6 00       		.byte	0
 4642 03c7 00       		.byte	0
 4643 03c8 00       		.byte	0
 4644 03c9 00       		.byte	0
 4645 03ca 00       		.byte	0
 4646 03cb 00       		.byte	0
 4647 03cc 00       		.byte	0
 4648 03cd 00       		.byte	0
 4649 03ce 00       		.byte	0
 4650 03cf 00       		.byte	0
 4651 03d0 00       		.byte	0
 4652 03d1 00       		.byte	0
 4653 03d2 00       		.byte	0
 4654 03d3 00       		.byte	0
 4655 03d4 00       		.byte	0
 4656 03d5 00       		.byte	0
 4657 03d6 00       		.byte	0
 4658 03d7 00       		.byte	0
 4659 03d8 00       		.byte	0
 4660 03d9 00       		.byte	0
 4661 03da 00       		.byte	0
 4662 03db 00       		.byte	0
 4663 03dc 00       		.byte	0
 4664 03dd 00       		.byte	0
 4665 03de 00       		.byte	0
 4666 03df 00       		.byte	0
 4667 03e0 00       		.byte	0
 4668 03e1 00       		.byte	0
 4669 03e2 00       		.byte	0
 4670 03e3 00       		.byte	0
 4671 03e4 00       		.byte	0
 4672 03e5 00       		.byte	0
 4673 03e6 00       		.byte	0
 4674 03e7 00       		.byte	0
 4675 03e8 00       		.byte	0
 4676 03e9 00       		.byte	0
 4677 03ea 00       		.byte	0
 4678 03eb 00       		.byte	0
 4679 03ec 00       		.byte	0
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 111


 4680 03ed 00       		.byte	0
 4681 03ee 00       		.byte	0
 4682 03ef 00       		.byte	0
 4683 03f0 00       		.byte	0
 4684 03f1 00       		.byte	0
 4685 03f2 00       		.byte	0
 4686 03f3 00       		.byte	0
 4687 03f4 00       		.byte	0
 4688 03f5 00       		.byte	0
 4689 03f6 00       		.byte	0
 4690 03f7 00       		.byte	0
 4691 03f8 00       		.byte	0
 4692 03f9 00       		.byte	0
 4693 03fa 00       		.byte	0
 4694 03fb 00       		.byte	0
 4695 03fc 00       		.byte	0
 4696 03fd 00       		.byte	0
 4697 03fe 00       		.byte	0
 4698 03ff 00       		.byte	0
 4699              		.section	.rodata.Ipsf,"a"
 4700              		.align	2
 4703              	Ipsf:
 4704 0000 0020     		.short	8192
 4705 0002 622C     		.short	11362
 4706 0004 CF29     		.short	10703
 4707 0006 A025     		.short	9632
 4708 0008 0020     		.short	8192
 4709 000a 2419     		.short	6436
 4710 000c 5111     		.short	4433
 4711 000e D408     		.short	2260
 4712 0010 622C     		.short	11362
 4713 0012 903D     		.short	15760
 4714 0014 FE39     		.short	14846
 4715 0016 3134     		.short	13361
 4716 0018 622C     		.short	11362
 4717 001a DF22     		.short	8927
 4718 001c 0518     		.short	6149
 4719 001e 3E0C     		.short	3134
 4720 0020 CF29     		.short	10703
 4721 0022 FE39     		.short	14846
 4722 0024 A036     		.short	13984
 4723 0026 2931     		.short	12585
 4724 0028 CF29     		.short	10703
 4725 002a D920     		.short	8409
 4726 002c A016     		.short	5792
 4727 002e 890B     		.short	2953
 4728 0030 A025     		.short	9632
 4729 0032 3134     		.short	13361
 4730 0034 2931     		.short	12585
 4731 0036 3E2C     		.short	11326
 4732 0038 A025     		.short	9632
 4733 003a 901D     		.short	7568
 4734 003c 5D14     		.short	5213
 4735 003e 610A     		.short	2657
 4736 0040 0020     		.short	8192
 4737 0042 622C     		.short	11362
 4738 0044 CF29     		.short	10703
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 112


 4739 0046 A025     		.short	9632
 4740 0048 0020     		.short	8192
 4741 004a 2419     		.short	6436
 4742 004c 5111     		.short	4433
 4743 004e D408     		.short	2260
 4744 0050 2419     		.short	6436
 4745 0052 DF22     		.short	8927
 4746 0054 D920     		.short	8409
 4747 0056 901D     		.short	7568
 4748 0058 2419     		.short	6436
 4749 005a C113     		.short	5057
 4750 005c 9B0D     		.short	3483
 4751 005e EF06     		.short	1775
 4752 0060 5111     		.short	4433
 4753 0062 0518     		.short	6149
 4754 0064 A016     		.short	5792
 4755 0066 5D14     		.short	5213
 4756 0068 5111     		.short	4433
 4757 006a 9B0D     		.short	3483
 4758 006c 5F09     		.short	2399
 4759 006e C704     		.short	1223
 4760 0070 D408     		.short	2260
 4761 0072 3E0C     		.short	3134
 4762 0074 890B     		.short	2953
 4763 0076 610A     		.short	2657
 4764 0078 D408     		.short	2260
 4765 007a EF06     		.short	1775
 4766 007c C704     		.short	1223
 4767 007e 6F02     		.short	623
 4768              		.section	.rodata.Zig,"a"
 4769              		.align	2
 4772              	Zig:
 4773 0000 00010810 		.ascii	"\000\001\010\020\011\002\003\012\021\030 \031\022\013"
 4773      0902030A 
 4773      11182019 
 4773      120B
 4774 000e 04050C13 		.ascii	"\004\005\014\023\032!(0)\"\033\024\015\006\007\016\025"
 4774      1A212830 
 4774      29221B14 
 4774      0D06070E 
 4774      15
 4775 001f 1C232A31 		.ascii	"\034#*1892+$\035\026\017\027\036%,3:;4-&\037'.5<=6/"
 4775      3839322B 
 4775      241D160F 
 4775      171E252C 
 4775      333A3B34 
 4776 003d 373E3F   		.ascii	"7>?"
 4777              		.text
 4778              	.Letext0:
 4779              		.file 2 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 4780              		.file 3 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 4781              		.file 4 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/lib/gcc/arm-none
 4782              		.file 5 "lvgl/src/extra/libs/sjpg/tjpgd.h"
 4783              		.file 6 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 4784              		.file 7 "<built-in>"
ARM GAS  C:\usertemp\ccNGkTCU.s 			page 113


DEFINED SYMBOLS
                            *ABS*:00000000 tjpgd.c
C:\usertemp\ccNGkTCU.s:20     .text.alloc_pool:00000000 $t
C:\usertemp\ccNGkTCU.s:25     .text.alloc_pool:00000000 alloc_pool
C:\usertemp\ccNGkTCU.s:77     .text.create_qt_tbl:00000000 $t
C:\usertemp\ccNGkTCU.s:82     .text.create_qt_tbl:00000000 create_qt_tbl
C:\usertemp\ccNGkTCU.s:210    .text.create_qt_tbl:0000006c $d
C:\usertemp\ccNGkTCU.s:4772   .rodata.Zig:00000000 Zig
C:\usertemp\ccNGkTCU.s:4703   .rodata.Ipsf:00000000 Ipsf
C:\usertemp\ccNGkTCU.s:216    .text.create_huffman_tbl:00000000 $t
C:\usertemp\ccNGkTCU.s:221    .text.create_huffman_tbl:00000000 create_huffman_tbl
C:\usertemp\ccNGkTCU.s:504    .text.huffext:00000000 $t
C:\usertemp\ccNGkTCU.s:509    .text.huffext:00000000 huffext
C:\usertemp\ccNGkTCU.s:772    .text.bitext:00000000 $t
C:\usertemp\ccNGkTCU.s:777    .text.bitext:00000000 bitext
C:\usertemp\ccNGkTCU.s:958    .text.restart:00000000 $t
C:\usertemp\ccNGkTCU.s:963    .text.restart:00000000 restart
C:\usertemp\ccNGkTCU.s:1106   .text.block_idct:00000000 $t
C:\usertemp\ccNGkTCU.s:1111   .text.block_idct:00000000 block_idct
C:\usertemp\ccNGkTCU.s:1576   .text.block_idct:000001c8 $d
C:\usertemp\ccNGkTCU.s:3674   .rodata.Clip8:00000000 Clip8
C:\usertemp\ccNGkTCU.s:1581   .text.mcu_output:00000000 $t
C:\usertemp\ccNGkTCU.s:1586   .text.mcu_output:00000000 mcu_output
C:\usertemp\ccNGkTCU.s:2350   .text.mcu_output:00000328 $d
C:\usertemp\ccNGkTCU.s:2355   .text.mcu_load:00000000 $t
C:\usertemp\ccNGkTCU.s:2360   .text.mcu_load:00000000 mcu_load
C:\usertemp\ccNGkTCU.s:2770   .text.mcu_load:00000180 $d
C:\usertemp\ccNGkTCU.s:2775   .text.jd_prepare:00000000 $t
C:\usertemp\ccNGkTCU.s:2781   .text.jd_prepare:00000000 jd_prepare
C:\usertemp\ccNGkTCU.s:3494   .text.jd_prepare:00000304 $d
C:\usertemp\ccNGkTCU.s:3499   .text.jd_decomp:00000000 $t
C:\usertemp\ccNGkTCU.s:3505   .text.jd_decomp:00000000 jd_decomp
C:\usertemp\ccNGkTCU.s:3671   .rodata.Clip8:00000000 $d
C:\usertemp\ccNGkTCU.s:4700   .rodata.Ipsf:00000000 $d
C:\usertemp\ccNGkTCU.s:4769   .rodata.Zig:00000000 $d

UNDEFINED SYMBOLS
memset
