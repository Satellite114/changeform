ARM GAS  C:\usertemp\ccGJG3pI.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"tasks.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c"
  19              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	prvTaskIsTaskSuspended:
  26              	.LVL0:
  27              	.LFB15:
   1:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Standard includes. */
  29:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <stdlib.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <string.h>
  31:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 2


  32:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** task.h is included from an application file. */
  35:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  37:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* FreeRTOS includes. */
  38:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "FreeRTOS.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "task.h"
  40:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "timers.h"
  41:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "stack_macros.h"
  42:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  44:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  45:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** for the header files above, but not in this file, in order to generate the
  46:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** correct privileged Vs unprivileged linkage and placement. */
  47:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  48:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  49:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  50:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** functions but without including stdio.h here. */
  51:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  52:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  53:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  54:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  56:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#include <stdio.h>
  57:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
  60:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  61:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed just because a higher priority task has been woken. */
  62:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
  63:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
  64:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  65:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
  66:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  68:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
  69:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
  70:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
  71:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
  73:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  74:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
  75:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  76:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
  77:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Bits used to recored how a task's stack and TCB were allocated. */
  79:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
  80:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
  81:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
  82:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  83:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* If any of the following are set then task stacks are filled with a known
  84:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** value so the high water mark can be determined.  If none of the following are
  85:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** set then don't fill the stack so there is no unnecessary dependency on memset. */
  86:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTas
  87:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	1
  88:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 3


  89:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	0
  90:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
  91:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  92:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
  93:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
  94:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  95:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskRUNNING_CHAR		( 'X' )
  96:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
  97:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
  98:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
  99:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * global, rather than file scope.
 104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define static
 107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifndef configIDLE_TASK_NAME
 112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define configIDLE_TASK_NAME "IDLE"
 113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	microcontroller architecture. */
 120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	state task. */
 123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
 128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			--uxTopPriority;																			\
 142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
 145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 4


 146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	being used. */
 155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	architecture being used. */
 163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																								\
 171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
 185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** count overflows. */
 198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {																									\
 200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t *pxTemp;																					\
 201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 5


 203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xNumOfOverflows++;																				\
 209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? pxCurrentTCB : ( pxHandle ) )
 232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** to its original value when it is released. */
 241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
 242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
 244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * (the task's run time environment, including register values)
 251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef struct tskTaskControlBlock 			/* The old naming convention is used to prevent breaking kern
 253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 6


 260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the highest valid address for the stack. */
 268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		void			*pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
 299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks.
 304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
 306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for additional information. */
 307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		struct	_reent xNewLib_reent;
 308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* See the comments in FreeRTOS.h with the definition of
 316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 7


 317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolida
 318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t ucDelayAborted;
 323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_POSIX_ERRNO == 1 )
 326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		int iTaskErrno;
 327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** } tskTCB;
 330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef tskTCB TCB_t;
 334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** which static variables must be declared volatile. */
 337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------
 340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** xDelayedTaskList1 and xDelayedTaskList2 could be move to function scople but
 341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** doing so breaks some kernel aware debuggers and debuggers that rely on removing
 342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the static qualifier. */
 343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ];/*< Prioritised ready tasks
 344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;						/*< Delayed tasks. */
 345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;						/*< Delayed tasks (two lists are used - one f
 346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;				/*< Points to the delayed task list 
 347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task
 348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;						/*< Tasks that have been readied while the sc
 349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination;				/*< Tasks that have been deleted - but 
 353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Global POSIX errno. Its value is changed upon context switching to match
 364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the errno of the currently running task. */
 365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_POSIX_ERRNO == 1 )
 366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	int FreeRTOS_errno = 0;
 367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Other file private variables. --------------------------------*/
 370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
 371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) configINITIAL_TICK_COUNT
 372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
 373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 8


 374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xPendedTicks 			= ( TickType_t ) 0U;
 375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** accessed from a critical section. */
 389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Do not move these variables to function scope as doing so prevents the
 394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	code working with debuggers that need to remove the static qualifier. */
 395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -restore */
 401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationTickHook( void ); /*lint !e526 Symbol not defined as it is an application 
 414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* File private functions. --------------------------------*/
 424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /**
 426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is in any other state.
 429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 9


 431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * automatically upon the creation of the first task.
 439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * creation of the first user task.
 446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * including the stack pointed to by the TCB.
 458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and its TCB deleted.
 472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * either the current or the overflow delayed task list.
 478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * a suspended list, etc.).
 485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * NORMAL APPLICATION CODE.
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 10


 488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
 511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGE
 513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * set to a value other than 1.
 524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * will exit the Blocked state.
 534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*
 540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * human readable tables of task information.
 542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 */
 543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
 544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 11


 545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * dynamically to fill in the structure's members.
 550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName, 		/*lint !e971 Unqualified char types are allowed for strings a
 553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * under the control of the scheduler.
 563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * called by the function.
 570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer )
 588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configASSERT_DEFINED == 1 )
 596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Sanity check that the size of the structure used to declare a
 598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable of type StaticTask_t equals the size of the real task
 599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure. */
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			volatile size_t xSize = sizeof( StaticTask_t );
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 12


 602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configASSERT_DEFINED */
 605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
 610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function - use them. */
 611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 !e9087 Unusual cast is ok as the structures ar
 612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consoli
 615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = NULL;
 628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskHandl
 639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NULL ) )
 647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Store the stack location in the TCB. */
 654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 13


 659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pcName,
 666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									( uint32_t ) pxTaskDefinition->usStackDepth,
 667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pvParameters,
 668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->uxPriority,
 669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxCreatedTask, pxNewTCB,
 670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->xRegions );
 671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Store the stack location in the TCB. */
 701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Tasks can be created statically or dynamically, so note
 706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task had a statically allocated stack in case it is
 707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					later deleted.  The TCB was allocated dynamically. */
 708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pcName,
 714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
 715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pvParameters,
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 14


 716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->uxPriority,
 717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->xRegions );
 719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and 
 735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const configSTACK_DEPTH_TYPE usStackDepth,
 736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							void * const pvParameters,
 737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							UBaseType_t uxPriority,
 738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask )
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the TCB then the stack. */
 746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allocation is being used. */
 751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				be deleted later if required. */
 758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxNewTCB );
 764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB = NULL;
 765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxStack;
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 15


 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079
 774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxStack != NULL )
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the TCB. */
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returne
 779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB != NULL )
 781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Store the stack location in the TCB. */
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
 786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it again. */
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxStack );
 790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = NULL;
 795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxNewTCB != NULL )
 800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e9029 !e731 Macro has been consoli
 802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 16


 830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions )
 832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		BaseType_t xRunPrivileged;
 839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	by the port. */
 862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configRECORD_STACK_HIGH_ADDRESS == 1 )
 871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Also record the stack's high address, which may assist
 873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			debugging. */
 874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxEndOfStack = pxTopOfStack;
 875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configRECORD_STACK_HIGH_ADDRESS */
 877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
 886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		performed. */
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 17


 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the task name in the TCB. */
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pcName != NULL )
 893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configMAX_TASK_NAME_LEN characters just in case the memory after the
 900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			string is not accessible (extremely unlikely). */
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pcName[ x ] == ( char ) 0x00 )
 902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				break;
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the name string is terminated in the case that the string length
 912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was greater or equal to configMAX_TASK_NAME_LEN. */
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The task has not been given a name, so just ensure there is a NULL
 918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		terminator when it is read out. */
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	remove the privilege bit if one is present. */
 924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 18


 944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Event lists are always in priority order. */
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
 975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xRegions;
 978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Initialise this task's Newlib reent structure.
1000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 19


1001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for additional information. */
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
1003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
1005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
1007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
1009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
1011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
1013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
1014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
1015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the top of stack variable is updated. */
1016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
1017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the port has capability to detect stack overflow,
1019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pass the stack end address to the stack initialization
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function as well. */
1021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portHAS_STACK_OVERFLOW_CHECKING == 1 )
1022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( portSTACK_GROWTH < 0 )
1024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pv
1026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else /* portSTACK_GROWTH */
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxEndOfStack, pxTaskCod
1030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* portSTACK_GROWTH */
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portHAS_STACK_OVERFLOW_CHECKING */
1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPriv
1036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portHAS_STACK_OVERFLOW_CHECKING */
1038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
1040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the port has capability to detect stack overflow,
1042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pass the stack end address to the stack initialization
1043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function as well. */
1044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portHAS_STACK_OVERFLOW_CHECKING == 1 )
1045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( portSTACK_GROWTH < 0 )
1047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxStack, pxTaskCode, pv
1049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else /* portSTACK_GROWTH */
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxNewTCB->pxEndOfStack, pxTaskCod
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* portSTACK_GROWTH */
1055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portHAS_STACK_OVERFLOW_CHECKING */
1057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 20


1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
1059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portHAS_STACK_OVERFLOW_CHECKING */
1061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
1063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxCreatedTask != NULL )
1065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
1067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
1080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	updated. */
1081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
1082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxCurrentNumberOfTasks++;
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
1085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
1087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the suspended state - make this the current task. */
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
1089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
1093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				initialisation required.  We will not recover if this call
1094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				fails, but we will report the failure. */
1095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseTaskLists();
1096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
1105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			current task if it is the highest priority task to be created
1106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			so far. */
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
1108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
1112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 21


1115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTaskNumber++;
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
1139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then it should run now. */
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being deleted. */
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 22


1172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list. */
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not return. */
1196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTaskNumber++;
1197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task itself, as a context switch to another task is required.
1202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the termination list and free up any memory allocated by
1204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Call the delete hook before portPRE_TASK_DELETE_HOOK() as
1213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK() does not return in the Win32 port. */
1214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELETE( pxTCB );
1215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				after which it is not possible to yield away from this task -
1219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				required. */
1221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELETE( pxTCB );
1227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
1228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 23


1229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that has just been deleted. */
1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been deleted. */
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xTimeToWake;
1260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
1267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			block. */
1270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick count has overflowed since this function was
1278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
1281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
1285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 24


1286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				tick time is less than the wake time. */
1296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
1299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 25


1343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
1347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
1350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY();
1352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task that is removed from the event list while the
1354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is resumed.
1357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				executing task. */
1360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_xTaskAbortDel
1385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eReturn;
1389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t const * pxStateList, *pxDelayedList, *pxOverflowedDelayedList;
1390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
1391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
1393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eRunning;
1398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 26


1400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxStateList = listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxDelayedList = pxDelayedTaskList;
1405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxOverflowedDelayedList = pxOverflowDelayedTaskList;
1406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ( pxStateList == pxDelayedList ) || ( pxStateList == pxOverflowedDelayedList ) )
1410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lists. */
1413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eBlocked;
1414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list.  Is it genuinely suspended or is it blocked
1421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					indefinitely? */
1422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#if( configUSE_TASK_NOTIFICATIONS == 1 )
1425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* The task does not appear on the event list item of
1427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							and of the RTOS objects, but could still be in the
1428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							blocked state if it is waiting on its notification
1429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							rather than waiting on an object. */
1430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
1432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								eReturn = eBlocked;
1433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
1434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
1435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
1436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								eReturn = eSuspended;
1437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
1438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
1440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							eReturn = eSuspended;
1442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
1444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						eReturn = eBlocked;
1448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the deleted
1456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 27


1457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					all. */
1458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					eReturn = eDeleted;
1459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Ready (including pending ready) state. */
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eReady;
1467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
1471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( const TaskHandle_t xTask )
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
1481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the task
1486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			that called uxTaskPriorityGet() that is being queried. */
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( const TaskHandle_t xTask )
1501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
1503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 28


1514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		https://www.freertos.org/RTOS-Cortex-M3-M4.html */
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being queried. */
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the new priority is valid. */
1549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being changed. */
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 29


1571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The priority change may have readied a task of higher
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority than the calling task. */
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of a task other than the currently
1585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						running task is being raised.  Is the priority being
1586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						raised above that of the running task? */
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xYieldRequired = pdTRUE;
1590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
1592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of the running task is being raised,
1599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but the running task must already be the highest
1600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority task able to run so no yield is required. */
1601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of the running task down means
1606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					there may now be another task of higher priority that
1607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is ready to execute. */
1608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldRequired = pdTRUE;
1609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of any other task down does not
1613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					require a yield as the running task must be above the
1614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new priority of the task being modified. */
1615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				before its uxPriority member is changed so the
1619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only change the priority being used if the task is not
1625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					currently using an inherited priority. */
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 30


1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority gets set whatever. */
1636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
1639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
1643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				being used for anything else. */
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing more than change its priority variable. However, if
1657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in the list appropriate to its new priority. */
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is currently in its ready list - remove before
1662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					adding it to it's new ready list.  As we are in a critical
1663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section we can do this even if the scheduler is suspended. */
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
1667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
1668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
1669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 31


1685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				optimised task selection is not being used. */
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being suspended. */
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			suspended list. */
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( configUSE_TASK_NOTIFICATIONS == 1 )
1740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 32


1742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task was blocked to wait for a notification, but is
1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					now suspended, so no notification was received. */
1745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
1746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is now in the Suspended state. */
1756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The current task has just been suspended. */
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be adjusted to point to a different task. */
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks ) /*lint !e931 Rig
1781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be set to point to it no matter what its relative priority
1785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is. */
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = NULL;
1787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vTaskSwitchContext();
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 33


1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
  28              		.loc 1 1806 2 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
  33              		.loc 1 1807 2 view .LVU1
1808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  34              		.loc 1 1808 2 view .LVU2
1809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		section. */
1812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTask );
  35              		.loc 1 1814 3 view .LVU3
  36 0000 28B1     		cbz	r0, .L8
  37              		.loc 1 1814 24 discriminator 2 view .LVU4
1815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  38              		.loc 1 1817 3 view .LVU5
  39              		.loc 1 1817 7 is_stmt 0 view .LVU6
  40 0002 4169     		ldr	r1, [r0, #20]
  41              		.loc 1 1817 5 view .LVU7
  42 0004 0C4A     		ldr	r2, .L10
  43 0006 9142     		cmp	r1, r2
  44 0008 0AD0     		beq	.L9
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  45              		.loc 1 1807 13 view .LVU8
  46 000a 0020     		movs	r0, #0
  47              	.LVL1:
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  48              		.loc 1 1807 13 view .LVU9
  49 000c 7047     		bx	lr
  50              	.LVL2:
  51              	.L8:
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  52              		.loc 1 1814 3 is_stmt 1 discriminator 1 view .LVU10
  53              	.LBB110:
  54              	.LBI110:
  55              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 34


   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 35


  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 36


 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 37


 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
  56              		.loc 2 191 30 view .LVU11
  57              	.LBB111:
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
  58              		.loc 2 193 1 view .LVU12
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
  59              		.loc 2 195 2 view .LVU13
  60              		.syntax unified
  61              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
  62 000e 4FF05003 			mov r3, #80												
  63 0012 83F31188 		msr basepri, r3											
  64 0016 BFF36F8F 		isb														
  65 001a BFF34F8F 		dsb														
  66              	
  67              	@ 0 "" 2
  68              		.thumb
  69              		.syntax unified
  70              	.L3:
  71              	.LBE111:
  72              	.LBE110:
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  73              		.loc 1 1814 3 discriminator 3 view .LVU14
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  74              		.loc 1 1814 3 discriminator 3 view .LVU15
  75 001e FEE7     		b	.L3
  76              	.L9:
1818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
  77              		.loc 1 1820 4 view .LVU16
  78              		.loc 1 1820 8 is_stmt 0 view .LVU17
  79 0020 836A     		ldr	r3, [r0, #40]
  80              		.loc 1 1820 6 view .LVU18
  81 0022 064A     		ldr	r2, .L10+4
  82 0024 9342     		cmp	r3, r2
  83 0026 02D0     		beq	.L6
1821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The
  84              		.loc 1 1824 5 is_stmt 1 view .LVU19
  85              		.loc 1 1824 7 is_stmt 0 view .LVU20
  86 0028 1BB1     		cbz	r3, .L7
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 38


1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  87              		.loc 1 1807 13 view .LVU21
  88 002a 0020     		movs	r0, #0
  89              	.LVL3:
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  90              		.loc 1 1807 13 view .LVU22
  91 002c 7047     		bx	lr
  92              	.LVL4:
  93              	.L6:
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  94              		.loc 1 1807 13 view .LVU23
  95 002e 0020     		movs	r0, #0
  96              	.LVL5:
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
  97              		.loc 1 1807 13 view .LVU24
  98 0030 7047     		bx	lr
  99              	.LVL6:
 100              	.L7:
1825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
 101              		.loc 1 1826 14 view .LVU25
 102 0032 0120     		movs	r0, #1
 103              	.LVL7:
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 104              		.loc 1 1840 28 is_stmt 1 view .LVU26
1841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 105              		.loc 1 1843 3 view .LVU27
1844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 106              		.loc 1 1844 2 is_stmt 0 view .LVU28
 107 0034 7047     		bx	lr
 108              	.L11:
 109 0036 00BF     		.align	2
 110              	.L10:
 111 0038 00000000 		.word	xSuspendedTaskList
 112 003c 00000000 		.word	xPendingReadyList
 113              		.cfi_endproc
 114              	.LFE15:
 116              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 117              		.align	1
 118              		.syntax unified
 119              		.thumb
 120              		.thumb_func
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 39


 122              	prvResetNextTaskUnblockTime:
 123              	.LFB41:
1845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
1854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		currently executing task. */
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTCB != pxCurrentTCB ) && ( pxTCB != NULL ) )
1861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The ready list can be accessed even if the scheduler is
1869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended because this is inside a critical section. */
1870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A higher priority task may have just been resumed. */
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but will leave the lists in the correct state for the
1878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						next yield. */
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 40


1900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		https://www.freertos.org/RTOS-Cortex-M3-M4.html */
1929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended list to the ready list directly. */
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldRequired = pdTRUE;
1945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 41


1957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unsuspended. */
1959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xYieldRequired;
1970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskStartScheduler( void )
1976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
1978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		address of the RAM then create the idle task. */
1988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
1991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												ulIdleTaskStackSize,
1992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
1993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												portPRIVILEGE_BIT, /* In effect ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), but tskIDLE_P
1994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskStackBuffer,
1995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
2000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
2004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
2007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
2009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
2010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configIDLE_TASK_NAME,
2011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configMINIMAL_STACK_SIZE,
2012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								( void * ) NULL,
2013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								portPRIVILEGE_BIT, /* In effect ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), but tskIDLE_PRIOR
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 42


2014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
2015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
2017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
2019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xReturn == pdPASS )
2021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
2023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_TIMERS */
2030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xReturn == pdPASS )
2032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* freertos_tasks_c_additions_init() should only be called if the user
2034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
2035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the only macro called by the function. */
2036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
2037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			freertos_tasks_c_additions_init();
2039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
2043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
2044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
2045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		starts to run. */
2047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
2048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to the task that will run first.
2053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
2054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for additional information. */
2055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
2062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
2064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
2065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
2066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is set to 0 and the following line fails to build then ensure you do not
2067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
2068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		FreeRTOSConfig.h file. */
2069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
2070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 43


2071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
2074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portable interface. */
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
2076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
2078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function will not return. */
2079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
2083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
2088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
2089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		or the timer task. */
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
2095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) xIdleTaskHandle;
2096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskEndScheduler( void )
2100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
2103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
2104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portDISABLE_INTERRUPTS();
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
2107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSuspendAll( void )
2111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
2113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
2114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
2115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	http://goo.gl/wu4acr */
2116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* portSOFRWARE_BARRIER() is only implemented for emulated/simulated ports that
2118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	do not otherwise exhibit real time behaviour. */
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portSOFTWARE_BARRIER();
2120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The scheduler is suspended if uxSchedulerSuspended is non-zero.  An increment
2122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is used to allow calls to vTaskSuspendAll() to nest. */
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	++uxSchedulerSuspended;
2124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Enforces ordering for ports and optimised compilers that may otherwise place
2126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the above increment elsewhere. */
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portMEMORY_BARRIER();
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 44


2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xReturn;
2136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
2139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
2141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		running. */
2142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
2150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
2154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
2155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
2156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
2157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
2158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
2159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
2172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
2173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			processed. */
2174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			idle priority.  This path can only be reached if
2180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
2181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 45


2185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
2209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		--uxSchedulerSuspended;
2211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				appropriate ready list. */
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					task then a yield must be performed. */
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					which may have prevented the next unblock time from being
2241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 46


2242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					important for low power tickless implementations, where
2243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
2245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				time. */
2252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
2254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xPendedCounts > ( TickType_t ) 0U )
2256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						do
2258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								xYieldPending = pdTRUE;
2262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
2264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							--xPendedCounts;
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( xPendedCounts > ( TickType_t ) 0U );
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xPendedTicks = 0;
2271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldPending != pdFALSE )
2279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 47


2299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xAlreadyYielded;
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
2307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTicks = xTickCount;
2312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xTicks;
2316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
2322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
2326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	link: https://www.freertos.org/RTOS-Cortex-M3-M4.html */
2338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTickCount;
2343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
2347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t. */
2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 48


2356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
2361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queried. */
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
2366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t x;
2376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cNextChar;
2377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xBreakLoop;
2378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );  /*lint !e9079 void * is used as this macro i
2384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as this macro is
2388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check each character in the name looking for a match or
2390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mismatch. */
2391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xBreakLoop = pdFALSE;
2392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Characters didn't match. */
2399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xBreakLoop = pdTRUE;
2400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else if( cNextChar == ( char ) 0x00 )
2402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Both strings terminated, a match must have been
2404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						found. */
2405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxReturn = pxNextTCB;
2406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xBreakLoop = pdTRUE;
2407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 49


2413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xBreakLoop != pdFALSE )
2414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxReturn != NULL )
2420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The handle has been found. */
2422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxReturn;
2433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t* pxTCB;
2444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the ready lists. */
2451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxQueue--;
2454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Found the handle. */
2459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the delayed lists. */
2465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 50


2470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
2473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the suspended list. */
2480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the deleted list. */
2490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxTCB;
2498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Ready state. */
2516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				do
2517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxQueue--;
2519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Blocked state. */
2525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 51


2527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task in the Suspended state. */
2540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
2541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
2551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
2553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
2556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pulTotalRunTime = 0;
2560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
2572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 52


2584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle;
2585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 1. */
2594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		each stepped tick. */
2601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount += xTicksToJump;
2603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCatchUpTicks( TickType_t xTicksToCatchUp )
2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xYieldRequired = pdFALSE;
2612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Must not be called with the scheduler suspended as the implementation
2614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	relies on xPendedTicks being wound down to 0 in xTaskResumeAll(). */
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended == 0 );
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Use xPendedTicks to mimic xTicksToCatchUp number of ticks occurring when
2618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the scheduler is suspended so the ticks are executed in xTaskResumeAll(). */
2619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vTaskSuspendAll();
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xPendedTicks += xTicksToCatchUp;
2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldRequired = xTaskResumeAll();
2622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xYieldRequired;
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB = xTask;
2632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
2635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			it is actually in the Blocked state. */
2640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 53


2641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
2643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended. */
2647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
2653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskENTER_CRITICAL();
2654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* This lets the task know it was forcibly removed from the
2660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						blocked state so it should not re-evaluate its block time and
2661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						then block again. */
2662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskEXIT_CRITICAL();
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch if preemption is turned off. */
2676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					performed if the unblocked task has a priority that is
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					equal to or higher than the currently executing task. */
2681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						is unsuspended. */
2685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
2697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 54


2698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
2710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks to be unblocked. */
2716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		block. */
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		delayed lists if it wraps to 0. */
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = xConstTickCount;
2726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as
2728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		look any further down the list. */
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( ;; )
2743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					to the maximum possible value so it is extremely
2748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unlikely that the
2749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					next time through. */
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 55


2755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					at which the task at the head of the delayed list must
2759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be removed from the Blocked state. */
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this
2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xConstTickCount < xItemValue )
2764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						item value is the time at which the task at the head
2767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						state -	so record the item value in
2769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime. */
2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
2772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it from the event list. */
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list. */
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					context switch if preemption is turned off. */
2798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Preemption is on, but a context switch should
2801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						only be performed if the unblocked task has a
2802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority that is equal to or higher than the
2803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						currently executing task. */
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
2809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
2811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 56


2812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xPendedTicks == ( TickType_t ) 0 )
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vApplicationTickHook();
2841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 1 )
2850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xYieldPending != pdFALSE )
2852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
2861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		++xPendedTicks;
2865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler is locked. */
2868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 57


2869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationTickHook();
2871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xSwitchRequired;
2876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		getting set. */
2887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = xTask;
2894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then set the calling task's hook. */
2916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
2917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pxTCB->pxTaskTag;
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 58


2926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTagFromISR( TaskHandle_t xTask )
2935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
2937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then set the calling task's hook. */
2941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
2942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
2946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pxTCB->pxTaskTag;
2948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = pxCurrentTCB;
2968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = xTask;
2972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
2981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 59


2983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSwitchContext( void )
2990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		switch. */
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdFALSE;
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
3001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
3005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
3006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
3007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
3008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the amount of time the task has been running to the
3011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			accumulated time so far.  The time the task started running was
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			stored in ulTaskSwitchedInTime.  Note that there is no overflow
3013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protection here so count values are only valid until the timer
3014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			overflows.  The guard against negative values is to protect
3015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			against suspect run time stat counter implementations - which
3016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			are provided by the application, not the kernel. */
3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalRunTime > ulTaskSwitchedInTime )
3018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTaskSwitchedInTime = ulTotalRunTime;
3026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
3028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check for stack overflow, if configured. */
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskCHECK_FOR_STACK_OVERFLOW();
3031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Before the currently running task is switched out, save its errno. */
3033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_POSIX_ERRNO == 1 )
3034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->iTaskErrno = FreeRTOS_errno;
3036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 60


3040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		optimised asm code. */
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timer
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* After the new task is switched in, update the global errno. */
3045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_POSIX_ERRNO == 1 )
3046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			FreeRTOS_errno = pxCurrentTCB->iTaskErrno;
3048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
3054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to this task.
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
3056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for additional information. */
3057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
3070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
3072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
3073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
3074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
3084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event groups implementation. */
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
3088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
3090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
3091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	task that is not in the Blocked state. */
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
3093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
3096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 61


3097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
3098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the task level). */
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TIMERS == 1 )
3106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
3108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxEventList );
3110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function should not be called by application code hence the
3112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
3113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
3114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should be called with the scheduler suspended. */
3115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
3118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
3119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
3120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		can be used in place of vListInsert. */
3121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
3122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
3124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
3126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
3127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
3129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
3132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
3133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TIMERS */
3136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
3141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
3144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	called from a critical section within an ISR. */
3145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
3148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the delayed list, and add it to the ready list.
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
3151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
3152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
3153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 62


3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
3155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxEventList is not empty. */
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this 
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
3159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
3164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TICKLESS_IDLE != 0 )
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			might be set to the blocked task's time out time.  If the task is
3169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked for a reason other than a timeout xNextTaskUnblockTime is
3170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			normally left unchanged, because it is automatically reset to a new
3171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			value when the tick count equals xNextTaskUnblockTime.  However if
3172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			tickless idling is used it might be more important to enter sleep mode
3173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			at the earliest possible time - so reset xNextTaskUnblockTime here to
3174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ensure it is updated at the earliest possible time. */
3175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvResetNextTaskUnblockTime();
3176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
3182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pending until the scheduler is resumed. */
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
3189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
3190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should force a context switch now. */
3191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdTRUE;
3192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdFALSE;
3200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue )
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
3209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 63


3211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event flags implementation. */
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
3213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the new item value in the event list. */
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
3218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event flags. */
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = listGET_LIST_ITEM_OWNER( pxEventListItem ); /*lint !e9079 void * is used as this 
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
3222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
3224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
3227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
3228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
3229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
3230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
3231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
3232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
3233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvResetNextTaskUnblockTime();
3234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
3236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
3238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
3239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	lists. */
3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
3242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The unblocked task has a priority above that of the calling task, so
3246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		a context switch is required.  This function is called with the
3247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler suspended so xYieldPending is set so the context switch
3248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		occurs immediately that the scheduler is resumed (unsuspended). */
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xOverflowCount = xNumOfOverflows;
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
3261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 64


3268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
3280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
3286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != ( uint8_t ) pdFALSE )
3289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				but has the same result. */
3292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
3294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				specified is the maximum block time then the task should block
3303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				indefinitely, and therefore never time out. */
3304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
3305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The tick count is greater than the time at which
3312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			was called. */
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with som
3319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait -= xElapsedTime;
3322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
3324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 65


3325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait = 0;
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskMissedYield( void )
3338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
3340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
3349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = xTask;
3353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = 0U;
3358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
3371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = xTask;
3375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 66


3382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * -----------------------------------------------------------
3383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The Idle task.
3384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * ----------------------------------------------------------
3385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
3392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
3395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) pvParameters;
3396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* In case a task that has a secure context deletes itself, in which case
3401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the idle task is responsible for deleting the task's secure context, if
3402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	any. */
3403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portALLOCATE_SECURE_CONTEXT( configMINIMAL_SECURE_STACK_SIZE );
3404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( ;; )
3406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			see if any other task has become available.  If we are using
3415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			will automatically get the processor anyway. */
3417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD();
3418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
3420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			to run then the idle task should yield before the end of the
3426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timeslice.
3427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			A critical region is not required here as we are just reading from
3429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
3433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskYIELD();
3435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 67


3439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allows the application designer to add background functionality
3449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			without the overhead of a separate task.
3450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationIdleHook();
3453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		user defined low power mode	implementations require
3459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			test of the expected idle time is performed without the
3467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			valid. */
3469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskSuspendAll();
3474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					time can be sampled again, and this time its value can
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be used. */
3478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Define the following macro to set xExpectedIdleTime to 0
3482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if the application does not want
3483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 68


3496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) xTaskResumeAll();
3498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function must be called from a critical section. */
3518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupts. */
3535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
3536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
3546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 69


3553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB != NULL );
3561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvReturn = NULL;
3573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = NULL;
3583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pvReturn;
3586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
3594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the calling task. */
3599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void )
3608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 70


3610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
3619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	using list2. */
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TCB_t *pxTCB;
3647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
3649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		being called too often in the idle task. */
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
3653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is u
3655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
3657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
3658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
3660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvDeleteTCB( pxTCB );
3662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 71


3667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the
3704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value of eState passed into this function is eInvalid - otherwise the
3705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		state is just set to whatever is passed in. */
3706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( eState != eInvalid )
3707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
3709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eRunning;
3711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eState;
3715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
3717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the task is in the suspended list then there is a
3719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					chance it is actually just blocked indefinitely - so really
3720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it should be reported as being in the Blocked state. */
3721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( eState == eSuspended )
3722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						vTaskSuspendAll();
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 72


3724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
3725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
3727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								pxTaskStatus->eCurrentState = eBlocked;
3728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
3729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
3730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) xTaskResumeAll();
3731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* INCLUDE_vTaskSuspend */
3734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
3739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
3750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
3754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;
3769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0;
3770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList ); /*lint !e9079 void * is used as this macro is
3774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
3780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 73


3781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as this macro is
3782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask++;
3784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
3792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( INCLUD
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulCount = 0U;
3802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
3806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulCount++;
3807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ( configSTACK_DEPTH_TYPE ) ulCount;
3812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) || ( 
3815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark2 == 1 )
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are the
3820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	same except for their return type.  Using configSTACK_DEPTH_TYPE allows the
3821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	user to determine the return type.  It gets around the problem of the value
3822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	overflowing on 8-bit types without breaking backward compatibility for
3823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	applications that expect an 8-bit return type. */
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configSTACK_DEPTH_TYPE uxTaskGetStackHighWaterMark2( TaskHandle_t xTask )
3825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configSTACK_DEPTH_TYPE uxReturn;
3829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxTaskGetStackHighWaterMark() and uxTaskGetStackHighWaterMark2() are
3831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the same except for their return type.  Using configSTACK_DEPTH_TYPE
3832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		allows the user to determine the return type.  It gets around the
3833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		problem of the value overflowing on 8-bit types without breaking
3834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		backward compatibility for applications that expect an 8-bit return
3835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		type. */
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 74


3838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = prvTaskCheckFreeStackSpace( pucEndOfStack );
3850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark2 */
3855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		want to allocate and clean RAM statically. */
3892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 75


3895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to the task to free any memory allocated at the application level.
3896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		See the third party link http://www.nadler.com/embedded/newlibAndFreeRTOS.html
3897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for additional information. */
3898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the stack and TCB. */
3908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
3910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consol
3912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			check what was statically allocated before trying to free the
3915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			memory. */
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be freed. */
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				only memory that must be freed. */
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing needs to be freed. */
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
3934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 124              		.loc 1 3944 1 is_stmt 1 view -0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 0, uses_anonymous_args = 0
 128              		@ link register save eliminated.
3945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 129              		.loc 1 3945 1 view .LVU30
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 76


3946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 130              		.loc 1 3947 2 view .LVU31
 131              		.loc 1 3947 6 is_stmt 0 view .LVU32
 132 0000 084B     		ldr	r3, .L15
 133 0002 1B68     		ldr	r3, [r3]
 134 0004 1B68     		ldr	r3, [r3]
 135              		.loc 1 3947 4 view .LVU33
 136 0006 23B9     		cbnz	r3, .L13
3948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		there is an item in the delayed list. */
3953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 137              		.loc 1 3953 3 is_stmt 1 view .LVU34
 138              		.loc 1 3953 24 is_stmt 0 view .LVU35
 139 0008 074B     		ldr	r3, .L15+4
 140 000a 4FF0FF32 		mov	r2, #-1
 141 000e 1A60     		str	r2, [r3]
 142 0010 7047     		bx	lr
 143              	.L13:
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from the Blocked state. */
3961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as thi
 144              		.loc 1 3961 3 is_stmt 1 view .LVU36
 145              		.loc 1 3961 15 is_stmt 0 view .LVU37
 146 0012 044B     		ldr	r3, .L15
 147 0014 1B68     		ldr	r3, [r3]
 148 0016 DB68     		ldr	r3, [r3, #12]
 149              		.loc 1 3961 13 view .LVU38
 150 0018 DB68     		ldr	r3, [r3, #12]
 151              	.LVL8:
3962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 152              		.loc 1 3962 3 is_stmt 1 view .LVU39
 153              		.loc 1 3962 26 is_stmt 0 view .LVU40
 154 001a 5A68     		ldr	r2, [r3, #4]
 155              		.loc 1 3962 24 view .LVU41
 156 001c 024B     		ldr	r3, .L15+4
 157              	.LVL9:
 158              		.loc 1 3962 24 view .LVU42
 159 001e 1A60     		str	r2, [r3]
3963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 160              		.loc 1 3964 1 view .LVU43
 161 0020 7047     		bx	lr
 162              	.L16:
 163 0022 00BF     		.align	2
 164              	.L15:
 165 0024 00000000 		.word	pxDelayedTaskList
 166 0028 00000000 		.word	xNextTaskUnblockTime
 167              		.cfi_endproc
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 77


 168              	.LFE41:
 170              		.section	.text.prvInitialiseNewTask,"ax",%progbits
 171              		.align	1
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 176              	prvInitialiseNewTask:
 177              	.LVL10:
 178              	.LFB7:
 832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 179              		.loc 1 832 1 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 16, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 183              		.loc 1 832 1 is_stmt 0 view .LVU45
 184 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 185              	.LCFI0:
 186              		.cfi_def_cfa_offset 32
 187              		.cfi_offset 4, -32
 188              		.cfi_offset 5, -28
 189              		.cfi_offset 6, -24
 190              		.cfi_offset 7, -20
 191              		.cfi_offset 8, -16
 192              		.cfi_offset 9, -12
 193              		.cfi_offset 10, -8
 194              		.cfi_offset 14, -4
 195 0004 0746     		mov	r7, r0
 196 0006 9846     		mov	r8, r3
 197 0008 089D     		ldr	r5, [sp, #32]
 198 000a DDF82490 		ldr	r9, [sp, #36]
 199 000e 0A9C     		ldr	r4, [sp, #40]
 833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 200              		.loc 1 833 1 is_stmt 1 view .LVU46
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 201              		.loc 1 834 1 view .LVU47
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 202              		.loc 1 864 3 view .LVU48
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 203              		.loc 1 864 29 is_stmt 0 view .LVU49
 204 0010 266B     		ldr	r6, [r4, #48]
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 205              		.loc 1 864 38 view .LVU50
 206 0012 6FF04043 		mvn	r3, #-1073741824
 207              	.LVL11:
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 208              		.loc 1 864 38 view .LVU51
 209 0016 1344     		add	r3, r3, r2
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 210              		.loc 1 864 16 view .LVU52
 211 0018 06EB8306 		add	r6, r6, r3, lsl #2
 212              	.LVL12:
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 213              		.loc 1 865 3 is_stmt 1 view .LVU53
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 214              		.loc 1 865 81 is_stmt 0 view .LVU54
 215 001c 26F00706 		bic	r6, r6, #7
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 78


 216              	.LVL13:
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 217              		.loc 1 868 3 is_stmt 1 view .LVU55
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 218              		.loc 1 868 124 discriminator 2 view .LVU56
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 219              		.loc 1 892 2 view .LVU57
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 220              		.loc 1 892 4 is_stmt 0 view .LVU58
 221 0020 C1B3     		cbz	r1, .L29
 222 0022 0846     		mov	r0, r1
 223              	.LVL14:
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 224              		.loc 1 894 10 view .LVU59
 225 0024 4FF0000C 		mov	ip, #0
 226              	.LVL15:
 227              	.L18:
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 228              		.loc 1 894 33 is_stmt 1 discriminator 1 view .LVU60
 229 0028 BCF10F0F 		cmp	ip, #15
 230 002c 09D8     		bhi	.L20
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 231              		.loc 1 896 4 view .LVU61
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 232              		.loc 1 896 38 is_stmt 0 view .LVU62
 233 002e 10F80C20 		ldrb	r2, [r0, ip]	@ zero_extendqisi2
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 234              		.loc 1 896 30 view .LVU63
 235 0032 04EB0C03 		add	r3, r4, ip
 236 0036 83F83420 		strb	r2, [r3, #52]
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 237              		.loc 1 901 4 is_stmt 1 view .LVU64
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 238              		.loc 1 901 6 is_stmt 0 view .LVU65
 239 003a 12B1     		cbz	r2, .L20
 907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 240              		.loc 1 907 29 is_stmt 1 view .LVU66
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 241              		.loc 1 894 77 discriminator 2 view .LVU67
 242 003c 0CF1010C 		add	ip, ip, #1
 243              	.LVL16:
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 244              		.loc 1 894 77 is_stmt 0 discriminator 2 view .LVU68
 245 0040 F2E7     		b	.L18
 246              	.LVL17:
 247              	.L20:
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 248              		.loc 1 913 3 is_stmt 1 view .LVU69
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 249              		.loc 1 913 55 is_stmt 0 view .LVU70
 250 0042 0023     		movs	r3, #0
 251 0044 84F84330 		strb	r3, [r4, #67]
 252              	.LVL18:
 253              	.L22:
 924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 254              		.loc 1 924 2 is_stmt 1 view .LVU71
 924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 79


 255              		.loc 1 924 4 is_stmt 0 view .LVU72
 256 0048 062D     		cmp	r5, #6
 257 004a 00D9     		bls	.L23
 926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 258              		.loc 1 926 14 view .LVU73
 259 004c 0625     		movs	r5, #6
 260              	.L23:
 261              	.LVL19:
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 262              		.loc 1 930 27 is_stmt 1 view .LVU74
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 263              		.loc 1 933 2 view .LVU75
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 264              		.loc 1 933 23 is_stmt 0 view .LVU76
 265 004e E562     		str	r5, [r4, #44]
 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 266              		.loc 1 936 3 is_stmt 1 view .LVU77
 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 267              		.loc 1 936 28 is_stmt 0 view .LVU78
 268 0050 6564     		str	r5, [r4, #68]
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 269              		.loc 1 937 3 is_stmt 1 view .LVU79
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 270              		.loc 1 937 27 is_stmt 0 view .LVU80
 271 0052 4FF0000A 		mov	r10, #0
 272 0056 C4F848A0 		str	r10, [r4, #72]
 941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 273              		.loc 1 941 2 is_stmt 1 view .LVU81
 274 005a 201D     		adds	r0, r4, #4
 275 005c FFF7FEFF 		bl	vListInitialiseItem
 276              	.LVL20:
 942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 277              		.loc 1 942 2 view .LVU82
 278 0060 04F11800 		add	r0, r4, #24
 279 0064 FFF7FEFF 		bl	vListInitialiseItem
 280              	.LVL21:
 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 281              		.loc 1 946 2 view .LVU83
 282 0068 2461     		str	r4, [r4, #16]
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 283              		.loc 1 949 2 view .LVU84
 284 006a C5F10705 		rsb	r5, r5, #7
 285              	.LVL22:
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 286              		.loc 1 949 2 is_stmt 0 view .LVU85
 287 006e A561     		str	r5, [r4, #24]
 950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 288              		.loc 1 950 2 is_stmt 1 view .LVU86
 289 0070 6462     		str	r4, [r4, #36]
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 290              		.loc 1 977 3 view .LVU87
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 291              		.loc 1 992 3 view .LVU88
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 292              		.loc 1 992 29 is_stmt 0 view .LVU89
 293 0072 C4F84CA0 		str	r10, [r4, #76]
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 80


 294              		.loc 1 993 3 is_stmt 1 view .LVU90
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 295              		.loc 1 993 27 is_stmt 0 view .LVU91
 296 0076 84F850A0 		strb	r10, [r4, #80]
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 297              		.loc 1 1058 4 is_stmt 1 view .LVU92
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 298              		.loc 1 1058 29 is_stmt 0 view .LVU93
 299 007a 4246     		mov	r2, r8
 300 007c 3946     		mov	r1, r7
 301 007e 3046     		mov	r0, r6
 302 0080 FFF7FEFF 		bl	pxPortInitialiseStack
 303              	.LVL23:
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 304              		.loc 1 1058 27 discriminator 1 view .LVU94
 305 0084 2060     		str	r0, [r4]
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 306              		.loc 1 1064 2 is_stmt 1 view .LVU95
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 307              		.loc 1 1064 4 is_stmt 0 view .LVU96
 308 0086 B9F1000F 		cmp	r9, #0
 309 008a 01D0     		beq	.L17
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 310              		.loc 1 1068 3 is_stmt 1 view .LVU97
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 311              		.loc 1 1068 18 is_stmt 0 view .LVU98
 312 008c C9F80040 		str	r4, [r9]
1072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 313              		.loc 1 1072 27 is_stmt 1 view .LVU99
 314              	.L17:
1074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 315              		.loc 1 1074 1 is_stmt 0 view .LVU100
 316 0090 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 317              	.LVL24:
 318              	.L29:
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 319              		.loc 1 919 3 is_stmt 1 view .LVU101
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 320              		.loc 1 919 29 is_stmt 0 view .LVU102
 321 0094 0023     		movs	r3, #0
 322 0096 84F83430 		strb	r3, [r4, #52]
 323 009a D5E7     		b	.L22
 324              		.cfi_endproc
 325              	.LFE7:
 327              		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 328              		.align	1
 329              		.syntax unified
 330              		.thumb
 331              		.thumb_func
 333              	prvInitialiseTaskLists:
 334              	.LFB38:
3608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
 335              		.loc 1 3608 1 is_stmt 1 view -0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 81


 340              	.LCFI1:
 341              		.cfi_def_cfa_offset 16
 342              		.cfi_offset 3, -16
 343              		.cfi_offset 4, -12
 344              		.cfi_offset 5, -8
 345              		.cfi_offset 14, -4
3609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 346              		.loc 1 3609 1 view .LVU104
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 347              		.loc 1 3611 2 view .LVU105
 348              	.LVL25:
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 349              		.loc 1 3611 18 is_stmt 0 view .LVU106
 350 0002 0024     		movs	r4, #0
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 351              		.loc 1 3611 2 view .LVU107
 352 0004 07E0     		b	.L31
 353              	.LVL26:
 354              	.L32:
3613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 355              		.loc 1 3613 3 is_stmt 1 view .LVU108
 356 0006 04EB8402 		add	r2, r4, r4, lsl #2
 357 000a 9300     		lsls	r3, r2, #2
 358 000c 0E48     		ldr	r0, .L34
 359 000e 1844     		add	r0, r0, r3
 360 0010 FFF7FEFF 		bl	vListInitialise
 361              	.LVL27:
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 362              		.loc 1 3611 101 discriminator 3 view .LVU109
 363 0014 0134     		adds	r4, r4, #1
 364              	.LVL28:
 365              	.L31:
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 366              		.loc 1 3611 51 discriminator 1 view .LVU110
 367 0016 062C     		cmp	r4, #6
 368 0018 F5D9     		bls	.L32
3616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 369              		.loc 1 3616 2 view .LVU111
 370 001a 0C4D     		ldr	r5, .L34+4
 371 001c 2846     		mov	r0, r5
 372 001e FFF7FEFF 		bl	vListInitialise
 373              	.LVL29:
3617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 374              		.loc 1 3617 2 view .LVU112
 375 0022 0B4C     		ldr	r4, .L34+8
 376              	.LVL30:
3617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 377              		.loc 1 3617 2 is_stmt 0 view .LVU113
 378 0024 2046     		mov	r0, r4
 379 0026 FFF7FEFF 		bl	vListInitialise
 380              	.LVL31:
3618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 381              		.loc 1 3618 2 is_stmt 1 view .LVU114
 382 002a 0A48     		ldr	r0, .L34+12
 383 002c FFF7FEFF 		bl	vListInitialise
 384              	.LVL32:
3622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 82


 385              		.loc 1 3622 3 view .LVU115
 386 0030 0948     		ldr	r0, .L34+16
 387 0032 FFF7FEFF 		bl	vListInitialise
 388              	.LVL33:
3628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 389              		.loc 1 3628 3 view .LVU116
 390 0036 0948     		ldr	r0, .L34+20
 391 0038 FFF7FEFF 		bl	vListInitialise
 392              	.LVL34:
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 393              		.loc 1 3634 2 view .LVU117
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 394              		.loc 1 3634 20 is_stmt 0 view .LVU118
 395 003c 084B     		ldr	r3, .L34+24
 396 003e 1D60     		str	r5, [r3]
3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 397              		.loc 1 3635 2 is_stmt 1 view .LVU119
3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 398              		.loc 1 3635 28 is_stmt 0 view .LVU120
 399 0040 084B     		ldr	r3, .L34+28
 400 0042 1C60     		str	r4, [r3]
3636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 401              		.loc 1 3636 1 view .LVU121
 402 0044 38BD     		pop	{r3, r4, r5, pc}
 403              	.L35:
 404 0046 00BF     		.align	2
 405              	.L34:
 406 0048 00000000 		.word	pxReadyTasksLists
 407 004c 00000000 		.word	xDelayedTaskList1
 408 0050 00000000 		.word	xDelayedTaskList2
 409 0054 00000000 		.word	xPendingReadyList
 410 0058 00000000 		.word	xTasksWaitingTermination
 411 005c 00000000 		.word	xSuspendedTaskList
 412 0060 00000000 		.word	pxDelayedTaskList
 413 0064 00000000 		.word	pxOverflowDelayedTaskList
 414              		.cfi_endproc
 415              	.LFE38:
 417              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 418              		.align	1
 419              		.syntax unified
 420              		.thumb
 421              		.thumb_func
 423              	prvAddNewTaskToReadyList:
 424              	.LVL35:
 425              	.LFB8:
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 426              		.loc 1 1078 1 is_stmt 1 view -0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 0
 429              		@ frame_needed = 0, uses_anonymous_args = 0
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 430              		.loc 1 1078 1 is_stmt 0 view .LVU123
 431 0000 10B5     		push	{r4, lr}
 432              	.LCFI2:
 433              		.cfi_def_cfa_offset 8
 434              		.cfi_offset 4, -8
 435              		.cfi_offset 14, -4
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 83


 436 0002 0446     		mov	r4, r0
1081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 437              		.loc 1 1081 2 is_stmt 1 view .LVU124
 438 0004 FFF7FEFF 		bl	vPortEnterCritical
 439              	.LVL36:
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 440              		.loc 1 1083 3 view .LVU125
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 441              		.loc 1 1083 25 is_stmt 0 view .LVU126
 442 0008 214A     		ldr	r2, .L43
 443 000a 1368     		ldr	r3, [r2]
 444 000c 0133     		adds	r3, r3, #1
 445 000e 1360     		str	r3, [r2]
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 446              		.loc 1 1084 3 is_stmt 1 view .LVU127
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 447              		.loc 1 1084 20 is_stmt 0 view .LVU128
 448 0010 204B     		ldr	r3, .L43+4
 449 0012 1B68     		ldr	r3, [r3]
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 450              		.loc 1 1084 5 view .LVU129
 451 0014 5BB1     		cbz	r3, .L41
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 452              		.loc 1 1107 4 is_stmt 1 view .LVU130
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 453              		.loc 1 1107 26 is_stmt 0 view .LVU131
 454 0016 204B     		ldr	r3, .L43+8
 455 0018 1B68     		ldr	r3, [r3]
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 456              		.loc 1 1107 6 view .LVU132
 457 001a 6BB9     		cbnz	r3, .L38
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 458              		.loc 1 1109 5 is_stmt 1 view .LVU133
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 459              		.loc 1 1109 21 is_stmt 0 view .LVU134
 460 001c 1D4B     		ldr	r3, .L43+4
 461 001e 1B68     		ldr	r3, [r3]
 462 0020 DA6A     		ldr	r2, [r3, #44]
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 463              		.loc 1 1109 45 view .LVU135
 464 0022 E36A     		ldr	r3, [r4, #44]
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 465              		.loc 1 1109 7 view .LVU136
 466 0024 9A42     		cmp	r2, r3
 467 0026 07D8     		bhi	.L38
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 468              		.loc 1 1111 6 is_stmt 1 view .LVU137
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 469              		.loc 1 1111 19 is_stmt 0 view .LVU138
 470 0028 1A4B     		ldr	r3, .L43+4
 471 002a 1C60     		str	r4, [r3]
 472 002c 04E0     		b	.L38
 473              	.L41:
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 474              		.loc 1 1088 4 is_stmt 1 view .LVU139
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 475              		.loc 1 1088 17 is_stmt 0 view .LVU140
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 84


 476 002e 194B     		ldr	r3, .L43+4
 477 0030 1C60     		str	r4, [r3]
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 478              		.loc 1 1090 4 is_stmt 1 view .LVU141
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 479              		.loc 1 1090 31 is_stmt 0 view .LVU142
 480 0032 1368     		ldr	r3, [r2]
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 481              		.loc 1 1090 6 view .LVU143
 482 0034 012B     		cmp	r3, #1
 483 0036 28D0     		beq	.L42
 484              	.L38:
1120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 485              		.loc 1 1120 29 is_stmt 1 view .LVU144
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 486              		.loc 1 1124 3 view .LVU145
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 487              		.loc 1 1124 15 is_stmt 0 view .LVU146
 488 0038 184A     		ldr	r2, .L43+12
 489 003a 1368     		ldr	r3, [r2]
 490 003c 0133     		adds	r3, r3, #1
 491 003e 1360     		str	r3, [r2]
1132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 492              		.loc 1 1132 31 is_stmt 1 view .LVU147
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 493              		.loc 1 1134 3 view .LVU148
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 494              		.loc 1 1134 3 view .LVU149
 495 0040 E06A     		ldr	r0, [r4, #44]
 496 0042 0123     		movs	r3, #1
 497 0044 8340     		lsls	r3, r3, r0
 498 0046 164A     		ldr	r2, .L43+16
 499 0048 1168     		ldr	r1, [r2]
 500 004a 0B43     		orrs	r3, r3, r1
 501 004c 1360     		str	r3, [r2]
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 502              		.loc 1 1134 3 view .LVU150
 503 004e 00EB8000 		add	r0, r0, r0, lsl #2
 504 0052 211D     		adds	r1, r4, #4
 505 0054 134B     		ldr	r3, .L43+20
 506 0056 03EB8000 		add	r0, r3, r0, lsl #2
 507 005a FFF7FEFF 		bl	vListInsertEnd
 508              	.LVL37:
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 509              		.loc 1 1134 36 discriminator 1 view .LVU151
1136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 510              		.loc 1 1136 3 view .LVU152
1138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 511              		.loc 1 1138 2 view .LVU153
 512 005e FFF7FEFF 		bl	vPortExitCritical
 513              	.LVL38:
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 514              		.loc 1 1140 2 view .LVU154
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 515              		.loc 1 1140 24 is_stmt 0 view .LVU155
 516 0062 0D4B     		ldr	r3, .L43+8
 517 0064 1B68     		ldr	r3, [r3]
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 85


1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 518              		.loc 1 1140 4 view .LVU156
 519 0066 7BB1     		cbz	r3, .L36
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 520              		.loc 1 1144 3 is_stmt 1 view .LVU157
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 521              		.loc 1 1144 19 is_stmt 0 view .LVU158
 522 0068 0A4B     		ldr	r3, .L43+4
 523 006a 1B68     		ldr	r3, [r3]
 524 006c DA6A     		ldr	r2, [r3, #44]
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 525              		.loc 1 1144 42 view .LVU159
 526 006e E36A     		ldr	r3, [r4, #44]
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 527              		.loc 1 1144 5 view .LVU160
 528 0070 9A42     		cmp	r2, r3
 529 0072 09D2     		bcs	.L36
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 530              		.loc 1 1146 4 is_stmt 1 view .LVU161
 531 0074 4FF0E023 		mov	r3, #-536813568
 532 0078 4FF08052 		mov	r2, #268435456
 533 007c C3F8042D 		str	r2, [r3, #3332]
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 534              		.loc 1 1146 4 view .LVU162
 535              		.syntax unified
 536              	@ 1146 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 537 0080 BFF34F8F 		dsb
 538              	@ 0 "" 2
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 539              		.loc 1 1146 4 view .LVU163
 540              	@ 1146 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 541 0084 BFF36F8F 		isb
 542              	@ 0 "" 2
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 543              		.loc 1 1146 35 view .LVU164
1155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 544              		.loc 1 1155 27 view .LVU165
 545              		.thumb
 546              		.syntax unified
 547              	.L36:
1157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 548              		.loc 1 1157 1 is_stmt 0 view .LVU166
 549 0088 10BD     		pop	{r4, pc}
 550              	.LVL39:
 551              	.L42:
1095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 552              		.loc 1 1095 5 is_stmt 1 view .LVU167
 553 008a FFF7FEFF 		bl	prvInitialiseTaskLists
 554              	.LVL40:
 555 008e D3E7     		b	.L38
 556              	.L44:
 557              		.align	2
 558              	.L43:
 559 0090 00000000 		.word	uxCurrentNumberOfTasks
 560 0094 00000000 		.word	pxCurrentTCB
 561 0098 00000000 		.word	xSchedulerRunning
 562 009c 00000000 		.word	uxTaskNumber
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 86


 563 00a0 00000000 		.word	uxTopReadyPriority
 564 00a4 00000000 		.word	pxReadyTasksLists
 565              		.cfi_endproc
 566              	.LFE8:
 568              		.section	.text.prvDeleteTCB,"ax",%progbits
 569              		.align	1
 570              		.syntax unified
 571              		.thumb
 572              		.thumb_func
 574              	prvDeleteTCB:
 575              	.LVL41:
 576              	.LFB40:
3888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 577              		.loc 1 3888 2 view -0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 0
 580              		@ frame_needed = 0, uses_anonymous_args = 0
3888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 581              		.loc 1 3888 2 is_stmt 0 view .LVU169
 582 0000 10B5     		push	{r4, lr}
 583              	.LCFI3:
 584              		.cfi_def_cfa_offset 8
 585              		.cfi_offset 4, -8
 586              		.cfi_offset 14, -4
 587 0002 0446     		mov	r4, r0
3892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 588              		.loc 1 3892 3 is_stmt 1 view .LVU170
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 589              		.loc 1 3916 4 view .LVU171
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 590              		.loc 1 3916 13 is_stmt 0 view .LVU172
 591 0004 90F85130 		ldrb	r3, [r0, #81]	@ zero_extendqisi2
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 592              		.loc 1 3916 6 view .LVU173
 593 0008 63B1     		cbz	r3, .L51
3923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 594              		.loc 1 3923 9 is_stmt 1 view .LVU174
3923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 595              		.loc 1 3923 11 is_stmt 0 view .LVU175
 596 000a 012B     		cmp	r3, #1
 597 000c 11D0     		beq	.L52
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 598              		.loc 1 3933 5 is_stmt 1 view .LVU176
 599 000e 022B     		cmp	r3, #2
 600 0010 0ED0     		beq	.L45
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 601              		.loc 1 3933 5 discriminator 1 view .LVU177
 602              	.LBB112:
 603              	.LBI112:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 604              		.loc 2 191 30 view .LVU178
 605              	.LBB113:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 606              		.loc 2 193 1 view .LVU179
 607              		.loc 2 195 2 view .LVU180
 608              		.syntax unified
 609              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 87


 610 0012 4FF05003 			mov r3, #80												
 611 0016 83F31188 		msr basepri, r3											
 612 001a BFF36F8F 		isb														
 613 001e BFF34F8F 		dsb														
 614              	
 615              	@ 0 "" 2
 616              		.thumb
 617              		.syntax unified
 618              	.L49:
 619              	.LBE113:
 620              	.LBE112:
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 621              		.loc 1 3933 5 discriminator 3 view .LVU181
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 622              		.loc 1 3933 5 discriminator 3 view .LVU182
 623 0022 FEE7     		b	.L49
 624              	.L51:
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
 625              		.loc 1 3920 5 view .LVU183
 626 0024 006B     		ldr	r0, [r0, #48]
 627              	.LVL42:
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
 628              		.loc 1 3920 5 is_stmt 0 view .LVU184
 629 0026 FFF7FEFF 		bl	vPortFree
 630              	.LVL43:
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 631              		.loc 1 3921 5 is_stmt 1 view .LVU185
 632 002a 2046     		mov	r0, r4
 633 002c FFF7FEFF 		bl	vPortFree
 634              	.LVL44:
 635              	.L45:
3938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 636              		.loc 1 3938 2 is_stmt 0 view .LVU186
 637 0030 10BD     		pop	{r4, pc}
 638              	.LVL45:
 639              	.L52:
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 640              		.loc 1 3927 5 is_stmt 1 view .LVU187
 641 0032 FFF7FEFF 		bl	vPortFree
 642              	.LVL46:
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 643              		.loc 1 3927 5 is_stmt 0 view .LVU188
 644 0036 FBE7     		b	.L45
 645              		.cfi_endproc
 646              	.LFE40:
 648              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 649              		.align	1
 650              		.syntax unified
 651              		.thumb
 652              		.thumb_func
 654              	prvCheckTasksWaitingTermination:
 655              	.LFB39:
3640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 656              		.loc 1 3640 1 is_stmt 1 view -0
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 0
 659              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 88


 660              	.LBB114:
3646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 661              		.loc 1 3646 3 view .LVU190
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 662              		.loc 1 3650 3 view .LVU191
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 663              		.loc 1 3650 39 view .LVU192
 664 0000 0F4B     		ldr	r3, .L60
 665 0002 1B68     		ldr	r3, [r3]
 666 0004 D3B1     		cbz	r3, .L59
 667              	.LBE114:
3640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 668              		.loc 1 3640 1 is_stmt 0 view .LVU193
 669 0006 10B5     		push	{r4, lr}
 670              	.LCFI4:
 671              		.cfi_def_cfa_offset 8
 672              		.cfi_offset 4, -8
 673              		.cfi_offset 14, -4
 674              	.L55:
 675              	.LBB115:
3652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 676              		.loc 1 3652 4 is_stmt 1 view .LVU194
 677 0008 FFF7FEFF 		bl	vPortEnterCritical
 678              	.LVL47:
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 679              		.loc 1 3654 5 view .LVU195
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 680              		.loc 1 3654 13 is_stmt 0 view .LVU196
 681 000c 0D4B     		ldr	r3, .L60+4
 682 000e DB68     		ldr	r3, [r3, #12]
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 683              		.loc 1 3654 11 view .LVU197
 684 0010 DC68     		ldr	r4, [r3, #12]
 685              	.LVL48:
3655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 686              		.loc 1 3655 5 is_stmt 1 view .LVU198
3655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 687              		.loc 1 3655 14 is_stmt 0 view .LVU199
 688 0012 201D     		adds	r0, r4, #4
 689 0014 FFF7FEFF 		bl	uxListRemove
 690              	.LVL49:
3656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
 691              		.loc 1 3656 5 is_stmt 1 view .LVU200
 692 0018 0B4A     		ldr	r2, .L60+8
 693 001a 1368     		ldr	r3, [r2]
 694 001c 013B     		subs	r3, r3, #1
 695 001e 1360     		str	r3, [r2]
3657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 696              		.loc 1 3657 5 view .LVU201
 697 0020 074A     		ldr	r2, .L60
 698 0022 1368     		ldr	r3, [r2]
 699 0024 013B     		subs	r3, r3, #1
 700 0026 1360     		str	r3, [r2]
3659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 701              		.loc 1 3659 4 view .LVU202
 702 0028 FFF7FEFF 		bl	vPortExitCritical
 703              	.LVL50:
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 89


3661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 704              		.loc 1 3661 4 view .LVU203
 705 002c 2046     		mov	r0, r4
 706 002e FFF7FEFF 		bl	prvDeleteTCB
 707              	.LVL51:
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 708              		.loc 1 3650 39 view .LVU204
 709 0032 034B     		ldr	r3, .L60
 710 0034 1B68     		ldr	r3, [r3]
 711 0036 002B     		cmp	r3, #0
 712 0038 E6D1     		bne	.L55
 713              	.LBE115:
3665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 714              		.loc 1 3665 1 is_stmt 0 view .LVU205
 715 003a 10BD     		pop	{r4, pc}
 716              	.LVL52:
 717              	.L59:
 718              	.LCFI5:
 719              		.cfi_def_cfa_offset 0
 720              		.cfi_restore 4
 721              		.cfi_restore 14
3665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 722              		.loc 1 3665 1 view .LVU206
 723 003c 7047     		bx	lr
 724              	.L61:
 725 003e 00BF     		.align	2
 726              	.L60:
 727 0040 00000000 		.word	uxDeletedTasksWaitingCleanUp
 728 0044 00000000 		.word	xTasksWaitingTermination
 729 0048 00000000 		.word	uxCurrentNumberOfTasks
 730              		.cfi_endproc
 731              	.LFE39:
 733              		.section	.text.prvIdleTask,"ax",%progbits
 734              		.align	1
 735              		.syntax unified
 736              		.thumb
 737              		.thumb_func
 739              	prvIdleTask:
 740              	.LFB37:
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 741              		.loc 1 3393 1 is_stmt 1 view -0
 742              		.cfi_startproc
 743              		@ Volatile: function does not return.
 744              		@ args = 0, pretend = 0, frame = 0
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746              	.LVL53:
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 747              		.loc 1 3393 1 is_stmt 0 view .LVU208
 748 0000 08B5     		push	{r3, lr}
 749              	.LCFI6:
 750              		.cfi_def_cfa_offset 8
 751              		.cfi_offset 3, -8
 752              		.cfi_offset 14, -4
 753              	.LVL54:
 754              	.L63:
3395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 755              		.loc 1 3395 2 is_stmt 1 view .LVU209
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 90


3403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 756              		.loc 1 3403 64 view .LVU210
3405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 757              		.loc 1 3405 2 view .LVU211
3409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 758              		.loc 1 3409 3 view .LVU212
 759 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 760              	.LVL55:
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 761              		.loc 1 3432 4 view .LVU213
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 762              		.loc 1 3432 8 is_stmt 0 view .LVU214
 763 0006 074B     		ldr	r3, .L66
 764 0008 1B68     		ldr	r3, [r3]
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 765              		.loc 1 3432 6 view .LVU215
 766 000a 012B     		cmp	r3, #1
 767 000c F9D9     		bls	.L63
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 768              		.loc 1 3434 5 is_stmt 1 view .LVU216
 769 000e 4FF0E023 		mov	r3, #-536813568
 770 0012 4FF08052 		mov	r2, #268435456
 771 0016 C3F8042D 		str	r2, [r3, #3332]
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 772              		.loc 1 3434 5 view .LVU217
 773              		.syntax unified
 774              	@ 3434 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 775 001a BFF34F8F 		dsb
 776              	@ 0 "" 2
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 777              		.loc 1 3434 5 view .LVU218
 778              	@ 3434 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 779 001e BFF36F8F 		isb
 780              	@ 0 "" 2
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 781              		.loc 1 3434 16 view .LVU219
 782              		.thumb
 783              		.syntax unified
 784 0022 EEE7     		b	.L63
 785              	.L67:
 786              		.align	2
 787              	.L66:
 788 0024 00000000 		.word	pxReadyTasksLists
 789              		.cfi_endproc
 790              	.LFE37:
 792              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 793              		.align	1
 794              		.syntax unified
 795              		.thumb
 796              		.thumb_func
 798              	prvAddCurrentTaskToDelayedList:
 799              	.LVL56:
 800              	.LFB56:
3965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 91


3969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A critical section is not required as this is not called from
3974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		individual execution thread. */
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pxCurrentTCB;
3977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
3989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
4003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
4018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
4020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		locked then the mutex holder might now be NULL.  _RB_ Is this still
4021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		needed as interrupts can no longer use mutexes? */
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
4023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 92


4026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
4028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
4030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
4031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not being used for anything else. */
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VA
4033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIOR
4035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
4042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to be moved into a new list. */
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutex
4044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
4048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
4049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority, uxTopReadyPriority );
4051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
4060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Just inherit the priority. */
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
4065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
4068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Inheritance occurred. */
4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
4071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
4075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority of the mutex holder is lower than the
4077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex, but the
4078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					current priority of the mutex holder is not lower than the
4079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex.
4080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Therefore the mutex holder must have already inherited a
4081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority, but inheritance would have occurred if that had
4082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					not been the case. */
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 93


4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
4084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
4108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
4110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
4112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
4113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
4114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			be the running state task. */
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
4118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
4120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task? */
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
4122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
4125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
4127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
4128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
4129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					holding task then it must be the running state task.  Remove
4130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the holding task from the ready/delayed list. */
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
4134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 94


4140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
4141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new	ready list. */
4142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
4144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
4146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					any other purpose if this task is running, and it must be
4147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					running to give back the mutex. */
4148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
4152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This is only actually required in the corner case whereby
4153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
4154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					in an order different to that in which they were taken.
4155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					If a context switch did not occur when the first mutex was
4156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
4157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					switch should occur when the last mutex is returned whether
4158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a task is waiting on it or not. */
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
4160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestP
4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
4187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
4188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
4189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
4191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If pxMutexHolder is not NULL then the holder must hold at least
4193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			one mutex. */
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
4195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Determine the priority to which the priority of the task that
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 95


4197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holds the mutex should be set.  This will be the greater of the
4198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holding task's base priority and the priority of the highest
4199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			priority task that is waiting to obtain the mutex. */
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
4201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = uxHighestPriorityWaitingTask;
4203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = pxTCB->uxBasePriority;
4207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Does the priority need to change? */
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != uxPriorityToUse )
4211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held.  This is a
4213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				simplification in the priority inheritance implementation.  If
4214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that holds the mutex is also holding other mutexes then
4215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the other mutexes may have caused the priority inheritance. */
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
4217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task has timed out because it already holds the
4219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mutex it was trying to obtain then it cannot of inherited
4220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					its own priority. */
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB != pxCurrentTCB );
4222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority, remembering the previous
4224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority to facilitate determining the subject task's
4225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
4226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
4229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only reset the event list item value if the value is not
4231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					being used for anything else. */
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE
4233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( 
4235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the running task is not the task that holds the mutex
4242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					then the task that holds the mutex could be in either the
4243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready, Blocked or Suspended states.  Only remove the task
4244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					from its current state list if it is in the Ready state as
4245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the task's priority is going to change and there is one
4246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready list per priority. */
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xState
4248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* It is known that the task is in its ready list so
4252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							there is no need to check again and the port level
4253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							reset macro can be called directly. */
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 96


4254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							portRESET_READY_PRIORITY( pxTCB->uxPriority, uxTopReadyPriority );
4255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
4257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
4259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						prvAddTaskToReadyList( pxTCB );
4262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskEnterCritical( void )
4290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
4292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
4296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
4298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
4299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
4300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
4301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
4302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			critical section. */
4303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
4304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portASSERT_IF_IN_ISR();
4306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 97


4311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskExitCritical( void )
4320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
4324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
4326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
4328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portENABLE_INTERRUPTS();
4330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
4353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	size_t x;
4355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Start by copying the entire string. */
4357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
4358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
4360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		printed out. */
4361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pcBuffer[ x ] = ' ';
4364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Terminate. */
4367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pcBuffer[ x ] = ( char ) 0x00;
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 98


4368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return the new end of string. */
4370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return &( pcBuffer[ x ] );
4371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
4377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
4379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxArraySize, x;
4382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cStatus;
4383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
4393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays task names, states and stack usage.
4394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
4397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
4399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
4400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * snprintf() implementation!).
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskList().
4406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = ( char ) 0x00;
4411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
4417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint !e907
4420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 99


4425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Create a human readable table from the binary data. */
4427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eRunning:		cStatus = tskRUNNING_CHAR;
4432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eInvalid:		/* Fall through. */
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					default:			/* Should not get here, but it is included
4448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										to prevent static checking errors. */
4449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										cStatus = ( char ) 0x00;
4450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				can be printed in tabular form more easily. */
4455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the rest of the string. */
4458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer ); /*lint !e9016 Pointer arithmetic ok on char pointers 
4460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
4473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
4474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxArraySize, x;
4481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 100


4482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
4488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * in both absolute and percentage terms.
4500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a full snprintf() implementation!).
4508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = ( char ) 0x00;
4516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint !e907
4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* For percentage calculations. */
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTotalTime /= 100UL;
4533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Avoid divide by zero errors. */
4535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalTime > 0UL )
4536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 101


4539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Write the task name to the string, padding with
4546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					spaces so it can be printed in tabular form more
4547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					easily. */
4548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* If the percentage is zero here then the task has
4567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						consumed less than 1% of the total run time. */
4568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer ); /*lint !e9016 Pointer arithmetic ok on char pointers
4582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 102


4596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
4605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queues and semaphores. */
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxReturn;
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t pvTaskIncrementMutexHeldCount( void )
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxCurrentTCB;
4628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
4638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 103


4653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulReturn != 0UL )
4676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
4684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ulReturn;
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if a notification is not already pending. */
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 104


4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				clear the value to zero. */
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulNotificationValue != NULL )
4748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Output the current notification value, which may or may not
4750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				have changed. */
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked because of a timeout. */
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was not received. */
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
4762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was already pending or a notification was
4766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				received while the task was waiting. */
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 105


4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
4769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
4791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 106


4824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction:
4830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				default:
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Should not get here if all enums are handled.
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Artificially force an assert by testing a value the
4837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					compiler can't assume is const. */
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB->ulNotifiedValue == ~0UL );
4839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY();
4844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					because it will automatically get reset to a new value when
4862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tickless idling is used it might be more important to enter
4864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					earliest possible time. */
4867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
4870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 107


4881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
4925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 108


4938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction :
4963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				default:
4968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Should not get here if all enums are handled.
4969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Artificially force an assert by testing a value the
4970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					compiler can't assume is const. */
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB->ulNotifiedValue == ~0UL );
4972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 109


4995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
5000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
5001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
5002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
5003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
5004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Mark that a yield is pending in case the user is not
5006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					using the "xHigherPriorityTaskWoken" parameter to an ISR
5007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					safe FreeRTOS function. */
5008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldPending = pdTRUE;
5009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
5013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
5017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
5019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
5025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
5027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
5029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
5030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
5031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
5033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
5035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
5036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
5037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
5038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
5039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
5040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
5041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
5042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
5043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
5044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
5045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
5046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
5047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
5048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
5049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
5050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
5051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 110


5052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
5053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
5055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
5057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
5058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
5060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			semaphore. */
5061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
5062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
5064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
5066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
5067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
5068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
5071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
5073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
5076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
5080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
5081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
5082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
5085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
5087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
5088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
5089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
5090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
5091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
5092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Mark that a yield is pending in case the user is not
5094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					using the "xHigherPriorityTaskWoken" parameter in an ISR
5095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					safe FreeRTOS function. */
5096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldPending = pdTRUE;
5097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
5101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
5105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 111


5109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
5111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
5113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
5115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
5116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
5118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		its notification state cleared. */
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
5120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
5122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
5124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
5126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
5127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
5131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
5134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
5136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
5142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyValueClear( TaskHandle_t xTask, uint32_t ulBitsToClear )
5144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
5146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
5147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
5149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		its notification state cleared. */
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
5151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
5153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Return the notification as it was before the bits were cleared,
5155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then clear the bit mask. */
5156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
5157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
5158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
5160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ulReturn;
5162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
5165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 112


5166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) )
5168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskGetIdleRunTimeCounter( void )
5170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle->ulRunTimeCounter;
5172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
5175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
5176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
5178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 801              		.loc 1 5178 1 view -0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 0
 804              		@ frame_needed = 0, uses_anonymous_args = 0
 805              		.loc 1 5178 1 is_stmt 0 view .LVU221
 806 0000 70B5     		push	{r4, r5, r6, lr}
 807              	.LCFI7:
 808              		.cfi_def_cfa_offset 16
 809              		.cfi_offset 4, -16
 810              		.cfi_offset 5, -12
 811              		.cfi_offset 6, -8
 812              		.cfi_offset 14, -4
 813 0002 0446     		mov	r4, r0
 814 0004 0D46     		mov	r5, r1
5179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTimeToWake;
 815              		.loc 1 5179 1 is_stmt 1 view .LVU222
5180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 816              		.loc 1 5180 1 view .LVU223
 817              		.loc 1 5180 18 is_stmt 0 view .LVU224
 818 0006 1F4B     		ldr	r3, .L75
 819 0008 1E68     		ldr	r6, [r3]
 820              	.LVL57:
5181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
5183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
5185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
5186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		when the task leaves the Blocked state. */
5187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
5188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
5190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
5192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	as the same list item is used for both lists. */
5193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 821              		.loc 1 5193 2 is_stmt 1 view .LVU225
 822              		.loc 1 5193 35 is_stmt 0 view .LVU226
 823 000a 1F4B     		ldr	r3, .L75+4
 824 000c 1868     		ldr	r0, [r3]
 825              	.LVL58:
 826              		.loc 1 5193 6 view .LVU227
 827 000e 0430     		adds	r0, r0, #4
 828 0010 FFF7FEFF 		bl	uxListRemove
 829              	.LVL59:
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 113


 830              		.loc 1 5193 4 discriminator 1 view .LVU228
 831 0014 48B9     		cbnz	r0, .L69
5194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
5196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		check, and the port reset macro can be called directly. */
5197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority ); /*lint !e931 pxCurrentT
 832              		.loc 1 5197 3 is_stmt 1 view .LVU229
 833 0016 1C4B     		ldr	r3, .L75+4
 834 0018 1B68     		ldr	r3, [r3]
 835 001a DB6A     		ldr	r3, [r3, #44]
 836 001c 0122     		movs	r2, #1
 837 001e 9A40     		lsls	r2, r2, r3
 838 0020 1A49     		ldr	r1, .L75+8
 839 0022 0B68     		ldr	r3, [r1]
 840 0024 23EA0203 		bic	r3, r3, r2
 841 0028 0B60     		str	r3, [r1]
 842              	.L69:
5198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
5200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 843              		.loc 1 5201 27 view .LVU230
5202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
5205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 844              		.loc 1 5206 3 view .LVU231
 845              		.loc 1 5206 41 is_stmt 0 view .LVU232
 846 002a B4F1FF3F 		cmp	r4, #-1
 847 002e 14BF     		ite	ne
 848 0030 0023     		movne	r3, #0
 849 0032 0123     		moveq	r3, #1
 850 0034 002D     		cmp	r5, #0
 851 0036 08BF     		it	eq
 852 0038 0023     		moveq	r3, #0
 853              		.loc 1 5206 5 view .LVU233
 854 003a 6BB9     		cbnz	r3, .L74
5207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
5209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
5210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			indefinitely. */
5211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
5212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
5214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
5216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
5217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			kernel will manage it correctly. */
5218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
 855              		.loc 1 5218 4 is_stmt 1 view .LVU234
 856              		.loc 1 5218 16 is_stmt 0 view .LVU235
 857 003c 3444     		add	r4, r4, r6
 858              	.LVL60:
5219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
5221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 114


 859              		.loc 1 5221 4 is_stmt 1 view .LVU236
 860 003e 124B     		ldr	r3, .L75+4
 861 0040 1B68     		ldr	r3, [r3]
 862 0042 5C60     		str	r4, [r3, #4]
5222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 863              		.loc 1 5223 4 view .LVU237
 864              		.loc 1 5223 6 is_stmt 0 view .LVU238
 865 0044 A642     		cmp	r6, r4
 866 0046 0ED9     		bls	.L72
5224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
5226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list. */
5227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 867              		.loc 1 5227 5 is_stmt 1 view .LVU239
 868 0048 114B     		ldr	r3, .L75+12
 869 004a 1868     		ldr	r0, [r3]
 870              		.loc 1 5227 60 is_stmt 0 view .LVU240
 871 004c 0E4B     		ldr	r3, .L75+4
 872 004e 1968     		ldr	r1, [r3]
 873              		.loc 1 5227 5 view .LVU241
 874 0050 0431     		adds	r1, r1, #4
 875 0052 FFF7FEFF 		bl	vListInsert
 876              	.LVL61:
 877              	.L68:
5228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
5232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
5233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
5236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
5237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				needs to be updated too. */
5238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
5239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
5241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
5243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
5244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
5245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
5246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* INCLUDE_vTaskSuspend */
5250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
5251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Calculate the time at which the task should be woken if the event
5252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not occur.  This may overflow but this doesn't matter, the kernel
5253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		will manage it correctly. */
5254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTimeToWake = xConstTickCount + xTicksToWait;
5255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The list item will be inserted in wake time order. */
5257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
5258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTimeToWake < xConstTickCount )
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 115


5260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Wake time has overflowed.  Place this item in the overflow list. */
5262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
5265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
5266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The wake time has not overflowed, so the current block list is used. */
5267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task entering the blocked state was placed at the head of the
5270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list of blocked tasks then xNextTaskUnblockTime needs to be updated
5271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			too. */
5272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xNextTaskUnblockTime )
5273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xNextTaskUnblockTime = xTimeToWake;
5275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
5279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
5283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xCanBlockIndefinitely;
5284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
5286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 878              		.loc 1 5286 1 view .LVU242
 879 0056 70BD     		pop	{r4, r5, r6, pc}
 880              	.LVL62:
 881              	.L74:
5211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 882              		.loc 1 5211 4 is_stmt 1 view .LVU243
5211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 883              		.loc 1 5211 56 is_stmt 0 view .LVU244
 884 0058 0B4B     		ldr	r3, .L75+4
 885 005a 1968     		ldr	r1, [r3]
5211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 886              		.loc 1 5211 4 view .LVU245
 887 005c 0431     		adds	r1, r1, #4
 888 005e 0D48     		ldr	r0, .L75+16
 889 0060 FFF7FEFF 		bl	vListInsertEnd
 890              	.LVL63:
 891 0064 F7E7     		b	.L68
 892              	.LVL64:
 893              	.L72:
5233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 894              		.loc 1 5233 5 is_stmt 1 view .LVU246
 895 0066 0C4B     		ldr	r3, .L75+20
 896 0068 1868     		ldr	r0, [r3]
5233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 897              		.loc 1 5233 52 is_stmt 0 view .LVU247
 898 006a 074B     		ldr	r3, .L75+4
 899 006c 1968     		ldr	r1, [r3]
5233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 900              		.loc 1 5233 5 view .LVU248
 901 006e 0431     		adds	r1, r1, #4
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 116


 902 0070 FFF7FEFF 		bl	vListInsert
 903              	.LVL65:
5238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 904              		.loc 1 5238 5 is_stmt 1 view .LVU249
5238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 905              		.loc 1 5238 21 is_stmt 0 view .LVU250
 906 0074 094B     		ldr	r3, .L75+24
 907 0076 1B68     		ldr	r3, [r3]
5238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 908              		.loc 1 5238 7 view .LVU251
 909 0078 A342     		cmp	r3, r4
 910 007a ECD9     		bls	.L68
5240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 911              		.loc 1 5240 6 is_stmt 1 view .LVU252
5240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 912              		.loc 1 5240 27 is_stmt 0 view .LVU253
 913 007c 074B     		ldr	r3, .L75+24
 914 007e 1C60     		str	r4, [r3]
5244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 915              		.loc 1 5244 30 is_stmt 1 view .LVU254
 916              		.loc 1 5286 1 is_stmt 0 view .LVU255
 917 0080 E9E7     		b	.L68
 918              	.L76:
 919 0082 00BF     		.align	2
 920              	.L75:
 921 0084 00000000 		.word	xTickCount
 922 0088 00000000 		.word	pxCurrentTCB
 923 008c 00000000 		.word	uxTopReadyPriority
 924 0090 00000000 		.word	pxOverflowDelayedTaskList
 925 0094 00000000 		.word	xSuspendedTaskList
 926 0098 00000000 		.word	pxDelayedTaskList
 927 009c 00000000 		.word	xNextTaskUnblockTime
 928              		.cfi_endproc
 929              	.LFE56:
 931              		.section	.text.xTaskCreateStatic,"ax",%progbits
 932              		.align	1
 933              		.global	xTaskCreateStatic
 934              		.syntax unified
 935              		.thumb
 936              		.thumb_func
 938              	xTaskCreateStatic:
 939              	.LVL66:
 940              	.LFB5:
 588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 941              		.loc 1 588 2 is_stmt 1 view -0
 942              		.cfi_startproc
 943              		@ args = 12, pretend = 0, frame = 8
 944              		@ frame_needed = 0, uses_anonymous_args = 0
 588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 945              		.loc 1 588 2 is_stmt 0 view .LVU257
 946 0000 30B5     		push	{r4, r5, lr}
 947              	.LCFI8:
 948              		.cfi_def_cfa_offset 12
 949              		.cfi_offset 4, -12
 950              		.cfi_offset 5, -8
 951              		.cfi_offset 14, -4
 952 0002 87B0     		sub	sp, sp, #28
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 117


 953              	.LCFI9:
 954              		.cfi_def_cfa_offset 40
 955 0004 0B9C     		ldr	r4, [sp, #44]
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 956              		.loc 1 589 2 is_stmt 1 view .LVU258
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 957              		.loc 1 590 2 view .LVU259
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 958              		.loc 1 592 3 view .LVU260
 959 0006 7CB1     		cbz	r4, .L85
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 960              		.loc 1 592 41 discriminator 2 view .LVU261
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 961              		.loc 1 593 3 view .LVU262
 962 0008 0C9D     		ldr	r5, [sp, #48]
 963 000a B5B1     		cbz	r5, .L86
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 964              		.loc 1 593 39 discriminator 2 view .LVU263
 965              	.LBB116:
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 966              		.loc 1 600 4 view .LVU264
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 967              		.loc 1 600 20 is_stmt 0 view .LVU265
 968 000c 5425     		movs	r5, #84
 969 000e 0495     		str	r5, [sp, #16]
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 970              		.loc 1 601 4 is_stmt 1 view .LVU266
 971 0010 049D     		ldr	r5, [sp, #16]
 972 0012 542D     		cmp	r5, #84
 973 0014 1AD0     		beq	.L82
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 974              		.loc 1 601 4 discriminator 1 view .LVU267
 975              	.LBB117:
 976              	.LBI117:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 977              		.loc 2 191 30 view .LVU268
 978              	.LBB118:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 979              		.loc 2 193 1 view .LVU269
 980              		.loc 2 195 2 view .LVU270
 981              		.syntax unified
 982              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 983 0016 4FF05003 			mov r3, #80												
 984 001a 83F31188 		msr basepri, r3											
 985 001e BFF36F8F 		isb														
 986 0022 BFF34F8F 		dsb														
 987              	
 988              	@ 0 "" 2
 989              	.LVL67:
 990              		.thumb
 991              		.syntax unified
 992              	.L83:
 993              		.loc 2 195 2 is_stmt 0 view .LVU271
 994              	.LBE118:
 995              	.LBE117:
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 996              		.loc 1 601 4 is_stmt 1 discriminator 3 view .LVU272
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 118


 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 997              		.loc 1 601 4 discriminator 3 view .LVU273
 998 0026 FEE7     		b	.L83
 999              	.LVL68:
 1000              	.L85:
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1001              		.loc 1 601 4 is_stmt 0 discriminator 3 view .LVU274
 1002              	.LBE116:
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1003              		.loc 1 592 3 is_stmt 1 discriminator 1 view .LVU275
 1004              	.LBB119:
 1005              	.LBI119:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1006              		.loc 2 191 30 view .LVU276
 1007              	.LBB120:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1008              		.loc 2 193 1 view .LVU277
 1009              		.loc 2 195 2 view .LVU278
 1010              		.syntax unified
 1011              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1012 0028 4FF05003 			mov r3, #80												
 1013 002c 83F31188 		msr basepri, r3											
 1014 0030 BFF36F8F 		isb														
 1015 0034 BFF34F8F 		dsb														
 1016              	
 1017              	@ 0 "" 2
 1018              	.LVL69:
 1019              		.thumb
 1020              		.syntax unified
 1021              	.L79:
 1022              		.loc 2 195 2 is_stmt 0 view .LVU279
 1023              	.LBE120:
 1024              	.LBE119:
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1025              		.loc 1 592 3 is_stmt 1 discriminator 3 view .LVU280
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 1026              		.loc 1 592 3 discriminator 3 view .LVU281
 1027 0038 FEE7     		b	.L79
 1028              	.LVL70:
 1029              	.L86:
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1030              		.loc 1 593 3 discriminator 1 view .LVU282
 1031              	.LBB121:
 1032              	.LBI121:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1033              		.loc 2 191 30 view .LVU283
 1034              	.LBB122:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1035              		.loc 2 193 1 view .LVU284
 1036              		.loc 2 195 2 view .LVU285
 1037              		.syntax unified
 1038              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1039 003a 4FF05003 			mov r3, #80												
 1040 003e 83F31188 		msr basepri, r3											
 1041 0042 BFF36F8F 		isb														
 1042 0046 BFF34F8F 		dsb														
 1043              	
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 119


 1044              	@ 0 "" 2
 1045              	.LVL71:
 1046              		.thumb
 1047              		.syntax unified
 1048              	.L81:
 1049              		.loc 2 195 2 is_stmt 0 view .LVU286
 1050              	.LBE122:
 1051              	.LBE121:
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1052              		.loc 1 593 3 is_stmt 1 discriminator 3 view .LVU287
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1053              		.loc 1 593 3 discriminator 3 view .LVU288
 1054 004a FEE7     		b	.L81
 1055              	.LVL72:
 1056              	.L82:
 1057              	.LBB123:
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 1058              		.loc 1 601 44 discriminator 2 view .LVU289
 602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1059              		.loc 1 602 4 view .LVU290
 1060 004c 049D     		ldr	r5, [sp, #16]
 1061              	.LBE123:
 607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1062              		.loc 1 607 3 view .LVU291
 611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 1063              		.loc 1 611 4 view .LVU292
 1064              	.LVL73:
 612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1065              		.loc 1 612 4 view .LVU293
 612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1066              		.loc 1 612 22 is_stmt 0 view .LVU294
 1067 004e 0C9D     		ldr	r5, [sp, #48]
 1068 0050 2C63     		str	r4, [r5, #48]
 618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1069              		.loc 1 618 5 is_stmt 1 view .LVU295
 618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1070              		.loc 1 618 37 is_stmt 0 view .LVU296
 1071 0052 0224     		movs	r4, #2
 1072 0054 85F85140 		strb	r4, [r5, #81]
 622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 1073              		.loc 1 622 4 is_stmt 1 view .LVU297
 1074 0058 0024     		movs	r4, #0
 1075 005a 0394     		str	r4, [sp, #12]
 1076 005c 0295     		str	r5, [sp, #8]
 1077 005e 05AC     		add	r4, sp, #20
 1078 0060 0194     		str	r4, [sp, #4]
 1079 0062 0A9C     		ldr	r4, [sp, #40]
 1080 0064 0094     		str	r4, [sp]
 1081 0066 FFF7FEFF 		bl	prvInitialiseNewTask
 1082              	.LVL74:
 623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1083              		.loc 1 623 4 view .LVU298
 1084 006a 0C98     		ldr	r0, [sp, #48]
 1085 006c FFF7FEFF 		bl	prvAddNewTaskToReadyList
 1086              	.LVL75:
 630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1087              		.loc 1 630 3 view .LVU299
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 120


 631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1088              		.loc 1 631 2 is_stmt 0 view .LVU300
 1089 0070 0598     		ldr	r0, [sp, #20]
 1090 0072 07B0     		add	sp, sp, #28
 1091              	.LCFI10:
 1092              		.cfi_def_cfa_offset 12
 1093              		@ sp needed
 1094 0074 30BD     		pop	{r4, r5, pc}
 631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1095              		.loc 1 631 2 view .LVU301
 1096              		.cfi_endproc
 1097              	.LFE5:
 1099              		.section	.text.xTaskCreate,"ax",%progbits
 1100              		.align	1
 1101              		.global	xTaskCreate
 1102              		.syntax unified
 1103              		.thumb
 1104              		.thumb_func
 1106              	xTaskCreate:
 1107              	.LVL76:
 1108              	.LFB6:
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 1109              		.loc 1 739 2 is_stmt 1 view -0
 1110              		.cfi_startproc
 1111              		@ args = 8, pretend = 0, frame = 0
 1112              		@ frame_needed = 0, uses_anonymous_args = 0
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 1113              		.loc 1 739 2 is_stmt 0 view .LVU303
 1114 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1115              	.LCFI11:
 1116              		.cfi_def_cfa_offset 28
 1117              		.cfi_offset 4, -28
 1118              		.cfi_offset 5, -24
 1119              		.cfi_offset 6, -20
 1120              		.cfi_offset 7, -16
 1121              		.cfi_offset 8, -12
 1122              		.cfi_offset 9, -8
 1123              		.cfi_offset 14, -4
 1124 0004 85B0     		sub	sp, sp, #20
 1125              	.LCFI12:
 1126              		.cfi_def_cfa_offset 48
 1127 0006 0746     		mov	r7, r0
 1128 0008 8846     		mov	r8, r1
 1129 000a 1446     		mov	r4, r2
 1130 000c 1E46     		mov	r6, r3
 740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 1131              		.loc 1 740 2 is_stmt 1 view .LVU304
 741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1132              		.loc 1 741 2 view .LVU305
 1133              	.LBB124:
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1134              		.loc 1 770 3 view .LVU306
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1135              		.loc 1 773 4 view .LVU307
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1136              		.loc 1 773 14 is_stmt 0 view .LVU308
 1137 000e 9000     		lsls	r0, r2, #2
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 121


 1138              	.LVL77:
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1139              		.loc 1 773 14 view .LVU309
 1140 0010 FFF7FEFF 		bl	pvPortMalloc
 1141              	.LVL78:
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1142              		.loc 1 775 4 is_stmt 1 view .LVU310
 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1143              		.loc 1 775 6 is_stmt 0 view .LVU311
 1144 0014 08B3     		cbz	r0, .L90
 1145 0016 8146     		mov	r9, r0
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1146              		.loc 1 778 5 is_stmt 1 view .LVU312
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1147              		.loc 1 778 28 is_stmt 0 view .LVU313
 1148 0018 5420     		movs	r0, #84
 1149              	.LVL79:
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1150              		.loc 1 778 28 view .LVU314
 1151 001a FFF7FEFF 		bl	pvPortMalloc
 1152              	.LVL80:
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1153              		.loc 1 780 5 is_stmt 1 view .LVU315
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1154              		.loc 1 780 7 is_stmt 0 view .LVU316
 1155 001e 0546     		mov	r5, r0
 1156 0020 A8B1     		cbz	r0, .L89
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1157              		.loc 1 783 6 is_stmt 1 view .LVU317
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1158              		.loc 1 783 24 is_stmt 0 view .LVU318
 1159 0022 C0F83090 		str	r9, [r0, #48]
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1160              		.loc 1 783 24 view .LVU319
 1161              	.LBE124:
 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1162              		.loc 1 799 3 is_stmt 1 view .LVU320
 805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1163              		.loc 1 805 5 view .LVU321
 805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1164              		.loc 1 805 37 is_stmt 0 view .LVU322
 1165 0026 0023     		movs	r3, #0
 1166 0028 80F85130 		strb	r3, [r0, #81]
 809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 1167              		.loc 1 809 4 is_stmt 1 view .LVU323
 1168 002c 0393     		str	r3, [sp, #12]
 1169 002e 0290     		str	r0, [sp, #8]
 1170 0030 0D9B     		ldr	r3, [sp, #52]
 1171 0032 0193     		str	r3, [sp, #4]
 1172 0034 0C9B     		ldr	r3, [sp, #48]
 1173 0036 0093     		str	r3, [sp]
 1174 0038 3346     		mov	r3, r6
 1175 003a 2246     		mov	r2, r4
 1176 003c 4146     		mov	r1, r8
 1177 003e 3846     		mov	r0, r7
 1178              	.LVL81:
 809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 122


 1179              		.loc 1 809 4 is_stmt 0 view .LVU324
 1180 0040 FFF7FEFF 		bl	prvInitialiseNewTask
 1181              	.LVL82:
 810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 1182              		.loc 1 810 4 is_stmt 1 view .LVU325
 1183 0044 2846     		mov	r0, r5
 1184 0046 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 1185              	.LVL83:
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1186              		.loc 1 811 4 view .LVU326
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1187              		.loc 1 811 12 is_stmt 0 view .LVU327
 1188 004a 0120     		movs	r0, #1
 1189 004c 07E0     		b	.L87
 1190              	.LVL84:
 1191              	.L89:
 1192              	.LBB125:
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1193              		.loc 1 789 6 is_stmt 1 view .LVU328
 1194 004e 4846     		mov	r0, r9
 1195              	.LVL85:
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1196              		.loc 1 789 6 is_stmt 0 view .LVU329
 1197 0050 FFF7FEFF 		bl	vPortFree
 1198              	.LVL86:
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1199              		.loc 1 789 6 view .LVU330
 1200              	.LBE125:
 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1201              		.loc 1 799 3 is_stmt 1 view .LVU331
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1202              		.loc 1 815 12 is_stmt 0 view .LVU332
 1203 0054 4FF0FF30 		mov	r0, #-1
 1204 0058 01E0     		b	.L87
 1205              	.LVL87:
 1206              	.L90:
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1207              		.loc 1 815 12 view .LVU333
 1208 005a 4FF0FF30 		mov	r0, #-1
 1209              	.LVL88:
 818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1210              		.loc 1 818 3 is_stmt 1 view .LVU334
 1211              	.L87:
 819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1212              		.loc 1 819 2 is_stmt 0 view .LVU335
 1213 005e 05B0     		add	sp, sp, #20
 1214              	.LCFI13:
 1215              		.cfi_def_cfa_offset 28
 1216              		@ sp needed
 1217 0060 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1218              		.loc 1 819 2 view .LVU336
 1219              		.cfi_endproc
 1220              	.LFE6:
 1222              		.section	.text.vTaskDelete,"ax",%progbits
 1223              		.align	1
 1224              		.global	vTaskDelete
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 123


 1225              		.syntax unified
 1226              		.thumb
 1227              		.thumb_func
 1229              	vTaskDelete:
 1230              	.LVL89:
 1231              	.LFB9:
1163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1232              		.loc 1 1163 2 is_stmt 1 view -0
 1233              		.cfi_startproc
 1234              		@ args = 0, pretend = 0, frame = 0
 1235              		@ frame_needed = 0, uses_anonymous_args = 0
1163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1236              		.loc 1 1163 2 is_stmt 0 view .LVU338
 1237 0000 38B5     		push	{r3, r4, r5, lr}
 1238              	.LCFI14:
 1239              		.cfi_def_cfa_offset 16
 1240              		.cfi_offset 3, -16
 1241              		.cfi_offset 4, -12
 1242              		.cfi_offset 5, -8
 1243              		.cfi_offset 14, -4
 1244 0002 0446     		mov	r4, r0
1164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1245              		.loc 1 1164 2 is_stmt 1 view .LVU339
1166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1246              		.loc 1 1166 3 view .LVU340
 1247 0004 FFF7FEFF 		bl	vPortEnterCritical
 1248              	.LVL90:
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1249              		.loc 1 1170 4 view .LVU341
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1250              		.loc 1 1170 12 is_stmt 0 view .LVU342
 1251 0008 002C     		cmp	r4, #0
 1252 000a 34D0     		beq	.L102
 1253              	.LVL91:
 1254              	.L93:
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1255              		.loc 1 1173 4 is_stmt 1 view .LVU343
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1256              		.loc 1 1173 8 is_stmt 0 view .LVU344
 1257 000c 251D     		adds	r5, r4, #4
 1258 000e 2846     		mov	r0, r5
 1259 0010 FFF7FEFF 		bl	uxListRemove
 1260              	.LVL92:
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1261              		.loc 1 1173 6 discriminator 1 view .LVU345
 1262 0014 70B9     		cbnz	r0, .L94
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1263              		.loc 1 1175 5 is_stmt 1 view .LVU346
 1264 0016 E26A     		ldr	r2, [r4, #44]
 1265 0018 02EB8203 		add	r3, r2, r2, lsl #2
 1266 001c 9B00     		lsls	r3, r3, #2
 1267 001e 2749     		ldr	r1, .L105
 1268 0020 CB58     		ldr	r3, [r1, r3]
 1269 0022 3BB9     		cbnz	r3, .L94
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1270              		.loc 1 1175 5 discriminator 1 view .LVU347
 1271 0024 0123     		movs	r3, #1
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 124


 1272 0026 03FA02F2 		lsl	r2, r3, r2
 1273 002a 2549     		ldr	r1, .L105+4
 1274 002c 0B68     		ldr	r3, [r1]
 1275 002e 23EA0203 		bic	r3, r3, r2
 1276 0032 0B60     		str	r3, [r1]
 1277              	.L94:
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1278              		.loc 1 1179 29 view .LVU348
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1279              		.loc 1 1183 4 view .LVU349
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1280              		.loc 1 1183 8 is_stmt 0 view .LVU350
 1281 0034 A36A     		ldr	r3, [r4, #40]
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1282              		.loc 1 1183 6 view .LVU351
 1283 0036 1BB1     		cbz	r3, .L95
1185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1284              		.loc 1 1185 5 is_stmt 1 view .LVU352
1185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1285              		.loc 1 1185 14 is_stmt 0 view .LVU353
 1286 0038 04F11800 		add	r0, r4, #24
 1287 003c FFF7FEFF 		bl	uxListRemove
 1288              	.LVL93:
 1289              	.L95:
1189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1290              		.loc 1 1189 29 is_stmt 1 view .LVU354
1196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1291              		.loc 1 1196 4 view .LVU355
1196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1292              		.loc 1 1196 16 is_stmt 0 view .LVU356
 1293 0040 204A     		ldr	r2, .L105+8
 1294 0042 1368     		ldr	r3, [r2]
 1295 0044 0133     		adds	r3, r3, #1
 1296 0046 1360     		str	r3, [r2]
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1297              		.loc 1 1198 4 is_stmt 1 view .LVU357
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1298              		.loc 1 1198 14 is_stmt 0 view .LVU358
 1299 0048 1F4B     		ldr	r3, .L105+12
 1300 004a 1B68     		ldr	r3, [r3]
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1301              		.loc 1 1198 6 view .LVU359
 1302 004c A342     		cmp	r3, r4
 1303 004e 15D0     		beq	.L103
1225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELETE( pxTCB );
 1304              		.loc 1 1225 5 is_stmt 1 view .LVU360
 1305 0050 1E4A     		ldr	r2, .L105+16
 1306 0052 1368     		ldr	r3, [r2]
 1307 0054 013B     		subs	r3, r3, #1
 1308 0056 1360     		str	r3, [r2]
1226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 1309              		.loc 1 1226 30 view .LVU361
1227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1310              		.loc 1 1227 5 view .LVU362
 1311 0058 2046     		mov	r0, r4
 1312 005a FFF7FEFF 		bl	prvDeleteTCB
 1313              	.LVL94:
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 125


1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1314              		.loc 1 1231 5 view .LVU363
 1315 005e FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1316              	.LVL95:
 1317              	.L97:
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1318              		.loc 1 1234 3 view .LVU364
 1319 0062 FFF7FEFF 		bl	vPortExitCritical
 1320              	.LVL96:
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1321              		.loc 1 1238 3 view .LVU365
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1322              		.loc 1 1238 25 is_stmt 0 view .LVU366
 1323 0066 1A4B     		ldr	r3, .L105+20
 1324 0068 1B68     		ldr	r3, [r3]
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1325              		.loc 1 1238 5 view .LVU367
 1326 006a 1BB1     		cbz	r3, .L92
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1327              		.loc 1 1240 4 is_stmt 1 view .LVU368
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1328              		.loc 1 1240 14 is_stmt 0 view .LVU369
 1329 006c 164B     		ldr	r3, .L105+12
 1330 006e 1B68     		ldr	r3, [r3]
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1331              		.loc 1 1240 6 view .LVU370
 1332 0070 A342     		cmp	r3, r4
 1333 0072 0CD0     		beq	.L104
 1334              	.L92:
1250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1335              		.loc 1 1250 2 view .LVU371
 1336 0074 38BD     		pop	{r3, r4, r5, pc}
 1337              	.LVL97:
 1338              	.L102:
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1339              		.loc 1 1170 12 discriminator 1 view .LVU372
 1340 0076 144B     		ldr	r3, .L105+12
 1341 0078 1C68     		ldr	r4, [r3]
 1342              	.LVL98:
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1343              		.loc 1 1170 12 discriminator 1 view .LVU373
 1344 007a C7E7     		b	.L93
 1345              	.LVL99:
 1346              	.L103:
1205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1347              		.loc 1 1205 5 is_stmt 1 view .LVU374
 1348 007c 2946     		mov	r1, r5
 1349 007e 1548     		ldr	r0, .L105+24
 1350 0080 FFF7FEFF 		bl	vListInsertEnd
 1351              	.LVL100:
1210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1352              		.loc 1 1210 5 view .LVU375
 1353 0084 144A     		ldr	r2, .L105+28
 1354 0086 1368     		ldr	r3, [r2]
 1355 0088 0133     		adds	r3, r3, #1
 1356 008a 1360     		str	r3, [r2]
1214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 126


 1357              		.loc 1 1214 30 view .LVU376
1221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1358              		.loc 1 1221 54 view .LVU377
 1359 008c E9E7     		b	.L97
 1360              	.L104:
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1361              		.loc 1 1242 5 view .LVU378
 1362 008e 134B     		ldr	r3, .L105+32
 1363 0090 1B68     		ldr	r3, [r3]
 1364 0092 43B1     		cbz	r3, .L99
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1365              		.loc 1 1242 5 discriminator 1 view .LVU379
 1366              	.LBB126:
 1367              	.LBI126:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1368              		.loc 2 191 30 view .LVU380
 1369              	.LBB127:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1370              		.loc 2 193 1 view .LVU381
 1371              		.loc 2 195 2 view .LVU382
 1372              		.syntax unified
 1373              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1374 0094 4FF05003 			mov r3, #80												
 1375 0098 83F31188 		msr basepri, r3											
 1376 009c BFF36F8F 		isb														
 1377 00a0 BFF34F8F 		dsb														
 1378              	
 1379              	@ 0 "" 2
 1380              		.thumb
 1381              		.syntax unified
 1382              	.L100:
 1383              	.LBE127:
 1384              	.LBE126:
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1385              		.loc 1 1242 5 discriminator 3 view .LVU383
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1386              		.loc 1 1242 5 discriminator 3 view .LVU384
 1387 00a4 FEE7     		b	.L100
 1388              	.L99:
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1389              		.loc 1 1242 46 discriminator 2 view .LVU385
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1390              		.loc 1 1243 5 view .LVU386
 1391 00a6 4FF0E023 		mov	r3, #-536813568
 1392 00aa 4FF08052 		mov	r2, #268435456
 1393 00ae C3F8042D 		str	r2, [r3, #3332]
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1394              		.loc 1 1243 5 view .LVU387
 1395              		.syntax unified
 1396              	@ 1243 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1397 00b2 BFF34F8F 		dsb
 1398              	@ 0 "" 2
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1399              		.loc 1 1243 5 view .LVU388
 1400              	@ 1243 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1401 00b6 BFF36F8F 		isb
 1402              	@ 0 "" 2
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 127


1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1403              		.loc 1 1243 27 view .LVU389
1247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1404              		.loc 1 1247 29 view .LVU390
1250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1405              		.loc 1 1250 2 is_stmt 0 view .LVU391
 1406              		.thumb
 1407              		.syntax unified
 1408 00ba DBE7     		b	.L92
 1409              	.L106:
 1410              		.align	2
 1411              	.L105:
 1412 00bc 00000000 		.word	pxReadyTasksLists
 1413 00c0 00000000 		.word	uxTopReadyPriority
 1414 00c4 00000000 		.word	uxTaskNumber
 1415 00c8 00000000 		.word	pxCurrentTCB
 1416 00cc 00000000 		.word	uxCurrentNumberOfTasks
 1417 00d0 00000000 		.word	xSchedulerRunning
 1418 00d4 00000000 		.word	xTasksWaitingTermination
 1419 00d8 00000000 		.word	uxDeletedTasksWaitingCleanUp
 1420 00dc 00000000 		.word	uxSchedulerSuspended
 1421              		.cfi_endproc
 1422              	.LFE9:
 1424              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 1425              		.align	1
 1426              		.global	uxTaskPriorityGet
 1427              		.syntax unified
 1428              		.thumb
 1429              		.thumb_func
 1431              	uxTaskPriorityGet:
 1432              	.LVL101:
 1433              	.LFB11:
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1434              		.loc 1 1479 2 is_stmt 1 view -0
 1435              		.cfi_startproc
 1436              		@ args = 0, pretend = 0, frame = 0
 1437              		@ frame_needed = 0, uses_anonymous_args = 0
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1438              		.loc 1 1479 2 is_stmt 0 view .LVU393
 1439 0000 10B5     		push	{r4, lr}
 1440              	.LCFI15:
 1441              		.cfi_def_cfa_offset 8
 1442              		.cfi_offset 4, -8
 1443              		.cfi_offset 14, -4
 1444 0002 0446     		mov	r4, r0
1480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
 1445              		.loc 1 1480 2 is_stmt 1 view .LVU394
1481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1446              		.loc 1 1481 2 view .LVU395
1483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1447              		.loc 1 1483 3 view .LVU396
 1448 0004 FFF7FEFF 		bl	vPortEnterCritical
 1449              	.LVL102:
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1450              		.loc 1 1487 4 view .LVU397
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1451              		.loc 1 1487 12 is_stmt 0 view .LVU398
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 128


 1452 0008 24B1     		cbz	r4, .L110
 1453              	.LVL103:
 1454              	.L108:
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1455              		.loc 1 1488 4 is_stmt 1 view .LVU399
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1456              		.loc 1 1488 13 is_stmt 0 view .LVU400
 1457 000a E46A     		ldr	r4, [r4, #44]
 1458              	.LVL104:
1490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1459              		.loc 1 1490 3 is_stmt 1 view .LVU401
 1460 000c FFF7FEFF 		bl	vPortExitCritical
 1461              	.LVL105:
1492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1462              		.loc 1 1492 3 view .LVU402
1493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1463              		.loc 1 1493 2 is_stmt 0 view .LVU403
 1464 0010 2046     		mov	r0, r4
 1465 0012 10BD     		pop	{r4, pc}
 1466              	.LVL106:
 1467              	.L110:
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1468              		.loc 1 1487 12 discriminator 1 view .LVU404
 1469 0014 014B     		ldr	r3, .L111
 1470 0016 1C68     		ldr	r4, [r3]
 1471              	.LVL107:
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1472              		.loc 1 1487 12 discriminator 1 view .LVU405
 1473 0018 F7E7     		b	.L108
 1474              	.L112:
 1475 001a 00BF     		.align	2
 1476              	.L111:
 1477 001c 00000000 		.word	pxCurrentTCB
 1478              		.cfi_endproc
 1479              	.LFE11:
 1481              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1482              		.align	1
 1483              		.global	uxTaskPriorityGetFromISR
 1484              		.syntax unified
 1485              		.thumb
 1486              		.thumb_func
 1488              	uxTaskPriorityGetFromISR:
 1489              	.LVL108:
 1490              	.LFB12:
1501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1491              		.loc 1 1501 2 is_stmt 1 view -0
 1492              		.cfi_startproc
 1493              		@ args = 0, pretend = 0, frame = 0
 1494              		@ frame_needed = 0, uses_anonymous_args = 0
1501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
 1495              		.loc 1 1501 2 is_stmt 0 view .LVU407
 1496 0000 10B5     		push	{r4, lr}
 1497              	.LCFI16:
 1498              		.cfi_def_cfa_offset 8
 1499              		.cfi_offset 4, -8
 1500              		.cfi_offset 14, -4
 1501 0002 0446     		mov	r4, r0
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 129


1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
 1502              		.loc 1 1502 2 is_stmt 1 view .LVU408
1503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1503              		.loc 1 1503 2 view .LVU409
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1504              		.loc 1 1521 3 view .LVU410
 1505 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1506              	.LVL109:
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1507              		.loc 1 1523 3 view .LVU411
 1508              	.LBB128:
 1509              	.LBI128:
 196:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 197:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 200:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 201:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 203:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 204:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 206:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 1510              		.loc 2 207 34 view .LVU412
 1511              	.LBB129:
 208:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 1512              		.loc 2 209 1 view .LVU413
 210:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1513              		.loc 2 211 2 view .LVU414
 1514              		.syntax unified
 1515              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1516 0008 EFF31183 			mrs r3, basepri											
 1517 000c 4FF05002 		mov r2, #80												
 1518 0010 82F31188 		msr basepri, r2											
 1519 0014 BFF36F8F 		isb														
 1520 0018 BFF34F8F 		dsb														
 1521              	
 1522              	@ 0 "" 2
 1523              	.LVL110:
 212:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 213:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 215:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 217:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 218:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 220:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 221:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	warnings. */
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 1524              		.loc 2 223 2 view .LVU415
 1525              		.loc 2 223 2 is_stmt 0 view .LVU416
 1526              		.thumb
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 130


 1527              		.syntax unified
 1528              	.LBE129:
 1529              	.LBE128:
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1530              		.loc 1 1527 4 is_stmt 1 view .LVU417
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1531              		.loc 1 1527 12 is_stmt 0 view .LVU418
 1532 001c 1CB1     		cbz	r4, .L116
 1533              	.LVL111:
 1534              	.L114:
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1535              		.loc 1 1528 4 is_stmt 1 view .LVU419
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1536              		.loc 1 1528 13 is_stmt 0 view .LVU420
 1537 001e E06A     		ldr	r0, [r4, #44]
 1538              	.LVL112:
1530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1539              		.loc 1 1530 3 is_stmt 1 view .LVU421
 1540              	.LBB130:
 1541              	.LBI130:
 224:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 225:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 226:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 1542              		.loc 2 227 30 view .LVU422
 1543              	.LBB131:
 228:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 229:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1544              		.loc 2 229 2 view .LVU423
 1545              		.syntax unified
 1546              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1547 0020 83F31188 			msr basepri, r3	
 1548              	@ 0 "" 2
 1549              		.thumb
 1550              		.syntax unified
 1551              	.LBE131:
 1552              	.LBE130:
1532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1553              		.loc 1 1532 3 view .LVU424
1533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1554              		.loc 1 1533 2 is_stmt 0 view .LVU425
 1555 0024 10BD     		pop	{r4, pc}
 1556              	.LVL113:
 1557              	.L116:
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1558              		.loc 1 1527 12 discriminator 1 view .LVU426
 1559 0026 014A     		ldr	r2, .L117
 1560 0028 1468     		ldr	r4, [r2]
 1561              	.LVL114:
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1562              		.loc 1 1527 12 discriminator 1 view .LVU427
 1563 002a F8E7     		b	.L114
 1564              	.L118:
 1565              		.align	2
 1566              	.L117:
 1567 002c 00000000 		.word	pxCurrentTCB
 1568              		.cfi_endproc
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 131


 1569              	.LFE12:
 1571              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1572              		.align	1
 1573              		.global	vTaskPrioritySet
 1574              		.syntax unified
 1575              		.thumb
 1576              		.thumb_func
 1578              	vTaskPrioritySet:
 1579              	.LVL115:
 1580              	.LFB13:
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1581              		.loc 1 1541 2 is_stmt 1 view -0
 1582              		.cfi_startproc
 1583              		@ args = 0, pretend = 0, frame = 0
 1584              		@ frame_needed = 0, uses_anonymous_args = 0
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1585              		.loc 1 1541 2 is_stmt 0 view .LVU429
 1586 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1587              	.LCFI17:
 1588              		.cfi_def_cfa_offset 24
 1589              		.cfi_offset 3, -24
 1590              		.cfi_offset 4, -20
 1591              		.cfi_offset 5, -16
 1592              		.cfi_offset 6, -12
 1593              		.cfi_offset 7, -8
 1594              		.cfi_offset 14, -4
1542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
 1595              		.loc 1 1542 2 is_stmt 1 view .LVU430
1543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1596              		.loc 1 1543 2 view .LVU431
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1597              		.loc 1 1544 2 view .LVU432
 1598              	.LVL116:
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1599              		.loc 1 1546 3 view .LVU433
 1600 0002 0629     		cmp	r1, #6
 1601 0004 08D9     		bls	.L120
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1602              		.loc 1 1546 3 discriminator 1 view .LVU434
 1603              	.LBB132:
 1604              	.LBI132:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1605              		.loc 2 191 30 view .LVU435
 1606              	.LBB133:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1607              		.loc 2 193 1 view .LVU436
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1608              		.loc 2 195 2 view .LVU437
 1609              		.syntax unified
 1610              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1611 0006 4FF05003 			mov r3, #80												
 1612 000a 83F31188 		msr basepri, r3											
 1613 000e BFF36F8F 		isb														
 1614 0012 BFF34F8F 		dsb														
 1615              	
 1616              	@ 0 "" 2
 1617              		.thumb
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 132


 1618              		.syntax unified
 1619              	.L121:
 1620              	.LBE133:
 1621              	.LBE132:
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1622              		.loc 1 1546 3 discriminator 3 view .LVU438
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1623              		.loc 1 1546 3 discriminator 3 view .LVU439
 1624 0016 FEE7     		b	.L121
 1625              	.L120:
 1626 0018 0546     		mov	r5, r0
 1627 001a 0C46     		mov	r4, r1
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1628              		.loc 1 1546 59 discriminator 2 view .LVU440
1549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1629              		.loc 1 1549 3 view .LVU441
 1630              	.LVL117:
1555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1631              		.loc 1 1555 28 view .LVU442
1558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1632              		.loc 1 1558 3 view .LVU443
 1633 001c FFF7FEFF 		bl	vPortEnterCritical
 1634              	.LVL118:
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1635              		.loc 1 1562 4 view .LVU444
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1636              		.loc 1 1562 12 is_stmt 0 view .LVU445
 1637 0020 75B1     		cbz	r5, .L134
 1638              	.LVL119:
 1639              	.L122:
1564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1640              		.loc 1 1564 50 is_stmt 1 view .LVU446
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1641              		.loc 1 1568 5 view .LVU447
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1642              		.loc 1 1568 27 is_stmt 0 view .LVU448
 1643 0022 6B6C     		ldr	r3, [r5, #68]
 1644              	.LVL120:
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1645              		.loc 1 1576 4 is_stmt 1 view .LVU449
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1646              		.loc 1 1576 6 is_stmt 0 view .LVU450
 1647 0024 9C42     		cmp	r4, r3
 1648 0026 30D0     		beq	.L123
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1649              		.loc 1 1580 5 is_stmt 1 view .LVU451
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1650              		.loc 1 1580 7 is_stmt 0 view .LVU452
 1651 0028 0DD9     		bls	.L124
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1652              		.loc 1 1582 6 is_stmt 1 view .LVU453
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1653              		.loc 1 1582 16 is_stmt 0 view .LVU454
 1654 002a 2B4A     		ldr	r2, .L137
 1655 002c 1268     		ldr	r2, [r2]
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1656              		.loc 1 1582 8 view .LVU455
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 133


 1657 002e AA42     		cmp	r2, r5
 1658 0030 2ED0     		beq	.L130
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1659              		.loc 1 1587 7 is_stmt 1 view .LVU456
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1660              		.loc 1 1587 40 is_stmt 0 view .LVU457
 1661 0032 294A     		ldr	r2, .L137
 1662 0034 1268     		ldr	r2, [r2]
 1663 0036 D26A     		ldr	r2, [r2, #44]
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1664              		.loc 1 1587 9 view .LVU458
 1665 0038 A242     		cmp	r2, r4
 1666 003a 2BD9     		bls	.L131
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1667              		.loc 1 1544 13 view .LVU459
 1668 003c 0027     		movs	r7, #0
 1669 003e 07E0     		b	.L125
 1670              	.LVL121:
 1671              	.L134:
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1672              		.loc 1 1562 12 discriminator 1 view .LVU460
 1673 0040 254B     		ldr	r3, .L137
 1674 0042 1D68     		ldr	r5, [r3]
 1675              	.LVL122:
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1676              		.loc 1 1562 12 discriminator 1 view .LVU461
 1677 0044 EDE7     		b	.L122
 1678              	.LVL123:
 1679              	.L124:
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1680              		.loc 1 1603 10 is_stmt 1 view .LVU462
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1681              		.loc 1 1603 20 is_stmt 0 view .LVU463
 1682 0046 244A     		ldr	r2, .L137
 1683 0048 1268     		ldr	r2, [r2]
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1684              		.loc 1 1603 12 view .LVU464
 1685 004a AA42     		cmp	r2, r5
 1686 004c 24D0     		beq	.L132
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1687              		.loc 1 1544 13 view .LVU465
 1688 004e 0027     		movs	r7, #0
 1689              	.L125:
 1690              	.LVL124:
1615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1691              		.loc 1 1615 5 is_stmt 1 view .LVU466
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1692              		.loc 1 1620 5 view .LVU467
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1693              		.loc 1 1620 27 is_stmt 0 view .LVU468
 1694 0050 EE6A     		ldr	r6, [r5, #44]
 1695              	.LVL125:
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1696              		.loc 1 1626 6 is_stmt 1 view .LVU469
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1697              		.loc 1 1626 8 is_stmt 0 view .LVU470
 1698 0052 B342     		cmp	r3, r6
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 134


 1699 0054 22D0     		beq	.L135
 1700              	.L126:
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1701              		.loc 1 1632 31 is_stmt 1 view .LVU471
1636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1702              		.loc 1 1636 6 view .LVU472
1636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1703              		.loc 1 1636 28 is_stmt 0 view .LVU473
 1704 0056 6C64     		str	r4, [r5, #68]
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1705              		.loc 1 1646 5 is_stmt 1 view .LVU474
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1706              		.loc 1 1646 11 is_stmt 0 view .LVU475
 1707 0058 AB69     		ldr	r3, [r5, #24]
 1708              	.LVL126:
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1709              		.loc 1 1646 7 view .LVU476
 1710 005a 002B     		cmp	r3, #0
 1711 005c 02DB     		blt	.L127
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1712              		.loc 1 1648 6 is_stmt 1 view .LVU477
 1713 005e C4F10704 		rsb	r4, r4, #7
 1714              	.LVL127:
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1715              		.loc 1 1648 6 is_stmt 0 view .LVU478
 1716 0062 AC61     		str	r4, [r5, #24]
 1717              	.L127:
1652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1718              		.loc 1 1652 30 is_stmt 1 view .LVU479
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1719              		.loc 1 1659 5 view .LVU480
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1720              		.loc 1 1659 9 is_stmt 0 view .LVU481
 1721 0064 6969     		ldr	r1, [r5, #20]
 1722 0066 06EB8602 		add	r2, r6, r6, lsl #2
 1723 006a 1C4B     		ldr	r3, .L137+4
 1724 006c 03EB8203 		add	r3, r3, r2, lsl #2
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1725              		.loc 1 1659 7 view .LVU482
 1726 0070 9942     		cmp	r1, r3
 1727 0072 15D0     		beq	.L136
 1728              	.LVL128:
 1729              	.L128:
1679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1730              		.loc 1 1679 30 is_stmt 1 view .LVU483
1682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1731              		.loc 1 1682 5 view .LVU484
1682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1732              		.loc 1 1682 7 is_stmt 0 view .LVU485
 1733 0074 4FB1     		cbz	r7, .L123
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1734              		.loc 1 1684 6 is_stmt 1 view .LVU486
 1735 0076 4FF0E023 		mov	r3, #-536813568
 1736 007a 4FF08052 		mov	r2, #268435456
 1737 007e C3F8042D 		str	r2, [r3, #3332]
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1738              		.loc 1 1684 6 view .LVU487
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 135


 1739              		.syntax unified
 1740              	@ 1684 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1741 0082 BFF34F8F 		dsb
 1742              	@ 0 "" 2
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1743              		.loc 1 1684 6 view .LVU488
 1744              	@ 1684 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1745 0086 BFF36F8F 		isb
 1746              	@ 0 "" 2
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1747              		.loc 1 1684 37 view .LVU489
 1748              	.LVL129:
 1749              		.thumb
 1750              		.syntax unified
 1751              	.L123:
1688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1752              		.loc 1 1688 30 view .LVU490
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1753              		.loc 1 1693 5 view .LVU491
1696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1754              		.loc 1 1696 3 view .LVU492
 1755 008a FFF7FEFF 		bl	vPortExitCritical
 1756              	.LVL130:
1697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1757              		.loc 1 1697 2 is_stmt 0 view .LVU493
 1758 008e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1759              	.LVL131:
 1760              	.L130:
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1761              		.loc 1 1544 13 view .LVU494
 1762 0090 0027     		movs	r7, #0
 1763 0092 DDE7     		b	.L125
 1764              	.L131:
1589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 1765              		.loc 1 1589 23 view .LVU495
 1766 0094 0127     		movs	r7, #1
 1767 0096 DBE7     		b	.L125
 1768              	.L132:
1608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1769              		.loc 1 1608 21 view .LVU496
 1770 0098 0127     		movs	r7, #1
 1771 009a D9E7     		b	.L125
 1772              	.LVL132:
 1773              	.L135:
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1774              		.loc 1 1628 7 is_stmt 1 view .LVU497
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1775              		.loc 1 1628 25 is_stmt 0 view .LVU498
 1776 009c EC62     		str	r4, [r5, #44]
 1777 009e DAE7     		b	.L126
 1778              	.LVL133:
 1779              	.L136:
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1780              		.loc 1 1664 6 is_stmt 1 view .LVU499
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1781              		.loc 1 1664 10 is_stmt 0 view .LVU500
 1782 00a0 2C1D     		adds	r4, r5, #4
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 136


 1783 00a2 2046     		mov	r0, r4
 1784 00a4 FFF7FEFF 		bl	uxListRemove
 1785              	.LVL134:
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1786              		.loc 1 1664 8 discriminator 1 view .LVU501
 1787 00a8 30B9     		cbnz	r0, .L129
1669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1788              		.loc 1 1669 7 is_stmt 1 view .LVU502
 1789 00aa 0122     		movs	r2, #1
 1790 00ac B240     		lsls	r2, r2, r6
 1791 00ae 0C49     		ldr	r1, .L137+8
 1792 00b0 0B68     		ldr	r3, [r1]
 1793 00b2 23EA0203 		bic	r3, r3, r2
 1794 00b6 0B60     		str	r3, [r1]
 1795              	.L129:
1673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1796              		.loc 1 1673 31 view .LVU503
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1797              		.loc 1 1675 6 view .LVU504
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1798              		.loc 1 1675 6 view .LVU505
 1799 00b8 E86A     		ldr	r0, [r5, #44]
 1800 00ba 0123     		movs	r3, #1
 1801 00bc 8340     		lsls	r3, r3, r0
 1802 00be 084A     		ldr	r2, .L137+8
 1803 00c0 1168     		ldr	r1, [r2]
 1804 00c2 0B43     		orrs	r3, r3, r1
 1805 00c4 1360     		str	r3, [r2]
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1806              		.loc 1 1675 6 view .LVU506
 1807 00c6 00EB8000 		add	r0, r0, r0, lsl #2
 1808 00ca 2146     		mov	r1, r4
 1809 00cc 034B     		ldr	r3, .L137+4
 1810 00ce 03EB8000 		add	r0, r3, r0, lsl #2
 1811 00d2 FFF7FEFF 		bl	vListInsertEnd
 1812              	.LVL135:
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1813              		.loc 1 1675 36 discriminator 1 view .LVU507
 1814 00d6 CDE7     		b	.L128
 1815              	.L138:
 1816              		.align	2
 1817              	.L137:
 1818 00d8 00000000 		.word	pxCurrentTCB
 1819 00dc 00000000 		.word	pxReadyTasksLists
 1820 00e0 00000000 		.word	uxTopReadyPriority
 1821              		.cfi_endproc
 1822              	.LFE13:
 1824              		.section	.text.vTaskResume,"ax",%progbits
 1825              		.align	1
 1826              		.global	vTaskResume
 1827              		.syntax unified
 1828              		.thumb
 1829              		.thumb_func
 1831              	vTaskResume:
 1832              	.LVL136:
 1833              	.LFB16:
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 137


 1834              		.loc 1 1852 2 view -0
 1835              		.cfi_startproc
 1836              		@ args = 0, pretend = 0, frame = 0
 1837              		@ frame_needed = 0, uses_anonymous_args = 0
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 1838              		.loc 1 1852 2 is_stmt 0 view .LVU509
 1839 0000 38B5     		push	{r3, r4, r5, lr}
 1840              	.LCFI18:
 1841              		.cfi_def_cfa_offset 16
 1842              		.cfi_offset 3, -16
 1843              		.cfi_offset 4, -12
 1844              		.cfi_offset 5, -8
 1845              		.cfi_offset 14, -4
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1846              		.loc 1 1853 2 is_stmt 1 view .LVU510
 1847              	.LVL137:
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1848              		.loc 1 1856 3 view .LVU511
 1849 0002 68B1     		cbz	r0, .L145
 1850 0004 0446     		mov	r4, r0
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1851              		.loc 1 1856 32 discriminator 2 view .LVU512
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1852              		.loc 1 1860 3 view .LVU513
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1853              		.loc 1 1860 15 is_stmt 0 view .LVU514
 1854 0006 1D4B     		ldr	r3, .L147
 1855 0008 1B68     		ldr	r3, [r3]
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1856              		.loc 1 1860 5 view .LVU515
 1857 000a 8342     		cmp	r3, r0
 1858 000c 07D0     		beq	.L139
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1859              		.loc 1 1862 4 is_stmt 1 view .LVU516
 1860 000e FFF7FEFF 		bl	vPortEnterCritical
 1861              	.LVL138:
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1862              		.loc 1 1864 5 view .LVU517
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1863              		.loc 1 1864 9 is_stmt 0 view .LVU518
 1864 0012 2046     		mov	r0, r4
 1865 0014 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1866              	.LVL139:
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1867              		.loc 1 1864 7 discriminator 1 view .LVU519
 1868 0018 58B9     		cbnz	r0, .L146
 1869              	.L143:
1888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1870              		.loc 1 1888 30 is_stmt 1 view .LVU520
1891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1871              		.loc 1 1891 4 view .LVU521
 1872 001a FFF7FEFF 		bl	vPortExitCritical
 1873              	.LVL140:
1895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1874              		.loc 1 1895 28 view .LVU522
 1875              	.L139:
1897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 138


 1876              		.loc 1 1897 2 is_stmt 0 view .LVU523
 1877 001e 38BD     		pop	{r3, r4, r5, pc}
 1878              	.LVL141:
 1879              	.L145:
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1880              		.loc 1 1856 3 is_stmt 1 discriminator 1 view .LVU524
 1881              	.LBB134:
 1882              	.LBI134:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 1883              		.loc 2 191 30 view .LVU525
 1884              	.LBB135:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 1885              		.loc 2 193 1 view .LVU526
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1886              		.loc 2 195 2 view .LVU527
 1887              		.syntax unified
 1888              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1889 0020 4FF05003 			mov r3, #80												
 1890 0024 83F31188 		msr basepri, r3											
 1891 0028 BFF36F8F 		isb														
 1892 002c BFF34F8F 		dsb														
 1893              	
 1894              	@ 0 "" 2
 1895              		.thumb
 1896              		.syntax unified
 1897              	.L141:
 1898              	.LBE135:
 1899              	.LBE134:
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1900              		.loc 1 1856 3 discriminator 3 view .LVU528
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1901              		.loc 1 1856 3 discriminator 3 view .LVU529
 1902 0030 FEE7     		b	.L141
 1903              	.LVL142:
 1904              	.L146:
1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1905              		.loc 1 1866 31 view .LVU530
1870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1906              		.loc 1 1870 6 view .LVU531
1870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1907              		.loc 1 1870 15 is_stmt 0 view .LVU532
 1908 0032 251D     		adds	r5, r4, #4
 1909 0034 2846     		mov	r0, r5
 1910 0036 FFF7FEFF 		bl	uxListRemove
 1911              	.LVL143:
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1912              		.loc 1 1871 6 is_stmt 1 view .LVU533
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1913              		.loc 1 1871 6 view .LVU534
 1914 003a E06A     		ldr	r0, [r4, #44]
 1915 003c 0123     		movs	r3, #1
 1916 003e 8340     		lsls	r3, r3, r0
 1917 0040 0F4A     		ldr	r2, .L147+4
 1918 0042 1168     		ldr	r1, [r2]
 1919 0044 0B43     		orrs	r3, r3, r1
 1920 0046 1360     		str	r3, [r2]
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 139


 1921              		.loc 1 1871 6 view .LVU535
 1922 0048 00EB8000 		add	r0, r0, r0, lsl #2
 1923 004c 2946     		mov	r1, r5
 1924 004e 0D4B     		ldr	r3, .L147+8
 1925 0050 03EB8000 		add	r0, r3, r0, lsl #2
 1926 0054 FFF7FEFF 		bl	vListInsertEnd
 1927              	.LVL144:
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1928              		.loc 1 1871 36 discriminator 1 view .LVU536
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1929              		.loc 1 1874 6 view .LVU537
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1930              		.loc 1 1874 15 is_stmt 0 view .LVU538
 1931 0058 E26A     		ldr	r2, [r4, #44]
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1932              		.loc 1 1874 43 view .LVU539
 1933 005a 084B     		ldr	r3, .L147
 1934 005c 1B68     		ldr	r3, [r3]
 1935 005e DB6A     		ldr	r3, [r3, #44]
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1936              		.loc 1 1874 8 view .LVU540
 1937 0060 9A42     		cmp	r2, r3
 1938 0062 DAD3     		bcc	.L143
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1939              		.loc 1 1879 7 is_stmt 1 view .LVU541
 1940 0064 4FF0E023 		mov	r3, #-536813568
 1941 0068 4FF08052 		mov	r2, #268435456
 1942 006c C3F8042D 		str	r2, [r3, #3332]
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1943              		.loc 1 1879 7 view .LVU542
 1944              		.syntax unified
 1945              	@ 1879 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1946 0070 BFF34F8F 		dsb
 1947              	@ 0 "" 2
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1948              		.loc 1 1879 7 view .LVU543
 1949              	@ 1879 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1950 0074 BFF36F8F 		isb
 1951              	@ 0 "" 2
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1952              		.loc 1 1879 38 view .LVU544
 1953              		.thumb
 1954              		.syntax unified
 1955 0078 CFE7     		b	.L143
 1956              	.L148:
 1957 007a 00BF     		.align	2
 1958              	.L147:
 1959 007c 00000000 		.word	pxCurrentTCB
 1960 0080 00000000 		.word	uxTopReadyPriority
 1961 0084 00000000 		.word	pxReadyTasksLists
 1962              		.cfi_endproc
 1963              	.LFE16:
 1965              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 1966              		.align	1
 1967              		.global	xTaskResumeFromISR
 1968              		.syntax unified
 1969              		.thumb
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 140


 1970              		.thumb_func
 1972              	xTaskResumeFromISR:
 1973              	.LVL145:
 1974              	.LFB17:
1906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1975              		.loc 1 1906 2 view -0
 1976              		.cfi_startproc
 1977              		@ args = 0, pretend = 0, frame = 0
 1978              		@ frame_needed = 0, uses_anonymous_args = 0
1906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1979              		.loc 1 1906 2 is_stmt 0 view .LVU546
 1980 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1981              	.LCFI19:
 1982              		.cfi_def_cfa_offset 24
 1983              		.cfi_offset 3, -24
 1984              		.cfi_offset 4, -20
 1985              		.cfi_offset 5, -16
 1986              		.cfi_offset 6, -12
 1987              		.cfi_offset 7, -8
 1988              		.cfi_offset 14, -4
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 1989              		.loc 1 1907 2 is_stmt 1 view .LVU547
 1990              	.LVL146:
1908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 1991              		.loc 1 1908 2 view .LVU548
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1992              		.loc 1 1909 2 view .LVU549
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1993              		.loc 1 1911 3 view .LVU550
 1994 0002 90B3     		cbz	r0, .L157
 1995 0004 0546     		mov	r5, r0
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1996              		.loc 1 1911 32 discriminator 2 view .LVU551
1929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1997              		.loc 1 1929 3 view .LVU552
 1998 0006 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1999              	.LVL147:
1931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2000              		.loc 1 1931 3 view .LVU553
 2001              	.LBB136:
 2002              	.LBI136:
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2003              		.loc 2 207 34 view .LVU554
 2004              	.LBB137:
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2005              		.loc 2 209 1 view .LVU555
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2006              		.loc 2 211 2 view .LVU556
 2007              		.syntax unified
 2008              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2009 000a EFF31184 			mrs r4, basepri											
 2010 000e 4FF05003 		mov r3, #80												
 2011 0012 83F31188 		msr basepri, r3											
 2012 0016 BFF36F8F 		isb														
 2013 001a BFF34F8F 		dsb														
 2014              	
 2015              	@ 0 "" 2
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 141


 2016              	.LVL148:
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 2017              		.loc 2 223 2 view .LVU557
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 2018              		.loc 2 223 2 is_stmt 0 view .LVU558
 2019              		.thumb
 2020              		.syntax unified
 2021              	.LBE137:
 2022              	.LBE136:
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2023              		.loc 1 1933 4 is_stmt 1 view .LVU559
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2024              		.loc 1 1933 8 is_stmt 0 view .LVU560
 2025 001e 2846     		mov	r0, r5
 2026 0020 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 2027              	.LVL149:
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2028              		.loc 1 1933 6 discriminator 1 view .LVU561
 2029 0024 0646     		mov	r6, r0
 2030 0026 E0B1     		cbz	r0, .L152
1935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2031              		.loc 1 1935 39 is_stmt 1 view .LVU562
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2032              		.loc 1 1938 5 view .LVU563
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2033              		.loc 1 1938 30 is_stmt 0 view .LVU564
 2034 0028 194B     		ldr	r3, .L158
 2035 002a 1B68     		ldr	r3, [r3]
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2036              		.loc 1 1938 7 view .LVU565
 2037 002c 43BB     		cbnz	r3, .L153
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2038              		.loc 1 1942 6 is_stmt 1 view .LVU566
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2039              		.loc 1 1942 15 is_stmt 0 view .LVU567
 2040 002e EA6A     		ldr	r2, [r5, #44]
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2041              		.loc 1 1942 43 view .LVU568
 2042 0030 184B     		ldr	r3, .L158+4
 2043 0032 1B68     		ldr	r3, [r3]
 2044 0034 DB6A     		ldr	r3, [r3, #44]
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2045              		.loc 1 1942 8 view .LVU569
 2046 0036 9A42     		cmp	r2, r3
 2047 0038 20D2     		bcs	.L155
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 2048              		.loc 1 1907 13 view .LVU570
 2049 003a 0026     		movs	r6, #0
 2050              	.L154:
 2051              	.LVL150:
1948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2052              		.loc 1 1948 31 is_stmt 1 view .LVU571
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2053              		.loc 1 1951 6 view .LVU572
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2054              		.loc 1 1951 15 is_stmt 0 view .LVU573
 2055 003c 2F1D     		adds	r7, r5, #4
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 142


 2056 003e 3846     		mov	r0, r7
 2057 0040 FFF7FEFF 		bl	uxListRemove
 2058              	.LVL151:
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2059              		.loc 1 1952 6 is_stmt 1 view .LVU574
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2060              		.loc 1 1952 6 view .LVU575
 2061 0044 E86A     		ldr	r0, [r5, #44]
 2062 0046 0123     		movs	r3, #1
 2063 0048 8340     		lsls	r3, r3, r0
 2064 004a 134A     		ldr	r2, .L158+8
 2065 004c 1168     		ldr	r1, [r2]
 2066 004e 0B43     		orrs	r3, r3, r1
 2067 0050 1360     		str	r3, [r2]
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2068              		.loc 1 1952 6 view .LVU576
 2069 0052 00EB8000 		add	r0, r0, r0, lsl #2
 2070 0056 3946     		mov	r1, r7
 2071 0058 104B     		ldr	r3, .L158+12
 2072 005a 03EB8000 		add	r0, r3, r0, lsl #2
 2073 005e FFF7FEFF 		bl	vListInsertEnd
 2074              	.LVL152:
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2075              		.loc 1 1952 36 discriminator 1 view .LVU577
 2076              	.L152:
1964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2077              		.loc 1 1964 29 view .LVU578
1967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2078              		.loc 1 1967 3 view .LVU579
 2079              	.LBB138:
 2080              	.LBI138:
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2081              		.loc 2 227 30 view .LVU580
 2082              	.LBB139:
 2083              		.loc 2 229 2 view .LVU581
 2084              		.syntax unified
 2085              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2086 0062 84F31188 			msr basepri, r4	
 2087              	@ 0 "" 2
 2088              		.thumb
 2089              		.syntax unified
 2090              	.LBE139:
 2091              	.LBE138:
1969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2092              		.loc 1 1969 3 view .LVU582
1970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2093              		.loc 1 1970 2 is_stmt 0 view .LVU583
 2094 0066 3046     		mov	r0, r6
 2095 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2096              	.LVL153:
 2097              	.L157:
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2098              		.loc 1 1911 3 is_stmt 1 discriminator 1 view .LVU584
 2099              	.LBB140:
 2100              	.LBI140:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2101              		.loc 2 191 30 view .LVU585
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 143


 2102              	.LBB141:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2103              		.loc 2 193 1 view .LVU586
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2104              		.loc 2 195 2 view .LVU587
 2105              		.syntax unified
 2106              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2107 006a 4FF05003 			mov r3, #80												
 2108 006e 83F31188 		msr basepri, r3											
 2109 0072 BFF36F8F 		isb														
 2110 0076 BFF34F8F 		dsb														
 2111              	
 2112              	@ 0 "" 2
 2113              		.thumb
 2114              		.syntax unified
 2115              	.L151:
 2116              	.LBE141:
 2117              	.LBE140:
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2118              		.loc 1 1911 3 discriminator 3 view .LVU588
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2119              		.loc 1 1911 3 discriminator 3 view .LVU589
 2120 007a FEE7     		b	.L151
 2121              	.LVL154:
 2122              	.L155:
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2123              		.loc 1 1944 22 is_stmt 0 view .LVU590
 2124 007c 0126     		movs	r6, #1
 2125 007e DDE7     		b	.L154
 2126              	.L153:
1959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2127              		.loc 1 1959 6 is_stmt 1 view .LVU591
 2128 0080 05F11801 		add	r1, r5, #24
 2129 0084 0648     		ldr	r0, .L158+16
 2130 0086 FFF7FEFF 		bl	vListInsertEnd
 2131              	.LVL155:
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 2132              		.loc 1 1907 13 is_stmt 0 view .LVU592
 2133 008a 0026     		movs	r6, #0
 2134 008c E9E7     		b	.L152
 2135              	.L159:
 2136 008e 00BF     		.align	2
 2137              	.L158:
 2138 0090 00000000 		.word	uxSchedulerSuspended
 2139 0094 00000000 		.word	pxCurrentTCB
 2140 0098 00000000 		.word	uxTopReadyPriority
 2141 009c 00000000 		.word	pxReadyTasksLists
 2142 00a0 00000000 		.word	xPendingReadyList
 2143              		.cfi_endproc
 2144              	.LFE17:
 2146              		.section	.rodata.vTaskStartScheduler.str1.4,"aMS",%progbits,1
 2147              		.align	2
 2148              	.LC0:
 2149 0000 49444C45 		.ascii	"IDLE\000"
 2149      00
 2150              		.section	.text.vTaskStartScheduler,"ax",%progbits
 2151              		.align	1
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 144


 2152              		.global	vTaskStartScheduler
 2153              		.syntax unified
 2154              		.thumb
 2155              		.thumb_func
 2157              	vTaskStartScheduler:
 2158              	.LFB18:
1976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 2159              		.loc 1 1976 1 is_stmt 1 view -0
 2160              		.cfi_startproc
 2161              		@ args = 0, pretend = 0, frame = 16
 2162              		@ frame_needed = 0, uses_anonymous_args = 0
 2163 0000 10B5     		push	{r4, lr}
 2164              	.LCFI20:
 2165              		.cfi_def_cfa_offset 8
 2166              		.cfi_offset 4, -8
 2167              		.cfi_offset 14, -4
 2168 0002 88B0     		sub	sp, sp, #32
 2169              	.LCFI21:
 2170              		.cfi_def_cfa_offset 40
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2171              		.loc 1 1977 1 view .LVU594
 2172              	.LBB142:
1982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
 2173              		.loc 1 1982 3 view .LVU595
1982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
 2174              		.loc 1 1982 17 is_stmt 0 view .LVU596
 2175 0004 0024     		movs	r4, #0
 2176 0006 0594     		str	r4, [sp, #20]
1983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
 2177              		.loc 1 1983 3 is_stmt 1 view .LVU597
1983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
 2178              		.loc 1 1983 16 is_stmt 0 view .LVU598
 2179 0008 0694     		str	r4, [sp, #24]
1984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2180              		.loc 1 1984 3 is_stmt 1 view .LVU599
1988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 2181              		.loc 1 1988 3 view .LVU600
 2182 000a 07AA     		add	r2, sp, #28
 2183 000c 06A9     		add	r1, sp, #24
 2184 000e 05A8     		add	r0, sp, #20
 2185 0010 FFF7FEFF 		bl	vApplicationGetIdleTaskMemory
 2186              	.LVL156:
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2187              		.loc 1 1989 3 view .LVU601
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2188              		.loc 1 1989 21 is_stmt 0 view .LVU602
 2189 0014 059B     		ldr	r3, [sp, #20]
 2190 0016 0293     		str	r3, [sp, #8]
 2191 0018 069B     		ldr	r3, [sp, #24]
 2192 001a 0193     		str	r3, [sp, #4]
 2193 001c 0094     		str	r4, [sp]
 2194 001e 2346     		mov	r3, r4
 2195 0020 079A     		ldr	r2, [sp, #28]
 2196 0022 0E49     		ldr	r1, .L164
 2197 0024 0E48     		ldr	r0, .L164+4
 2198 0026 FFF7FEFF 		bl	xTaskCreateStatic
 2199              	.LVL157:
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 145


1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
 2200              		.loc 1 1989 19 discriminator 1 view .LVU603
 2201 002a 0E4B     		ldr	r3, .L164+8
 2202 002c 1860     		str	r0, [r3]
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2203              		.loc 1 1997 3 is_stmt 1 view .LVU604
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2204              		.loc 1 1997 5 is_stmt 0 view .LVU605
 2205 002e 90B1     		cbz	r0, .L160
 2206              	.LVL158:
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2207              		.loc 1 1997 5 view .LVU606
 2208              	.LBE142:
2031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2209              		.loc 1 2031 2 is_stmt 1 view .LVU607
2047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2210              		.loc 1 2047 3 view .LVU608
 2211              	.LBB143:
 2212              	.LBI143:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2213              		.loc 2 191 30 view .LVU609
 2214              	.LBB144:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2215              		.loc 2 193 1 view .LVU610
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2216              		.loc 2 195 2 view .LVU611
 2217              		.syntax unified
 2218              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2219 0030 4FF05003 			mov r3, #80												
 2220 0034 83F31188 		msr basepri, r3											
 2221 0038 BFF36F8F 		isb														
 2222 003c BFF34F8F 		dsb														
 2223              	
 2224              	@ 0 "" 2
 2225              		.thumb
 2226              		.syntax unified
 2227              	.LBE144:
 2228              	.LBE143:
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 2229              		.loc 1 2059 3 view .LVU612
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 2230              		.loc 1 2059 24 is_stmt 0 view .LVU613
 2231 0040 094B     		ldr	r3, .L164+12
 2232 0042 4FF0FF32 		mov	r2, #-1
 2233 0046 1A60     		str	r2, [r3]
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 2234              		.loc 1 2060 3 is_stmt 1 view .LVU614
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 2235              		.loc 1 2060 21 is_stmt 0 view .LVU615
 2236 0048 084B     		ldr	r3, .L164+16
 2237 004a 0122     		movs	r2, #1
 2238 004c 1A60     		str	r2, [r3]
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2239              		.loc 1 2061 3 is_stmt 1 view .LVU616
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2240              		.loc 1 2061 14 is_stmt 0 view .LVU617
 2241 004e 084B     		ldr	r3, .L164+20
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 146


 2242 0050 1C60     		str	r4, [r3]
2069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2243              		.loc 1 2069 43 is_stmt 1 view .LVU618
2071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2244              		.loc 1 2071 26 view .LVU619
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2245              		.loc 1 2075 3 view .LVU620
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2246              		.loc 1 2075 7 is_stmt 0 view .LVU621
 2247 0052 FFF7FEFF 		bl	xPortStartScheduler
 2248              	.LVL159:
2079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 2249              		.loc 1 2079 3 is_stmt 1 view .LVU622
2083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2250              		.loc 1 2083 3 view .LVU623
 2251              	.L160:
2096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2252              		.loc 1 2096 1 is_stmt 0 view .LVU624
 2253 0056 08B0     		add	sp, sp, #32
 2254              	.LCFI22:
 2255              		.cfi_def_cfa_offset 8
 2256              		@ sp needed
 2257 0058 10BD     		pop	{r4, pc}
 2258              	.L165:
 2259 005a 00BF     		.align	2
 2260              	.L164:
 2261 005c 00000000 		.word	.LC0
 2262 0060 00000000 		.word	prvIdleTask
 2263 0064 00000000 		.word	xIdleTaskHandle
 2264 0068 00000000 		.word	xNextTaskUnblockTime
 2265 006c 00000000 		.word	xSchedulerRunning
 2266 0070 00000000 		.word	xTickCount
 2267              		.cfi_endproc
 2268              	.LFE18:
 2270              		.section	.text.vTaskEndScheduler,"ax",%progbits
 2271              		.align	1
 2272              		.global	vTaskEndScheduler
 2273              		.syntax unified
 2274              		.thumb
 2275              		.thumb_func
 2277              	vTaskEndScheduler:
 2278              	.LFB19:
2100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 2279              		.loc 1 2100 1 is_stmt 1 view -0
 2280              		.cfi_startproc
 2281              		@ args = 0, pretend = 0, frame = 0
 2282              		@ frame_needed = 0, uses_anonymous_args = 0
 2283 0000 08B5     		push	{r3, lr}
 2284              	.LCFI23:
 2285              		.cfi_def_cfa_offset 8
 2286              		.cfi_offset 3, -8
 2287              		.cfi_offset 14, -4
2104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
 2288              		.loc 1 2104 2 view .LVU626
 2289              	.LBB145:
 2290              	.LBI145:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 147


 2291              		.loc 2 191 30 view .LVU627
 2292              	.LBB146:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2293              		.loc 2 193 1 view .LVU628
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2294              		.loc 2 195 2 view .LVU629
 2295              		.syntax unified
 2296              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2297 0002 4FF05003 			mov r3, #80												
 2298 0006 83F31188 		msr basepri, r3											
 2299 000a BFF36F8F 		isb														
 2300 000e BFF34F8F 		dsb														
 2301              	
 2302              	@ 0 "" 2
 2303              		.thumb
 2304              		.syntax unified
 2305              	.LBE146:
 2306              	.LBE145:
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 2307              		.loc 1 2105 2 view .LVU630
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 2308              		.loc 1 2105 20 is_stmt 0 view .LVU631
 2309 0012 034B     		ldr	r3, .L168
 2310 0014 0022     		movs	r2, #0
 2311 0016 1A60     		str	r2, [r3]
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2312              		.loc 1 2106 2 is_stmt 1 view .LVU632
 2313 0018 FFF7FEFF 		bl	vPortEndScheduler
 2314              	.LVL160:
2107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2315              		.loc 1 2107 1 is_stmt 0 view .LVU633
 2316 001c 08BD     		pop	{r3, pc}
 2317              	.L169:
 2318 001e 00BF     		.align	2
 2319              	.L168:
 2320 0020 00000000 		.word	xSchedulerRunning
 2321              		.cfi_endproc
 2322              	.LFE19:
 2324              		.section	.text.vTaskSuspendAll,"ax",%progbits
 2325              		.align	1
 2326              		.global	vTaskSuspendAll
 2327              		.syntax unified
 2328              		.thumb
 2329              		.thumb_func
 2331              	vTaskSuspendAll:
 2332              	.LFB20:
2111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 2333              		.loc 1 2111 1 is_stmt 1 view -0
 2334              		.cfi_startproc
 2335              		@ args = 0, pretend = 0, frame = 0
 2336              		@ frame_needed = 0, uses_anonymous_args = 0
 2337              		@ link register save eliminated.
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2338              		.loc 1 2119 24 view .LVU635
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2339              		.loc 1 2123 2 view .LVU636
 2340 0000 024A     		ldr	r2, .L171
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 148


 2341 0002 1368     		ldr	r3, [r2]
 2342 0004 0133     		adds	r3, r3, #1
 2343 0006 1360     		str	r3, [r2]
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2344              		.loc 1 2127 2 view .LVU637
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 2345              		.loc 1 2128 1 is_stmt 0 view .LVU638
 2346 0008 7047     		bx	lr
 2347              	.L172:
 2348 000a 00BF     		.align	2
 2349              	.L171:
 2350 000c 00000000 		.word	uxSchedulerSuspended
 2351              		.cfi_endproc
 2352              	.LFE20:
 2354              		.section	.text.xTaskGetTickCount,"ax",%progbits
 2355              		.align	1
 2356              		.global	xTaskGetTickCount
 2357              		.syntax unified
 2358              		.thumb
 2359              		.thumb_func
 2361              	xTaskGetTickCount:
 2362              	.LFB22:
2305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
 2363              		.loc 1 2305 1 is_stmt 1 view -0
 2364              		.cfi_startproc
 2365              		@ args = 0, pretend = 0, frame = 0
 2366              		@ frame_needed = 0, uses_anonymous_args = 0
 2367              		@ link register save eliminated.
2306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2368              		.loc 1 2306 1 view .LVU640
2309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2369              		.loc 1 2309 32 view .LVU641
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2370              		.loc 1 2311 3 view .LVU642
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2371              		.loc 1 2311 10 is_stmt 0 view .LVU643
 2372 0000 014B     		ldr	r3, .L174
 2373 0002 1868     		ldr	r0, [r3]
 2374              	.LVL161:
2313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2375              		.loc 1 2313 31 is_stmt 1 view .LVU644
2315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2376              		.loc 1 2315 2 view .LVU645
2316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2377              		.loc 1 2316 1 is_stmt 0 view .LVU646
 2378 0004 7047     		bx	lr
 2379              	.L175:
 2380 0006 00BF     		.align	2
 2381              	.L174:
 2382 0008 00000000 		.word	xTickCount
 2383              		.cfi_endproc
 2384              	.LFE22:
 2386              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 2387              		.align	1
 2388              		.global	xTaskGetTickCountFromISR
 2389              		.syntax unified
 2390              		.thumb
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 149


 2391              		.thumb_func
 2393              	xTaskGetTickCountFromISR:
 2394              	.LFB23:
2320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
 2395              		.loc 1 2320 1 is_stmt 1 view -0
 2396              		.cfi_startproc
 2397              		@ args = 0, pretend = 0, frame = 0
 2398              		@ frame_needed = 0, uses_anonymous_args = 0
 2399 0000 08B5     		push	{r3, lr}
 2400              	.LCFI24:
 2401              		.cfi_def_cfa_offset 8
 2402              		.cfi_offset 3, -8
 2403              		.cfi_offset 14, -4
2321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
 2404              		.loc 1 2321 1 view .LVU648
2322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2405              		.loc 1 2322 1 view .LVU649
2338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2406              		.loc 1 2338 2 view .LVU650
 2407 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2408              	.LVL162:
2340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2409              		.loc 1 2340 2 view .LVU651
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2410              		.loc 1 2342 3 view .LVU652
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2411              		.loc 1 2342 11 is_stmt 0 view .LVU653
 2412 0006 014B     		ldr	r3, .L178
 2413 0008 1868     		ldr	r0, [r3]
 2414              	.LVL163:
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2415              		.loc 1 2344 2 is_stmt 1 view .LVU654
2346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2416              		.loc 1 2346 2 view .LVU655
2347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2417              		.loc 1 2347 1 is_stmt 0 view .LVU656
 2418 000a 08BD     		pop	{r3, pc}
 2419              	.L179:
 2420              		.align	2
 2421              	.L178:
 2422 000c 00000000 		.word	xTickCount
 2423              		.cfi_endproc
 2424              	.LFE23:
 2426              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 2427              		.align	1
 2428              		.global	uxTaskGetNumberOfTasks
 2429              		.syntax unified
 2430              		.thumb
 2431              		.thumb_func
 2433              	uxTaskGetNumberOfTasks:
 2434              	.LFB24:
2351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 2435              		.loc 1 2351 1 is_stmt 1 view -0
 2436              		.cfi_startproc
 2437              		@ args = 0, pretend = 0, frame = 0
 2438              		@ frame_needed = 0, uses_anonymous_args = 0
 2439              		@ link register save eliminated.
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 150


2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2440              		.loc 1 2354 2 view .LVU658
2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2441              		.loc 1 2354 9 is_stmt 0 view .LVU659
 2442 0000 014B     		ldr	r3, .L181
 2443 0002 1868     		ldr	r0, [r3]
2355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2444              		.loc 1 2355 1 view .LVU660
 2445 0004 7047     		bx	lr
 2446              	.L182:
 2447 0006 00BF     		.align	2
 2448              	.L181:
 2449 0008 00000000 		.word	uxCurrentNumberOfTasks
 2450              		.cfi_endproc
 2451              	.LFE24:
 2453              		.section	.text.pcTaskGetName,"ax",%progbits
 2454              		.align	1
 2455              		.global	pcTaskGetName
 2456              		.syntax unified
 2457              		.thumb
 2458              		.thumb_func
 2460              	pcTaskGetName:
 2461              	.LVL164:
 2462              	.LFB25:
2359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 2463              		.loc 1 2359 1 is_stmt 1 view -0
 2464              		.cfi_startproc
 2465              		@ args = 0, pretend = 0, frame = 0
 2466              		@ frame_needed = 0, uses_anonymous_args = 0
 2467              		@ link register save eliminated.
2360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2468              		.loc 1 2360 1 view .LVU662
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2469              		.loc 1 2364 2 view .LVU663
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2470              		.loc 1 2364 10 is_stmt 0 view .LVU664
 2471 0000 0346     		mov	r3, r0
 2472 0002 10B1     		cbz	r0, .L186
 2473              	.LVL165:
 2474              	.L184:
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2475              		.loc 1 2365 23 is_stmt 1 discriminator 2 view .LVU665
2366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2476              		.loc 1 2366 2 view .LVU666
2367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2477              		.loc 1 2367 1 is_stmt 0 view .LVU667
 2478 0004 03F13400 		add	r0, r3, #52
 2479 0008 7047     		bx	lr
 2480              	.LVL166:
 2481              	.L186:
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2482              		.loc 1 2364 10 discriminator 1 view .LVU668
 2483 000a 064B     		ldr	r3, .L187
 2484 000c 1B68     		ldr	r3, [r3]
 2485              	.LVL167:
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2486              		.loc 1 2365 2 is_stmt 1 view .LVU669
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 151


 2487 000e 002B     		cmp	r3, #0
 2488 0010 F8D1     		bne	.L184
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2489              		.loc 1 2365 2 discriminator 1 view .LVU670
 2490              	.LBB147:
 2491              	.LBI147:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2492              		.loc 2 191 30 view .LVU671
 2493              	.LBB148:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2494              		.loc 2 193 1 view .LVU672
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2495              		.loc 2 195 2 view .LVU673
 2496              		.syntax unified
 2497              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2498 0012 4FF05003 			mov r3, #80												
 2499 0016 83F31188 		msr basepri, r3											
 2500 001a BFF36F8F 		isb														
 2501 001e BFF34F8F 		dsb														
 2502              	
 2503              	@ 0 "" 2
 2504              	.LVL168:
 2505              		.thumb
 2506              		.syntax unified
 2507              	.L185:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2508              		.loc 2 195 2 is_stmt 0 view .LVU674
 2509              	.LBE148:
 2510              	.LBE147:
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2511              		.loc 1 2365 2 is_stmt 1 discriminator 3 view .LVU675
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2512              		.loc 1 2365 2 discriminator 3 view .LVU676
 2513 0022 FEE7     		b	.L185
 2514              	.L188:
 2515              		.align	2
 2516              	.L187:
 2517 0024 00000000 		.word	pxCurrentTCB
 2518              		.cfi_endproc
 2519              	.LFE25:
 2521              		.section	.text.xTaskIncrementTick,"ax",%progbits
 2522              		.align	1
 2523              		.global	xTaskIncrementTick
 2524              		.syntax unified
 2525              		.thumb
 2526              		.thumb_func
 2528              	xTaskIncrementTick:
 2529              	.LFB27:
2708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
 2530              		.loc 1 2708 1 view -0
 2531              		.cfi_startproc
 2532              		@ args = 0, pretend = 0, frame = 0
 2533              		@ frame_needed = 0, uses_anonymous_args = 0
 2534 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2535              	.LCFI25:
 2536              		.cfi_def_cfa_offset 24
 2537              		.cfi_offset 3, -24
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 152


 2538              		.cfi_offset 4, -20
 2539              		.cfi_offset 5, -16
 2540              		.cfi_offset 6, -12
 2541              		.cfi_offset 7, -8
 2542              		.cfi_offset 14, -4
2709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
 2543              		.loc 1 2709 1 view .LVU678
2710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
 2544              		.loc 1 2710 1 view .LVU679
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2545              		.loc 1 2711 1 view .LVU680
 2546              	.LVL169:
2716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 2547              		.loc 1 2716 40 view .LVU681
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2548              		.loc 1 2717 2 view .LVU682
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2549              		.loc 1 2717 27 is_stmt 0 view .LVU683
 2550 0002 3A4B     		ldr	r3, .L210
 2551 0004 1B68     		ldr	r3, [r3]
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2552              		.loc 1 2717 4 view .LVU684
 2553 0006 002B     		cmp	r3, #0
 2554 0008 69D1     		bne	.L190
 2555              	.LBB149:
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2556              		.loc 1 2721 3 is_stmt 1 view .LVU685
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2557              		.loc 1 2721 49 is_stmt 0 view .LVU686
 2558 000a 394B     		ldr	r3, .L210+4
 2559 000c 1D68     		ldr	r5, [r3]
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2560              		.loc 1 2721 20 view .LVU687
 2561 000e 0135     		adds	r5, r5, #1
 2562              	.LVL170:
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2563              		.loc 1 2725 3 is_stmt 1 view .LVU688
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2564              		.loc 1 2725 14 is_stmt 0 view .LVU689
 2565 0010 1D60     		str	r5, [r3]
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2566              		.loc 1 2727 3 is_stmt 1 view .LVU690
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2567              		.loc 1 2727 5 is_stmt 0 view .LVU691
 2568 0012 C5B9     		cbnz	r5, .L191
 2569              	.LBB150:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2570              		.loc 1 2729 4 is_stmt 1 view .LVU692
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2571              		.loc 1 2729 4 view .LVU693
 2572 0014 374B     		ldr	r3, .L210+8
 2573 0016 1B68     		ldr	r3, [r3]
 2574 0018 1B68     		ldr	r3, [r3]
 2575 001a 43B1     		cbz	r3, .L192
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2576              		.loc 1 2729 4 discriminator 1 view .LVU694
 2577              	.LBB151:
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 153


 2578              	.LBI151:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2579              		.loc 2 191 30 view .LVU695
 2580              	.LBB152:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2581              		.loc 2 193 1 view .LVU696
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2582              		.loc 2 195 2 view .LVU697
 2583              		.syntax unified
 2584              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2585 001c 4FF05003 			mov r3, #80												
 2586 0020 83F31188 		msr basepri, r3											
 2587 0024 BFF36F8F 		isb														
 2588 0028 BFF34F8F 		dsb														
 2589              	
 2590              	@ 0 "" 2
 2591              		.thumb
 2592              		.syntax unified
 2593              	.L193:
 2594              	.LBE152:
 2595              	.LBE151:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2596              		.loc 1 2729 4 discriminator 3 view .LVU698
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2597              		.loc 1 2729 4 discriminator 3 view .LVU699
 2598 002c FEE7     		b	.L193
 2599              	.L192:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2600              		.loc 1 2729 4 discriminator 2 view .LVU700
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2601              		.loc 1 2729 4 discriminator 2 view .LVU701
 2602 002e 314A     		ldr	r2, .L210+8
 2603 0030 1168     		ldr	r1, [r2]
 2604              	.LVL171:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2605              		.loc 1 2729 4 discriminator 2 view .LVU702
 2606 0032 314B     		ldr	r3, .L210+12
 2607 0034 1868     		ldr	r0, [r3]
 2608 0036 1060     		str	r0, [r2]
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2609              		.loc 1 2729 4 discriminator 2 view .LVU703
 2610 0038 1960     		str	r1, [r3]
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2611              		.loc 1 2729 4 discriminator 2 view .LVU704
 2612 003a 304A     		ldr	r2, .L210+16
 2613 003c 1368     		ldr	r3, [r2]
 2614 003e 0133     		adds	r3, r3, #1
 2615 0040 1360     		str	r3, [r2]
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2616              		.loc 1 2729 4 discriminator 2 view .LVU705
 2617 0042 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2618              	.LVL172:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2619              		.loc 1 2729 4 is_stmt 0 discriminator 2 view .LVU706
 2620              	.LBE150:
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2621              		.loc 1 2729 30 is_stmt 1 discriminator 1 view .LVU707
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 154


 2622              	.L191:
2733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2623              		.loc 1 2733 28 view .LVU708
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2624              		.loc 1 2740 3 view .LVU709
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2625              		.loc 1 2740 23 is_stmt 0 view .LVU710
 2626 0046 2E4B     		ldr	r3, .L210+20
 2627 0048 1B68     		ldr	r3, [r3]
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2628              		.loc 1 2740 5 view .LVU711
 2629 004a AB42     		cmp	r3, r5
 2630 004c 3DD9     		bls	.L203
 2631              	.LBE149:
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2632              		.loc 1 2711 12 view .LVU712
 2633 004e 0027     		movs	r7, #0
 2634              	.LVL173:
 2635              	.L195:
 2636              	.LBB153:
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2637              		.loc 1 2823 4 is_stmt 1 view .LVU713
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2638              		.loc 1 2823 8 is_stmt 0 view .LVU714
 2639 0050 2C4B     		ldr	r3, .L210+24
 2640 0052 1B68     		ldr	r3, [r3]
 2641 0054 DB6A     		ldr	r3, [r3, #44]
 2642 0056 03EB8303 		add	r3, r3, r3, lsl #2
 2643 005a 9A00     		lsls	r2, r3, #2
 2644 005c 2A4B     		ldr	r3, .L210+28
 2645 005e 9B58     		ldr	r3, [r3, r2]
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2646              		.loc 1 2823 6 view .LVU715
 2647 0060 012B     		cmp	r3, #1
 2648 0062 00D9     		bls	.L201
2825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2649              		.loc 1 2825 21 view .LVU716
 2650 0064 0127     		movs	r7, #1
 2651              	.LVL174:
 2652              	.L201:
2829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2653              		.loc 1 2829 29 is_stmt 1 view .LVU717
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2654              		.loc 1 2851 4 view .LVU718
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2655              		.loc 1 2851 22 is_stmt 0 view .LVU719
 2656 0066 294B     		ldr	r3, .L210+32
 2657 0068 1B68     		ldr	r3, [r3]
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2658              		.loc 1 2851 6 view .LVU720
 2659 006a 002B     		cmp	r3, #0
 2660 006c 3CD0     		beq	.L189
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2661              		.loc 1 2853 21 view .LVU721
 2662 006e 0127     		movs	r7, #1
 2663              	.LVL175:
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 155


 2664              		.loc 1 2853 21 view .LVU722
 2665              	.LBE153:
2875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2666              		.loc 1 2875 2 is_stmt 1 view .LVU723
2875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2667              		.loc 1 2875 9 is_stmt 0 view .LVU724
 2668 0070 3AE0     		b	.L189
 2669              	.LVL176:
 2670              	.L204:
 2671              	.LBB154:
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 2672              		.loc 1 2806 24 view .LVU725
 2673 0072 0127     		movs	r7, #1
 2674              	.LVL177:
 2675              	.L194:
2742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2676              		.loc 1 2742 4 is_stmt 1 view .LVU726
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2677              		.loc 1 2744 5 view .LVU727
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2678              		.loc 1 2744 9 is_stmt 0 view .LVU728
 2679 0074 1F4B     		ldr	r3, .L210+8
 2680 0076 1B68     		ldr	r3, [r3]
 2681 0078 1B68     		ldr	r3, [r3]
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2682              		.loc 1 2744 7 view .LVU729
 2683 007a 43B3     		cbz	r3, .L208
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2684              		.loc 1 2760 6 is_stmt 1 view .LVU730
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2685              		.loc 1 2760 14 is_stmt 0 view .LVU731
 2686 007c 1D4B     		ldr	r3, .L210+8
 2687 007e 1B68     		ldr	r3, [r3]
 2688 0080 DB68     		ldr	r3, [r3, #12]
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2689              		.loc 1 2760 12 view .LVU732
 2690 0082 DC68     		ldr	r4, [r3, #12]
 2691              	.LVL178:
2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2692              		.loc 1 2761 6 is_stmt 1 view .LVU733
2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2693              		.loc 1 2761 17 is_stmt 0 view .LVU734
 2694 0084 6368     		ldr	r3, [r4, #4]
 2695              	.LVL179:
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2696              		.loc 1 2763 6 is_stmt 1 view .LVU735
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2697              		.loc 1 2763 8 is_stmt 0 view .LVU736
 2698 0086 9D42     		cmp	r5, r3
 2699 0088 26D3     		bcc	.L209
2775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2700              		.loc 1 2775 31 is_stmt 1 view .LVU737
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2701              		.loc 1 2779 6 view .LVU738
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2702              		.loc 1 2779 15 is_stmt 0 view .LVU739
 2703 008a 261D     		adds	r6, r4, #4
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 156


 2704 008c 3046     		mov	r0, r6
 2705 008e FFF7FEFF 		bl	uxListRemove
 2706              	.LVL180:
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2707              		.loc 1 2783 6 is_stmt 1 view .LVU740
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2708              		.loc 1 2783 10 is_stmt 0 view .LVU741
 2709 0092 A36A     		ldr	r3, [r4, #40]
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2710              		.loc 1 2783 8 view .LVU742
 2711 0094 1BB1     		cbz	r3, .L198
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2712              		.loc 1 2785 7 is_stmt 1 view .LVU743
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2713              		.loc 1 2785 16 is_stmt 0 view .LVU744
 2714 0096 04F11800 		add	r0, r4, #24
 2715 009a FFF7FEFF 		bl	uxListRemove
 2716              	.LVL181:
 2717              	.L198:
2789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2718              		.loc 1 2789 31 is_stmt 1 view .LVU745
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2719              		.loc 1 2794 6 view .LVU746
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2720              		.loc 1 2794 6 view .LVU747
 2721 009e E36A     		ldr	r3, [r4, #44]
 2722 00a0 0122     		movs	r2, #1
 2723 00a2 9A40     		lsls	r2, r2, r3
 2724 00a4 1A49     		ldr	r1, .L210+36
 2725 00a6 0868     		ldr	r0, [r1]
 2726 00a8 0243     		orrs	r2, r2, r0
 2727 00aa 0A60     		str	r2, [r1]
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2728              		.loc 1 2794 6 view .LVU748
 2729 00ac 03EB8303 		add	r3, r3, r3, lsl #2
 2730 00b0 9A00     		lsls	r2, r3, #2
 2731 00b2 3146     		mov	r1, r6
 2732 00b4 1448     		ldr	r0, .L210+28
 2733 00b6 1044     		add	r0, r0, r2
 2734 00b8 FFF7FEFF 		bl	vListInsertEnd
 2735              	.LVL182:
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2736              		.loc 1 2794 36 discriminator 1 view .LVU749
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2737              		.loc 1 2804 7 view .LVU750
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2738              		.loc 1 2804 16 is_stmt 0 view .LVU751
 2739 00bc E26A     		ldr	r2, [r4, #44]
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2740              		.loc 1 2804 44 view .LVU752
 2741 00be 114B     		ldr	r3, .L210+24
 2742 00c0 1B68     		ldr	r3, [r3]
 2743 00c2 DB6A     		ldr	r3, [r3, #44]
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2744              		.loc 1 2804 9 view .LVU753
 2745 00c4 9A42     		cmp	r2, r3
 2746 00c6 D4D2     		bcs	.L204
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 157


 2747 00c8 D4E7     		b	.L194
 2748              	.LVL183:
 2749              	.L203:
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2750              		.loc 1 2804 9 view .LVU754
 2751              	.LBE154:
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2752              		.loc 1 2711 12 view .LVU755
 2753 00ca 0027     		movs	r7, #0
 2754 00cc D2E7     		b	.L194
 2755              	.LVL184:
 2756              	.L208:
 2757              	.LBB155:
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2758              		.loc 1 2751 6 is_stmt 1 view .LVU756
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2759              		.loc 1 2751 27 is_stmt 0 view .LVU757
 2760 00ce 0C4B     		ldr	r3, .L210+20
 2761 00d0 4FF0FF32 		mov	r2, #-1
 2762 00d4 1A60     		str	r2, [r3]
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2763              		.loc 1 2752 6 is_stmt 1 view .LVU758
 2764 00d6 BBE7     		b	.L195
 2765              	.LVL185:
 2766              	.L209:
2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
 2767              		.loc 1 2770 7 view .LVU759
2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
 2768              		.loc 1 2770 28 is_stmt 0 view .LVU760
 2769 00d8 094A     		ldr	r2, .L210+20
 2770 00da 1360     		str	r3, [r2]
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2771              		.loc 1 2771 7 is_stmt 1 view .LVU761
 2772 00dc B8E7     		b	.L195
 2773              	.LVL186:
 2774              	.L190:
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2775              		.loc 1 2771 7 is_stmt 0 view .LVU762
 2776              	.LBE155:
2864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2777              		.loc 1 2864 3 is_stmt 1 view .LVU763
 2778 00de 0D4A     		ldr	r2, .L210+40
 2779 00e0 1368     		ldr	r3, [r2]
 2780 00e2 0133     		adds	r3, r3, #1
 2781 00e4 1360     		str	r3, [r2]
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2782              		.loc 1 2711 12 is_stmt 0 view .LVU764
 2783 00e6 0027     		movs	r7, #0
 2784              	.LVL187:
 2785              	.L189:
2876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2786              		.loc 1 2876 1 view .LVU765
 2787 00e8 3846     		mov	r0, r7
 2788 00ea F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2789              	.L211:
 2790              		.align	2
 2791              	.L210:
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 158


 2792 00ec 00000000 		.word	uxSchedulerSuspended
 2793 00f0 00000000 		.word	xTickCount
 2794 00f4 00000000 		.word	pxDelayedTaskList
 2795 00f8 00000000 		.word	pxOverflowDelayedTaskList
 2796 00fc 00000000 		.word	xNumOfOverflows
 2797 0100 00000000 		.word	xNextTaskUnblockTime
 2798 0104 00000000 		.word	pxCurrentTCB
 2799 0108 00000000 		.word	pxReadyTasksLists
 2800 010c 00000000 		.word	xYieldPending
 2801 0110 00000000 		.word	uxTopReadyPriority
 2802 0114 00000000 		.word	xPendedTicks
 2803              		.cfi_endproc
 2804              	.LFE27:
 2806              		.section	.text.xTaskResumeAll,"ax",%progbits
 2807              		.align	1
 2808              		.global	xTaskResumeAll
 2809              		.syntax unified
 2810              		.thumb
 2811              		.thumb_func
 2813              	xTaskResumeAll:
 2814              	.LFB21:
2195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
 2815              		.loc 1 2195 1 is_stmt 1 view -0
 2816              		.cfi_startproc
 2817              		@ args = 0, pretend = 0, frame = 0
 2818              		@ frame_needed = 0, uses_anonymous_args = 0
 2819 0000 38B5     		push	{r3, r4, r5, lr}
 2820              	.LCFI26:
 2821              		.cfi_def_cfa_offset 16
 2822              		.cfi_offset 3, -16
 2823              		.cfi_offset 4, -12
 2824              		.cfi_offset 5, -8
 2825              		.cfi_offset 14, -4
2196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2826              		.loc 1 2196 1 view .LVU767
 2827              	.LVL188:
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2828              		.loc 1 2197 1 view .LVU768
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2829              		.loc 1 2201 2 view .LVU769
 2830 0002 354B     		ldr	r3, .L228
 2831 0004 1B68     		ldr	r3, [r3]
 2832 0006 43B9     		cbnz	r3, .L213
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2833              		.loc 1 2201 2 discriminator 1 view .LVU770
 2834              	.LBB156:
 2835              	.LBI156:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 2836              		.loc 2 191 30 view .LVU771
 2837              	.LBB157:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 2838              		.loc 2 193 1 view .LVU772
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2839              		.loc 2 195 2 view .LVU773
 2840              		.syntax unified
 2841              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 2842 0008 4FF05003 			mov r3, #80												
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 159


 2843 000c 83F31188 		msr basepri, r3											
 2844 0010 BFF36F8F 		isb														
 2845 0014 BFF34F8F 		dsb														
 2846              	
 2847              	@ 0 "" 2
 2848              		.thumb
 2849              		.syntax unified
 2850              	.L214:
 2851              	.LBE157:
 2852              	.LBE156:
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2853              		.loc 1 2201 2 discriminator 3 view .LVU774
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2854              		.loc 1 2201 2 discriminator 3 view .LVU775
 2855 0018 FEE7     		b	.L214
 2856              	.L213:
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2857              		.loc 1 2201 38 discriminator 2 view .LVU776
2208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2858              		.loc 1 2208 2 view .LVU777
 2859 001a FFF7FEFF 		bl	vPortEnterCritical
 2860              	.LVL189:
2210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2861              		.loc 1 2210 3 view .LVU778
 2862 001e 2E4B     		ldr	r3, .L228
 2863 0020 1A68     		ldr	r2, [r3]
 2864 0022 013A     		subs	r2, r2, #1
 2865 0024 1A60     		str	r2, [r3]
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2866              		.loc 1 2212 3 view .LVU779
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2867              		.loc 1 2212 28 is_stmt 0 view .LVU780
 2868 0026 1B68     		ldr	r3, [r3]
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2869              		.loc 1 2212 5 view .LVU781
 2870 0028 002B     		cmp	r3, #0
 2871 002a 4FD1     		bne	.L223
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2872              		.loc 1 2214 4 is_stmt 1 view .LVU782
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2873              		.loc 1 2214 31 is_stmt 0 view .LVU783
 2874 002c 2B4B     		ldr	r3, .L228+4
 2875 002e 1B68     		ldr	r3, [r3]
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2876              		.loc 1 2214 6 view .LVU784
 2877 0030 0BB9     		cbnz	r3, .L224
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2878              		.loc 1 2197 12 view .LVU785
 2879 0032 0024     		movs	r4, #0
 2880 0034 4BE0     		b	.L215
 2881              	.L224:
2196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2882              		.loc 1 2196 8 view .LVU786
 2883 0036 0024     		movs	r4, #0
 2884              	.LVL190:
 2885              	.L216:
2233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 160


 2886              		.loc 1 2233 31 is_stmt 1 view .LVU787
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2887              		.loc 1 2218 52 view .LVU788
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2888              		.loc 1 2218 12 is_stmt 0 view .LVU789
 2889 0038 294B     		ldr	r3, .L228+8
 2890 003a 1B68     		ldr	r3, [r3]
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2891              		.loc 1 2218 52 view .LVU790
 2892 003c 1BB3     		cbz	r3, .L226
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2893              		.loc 1 2220 6 is_stmt 1 view .LVU791
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2894              		.loc 1 2220 14 is_stmt 0 view .LVU792
 2895 003e 284B     		ldr	r3, .L228+8
 2896 0040 DB68     		ldr	r3, [r3, #12]
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2897              		.loc 1 2220 12 view .LVU793
 2898 0042 DC68     		ldr	r4, [r3, #12]
 2899              	.LVL191:
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2900              		.loc 1 2221 6 is_stmt 1 view .LVU794
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2901              		.loc 1 2221 15 is_stmt 0 view .LVU795
 2902 0044 04F11800 		add	r0, r4, #24
 2903 0048 FFF7FEFF 		bl	uxListRemove
 2904              	.LVL192:
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2905              		.loc 1 2222 6 is_stmt 1 view .LVU796
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2906              		.loc 1 2222 15 is_stmt 0 view .LVU797
 2907 004c 251D     		adds	r5, r4, #4
 2908 004e 2846     		mov	r0, r5
 2909 0050 FFF7FEFF 		bl	uxListRemove
 2910              	.LVL193:
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2911              		.loc 1 2223 6 is_stmt 1 view .LVU798
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2912              		.loc 1 2223 6 view .LVU799
 2913 0054 E06A     		ldr	r0, [r4, #44]
 2914 0056 0123     		movs	r3, #1
 2915 0058 8340     		lsls	r3, r3, r0
 2916 005a 224A     		ldr	r2, .L228+12
 2917 005c 1168     		ldr	r1, [r2]
 2918 005e 0B43     		orrs	r3, r3, r1
 2919 0060 1360     		str	r3, [r2]
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2920              		.loc 1 2223 6 view .LVU800
 2921 0062 00EB8000 		add	r0, r0, r0, lsl #2
 2922 0066 2946     		mov	r1, r5
 2923 0068 1F4B     		ldr	r3, .L228+16
 2924 006a 03EB8000 		add	r0, r3, r0, lsl #2
 2925 006e FFF7FEFF 		bl	vListInsertEnd
 2926              	.LVL194:
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2927              		.loc 1 2223 36 discriminator 1 view .LVU801
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 161


 2928              		.loc 1 2227 6 view .LVU802
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2929              		.loc 1 2227 15 is_stmt 0 view .LVU803
 2930 0072 E26A     		ldr	r2, [r4, #44]
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2931              		.loc 1 2227 43 view .LVU804
 2932 0074 1D4B     		ldr	r3, .L228+20
 2933 0076 1B68     		ldr	r3, [r3]
 2934 0078 DB6A     		ldr	r3, [r3, #44]
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2935              		.loc 1 2227 8 view .LVU805
 2936 007a 9A42     		cmp	r2, r3
 2937 007c DCD3     		bcc	.L216
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2938              		.loc 1 2229 7 is_stmt 1 view .LVU806
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2939              		.loc 1 2229 21 is_stmt 0 view .LVU807
 2940 007e 1C4B     		ldr	r3, .L228+24
 2941 0080 0122     		movs	r2, #1
 2942 0082 1A60     		str	r2, [r3]
 2943 0084 D8E7     		b	.L216
 2944              	.L226:
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2945              		.loc 1 2237 5 is_stmt 1 view .LVU808
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2946              		.loc 1 2237 7 is_stmt 0 view .LVU809
 2947 0086 0CB1     		cbz	r4, .L219
2245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2948              		.loc 1 2245 6 is_stmt 1 view .LVU810
 2949 0088 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2950              	.LVL195:
 2951              	.L219:
 2952              	.LBB158:
2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2953              		.loc 1 2253 6 view .LVU811
2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2954              		.loc 1 2253 17 is_stmt 0 view .LVU812
 2955 008c 194B     		ldr	r3, .L228+28
 2956 008e 1C68     		ldr	r4, [r3]
 2957              	.LVL196:
2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2958              		.loc 1 2255 6 is_stmt 1 view .LVU813
2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2959              		.loc 1 2255 8 is_stmt 0 view .LVU814
 2960 0090 84B9     		cbnz	r4, .L222
 2961              	.L220:
2274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2962              		.loc 1 2274 31 is_stmt 1 view .LVU815
 2963              	.LBE158:
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2964              		.loc 1 2278 5 view .LVU816
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2965              		.loc 1 2278 23 is_stmt 0 view .LVU817
 2966 0092 174B     		ldr	r3, .L228+24
 2967 0094 1C68     		ldr	r4, [r3]
 2968              	.LVL197:
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 162


 2969              		.loc 1 2278 7 view .LVU818
 2970 0096 D4B1     		cbz	r4, .L215
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2971              		.loc 1 2282 7 is_stmt 1 view .LVU819
 2972              	.LVL198:
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2973              		.loc 1 2285 6 view .LVU820
 2974 0098 4FF0E023 		mov	r3, #-536813568
 2975 009c 4FF08052 		mov	r2, #268435456
 2976 00a0 C3F8042D 		str	r2, [r3, #3332]
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2977              		.loc 1 2285 6 view .LVU821
 2978              		.syntax unified
 2979              	@ 2285 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2980 00a4 BFF34F8F 		dsb
 2981              	@ 0 "" 2
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2982              		.loc 1 2285 6 view .LVU822
 2983              	@ 2285 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2984 00a8 BFF36F8F 		isb
 2985              	@ 0 "" 2
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2986              		.loc 1 2285 37 view .LVU823
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2987              		.loc 1 2282 23 is_stmt 0 view .LVU824
 2988              		.thumb
 2989              		.syntax unified
 2990 00ac 0124     		movs	r4, #1
 2991 00ae 0EE0     		b	.L215
 2992              	.LVL199:
 2993              	.L221:
 2994              	.LBB159:
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 2995              		.loc 1 2265 33 is_stmt 1 view .LVU825
2267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( xPendedCounts > ( TickType_t ) 0U );
 2996              		.loc 1 2267 8 view .LVU826
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2997              		.loc 1 2268 30 view .LVU827
 2998 00b0 013C     		subs	r4, r4, #1
 2999              	.LVL200:
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3000              		.loc 1 2268 30 is_stmt 0 view .LVU828
 3001 00b2 07D0     		beq	.L227
 3002              	.L222:
2257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 3003              		.loc 1 2257 7 is_stmt 1 view .LVU829
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 3004              		.loc 1 2259 8 view .LVU830
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 3005              		.loc 1 2259 12 is_stmt 0 view .LVU831
 3006 00b4 FFF7FEFF 		bl	xTaskIncrementTick
 3007              	.LVL201:
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 3008              		.loc 1 2259 10 discriminator 1 view .LVU832
 3009 00b8 0028     		cmp	r0, #0
 3010 00ba F9D0     		beq	.L221
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 163


 3011              		.loc 1 2261 9 is_stmt 1 view .LVU833
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 3012              		.loc 1 2261 23 is_stmt 0 view .LVU834
 3013 00bc 0C4B     		ldr	r3, .L228+24
 3014 00be 0122     		movs	r2, #1
 3015 00c0 1A60     		str	r2, [r3]
 3016 00c2 F5E7     		b	.L221
 3017              	.L227:
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3018              		.loc 1 2270 7 is_stmt 1 view .LVU835
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3019              		.loc 1 2270 20 is_stmt 0 view .LVU836
 3020 00c4 0B4B     		ldr	r3, .L228+28
 3021 00c6 0022     		movs	r2, #0
 3022 00c8 1A60     		str	r2, [r3]
 3023 00ca E2E7     		b	.L220
 3024              	.LVL202:
 3025              	.L223:
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3026              		.loc 1 2270 20 view .LVU837
 3027              	.LBE159:
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3028              		.loc 1 2197 12 view .LVU838
 3029 00cc 0024     		movs	r4, #0
 3030              	.LVL203:
 3031              	.L215:
2295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3032              		.loc 1 2295 28 is_stmt 1 view .LVU839
2298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3033              		.loc 1 2298 2 view .LVU840
 3034 00ce FFF7FEFF 		bl	vPortExitCritical
 3035              	.LVL204:
2300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3036              		.loc 1 2300 2 view .LVU841
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3037              		.loc 1 2301 1 is_stmt 0 view .LVU842
 3038 00d2 2046     		mov	r0, r4
 3039 00d4 38BD     		pop	{r3, r4, r5, pc}
 3040              	.LVL205:
 3041              	.L229:
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3042              		.loc 1 2301 1 view .LVU843
 3043 00d6 00BF     		.align	2
 3044              	.L228:
 3045 00d8 00000000 		.word	uxSchedulerSuspended
 3046 00dc 00000000 		.word	uxCurrentNumberOfTasks
 3047 00e0 00000000 		.word	xPendingReadyList
 3048 00e4 00000000 		.word	uxTopReadyPriority
 3049 00e8 00000000 		.word	pxReadyTasksLists
 3050 00ec 00000000 		.word	pxCurrentTCB
 3051 00f0 00000000 		.word	xYieldPending
 3052 00f4 00000000 		.word	xPendedTicks
 3053              		.cfi_endproc
 3054              	.LFE21:
 3056              		.section	.text.vTaskDelay,"ax",%progbits
 3057              		.align	1
 3058              		.global	vTaskDelay
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 164


 3059              		.syntax unified
 3060              		.thumb
 3061              		.thumb_func
 3063              	vTaskDelay:
 3064              	.LVL206:
 3065              	.LFB10:
1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 3066              		.loc 1 1342 2 is_stmt 1 view -0
 3067              		.cfi_startproc
 3068              		@ args = 0, pretend = 0, frame = 0
 3069              		@ frame_needed = 0, uses_anonymous_args = 0
1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 3070              		.loc 1 1342 2 is_stmt 0 view .LVU845
 3071 0000 10B5     		push	{r4, lr}
 3072              	.LCFI27:
 3073              		.cfi_def_cfa_offset 8
 3074              		.cfi_offset 4, -8
 3075              		.cfi_offset 14, -4
1343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3076              		.loc 1 1343 2 is_stmt 1 view .LVU846
 3077              	.LVL207:
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3078              		.loc 1 1346 3 view .LVU847
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3079              		.loc 1 1346 5 is_stmt 0 view .LVU848
 3080 0002 A8B1     		cbz	r0, .L231
 3081 0004 0446     		mov	r4, r0
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3082              		.loc 1 1348 4 is_stmt 1 view .LVU849
 3083 0006 104B     		ldr	r3, .L236
 3084 0008 1B68     		ldr	r3, [r3]
 3085 000a 43B1     		cbz	r3, .L232
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3086              		.loc 1 1348 4 discriminator 1 view .LVU850
 3087              	.LBB160:
 3088              	.LBI160:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3089              		.loc 2 191 30 view .LVU851
 3090              	.LBB161:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3091              		.loc 2 193 1 view .LVU852
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3092              		.loc 2 195 2 view .LVU853
 3093              		.syntax unified
 3094              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3095 000c 4FF05003 			mov r3, #80												
 3096 0010 83F31188 		msr basepri, r3											
 3097 0014 BFF36F8F 		isb														
 3098 0018 BFF34F8F 		dsb														
 3099              	
 3100              	@ 0 "" 2
 3101              		.thumb
 3102              		.syntax unified
 3103              	.L233:
 3104              	.LBE161:
 3105              	.LBE160:
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 165


 3106              		.loc 1 1348 4 discriminator 3 view .LVU854
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3107              		.loc 1 1348 4 discriminator 3 view .LVU855
 3108 001c FEE7     		b	.L233
 3109              	.L232:
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 3110              		.loc 1 1348 45 discriminator 2 view .LVU856
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3111              		.loc 1 1349 4 view .LVU857
 3112 001e FFF7FEFF 		bl	vTaskSuspendAll
 3113              	.LVL208:
1351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3114              		.loc 1 1351 22 view .LVU858
1360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3115              		.loc 1 1360 5 view .LVU859
 3116 0022 0021     		movs	r1, #0
 3117 0024 2046     		mov	r0, r4
 3118 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3119              	.LVL209:
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3120              		.loc 1 1362 4 view .LVU860
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3121              		.loc 1 1362 22 is_stmt 0 view .LVU861
 3122 002a FFF7FEFF 		bl	xTaskResumeAll
 3123              	.LVL210:
1366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3124              		.loc 1 1366 28 is_stmt 1 view .LVU862
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3125              		.loc 1 1371 3 view .LVU863
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3126              		.loc 1 1371 5 is_stmt 0 view .LVU864
 3127 002e 48B9     		cbnz	r0, .L230
 3128              	.LVL211:
 3129              	.L231:
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3130              		.loc 1 1373 4 is_stmt 1 view .LVU865
 3131 0030 4FF0E023 		mov	r3, #-536813568
 3132 0034 4FF08052 		mov	r2, #268435456
 3133 0038 C3F8042D 		str	r2, [r3, #3332]
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3134              		.loc 1 1373 4 view .LVU866
 3135              		.syntax unified
 3136              	@ 1373 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3137 003c BFF34F8F 		dsb
 3138              	@ 0 "" 2
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3139              		.loc 1 1373 4 view .LVU867
 3140              	@ 1373 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3141 0040 BFF36F8F 		isb
 3142              	@ 0 "" 2
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3143              		.loc 1 1373 26 view .LVU868
1377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3144              		.loc 1 1377 28 view .LVU869
 3145              		.thumb
 3146              		.syntax unified
 3147              	.L230:
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 166


1379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3148              		.loc 1 1379 2 is_stmt 0 view .LVU870
 3149 0044 10BD     		pop	{r4, pc}
 3150              	.L237:
 3151 0046 00BF     		.align	2
 3152              	.L236:
 3153 0048 00000000 		.word	uxSchedulerSuspended
 3154              		.cfi_endproc
 3155              	.LFE10:
 3157              		.section	.text.xTaskCatchUpTicks,"ax",%progbits
 3158              		.align	1
 3159              		.global	xTaskCatchUpTicks
 3160              		.syntax unified
 3161              		.thumb
 3162              		.thumb_func
 3164              	xTaskCatchUpTicks:
 3165              	.LVL212:
 3166              	.LFB26:
2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xYieldRequired = pdFALSE;
 3167              		.loc 1 2610 1 is_stmt 1 view -0
 3168              		.cfi_startproc
 3169              		@ args = 0, pretend = 0, frame = 0
 3170              		@ frame_needed = 0, uses_anonymous_args = 0
2611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3171              		.loc 1 2611 1 view .LVU872
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3172              		.loc 1 2615 2 view .LVU873
 3173 0000 0B4B     		ldr	r3, .L243
 3174 0002 1B68     		ldr	r3, [r3]
 3175 0004 43B1     		cbz	r3, .L239
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3176              		.loc 1 2615 2 discriminator 1 view .LVU874
 3177              	.LBB162:
 3178              	.LBI162:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3179              		.loc 2 191 30 view .LVU875
 3180              	.LBB163:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3181              		.loc 2 193 1 view .LVU876
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3182              		.loc 2 195 2 view .LVU877
 3183              		.syntax unified
 3184              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3185 0006 4FF05003 			mov r3, #80												
 3186 000a 83F31188 		msr basepri, r3											
 3187 000e BFF36F8F 		isb														
 3188 0012 BFF34F8F 		dsb														
 3189              	
 3190              	@ 0 "" 2
 3191              		.thumb
 3192              		.syntax unified
 3193              	.L240:
 3194              	.LBE163:
 3195              	.LBE162:
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3196              		.loc 1 2615 2 discriminator 3 view .LVU878
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 167


 3197              		.loc 1 2615 2 discriminator 3 view .LVU879
 3198 0016 FEE7     		b	.L240
 3199              	.L239:
2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xYieldRequired = pdFALSE;
 3200              		.loc 1 2610 1 is_stmt 0 view .LVU880
 3201 0018 10B5     		push	{r4, lr}
 3202              	.LCFI28:
 3203              		.cfi_def_cfa_offset 8
 3204              		.cfi_offset 4, -8
 3205              		.cfi_offset 14, -4
 3206 001a 0446     		mov	r4, r0
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3207              		.loc 1 2615 43 is_stmt 1 discriminator 2 view .LVU881
2619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xPendedTicks += xTicksToCatchUp;
 3208              		.loc 1 2619 2 view .LVU882
 3209 001c FFF7FEFF 		bl	vTaskSuspendAll
 3210              	.LVL213:
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldRequired = xTaskResumeAll();
 3211              		.loc 1 2620 2 view .LVU883
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldRequired = xTaskResumeAll();
 3212              		.loc 1 2620 15 is_stmt 0 view .LVU884
 3213 0020 044A     		ldr	r2, .L243+4
 3214 0022 1368     		ldr	r3, [r2]
 3215 0024 2344     		add	r3, r3, r4
 3216 0026 1360     		str	r3, [r2]
2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3217              		.loc 1 2621 2 is_stmt 1 view .LVU885
2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3218              		.loc 1 2621 19 is_stmt 0 view .LVU886
 3219 0028 FFF7FEFF 		bl	xTaskResumeAll
 3220              	.LVL214:
2623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3221              		.loc 1 2623 2 is_stmt 1 view .LVU887
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 3222              		.loc 1 2624 1 is_stmt 0 view .LVU888
 3223 002c 10BD     		pop	{r4, pc}
 3224              	.LVL215:
 3225              	.L244:
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 3226              		.loc 1 2624 1 view .LVU889
 3227 002e 00BF     		.align	2
 3228              	.L243:
 3229 0030 00000000 		.word	uxSchedulerSuspended
 3230 0034 00000000 		.word	xPendedTicks
 3231              		.cfi_endproc
 3232              	.LFE26:
 3234              		.section	.text.vTaskSwitchContext,"ax",%progbits
 3235              		.align	1
 3236              		.global	vTaskSwitchContext
 3237              		.syntax unified
 3238              		.thumb
 3239              		.thumb_func
 3241              	vTaskSwitchContext:
 3242              	.LFB28:
2990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 3243              		.loc 1 2990 1 is_stmt 1 view -0
 3244              		.cfi_startproc
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 168


 3245              		@ args = 0, pretend = 0, frame = 0
 3246              		@ frame_needed = 0, uses_anonymous_args = 0
 3247              		@ link register save eliminated.
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3248              		.loc 1 2991 2 view .LVU891
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3249              		.loc 1 2991 27 is_stmt 0 view .LVU892
 3250 0000 204B     		ldr	r3, .L252
 3251 0002 1B68     		ldr	r3, [r3]
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3252              		.loc 1 2991 4 view .LVU893
 3253 0004 1BB1     		cbz	r3, .L246
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3254              		.loc 1 2995 3 is_stmt 1 view .LVU894
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3255              		.loc 1 2995 17 is_stmt 0 view .LVU895
 3256 0006 204B     		ldr	r3, .L252+4
 3257 0008 0122     		movs	r2, #1
 3258 000a 1A60     		str	r2, [r3]
 3259 000c 7047     		bx	lr
 3260              	.L246:
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 3261              		.loc 1 2999 3 is_stmt 1 view .LVU896
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 3262              		.loc 1 2999 17 is_stmt 0 view .LVU897
 3263 000e 1E4B     		ldr	r3, .L252+4
 3264 0010 0022     		movs	r2, #0
 3265 0012 1A60     		str	r2, [r3]
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3266              		.loc 1 3000 27 is_stmt 1 view .LVU898
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3267              		.loc 1 3030 33 view .LVU899
 3268              	.LBB164:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3269              		.loc 1 3041 3 view .LVU900
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3270              		.loc 1 3041 3 view .LVU901
 3271 0014 1D4B     		ldr	r3, .L252+8
 3272 0016 1B68     		ldr	r3, [r3]
 3273              	.LVL216:
 3274              	.LBB165:
 3275              	.LBI165:
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 3276              		.loc 2 130 59 view .LVU902
 3277              	.LBB166:
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3278              		.loc 2 132 2 view .LVU903
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 3279              		.loc 2 134 3 view .LVU904
 3280              		.syntax unified
 3281              	@ 134 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3282 0018 B3FA83F3 		clz r3, r3
 3283              	@ 0 "" 2
 3284              	.LVL217:
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 3285              		.loc 2 134 3 is_stmt 0 view .LVU905
 3286              		.thumb
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 169


 3287              		.syntax unified
 3288 001c DBB2     		uxtb	r3, r3
 3289              	.LVL218:
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 3290              		.loc 2 135 3 is_stmt 1 view .LVU906
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 3291              		.loc 2 135 3 is_stmt 0 view .LVU907
 3292              	.LBE166:
 3293              	.LBE165:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3294              		.loc 1 3041 3 discriminator 1 view .LVU908
 3295 001e C3F11F03 		rsb	r3, r3, #31
 3296              	.LVL219:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3297              		.loc 1 3041 3 is_stmt 1 discriminator 1 view .LVU909
 3298 0022 03EB8301 		add	r1, r3, r3, lsl #2
 3299 0026 8A00     		lsls	r2, r1, #2
 3300 0028 1949     		ldr	r1, .L252+12
 3301 002a 8A58     		ldr	r2, [r1, r2]
 3302 002c 42B9     		cbnz	r2, .L248
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3303              		.loc 1 3041 3 discriminator 1 view .LVU910
 3304              	.LBB167:
 3305              	.LBI167:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3306              		.loc 2 191 30 view .LVU911
 3307              	.LBB168:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3308              		.loc 2 193 1 view .LVU912
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3309              		.loc 2 195 2 view .LVU913
 3310              		.syntax unified
 3311              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3312 002e 4FF05003 			mov r3, #80												
 3313 0032 83F31188 		msr basepri, r3											
 3314 0036 BFF36F8F 		isb														
 3315 003a BFF34F8F 		dsb														
 3316              	
 3317              	@ 0 "" 2
 3318              	.LVL220:
 3319              		.thumb
 3320              		.syntax unified
 3321              	.L249:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3322              		.loc 2 195 2 is_stmt 0 view .LVU914
 3323              	.LBE168:
 3324              	.LBE167:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3325              		.loc 1 3041 3 is_stmt 1 discriminator 3 view .LVU915
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3326              		.loc 1 3041 3 discriminator 3 view .LVU916
 3327 003e FEE7     		b	.L249
 3328              	.LVL221:
 3329              	.L248:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3330              		.loc 1 3041 3 discriminator 2 view .LVU917
 3331              	.LBB169:
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 170


3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3332              		.loc 1 3041 3 discriminator 2 view .LVU918
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3333              		.loc 1 3041 3 discriminator 2 view .LVU919
 3334 0040 1348     		ldr	r0, .L252+12
 3335 0042 03EB8301 		add	r1, r3, r3, lsl #2
 3336 0046 8A00     		lsls	r2, r1, #2
 3337 0048 0244     		add	r2, r2, r0
 3338 004a 5168     		ldr	r1, [r2, #4]
 3339 004c 4968     		ldr	r1, [r1, #4]
 3340 004e 5160     		str	r1, [r2, #4]
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3341              		.loc 1 3041 3 discriminator 2 view .LVU920
 3342 0050 03EB830C 		add	ip, r3, r3, lsl #2
 3343 0054 4FEA8C02 		lsl	r2, ip, #2
 3344 0058 0832     		adds	r2, r2, #8
 3345 005a 0244     		add	r2, r2, r0
 3346 005c 9142     		cmp	r1, r2
 3347 005e 09D0     		beq	.L251
 3348              	.L250:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3349              		.loc 1 3041 3 discriminator 6 view .LVU921
 3350 0060 03EB8303 		add	r3, r3, r3, lsl #2
 3351              	.LVL222:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3352              		.loc 1 3041 3 is_stmt 0 discriminator 6 view .LVU922
 3353 0064 9A00     		lsls	r2, r3, #2
 3354 0066 0A4B     		ldr	r3, .L252+12
 3355 0068 1344     		add	r3, r3, r2
 3356 006a 5B68     		ldr	r3, [r3, #4]
 3357 006c DA68     		ldr	r2, [r3, #12]
 3358 006e 094B     		ldr	r3, .L252+16
 3359 0070 1A60     		str	r2, [r3]
 3360              	.LBE169:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3361              		.loc 1 3041 3 is_stmt 1 discriminator 7 view .LVU923
 3362              	.LBE164:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3363              		.loc 1 3041 37 discriminator 7 view .LVU924
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3364              		.loc 1 3042 26 view .LVU925
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3365              		.loc 1 3061 1 is_stmt 0 view .LVU926
 3366 0072 7047     		bx	lr
 3367              	.LVL223:
 3368              	.L251:
 3369              	.LBB171:
 3370              	.LBB170:
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3371              		.loc 1 3041 3 is_stmt 1 discriminator 4 view .LVU927
 3372 0074 4868     		ldr	r0, [r1, #4]
 3373 0076 6246     		mov	r2, ip
 3374 0078 9100     		lsls	r1, r2, #2
 3375 007a 054A     		ldr	r2, .L252+12
 3376 007c 0A44     		add	r2, r2, r1
 3377 007e 5060     		str	r0, [r2, #4]
 3378 0080 EEE7     		b	.L250
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 171


 3379              	.L253:
 3380 0082 00BF     		.align	2
 3381              	.L252:
 3382 0084 00000000 		.word	uxSchedulerSuspended
 3383 0088 00000000 		.word	xYieldPending
 3384 008c 00000000 		.word	uxTopReadyPriority
 3385 0090 00000000 		.word	pxReadyTasksLists
 3386 0094 00000000 		.word	pxCurrentTCB
 3387              	.LBE170:
 3388              	.LBE171:
 3389              		.cfi_endproc
 3390              	.LFE28:
 3392              		.section	.text.vTaskSuspend,"ax",%progbits
 3393              		.align	1
 3394              		.global	vTaskSuspend
 3395              		.syntax unified
 3396              		.thumb
 3397              		.thumb_func
 3399              	vTaskSuspend:
 3400              	.LVL224:
 3401              	.LFB14:
1705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3402              		.loc 1 1705 2 view -0
 3403              		.cfi_startproc
 3404              		@ args = 0, pretend = 0, frame = 0
 3405              		@ frame_needed = 0, uses_anonymous_args = 0
1705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 3406              		.loc 1 1705 2 is_stmt 0 view .LVU929
 3407 0000 38B5     		push	{r3, r4, r5, lr}
 3408              	.LCFI29:
 3409              		.cfi_def_cfa_offset 16
 3410              		.cfi_offset 3, -16
 3411              		.cfi_offset 4, -12
 3412              		.cfi_offset 5, -8
 3413              		.cfi_offset 14, -4
 3414 0002 0446     		mov	r4, r0
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3415              		.loc 1 1706 2 is_stmt 1 view .LVU930
1708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3416              		.loc 1 1708 3 view .LVU931
 3417 0004 FFF7FEFF 		bl	vPortEnterCritical
 3418              	.LVL225:
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3419              		.loc 1 1712 4 view .LVU932
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3420              		.loc 1 1712 12 is_stmt 0 view .LVU933
 3421 0008 64B3     		cbz	r4, .L266
 3422              	.LVL226:
 3423              	.L255:
1714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3424              		.loc 1 1714 30 is_stmt 1 view .LVU934
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3425              		.loc 1 1718 4 view .LVU935
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3426              		.loc 1 1718 8 is_stmt 0 view .LVU936
 3427 000a 251D     		adds	r5, r4, #4
 3428 000c 2846     		mov	r0, r5
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 172


 3429 000e FFF7FEFF 		bl	uxListRemove
 3430              	.LVL227:
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3431              		.loc 1 1718 6 discriminator 1 view .LVU937
 3432 0012 70B9     		cbnz	r0, .L256
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3433              		.loc 1 1720 5 is_stmt 1 view .LVU938
 3434 0014 E26A     		ldr	r2, [r4, #44]
 3435 0016 02EB8203 		add	r3, r2, r2, lsl #2
 3436 001a 9B00     		lsls	r3, r3, #2
 3437 001c 2C49     		ldr	r1, .L270
 3438 001e CB58     		ldr	r3, [r1, r3]
 3439 0020 3BB9     		cbnz	r3, .L256
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3440              		.loc 1 1720 5 discriminator 1 view .LVU939
 3441 0022 0123     		movs	r3, #1
 3442 0024 03FA02F2 		lsl	r2, r3, r2
 3443 0028 2A49     		ldr	r1, .L270+4
 3444 002a 0B68     		ldr	r3, [r1]
 3445 002c 23EA0203 		bic	r3, r3, r2
 3446 0030 0B60     		str	r3, [r1]
 3447              	.L256:
1724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3448              		.loc 1 1724 29 view .LVU940
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3449              		.loc 1 1728 4 view .LVU941
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3450              		.loc 1 1728 8 is_stmt 0 view .LVU942
 3451 0032 A36A     		ldr	r3, [r4, #40]
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3452              		.loc 1 1728 6 view .LVU943
 3453 0034 1BB1     		cbz	r3, .L257
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3454              		.loc 1 1730 5 is_stmt 1 view .LVU944
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3455              		.loc 1 1730 14 is_stmt 0 view .LVU945
 3456 0036 04F11800 		add	r0, r4, #24
 3457 003a FFF7FEFF 		bl	uxListRemove
 3458              	.LVL228:
 3459              	.L257:
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3460              		.loc 1 1734 29 is_stmt 1 view .LVU946
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3461              		.loc 1 1737 4 view .LVU947
 3462 003e 2946     		mov	r1, r5
 3463 0040 2548     		ldr	r0, .L270+8
 3464 0042 FFF7FEFF 		bl	vListInsertEnd
 3465              	.LVL229:
1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3466              		.loc 1 1741 5 view .LVU948
1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3467              		.loc 1 1741 14 is_stmt 0 view .LVU949
 3468 0046 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 3469 004a DBB2     		uxtb	r3, r3
1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3470              		.loc 1 1741 7 view .LVU950
 3471 004c 012B     		cmp	r3, #1
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 173


 3472 004e 0CD0     		beq	.L267
 3473              	.L258:
1750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3474              		.loc 1 1750 3 is_stmt 1 view .LVU951
 3475 0050 FFF7FEFF 		bl	vPortExitCritical
 3476              	.LVL230:
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3477              		.loc 1 1752 3 view .LVU952
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3478              		.loc 1 1752 25 is_stmt 0 view .LVU953
 3479 0054 214B     		ldr	r3, .L270+12
 3480 0056 1B68     		ldr	r3, [r3]
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3481              		.loc 1 1752 5 view .LVU954
 3482 0058 5BB9     		cbnz	r3, .L268
 3483              	.L259:
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3484              		.loc 1 1764 28 is_stmt 1 view .LVU955
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3485              		.loc 1 1767 3 view .LVU956
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3486              		.loc 1 1767 13 is_stmt 0 view .LVU957
 3487 005a 214B     		ldr	r3, .L270+16
 3488 005c 1B68     		ldr	r3, [r3]
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3489              		.loc 1 1767 5 view .LVU958
 3490 005e A342     		cmp	r3, r4
 3491 0060 0ED0     		beq	.L269
 3492              	.L254:
1798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3493              		.loc 1 1798 2 view .LVU959
 3494 0062 38BD     		pop	{r3, r4, r5, pc}
 3495              	.LVL231:
 3496              	.L266:
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3497              		.loc 1 1712 12 discriminator 1 view .LVU960
 3498 0064 1E4B     		ldr	r3, .L270+16
 3499 0066 1C68     		ldr	r4, [r3]
 3500              	.LVL232:
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3501              		.loc 1 1712 12 discriminator 1 view .LVU961
 3502 0068 CFE7     		b	.L255
 3503              	.LVL233:
 3504              	.L267:
1745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3505              		.loc 1 1745 6 is_stmt 1 view .LVU962
1745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3506              		.loc 1 1745 27 is_stmt 0 view .LVU963
 3507 006a 0023     		movs	r3, #0
 3508 006c 84F85030 		strb	r3, [r4, #80]
 3509 0070 EEE7     		b	.L258
 3510              	.L268:
1756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3511              		.loc 1 1756 4 is_stmt 1 view .LVU964
 3512 0072 FFF7FEFF 		bl	vPortEnterCritical
 3513              	.LVL234:
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 174


 3514              		.loc 1 1758 5 view .LVU965
 3515 0076 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 3516              	.LVL235:
1760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3517              		.loc 1 1760 4 view .LVU966
 3518 007a FFF7FEFF 		bl	vPortExitCritical
 3519              	.LVL236:
 3520 007e ECE7     		b	.L259
 3521              	.L269:
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3522              		.loc 1 1769 4 view .LVU967
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3523              		.loc 1 1769 26 is_stmt 0 view .LVU968
 3524 0080 164B     		ldr	r3, .L270+12
 3525 0082 1B68     		ldr	r3, [r3]
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3526              		.loc 1 1769 6 view .LVU969
 3527 0084 B3B1     		cbz	r3, .L261
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3528              		.loc 1 1772 5 is_stmt 1 view .LVU970
 3529 0086 174B     		ldr	r3, .L270+20
 3530 0088 1B68     		ldr	r3, [r3]
 3531 008a 43B1     		cbz	r3, .L262
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3532              		.loc 1 1772 5 discriminator 1 view .LVU971
 3533              	.LBB172:
 3534              	.LBI172:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3535              		.loc 2 191 30 view .LVU972
 3536              	.LBB173:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3537              		.loc 2 193 1 view .LVU973
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3538              		.loc 2 195 2 view .LVU974
 3539              		.syntax unified
 3540              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3541 008c 4FF05003 			mov r3, #80												
 3542 0090 83F31188 		msr basepri, r3											
 3543 0094 BFF36F8F 		isb														
 3544 0098 BFF34F8F 		dsb														
 3545              	
 3546              	@ 0 "" 2
 3547              		.thumb
 3548              		.syntax unified
 3549              	.L263:
 3550              	.LBE173:
 3551              	.LBE172:
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3552              		.loc 1 1772 5 discriminator 3 view .LVU975
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3553              		.loc 1 1772 5 discriminator 3 view .LVU976
 3554 009c FEE7     		b	.L263
 3555              	.L262:
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 3556              		.loc 1 1772 46 discriminator 2 view .LVU977
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3557              		.loc 1 1773 5 view .LVU978
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 175


 3558 009e 4FF0E023 		mov	r3, #-536813568
 3559 00a2 4FF08052 		mov	r2, #268435456
 3560 00a6 C3F8042D 		str	r2, [r3, #3332]
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3561              		.loc 1 1773 5 view .LVU979
 3562              		.syntax unified
 3563              	@ 1773 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3564 00aa BFF34F8F 		dsb
 3565              	@ 0 "" 2
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3566              		.loc 1 1773 5 view .LVU980
 3567              	@ 1773 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3568 00ae BFF36F8F 		isb
 3569              	@ 0 "" 2
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3570              		.loc 1 1773 27 view .LVU981
 3571              		.thumb
 3572              		.syntax unified
 3573 00b2 D6E7     		b	.L254
 3574              	.L261:
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3575              		.loc 1 1780 5 view .LVU982
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3576              		.loc 1 1780 9 is_stmt 0 view .LVU983
 3577 00b4 084B     		ldr	r3, .L270+8
 3578 00b6 1A68     		ldr	r2, [r3]
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3579              		.loc 1 1780 56 view .LVU984
 3580 00b8 0B4B     		ldr	r3, .L270+24
 3581 00ba 1B68     		ldr	r3, [r3]
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3582              		.loc 1 1780 7 view .LVU985
 3583 00bc 9A42     		cmp	r2, r3
 3584 00be 03D1     		bne	.L264
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3585              		.loc 1 1786 6 is_stmt 1 view .LVU986
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3586              		.loc 1 1786 19 is_stmt 0 view .LVU987
 3587 00c0 074B     		ldr	r3, .L270+16
 3588 00c2 0022     		movs	r2, #0
 3589 00c4 1A60     		str	r2, [r3]
 3590 00c6 CCE7     		b	.L254
 3591              	.L264:
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3592              		.loc 1 1790 6 is_stmt 1 view .LVU988
 3593 00c8 FFF7FEFF 		bl	vTaskSwitchContext
 3594              	.LVL237:
1796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3595              		.loc 1 1796 28 view .LVU989
1798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3596              		.loc 1 1798 2 is_stmt 0 view .LVU990
 3597 00cc C9E7     		b	.L254
 3598              	.L271:
 3599 00ce 00BF     		.align	2
 3600              	.L270:
 3601 00d0 00000000 		.word	pxReadyTasksLists
 3602 00d4 00000000 		.word	uxTopReadyPriority
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 176


 3603 00d8 00000000 		.word	xSuspendedTaskList
 3604 00dc 00000000 		.word	xSchedulerRunning
 3605 00e0 00000000 		.word	pxCurrentTCB
 3606 00e4 00000000 		.word	uxSchedulerSuspended
 3607 00e8 00000000 		.word	uxCurrentNumberOfTasks
 3608              		.cfi_endproc
 3609              	.LFE14:
 3611              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 3612              		.align	1
 3613              		.global	vTaskPlaceOnEventList
 3614              		.syntax unified
 3615              		.thumb
 3616              		.thumb_func
 3618              	vTaskPlaceOnEventList:
 3619              	.LVL238:
 3620              	.LFB29:
3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3621              		.loc 1 3065 1 is_stmt 1 view -0
 3622              		.cfi_startproc
 3623              		@ args = 0, pretend = 0, frame = 0
 3624              		@ frame_needed = 0, uses_anonymous_args = 0
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3625              		.loc 1 3066 2 view .LVU992
 3626 0000 58B1     		cbz	r0, .L277
3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3627              		.loc 1 3065 1 is_stmt 0 view .LVU993
 3628 0002 10B5     		push	{r4, lr}
 3629              	.LCFI30:
 3630              		.cfi_def_cfa_offset 8
 3631              		.cfi_offset 4, -8
 3632              		.cfi_offset 14, -4
 3633 0004 0C46     		mov	r4, r1
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3634              		.loc 1 3066 29 is_stmt 1 discriminator 2 view .LVU994
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3635              		.loc 1 3075 2 view .LVU995
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3636              		.loc 1 3075 43 is_stmt 0 view .LVU996
 3637 0006 094A     		ldr	r2, .L278
 3638 0008 1168     		ldr	r1, [r2]
 3639              	.LVL239:
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3640              		.loc 1 3075 2 view .LVU997
 3641 000a 1831     		adds	r1, r1, #24
 3642 000c FFF7FEFF 		bl	vListInsert
 3643              	.LVL240:
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3644              		.loc 1 3077 2 is_stmt 1 view .LVU998
 3645 0010 0121     		movs	r1, #1
 3646 0012 2046     		mov	r0, r4
 3647 0014 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3648              	.LVL241:
3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3649              		.loc 1 3078 1 is_stmt 0 view .LVU999
 3650 0018 10BD     		pop	{r4, pc}
 3651              	.LVL242:
 3652              	.L277:
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 177


 3653              	.LCFI31:
 3654              		.cfi_def_cfa_offset 0
 3655              		.cfi_restore 4
 3656              		.cfi_restore 14
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3657              		.loc 1 3066 2 is_stmt 1 discriminator 1 view .LVU1000
 3658              	.LBB174:
 3659              	.LBI174:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3660              		.loc 2 191 30 view .LVU1001
 3661              	.LBB175:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3662              		.loc 2 193 1 view .LVU1002
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3663              		.loc 2 195 2 view .LVU1003
 3664              		.syntax unified
 3665              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3666 001a 4FF05003 			mov r3, #80												
 3667 001e 83F31188 		msr basepri, r3											
 3668 0022 BFF36F8F 		isb														
 3669 0026 BFF34F8F 		dsb														
 3670              	
 3671              	@ 0 "" 2
 3672              		.thumb
 3673              		.syntax unified
 3674              	.L274:
 3675              	.LBE175:
 3676              	.LBE174:
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3677              		.loc 1 3066 2 discriminator 3 view .LVU1004
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3678              		.loc 1 3066 2 discriminator 3 view .LVU1005
 3679 002a FEE7     		b	.L274
 3680              	.L279:
 3681              		.align	2
 3682              	.L278:
 3683 002c 00000000 		.word	pxCurrentTCB
 3684              		.cfi_endproc
 3685              	.LFE29:
 3687              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 3688              		.align	1
 3689              		.global	vTaskPlaceOnUnorderedEventList
 3690              		.syntax unified
 3691              		.thumb
 3692              		.thumb_func
 3694              	vTaskPlaceOnUnorderedEventList:
 3695              	.LVL243:
 3696              	.LFB30:
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3697              		.loc 1 3082 1 view -0
 3698              		.cfi_startproc
 3699              		@ args = 0, pretend = 0, frame = 0
 3700              		@ frame_needed = 0, uses_anonymous_args = 0
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3701              		.loc 1 3083 2 view .LVU1007
 3702 0000 70B1     		cbz	r0, .L287
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 178


 3703              		.loc 1 3082 1 is_stmt 0 view .LVU1008
 3704 0002 10B5     		push	{r4, lr}
 3705              	.LCFI32:
 3706              		.cfi_def_cfa_offset 8
 3707              		.cfi_offset 4, -8
 3708              		.cfi_offset 14, -4
 3709 0004 1446     		mov	r4, r2
 3710 0006 0246     		mov	r2, r0
 3711              	.LVL244:
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3712              		.loc 1 3083 29 is_stmt 1 discriminator 2 view .LVU1009
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3713              		.loc 1 3087 2 view .LVU1010
 3714 0008 114B     		ldr	r3, .L288
 3715 000a 1B68     		ldr	r3, [r3]
 3716 000c 8BB9     		cbnz	r3, .L283
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3717              		.loc 1 3087 2 discriminator 1 view .LVU1011
 3718              	.LBB176:
 3719              	.LBI176:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3720              		.loc 2 191 30 view .LVU1012
 3721              	.LBB177:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3722              		.loc 2 193 1 view .LVU1013
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3723              		.loc 2 195 2 view .LVU1014
 3724              		.syntax unified
 3725              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3726 000e 4FF05003 			mov r3, #80												
 3727 0012 83F31188 		msr basepri, r3											
 3728 0016 BFF36F8F 		isb														
 3729 001a BFF34F8F 		dsb														
 3730              	
 3731              	@ 0 "" 2
 3732              		.thumb
 3733              		.syntax unified
 3734              	.L284:
 3735              	.LBE177:
 3736              	.LBE176:
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3737              		.loc 1 3087 2 discriminator 3 view .LVU1015
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3738              		.loc 1 3087 2 discriminator 3 view .LVU1016
 3739 001e FEE7     		b	.L284
 3740              	.LVL245:
 3741              	.L287:
 3742              	.LCFI33:
 3743              		.cfi_def_cfa_offset 0
 3744              		.cfi_restore 4
 3745              		.cfi_restore 14
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3746              		.loc 1 3083 2 discriminator 1 view .LVU1017
 3747              	.LBB178:
 3748              	.LBI178:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3749              		.loc 2 191 30 view .LVU1018
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 179


 3750              	.LBB179:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3751              		.loc 2 193 1 view .LVU1019
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3752              		.loc 2 195 2 view .LVU1020
 3753              		.syntax unified
 3754              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3755 0020 4FF05003 			mov r3, #80												
 3756 0024 83F31188 		msr basepri, r3											
 3757 0028 BFF36F8F 		isb														
 3758 002c BFF34F8F 		dsb														
 3759              	
 3760              	@ 0 "" 2
 3761              		.thumb
 3762              		.syntax unified
 3763              	.L282:
 3764              	.LBE179:
 3765              	.LBE178:
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3766              		.loc 1 3083 2 discriminator 3 view .LVU1021
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3767              		.loc 1 3083 2 discriminator 3 view .LVU1022
 3768 0030 FEE7     		b	.L282
 3769              	.LVL246:
 3770              	.L283:
 3771              	.LCFI34:
 3772              		.cfi_def_cfa_offset 8
 3773              		.cfi_offset 4, -8
 3774              		.cfi_offset 14, -4
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3775              		.loc 1 3087 43 discriminator 2 view .LVU1023
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3776              		.loc 1 3092 2 view .LVU1024
 3777 0032 084B     		ldr	r3, .L288+4
 3778 0034 1868     		ldr	r0, [r3]
 3779              	.LVL247:
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3780              		.loc 1 3092 2 is_stmt 0 view .LVU1025
 3781 0036 41F00041 		orr	r1, r1, #-2147483648
 3782              	.LVL248:
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3783              		.loc 1 3092 2 view .LVU1026
 3784 003a 8161     		str	r1, [r0, #24]
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3785              		.loc 1 3099 2 is_stmt 1 view .LVU1027
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3786              		.loc 1 3099 46 is_stmt 0 view .LVU1028
 3787 003c 1968     		ldr	r1, [r3]
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3788              		.loc 1 3099 2 view .LVU1029
 3789 003e 1831     		adds	r1, r1, #24
 3790 0040 1046     		mov	r0, r2
 3791 0042 FFF7FEFF 		bl	vListInsertEnd
 3792              	.LVL249:
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3793              		.loc 1 3101 2 is_stmt 1 view .LVU1030
 3794 0046 0121     		movs	r1, #1
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 180


 3795 0048 2046     		mov	r0, r4
 3796 004a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3797              	.LVL250:
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3798              		.loc 1 3102 1 is_stmt 0 view .LVU1031
 3799 004e 10BD     		pop	{r4, pc}
 3800              	.LVL251:
 3801              	.L289:
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3802              		.loc 1 3102 1 view .LVU1032
 3803              		.align	2
 3804              	.L288:
 3805 0050 00000000 		.word	uxSchedulerSuspended
 3806 0054 00000000 		.word	pxCurrentTCB
 3807              		.cfi_endproc
 3808              	.LFE30:
 3810              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 3811              		.align	1
 3812              		.global	xTaskRemoveFromEventList
 3813              		.syntax unified
 3814              		.thumb
 3815              		.thumb_func
 3817              	xTaskRemoveFromEventList:
 3818              	.LVL252:
 3819              	.LFB31:
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3820              		.loc 1 3139 1 is_stmt 1 view -0
 3821              		.cfi_startproc
 3822              		@ args = 0, pretend = 0, frame = 0
 3823              		@ frame_needed = 0, uses_anonymous_args = 0
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3824              		.loc 1 3139 1 is_stmt 0 view .LVU1034
 3825 0000 38B5     		push	{r3, r4, r5, lr}
 3826              	.LCFI35:
 3827              		.cfi_def_cfa_offset 16
 3828              		.cfi_offset 3, -16
 3829              		.cfi_offset 4, -12
 3830              		.cfi_offset 5, -8
 3831              		.cfi_offset 14, -4
3140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 3832              		.loc 1 3140 1 is_stmt 1 view .LVU1035
3141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3833              		.loc 1 3141 1 view .LVU1036
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3834              		.loc 1 3156 2 view .LVU1037
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3835              		.loc 1 3156 19 is_stmt 0 view .LVU1038
 3836 0002 C368     		ldr	r3, [r0, #12]
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3837              		.loc 1 3156 17 view .LVU1039
 3838 0004 DC68     		ldr	r4, [r3, #12]
 3839              	.LVL253:
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3840              		.loc 1 3157 2 is_stmt 1 view .LVU1040
 3841 0006 24B3     		cbz	r4, .L298
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3842              		.loc 1 3157 32 discriminator 2 view .LVU1041
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 181


3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3843              		.loc 1 3158 2 view .LVU1042
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3844              		.loc 1 3158 11 is_stmt 0 view .LVU1043
 3845 0008 04F11805 		add	r5, r4, #24
 3846 000c 2846     		mov	r0, r5
 3847              	.LVL254:
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3848              		.loc 1 3158 11 view .LVU1044
 3849 000e FFF7FEFF 		bl	uxListRemove
 3850              	.LVL255:
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3851              		.loc 1 3160 2 is_stmt 1 view .LVU1045
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3852              		.loc 1 3160 27 is_stmt 0 view .LVU1046
 3853 0012 184B     		ldr	r3, .L299
 3854 0014 1B68     		ldr	r3, [r3]
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3855              		.loc 1 3160 4 view .LVU1047
 3856 0016 2BBB     		cbnz	r3, .L293
3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3857              		.loc 1 3162 3 is_stmt 1 view .LVU1048
3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3858              		.loc 1 3162 12 is_stmt 0 view .LVU1049
 3859 0018 251D     		adds	r5, r4, #4
 3860 001a 2846     		mov	r0, r5
 3861 001c FFF7FEFF 		bl	uxListRemove
 3862              	.LVL256:
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3863              		.loc 1 3163 3 is_stmt 1 view .LVU1050
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3864              		.loc 1 3163 3 view .LVU1051
 3865 0020 E06A     		ldr	r0, [r4, #44]
 3866 0022 0123     		movs	r3, #1
 3867 0024 8340     		lsls	r3, r3, r0
 3868 0026 144A     		ldr	r2, .L299+4
 3869 0028 1168     		ldr	r1, [r2]
 3870 002a 0B43     		orrs	r3, r3, r1
 3871 002c 1360     		str	r3, [r2]
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3872              		.loc 1 3163 3 view .LVU1052
 3873 002e 00EB8000 		add	r0, r0, r0, lsl #2
 3874 0032 2946     		mov	r1, r5
 3875 0034 114B     		ldr	r3, .L299+8
 3876 0036 03EB8000 		add	r0, r3, r0, lsl #2
 3877 003a FFF7FEFF 		bl	vListInsertEnd
 3878              	.LVL257:
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3879              		.loc 1 3163 42 discriminator 1 view .LVU1053
 3880              	.L294:
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3881              		.loc 1 3186 2 view .LVU1054
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3882              		.loc 1 3186 20 is_stmt 0 view .LVU1055
 3883 003e E26A     		ldr	r2, [r4, #44]
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3884              		.loc 1 3186 47 view .LVU1056
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 182


 3885 0040 0F4B     		ldr	r3, .L299+12
 3886 0042 1B68     		ldr	r3, [r3]
 3887 0044 DB6A     		ldr	r3, [r3, #44]
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3888              		.loc 1 3186 4 view .LVU1057
 3889 0046 9A42     		cmp	r2, r3
 3890 0048 11D9     		bls	.L296
3191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3891              		.loc 1 3191 3 is_stmt 1 view .LVU1058
 3892              	.LVL258:
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3893              		.loc 1 3195 3 view .LVU1059
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3894              		.loc 1 3195 17 is_stmt 0 view .LVU1060
 3895 004a 0120     		movs	r0, #1
 3896 004c 0D4B     		ldr	r3, .L299+16
 3897 004e 1860     		str	r0, [r3]
 3898              	.LVL259:
 3899              	.L290:
3203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3900              		.loc 1 3203 1 view .LVU1061
 3901 0050 38BD     		pop	{r3, r4, r5, pc}
 3902              	.LVL260:
 3903              	.L298:
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3904              		.loc 1 3157 2 is_stmt 1 discriminator 1 view .LVU1062
 3905              	.LBB180:
 3906              	.LBI180:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3907              		.loc 2 191 30 view .LVU1063
 3908              	.LBB181:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3909              		.loc 2 193 1 view .LVU1064
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3910              		.loc 2 195 2 view .LVU1065
 3911              		.syntax unified
 3912              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3913 0052 4FF05003 			mov r3, #80												
 3914 0056 83F31188 		msr basepri, r3											
 3915 005a BFF36F8F 		isb														
 3916 005e BFF34F8F 		dsb														
 3917              	
 3918              	@ 0 "" 2
 3919              		.thumb
 3920              		.syntax unified
 3921              	.L292:
 3922              	.LBE181:
 3923              	.LBE180:
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3924              		.loc 1 3157 2 discriminator 3 view .LVU1066
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3925              		.loc 1 3157 2 discriminator 3 view .LVU1067
 3926 0062 FEE7     		b	.L292
 3927              	.LVL261:
 3928              	.L293:
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3929              		.loc 1 3183 3 view .LVU1068
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 183


 3930 0064 2946     		mov	r1, r5
 3931 0066 0848     		ldr	r0, .L299+20
 3932 0068 FFF7FEFF 		bl	vListInsertEnd
 3933              	.LVL262:
 3934 006c E7E7     		b	.L294
 3935              	.L296:
3199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3936              		.loc 1 3199 11 is_stmt 0 view .LVU1069
 3937 006e 0020     		movs	r0, #0
 3938              	.LVL263:
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3939              		.loc 1 3202 2 is_stmt 1 view .LVU1070
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3940              		.loc 1 3202 9 is_stmt 0 view .LVU1071
 3941 0070 EEE7     		b	.L290
 3942              	.L300:
 3943 0072 00BF     		.align	2
 3944              	.L299:
 3945 0074 00000000 		.word	uxSchedulerSuspended
 3946 0078 00000000 		.word	uxTopReadyPriority
 3947 007c 00000000 		.word	pxReadyTasksLists
 3948 0080 00000000 		.word	pxCurrentTCB
 3949 0084 00000000 		.word	xYieldPending
 3950 0088 00000000 		.word	xPendingReadyList
 3951              		.cfi_endproc
 3952              	.LFE31:
 3954              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 3955              		.align	1
 3956              		.global	vTaskRemoveFromUnorderedEventList
 3957              		.syntax unified
 3958              		.thumb
 3959              		.thumb_func
 3961              	vTaskRemoveFromUnorderedEventList:
 3962              	.LVL264:
 3963              	.LFB32:
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3964              		.loc 1 3207 1 is_stmt 1 view -0
 3965              		.cfi_startproc
 3966              		@ args = 0, pretend = 0, frame = 0
 3967              		@ frame_needed = 0, uses_anonymous_args = 0
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3968              		.loc 1 3207 1 is_stmt 0 view .LVU1073
 3969 0000 38B5     		push	{r3, r4, r5, lr}
 3970              	.LCFI36:
 3971              		.cfi_def_cfa_offset 16
 3972              		.cfi_offset 3, -16
 3973              		.cfi_offset 4, -12
 3974              		.cfi_offset 5, -8
 3975              		.cfi_offset 14, -4
3208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3976              		.loc 1 3208 1 is_stmt 1 view .LVU1074
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3977              		.loc 1 3212 2 view .LVU1075
 3978 0002 1C4B     		ldr	r3, .L309
 3979 0004 1B68     		ldr	r3, [r3]
 3980 0006 43B9     		cbnz	r3, .L302
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 184


 3981              		.loc 1 3212 2 discriminator 1 view .LVU1076
 3982              	.LBB182:
 3983              	.LBI182:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 3984              		.loc 2 191 30 view .LVU1077
 3985              	.LBB183:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 3986              		.loc 2 193 1 view .LVU1078
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3987              		.loc 2 195 2 view .LVU1079
 3988              		.syntax unified
 3989              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 3990 0008 4FF05003 			mov r3, #80												
 3991 000c 83F31188 		msr basepri, r3											
 3992 0010 BFF36F8F 		isb														
 3993 0014 BFF34F8F 		dsb														
 3994              	
 3995              	@ 0 "" 2
 3996              		.thumb
 3997              		.syntax unified
 3998              	.L303:
 3999              	.LBE183:
 4000              	.LBE182:
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4001              		.loc 1 3212 2 discriminator 3 view .LVU1080
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4002              		.loc 1 3212 2 discriminator 3 view .LVU1081
 4003 0018 FEE7     		b	.L303
 4004              	.L302:
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4005              		.loc 1 3212 49 discriminator 2 view .LVU1082
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4006              		.loc 1 3215 2 view .LVU1083
 4007 001a 41F00041 		orr	r1, r1, #-2147483648
 4008              	.LVL265:
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4009              		.loc 1 3215 2 is_stmt 0 view .LVU1084
 4010 001e 0160     		str	r1, [r0]
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 4011              		.loc 1 3219 2 is_stmt 1 view .LVU1085
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 4012              		.loc 1 3219 17 is_stmt 0 view .LVU1086
 4013 0020 C468     		ldr	r4, [r0, #12]
 4014              	.LVL266:
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4015              		.loc 1 3220 2 is_stmt 1 view .LVU1087
 4016 0022 F4B1     		cbz	r4, .L308
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4017              		.loc 1 3220 32 discriminator 2 view .LVU1088
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4018              		.loc 1 3221 2 view .LVU1089
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4019              		.loc 1 3221 11 is_stmt 0 view .LVU1090
 4020 0024 FFF7FEFF 		bl	uxListRemove
 4021              	.LVL267:
3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 4022              		.loc 1 3240 2 is_stmt 1 view .LVU1091
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 185


3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 4023              		.loc 1 3240 11 is_stmt 0 view .LVU1092
 4024 0028 251D     		adds	r5, r4, #4
 4025 002a 2846     		mov	r0, r5
 4026 002c FFF7FEFF 		bl	uxListRemove
 4027              	.LVL268:
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4028              		.loc 1 3241 2 is_stmt 1 view .LVU1093
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4029              		.loc 1 3241 2 view .LVU1094
 4030 0030 E06A     		ldr	r0, [r4, #44]
 4031 0032 0123     		movs	r3, #1
 4032 0034 8340     		lsls	r3, r3, r0
 4033 0036 104A     		ldr	r2, .L309+4
 4034 0038 1168     		ldr	r1, [r2]
 4035 003a 0B43     		orrs	r3, r3, r1
 4036 003c 1360     		str	r3, [r2]
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4037              		.loc 1 3241 2 view .LVU1095
 4038 003e 00EB8000 		add	r0, r0, r0, lsl #2
 4039 0042 2946     		mov	r1, r5
 4040 0044 0D4B     		ldr	r3, .L309+8
 4041 0046 03EB8000 		add	r0, r3, r0, lsl #2
 4042 004a FFF7FEFF 		bl	vListInsertEnd
 4043              	.LVL269:
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4044              		.loc 1 3241 41 discriminator 1 view .LVU1096
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4045              		.loc 1 3243 2 view .LVU1097
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4046              		.loc 1 3243 20 is_stmt 0 view .LVU1098
 4047 004e E26A     		ldr	r2, [r4, #44]
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4048              		.loc 1 3243 47 view .LVU1099
 4049 0050 0B4B     		ldr	r3, .L309+12
 4050 0052 1B68     		ldr	r3, [r3]
 4051 0054 DB6A     		ldr	r3, [r3, #44]
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4052              		.loc 1 3243 4 view .LVU1100
 4053 0056 9A42     		cmp	r2, r3
 4054 0058 02D9     		bls	.L301
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4055              		.loc 1 3249 3 is_stmt 1 view .LVU1101
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4056              		.loc 1 3249 17 is_stmt 0 view .LVU1102
 4057 005a 0A4B     		ldr	r3, .L309+16
 4058 005c 0122     		movs	r2, #1
 4059 005e 1A60     		str	r2, [r3]
 4060              	.L301:
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4061              		.loc 1 3251 1 view .LVU1103
 4062 0060 38BD     		pop	{r3, r4, r5, pc}
 4063              	.LVL270:
 4064              	.L308:
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4065              		.loc 1 3220 2 is_stmt 1 discriminator 1 view .LVU1104
 4066              	.LBB184:
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 186


 4067              	.LBI184:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4068              		.loc 2 191 30 view .LVU1105
 4069              	.LBB185:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4070              		.loc 2 193 1 view .LVU1106
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4071              		.loc 2 195 2 view .LVU1107
 4072              		.syntax unified
 4073              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4074 0062 4FF05003 			mov r3, #80												
 4075 0066 83F31188 		msr basepri, r3											
 4076 006a BFF36F8F 		isb														
 4077 006e BFF34F8F 		dsb														
 4078              	
 4079              	@ 0 "" 2
 4080              		.thumb
 4081              		.syntax unified
 4082              	.L305:
 4083              	.LBE185:
 4084              	.LBE184:
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4085              		.loc 1 3220 2 discriminator 3 view .LVU1108
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 4086              		.loc 1 3220 2 discriminator 3 view .LVU1109
 4087 0072 FEE7     		b	.L305
 4088              	.L310:
 4089              		.align	2
 4090              	.L309:
 4091 0074 00000000 		.word	uxSchedulerSuspended
 4092 0078 00000000 		.word	uxTopReadyPriority
 4093 007c 00000000 		.word	pxReadyTasksLists
 4094 0080 00000000 		.word	pxCurrentTCB
 4095 0084 00000000 		.word	xYieldPending
 4096              		.cfi_endproc
 4097              	.LFE32:
 4099              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 4100              		.align	1
 4101              		.global	vTaskSetTimeOutState
 4102              		.syntax unified
 4103              		.thumb
 4104              		.thumb_func
 4106              	vTaskSetTimeOutState:
 4107              	.LVL271:
 4108              	.LFB33:
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 4109              		.loc 1 3255 1 view -0
 4110              		.cfi_startproc
 4111              		@ args = 0, pretend = 0, frame = 0
 4112              		@ frame_needed = 0, uses_anonymous_args = 0
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4113              		.loc 1 3256 2 view .LVU1111
 4114 0000 60B1     		cbz	r0, .L316
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 4115              		.loc 1 3255 1 is_stmt 0 view .LVU1112
 4116 0002 10B5     		push	{r4, lr}
 4117              	.LCFI37:
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 187


 4118              		.cfi_def_cfa_offset 8
 4119              		.cfi_offset 4, -8
 4120              		.cfi_offset 14, -4
 4121 0004 0446     		mov	r4, r0
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4122              		.loc 1 3256 27 is_stmt 1 discriminator 2 view .LVU1113
3257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4123              		.loc 1 3257 2 view .LVU1114
 4124 0006 FFF7FEFF 		bl	vPortEnterCritical
 4125              	.LVL272:
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 4126              		.loc 1 3259 3 view .LVU1115
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 4127              		.loc 1 3259 29 is_stmt 0 view .LVU1116
 4128 000a 094B     		ldr	r3, .L317
 4129 000c 1B68     		ldr	r3, [r3]
 4130 000e 2360     		str	r3, [r4]
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4131              		.loc 1 3260 3 is_stmt 1 view .LVU1117
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4132              		.loc 1 3260 30 is_stmt 0 view .LVU1118
 4133 0010 084B     		ldr	r3, .L317+4
 4134 0012 1B68     		ldr	r3, [r3]
 4135 0014 6360     		str	r3, [r4, #4]
3262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4136              		.loc 1 3262 2 is_stmt 1 view .LVU1119
 4137 0016 FFF7FEFF 		bl	vPortExitCritical
 4138              	.LVL273:
3263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4139              		.loc 1 3263 1 is_stmt 0 view .LVU1120
 4140 001a 10BD     		pop	{r4, pc}
 4141              	.LVL274:
 4142              	.L316:
 4143              	.LCFI38:
 4144              		.cfi_def_cfa_offset 0
 4145              		.cfi_restore 4
 4146              		.cfi_restore 14
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4147              		.loc 1 3256 2 is_stmt 1 discriminator 1 view .LVU1121
 4148              	.LBB186:
 4149              	.LBI186:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4150              		.loc 2 191 30 view .LVU1122
 4151              	.LBB187:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4152              		.loc 2 193 1 view .LVU1123
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4153              		.loc 2 195 2 view .LVU1124
 4154              		.syntax unified
 4155              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4156 001c 4FF05003 			mov r3, #80												
 4157 0020 83F31188 		msr basepri, r3											
 4158 0024 BFF36F8F 		isb														
 4159 0028 BFF34F8F 		dsb														
 4160              	
 4161              	@ 0 "" 2
 4162              		.thumb
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 188


 4163              		.syntax unified
 4164              	.L313:
 4165              	.LBE187:
 4166              	.LBE186:
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4167              		.loc 1 3256 2 discriminator 3 view .LVU1125
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4168              		.loc 1 3256 2 discriminator 3 view .LVU1126
 4169 002c FEE7     		b	.L313
 4170              	.L318:
 4171 002e 00BF     		.align	2
 4172              	.L317:
 4173 0030 00000000 		.word	xNumOfOverflows
 4174 0034 00000000 		.word	xTickCount
 4175              		.cfi_endproc
 4176              	.LFE33:
 4178              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 4179              		.align	1
 4180              		.global	vTaskInternalSetTimeOutState
 4181              		.syntax unified
 4182              		.thumb
 4183              		.thumb_func
 4185              	vTaskInternalSetTimeOutState:
 4186              	.LVL275:
 4187              	.LFB34:
3267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
 4188              		.loc 1 3267 1 view -0
 4189              		.cfi_startproc
 4190              		@ args = 0, pretend = 0, frame = 0
 4191              		@ frame_needed = 0, uses_anonymous_args = 0
 4192              		@ link register save eliminated.
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 4193              		.loc 1 3269 2 view .LVU1128
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 4194              		.loc 1 3269 28 is_stmt 0 view .LVU1129
 4195 0000 034B     		ldr	r3, .L320
 4196 0002 1B68     		ldr	r3, [r3]
 4197 0004 0360     		str	r3, [r0]
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4198              		.loc 1 3270 2 is_stmt 1 view .LVU1130
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4199              		.loc 1 3270 29 is_stmt 0 view .LVU1131
 4200 0006 034B     		ldr	r3, .L320+4
 4201 0008 1B68     		ldr	r3, [r3]
 4202 000a 4360     		str	r3, [r0, #4]
3271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4203              		.loc 1 3271 1 view .LVU1132
 4204 000c 7047     		bx	lr
 4205              	.L321:
 4206 000e 00BF     		.align	2
 4207              	.L320:
 4208 0010 00000000 		.word	xNumOfOverflows
 4209 0014 00000000 		.word	xTickCount
 4210              		.cfi_endproc
 4211              	.LFE34:
 4213              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 4214              		.align	1
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 189


 4215              		.global	xTaskCheckForTimeOut
 4216              		.syntax unified
 4217              		.thumb
 4218              		.thumb_func
 4220              	xTaskCheckForTimeOut:
 4221              	.LVL276:
 4222              	.LFB35:
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 4223              		.loc 1 3275 1 is_stmt 1 view -0
 4224              		.cfi_startproc
 4225              		@ args = 0, pretend = 0, frame = 0
 4226              		@ frame_needed = 0, uses_anonymous_args = 0
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 4227              		.loc 1 3275 1 is_stmt 0 view .LVU1134
 4228 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4229              	.LCFI39:
 4230              		.cfi_def_cfa_offset 24
 4231              		.cfi_offset 3, -24
 4232              		.cfi_offset 4, -20
 4233              		.cfi_offset 5, -16
 4234              		.cfi_offset 6, -12
 4235              		.cfi_offset 7, -8
 4236              		.cfi_offset 14, -4
3276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4237              		.loc 1 3276 1 is_stmt 1 view .LVU1135
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4238              		.loc 1 3278 2 view .LVU1136
 4239 0002 C8B1     		cbz	r0, .L333
 4240 0004 0C46     		mov	r4, r1
 4241 0006 0546     		mov	r5, r0
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4242              		.loc 1 3278 27 discriminator 2 view .LVU1137
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4243              		.loc 1 3279 2 view .LVU1138
 4244 0008 F9B1     		cbz	r1, .L334
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4245              		.loc 1 3279 31 discriminator 2 view .LVU1139
3281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 4246              		.loc 1 3281 2 view .LVU1140
 4247 000a FFF7FEFF 		bl	vPortEnterCritical
 4248              	.LVL277:
 4249              	.LBB188:
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 4250              		.loc 1 3284 3 view .LVU1141
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 4251              		.loc 1 3284 20 is_stmt 0 view .LVU1142
 4252 000e 1B4B     		ldr	r3, .L336
 4253 0010 1968     		ldr	r1, [r3]
 4254              	.LVL278:
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4255              		.loc 1 3285 3 is_stmt 1 view .LVU1143
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4256              		.loc 1 3285 62 is_stmt 0 view .LVU1144
 4257 0012 6B68     		ldr	r3, [r5, #4]
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4258              		.loc 1 3285 20 view .LVU1145
 4259 0014 C81A     		subs	r0, r1, r3
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 190


 4260              	.LVL279:
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4261              		.loc 1 3299 4 is_stmt 1 view .LVU1146
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4262              		.loc 1 3299 8 is_stmt 0 view .LVU1147
 4263 0016 2268     		ldr	r2, [r4]
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4264              		.loc 1 3299 6 view .LVU1148
 4265 0018 B2F1FF3F 		cmp	r2, #-1
 4266 001c 26D0     		beq	.L330
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4267              		.loc 1 3309 3 is_stmt 1 view .LVU1149
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4268              		.loc 1 3309 25 is_stmt 0 view .LVU1150
 4269 001e 184E     		ldr	r6, .L336+4
 4270 0020 3668     		ldr	r6, [r6]
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4271              		.loc 1 3309 5 view .LVU1151
 4272 0022 2F68     		ldr	r7, [r5]
 4273 0024 B742     		cmp	r7, r6
 4274 0026 01D0     		beq	.L328
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4275              		.loc 1 3309 56 discriminator 1 view .LVU1152
 4276 0028 8B42     		cmp	r3, r1
 4277 002a 24D9     		bls	.L331
 4278              	.L328:
3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4279              		.loc 1 3318 8 is_stmt 1 view .LVU1153
3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4280              		.loc 1 3318 10 is_stmt 0 view .LVU1154
 4281 002c 8242     		cmp	r2, r0
 4282 002e 15D8     		bhi	.L335
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 4283              		.loc 1 3327 4 is_stmt 1 view .LVU1155
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 4284              		.loc 1 3327 19 is_stmt 0 view .LVU1156
 4285 0030 0023     		movs	r3, #0
 4286 0032 2360     		str	r3, [r4]
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4287              		.loc 1 3328 4 is_stmt 1 view .LVU1157
 4288              	.LVL280:
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4289              		.loc 1 3328 12 is_stmt 0 view .LVU1158
 4290 0034 0124     		movs	r4, #1
 4291              	.LVL281:
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4292              		.loc 1 3328 12 view .LVU1159
 4293 0036 1AE0     		b	.L327
 4294              	.LVL282:
 4295              	.L333:
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4296              		.loc 1 3328 12 view .LVU1160
 4297              	.LBE188:
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4298              		.loc 1 3278 2 is_stmt 1 discriminator 1 view .LVU1161
 4299              	.LBB189:
 4300              	.LBI189:
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 191


 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4301              		.loc 2 191 30 view .LVU1162
 4302              	.LBB190:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4303              		.loc 2 193 1 view .LVU1163
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4304              		.loc 2 195 2 view .LVU1164
 4305              		.syntax unified
 4306              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4307 0038 4FF05003 			mov r3, #80												
 4308 003c 83F31188 		msr basepri, r3											
 4309 0040 BFF36F8F 		isb														
 4310 0044 BFF34F8F 		dsb														
 4311              	
 4312              	@ 0 "" 2
 4313              		.thumb
 4314              		.syntax unified
 4315              	.L324:
 4316              	.LBE190:
 4317              	.LBE189:
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4318              		.loc 1 3278 2 discriminator 3 view .LVU1165
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4319              		.loc 1 3278 2 discriminator 3 view .LVU1166
 4320 0048 FEE7     		b	.L324
 4321              	.L334:
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4322              		.loc 1 3279 2 discriminator 1 view .LVU1167
 4323              	.LBB191:
 4324              	.LBI191:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4325              		.loc 2 191 30 view .LVU1168
 4326              	.LBB192:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4327              		.loc 2 193 1 view .LVU1169
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4328              		.loc 2 195 2 view .LVU1170
 4329              		.syntax unified
 4330              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4331 004a 4FF05003 			mov r3, #80												
 4332 004e 83F31188 		msr basepri, r3											
 4333 0052 BFF36F8F 		isb														
 4334 0056 BFF34F8F 		dsb														
 4335              	
 4336              	@ 0 "" 2
 4337              		.thumb
 4338              		.syntax unified
 4339              	.L326:
 4340              	.LBE192:
 4341              	.LBE191:
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4342              		.loc 1 3279 2 discriminator 3 view .LVU1171
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4343              		.loc 1 3279 2 discriminator 3 view .LVU1172
 4344 005a FEE7     		b	.L326
 4345              	.LVL283:
 4346              	.L335:
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 192


 4347              	.LBB193:
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 4348              		.loc 1 3321 4 view .LVU1173
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 4349              		.loc 1 3321 19 is_stmt 0 view .LVU1174
 4350 005c 5B1A     		subs	r3, r3, r1
 4351 005e 1344     		add	r3, r3, r2
 4352 0060 2360     		str	r3, [r4]
3322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 4353              		.loc 1 3322 4 is_stmt 1 view .LVU1175
 4354 0062 2846     		mov	r0, r5
 4355              	.LVL284:
3322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 4356              		.loc 1 3322 4 is_stmt 0 view .LVU1176
 4357 0064 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 4358              	.LVL285:
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4359              		.loc 1 3323 4 is_stmt 1 view .LVU1177
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4360              		.loc 1 3323 12 is_stmt 0 view .LVU1178
 4361 0068 0024     		movs	r4, #0
 4362              	.LVL286:
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4363              		.loc 1 3323 12 view .LVU1179
 4364 006a 00E0     		b	.L327
 4365              	.LVL287:
 4366              	.L330:
3304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4367              		.loc 1 3304 13 view .LVU1180
 4368 006c 0024     		movs	r4, #0
 4369              	.LVL288:
 4370              	.L327:
3304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4371              		.loc 1 3304 13 view .LVU1181
 4372              	.LBE193:
3331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4373              		.loc 1 3331 2 is_stmt 1 view .LVU1182
 4374 006e FFF7FEFF 		bl	vPortExitCritical
 4375              	.LVL289:
3333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4376              		.loc 1 3333 2 view .LVU1183
3334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4377              		.loc 1 3334 1 is_stmt 0 view .LVU1184
 4378 0072 2046     		mov	r0, r4
 4379 0074 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4380              	.LVL290:
 4381              	.L331:
 4382              	.LBB194:
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4383              		.loc 1 3316 12 view .LVU1185
 4384 0076 0124     		movs	r4, #1
 4385              	.LVL291:
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4386              		.loc 1 3316 12 view .LVU1186
 4387 0078 F9E7     		b	.L327
 4388              	.L337:
 4389 007a 00BF     		.align	2
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 193


 4390              	.L336:
 4391 007c 00000000 		.word	xTickCount
 4392 0080 00000000 		.word	xNumOfOverflows
 4393              	.LBE194:
 4394              		.cfi_endproc
 4395              	.LFE35:
 4397              		.section	.text.vTaskMissedYield,"ax",%progbits
 4398              		.align	1
 4399              		.global	vTaskMissedYield
 4400              		.syntax unified
 4401              		.thumb
 4402              		.thumb_func
 4404              	vTaskMissedYield:
 4405              	.LFB36:
3338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
 4406              		.loc 1 3338 1 is_stmt 1 view -0
 4407              		.cfi_startproc
 4408              		@ args = 0, pretend = 0, frame = 0
 4409              		@ frame_needed = 0, uses_anonymous_args = 0
 4410              		@ link register save eliminated.
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4411              		.loc 1 3339 2 view .LVU1188
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4412              		.loc 1 3339 16 is_stmt 0 view .LVU1189
 4413 0000 014B     		ldr	r3, .L339
 4414 0002 0122     		movs	r2, #1
 4415 0004 1A60     		str	r2, [r3]
3340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4416              		.loc 1 3340 1 view .LVU1190
 4417 0006 7047     		bx	lr
 4418              	.L340:
 4419              		.align	2
 4420              	.L339:
 4421 0008 00000000 		.word	xYieldPending
 4422              		.cfi_endproc
 4423              	.LFE36:
 4425              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 4426              		.align	1
 4427              		.global	xTaskGetCurrentTaskHandle
 4428              		.syntax unified
 4429              		.thumb
 4430              		.thumb_func
 4432              	xTaskGetCurrentTaskHandle:
 4433              	.LFB42:
3970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 4434              		.loc 1 3970 2 is_stmt 1 view -0
 4435              		.cfi_startproc
 4436              		@ args = 0, pretend = 0, frame = 0
 4437              		@ frame_needed = 0, uses_anonymous_args = 0
 4438              		@ link register save eliminated.
3971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4439              		.loc 1 3971 2 view .LVU1192
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4440              		.loc 1 3976 3 view .LVU1193
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4441              		.loc 1 3976 11 is_stmt 0 view .LVU1194
 4442 0000 014B     		ldr	r3, .L342
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 194


 4443 0002 1868     		ldr	r0, [r3]
 4444              	.LVL292:
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4445              		.loc 1 3978 3 is_stmt 1 view .LVU1195
3979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4446              		.loc 1 3979 2 is_stmt 0 view .LVU1196
 4447 0004 7047     		bx	lr
 4448              	.L343:
 4449 0006 00BF     		.align	2
 4450              	.L342:
 4451 0008 00000000 		.word	pxCurrentTCB
 4452              		.cfi_endproc
 4453              	.LFE42:
 4455              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 4456              		.align	1
 4457              		.global	xTaskGetSchedulerState
 4458              		.syntax unified
 4459              		.thumb
 4460              		.thumb_func
 4462              	xTaskGetSchedulerState:
 4463              	.LFB43:
3987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 4464              		.loc 1 3987 2 is_stmt 1 view -0
 4465              		.cfi_startproc
 4466              		@ args = 0, pretend = 0, frame = 0
 4467              		@ frame_needed = 0, uses_anonymous_args = 0
 4468              		@ link register save eliminated.
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4469              		.loc 1 3988 2 view .LVU1198
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4470              		.loc 1 3990 3 view .LVU1199
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4471              		.loc 1 3990 25 is_stmt 0 view .LVU1200
 4472 0000 054B     		ldr	r3, .L349
 4473 0002 1B68     		ldr	r3, [r3]
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4474              		.loc 1 3990 5 view .LVU1201
 4475 0004 33B1     		cbz	r3, .L346
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4476              		.loc 1 3996 4 is_stmt 1 view .LVU1202
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4477              		.loc 1 3996 29 is_stmt 0 view .LVU1203
 4478 0006 054B     		ldr	r3, .L349+4
 4479 0008 1B68     		ldr	r3, [r3]
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4480              		.loc 1 3996 6 view .LVU1204
 4481 000a 0BB1     		cbz	r3, .L348
4002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4482              		.loc 1 4002 13 view .LVU1205
 4483 000c 0020     		movs	r0, #0
 4484              	.LVL293:
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4485              		.loc 1 4006 3 is_stmt 1 view .LVU1206
4007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4486              		.loc 1 4007 2 is_stmt 0 view .LVU1207
 4487 000e 7047     		bx	lr
 4488              	.LVL294:
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 195


 4489              	.L348:
3998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4490              		.loc 1 3998 13 view .LVU1208
 4491 0010 0220     		movs	r0, #2
 4492 0012 7047     		bx	lr
 4493              	.L346:
3992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4494              		.loc 1 3992 12 view .LVU1209
 4495 0014 0120     		movs	r0, #1
 4496 0016 7047     		bx	lr
 4497              	.L350:
 4498              		.align	2
 4499              	.L349:
 4500 0018 00000000 		.word	xSchedulerRunning
 4501 001c 00000000 		.word	uxSchedulerSuspended
 4502              		.cfi_endproc
 4503              	.LFE43:
 4505              		.section	.text.xTaskPriorityInherit,"ax",%progbits
 4506              		.align	1
 4507              		.global	xTaskPriorityInherit
 4508              		.syntax unified
 4509              		.thumb
 4510              		.thumb_func
 4512              	xTaskPriorityInherit:
 4513              	.LVL295:
 4514              	.LFB44:
4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 4515              		.loc 1 4015 2 is_stmt 1 view -0
 4516              		.cfi_startproc
 4517              		@ args = 0, pretend = 0, frame = 0
 4518              		@ frame_needed = 0, uses_anonymous_args = 0
4016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 4519              		.loc 1 4016 2 view .LVU1211
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4520              		.loc 1 4017 2 view .LVU1212
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4521              		.loc 1 4022 3 view .LVU1213
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4522              		.loc 1 4022 5 is_stmt 0 view .LVU1214
 4523 0000 0028     		cmp	r0, #0
 4524 0002 48D0     		beq	.L357
4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 4525              		.loc 1 4015 2 view .LVU1215
 4526 0004 38B5     		push	{r3, r4, r5, lr}
 4527              	.LCFI40:
 4528              		.cfi_def_cfa_offset 16
 4529              		.cfi_offset 3, -16
 4530              		.cfi_offset 4, -12
 4531              		.cfi_offset 5, -8
 4532              		.cfi_offset 14, -4
 4533 0006 0446     		mov	r4, r0
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4534              		.loc 1 4027 4 is_stmt 1 view .LVU1216
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4535              		.loc 1 4027 24 is_stmt 0 view .LVU1217
 4536 0008 C36A     		ldr	r3, [r0, #44]
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 196


 4537              		.loc 1 4027 51 view .LVU1218
 4538 000a 254A     		ldr	r2, .L364
 4539 000c 1268     		ldr	r2, [r2]
 4540 000e D26A     		ldr	r2, [r2, #44]
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4541              		.loc 1 4027 6 view .LVU1219
 4542 0010 9342     		cmp	r3, r2
 4543 0012 38D2     		bcs	.L353
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4544              		.loc 1 4032 5 is_stmt 1 view .LVU1220
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4545              		.loc 1 4032 11 is_stmt 0 view .LVU1221
 4546 0014 8269     		ldr	r2, [r0, #24]
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4547              		.loc 1 4032 7 view .LVU1222
 4548 0016 002A     		cmp	r2, #0
 4549 0018 05DB     		blt	.L354
4034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4550              		.loc 1 4034 6 is_stmt 1 view .LVU1223
 4551 001a 214A     		ldr	r2, .L364
 4552 001c 1268     		ldr	r2, [r2]
 4553 001e D26A     		ldr	r2, [r2, #44]
 4554 0020 C2F10702 		rsb	r2, r2, #7
 4555 0024 8261     		str	r2, [r0, #24]
 4556              	.L354:
4038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4557              		.loc 1 4038 30 view .LVU1224
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4558              		.loc 1 4043 5 view .LVU1225
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4559              		.loc 1 4043 9 is_stmt 0 view .LVU1226
 4560 0026 6169     		ldr	r1, [r4, #20]
 4561 0028 03EB8303 		add	r3, r3, r3, lsl #2
 4562 002c 1D4A     		ldr	r2, .L364+4
 4563 002e 02EB8303 		add	r3, r2, r3, lsl #2
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4564              		.loc 1 4043 7 view .LVU1227
 4565 0032 9942     		cmp	r1, r3
 4566 0034 05D0     		beq	.L363
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4567              		.loc 1 4064 6 is_stmt 1 view .LVU1228
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4568              		.loc 1 4064 49 is_stmt 0 view .LVU1229
 4569 0036 1A4B     		ldr	r3, .L364
 4570 0038 1B68     		ldr	r3, [r3]
 4571 003a DB6A     		ldr	r3, [r3, #44]
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4572              		.loc 1 4064 35 view .LVU1230
 4573 003c E362     		str	r3, [r4, #44]
4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4574              		.loc 1 4070 13 view .LVU1231
 4575 003e 0120     		movs	r0, #1
 4576              	.LVL296:
 4577              	.L351:
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4578              		.loc 1 4097 2 view .LVU1232
 4579 0040 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 197


 4580              	.LVL297:
 4581              	.L363:
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4582              		.loc 1 4045 6 is_stmt 1 view .LVU1233
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4583              		.loc 1 4045 10 is_stmt 0 view .LVU1234
 4584 0042 251D     		adds	r5, r4, #4
 4585 0044 2846     		mov	r0, r5
 4586              	.LVL298:
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4587              		.loc 1 4045 10 view .LVU1235
 4588 0046 FFF7FEFF 		bl	uxListRemove
 4589              	.LVL299:
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4590              		.loc 1 4045 8 discriminator 1 view .LVU1236
 4591 004a 38B9     		cbnz	r0, .L356
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4592              		.loc 1 4050 7 is_stmt 1 view .LVU1237
 4593 004c E36A     		ldr	r3, [r4, #44]
 4594 004e 0122     		movs	r2, #1
 4595 0050 9A40     		lsls	r2, r2, r3
 4596 0052 1549     		ldr	r1, .L364+8
 4597 0054 0B68     		ldr	r3, [r1]
 4598 0056 23EA0203 		bic	r3, r3, r2
 4599 005a 0B60     		str	r3, [r1]
 4600              	.L356:
4054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4601              		.loc 1 4054 31 view .LVU1238
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4602              		.loc 1 4058 6 view .LVU1239
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4603              		.loc 1 4058 49 is_stmt 0 view .LVU1240
 4604 005c 104B     		ldr	r3, .L364
 4605 005e 1B68     		ldr	r3, [r3]
 4606 0060 D86A     		ldr	r0, [r3, #44]
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 4607              		.loc 1 4058 35 view .LVU1241
 4608 0062 E062     		str	r0, [r4, #44]
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4609              		.loc 1 4059 6 is_stmt 1 view .LVU1242
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4610              		.loc 1 4059 6 view .LVU1243
 4611 0064 0124     		movs	r4, #1
 4612              	.LVL300:
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4613              		.loc 1 4059 6 is_stmt 0 view .LVU1244
 4614 0066 04FA00F3 		lsl	r3, r4, r0
 4615 006a 0F4A     		ldr	r2, .L364+8
 4616 006c 1168     		ldr	r1, [r2]
 4617 006e 0B43     		orrs	r3, r3, r1
 4618 0070 1360     		str	r3, [r2]
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4619              		.loc 1 4059 6 is_stmt 1 view .LVU1245
 4620 0072 00EB8000 		add	r0, r0, r0, lsl #2
 4621 0076 2946     		mov	r1, r5
 4622 0078 0A4B     		ldr	r3, .L364+4
 4623 007a 03EB8000 		add	r0, r3, r0, lsl #2
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 198


 4624 007e FFF7FEFF 		bl	vListInsertEnd
 4625              	.LVL301:
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4626              		.loc 1 4059 47 discriminator 1 view .LVU1246
4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4627              		.loc 1 4070 13 is_stmt 0 view .LVU1247
 4628 0082 2046     		mov	r0, r4
 4629 0084 DCE7     		b	.L351
 4630              	.LVL302:
 4631              	.L353:
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4632              		.loc 1 4074 5 is_stmt 1 view .LVU1248
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4633              		.loc 1 4074 25 is_stmt 0 view .LVU1249
 4634 0086 426C     		ldr	r2, [r0, #68]
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4635              		.loc 1 4074 56 view .LVU1250
 4636 0088 054B     		ldr	r3, .L364
 4637 008a 1B68     		ldr	r3, [r3]
 4638 008c DB6A     		ldr	r3, [r3, #44]
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4639              		.loc 1 4074 7 view .LVU1251
 4640 008e 9A42     		cmp	r2, r3
 4641 0090 03D3     		bcc	.L358
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4642              		.loc 1 4017 13 view .LVU1252
 4643 0092 0020     		movs	r0, #0
 4644              	.LVL303:
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4645              		.loc 1 4017 13 view .LVU1253
 4646 0094 D4E7     		b	.L351
 4647              	.LVL304:
 4648              	.L357:
 4649              	.LCFI41:
 4650              		.cfi_def_cfa_offset 0
 4651              		.cfi_restore 3
 4652              		.cfi_restore 4
 4653              		.cfi_restore 5
 4654              		.cfi_restore 14
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4655              		.loc 1 4017 13 view .LVU1254
 4656 0096 0020     		movs	r0, #0
 4657              	.LVL305:
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4658              		.loc 1 4097 2 view .LVU1255
 4659 0098 7047     		bx	lr
 4660              	.LVL306:
 4661              	.L358:
 4662              	.LCFI42:
 4663              		.cfi_def_cfa_offset 16
 4664              		.cfi_offset 3, -16
 4665              		.cfi_offset 4, -12
 4666              		.cfi_offset 5, -8
 4667              		.cfi_offset 14, -4
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4668              		.loc 1 4083 14 view .LVU1256
 4669 009a 0120     		movs	r0, #1
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 199


 4670              	.LVL307:
4093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4671              		.loc 1 4093 28 is_stmt 1 view .LVU1257
4096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4672              		.loc 1 4096 3 view .LVU1258
4096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4673              		.loc 1 4096 10 is_stmt 0 view .LVU1259
 4674 009c D0E7     		b	.L351
 4675              	.L365:
 4676 009e 00BF     		.align	2
 4677              	.L364:
 4678 00a0 00000000 		.word	pxCurrentTCB
 4679 00a4 00000000 		.word	pxReadyTasksLists
 4680 00a8 00000000 		.word	uxTopReadyPriority
 4681              		.cfi_endproc
 4682              	.LFE44:
 4684              		.section	.text.xTaskPriorityDisinherit,"ax",%progbits
 4685              		.align	1
 4686              		.global	xTaskPriorityDisinherit
 4687              		.syntax unified
 4688              		.thumb
 4689              		.thumb_func
 4691              	xTaskPriorityDisinherit:
 4692              	.LVL308:
 4693              	.LFB45:
4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 4694              		.loc 1 4105 2 is_stmt 1 view -0
 4695              		.cfi_startproc
 4696              		@ args = 0, pretend = 0, frame = 0
 4697              		@ frame_needed = 0, uses_anonymous_args = 0
4106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 4698              		.loc 1 4106 2 view .LVU1261
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4699              		.loc 1 4107 2 view .LVU1262
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4700              		.loc 1 4109 3 view .LVU1263
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4701              		.loc 1 4109 5 is_stmt 0 view .LVU1264
 4702 0000 0028     		cmp	r0, #0
 4703 0002 4BD0     		beq	.L373
4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 4704              		.loc 1 4105 2 view .LVU1265
 4705 0004 38B5     		push	{r3, r4, r5, lr}
 4706              	.LCFI43:
 4707              		.cfi_def_cfa_offset 16
 4708              		.cfi_offset 3, -16
 4709              		.cfi_offset 4, -12
 4710              		.cfi_offset 5, -8
 4711              		.cfi_offset 14, -4
 4712 0006 0446     		mov	r4, r0
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4713              		.loc 1 4115 4 is_stmt 1 view .LVU1266
 4714 0008 264B     		ldr	r3, .L381
 4715 000a 1B68     		ldr	r3, [r3]
 4716 000c 8342     		cmp	r3, r0
 4717 000e 08D0     		beq	.L368
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 200


 4718              		.loc 1 4115 4 discriminator 1 view .LVU1267
 4719              	.LBB195:
 4720              	.LBI195:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4721              		.loc 2 191 30 view .LVU1268
 4722              	.LBB196:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4723              		.loc 2 193 1 view .LVU1269
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4724              		.loc 2 195 2 view .LVU1270
 4725              		.syntax unified
 4726              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4727 0010 4FF05003 			mov r3, #80												
 4728 0014 83F31188 		msr basepri, r3											
 4729 0018 BFF36F8F 		isb														
 4730 001c BFF34F8F 		dsb														
 4731              	
 4732              	@ 0 "" 2
 4733              		.thumb
 4734              		.syntax unified
 4735              	.L369:
 4736              	.LBE196:
 4737              	.LBE195:
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4738              		.loc 1 4115 4 discriminator 3 view .LVU1271
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4739              		.loc 1 4115 4 discriminator 3 view .LVU1272
 4740 0020 FEE7     		b	.L369
 4741              	.L368:
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 4742              		.loc 1 4115 41 discriminator 2 view .LVU1273
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4743              		.loc 1 4116 4 view .LVU1274
 4744 0022 836C     		ldr	r3, [r0, #72]
 4745 0024 43B9     		cbnz	r3, .L370
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4746              		.loc 1 4116 4 discriminator 1 view .LVU1275
 4747              	.LBB197:
 4748              	.LBI197:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4749              		.loc 2 191 30 view .LVU1276
 4750              	.LBB198:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4751              		.loc 2 193 1 view .LVU1277
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4752              		.loc 2 195 2 view .LVU1278
 4753              		.syntax unified
 4754              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4755 0026 4FF05003 			mov r3, #80												
 4756 002a 83F31188 		msr basepri, r3											
 4757 002e BFF36F8F 		isb														
 4758 0032 BFF34F8F 		dsb														
 4759              	
 4760              	@ 0 "" 2
 4761              		.thumb
 4762              		.syntax unified
 4763              	.L371:
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 201


 4764              	.LBE198:
 4765              	.LBE197:
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4766              		.loc 1 4116 4 discriminator 3 view .LVU1279
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4767              		.loc 1 4116 4 discriminator 3 view .LVU1280
 4768 0036 FEE7     		b	.L371
 4769              	.L370:
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 4770              		.loc 1 4116 40 discriminator 2 view .LVU1281
4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4771              		.loc 1 4117 4 view .LVU1282
4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4772              		.loc 1 4117 28 is_stmt 0 view .LVU1283
 4773 0038 013B     		subs	r3, r3, #1
 4774 003a 8364     		str	r3, [r0, #72]
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4775              		.loc 1 4121 4 is_stmt 1 view .LVU1284
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4776              		.loc 1 4121 13 is_stmt 0 view .LVU1285
 4777 003c C16A     		ldr	r1, [r0, #44]
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4778              		.loc 1 4121 34 view .LVU1286
 4779 003e 426C     		ldr	r2, [r0, #68]
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4780              		.loc 1 4121 6 view .LVU1287
 4781 0040 9142     		cmp	r1, r2
 4782 0042 2DD0     		beq	.L374
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4783              		.loc 1 4124 5 is_stmt 1 view .LVU1288
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4784              		.loc 1 4124 7 is_stmt 0 view .LVU1289
 4785 0044 0BB1     		cbz	r3, .L380
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4786              		.loc 1 4107 13 view .LVU1290
 4787 0046 0020     		movs	r0, #0
 4788              	.LVL309:
4173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4789              		.loc 1 4173 28 is_stmt 1 view .LVU1291
4176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4790              		.loc 1 4176 3 view .LVU1292
 4791              	.L366:
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4792              		.loc 1 4177 2 is_stmt 0 view .LVU1293
 4793 0048 38BD     		pop	{r3, r4, r5, pc}
 4794              	.LVL310:
 4795              	.L380:
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4796              		.loc 1 4131 6 is_stmt 1 view .LVU1294
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4797              		.loc 1 4131 10 is_stmt 0 view .LVU1295
 4798 004a 051D     		adds	r5, r0, #4
 4799 004c 2846     		mov	r0, r5
 4800              	.LVL311:
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4801              		.loc 1 4131 10 view .LVU1296
 4802 004e FFF7FEFF 		bl	uxListRemove
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 202


 4803              	.LVL312:
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4804              		.loc 1 4131 8 discriminator 1 view .LVU1297
 4805 0052 68B9     		cbnz	r0, .L372
4133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4806              		.loc 1 4133 7 is_stmt 1 view .LVU1298
 4807 0054 E36A     		ldr	r3, [r4, #44]
 4808 0056 03EB8302 		add	r2, r3, r3, lsl #2
 4809 005a 9200     		lsls	r2, r2, #2
 4810 005c 1249     		ldr	r1, .L381+4
 4811 005e 8A58     		ldr	r2, [r1, r2]
 4812 0060 32B9     		cbnz	r2, .L372
4133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4813              		.loc 1 4133 7 discriminator 1 view .LVU1299
 4814 0062 0122     		movs	r2, #1
 4815 0064 9A40     		lsls	r2, r2, r3
 4816 0066 1149     		ldr	r1, .L381+8
 4817 0068 0B68     		ldr	r3, [r1]
 4818 006a 23EA0203 		bic	r3, r3, r2
 4819 006e 0B60     		str	r3, [r1]
 4820              	.L372:
4137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4821              		.loc 1 4137 31 view .LVU1300
4142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
 4822              		.loc 1 4142 67 view .LVU1301
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4823              		.loc 1 4143 6 view .LVU1302
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4824              		.loc 1 4143 31 is_stmt 0 view .LVU1303
 4825 0070 606C     		ldr	r0, [r4, #68]
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4826              		.loc 1 4143 24 view .LVU1304
 4827 0072 E062     		str	r0, [r4, #44]
4148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4828              		.loc 1 4148 6 is_stmt 1 view .LVU1305
 4829 0074 C0F10703 		rsb	r3, r0, #7
 4830 0078 A361     		str	r3, [r4, #24]
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4831              		.loc 1 4149 6 view .LVU1306
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4832              		.loc 1 4149 6 view .LVU1307
 4833 007a 0124     		movs	r4, #1
 4834              	.LVL313:
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4835              		.loc 1 4149 6 is_stmt 0 view .LVU1308
 4836 007c 04FA00F3 		lsl	r3, r4, r0
 4837 0080 0A4A     		ldr	r2, .L381+8
 4838 0082 1168     		ldr	r1, [r2]
 4839 0084 0B43     		orrs	r3, r3, r1
 4840 0086 1360     		str	r3, [r2]
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4841              		.loc 1 4149 6 is_stmt 1 view .LVU1309
 4842 0088 00EB8000 		add	r0, r0, r0, lsl #2
 4843 008c 2946     		mov	r1, r5
 4844 008e 064B     		ldr	r3, .L381+4
 4845 0090 03EB8000 		add	r0, r3, r0, lsl #2
 4846 0094 FFF7FEFF 		bl	vListInsertEnd
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 203


 4847              	.LVL314:
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4848              		.loc 1 4149 36 discriminator 1 view .LVU1310
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4849              		.loc 1 4159 6 view .LVU1311
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4850              		.loc 1 4159 14 is_stmt 0 view .LVU1312
 4851 0098 2046     		mov	r0, r4
 4852 009a D5E7     		b	.L366
 4853              	.LVL315:
 4854              	.L373:
 4855              	.LCFI44:
 4856              		.cfi_def_cfa_offset 0
 4857              		.cfi_restore 3
 4858              		.cfi_restore 4
 4859              		.cfi_restore 5
 4860              		.cfi_restore 14
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4861              		.loc 1 4107 13 view .LVU1313
 4862 009c 0020     		movs	r0, #0
 4863              	.LVL316:
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4864              		.loc 1 4177 2 view .LVU1314
 4865 009e 7047     		bx	lr
 4866              	.LVL317:
 4867              	.L374:
 4868              	.LCFI45:
 4869              		.cfi_def_cfa_offset 16
 4870              		.cfi_offset 3, -16
 4871              		.cfi_offset 4, -12
 4872              		.cfi_offset 5, -8
 4873              		.cfi_offset 14, -4
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4874              		.loc 1 4107 13 view .LVU1315
 4875 00a0 0020     		movs	r0, #0
 4876              	.LVL318:
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4877              		.loc 1 4107 13 view .LVU1316
 4878 00a2 D1E7     		b	.L366
 4879              	.L382:
 4880              		.align	2
 4881              	.L381:
 4882 00a4 00000000 		.word	pxCurrentTCB
 4883 00a8 00000000 		.word	pxReadyTasksLists
 4884 00ac 00000000 		.word	uxTopReadyPriority
 4885              		.cfi_endproc
 4886              	.LFE45:
 4888              		.section	.text.vTaskPriorityDisinheritAfterTimeout,"ax",%progbits
 4889              		.align	1
 4890              		.global	vTaskPriorityDisinheritAfterTimeout
 4891              		.syntax unified
 4892              		.thumb
 4893              		.thumb_func
 4895              	vTaskPriorityDisinheritAfterTimeout:
 4896              	.LVL319:
 4897              	.LFB46:
4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 204


 4898              		.loc 1 4185 2 is_stmt 1 view -0
 4899              		.cfi_startproc
 4900              		@ args = 0, pretend = 0, frame = 0
 4901              		@ frame_needed = 0, uses_anonymous_args = 0
4186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
 4902              		.loc 1 4186 2 view .LVU1318
4187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
 4903              		.loc 1 4187 2 view .LVU1319
4188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4904              		.loc 1 4188 2 view .LVU1320
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4905              		.loc 1 4190 3 view .LVU1321
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4906              		.loc 1 4190 5 is_stmt 0 view .LVU1322
 4907 0000 0028     		cmp	r0, #0
 4908 0002 4FD0     		beq	.L393
4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 4909              		.loc 1 4185 2 view .LVU1323
 4910 0004 38B5     		push	{r3, r4, r5, lr}
 4911              	.LCFI46:
 4912              		.cfi_def_cfa_offset 16
 4913              		.cfi_offset 3, -16
 4914              		.cfi_offset 4, -12
 4915              		.cfi_offset 5, -8
 4916              		.cfi_offset 14, -4
 4917 0006 0446     		mov	r4, r0
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4918              		.loc 1 4194 4 is_stmt 1 view .LVU1324
 4919 0008 836C     		ldr	r3, [r0, #72]
 4920 000a 43B9     		cbnz	r3, .L385
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4921              		.loc 1 4194 4 discriminator 1 view .LVU1325
 4922              	.LBB199:
 4923              	.LBI199:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 4924              		.loc 2 191 30 view .LVU1326
 4925              	.LBB200:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 4926              		.loc 2 193 1 view .LVU1327
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4927              		.loc 2 195 2 view .LVU1328
 4928              		.syntax unified
 4929              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 4930 000c 4FF05003 			mov r3, #80												
 4931 0010 83F31188 		msr basepri, r3											
 4932 0014 BFF36F8F 		isb														
 4933 0018 BFF34F8F 		dsb														
 4934              	
 4935              	@ 0 "" 2
 4936              		.thumb
 4937              		.syntax unified
 4938              	.L386:
 4939              	.LBE200:
 4940              	.LBE199:
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4941              		.loc 1 4194 4 discriminator 3 view .LVU1329
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 205


 4942              		.loc 1 4194 4 discriminator 3 view .LVU1330
 4943 001c FEE7     		b	.L386
 4944              	.L385:
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4945              		.loc 1 4194 40 discriminator 2 view .LVU1331
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4946              		.loc 1 4200 4 view .LVU1332
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4947              		.loc 1 4200 13 is_stmt 0 view .LVU1333
 4948 001e 426C     		ldr	r2, [r0, #68]
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4949              		.loc 1 4200 6 view .LVU1334
 4950 0020 8A42     		cmp	r2, r1
 4951 0022 00D2     		bcs	.L387
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4952              		.loc 1 4202 21 view .LVU1335
 4953 0024 0A46     		mov	r2, r1
 4954              	.L387:
 4955              	.LVL320:
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4956              		.loc 1 4210 4 is_stmt 1 view .LVU1336
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4957              		.loc 1 4210 13 is_stmt 0 view .LVU1337
 4958 0026 E16A     		ldr	r1, [r4, #44]
 4959              	.LVL321:
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4960              		.loc 1 4210 6 view .LVU1338
 4961 0028 9142     		cmp	r1, r2
 4962 002a 01D0     		beq	.L383
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4963              		.loc 1 4216 5 is_stmt 1 view .LVU1339
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4964              		.loc 1 4216 7 is_stmt 0 view .LVU1340
 4965 002c 012B     		cmp	r3, #1
 4966 002e 00D0     		beq	.L396
 4967              	.LVL322:
 4968              	.L383:
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4969              		.loc 1 4282 2 view .LVU1341
 4970 0030 38BD     		pop	{r3, r4, r5, pc}
 4971              	.LVL323:
 4972              	.L396:
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4973              		.loc 1 4221 6 is_stmt 1 view .LVU1342
 4974 0032 1D4B     		ldr	r3, .L398
 4975 0034 1B68     		ldr	r3, [r3]
 4976 0036 A342     		cmp	r3, r4
 4977 0038 2BD0     		beq	.L397
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4978              		.loc 1 4221 43 discriminator 2 view .LVU1343
4226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
 4979              		.loc 1 4226 67 view .LVU1344
4227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
 4980              		.loc 1 4227 6 view .LVU1345
 4981              	.LVL324:
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4982              		.loc 1 4228 6 view .LVU1346
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 206


4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4983              		.loc 1 4228 24 is_stmt 0 view .LVU1347
 4984 003a E262     		str	r2, [r4, #44]
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4985              		.loc 1 4232 6 is_stmt 1 view .LVU1348
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4986              		.loc 1 4232 12 is_stmt 0 view .LVU1349
 4987 003c A369     		ldr	r3, [r4, #24]
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4988              		.loc 1 4232 8 view .LVU1350
 4989 003e 002B     		cmp	r3, #0
 4990 0040 02DB     		blt	.L390
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4991              		.loc 1 4234 7 is_stmt 1 view .LVU1351
 4992 0042 C2F10702 		rsb	r2, r2, #7
 4993              	.LVL325:
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4994              		.loc 1 4234 7 is_stmt 0 view .LVU1352
 4995 0046 A261     		str	r2, [r4, #24]
 4996              	.L390:
4238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4997              		.loc 1 4238 31 is_stmt 1 view .LVU1353
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4998              		.loc 1 4247 6 view .LVU1354
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4999              		.loc 1 4247 10 is_stmt 0 view .LVU1355
 5000 0048 6269     		ldr	r2, [r4, #20]
 5001 004a 01EB8101 		add	r1, r1, r1, lsl #2
 5002              	.LVL326:
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5003              		.loc 1 4247 10 view .LVU1356
 5004 004e 174B     		ldr	r3, .L398+4
 5005 0050 03EB8103 		add	r3, r3, r1, lsl #2
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5006              		.loc 1 4247 8 view .LVU1357
 5007 0054 9A42     		cmp	r2, r3
 5008 0056 EBD1     		bne	.L383
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 5009              		.loc 1 4249 7 is_stmt 1 view .LVU1358
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 5010              		.loc 1 4249 11 is_stmt 0 view .LVU1359
 5011 0058 251D     		adds	r5, r4, #4
 5012 005a 2846     		mov	r0, r5
 5013              	.LVL327:
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 5014              		.loc 1 4249 11 view .LVU1360
 5015 005c FFF7FEFF 		bl	uxListRemove
 5016              	.LVL328:
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 5017              		.loc 1 4249 9 discriminator 1 view .LVU1361
 5018 0060 38B9     		cbnz	r0, .L391
4254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 5019              		.loc 1 4254 8 is_stmt 1 view .LVU1362
 5020 0062 E36A     		ldr	r3, [r4, #44]
 5021 0064 0122     		movs	r2, #1
 5022 0066 9A40     		lsls	r2, r2, r3
 5023 0068 1149     		ldr	r1, .L398+8
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 207


 5024 006a 0B68     		ldr	r3, [r1]
 5025 006c 23EA0203 		bic	r3, r3, r2
 5026 0070 0B60     		str	r3, [r1]
 5027              	.L391:
4258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 5028              		.loc 1 4258 32 view .LVU1363
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5029              		.loc 1 4261 7 view .LVU1364
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5030              		.loc 1 4261 7 view .LVU1365
 5031 0072 E06A     		ldr	r0, [r4, #44]
 5032 0074 0123     		movs	r3, #1
 5033 0076 8340     		lsls	r3, r3, r0
 5034 0078 0D4A     		ldr	r2, .L398+8
 5035 007a 1168     		ldr	r1, [r2]
 5036 007c 0B43     		orrs	r3, r3, r1
 5037 007e 1360     		str	r3, [r2]
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5038              		.loc 1 4261 7 view .LVU1366
 5039 0080 00EB8000 		add	r0, r0, r0, lsl #2
 5040 0084 2946     		mov	r1, r5
 5041 0086 094B     		ldr	r3, .L398+4
 5042 0088 03EB8000 		add	r0, r3, r0, lsl #2
 5043 008c FFF7FEFF 		bl	vListInsertEnd
 5044              	.LVL329:
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5045              		.loc 1 4261 37 discriminator 1 view .LVU1367
4280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5046              		.loc 1 4280 28 view .LVU1368
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5047              		.loc 1 4282 2 is_stmt 0 view .LVU1369
 5048 0090 CEE7     		b	.L383
 5049              	.LVL330:
 5050              	.L397:
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5051              		.loc 1 4221 6 is_stmt 1 discriminator 1 view .LVU1370
 5052              	.LBB201:
 5053              	.LBI201:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5054              		.loc 2 191 30 view .LVU1371
 5055              	.LBB202:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5056              		.loc 2 193 1 view .LVU1372
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5057              		.loc 2 195 2 view .LVU1373
 5058              		.syntax unified
 5059              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5060 0092 4FF05003 			mov r3, #80												
 5061 0096 83F31188 		msr basepri, r3											
 5062 009a BFF36F8F 		isb														
 5063 009e BFF34F8F 		dsb														
 5064              	
 5065              	@ 0 "" 2
 5066              		.thumb
 5067              		.syntax unified
 5068              	.L389:
 5069              	.LBE202:
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 208


 5070              	.LBE201:
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5071              		.loc 1 4221 6 discriminator 3 view .LVU1374
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5072              		.loc 1 4221 6 discriminator 3 view .LVU1375
 5073 00a2 FEE7     		b	.L389
 5074              	.LVL331:
 5075              	.L393:
 5076              	.LCFI47:
 5077              		.cfi_def_cfa_offset 0
 5078              		.cfi_restore 3
 5079              		.cfi_restore 4
 5080              		.cfi_restore 5
 5081              		.cfi_restore 14
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5082              		.loc 1 4221 6 is_stmt 0 discriminator 3 view .LVU1376
 5083 00a4 7047     		bx	lr
 5084              	.L399:
 5085 00a6 00BF     		.align	2
 5086              	.L398:
 5087 00a8 00000000 		.word	pxCurrentTCB
 5088 00ac 00000000 		.word	pxReadyTasksLists
 5089 00b0 00000000 		.word	uxTopReadyPriority
 5090              		.cfi_endproc
 5091              	.LFE46:
 5093              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 5094              		.align	1
 5095              		.global	uxTaskResetEventItemValue
 5096              		.syntax unified
 5097              		.thumb
 5098              		.thumb_func
 5100              	uxTaskResetEventItemValue:
 5101              	.LFB47:
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
 5102              		.loc 1 4603 1 is_stmt 1 view -0
 5103              		.cfi_startproc
 5104              		@ args = 0, pretend = 0, frame = 0
 5105              		@ frame_needed = 0, uses_anonymous_args = 0
 5106              		@ link register save eliminated.
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5107              		.loc 1 4604 1 view .LVU1378
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5108              		.loc 1 4606 2 view .LVU1379
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5109              		.loc 1 4606 13 is_stmt 0 view .LVU1380
 5110 0000 044A     		ldr	r2, .L401
 5111 0002 1368     		ldr	r3, [r2]
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5112              		.loc 1 4606 11 view .LVU1381
 5113 0004 9869     		ldr	r0, [r3, #24]
 5114              	.LVL332:
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5115              		.loc 1 4610 2 is_stmt 1 view .LVU1382
 5116 0006 1368     		ldr	r3, [r2]
 5117 0008 DB6A     		ldr	r3, [r3, #44]
 5118 000a 1268     		ldr	r2, [r2]
 5119 000c C3F10703 		rsb	r3, r3, #7
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 209


 5120 0010 9361     		str	r3, [r2, #24]
4612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 5121              		.loc 1 4612 2 view .LVU1383
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 5122              		.loc 1 4613 1 is_stmt 0 view .LVU1384
 5123 0012 7047     		bx	lr
 5124              	.L402:
 5125              		.align	2
 5126              	.L401:
 5127 0014 00000000 		.word	pxCurrentTCB
 5128              		.cfi_endproc
 5129              	.LFE47:
 5131              		.section	.text.pvTaskIncrementMutexHeldCount,"ax",%progbits
 5132              		.align	1
 5133              		.global	pvTaskIncrementMutexHeldCount
 5134              		.syntax unified
 5135              		.thumb
 5136              		.thumb_func
 5138              	pvTaskIncrementMutexHeldCount:
 5139              	.LFB48:
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
 5140              		.loc 1 4619 2 is_stmt 1 view -0
 5141              		.cfi_startproc
 5142              		@ args = 0, pretend = 0, frame = 0
 5143              		@ frame_needed = 0, uses_anonymous_args = 0
 5144              		@ link register save eliminated.
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5145              		.loc 1 4622 3 view .LVU1386
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5146              		.loc 1 4622 20 is_stmt 0 view .LVU1387
 5147 0000 054B     		ldr	r3, .L405
 5148 0002 1B68     		ldr	r3, [r3]
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5149              		.loc 1 4622 5 view .LVU1388
 5150 0004 23B1     		cbz	r3, .L404
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5151              		.loc 1 4624 4 is_stmt 1 view .LVU1389
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5152              		.loc 1 4624 18 is_stmt 0 view .LVU1390
 5153 0006 044B     		ldr	r3, .L405
 5154 0008 1A68     		ldr	r2, [r3]
 5155 000a 936C     		ldr	r3, [r2, #72]
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5156              		.loc 1 4624 35 view .LVU1391
 5157 000c 0133     		adds	r3, r3, #1
 5158 000e 9364     		str	r3, [r2, #72]
 5159              	.L404:
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5160              		.loc 1 4627 3 is_stmt 1 view .LVU1392
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5161              		.loc 1 4627 10 is_stmt 0 view .LVU1393
 5162 0010 014B     		ldr	r3, .L405
 5163 0012 1868     		ldr	r0, [r3]
4628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5164              		.loc 1 4628 2 view .LVU1394
 5165 0014 7047     		bx	lr
 5166              	.L406:
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 210


 5167 0016 00BF     		.align	2
 5168              	.L405:
 5169 0018 00000000 		.word	pxCurrentTCB
 5170              		.cfi_endproc
 5171              	.LFE48:
 5173              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 5174              		.align	1
 5175              		.global	ulTaskNotifyTake
 5176              		.syntax unified
 5177              		.thumb
 5178              		.thumb_func
 5180              	ulTaskNotifyTake:
 5181              	.LVL333:
 5182              	.LFB49:
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 5183              		.loc 1 4636 2 is_stmt 1 view -0
 5184              		.cfi_startproc
 5185              		@ args = 0, pretend = 0, frame = 0
 5186              		@ frame_needed = 0, uses_anonymous_args = 0
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 5187              		.loc 1 4636 2 is_stmt 0 view .LVU1396
 5188 0000 38B5     		push	{r3, r4, r5, lr}
 5189              	.LCFI48:
 5190              		.cfi_def_cfa_offset 16
 5191              		.cfi_offset 3, -16
 5192              		.cfi_offset 4, -12
 5193              		.cfi_offset 5, -8
 5194              		.cfi_offset 14, -4
 5195 0002 0546     		mov	r5, r0
 5196 0004 0C46     		mov	r4, r1
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5197              		.loc 1 4637 2 is_stmt 1 view .LVU1397
4639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5198              		.loc 1 4639 3 view .LVU1398
 5199 0006 FFF7FEFF 		bl	vPortEnterCritical
 5200              	.LVL334:
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5201              		.loc 1 4642 4 view .LVU1399
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5202              		.loc 1 4642 20 is_stmt 0 view .LVU1400
 5203 000a 1A4B     		ldr	r3, .L413
 5204 000c 1B68     		ldr	r3, [r3]
 5205 000e DB6C     		ldr	r3, [r3, #76]
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5206              		.loc 1 4642 6 view .LVU1401
 5207 0010 2BB9     		cbnz	r3, .L408
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5208              		.loc 1 4645 5 is_stmt 1 view .LVU1402
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5209              		.loc 1 4645 17 is_stmt 0 view .LVU1403
 5210 0012 184B     		ldr	r3, .L413
 5211 0014 1B68     		ldr	r3, [r3]
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5212              		.loc 1 4645 33 view .LVU1404
 5213 0016 0122     		movs	r2, #1
 5214 0018 83F85020 		strb	r2, [r3, #80]
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 211


 5215              		.loc 1 4647 5 is_stmt 1 view .LVU1405
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5216              		.loc 1 4647 7 is_stmt 0 view .LVU1406
 5217 001c ACB9     		cbnz	r4, .L412
 5218              	.L408:
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5219              		.loc 1 4665 29 is_stmt 1 view .LVU1407
4668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5220              		.loc 1 4668 3 view .LVU1408
 5221 001e FFF7FEFF 		bl	vPortExitCritical
 5222              	.LVL335:
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5223              		.loc 1 4670 3 view .LVU1409
 5224 0022 FFF7FEFF 		bl	vPortEnterCritical
 5225              	.LVL336:
4672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
 5226              		.loc 1 4672 27 view .LVU1410
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5227              		.loc 1 4673 4 view .LVU1411
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5228              		.loc 1 4673 27 is_stmt 0 view .LVU1412
 5229 0026 134B     		ldr	r3, .L413
 5230 0028 1B68     		ldr	r3, [r3]
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5231              		.loc 1 4673 13 view .LVU1413
 5232 002a DC6C     		ldr	r4, [r3, #76]
 5233              	.LVL337:
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5234              		.loc 1 4675 4 is_stmt 1 view .LVU1414
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5235              		.loc 1 4675 6 is_stmt 0 view .LVU1415
 5236 002c 24B1     		cbz	r4, .L409
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5237              		.loc 1 4677 5 is_stmt 1 view .LVU1416
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5238              		.loc 1 4677 7 is_stmt 0 view .LVU1417
 5239 002e DDB1     		cbz	r5, .L410
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5240              		.loc 1 4679 6 is_stmt 1 view .LVU1418
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5241              		.loc 1 4679 18 is_stmt 0 view .LVU1419
 5242 0030 104B     		ldr	r3, .L413
 5243 0032 1B68     		ldr	r3, [r3]
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5244              		.loc 1 4679 36 view .LVU1420
 5245 0034 0022     		movs	r2, #0
 5246 0036 DA64     		str	r2, [r3, #76]
 5247              	.L409:
4688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5248              		.loc 1 4688 29 is_stmt 1 view .LVU1421
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5249              		.loc 1 4691 4 view .LVU1422
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5250              		.loc 1 4691 16 is_stmt 0 view .LVU1423
 5251 0038 0E4B     		ldr	r3, .L413
 5252 003a 1B68     		ldr	r3, [r3]
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 212


 5253              		.loc 1 4691 32 view .LVU1424
 5254 003c 0022     		movs	r2, #0
 5255 003e 83F85020 		strb	r2, [r3, #80]
4693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5256              		.loc 1 4693 3 is_stmt 1 view .LVU1425
 5257 0042 FFF7FEFF 		bl	vPortExitCritical
 5258              	.LVL338:
4695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5259              		.loc 1 4695 3 view .LVU1426
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5260              		.loc 1 4696 2 is_stmt 0 view .LVU1427
 5261 0046 2046     		mov	r0, r4
 5262 0048 38BD     		pop	{r3, r4, r5, pc}
 5263              	.LVL339:
 5264              	.L412:
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 5265              		.loc 1 4649 6 is_stmt 1 view .LVU1428
 5266 004a 1146     		mov	r1, r2
 5267 004c 2046     		mov	r0, r4
 5268 004e FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 5269              	.LVL340:
4650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5270              		.loc 1 4650 35 view .LVU1429
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5271              		.loc 1 4656 6 view .LVU1430
 5272 0052 4FF0E023 		mov	r3, #-536813568
 5273 0056 4FF08052 		mov	r2, #268435456
 5274 005a C3F8042D 		str	r2, [r3, #3332]
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5275              		.loc 1 4656 6 view .LVU1431
 5276              		.syntax unified
 5277              	@ 4656 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5278 005e BFF34F8F 		dsb
 5279              	@ 0 "" 2
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5280              		.loc 1 4656 6 view .LVU1432
 5281              	@ 4656 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5282 0062 BFF36F8F 		isb
 5283              	@ 0 "" 2
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5284              		.loc 1 4656 28 view .LVU1433
 5285              		.thumb
 5286              		.syntax unified
 5287 0066 DAE7     		b	.L408
 5288              	.LVL341:
 5289              	.L410:
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5290              		.loc 1 4683 6 view .LVU1434
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5291              		.loc 1 4683 18 is_stmt 0 view .LVU1435
 5292 0068 024B     		ldr	r3, .L413
 5293 006a 1B68     		ldr	r3, [r3]
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5294              		.loc 1 4683 47 view .LVU1436
 5295 006c 621E     		subs	r2, r4, #1
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5296              		.loc 1 4683 36 view .LVU1437
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 213


 5297 006e DA64     		str	r2, [r3, #76]
 5298 0070 E2E7     		b	.L409
 5299              	.L414:
 5300 0072 00BF     		.align	2
 5301              	.L413:
 5302 0074 00000000 		.word	pxCurrentTCB
 5303              		.cfi_endproc
 5304              	.LFE49:
 5306              		.section	.text.xTaskNotifyWait,"ax",%progbits
 5307              		.align	1
 5308              		.global	xTaskNotifyWait
 5309              		.syntax unified
 5310              		.thumb
 5311              		.thumb_func
 5313              	xTaskNotifyWait:
 5314              	.LVL342:
 5315              	.LFB50:
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 5316              		.loc 1 4704 2 is_stmt 1 view -0
 5317              		.cfi_startproc
 5318              		@ args = 0, pretend = 0, frame = 0
 5319              		@ frame_needed = 0, uses_anonymous_args = 0
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 5320              		.loc 1 4704 2 is_stmt 0 view .LVU1439
 5321 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5322              	.LCFI49:
 5323              		.cfi_def_cfa_offset 24
 5324              		.cfi_offset 3, -24
 5325              		.cfi_offset 4, -20
 5326              		.cfi_offset 5, -16
 5327              		.cfi_offset 6, -12
 5328              		.cfi_offset 7, -8
 5329              		.cfi_offset 14, -4
 5330 0002 0646     		mov	r6, r0
 5331 0004 0F46     		mov	r7, r1
 5332 0006 1446     		mov	r4, r2
 5333 0008 1D46     		mov	r5, r3
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5334              		.loc 1 4705 2 is_stmt 1 view .LVU1440
4707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5335              		.loc 1 4707 3 view .LVU1441
 5336 000a FFF7FEFF 		bl	vPortEnterCritical
 5337              	.LVL343:
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5338              		.loc 1 4710 4 view .LVU1442
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5339              		.loc 1 4710 20 is_stmt 0 view .LVU1443
 5340 000e 214B     		ldr	r3, .L423
 5341 0010 1B68     		ldr	r3, [r3]
 5342 0012 93F85020 		ldrb	r2, [r3, #80]	@ zero_extendqisi2
 5343 0016 D2B2     		uxtb	r2, r2
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5344              		.loc 1 4710 6 view .LVU1444
 5345 0018 022A     		cmp	r2, #2
 5346 001a 0AD0     		beq	.L416
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5347              		.loc 1 4715 5 is_stmt 1 view .LVU1445
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 214


4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5348              		.loc 1 4715 17 is_stmt 0 view .LVU1446
 5349 001c 1D4A     		ldr	r2, .L423
 5350 001e 1168     		ldr	r1, [r2]
 5351 0020 CB6C     		ldr	r3, [r1, #76]
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5352              		.loc 1 4715 35 view .LVU1447
 5353 0022 23EA0603 		bic	r3, r3, r6
 5354 0026 CB64     		str	r3, [r1, #76]
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5355              		.loc 1 4718 5 is_stmt 1 view .LVU1448
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5356              		.loc 1 4718 17 is_stmt 0 view .LVU1449
 5357 0028 1368     		ldr	r3, [r2]
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5358              		.loc 1 4718 33 view .LVU1450
 5359 002a 0122     		movs	r2, #1
 5360 002c 83F85020 		strb	r2, [r3, #80]
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5361              		.loc 1 4720 5 is_stmt 1 view .LVU1451
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5362              		.loc 1 4720 7 is_stmt 0 view .LVU1452
 5363 0030 CDB9     		cbnz	r5, .L421
 5364              	.L416:
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5365              		.loc 1 4738 29 is_stmt 1 view .LVU1453
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5366              		.loc 1 4741 3 view .LVU1454
 5367 0032 FFF7FEFF 		bl	vPortExitCritical
 5368              	.LVL344:
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5369              		.loc 1 4743 3 view .LVU1455
 5370 0036 FFF7FEFF 		bl	vPortEnterCritical
 5371              	.LVL345:
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5372              		.loc 1 4745 27 view .LVU1456
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5373              		.loc 1 4747 4 view .LVU1457
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5374              		.loc 1 4747 6 is_stmt 0 view .LVU1458
 5375 003a 1CB1     		cbz	r4, .L417
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5376              		.loc 1 4751 5 is_stmt 1 view .LVU1459
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5377              		.loc 1 4751 41 is_stmt 0 view .LVU1460
 5378 003c 154B     		ldr	r3, .L423
 5379 003e 1B68     		ldr	r3, [r3]
 5380 0040 DB6C     		ldr	r3, [r3, #76]
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5381              		.loc 1 4751 27 view .LVU1461
 5382 0042 2360     		str	r3, [r4]
 5383              	.L417:
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5384              		.loc 1 4758 4 is_stmt 1 view .LVU1462
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5385              		.loc 1 4758 20 is_stmt 0 view .LVU1463
 5386 0044 134B     		ldr	r3, .L423
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 215


 5387 0046 1B68     		ldr	r3, [r3]
 5388 0048 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 5389 004c DBB2     		uxtb	r3, r3
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5390              		.loc 1 4758 6 view .LVU1464
 5391 004e 022B     		cmp	r3, #2
 5392 0050 18D0     		beq	.L422
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5393              		.loc 1 4761 13 view .LVU1465
 5394 0052 0024     		movs	r4, #0
 5395              	.LVL346:
 5396              	.L418:
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5397              		.loc 1 4771 4 is_stmt 1 view .LVU1466
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5398              		.loc 1 4771 16 is_stmt 0 view .LVU1467
 5399 0054 0F4B     		ldr	r3, .L423
 5400 0056 1B68     		ldr	r3, [r3]
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 5401              		.loc 1 4771 32 view .LVU1468
 5402 0058 0022     		movs	r2, #0
 5403 005a 83F85020 		strb	r2, [r3, #80]
4773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5404              		.loc 1 4773 3 is_stmt 1 view .LVU1469
 5405 005e FFF7FEFF 		bl	vPortExitCritical
 5406              	.LVL347:
4775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5407              		.loc 1 4775 3 view .LVU1470
4776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5408              		.loc 1 4776 2 is_stmt 0 view .LVU1471
 5409 0062 2046     		mov	r0, r4
 5410 0064 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5411              	.LVL348:
 5412              	.L421:
4722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 5413              		.loc 1 4722 6 is_stmt 1 view .LVU1472
 5414 0066 1146     		mov	r1, r2
 5415 0068 2846     		mov	r0, r5
 5416 006a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 5417              	.LVL349:
4723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5418              		.loc 1 4723 35 view .LVU1473
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5419              		.loc 1 4729 6 view .LVU1474
 5420 006e 4FF0E023 		mov	r3, #-536813568
 5421 0072 4FF08052 		mov	r2, #268435456
 5422 0076 C3F8042D 		str	r2, [r3, #3332]
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5423              		.loc 1 4729 6 view .LVU1475
 5424              		.syntax unified
 5425              	@ 4729 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5426 007a BFF34F8F 		dsb
 5427              	@ 0 "" 2
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5428              		.loc 1 4729 6 view .LVU1476
 5429              	@ 4729 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5430 007e BFF36F8F 		isb
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 216


 5431              	@ 0 "" 2
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5432              		.loc 1 4729 28 view .LVU1477
 5433              		.thumb
 5434              		.syntax unified
 5435 0082 D6E7     		b	.L416
 5436              	.L422:
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5437              		.loc 1 4767 5 view .LVU1478
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5438              		.loc 1 4767 17 is_stmt 0 view .LVU1479
 5439 0084 034B     		ldr	r3, .L423
 5440 0086 1A68     		ldr	r2, [r3]
 5441 0088 D36C     		ldr	r3, [r2, #76]
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5442              		.loc 1 4767 35 view .LVU1480
 5443 008a 23EA0703 		bic	r3, r3, r7
 5444 008e D364     		str	r3, [r2, #76]
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5445              		.loc 1 4768 5 is_stmt 1 view .LVU1481
 5446              	.LVL350:
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5447              		.loc 1 4768 13 is_stmt 0 view .LVU1482
 5448 0090 0124     		movs	r4, #1
 5449              	.LVL351:
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5450              		.loc 1 4768 13 view .LVU1483
 5451 0092 DFE7     		b	.L418
 5452              	.L424:
 5453              		.align	2
 5454              	.L423:
 5455 0094 00000000 		.word	pxCurrentTCB
 5456              		.cfi_endproc
 5457              	.LFE50:
 5459              		.section	.text.xTaskGenericNotify,"ax",%progbits
 5460              		.align	1
 5461              		.global	xTaskGenericNotify
 5462              		.syntax unified
 5463              		.thumb
 5464              		.thumb_func
 5466              	xTaskGenericNotify:
 5467              	.LVL352:
 5468              	.LFB51:
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5469              		.loc 1 4784 2 is_stmt 1 view -0
 5470              		.cfi_startproc
 5471              		@ args = 0, pretend = 0, frame = 0
 5472              		@ frame_needed = 0, uses_anonymous_args = 0
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5473              		.loc 1 4784 2 is_stmt 0 view .LVU1485
 5474 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5475              	.LCFI50:
 5476              		.cfi_def_cfa_offset 24
 5477              		.cfi_offset 3, -24
 5478              		.cfi_offset 4, -20
 5479              		.cfi_offset 5, -16
 5480              		.cfi_offset 6, -12
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 217


 5481              		.cfi_offset 7, -8
 5482              		.cfi_offset 14, -4
4785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 5483              		.loc 1 4785 2 is_stmt 1 view .LVU1486
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5484              		.loc 1 4786 2 view .LVU1487
 5485              	.LVL353:
4787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5486              		.loc 1 4787 2 view .LVU1488
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5487              		.loc 1 4789 3 view .LVU1489
 5488 0002 A8B1     		cbz	r0, .L445
 5489 0004 0E46     		mov	r6, r1
 5490 0006 1446     		mov	r4, r2
 5491 0008 1D46     		mov	r5, r3
 5492 000a 0746     		mov	r7, r0
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5493              		.loc 1 4789 32 discriminator 2 view .LVU1490
4790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5494              		.loc 1 4790 3 view .LVU1491
 5495              	.LVL354:
4792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5496              		.loc 1 4792 3 view .LVU1492
 5497 000c FFF7FEFF 		bl	vPortEnterCritical
 5498              	.LVL355:
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5499              		.loc 1 4794 4 view .LVU1493
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5500              		.loc 1 4794 6 is_stmt 0 view .LVU1494
 5501 0010 0DB1     		cbz	r5, .L428
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5502              		.loc 1 4796 5 is_stmt 1 view .LVU1495
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5503              		.loc 1 4796 42 is_stmt 0 view .LVU1496
 5504 0012 FB6C     		ldr	r3, [r7, #76]
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5505              		.loc 1 4796 35 view .LVU1497
 5506 0014 2B60     		str	r3, [r5]
 5507              	.L428:
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5508              		.loc 1 4799 4 is_stmt 1 view .LVU1498
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5509              		.loc 1 4799 26 is_stmt 0 view .LVU1499
 5510 0016 97F85030 		ldrb	r3, [r7, #80]	@ zero_extendqisi2
 5511 001a DBB2     		uxtb	r3, r3
 5512              	.LVL356:
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5513              		.loc 1 4801 4 is_stmt 1 view .LVU1500
4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5514              		.loc 1 4801 25 is_stmt 0 view .LVU1501
 5515 001c 0222     		movs	r2, #2
 5516 001e 87F85020 		strb	r2, [r7, #80]
4803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5517              		.loc 1 4803 4 is_stmt 1 view .LVU1502
 5518 0022 042C     		cmp	r4, #4
 5519 0024 21D8     		bhi	.L429
 5520 0026 DFE804F0 		tbb	[pc, r4]
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 218


 5521              	.L431:
 5522 002a 0F       		.byte	(.L435-.L431)/2
 5523 002b 0C       		.byte	(.L434-.L431)/2
 5524 002c 16       		.byte	(.L433-.L431)/2
 5525 002d 1A       		.byte	(.L432-.L431)/2
 5526 002e 1C       		.byte	(.L430-.L431)/2
 5527              	.LVL357:
 5528 002f 00       		.p2align 1
 5529              	.L445:
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5530              		.loc 1 4789 3 discriminator 1 view .LVU1503
 5531              	.LBB203:
 5532              	.LBI203:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5533              		.loc 2 191 30 view .LVU1504
 5534              	.LBB204:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5535              		.loc 2 193 1 view .LVU1505
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5536              		.loc 2 195 2 view .LVU1506
 5537              		.syntax unified
 5538              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5539 0030 4FF05003 			mov r3, #80												
 5540 0034 83F31188 		msr basepri, r3											
 5541 0038 BFF36F8F 		isb														
 5542 003c BFF34F8F 		dsb														
 5543              	
 5544              	@ 0 "" 2
 5545              	.LVL358:
 5546              		.thumb
 5547              		.syntax unified
 5548              	.L427:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5549              		.loc 2 195 2 is_stmt 0 view .LVU1507
 5550              	.LBE204:
 5551              	.LBE203:
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5552              		.loc 1 4789 3 is_stmt 1 discriminator 3 view .LVU1508
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 5553              		.loc 1 4789 3 discriminator 3 view .LVU1509
 5554 0040 FEE7     		b	.L427
 5555              	.LVL359:
 5556              	.L434:
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5557              		.loc 1 4806 6 view .LVU1510
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5558              		.loc 1 4806 11 is_stmt 0 view .LVU1511
 5559 0042 FA6C     		ldr	r2, [r7, #76]
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5560              		.loc 1 4806 29 view .LVU1512
 5561 0044 3243     		orrs	r2, r2, r6
 5562 0046 FA64     		str	r2, [r7, #76]
4807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5563              		.loc 1 4807 6 is_stmt 1 view .LVU1513
 5564              	.L435:
4843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5565              		.loc 1 4843 22 view .LVU1514
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 219


4847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5566              		.loc 1 4847 4 view .LVU1515
4847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5567              		.loc 1 4847 6 is_stmt 0 view .LVU1516
 5568 0048 012B     		cmp	r3, #1
 5569 004a 1BD0     		beq	.L446
 5570 004c 0124     		movs	r4, #1
 5571              	.LVL360:
 5572              	.L436:
4884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5573              		.loc 1 4884 29 is_stmt 1 view .LVU1517
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5574              		.loc 1 4887 3 view .LVU1518
 5575 004e FFF7FEFF 		bl	vPortExitCritical
 5576              	.LVL361:
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5577              		.loc 1 4889 3 view .LVU1519
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5578              		.loc 1 4890 2 is_stmt 0 view .LVU1520
 5579 0052 2046     		mov	r0, r4
 5580 0054 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5581              	.LVL362:
 5582              	.L433:
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5583              		.loc 1 4810 6 is_stmt 1 view .LVU1521
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5584              		.loc 1 4810 13 is_stmt 0 view .LVU1522
 5585 0056 FA6C     		ldr	r2, [r7, #76]
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5586              		.loc 1 4810 32 view .LVU1523
 5587 0058 0132     		adds	r2, r2, #1
 5588 005a FA64     		str	r2, [r7, #76]
4811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5589              		.loc 1 4811 6 is_stmt 1 view .LVU1524
 5590 005c F4E7     		b	.L435
 5591              	.L432:
4814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5592              		.loc 1 4814 6 view .LVU1525
4814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5593              		.loc 1 4814 29 is_stmt 0 view .LVU1526
 5594 005e FE64     		str	r6, [r7, #76]
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5595              		.loc 1 4815 6 is_stmt 1 view .LVU1527
 5596 0060 F2E7     		b	.L435
 5597              	.L430:
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5598              		.loc 1 4818 6 view .LVU1528
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5599              		.loc 1 4818 8 is_stmt 0 view .LVU1529
 5600 0062 022B     		cmp	r3, #2
 5601 0064 3ED0     		beq	.L440
4820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5602              		.loc 1 4820 7 is_stmt 1 view .LVU1530
4820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5603              		.loc 1 4820 30 is_stmt 0 view .LVU1531
 5604 0066 FE64     		str	r6, [r7, #76]
 5605 0068 EEE7     		b	.L435
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 220


 5606              	.L429:
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5607              		.loc 1 4838 6 is_stmt 1 view .LVU1532
 5608 006a FA6C     		ldr	r2, [r7, #76]
 5609 006c B2F1FF3F 		cmp	r2, #-1
 5610 0070 EAD0     		beq	.L435
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5611              		.loc 1 4838 6 discriminator 1 view .LVU1533
 5612              	.LBB205:
 5613              	.LBI205:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5614              		.loc 2 191 30 view .LVU1534
 5615              	.LBB206:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5616              		.loc 2 193 1 view .LVU1535
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5617              		.loc 2 195 2 view .LVU1536
 5618              		.syntax unified
 5619              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5620 0072 4FF05003 			mov r3, #80												
 5621 0076 83F31188 		msr basepri, r3											
 5622 007a BFF36F8F 		isb														
 5623 007e BFF34F8F 		dsb														
 5624              	
 5625              	@ 0 "" 2
 5626              	.LVL363:
 5627              		.thumb
 5628              		.syntax unified
 5629              	.L437:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5630              		.loc 2 195 2 is_stmt 0 view .LVU1537
 5631              	.LBE206:
 5632              	.LBE205:
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5633              		.loc 1 4838 6 is_stmt 1 discriminator 3 view .LVU1538
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5634              		.loc 1 4838 6 discriminator 3 view .LVU1539
 5635 0082 FEE7     		b	.L437
 5636              	.LVL364:
 5637              	.L446:
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5638              		.loc 1 4849 5 view .LVU1540
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 5639              		.loc 1 4849 14 is_stmt 0 view .LVU1541
 5640 0084 3C1D     		adds	r4, r7, #4
 5641 0086 2046     		mov	r0, r4
 5642 0088 FFF7FEFF 		bl	uxListRemove
 5643              	.LVL365:
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5644              		.loc 1 4850 5 is_stmt 1 view .LVU1542
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5645              		.loc 1 4850 5 view .LVU1543
 5646 008c F86A     		ldr	r0, [r7, #44]
 5647 008e 0123     		movs	r3, #1
 5648 0090 8340     		lsls	r3, r3, r0
 5649 0092 164A     		ldr	r2, .L447
 5650 0094 1168     		ldr	r1, [r2]
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 221


 5651 0096 0B43     		orrs	r3, r3, r1
 5652 0098 1360     		str	r3, [r2]
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5653              		.loc 1 4850 5 view .LVU1544
 5654 009a 00EB8000 		add	r0, r0, r0, lsl #2
 5655 009e 2146     		mov	r1, r4
 5656 00a0 134B     		ldr	r3, .L447+4
 5657 00a2 03EB8000 		add	r0, r3, r0, lsl #2
 5658 00a6 FFF7FEFF 		bl	vListInsertEnd
 5659              	.LVL366:
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5660              		.loc 1 4850 35 discriminator 1 view .LVU1545
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5661              		.loc 1 4853 5 view .LVU1546
 5662 00aa BB6A     		ldr	r3, [r7, #40]
 5663 00ac 43B1     		cbz	r3, .L438
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5664              		.loc 1 4853 5 discriminator 1 view .LVU1547
 5665              	.LBB207:
 5666              	.LBI207:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5667              		.loc 2 191 30 view .LVU1548
 5668              	.LBB208:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5669              		.loc 2 193 1 view .LVU1549
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5670              		.loc 2 195 2 view .LVU1550
 5671              		.syntax unified
 5672              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5673 00ae 4FF05003 			mov r3, #80												
 5674 00b2 83F31188 		msr basepri, r3											
 5675 00b6 BFF36F8F 		isb														
 5676 00ba BFF34F8F 		dsb														
 5677              	
 5678              	@ 0 "" 2
 5679              		.thumb
 5680              		.syntax unified
 5681              	.L439:
 5682              	.LBE208:
 5683              	.LBE207:
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5684              		.loc 1 4853 5 discriminator 3 view .LVU1551
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5685              		.loc 1 4853 5 discriminator 3 view .LVU1552
 5686 00be FEE7     		b	.L439
 5687              	.L438:
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5688              		.loc 1 4853 82 discriminator 2 view .LVU1553
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5689              		.loc 1 4871 5 view .LVU1554
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5690              		.loc 1 4871 14 is_stmt 0 view .LVU1555
 5691 00c0 FA6A     		ldr	r2, [r7, #44]
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5692              		.loc 1 4871 41 view .LVU1556
 5693 00c2 0C4B     		ldr	r3, .L447+8
 5694 00c4 1B68     		ldr	r3, [r3]
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 222


 5695 00c6 DB6A     		ldr	r3, [r3, #44]
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5696              		.loc 1 4871 7 view .LVU1557
 5697 00c8 9A42     		cmp	r2, r3
 5698 00ca 0DD9     		bls	.L442
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5699              		.loc 1 4875 6 is_stmt 1 view .LVU1558
 5700 00cc 4FF0E023 		mov	r3, #-536813568
 5701 00d0 4FF08052 		mov	r2, #268435456
 5702 00d4 C3F8042D 		str	r2, [r3, #3332]
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5703              		.loc 1 4875 6 view .LVU1559
 5704              		.syntax unified
 5705              	@ 4875 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5706 00d8 BFF34F8F 		dsb
 5707              	@ 0 "" 2
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5708              		.loc 1 4875 6 view .LVU1560
 5709              	@ 4875 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5710 00dc BFF36F8F 		isb
 5711              	@ 0 "" 2
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5712              		.loc 1 4875 37 view .LVU1561
 5713              		.thumb
 5714              		.syntax unified
 5715 00e0 0124     		movs	r4, #1
 5716 00e2 B4E7     		b	.L436
 5717              	.LVL367:
 5718              	.L440:
4825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5719              		.loc 1 4825 15 is_stmt 0 view .LVU1562
 5720 00e4 0024     		movs	r4, #0
 5721 00e6 B2E7     		b	.L436
 5722              	.LVL368:
 5723              	.L442:
4825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5724              		.loc 1 4825 15 view .LVU1563
 5725 00e8 0124     		movs	r4, #1
 5726 00ea B0E7     		b	.L436
 5727              	.L448:
 5728              		.align	2
 5729              	.L447:
 5730 00ec 00000000 		.word	uxTopReadyPriority
 5731 00f0 00000000 		.word	pxReadyTasksLists
 5732 00f4 00000000 		.word	pxCurrentTCB
 5733              		.cfi_endproc
 5734              	.LFE51:
 5736              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 5737              		.align	1
 5738              		.global	xTaskGenericNotifyFromISR
 5739              		.syntax unified
 5740              		.thumb
 5741              		.thumb_func
 5743              	xTaskGenericNotifyFromISR:
 5744              	.LVL369:
 5745              	.LFB52:
4898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 223


 5746              		.loc 1 4898 2 is_stmt 1 view -0
 5747              		.cfi_startproc
 5748              		@ args = 4, pretend = 0, frame = 0
 5749              		@ frame_needed = 0, uses_anonymous_args = 0
4899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5750              		.loc 1 4899 2 view .LVU1565
4900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 5751              		.loc 1 4900 2 view .LVU1566
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5752              		.loc 1 4901 2 view .LVU1567
4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5753              		.loc 1 4902 2 view .LVU1568
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5754              		.loc 1 4904 3 view .LVU1569
 5755 0000 10B3     		cbz	r0, .L473
4898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5756              		.loc 1 4898 2 is_stmt 0 view .LVU1570
 5757 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 5758              	.LCFI51:
 5759              		.cfi_def_cfa_offset 24
 5760              		.cfi_offset 4, -24
 5761              		.cfi_offset 5, -20
 5762              		.cfi_offset 6, -16
 5763              		.cfi_offset 7, -12
 5764              		.cfi_offset 8, -8
 5765              		.cfi_offset 14, -4
 5766 0006 0E46     		mov	r6, r1
 5767 0008 1446     		mov	r4, r2
 5768 000a 1D46     		mov	r5, r3
 5769 000c 0746     		mov	r7, r0
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5770              		.loc 1 4904 32 is_stmt 1 discriminator 2 view .LVU1571
4922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5771              		.loc 1 4922 3 view .LVU1572
 5772 000e FFF7FEFF 		bl	vPortValidateInterruptPriority
 5773              	.LVL370:
4924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5774              		.loc 1 4924 3 view .LVU1573
4926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5775              		.loc 1 4926 3 view .LVU1574
 5776              	.LBB209:
 5777              	.LBI209:
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5778              		.loc 2 207 34 view .LVU1575
 5779              	.LBB210:
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5780              		.loc 2 209 1 view .LVU1576
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5781              		.loc 2 211 2 view .LVU1577
 5782              		.syntax unified
 5783              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5784 0012 EFF31183 			mrs r3, basepri											
 5785 0016 4FF05002 		mov r2, #80												
 5786 001a 82F31188 		msr basepri, r2											
 5787 001e BFF36F8F 		isb														
 5788 0022 BFF34F8F 		dsb														
 5789              	
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 224


 5790              	@ 0 "" 2
 5791              		.thumb
 5792              		.syntax unified
 5793 0026 9846     		mov	r8, r3
 5794              	.LVL371:
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 5795              		.loc 2 223 2 view .LVU1578
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 5796              		.loc 2 223 2 is_stmt 0 view .LVU1579
 5797              	.LBE210:
 5798              	.LBE209:
4928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5799              		.loc 1 4928 4 is_stmt 1 view .LVU1580
4928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5800              		.loc 1 4928 6 is_stmt 0 view .LVU1581
 5801 0028 0DB1     		cbz	r5, .L452
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5802              		.loc 1 4930 5 is_stmt 1 view .LVU1582
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5803              		.loc 1 4930 42 is_stmt 0 view .LVU1583
 5804 002a FB6C     		ldr	r3, [r7, #76]
 5805              	.LVL372:
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5806              		.loc 1 4930 35 view .LVU1584
 5807 002c 2B60     		str	r3, [r5]
 5808              	.L452:
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5809              		.loc 1 4933 4 is_stmt 1 view .LVU1585
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5810              		.loc 1 4933 26 is_stmt 0 view .LVU1586
 5811 002e 97F85030 		ldrb	r3, [r7, #80]	@ zero_extendqisi2
 5812 0032 DBB2     		uxtb	r3, r3
 5813              	.LVL373:
4934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5814              		.loc 1 4934 4 is_stmt 1 view .LVU1587
4934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5815              		.loc 1 4934 25 is_stmt 0 view .LVU1588
 5816 0034 0222     		movs	r2, #2
 5817 0036 87F85020 		strb	r2, [r7, #80]
4936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5818              		.loc 1 4936 4 is_stmt 1 view .LVU1589
 5819 003a 042C     		cmp	r4, #4
 5820 003c 21D8     		bhi	.L453
 5821 003e DFE804F0 		tbb	[pc, r4]
 5822              	.L455:
 5823 0042 0F       		.byte	(.L459-.L455)/2
 5824 0043 0C       		.byte	(.L458-.L455)/2
 5825 0044 16       		.byte	(.L457-.L455)/2
 5826 0045 1A       		.byte	(.L456-.L455)/2
 5827 0046 1C       		.byte	(.L454-.L455)/2
 5828              	.LVL374:
 5829 0047 00       		.p2align 1
 5830              	.L473:
 5831              	.LCFI52:
 5832              		.cfi_def_cfa_offset 0
 5833              		.cfi_restore 4
 5834              		.cfi_restore 5
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 225


 5835              		.cfi_restore 6
 5836              		.cfi_restore 7
 5837              		.cfi_restore 8
 5838              		.cfi_restore 14
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5839              		.loc 1 4904 3 discriminator 1 view .LVU1590
 5840              	.LBB211:
 5841              	.LBI211:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5842              		.loc 2 191 30 view .LVU1591
 5843              	.LBB212:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5844              		.loc 2 193 1 view .LVU1592
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5845              		.loc 2 195 2 view .LVU1593
 5846              		.syntax unified
 5847              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5848 0048 4FF05003 			mov r3, #80												
 5849 004c 83F31188 		msr basepri, r3											
 5850 0050 BFF36F8F 		isb														
 5851 0054 BFF34F8F 		dsb														
 5852              	
 5853              	@ 0 "" 2
 5854              	.LVL375:
 5855              		.thumb
 5856              		.syntax unified
 5857              	.L451:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5858              		.loc 2 195 2 is_stmt 0 view .LVU1594
 5859              	.LBE212:
 5860              	.LBE211:
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5861              		.loc 1 4904 3 is_stmt 1 discriminator 3 view .LVU1595
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5862              		.loc 1 4904 3 discriminator 3 view .LVU1596
 5863 0058 FEE7     		b	.L451
 5864              	.LVL376:
 5865              	.L458:
 5866              	.LCFI53:
 5867              		.cfi_def_cfa_offset 24
 5868              		.cfi_offset 4, -24
 5869              		.cfi_offset 5, -20
 5870              		.cfi_offset 6, -16
 5871              		.cfi_offset 7, -12
 5872              		.cfi_offset 8, -8
 5873              		.cfi_offset 14, -4
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5874              		.loc 1 4939 6 view .LVU1597
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5875              		.loc 1 4939 11 is_stmt 0 view .LVU1598
 5876 005a FA6C     		ldr	r2, [r7, #76]
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5877              		.loc 1 4939 29 view .LVU1599
 5878 005c 3243     		orrs	r2, r2, r6
 5879 005e FA64     		str	r2, [r7, #76]
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5880              		.loc 1 4940 6 is_stmt 1 view .LVU1600
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 226


 5881              	.L459:
4975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5882              		.loc 1 4975 31 view .LVU1601
4979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5883              		.loc 1 4979 4 view .LVU1602
4979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5884              		.loc 1 4979 6 is_stmt 0 view .LVU1603
 5885 0060 012B     		cmp	r3, #1
 5886 0062 1BD0     		beq	.L474
 5887 0064 0120     		movs	r0, #1
 5888              	.LVL377:
 5889              	.L460:
5012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5890              		.loc 1 5012 30 is_stmt 1 view .LVU1604
5016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5891              		.loc 1 5016 3 view .LVU1605
 5892              	.LBB213:
 5893              	.LBI213:
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5894              		.loc 2 227 30 view .LVU1606
 5895              	.LBB214:
 5896              		.loc 2 229 2 view .LVU1607
 5897              		.syntax unified
 5898              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5899 0066 88F31188 			msr basepri, r8	
 5900              	@ 0 "" 2
 5901              		.thumb
 5902              		.syntax unified
 5903              	.LBE214:
 5904              	.LBE213:
5018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5905              		.loc 1 5018 3 view .LVU1608
5019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5906              		.loc 1 5019 2 is_stmt 0 view .LVU1609
 5907 006a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 5908              	.LVL378:
 5909              	.L457:
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5910              		.loc 1 4943 6 is_stmt 1 view .LVU1610
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5911              		.loc 1 4943 13 is_stmt 0 view .LVU1611
 5912 006e FA6C     		ldr	r2, [r7, #76]
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5913              		.loc 1 4943 32 view .LVU1612
 5914 0070 0132     		adds	r2, r2, #1
 5915 0072 FA64     		str	r2, [r7, #76]
4944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5916              		.loc 1 4944 6 is_stmt 1 view .LVU1613
 5917 0074 F4E7     		b	.L459
 5918              	.L456:
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5919              		.loc 1 4947 6 view .LVU1614
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5920              		.loc 1 4947 29 is_stmt 0 view .LVU1615
 5921 0076 FE64     		str	r6, [r7, #76]
4948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5922              		.loc 1 4948 6 is_stmt 1 view .LVU1616
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 227


 5923 0078 F2E7     		b	.L459
 5924              	.L454:
4951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5925              		.loc 1 4951 6 view .LVU1617
4951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5926              		.loc 1 4951 8 is_stmt 0 view .LVU1618
 5927 007a 022B     		cmp	r3, #2
 5928 007c 44D0     		beq	.L467
4953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5929              		.loc 1 4953 7 is_stmt 1 view .LVU1619
4953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5930              		.loc 1 4953 30 is_stmt 0 view .LVU1620
 5931 007e FE64     		str	r6, [r7, #76]
 5932 0080 EEE7     		b	.L459
 5933              	.L453:
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5934              		.loc 1 4971 6 is_stmt 1 view .LVU1621
 5935 0082 FA6C     		ldr	r2, [r7, #76]
 5936 0084 B2F1FF3F 		cmp	r2, #-1
 5937 0088 EAD0     		beq	.L459
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5938              		.loc 1 4971 6 discriminator 1 view .LVU1622
 5939              	.LBB215:
 5940              	.LBI215:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5941              		.loc 2 191 30 view .LVU1623
 5942              	.LBB216:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5943              		.loc 2 193 1 view .LVU1624
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5944              		.loc 2 195 2 view .LVU1625
 5945              		.syntax unified
 5946              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5947 008a 4FF05003 			mov r3, #80												
 5948 008e 83F31188 		msr basepri, r3											
 5949 0092 BFF36F8F 		isb														
 5950 0096 BFF34F8F 		dsb														
 5951              	
 5952              	@ 0 "" 2
 5953              	.LVL379:
 5954              		.thumb
 5955              		.syntax unified
 5956              	.L461:
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5957              		.loc 2 195 2 is_stmt 0 view .LVU1626
 5958              	.LBE216:
 5959              	.LBE215:
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5960              		.loc 1 4971 6 is_stmt 1 discriminator 3 view .LVU1627
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 5961              		.loc 1 4971 6 discriminator 3 view .LVU1628
 5962 009a FEE7     		b	.L461
 5963              	.LVL380:
 5964              	.L474:
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5965              		.loc 1 4982 5 view .LVU1629
 5966 009c BB6A     		ldr	r3, [r7, #40]
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 228


 5967              	.LVL381:
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5968              		.loc 1 4982 5 is_stmt 0 view .LVU1630
 5969 009e 43B1     		cbz	r3, .L462
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5970              		.loc 1 4982 5 is_stmt 1 discriminator 1 view .LVU1631
 5971              	.LBB217:
 5972              	.LBI217:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 5973              		.loc 2 191 30 view .LVU1632
 5974              	.LBB218:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 5975              		.loc 2 193 1 view .LVU1633
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5976              		.loc 2 195 2 view .LVU1634
 5977              		.syntax unified
 5978              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 5979 00a0 4FF05003 			mov r3, #80												
 5980 00a4 83F31188 		msr basepri, r3											
 5981 00a8 BFF36F8F 		isb														
 5982 00ac BFF34F8F 		dsb														
 5983              	
 5984              	@ 0 "" 2
 5985              		.thumb
 5986              		.syntax unified
 5987              	.L463:
 5988              	.LBE218:
 5989              	.LBE217:
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5990              		.loc 1 4982 5 discriminator 3 view .LVU1635
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5991              		.loc 1 4982 5 discriminator 3 view .LVU1636
 5992 00b0 FEE7     		b	.L463
 5993              	.L462:
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5994              		.loc 1 4982 82 discriminator 2 view .LVU1637
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5995              		.loc 1 4984 5 view .LVU1638
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5996              		.loc 1 4984 30 is_stmt 0 view .LVU1639
 5997 00b2 174B     		ldr	r3, .L475
 5998 00b4 1B68     		ldr	r3, [r3]
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5999              		.loc 1 4984 7 view .LVU1640
 6000 00b6 0BBB     		cbnz	r3, .L464
4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6001              		.loc 1 4986 6 is_stmt 1 view .LVU1641
4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6002              		.loc 1 4986 15 is_stmt 0 view .LVU1642
 6003 00b8 3C1D     		adds	r4, r7, #4
 6004 00ba 2046     		mov	r0, r4
 6005 00bc FFF7FEFF 		bl	uxListRemove
 6006              	.LVL382:
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6007              		.loc 1 4987 6 is_stmt 1 view .LVU1643
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6008              		.loc 1 4987 6 view .LVU1644
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 229


 6009 00c0 F86A     		ldr	r0, [r7, #44]
 6010 00c2 0123     		movs	r3, #1
 6011 00c4 8340     		lsls	r3, r3, r0
 6012 00c6 134A     		ldr	r2, .L475+4
 6013 00c8 1168     		ldr	r1, [r2]
 6014 00ca 0B43     		orrs	r3, r3, r1
 6015 00cc 1360     		str	r3, [r2]
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6016              		.loc 1 4987 6 view .LVU1645
 6017 00ce 00EB8000 		add	r0, r0, r0, lsl #2
 6018 00d2 2146     		mov	r1, r4
 6019 00d4 104B     		ldr	r3, .L475+8
 6020 00d6 03EB8000 		add	r0, r3, r0, lsl #2
 6021 00da FFF7FEFF 		bl	vListInsertEnd
 6022              	.LVL383:
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6023              		.loc 1 4987 36 discriminator 1 view .LVU1646
 6024              	.L465:
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6025              		.loc 1 4996 5 view .LVU1647
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6026              		.loc 1 4996 14 is_stmt 0 view .LVU1648
 6027 00de FA6A     		ldr	r2, [r7, #44]
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6028              		.loc 1 4996 41 view .LVU1649
 6029 00e0 0E4B     		ldr	r3, .L475+12
 6030 00e2 1B68     		ldr	r3, [r3]
 6031 00e4 DB6A     		ldr	r3, [r3, #44]
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6032              		.loc 1 4996 7 view .LVU1650
 6033 00e6 9A42     		cmp	r2, r3
 6034 00e8 10D9     		bls	.L469
5000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6035              		.loc 1 5000 6 is_stmt 1 view .LVU1651
5000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6036              		.loc 1 5000 8 is_stmt 0 view .LVU1652
 6037 00ea 069B     		ldr	r3, [sp, #24]
 6038 00ec 13B1     		cbz	r3, .L466
5002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6039              		.loc 1 5002 7 is_stmt 1 view .LVU1653
5002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6040              		.loc 1 5002 34 is_stmt 0 view .LVU1654
 6041 00ee 0123     		movs	r3, #1
 6042 00f0 069A     		ldr	r2, [sp, #24]
 6043 00f2 1360     		str	r3, [r2]
 6044              	.L466:
5008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6045              		.loc 1 5008 6 is_stmt 1 view .LVU1655
5008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6046              		.loc 1 5008 20 is_stmt 0 view .LVU1656
 6047 00f4 0120     		movs	r0, #1
 6048 00f6 0A4B     		ldr	r3, .L475+16
 6049 00f8 1860     		str	r0, [r3]
 6050 00fa B4E7     		b	.L460
 6051              	.L464:
4993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6052              		.loc 1 4993 6 is_stmt 1 view .LVU1657
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 230


 6053 00fc 07F11801 		add	r1, r7, #24
 6054 0100 0848     		ldr	r0, .L475+20
 6055 0102 FFF7FEFF 		bl	vListInsertEnd
 6056              	.LVL384:
 6057 0106 EAE7     		b	.L465
 6058              	.LVL385:
 6059              	.L467:
4958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6060              		.loc 1 4958 15 is_stmt 0 view .LVU1658
 6061 0108 0020     		movs	r0, #0
 6062 010a ACE7     		b	.L460
 6063              	.LVL386:
 6064              	.L469:
4958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6065              		.loc 1 4958 15 view .LVU1659
 6066 010c 0120     		movs	r0, #1
 6067 010e AAE7     		b	.L460
 6068              	.L476:
 6069              		.align	2
 6070              	.L475:
 6071 0110 00000000 		.word	uxSchedulerSuspended
 6072 0114 00000000 		.word	uxTopReadyPriority
 6073 0118 00000000 		.word	pxReadyTasksLists
 6074 011c 00000000 		.word	pxCurrentTCB
 6075 0120 00000000 		.word	xYieldPending
 6076 0124 00000000 		.word	xPendingReadyList
 6077              		.cfi_endproc
 6078              	.LFE52:
 6080              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 6081              		.align	1
 6082              		.global	vTaskNotifyGiveFromISR
 6083              		.syntax unified
 6084              		.thumb
 6085              		.thumb_func
 6087              	vTaskNotifyGiveFromISR:
 6088              	.LVL387:
 6089              	.LFB53:
5027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 6090              		.loc 1 5027 2 is_stmt 1 view -0
 6091              		.cfi_startproc
 6092              		@ args = 0, pretend = 0, frame = 0
 6093              		@ frame_needed = 0, uses_anonymous_args = 0
5027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 6094              		.loc 1 5027 2 is_stmt 0 view .LVU1661
 6095 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 6096              	.LCFI54:
 6097              		.cfi_def_cfa_offset 24
 6098              		.cfi_offset 3, -24
 6099              		.cfi_offset 4, -20
 6100              		.cfi_offset 5, -16
 6101              		.cfi_offset 6, -12
 6102              		.cfi_offset 7, -8
 6103              		.cfi_offset 14, -4
5028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 6104              		.loc 1 5028 2 is_stmt 1 view .LVU1662
5029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 6105              		.loc 1 5029 2 view .LVU1663
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 231


5030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6106              		.loc 1 5030 2 view .LVU1664
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6107              		.loc 1 5032 3 view .LVU1665
 6108 0002 E0B1     		cbz	r0, .L487
 6109 0004 0D46     		mov	r5, r1
 6110 0006 0446     		mov	r4, r0
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6111              		.loc 1 5032 32 discriminator 2 view .LVU1666
5050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6112              		.loc 1 5050 3 view .LVU1667
 6113 0008 FFF7FEFF 		bl	vPortValidateInterruptPriority
 6114              	.LVL388:
5052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6115              		.loc 1 5052 3 view .LVU1668
5054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 6116              		.loc 1 5054 3 view .LVU1669
 6117              	.LBB219:
 6118              	.LBI219:
 207:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6119              		.loc 2 207 34 view .LVU1670
 6120              	.LBB220:
 209:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6121              		.loc 2 209 1 view .LVU1671
 211:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6122              		.loc 2 211 2 view .LVU1672
 6123              		.syntax unified
 6124              	@ 211 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6125 000c EFF31183 			mrs r3, basepri											
 6126 0010 4FF05002 		mov r2, #80												
 6127 0014 82F31188 		msr basepri, r2											
 6128 0018 BFF36F8F 		isb														
 6129 001c BFF34F8F 		dsb														
 6130              	
 6131              	@ 0 "" 2
 6132              		.thumb
 6133              		.syntax unified
 6134 0020 1E46     		mov	r6, r3
 6135              	.LVL389:
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 6136              		.loc 2 223 2 view .LVU1673
 223:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 6137              		.loc 2 223 2 is_stmt 0 view .LVU1674
 6138              	.LBE220:
 6139              	.LBE219:
5056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6140              		.loc 1 5056 4 is_stmt 1 view .LVU1675
5056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6141              		.loc 1 5056 26 is_stmt 0 view .LVU1676
 6142 0022 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 6143              	.LVL390:
5056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6144              		.loc 1 5056 26 view .LVU1677
 6145 0026 DBB2     		uxtb	r3, r3
 6146              	.LVL391:
5057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6147              		.loc 1 5057 4 is_stmt 1 view .LVU1678
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 232


5057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6148              		.loc 1 5057 25 is_stmt 0 view .LVU1679
 6149 0028 0222     		movs	r2, #2
 6150 002a 84F85020 		strb	r2, [r4, #80]
5061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6151              		.loc 1 5061 4 is_stmt 1 view .LVU1680
5061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6152              		.loc 1 5061 11 is_stmt 0 view .LVU1681
 6153 002e E26C     		ldr	r2, [r4, #76]
5061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6154              		.loc 1 5061 30 view .LVU1682
 6155 0030 0132     		adds	r2, r2, #1
 6156 0032 E264     		str	r2, [r4, #76]
5063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6157              		.loc 1 5063 36 is_stmt 1 view .LVU1683
5067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6158              		.loc 1 5067 4 view .LVU1684
5067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6159              		.loc 1 5067 6 is_stmt 0 view .LVU1685
 6160 0034 012B     		cmp	r3, #1
 6161 0036 0BD0     		beq	.L488
 6162              	.LVL392:
 6163              	.L480:
5100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6164              		.loc 1 5100 30 is_stmt 1 view .LVU1686
5104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6165              		.loc 1 5104 3 view .LVU1687
 6166              	.LBB221:
 6167              	.LBI221:
 227:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6168              		.loc 2 227 30 view .LVU1688
 6169              	.LBB222:
 6170              		.loc 2 229 2 view .LVU1689
 6171              		.syntax unified
 6172              	@ 229 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6173 0038 86F31188 			msr basepri, r6	
 6174              	@ 0 "" 2
 6175              		.thumb
 6176              		.syntax unified
 6177              	.LBE222:
 6178              	.LBE221:
5105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6179              		.loc 1 5105 2 is_stmt 0 view .LVU1690
 6180 003c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6181              	.LVL393:
 6182              	.L487:
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6183              		.loc 1 5032 3 is_stmt 1 discriminator 1 view .LVU1691
 6184              	.LBB223:
 6185              	.LBI223:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6186              		.loc 2 191 30 view .LVU1692
 6187              	.LBB224:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6188              		.loc 2 193 1 view .LVU1693
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6189              		.loc 2 195 2 view .LVU1694
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 233


 6190              		.syntax unified
 6191              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6192 003e 4FF05003 			mov r3, #80												
 6193 0042 83F31188 		msr basepri, r3											
 6194 0046 BFF36F8F 		isb														
 6195 004a BFF34F8F 		dsb														
 6196              	
 6197              	@ 0 "" 2
 6198              		.thumb
 6199              		.syntax unified
 6200              	.L479:
 6201              	.LBE224:
 6202              	.LBE223:
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6203              		.loc 1 5032 3 discriminator 3 view .LVU1695
5032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6204              		.loc 1 5032 3 discriminator 3 view .LVU1696
 6205 004e FEE7     		b	.L479
 6206              	.LVL394:
 6207              	.L488:
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6208              		.loc 1 5070 5 view .LVU1697
 6209 0050 A36A     		ldr	r3, [r4, #40]
 6210              	.LVL395:
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6211              		.loc 1 5070 5 is_stmt 0 view .LVU1698
 6212 0052 43B1     		cbz	r3, .L481
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6213              		.loc 1 5070 5 is_stmt 1 discriminator 1 view .LVU1699
 6214              	.LBB225:
 6215              	.LBI225:
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 6216              		.loc 2 191 30 view .LVU1700
 6217              	.LBB226:
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 6218              		.loc 2 193 1 view .LVU1701
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6219              		.loc 2 195 2 view .LVU1702
 6220              		.syntax unified
 6221              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 6222 0054 4FF05003 			mov r3, #80												
 6223 0058 83F31188 		msr basepri, r3											
 6224 005c BFF36F8F 		isb														
 6225 0060 BFF34F8F 		dsb														
 6226              	
 6227              	@ 0 "" 2
 6228              		.thumb
 6229              		.syntax unified
 6230              	.L482:
 6231              	.LBE226:
 6232              	.LBE225:
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6233              		.loc 1 5070 5 discriminator 3 view .LVU1703
5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6234              		.loc 1 5070 5 discriminator 3 view .LVU1704
 6235 0064 FEE7     		b	.L482
 6236              	.L481:
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 234


5070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6237              		.loc 1 5070 82 discriminator 2 view .LVU1705
5072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6238              		.loc 1 5072 5 view .LVU1706
5072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6239              		.loc 1 5072 30 is_stmt 0 view .LVU1707
 6240 0066 144B     		ldr	r3, .L489
 6241 0068 1B68     		ldr	r3, [r3]
5072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6242              		.loc 1 5072 7 view .LVU1708
 6243 006a FBB9     		cbnz	r3, .L483
5074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6244              		.loc 1 5074 6 is_stmt 1 view .LVU1709
5074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6245              		.loc 1 5074 15 is_stmt 0 view .LVU1710
 6246 006c 271D     		adds	r7, r4, #4
 6247 006e 3846     		mov	r0, r7
 6248 0070 FFF7FEFF 		bl	uxListRemove
 6249              	.LVL396:
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6250              		.loc 1 5075 6 is_stmt 1 view .LVU1711
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6251              		.loc 1 5075 6 view .LVU1712
 6252 0074 E06A     		ldr	r0, [r4, #44]
 6253 0076 0123     		movs	r3, #1
 6254 0078 8340     		lsls	r3, r3, r0
 6255 007a 104A     		ldr	r2, .L489+4
 6256 007c 1168     		ldr	r1, [r2]
 6257 007e 0B43     		orrs	r3, r3, r1
 6258 0080 1360     		str	r3, [r2]
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6259              		.loc 1 5075 6 view .LVU1713
 6260 0082 00EB8000 		add	r0, r0, r0, lsl #2
 6261 0086 3946     		mov	r1, r7
 6262 0088 0D4B     		ldr	r3, .L489+8
 6263 008a 03EB8000 		add	r0, r3, r0, lsl #2
 6264 008e FFF7FEFF 		bl	vListInsertEnd
 6265              	.LVL397:
5075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6266              		.loc 1 5075 36 discriminator 1 view .LVU1714
 6267              	.L484:
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6268              		.loc 1 5084 5 view .LVU1715
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6269              		.loc 1 5084 14 is_stmt 0 view .LVU1716
 6270 0092 E26A     		ldr	r2, [r4, #44]
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6271              		.loc 1 5084 41 view .LVU1717
 6272 0094 0B4B     		ldr	r3, .L489+12
 6273 0096 1B68     		ldr	r3, [r3]
 6274 0098 DB6A     		ldr	r3, [r3, #44]
5084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 6275              		.loc 1 5084 7 view .LVU1718
 6276 009a 9A42     		cmp	r2, r3
 6277 009c CCD9     		bls	.L480
5088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6278              		.loc 1 5088 6 is_stmt 1 view .LVU1719
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 235


5088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 6279              		.loc 1 5088 8 is_stmt 0 view .LVU1720
 6280 009e 0DB1     		cbz	r5, .L485
5090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6281              		.loc 1 5090 7 is_stmt 1 view .LVU1721
5090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 6282              		.loc 1 5090 34 is_stmt 0 view .LVU1722
 6283 00a0 0123     		movs	r3, #1
 6284 00a2 2B60     		str	r3, [r5]
 6285              	.L485:
5096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6286              		.loc 1 5096 6 is_stmt 1 view .LVU1723
5096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6287              		.loc 1 5096 20 is_stmt 0 view .LVU1724
 6288 00a4 084B     		ldr	r3, .L489+16
 6289 00a6 0122     		movs	r2, #1
 6290 00a8 1A60     		str	r2, [r3]
 6291 00aa C5E7     		b	.L480
 6292              	.L483:
5081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 6293              		.loc 1 5081 6 is_stmt 1 view .LVU1725
 6294 00ac 04F11801 		add	r1, r4, #24
 6295 00b0 0648     		ldr	r0, .L489+20
 6296 00b2 FFF7FEFF 		bl	vListInsertEnd
 6297              	.LVL398:
 6298 00b6 ECE7     		b	.L484
 6299              	.L490:
 6300              		.align	2
 6301              	.L489:
 6302 00b8 00000000 		.word	uxSchedulerSuspended
 6303 00bc 00000000 		.word	uxTopReadyPriority
 6304 00c0 00000000 		.word	pxReadyTasksLists
 6305 00c4 00000000 		.word	pxCurrentTCB
 6306 00c8 00000000 		.word	xYieldPending
 6307 00cc 00000000 		.word	xPendingReadyList
 6308              		.cfi_endproc
 6309              	.LFE53:
 6311              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 6312              		.align	1
 6313              		.global	xTaskNotifyStateClear
 6314              		.syntax unified
 6315              		.thumb
 6316              		.thumb_func
 6318              	xTaskNotifyStateClear:
 6319              	.LVL399:
 6320              	.LFB54:
5113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6321              		.loc 1 5113 2 view -0
 6322              		.cfi_startproc
 6323              		@ args = 0, pretend = 0, frame = 0
 6324              		@ frame_needed = 0, uses_anonymous_args = 0
5113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6325              		.loc 1 5113 2 is_stmt 0 view .LVU1727
 6326 0000 10B5     		push	{r4, lr}
 6327              	.LCFI55:
 6328              		.cfi_def_cfa_offset 8
 6329              		.cfi_offset 4, -8
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 236


 6330              		.cfi_offset 14, -4
5114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 6331              		.loc 1 5114 2 is_stmt 1 view .LVU1728
5115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6332              		.loc 1 5115 2 view .LVU1729
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6333              		.loc 1 5119 3 view .LVU1730
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6334              		.loc 1 5119 11 is_stmt 0 view .LVU1731
 6335 0002 0446     		mov	r4, r0
 6336 0004 58B1     		cbz	r0, .L496
 6337              	.LVL400:
 6338              	.L492:
5121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 6339              		.loc 1 5121 3 is_stmt 1 view .LVU1732
 6340 0006 FFF7FEFF 		bl	vPortEnterCritical
 6341              	.LVL401:
5123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6342              		.loc 1 5123 4 view .LVU1733
5123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6343              		.loc 1 5123 13 is_stmt 0 view .LVU1734
 6344 000a 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 6345 000e DBB2     		uxtb	r3, r3
5123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 6346              		.loc 1 5123 6 view .LVU1735
 6347 0010 022B     		cmp	r3, #2
 6348 0012 07D0     		beq	.L497
5130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6349              		.loc 1 5130 13 view .LVU1736
 6350 0014 0024     		movs	r4, #0
 6351              	.LVL402:
 6352              	.L493:
5133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6353              		.loc 1 5133 3 is_stmt 1 view .LVU1737
 6354 0016 FFF7FEFF 		bl	vPortExitCritical
 6355              	.LVL403:
5135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6356              		.loc 1 5135 3 view .LVU1738
5136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6357              		.loc 1 5136 2 is_stmt 0 view .LVU1739
 6358 001a 2046     		mov	r0, r4
 6359 001c 10BD     		pop	{r4, pc}
 6360              	.LVL404:
 6361              	.L496:
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6362              		.loc 1 5119 11 discriminator 1 view .LVU1740
 6363 001e 044B     		ldr	r3, .L498
 6364 0020 1C68     		ldr	r4, [r3]
 6365              	.LVL405:
5119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6366              		.loc 1 5119 11 discriminator 1 view .LVU1741
 6367 0022 F0E7     		b	.L492
 6368              	.LVL406:
 6369              	.L497:
5125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 6370              		.loc 1 5125 5 is_stmt 1 view .LVU1742
5125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 237


 6371              		.loc 1 5125 26 is_stmt 0 view .LVU1743
 6372 0024 0023     		movs	r3, #0
 6373 0026 84F85030 		strb	r3, [r4, #80]
5126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6374              		.loc 1 5126 5 is_stmt 1 view .LVU1744
 6375              	.LVL407:
5126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6376              		.loc 1 5126 13 is_stmt 0 view .LVU1745
 6377 002a 0124     		movs	r4, #1
 6378              	.LVL408:
5126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 6379              		.loc 1 5126 13 view .LVU1746
 6380 002c F3E7     		b	.L493
 6381              	.L499:
 6382 002e 00BF     		.align	2
 6383              	.L498:
 6384 0030 00000000 		.word	pxCurrentTCB
 6385              		.cfi_endproc
 6386              	.LFE54:
 6388              		.section	.text.ulTaskNotifyValueClear,"ax",%progbits
 6389              		.align	1
 6390              		.global	ulTaskNotifyValueClear
 6391              		.syntax unified
 6392              		.thumb
 6393              		.thumb_func
 6395              	ulTaskNotifyValueClear:
 6396              	.LVL409:
 6397              	.LFB55:
5144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6398              		.loc 1 5144 2 is_stmt 1 view -0
 6399              		.cfi_startproc
 6400              		@ args = 0, pretend = 0, frame = 0
 6401              		@ frame_needed = 0, uses_anonymous_args = 0
5144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 6402              		.loc 1 5144 2 is_stmt 0 view .LVU1748
 6403 0000 70B5     		push	{r4, r5, r6, lr}
 6404              	.LCFI56:
 6405              		.cfi_def_cfa_offset 16
 6406              		.cfi_offset 4, -16
 6407              		.cfi_offset 5, -12
 6408              		.cfi_offset 6, -8
 6409              		.cfi_offset 14, -4
 6410 0002 0C46     		mov	r4, r1
5145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 6411              		.loc 1 5145 2 is_stmt 1 view .LVU1749
5146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6412              		.loc 1 5146 2 view .LVU1750
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6413              		.loc 1 5150 3 view .LVU1751
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6414              		.loc 1 5150 11 is_stmt 0 view .LVU1752
 6415 0004 0546     		mov	r5, r0
 6416 0006 60B1     		cbz	r0, .L503
 6417              	.LVL410:
 6418              	.L501:
5152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 6419              		.loc 1 5152 3 is_stmt 1 view .LVU1753
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 238


 6420 0008 FFF7FEFF 		bl	vPortEnterCritical
 6421              	.LVL411:
5156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
 6422              		.loc 1 5156 4 view .LVU1754
5156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
 6423              		.loc 1 5156 27 is_stmt 0 view .LVU1755
 6424 000c 064B     		ldr	r3, .L504
 6425 000e 1B68     		ldr	r3, [r3]
5156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ulNotifiedValue &= ~ulBitsToClear;
 6426              		.loc 1 5156 13 view .LVU1756
 6427 0010 DE6C     		ldr	r6, [r3, #76]
 6428              	.LVL412:
5157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 6429              		.loc 1 5157 4 is_stmt 1 view .LVU1757
5157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 6430              		.loc 1 5157 9 is_stmt 0 view .LVU1758
 6431 0012 EB6C     		ldr	r3, [r5, #76]
5157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 6432              		.loc 1 5157 27 view .LVU1759
 6433 0014 23EA0403 		bic	r3, r3, r4
 6434 0018 EB64     		str	r3, [r5, #76]
5159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6435              		.loc 1 5159 3 is_stmt 1 view .LVU1760
 6436 001a FFF7FEFF 		bl	vPortExitCritical
 6437              	.LVL413:
5161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 6438              		.loc 1 5161 3 view .LVU1761
5162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6439              		.loc 1 5162 2 is_stmt 0 view .LVU1762
 6440 001e 3046     		mov	r0, r6
 6441 0020 70BD     		pop	{r4, r5, r6, pc}
 6442              	.LVL414:
 6443              	.L503:
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6444              		.loc 1 5150 11 discriminator 1 view .LVU1763
 6445 0022 014B     		ldr	r3, .L504
 6446 0024 1D68     		ldr	r5, [r3]
 6447              	.LVL415:
5150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 6448              		.loc 1 5150 11 discriminator 1 view .LVU1764
 6449 0026 EFE7     		b	.L501
 6450              	.L505:
 6451              		.align	2
 6452              	.L504:
 6453 0028 00000000 		.word	pxCurrentTCB
 6454              		.cfi_endproc
 6455              	.LFE55:
 6457              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
 6458              		.align	2
 6461              	uxSchedulerSuspended:
 6462 0000 00000000 		.space	4
 6463              		.section	.bss.xIdleTaskHandle,"aw",%nobits
 6464              		.align	2
 6467              	xIdleTaskHandle:
 6468 0000 00000000 		.space	4
 6469              		.section	.bss.xNextTaskUnblockTime,"aw",%nobits
 6470              		.align	2
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 239


 6473              	xNextTaskUnblockTime:
 6474 0000 00000000 		.space	4
 6475              		.section	.bss.uxTaskNumber,"aw",%nobits
 6476              		.align	2
 6479              	uxTaskNumber:
 6480 0000 00000000 		.space	4
 6481              		.section	.bss.xNumOfOverflows,"aw",%nobits
 6482              		.align	2
 6485              	xNumOfOverflows:
 6486 0000 00000000 		.space	4
 6487              		.section	.bss.xYieldPending,"aw",%nobits
 6488              		.align	2
 6491              	xYieldPending:
 6492 0000 00000000 		.space	4
 6493              		.section	.bss.xPendedTicks,"aw",%nobits
 6494              		.align	2
 6497              	xPendedTicks:
 6498 0000 00000000 		.space	4
 6499              		.section	.bss.xSchedulerRunning,"aw",%nobits
 6500              		.align	2
 6503              	xSchedulerRunning:
 6504 0000 00000000 		.space	4
 6505              		.section	.bss.uxTopReadyPriority,"aw",%nobits
 6506              		.align	2
 6509              	uxTopReadyPriority:
 6510 0000 00000000 		.space	4
 6511              		.section	.bss.xTickCount,"aw",%nobits
 6512              		.align	2
 6515              	xTickCount:
 6516 0000 00000000 		.space	4
 6517              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
 6518              		.align	2
 6521              	uxCurrentNumberOfTasks:
 6522 0000 00000000 		.space	4
 6523              		.section	.bss.xSuspendedTaskList,"aw",%nobits
 6524              		.align	2
 6527              	xSuspendedTaskList:
 6528 0000 00000000 		.space	20
 6528      00000000 
 6528      00000000 
 6528      00000000 
 6528      00000000 
 6529              		.section	.bss.uxDeletedTasksWaitingCleanUp,"aw",%nobits
 6530              		.align	2
 6533              	uxDeletedTasksWaitingCleanUp:
 6534 0000 00000000 		.space	4
 6535              		.section	.bss.xTasksWaitingTermination,"aw",%nobits
 6536              		.align	2
 6539              	xTasksWaitingTermination:
 6540 0000 00000000 		.space	20
 6540      00000000 
 6540      00000000 
 6540      00000000 
 6540      00000000 
 6541              		.section	.bss.xPendingReadyList,"aw",%nobits
 6542              		.align	2
 6545              	xPendingReadyList:
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 240


 6546 0000 00000000 		.space	20
 6546      00000000 
 6546      00000000 
 6546      00000000 
 6546      00000000 
 6547              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
 6548              		.align	2
 6551              	pxOverflowDelayedTaskList:
 6552 0000 00000000 		.space	4
 6553              		.section	.bss.pxDelayedTaskList,"aw",%nobits
 6554              		.align	2
 6557              	pxDelayedTaskList:
 6558 0000 00000000 		.space	4
 6559              		.section	.bss.xDelayedTaskList2,"aw",%nobits
 6560              		.align	2
 6563              	xDelayedTaskList2:
 6564 0000 00000000 		.space	20
 6564      00000000 
 6564      00000000 
 6564      00000000 
 6564      00000000 
 6565              		.section	.bss.xDelayedTaskList1,"aw",%nobits
 6566              		.align	2
 6569              	xDelayedTaskList1:
 6570 0000 00000000 		.space	20
 6570      00000000 
 6570      00000000 
 6570      00000000 
 6570      00000000 
 6571              		.section	.bss.pxReadyTasksLists,"aw",%nobits
 6572              		.align	2
 6575              	pxReadyTasksLists:
 6576 0000 00000000 		.space	140
 6576      00000000 
 6576      00000000 
 6576      00000000 
 6576      00000000 
 6577              		.global	pxCurrentTCB
 6578              		.section	.bss.pxCurrentTCB,"aw",%nobits
 6579              		.align	2
 6582              	pxCurrentTCB:
 6583 0000 00000000 		.space	4
 6584              		.text
 6585              	.Letext0:
 6586              		.file 3 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/lib/gcc/arm-none
 6587              		.file 4 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 6588              		.file 5 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 6589              		.file 6 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 6590              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 6591              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 6592              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 6593              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 241


DEFINED SYMBOLS
                            *ABS*:00000000 tasks.c
C:\usertemp\ccGJG3pI.s:20     .text.prvTaskIsTaskSuspended:00000000 $t
C:\usertemp\ccGJG3pI.s:25     .text.prvTaskIsTaskSuspended:00000000 prvTaskIsTaskSuspended
C:\usertemp\ccGJG3pI.s:111    .text.prvTaskIsTaskSuspended:00000038 $d
C:\usertemp\ccGJG3pI.s:6527   .bss.xSuspendedTaskList:00000000 xSuspendedTaskList
C:\usertemp\ccGJG3pI.s:6545   .bss.xPendingReadyList:00000000 xPendingReadyList
C:\usertemp\ccGJG3pI.s:117    .text.prvResetNextTaskUnblockTime:00000000 $t
C:\usertemp\ccGJG3pI.s:122    .text.prvResetNextTaskUnblockTime:00000000 prvResetNextTaskUnblockTime
C:\usertemp\ccGJG3pI.s:165    .text.prvResetNextTaskUnblockTime:00000024 $d
C:\usertemp\ccGJG3pI.s:6557   .bss.pxDelayedTaskList:00000000 pxDelayedTaskList
C:\usertemp\ccGJG3pI.s:6473   .bss.xNextTaskUnblockTime:00000000 xNextTaskUnblockTime
C:\usertemp\ccGJG3pI.s:171    .text.prvInitialiseNewTask:00000000 $t
C:\usertemp\ccGJG3pI.s:176    .text.prvInitialiseNewTask:00000000 prvInitialiseNewTask
C:\usertemp\ccGJG3pI.s:328    .text.prvInitialiseTaskLists:00000000 $t
C:\usertemp\ccGJG3pI.s:333    .text.prvInitialiseTaskLists:00000000 prvInitialiseTaskLists
C:\usertemp\ccGJG3pI.s:406    .text.prvInitialiseTaskLists:00000048 $d
C:\usertemp\ccGJG3pI.s:6575   .bss.pxReadyTasksLists:00000000 pxReadyTasksLists
C:\usertemp\ccGJG3pI.s:6569   .bss.xDelayedTaskList1:00000000 xDelayedTaskList1
C:\usertemp\ccGJG3pI.s:6563   .bss.xDelayedTaskList2:00000000 xDelayedTaskList2
C:\usertemp\ccGJG3pI.s:6539   .bss.xTasksWaitingTermination:00000000 xTasksWaitingTermination
C:\usertemp\ccGJG3pI.s:6551   .bss.pxOverflowDelayedTaskList:00000000 pxOverflowDelayedTaskList
C:\usertemp\ccGJG3pI.s:418    .text.prvAddNewTaskToReadyList:00000000 $t
C:\usertemp\ccGJG3pI.s:423    .text.prvAddNewTaskToReadyList:00000000 prvAddNewTaskToReadyList
C:\usertemp\ccGJG3pI.s:559    .text.prvAddNewTaskToReadyList:00000090 $d
C:\usertemp\ccGJG3pI.s:6521   .bss.uxCurrentNumberOfTasks:00000000 uxCurrentNumberOfTasks
C:\usertemp\ccGJG3pI.s:6582   .bss.pxCurrentTCB:00000000 pxCurrentTCB
C:\usertemp\ccGJG3pI.s:6503   .bss.xSchedulerRunning:00000000 xSchedulerRunning
C:\usertemp\ccGJG3pI.s:6479   .bss.uxTaskNumber:00000000 uxTaskNumber
C:\usertemp\ccGJG3pI.s:6509   .bss.uxTopReadyPriority:00000000 uxTopReadyPriority
C:\usertemp\ccGJG3pI.s:569    .text.prvDeleteTCB:00000000 $t
C:\usertemp\ccGJG3pI.s:574    .text.prvDeleteTCB:00000000 prvDeleteTCB
C:\usertemp\ccGJG3pI.s:649    .text.prvCheckTasksWaitingTermination:00000000 $t
C:\usertemp\ccGJG3pI.s:654    .text.prvCheckTasksWaitingTermination:00000000 prvCheckTasksWaitingTermination
C:\usertemp\ccGJG3pI.s:727    .text.prvCheckTasksWaitingTermination:00000040 $d
C:\usertemp\ccGJG3pI.s:6533   .bss.uxDeletedTasksWaitingCleanUp:00000000 uxDeletedTasksWaitingCleanUp
C:\usertemp\ccGJG3pI.s:734    .text.prvIdleTask:00000000 $t
C:\usertemp\ccGJG3pI.s:739    .text.prvIdleTask:00000000 prvIdleTask
C:\usertemp\ccGJG3pI.s:788    .text.prvIdleTask:00000024 $d
C:\usertemp\ccGJG3pI.s:793    .text.prvAddCurrentTaskToDelayedList:00000000 $t
C:\usertemp\ccGJG3pI.s:798    .text.prvAddCurrentTaskToDelayedList:00000000 prvAddCurrentTaskToDelayedList
C:\usertemp\ccGJG3pI.s:921    .text.prvAddCurrentTaskToDelayedList:00000084 $d
C:\usertemp\ccGJG3pI.s:6515   .bss.xTickCount:00000000 xTickCount
C:\usertemp\ccGJG3pI.s:932    .text.xTaskCreateStatic:00000000 $t
C:\usertemp\ccGJG3pI.s:938    .text.xTaskCreateStatic:00000000 xTaskCreateStatic
C:\usertemp\ccGJG3pI.s:1100   .text.xTaskCreate:00000000 $t
C:\usertemp\ccGJG3pI.s:1106   .text.xTaskCreate:00000000 xTaskCreate
C:\usertemp\ccGJG3pI.s:1223   .text.vTaskDelete:00000000 $t
C:\usertemp\ccGJG3pI.s:1229   .text.vTaskDelete:00000000 vTaskDelete
C:\usertemp\ccGJG3pI.s:1412   .text.vTaskDelete:000000bc $d
C:\usertemp\ccGJG3pI.s:6461   .bss.uxSchedulerSuspended:00000000 uxSchedulerSuspended
C:\usertemp\ccGJG3pI.s:1425   .text.uxTaskPriorityGet:00000000 $t
C:\usertemp\ccGJG3pI.s:1431   .text.uxTaskPriorityGet:00000000 uxTaskPriorityGet
C:\usertemp\ccGJG3pI.s:1477   .text.uxTaskPriorityGet:0000001c $d
C:\usertemp\ccGJG3pI.s:1482   .text.uxTaskPriorityGetFromISR:00000000 $t
C:\usertemp\ccGJG3pI.s:1488   .text.uxTaskPriorityGetFromISR:00000000 uxTaskPriorityGetFromISR
C:\usertemp\ccGJG3pI.s:1567   .text.uxTaskPriorityGetFromISR:0000002c $d
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 242


C:\usertemp\ccGJG3pI.s:1572   .text.vTaskPrioritySet:00000000 $t
C:\usertemp\ccGJG3pI.s:1578   .text.vTaskPrioritySet:00000000 vTaskPrioritySet
C:\usertemp\ccGJG3pI.s:1818   .text.vTaskPrioritySet:000000d8 $d
C:\usertemp\ccGJG3pI.s:1825   .text.vTaskResume:00000000 $t
C:\usertemp\ccGJG3pI.s:1831   .text.vTaskResume:00000000 vTaskResume
C:\usertemp\ccGJG3pI.s:1959   .text.vTaskResume:0000007c $d
C:\usertemp\ccGJG3pI.s:1966   .text.xTaskResumeFromISR:00000000 $t
C:\usertemp\ccGJG3pI.s:1972   .text.xTaskResumeFromISR:00000000 xTaskResumeFromISR
C:\usertemp\ccGJG3pI.s:2138   .text.xTaskResumeFromISR:00000090 $d
C:\usertemp\ccGJG3pI.s:2147   .rodata.vTaskStartScheduler.str1.4:00000000 $d
C:\usertemp\ccGJG3pI.s:2151   .text.vTaskStartScheduler:00000000 $t
C:\usertemp\ccGJG3pI.s:2157   .text.vTaskStartScheduler:00000000 vTaskStartScheduler
C:\usertemp\ccGJG3pI.s:2261   .text.vTaskStartScheduler:0000005c $d
C:\usertemp\ccGJG3pI.s:6467   .bss.xIdleTaskHandle:00000000 xIdleTaskHandle
C:\usertemp\ccGJG3pI.s:2271   .text.vTaskEndScheduler:00000000 $t
C:\usertemp\ccGJG3pI.s:2277   .text.vTaskEndScheduler:00000000 vTaskEndScheduler
C:\usertemp\ccGJG3pI.s:2320   .text.vTaskEndScheduler:00000020 $d
C:\usertemp\ccGJG3pI.s:2325   .text.vTaskSuspendAll:00000000 $t
C:\usertemp\ccGJG3pI.s:2331   .text.vTaskSuspendAll:00000000 vTaskSuspendAll
C:\usertemp\ccGJG3pI.s:2350   .text.vTaskSuspendAll:0000000c $d
C:\usertemp\ccGJG3pI.s:2355   .text.xTaskGetTickCount:00000000 $t
C:\usertemp\ccGJG3pI.s:2361   .text.xTaskGetTickCount:00000000 xTaskGetTickCount
C:\usertemp\ccGJG3pI.s:2382   .text.xTaskGetTickCount:00000008 $d
C:\usertemp\ccGJG3pI.s:2387   .text.xTaskGetTickCountFromISR:00000000 $t
C:\usertemp\ccGJG3pI.s:2393   .text.xTaskGetTickCountFromISR:00000000 xTaskGetTickCountFromISR
C:\usertemp\ccGJG3pI.s:2422   .text.xTaskGetTickCountFromISR:0000000c $d
C:\usertemp\ccGJG3pI.s:2427   .text.uxTaskGetNumberOfTasks:00000000 $t
C:\usertemp\ccGJG3pI.s:2433   .text.uxTaskGetNumberOfTasks:00000000 uxTaskGetNumberOfTasks
C:\usertemp\ccGJG3pI.s:2449   .text.uxTaskGetNumberOfTasks:00000008 $d
C:\usertemp\ccGJG3pI.s:2454   .text.pcTaskGetName:00000000 $t
C:\usertemp\ccGJG3pI.s:2460   .text.pcTaskGetName:00000000 pcTaskGetName
C:\usertemp\ccGJG3pI.s:2517   .text.pcTaskGetName:00000024 $d
C:\usertemp\ccGJG3pI.s:2522   .text.xTaskIncrementTick:00000000 $t
C:\usertemp\ccGJG3pI.s:2528   .text.xTaskIncrementTick:00000000 xTaskIncrementTick
C:\usertemp\ccGJG3pI.s:2792   .text.xTaskIncrementTick:000000ec $d
C:\usertemp\ccGJG3pI.s:6485   .bss.xNumOfOverflows:00000000 xNumOfOverflows
C:\usertemp\ccGJG3pI.s:6491   .bss.xYieldPending:00000000 xYieldPending
C:\usertemp\ccGJG3pI.s:6497   .bss.xPendedTicks:00000000 xPendedTicks
C:\usertemp\ccGJG3pI.s:2807   .text.xTaskResumeAll:00000000 $t
C:\usertemp\ccGJG3pI.s:2813   .text.xTaskResumeAll:00000000 xTaskResumeAll
C:\usertemp\ccGJG3pI.s:3045   .text.xTaskResumeAll:000000d8 $d
C:\usertemp\ccGJG3pI.s:3057   .text.vTaskDelay:00000000 $t
C:\usertemp\ccGJG3pI.s:3063   .text.vTaskDelay:00000000 vTaskDelay
C:\usertemp\ccGJG3pI.s:3153   .text.vTaskDelay:00000048 $d
C:\usertemp\ccGJG3pI.s:3158   .text.xTaskCatchUpTicks:00000000 $t
C:\usertemp\ccGJG3pI.s:3164   .text.xTaskCatchUpTicks:00000000 xTaskCatchUpTicks
C:\usertemp\ccGJG3pI.s:3229   .text.xTaskCatchUpTicks:00000030 $d
C:\usertemp\ccGJG3pI.s:3235   .text.vTaskSwitchContext:00000000 $t
C:\usertemp\ccGJG3pI.s:3241   .text.vTaskSwitchContext:00000000 vTaskSwitchContext
C:\usertemp\ccGJG3pI.s:3382   .text.vTaskSwitchContext:00000084 $d
C:\usertemp\ccGJG3pI.s:3393   .text.vTaskSuspend:00000000 $t
C:\usertemp\ccGJG3pI.s:3399   .text.vTaskSuspend:00000000 vTaskSuspend
C:\usertemp\ccGJG3pI.s:3601   .text.vTaskSuspend:000000d0 $d
C:\usertemp\ccGJG3pI.s:3612   .text.vTaskPlaceOnEventList:00000000 $t
C:\usertemp\ccGJG3pI.s:3618   .text.vTaskPlaceOnEventList:00000000 vTaskPlaceOnEventList
C:\usertemp\ccGJG3pI.s:3683   .text.vTaskPlaceOnEventList:0000002c $d
C:\usertemp\ccGJG3pI.s:3688   .text.vTaskPlaceOnUnorderedEventList:00000000 $t
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 243


C:\usertemp\ccGJG3pI.s:3694   .text.vTaskPlaceOnUnorderedEventList:00000000 vTaskPlaceOnUnorderedEventList
C:\usertemp\ccGJG3pI.s:3805   .text.vTaskPlaceOnUnorderedEventList:00000050 $d
C:\usertemp\ccGJG3pI.s:3811   .text.xTaskRemoveFromEventList:00000000 $t
C:\usertemp\ccGJG3pI.s:3817   .text.xTaskRemoveFromEventList:00000000 xTaskRemoveFromEventList
C:\usertemp\ccGJG3pI.s:3945   .text.xTaskRemoveFromEventList:00000074 $d
C:\usertemp\ccGJG3pI.s:3955   .text.vTaskRemoveFromUnorderedEventList:00000000 $t
C:\usertemp\ccGJG3pI.s:3961   .text.vTaskRemoveFromUnorderedEventList:00000000 vTaskRemoveFromUnorderedEventList
C:\usertemp\ccGJG3pI.s:4091   .text.vTaskRemoveFromUnorderedEventList:00000074 $d
C:\usertemp\ccGJG3pI.s:4100   .text.vTaskSetTimeOutState:00000000 $t
C:\usertemp\ccGJG3pI.s:4106   .text.vTaskSetTimeOutState:00000000 vTaskSetTimeOutState
C:\usertemp\ccGJG3pI.s:4173   .text.vTaskSetTimeOutState:00000030 $d
C:\usertemp\ccGJG3pI.s:4179   .text.vTaskInternalSetTimeOutState:00000000 $t
C:\usertemp\ccGJG3pI.s:4185   .text.vTaskInternalSetTimeOutState:00000000 vTaskInternalSetTimeOutState
C:\usertemp\ccGJG3pI.s:4208   .text.vTaskInternalSetTimeOutState:00000010 $d
C:\usertemp\ccGJG3pI.s:4214   .text.xTaskCheckForTimeOut:00000000 $t
C:\usertemp\ccGJG3pI.s:4220   .text.xTaskCheckForTimeOut:00000000 xTaskCheckForTimeOut
C:\usertemp\ccGJG3pI.s:4391   .text.xTaskCheckForTimeOut:0000007c $d
C:\usertemp\ccGJG3pI.s:4398   .text.vTaskMissedYield:00000000 $t
C:\usertemp\ccGJG3pI.s:4404   .text.vTaskMissedYield:00000000 vTaskMissedYield
C:\usertemp\ccGJG3pI.s:4421   .text.vTaskMissedYield:00000008 $d
C:\usertemp\ccGJG3pI.s:4426   .text.xTaskGetCurrentTaskHandle:00000000 $t
C:\usertemp\ccGJG3pI.s:4432   .text.xTaskGetCurrentTaskHandle:00000000 xTaskGetCurrentTaskHandle
C:\usertemp\ccGJG3pI.s:4451   .text.xTaskGetCurrentTaskHandle:00000008 $d
C:\usertemp\ccGJG3pI.s:4456   .text.xTaskGetSchedulerState:00000000 $t
C:\usertemp\ccGJG3pI.s:4462   .text.xTaskGetSchedulerState:00000000 xTaskGetSchedulerState
C:\usertemp\ccGJG3pI.s:4500   .text.xTaskGetSchedulerState:00000018 $d
C:\usertemp\ccGJG3pI.s:4506   .text.xTaskPriorityInherit:00000000 $t
C:\usertemp\ccGJG3pI.s:4512   .text.xTaskPriorityInherit:00000000 xTaskPriorityInherit
C:\usertemp\ccGJG3pI.s:4678   .text.xTaskPriorityInherit:000000a0 $d
C:\usertemp\ccGJG3pI.s:4685   .text.xTaskPriorityDisinherit:00000000 $t
C:\usertemp\ccGJG3pI.s:4691   .text.xTaskPriorityDisinherit:00000000 xTaskPriorityDisinherit
C:\usertemp\ccGJG3pI.s:4882   .text.xTaskPriorityDisinherit:000000a4 $d
C:\usertemp\ccGJG3pI.s:4889   .text.vTaskPriorityDisinheritAfterTimeout:00000000 $t
C:\usertemp\ccGJG3pI.s:4895   .text.vTaskPriorityDisinheritAfterTimeout:00000000 vTaskPriorityDisinheritAfterTimeout
C:\usertemp\ccGJG3pI.s:5087   .text.vTaskPriorityDisinheritAfterTimeout:000000a8 $d
C:\usertemp\ccGJG3pI.s:5094   .text.uxTaskResetEventItemValue:00000000 $t
C:\usertemp\ccGJG3pI.s:5100   .text.uxTaskResetEventItemValue:00000000 uxTaskResetEventItemValue
C:\usertemp\ccGJG3pI.s:5127   .text.uxTaskResetEventItemValue:00000014 $d
C:\usertemp\ccGJG3pI.s:5132   .text.pvTaskIncrementMutexHeldCount:00000000 $t
C:\usertemp\ccGJG3pI.s:5138   .text.pvTaskIncrementMutexHeldCount:00000000 pvTaskIncrementMutexHeldCount
C:\usertemp\ccGJG3pI.s:5169   .text.pvTaskIncrementMutexHeldCount:00000018 $d
C:\usertemp\ccGJG3pI.s:5174   .text.ulTaskNotifyTake:00000000 $t
C:\usertemp\ccGJG3pI.s:5180   .text.ulTaskNotifyTake:00000000 ulTaskNotifyTake
C:\usertemp\ccGJG3pI.s:5302   .text.ulTaskNotifyTake:00000074 $d
C:\usertemp\ccGJG3pI.s:5307   .text.xTaskNotifyWait:00000000 $t
C:\usertemp\ccGJG3pI.s:5313   .text.xTaskNotifyWait:00000000 xTaskNotifyWait
C:\usertemp\ccGJG3pI.s:5455   .text.xTaskNotifyWait:00000094 $d
C:\usertemp\ccGJG3pI.s:5460   .text.xTaskGenericNotify:00000000 $t
C:\usertemp\ccGJG3pI.s:5466   .text.xTaskGenericNotify:00000000 xTaskGenericNotify
C:\usertemp\ccGJG3pI.s:5522   .text.xTaskGenericNotify:0000002a $d
C:\usertemp\ccGJG3pI.s:5730   .text.xTaskGenericNotify:000000ec $d
C:\usertemp\ccGJG3pI.s:5737   .text.xTaskGenericNotifyFromISR:00000000 $t
C:\usertemp\ccGJG3pI.s:5743   .text.xTaskGenericNotifyFromISR:00000000 xTaskGenericNotifyFromISR
C:\usertemp\ccGJG3pI.s:5823   .text.xTaskGenericNotifyFromISR:00000042 $d
C:\usertemp\ccGJG3pI.s:6071   .text.xTaskGenericNotifyFromISR:00000110 $d
C:\usertemp\ccGJG3pI.s:6081   .text.vTaskNotifyGiveFromISR:00000000 $t
C:\usertemp\ccGJG3pI.s:6087   .text.vTaskNotifyGiveFromISR:00000000 vTaskNotifyGiveFromISR
ARM GAS  C:\usertemp\ccGJG3pI.s 			page 244


C:\usertemp\ccGJG3pI.s:6302   .text.vTaskNotifyGiveFromISR:000000b8 $d
C:\usertemp\ccGJG3pI.s:6312   .text.xTaskNotifyStateClear:00000000 $t
C:\usertemp\ccGJG3pI.s:6318   .text.xTaskNotifyStateClear:00000000 xTaskNotifyStateClear
C:\usertemp\ccGJG3pI.s:6384   .text.xTaskNotifyStateClear:00000030 $d
C:\usertemp\ccGJG3pI.s:6389   .text.ulTaskNotifyValueClear:00000000 $t
C:\usertemp\ccGJG3pI.s:6395   .text.ulTaskNotifyValueClear:00000000 ulTaskNotifyValueClear
C:\usertemp\ccGJG3pI.s:6453   .text.ulTaskNotifyValueClear:00000028 $d
C:\usertemp\ccGJG3pI.s:6458   .bss.uxSchedulerSuspended:00000000 $d
C:\usertemp\ccGJG3pI.s:6464   .bss.xIdleTaskHandle:00000000 $d
C:\usertemp\ccGJG3pI.s:6470   .bss.xNextTaskUnblockTime:00000000 $d
C:\usertemp\ccGJG3pI.s:6476   .bss.uxTaskNumber:00000000 $d
C:\usertemp\ccGJG3pI.s:6482   .bss.xNumOfOverflows:00000000 $d
C:\usertemp\ccGJG3pI.s:6488   .bss.xYieldPending:00000000 $d
C:\usertemp\ccGJG3pI.s:6494   .bss.xPendedTicks:00000000 $d
C:\usertemp\ccGJG3pI.s:6500   .bss.xSchedulerRunning:00000000 $d
C:\usertemp\ccGJG3pI.s:6506   .bss.uxTopReadyPriority:00000000 $d
C:\usertemp\ccGJG3pI.s:6512   .bss.xTickCount:00000000 $d
C:\usertemp\ccGJG3pI.s:6518   .bss.uxCurrentNumberOfTasks:00000000 $d
C:\usertemp\ccGJG3pI.s:6524   .bss.xSuspendedTaskList:00000000 $d
C:\usertemp\ccGJG3pI.s:6530   .bss.uxDeletedTasksWaitingCleanUp:00000000 $d
C:\usertemp\ccGJG3pI.s:6536   .bss.xTasksWaitingTermination:00000000 $d
C:\usertemp\ccGJG3pI.s:6542   .bss.xPendingReadyList:00000000 $d
C:\usertemp\ccGJG3pI.s:6548   .bss.pxOverflowDelayedTaskList:00000000 $d
C:\usertemp\ccGJG3pI.s:6554   .bss.pxDelayedTaskList:00000000 $d
C:\usertemp\ccGJG3pI.s:6560   .bss.xDelayedTaskList2:00000000 $d
C:\usertemp\ccGJG3pI.s:6566   .bss.xDelayedTaskList1:00000000 $d
C:\usertemp\ccGJG3pI.s:6572   .bss.pxReadyTasksLists:00000000 $d
C:\usertemp\ccGJG3pI.s:6579   .bss.pxCurrentTCB:00000000 $d
C:\usertemp\ccGJG3pI.s:5528   .text.xTaskGenericNotify:0000002f $d
C:\usertemp\ccGJG3pI.s:5528   .text.xTaskGenericNotify:00000030 $t
C:\usertemp\ccGJG3pI.s:5829   .text.xTaskGenericNotifyFromISR:00000047 $d
C:\usertemp\ccGJG3pI.s:5829   .text.xTaskGenericNotifyFromISR:00000048 $t

UNDEFINED SYMBOLS
vListInitialiseItem
pxPortInitialiseStack
vListInitialise
vPortEnterCritical
vListInsertEnd
vPortExitCritical
vPortFree
uxListRemove
vListInsert
pvPortMalloc
vPortValidateInterruptPriority
vApplicationGetIdleTaskMemory
xPortStartScheduler
vPortEndScheduler
