ARM GAS  C:\usertemp\ccP9fi6x.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_img_decoder.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "lvgl/src/draw/lv_img_decoder.c"
  19              		.section	.rodata.lv_img_decoder_built_in_info.str1.4,"aMS",%progbits,1
  20              		.align	2
  21              	.LC0:
  22 0000 62696E00 		.ascii	"bin\000"
  23              		.section	.text.lv_img_decoder_built_in_info,"ax",%progbits
  24              		.align	1
  25              		.global	lv_img_decoder_built_in_info
  26              		.syntax unified
  27              		.thumb
  28              		.thumb_func
  30              	lv_img_decoder_built_in_info:
  31              	.LVL0:
  32              	.LFB67:
   1:lvgl/src/draw/lv_img_decoder.c **** /**
   2:lvgl/src/draw/lv_img_decoder.c ****  * @file lv_img_decoder.c
   3:lvgl/src/draw/lv_img_decoder.c ****  *
   4:lvgl/src/draw/lv_img_decoder.c ****  */
   5:lvgl/src/draw/lv_img_decoder.c **** 
   6:lvgl/src/draw/lv_img_decoder.c **** /*********************
   7:lvgl/src/draw/lv_img_decoder.c ****  *      INCLUDES
   8:lvgl/src/draw/lv_img_decoder.c ****  *********************/
   9:lvgl/src/draw/lv_img_decoder.c **** #include "lv_img_decoder.h"
  10:lvgl/src/draw/lv_img_decoder.c **** #include "../misc/lv_assert.h"
  11:lvgl/src/draw/lv_img_decoder.c **** #include "../draw/lv_draw_img.h"
  12:lvgl/src/draw/lv_img_decoder.c **** #include "../misc/lv_ll.h"
  13:lvgl/src/draw/lv_img_decoder.c **** #include "../misc/lv_gc.h"
  14:lvgl/src/draw/lv_img_decoder.c **** 
  15:lvgl/src/draw/lv_img_decoder.c **** /*********************
  16:lvgl/src/draw/lv_img_decoder.c ****  *      DEFINES
  17:lvgl/src/draw/lv_img_decoder.c ****  *********************/
  18:lvgl/src/draw/lv_img_decoder.c **** #define CF_BUILT_IN_FIRST LV_IMG_CF_TRUE_COLOR
  19:lvgl/src/draw/lv_img_decoder.c **** #define CF_BUILT_IN_LAST LV_IMG_CF_ALPHA_8BIT
  20:lvgl/src/draw/lv_img_decoder.c **** 
  21:lvgl/src/draw/lv_img_decoder.c **** /**********************
  22:lvgl/src/draw/lv_img_decoder.c ****  *      TYPEDEFS
  23:lvgl/src/draw/lv_img_decoder.c ****  **********************/
  24:lvgl/src/draw/lv_img_decoder.c **** 
  25:lvgl/src/draw/lv_img_decoder.c **** typedef struct {
  26:lvgl/src/draw/lv_img_decoder.c ****     lv_fs_file_t f;
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 2


  27:lvgl/src/draw/lv_img_decoder.c ****     lv_color_t * palette;
  28:lvgl/src/draw/lv_img_decoder.c ****     lv_opa_t * opa;
  29:lvgl/src/draw/lv_img_decoder.c **** } lv_img_decoder_built_in_data_t;
  30:lvgl/src/draw/lv_img_decoder.c **** 
  31:lvgl/src/draw/lv_img_decoder.c **** /**********************
  32:lvgl/src/draw/lv_img_decoder.c ****  *  STATIC PROTOTYPES
  33:lvgl/src/draw/lv_img_decoder.c ****  **********************/
  34:lvgl/src/draw/lv_img_decoder.c **** static lv_res_t lv_img_decoder_built_in_line_true_color(lv_img_decoder_dsc_t * dsc, lv_coord_t x, l
  35:lvgl/src/draw/lv_img_decoder.c ****                                                         lv_coord_t len, uint8_t * buf);
  36:lvgl/src/draw/lv_img_decoder.c **** static lv_res_t lv_img_decoder_built_in_line_alpha(lv_img_decoder_dsc_t * dsc, lv_coord_t x, lv_coo
  37:lvgl/src/draw/lv_img_decoder.c ****                                                    lv_coord_t len, uint8_t * buf);
  38:lvgl/src/draw/lv_img_decoder.c **** static lv_res_t lv_img_decoder_built_in_line_indexed(lv_img_decoder_dsc_t * dsc, lv_coord_t x, lv_c
  39:lvgl/src/draw/lv_img_decoder.c ****                                                      lv_coord_t len, uint8_t * buf);
  40:lvgl/src/draw/lv_img_decoder.c **** 
  41:lvgl/src/draw/lv_img_decoder.c **** /**********************
  42:lvgl/src/draw/lv_img_decoder.c ****  *  STATIC VARIABLES
  43:lvgl/src/draw/lv_img_decoder.c ****  **********************/
  44:lvgl/src/draw/lv_img_decoder.c **** 
  45:lvgl/src/draw/lv_img_decoder.c **** /**********************
  46:lvgl/src/draw/lv_img_decoder.c ****  *      MACROS
  47:lvgl/src/draw/lv_img_decoder.c ****  **********************/
  48:lvgl/src/draw/lv_img_decoder.c **** 
  49:lvgl/src/draw/lv_img_decoder.c **** /**********************
  50:lvgl/src/draw/lv_img_decoder.c ****  *   GLOBAL FUNCTIONS
  51:lvgl/src/draw/lv_img_decoder.c ****  **********************/
  52:lvgl/src/draw/lv_img_decoder.c **** 
  53:lvgl/src/draw/lv_img_decoder.c **** /**
  54:lvgl/src/draw/lv_img_decoder.c ****  * Initialize the image decoder module
  55:lvgl/src/draw/lv_img_decoder.c ****  */
  56:lvgl/src/draw/lv_img_decoder.c **** void _lv_img_decoder_init(void)
  57:lvgl/src/draw/lv_img_decoder.c **** {
  58:lvgl/src/draw/lv_img_decoder.c ****     _lv_ll_init(&LV_GC_ROOT(_lv_img_decoder_ll), sizeof(lv_img_decoder_t));
  59:lvgl/src/draw/lv_img_decoder.c **** 
  60:lvgl/src/draw/lv_img_decoder.c ****     lv_img_decoder_t * decoder;
  61:lvgl/src/draw/lv_img_decoder.c **** 
  62:lvgl/src/draw/lv_img_decoder.c ****     /*Create a decoder for the built in color format*/
  63:lvgl/src/draw/lv_img_decoder.c ****     decoder = lv_img_decoder_create();
  64:lvgl/src/draw/lv_img_decoder.c ****     LV_ASSERT_MALLOC(decoder);
  65:lvgl/src/draw/lv_img_decoder.c ****     if(decoder == NULL) {
  66:lvgl/src/draw/lv_img_decoder.c ****         LV_LOG_WARN("lv_img_decoder_init: out of memory");
  67:lvgl/src/draw/lv_img_decoder.c ****         return;
  68:lvgl/src/draw/lv_img_decoder.c ****     }
  69:lvgl/src/draw/lv_img_decoder.c **** 
  70:lvgl/src/draw/lv_img_decoder.c ****     lv_img_decoder_set_info_cb(decoder, lv_img_decoder_built_in_info);
  71:lvgl/src/draw/lv_img_decoder.c ****     lv_img_decoder_set_open_cb(decoder, lv_img_decoder_built_in_open);
  72:lvgl/src/draw/lv_img_decoder.c ****     lv_img_decoder_set_read_line_cb(decoder, lv_img_decoder_built_in_read_line);
  73:lvgl/src/draw/lv_img_decoder.c ****     lv_img_decoder_set_close_cb(decoder, lv_img_decoder_built_in_close);
  74:lvgl/src/draw/lv_img_decoder.c **** }
  75:lvgl/src/draw/lv_img_decoder.c **** 
  76:lvgl/src/draw/lv_img_decoder.c **** /**
  77:lvgl/src/draw/lv_img_decoder.c ****  * Get information about an image.
  78:lvgl/src/draw/lv_img_decoder.c ****  * Try the created image decoder one by one. Once one is able to get info that info will be used.
  79:lvgl/src/draw/lv_img_decoder.c ****  * @param src the image source. E.g. file name or variable.
  80:lvgl/src/draw/lv_img_decoder.c ****  * @param header the image info will be stored here
  81:lvgl/src/draw/lv_img_decoder.c ****  * @return LV_RES_OK: success; LV_RES_INV: wasn't able to get info about the image
  82:lvgl/src/draw/lv_img_decoder.c ****  */
  83:lvgl/src/draw/lv_img_decoder.c **** lv_res_t lv_img_decoder_get_info(const void * src, lv_img_header_t * header)
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 3


  84:lvgl/src/draw/lv_img_decoder.c **** {
  85:lvgl/src/draw/lv_img_decoder.c ****     lv_memset_00(header, sizeof(lv_img_header_t));
  86:lvgl/src/draw/lv_img_decoder.c **** 
  87:lvgl/src/draw/lv_img_decoder.c ****     if(src == NULL) return LV_RES_INV;
  88:lvgl/src/draw/lv_img_decoder.c **** 
  89:lvgl/src/draw/lv_img_decoder.c ****     lv_img_src_t src_type = lv_img_src_get_type(src);
  90:lvgl/src/draw/lv_img_decoder.c ****     if(src_type == LV_IMG_SRC_VARIABLE) {
  91:lvgl/src/draw/lv_img_decoder.c ****         const lv_img_dsc_t * img_dsc = src;
  92:lvgl/src/draw/lv_img_decoder.c ****         if(img_dsc->data == NULL) return LV_RES_INV;
  93:lvgl/src/draw/lv_img_decoder.c ****     }
  94:lvgl/src/draw/lv_img_decoder.c **** 
  95:lvgl/src/draw/lv_img_decoder.c ****     lv_res_t res = LV_RES_INV;
  96:lvgl/src/draw/lv_img_decoder.c ****     lv_img_decoder_t * d;
  97:lvgl/src/draw/lv_img_decoder.c ****     _LV_LL_READ(&LV_GC_ROOT(_lv_img_decoder_ll), d) {
  98:lvgl/src/draw/lv_img_decoder.c ****         if(d->info_cb) {
  99:lvgl/src/draw/lv_img_decoder.c ****             res = d->info_cb(d, src, header);
 100:lvgl/src/draw/lv_img_decoder.c ****             if(res == LV_RES_OK) break;
 101:lvgl/src/draw/lv_img_decoder.c ****         }
 102:lvgl/src/draw/lv_img_decoder.c ****     }
 103:lvgl/src/draw/lv_img_decoder.c **** 
 104:lvgl/src/draw/lv_img_decoder.c ****     return res;
 105:lvgl/src/draw/lv_img_decoder.c **** }
 106:lvgl/src/draw/lv_img_decoder.c **** 
 107:lvgl/src/draw/lv_img_decoder.c **** lv_res_t lv_img_decoder_open(lv_img_decoder_dsc_t * dsc, const void * src, lv_color_t color, int32_
 108:lvgl/src/draw/lv_img_decoder.c **** {
 109:lvgl/src/draw/lv_img_decoder.c ****     lv_memset_00(dsc, sizeof(lv_img_decoder_dsc_t));
 110:lvgl/src/draw/lv_img_decoder.c **** 
 111:lvgl/src/draw/lv_img_decoder.c ****     if(src == NULL) return LV_RES_INV;
 112:lvgl/src/draw/lv_img_decoder.c ****     lv_img_src_t src_type = lv_img_src_get_type(src);
 113:lvgl/src/draw/lv_img_decoder.c ****     if(src_type == LV_IMG_SRC_VARIABLE) {
 114:lvgl/src/draw/lv_img_decoder.c ****         const lv_img_dsc_t * img_dsc = src;
 115:lvgl/src/draw/lv_img_decoder.c ****         if(img_dsc->data == NULL) return LV_RES_INV;
 116:lvgl/src/draw/lv_img_decoder.c ****     }
 117:lvgl/src/draw/lv_img_decoder.c **** 
 118:lvgl/src/draw/lv_img_decoder.c ****     dsc->color    = color;
 119:lvgl/src/draw/lv_img_decoder.c ****     dsc->src_type = src_type;
 120:lvgl/src/draw/lv_img_decoder.c ****     dsc->frame_id = frame_id;
 121:lvgl/src/draw/lv_img_decoder.c **** 
 122:lvgl/src/draw/lv_img_decoder.c ****     if(dsc->src_type == LV_IMG_SRC_FILE) {
 123:lvgl/src/draw/lv_img_decoder.c ****         size_t fnlen = strlen(src);
 124:lvgl/src/draw/lv_img_decoder.c ****         dsc->src = lv_mem_alloc(fnlen + 1);
 125:lvgl/src/draw/lv_img_decoder.c ****         LV_ASSERT_MALLOC(dsc->src);
 126:lvgl/src/draw/lv_img_decoder.c ****         if(dsc->src == NULL) {
 127:lvgl/src/draw/lv_img_decoder.c ****             LV_LOG_WARN("lv_img_decoder_open: out of memory");
 128:lvgl/src/draw/lv_img_decoder.c ****             return LV_RES_INV;
 129:lvgl/src/draw/lv_img_decoder.c ****         }
 130:lvgl/src/draw/lv_img_decoder.c ****         strcpy((char *)dsc->src, src);
 131:lvgl/src/draw/lv_img_decoder.c ****     }
 132:lvgl/src/draw/lv_img_decoder.c ****     else {
 133:lvgl/src/draw/lv_img_decoder.c ****         dsc->src = src;
 134:lvgl/src/draw/lv_img_decoder.c ****     }
 135:lvgl/src/draw/lv_img_decoder.c **** 
 136:lvgl/src/draw/lv_img_decoder.c ****     lv_res_t res = LV_RES_INV;
 137:lvgl/src/draw/lv_img_decoder.c **** 
 138:lvgl/src/draw/lv_img_decoder.c ****     lv_img_decoder_t * decoder;
 139:lvgl/src/draw/lv_img_decoder.c ****     _LV_LL_READ(&LV_GC_ROOT(_lv_img_decoder_ll), decoder) {
 140:lvgl/src/draw/lv_img_decoder.c ****         /*Info and Open callbacks are required*/
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 4


 141:lvgl/src/draw/lv_img_decoder.c ****         if(decoder->info_cb == NULL || decoder->open_cb == NULL) continue;
 142:lvgl/src/draw/lv_img_decoder.c **** 
 143:lvgl/src/draw/lv_img_decoder.c ****         res = decoder->info_cb(decoder, src, &dsc->header);
 144:lvgl/src/draw/lv_img_decoder.c ****         if(res != LV_RES_OK) continue;
 145:lvgl/src/draw/lv_img_decoder.c **** 
 146:lvgl/src/draw/lv_img_decoder.c ****         dsc->decoder = decoder;
 147:lvgl/src/draw/lv_img_decoder.c ****         res = decoder->open_cb(decoder, dsc);
 148:lvgl/src/draw/lv_img_decoder.c **** 
 149:lvgl/src/draw/lv_img_decoder.c ****         /*Opened successfully. It is a good decoder to for this image source*/
 150:lvgl/src/draw/lv_img_decoder.c ****         if(res == LV_RES_OK) return res;
 151:lvgl/src/draw/lv_img_decoder.c **** 
 152:lvgl/src/draw/lv_img_decoder.c ****         /*Prepare for the next loop*/
 153:lvgl/src/draw/lv_img_decoder.c ****         lv_memset_00(&dsc->header, sizeof(lv_img_header_t));
 154:lvgl/src/draw/lv_img_decoder.c **** 
 155:lvgl/src/draw/lv_img_decoder.c ****         dsc->error_msg = NULL;
 156:lvgl/src/draw/lv_img_decoder.c ****         dsc->img_data  = NULL;
 157:lvgl/src/draw/lv_img_decoder.c ****         dsc->user_data = NULL;
 158:lvgl/src/draw/lv_img_decoder.c ****         dsc->time_to_open = 0;
 159:lvgl/src/draw/lv_img_decoder.c ****     }
 160:lvgl/src/draw/lv_img_decoder.c **** 
 161:lvgl/src/draw/lv_img_decoder.c ****     if(dsc->src_type == LV_IMG_SRC_FILE)
 162:lvgl/src/draw/lv_img_decoder.c ****         lv_mem_free((void *)dsc->src);
 163:lvgl/src/draw/lv_img_decoder.c **** 
 164:lvgl/src/draw/lv_img_decoder.c ****     return res;
 165:lvgl/src/draw/lv_img_decoder.c **** }
 166:lvgl/src/draw/lv_img_decoder.c **** 
 167:lvgl/src/draw/lv_img_decoder.c **** /**
 168:lvgl/src/draw/lv_img_decoder.c ****  * Read a line from an opened image
 169:lvgl/src/draw/lv_img_decoder.c ****  * @param dsc pointer to `lv_img_decoder_dsc_t` used in `lv_img_decoder_open`
 170:lvgl/src/draw/lv_img_decoder.c ****  * @param x start X coordinate (from left)
 171:lvgl/src/draw/lv_img_decoder.c ****  * @param y start Y coordinate (from top)
 172:lvgl/src/draw/lv_img_decoder.c ****  * @param len number of pixels to read
 173:lvgl/src/draw/lv_img_decoder.c ****  * @param buf store the data here
 174:lvgl/src/draw/lv_img_decoder.c ****  * @return LV_RES_OK: success; LV_RES_INV: an error occurred
 175:lvgl/src/draw/lv_img_decoder.c ****  */
 176:lvgl/src/draw/lv_img_decoder.c **** lv_res_t lv_img_decoder_read_line(lv_img_decoder_dsc_t * dsc, lv_coord_t x, lv_coord_t y, lv_coord_
 177:lvgl/src/draw/lv_img_decoder.c **** {
 178:lvgl/src/draw/lv_img_decoder.c ****     lv_res_t res = LV_RES_INV;
 179:lvgl/src/draw/lv_img_decoder.c ****     if(dsc->decoder->read_line_cb) res = dsc->decoder->read_line_cb(dsc->decoder, dsc, x, y, len, b
 180:lvgl/src/draw/lv_img_decoder.c **** 
 181:lvgl/src/draw/lv_img_decoder.c ****     return res;
 182:lvgl/src/draw/lv_img_decoder.c **** }
 183:lvgl/src/draw/lv_img_decoder.c **** 
 184:lvgl/src/draw/lv_img_decoder.c **** /**
 185:lvgl/src/draw/lv_img_decoder.c ****  * Close a decoding session
 186:lvgl/src/draw/lv_img_decoder.c ****  * @param dsc pointer to `lv_img_decoder_dsc_t` used in `lv_img_decoder_open`
 187:lvgl/src/draw/lv_img_decoder.c ****  */
 188:lvgl/src/draw/lv_img_decoder.c **** void lv_img_decoder_close(lv_img_decoder_dsc_t * dsc)
 189:lvgl/src/draw/lv_img_decoder.c **** {
 190:lvgl/src/draw/lv_img_decoder.c ****     if(dsc->decoder) {
 191:lvgl/src/draw/lv_img_decoder.c ****         if(dsc->decoder->close_cb) dsc->decoder->close_cb(dsc->decoder, dsc);
 192:lvgl/src/draw/lv_img_decoder.c **** 
 193:lvgl/src/draw/lv_img_decoder.c ****         if(dsc->src_type == LV_IMG_SRC_FILE) {
 194:lvgl/src/draw/lv_img_decoder.c ****             lv_mem_free((void *)dsc->src);
 195:lvgl/src/draw/lv_img_decoder.c ****             dsc->src = NULL;
 196:lvgl/src/draw/lv_img_decoder.c ****         }
 197:lvgl/src/draw/lv_img_decoder.c ****     }
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 5


 198:lvgl/src/draw/lv_img_decoder.c **** }
 199:lvgl/src/draw/lv_img_decoder.c **** 
 200:lvgl/src/draw/lv_img_decoder.c **** /**
 201:lvgl/src/draw/lv_img_decoder.c ****  * Create a new image decoder
 202:lvgl/src/draw/lv_img_decoder.c ****  * @return pointer to the new image decoder
 203:lvgl/src/draw/lv_img_decoder.c ****  */
 204:lvgl/src/draw/lv_img_decoder.c **** lv_img_decoder_t * lv_img_decoder_create(void)
 205:lvgl/src/draw/lv_img_decoder.c **** {
 206:lvgl/src/draw/lv_img_decoder.c ****     lv_img_decoder_t * decoder;
 207:lvgl/src/draw/lv_img_decoder.c ****     decoder = _lv_ll_ins_head(&LV_GC_ROOT(_lv_img_decoder_ll));
 208:lvgl/src/draw/lv_img_decoder.c ****     LV_ASSERT_MALLOC(decoder);
 209:lvgl/src/draw/lv_img_decoder.c ****     if(decoder == NULL) return NULL;
 210:lvgl/src/draw/lv_img_decoder.c **** 
 211:lvgl/src/draw/lv_img_decoder.c ****     lv_memset_00(decoder, sizeof(lv_img_decoder_t));
 212:lvgl/src/draw/lv_img_decoder.c **** 
 213:lvgl/src/draw/lv_img_decoder.c ****     return decoder;
 214:lvgl/src/draw/lv_img_decoder.c **** }
 215:lvgl/src/draw/lv_img_decoder.c **** 
 216:lvgl/src/draw/lv_img_decoder.c **** /**
 217:lvgl/src/draw/lv_img_decoder.c ****  * Delete an image decoder
 218:lvgl/src/draw/lv_img_decoder.c ****  * @param decoder pointer to an image decoder
 219:lvgl/src/draw/lv_img_decoder.c ****  */
 220:lvgl/src/draw/lv_img_decoder.c **** void lv_img_decoder_delete(lv_img_decoder_t * decoder)
 221:lvgl/src/draw/lv_img_decoder.c **** {
 222:lvgl/src/draw/lv_img_decoder.c ****     _lv_ll_remove(&LV_GC_ROOT(_lv_img_decoder_ll), decoder);
 223:lvgl/src/draw/lv_img_decoder.c ****     lv_mem_free(decoder);
 224:lvgl/src/draw/lv_img_decoder.c **** }
 225:lvgl/src/draw/lv_img_decoder.c **** 
 226:lvgl/src/draw/lv_img_decoder.c **** /**
 227:lvgl/src/draw/lv_img_decoder.c ****  * Set a callback to get information about the image
 228:lvgl/src/draw/lv_img_decoder.c ****  * @param decoder pointer to an image decoder
 229:lvgl/src/draw/lv_img_decoder.c ****  * @param info_cb a function to collect info about an image (fill an `lv_img_header_t` struct)
 230:lvgl/src/draw/lv_img_decoder.c ****  */
 231:lvgl/src/draw/lv_img_decoder.c **** void lv_img_decoder_set_info_cb(lv_img_decoder_t * decoder, lv_img_decoder_info_f_t info_cb)
 232:lvgl/src/draw/lv_img_decoder.c **** {
 233:lvgl/src/draw/lv_img_decoder.c ****     decoder->info_cb = info_cb;
 234:lvgl/src/draw/lv_img_decoder.c **** }
 235:lvgl/src/draw/lv_img_decoder.c **** 
 236:lvgl/src/draw/lv_img_decoder.c **** /**
 237:lvgl/src/draw/lv_img_decoder.c ****  * Set a callback to open an image
 238:lvgl/src/draw/lv_img_decoder.c ****  * @param decoder pointer to an image decoder
 239:lvgl/src/draw/lv_img_decoder.c ****  * @param open_cb a function to open an image
 240:lvgl/src/draw/lv_img_decoder.c ****  */
 241:lvgl/src/draw/lv_img_decoder.c **** void lv_img_decoder_set_open_cb(lv_img_decoder_t * decoder, lv_img_decoder_open_f_t open_cb)
 242:lvgl/src/draw/lv_img_decoder.c **** {
 243:lvgl/src/draw/lv_img_decoder.c ****     decoder->open_cb = open_cb;
 244:lvgl/src/draw/lv_img_decoder.c **** }
 245:lvgl/src/draw/lv_img_decoder.c **** 
 246:lvgl/src/draw/lv_img_decoder.c **** /**
 247:lvgl/src/draw/lv_img_decoder.c ****  * Set a callback to a decoded line of an image
 248:lvgl/src/draw/lv_img_decoder.c ****  * @param decoder pointer to an image decoder
 249:lvgl/src/draw/lv_img_decoder.c ****  * @param read_line_cb a function to read a line of an image
 250:lvgl/src/draw/lv_img_decoder.c ****  */
 251:lvgl/src/draw/lv_img_decoder.c **** void lv_img_decoder_set_read_line_cb(lv_img_decoder_t * decoder, lv_img_decoder_read_line_f_t read_
 252:lvgl/src/draw/lv_img_decoder.c **** {
 253:lvgl/src/draw/lv_img_decoder.c ****     decoder->read_line_cb = read_line_cb;
 254:lvgl/src/draw/lv_img_decoder.c **** }
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 6


 255:lvgl/src/draw/lv_img_decoder.c **** 
 256:lvgl/src/draw/lv_img_decoder.c **** /**
 257:lvgl/src/draw/lv_img_decoder.c ****  * Set a callback to close a decoding session. E.g. close files and free other resources.
 258:lvgl/src/draw/lv_img_decoder.c ****  * @param decoder pointer to an image decoder
 259:lvgl/src/draw/lv_img_decoder.c ****  * @param close_cb a function to close a decoding session
 260:lvgl/src/draw/lv_img_decoder.c ****  */
 261:lvgl/src/draw/lv_img_decoder.c **** void lv_img_decoder_set_close_cb(lv_img_decoder_t * decoder, lv_img_decoder_close_f_t close_cb)
 262:lvgl/src/draw/lv_img_decoder.c **** {
 263:lvgl/src/draw/lv_img_decoder.c ****     decoder->close_cb = close_cb;
 264:lvgl/src/draw/lv_img_decoder.c **** }
 265:lvgl/src/draw/lv_img_decoder.c **** 
 266:lvgl/src/draw/lv_img_decoder.c **** /**
 267:lvgl/src/draw/lv_img_decoder.c ****  * Get info about a built-in image
 268:lvgl/src/draw/lv_img_decoder.c ****  * @param decoder the decoder where this function belongs
 269:lvgl/src/draw/lv_img_decoder.c ****  * @param src the image source: pointer to an `lv_img_dsc_t` variable, a file path or a symbol
 270:lvgl/src/draw/lv_img_decoder.c ****  * @param header store the image data here
 271:lvgl/src/draw/lv_img_decoder.c ****  * @return LV_RES_OK: the info is successfully stored in `header`; LV_RES_INV: unknown format or ot
 272:lvgl/src/draw/lv_img_decoder.c ****  */
 273:lvgl/src/draw/lv_img_decoder.c **** lv_res_t lv_img_decoder_built_in_info(lv_img_decoder_t * decoder, const void * src, lv_img_header_t
 274:lvgl/src/draw/lv_img_decoder.c **** {
  33              		.loc 1 274 1 view -0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 16
  36              		@ frame_needed = 0, uses_anonymous_args = 0
  37              		.loc 1 274 1 is_stmt 0 view .LVU1
  38 0000 70B5     		push	{r4, r5, r6, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 16
  41              		.cfi_offset 4, -16
  42              		.cfi_offset 5, -12
  43              		.cfi_offset 6, -8
  44              		.cfi_offset 14, -4
  45 0002 84B0     		sub	sp, sp, #16
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 32
  48 0004 0D46     		mov	r5, r1
  49 0006 1446     		mov	r4, r2
 275:lvgl/src/draw/lv_img_decoder.c ****     LV_UNUSED(decoder); /*Unused*/
  50              		.loc 1 275 5 is_stmt 1 view .LVU2
 276:lvgl/src/draw/lv_img_decoder.c **** 
 277:lvgl/src/draw/lv_img_decoder.c ****     lv_img_src_t src_type = lv_img_src_get_type(src);
  51              		.loc 1 277 5 view .LVU3
  52              		.loc 1 277 29 is_stmt 0 view .LVU4
  53 0008 0846     		mov	r0, r1
  54              	.LVL1:
  55              		.loc 1 277 29 view .LVU5
  56 000a FFF7FEFF 		bl	lv_img_src_get_type
  57              	.LVL2:
 278:lvgl/src/draw/lv_img_decoder.c ****     if(src_type == LV_IMG_SRC_VARIABLE) {
  58              		.loc 1 278 5 is_stmt 1 view .LVU6
  59              		.loc 1 278 7 is_stmt 0 view .LVU7
  60 000e 0646     		mov	r6, r0
  61 0010 E8B9     		cbnz	r0, .L2
  62              	.LBB12:
 279:lvgl/src/draw/lv_img_decoder.c ****         lv_img_cf_t cf = ((lv_img_dsc_t *)src)->header.cf;
  63              		.loc 1 279 9 is_stmt 1 view .LVU8
  64              		.loc 1 279 55 is_stmt 0 view .LVU9
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 7


  65 0012 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
  66 0014 03F01F03 		and	r3, r3, #31
  67              	.LVL3:
 280:lvgl/src/draw/lv_img_decoder.c ****         if(cf < CF_BUILT_IN_FIRST || cf > CF_BUILT_IN_LAST) return LV_RES_INV;
  68              		.loc 1 280 9 is_stmt 1 view .LVU10
  69              		.loc 1 280 35 is_stmt 0 view .LVU11
  70 0018 043B     		subs	r3, r3, #4
  71 001a DBB2     		uxtb	r3, r3
  72              		.loc 1 280 11 view .LVU12
  73 001c 0A2B     		cmp	r3, #10
  74 001e 13D8     		bhi	.L3
 281:lvgl/src/draw/lv_img_decoder.c **** 
 282:lvgl/src/draw/lv_img_decoder.c ****         header->w  = ((lv_img_dsc_t *)src)->header.w;
  75              		.loc 1 282 9 is_stmt 1 view .LVU13
  76              		.loc 1 282 51 is_stmt 0 view .LVU14
  77 0020 2B68     		ldr	r3, [r5]
  78 0022 C3F38A23 		ubfx	r3, r3, #10, #11
  79              		.loc 1 282 20 view .LVU15
  80 0026 2268     		ldr	r2, [r4]
  81 0028 63F39422 		bfi	r2, r3, #10, #11
  82 002c 2260     		str	r2, [r4]
  83              	.LVL4:
 283:lvgl/src/draw/lv_img_decoder.c ****         header->h  = ((lv_img_dsc_t *)src)->header.h;
  84              		.loc 1 283 9 is_stmt 1 view .LVU16
  85              		.loc 1 283 51 is_stmt 0 view .LVU17
  86 002e 6B88     		ldrh	r3, [r5, #2]
  87 0030 C3F34A13 		ubfx	r3, r3, #5, #11
  88              		.loc 1 283 20 view .LVU18
  89 0034 6288     		ldrh	r2, [r4, #2]
  90 0036 63F34F12 		bfi	r2, r3, #5, #11
  91 003a 6280     		strh	r2, [r4, #2]	@ movhi
 284:lvgl/src/draw/lv_img_decoder.c ****         header->cf = ((lv_img_dsc_t *)src)->header.cf;
  92              		.loc 1 284 9 is_stmt 1 view .LVU19
  93              		.loc 1 284 51 is_stmt 0 view .LVU20
  94 003c 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
  95              		.loc 1 284 20 view .LVU21
  96 003e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  97 0040 62F30403 		bfi	r3, r2, #0, #5
  98 0044 2370     		strb	r3, [r4]
  99              	.LBE12:
 285:lvgl/src/draw/lv_img_decoder.c ****     }
 286:lvgl/src/draw/lv_img_decoder.c ****     else if(src_type == LV_IMG_SRC_FILE) {
 287:lvgl/src/draw/lv_img_decoder.c ****         /*Support only "*.bin" files*/
 288:lvgl/src/draw/lv_img_decoder.c ****         if(strcmp(lv_fs_get_ext(src), "bin")) return LV_RES_INV;
 289:lvgl/src/draw/lv_img_decoder.c **** 
 290:lvgl/src/draw/lv_img_decoder.c ****         lv_fs_file_t f;
 291:lvgl/src/draw/lv_img_decoder.c ****         lv_fs_res_t res = lv_fs_open(&f, src, LV_FS_MODE_RD);
 292:lvgl/src/draw/lv_img_decoder.c ****         if(res == LV_FS_RES_OK) {
 293:lvgl/src/draw/lv_img_decoder.c ****             uint32_t rn;
 294:lvgl/src/draw/lv_img_decoder.c ****             res = lv_fs_read(&f, header, sizeof(lv_img_header_t), &rn);
 295:lvgl/src/draw/lv_img_decoder.c ****             lv_fs_close(&f);
 296:lvgl/src/draw/lv_img_decoder.c ****             if(res != LV_FS_RES_OK || rn != sizeof(lv_img_header_t)) {
 297:lvgl/src/draw/lv_img_decoder.c ****                 LV_LOG_WARN("Image get info get read file header");
 298:lvgl/src/draw/lv_img_decoder.c ****                 return LV_RES_INV;
 299:lvgl/src/draw/lv_img_decoder.c ****             }
 300:lvgl/src/draw/lv_img_decoder.c ****         }
 301:lvgl/src/draw/lv_img_decoder.c **** 
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 8


 302:lvgl/src/draw/lv_img_decoder.c ****         if(header->cf < CF_BUILT_IN_FIRST || header->cf > CF_BUILT_IN_LAST) return LV_RES_INV;
 303:lvgl/src/draw/lv_img_decoder.c ****     }
 304:lvgl/src/draw/lv_img_decoder.c ****     else if(src_type == LV_IMG_SRC_SYMBOL) {
 305:lvgl/src/draw/lv_img_decoder.c ****         /*The size depend on the font but it is unknown here. It should be handled outside of the
 306:lvgl/src/draw/lv_img_decoder.c ****          *function*/
 307:lvgl/src/draw/lv_img_decoder.c ****         header->w = 1;
 308:lvgl/src/draw/lv_img_decoder.c ****         header->h = 1;
 309:lvgl/src/draw/lv_img_decoder.c ****         /*Symbols always have transparent parts. Important because of cover check in the draw
 310:lvgl/src/draw/lv_img_decoder.c ****          *function. The actual value doesn't matter because lv_draw_label will draw it*/
 311:lvgl/src/draw/lv_img_decoder.c ****         header->cf = LV_IMG_CF_ALPHA_1BIT;
 312:lvgl/src/draw/lv_img_decoder.c ****     }
 313:lvgl/src/draw/lv_img_decoder.c ****     else {
 314:lvgl/src/draw/lv_img_decoder.c ****         LV_LOG_WARN("Image get info found unknown src type");
 315:lvgl/src/draw/lv_img_decoder.c ****         return LV_RES_INV;
 316:lvgl/src/draw/lv_img_decoder.c ****     }
 317:lvgl/src/draw/lv_img_decoder.c ****     return LV_RES_OK;
 100              		.loc 1 317 12 view .LVU22
 101 0046 0126     		movs	r6, #1
 102              	.LVL5:
 103              	.L3:
 318:lvgl/src/draw/lv_img_decoder.c **** }
 104              		.loc 1 318 1 view .LVU23
 105 0048 3046     		mov	r0, r6
 106 004a 04B0     		add	sp, sp, #16
 107              	.LCFI2:
 108              		.cfi_remember_state
 109              		.cfi_def_cfa_offset 16
 110              		@ sp needed
 111 004c 70BD     		pop	{r4, r5, r6, pc}
 112              	.LVL6:
 113              	.L2:
 114              	.LCFI3:
 115              		.cfi_restore_state
 286:lvgl/src/draw/lv_img_decoder.c ****         /*Support only "*.bin" files*/
 116              		.loc 1 286 10 is_stmt 1 view .LVU24
 286:lvgl/src/draw/lv_img_decoder.c ****         /*Support only "*.bin" files*/
 117              		.loc 1 286 12 is_stmt 0 view .LVU25
 118 004e 0128     		cmp	r0, #1
 119 0050 10D0     		beq	.L11
 304:lvgl/src/draw/lv_img_decoder.c ****         /*The size depend on the font but it is unknown here. It should be handled outside of the
 120              		.loc 1 304 10 is_stmt 1 view .LVU26
 304:lvgl/src/draw/lv_img_decoder.c ****         /*The size depend on the font but it is unknown here. It should be handled outside of the
 121              		.loc 1 304 12 is_stmt 0 view .LVU27
 122 0052 0228     		cmp	r0, #2
 123 0054 37D1     		bne	.L9
 307:lvgl/src/draw/lv_img_decoder.c ****         header->h = 1;
 124              		.loc 1 307 9 is_stmt 1 view .LVU28
 307:lvgl/src/draw/lv_img_decoder.c ****         header->h = 1;
 125              		.loc 1 307 19 is_stmt 0 view .LVU29
 126 0056 2368     		ldr	r3, [r4]
 127 0058 0126     		movs	r6, #1
 128 005a 66F39423 		bfi	r3, r6, #10, #11
 129 005e 2360     		str	r3, [r4]
 308:lvgl/src/draw/lv_img_decoder.c ****         /*Symbols always have transparent parts. Important because of cover check in the draw
 130              		.loc 1 308 9 is_stmt 1 view .LVU30
 308:lvgl/src/draw/lv_img_decoder.c ****         /*Symbols always have transparent parts. Important because of cover check in the draw
 131              		.loc 1 308 19 is_stmt 0 view .LVU31
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 9


 132 0060 6388     		ldrh	r3, [r4, #2]
 133 0062 66F34F13 		bfi	r3, r6, #5, #11
 134 0066 6380     		strh	r3, [r4, #2]	@ movhi
 311:lvgl/src/draw/lv_img_decoder.c ****     }
 135              		.loc 1 311 9 is_stmt 1 view .LVU32
 311:lvgl/src/draw/lv_img_decoder.c ****     }
 136              		.loc 1 311 20 is_stmt 0 view .LVU33
 137 0068 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 138 006a 0B22     		movs	r2, #11
 139 006c 62F30403 		bfi	r3, r2, #0, #5
 140 0070 2370     		strb	r3, [r4]
 141 0072 E9E7     		b	.L3
 142              	.L11:
 143              	.LBB13:
 288:lvgl/src/draw/lv_img_decoder.c **** 
 144              		.loc 1 288 9 is_stmt 1 view .LVU34
 288:lvgl/src/draw/lv_img_decoder.c **** 
 145              		.loc 1 288 12 is_stmt 0 view .LVU35
 146 0074 2846     		mov	r0, r5
 147              	.LVL7:
 288:lvgl/src/draw/lv_img_decoder.c **** 
 148              		.loc 1 288 12 view .LVU36
 149 0076 FFF7FEFF 		bl	lv_fs_get_ext
 150              	.LVL8:
 288:lvgl/src/draw/lv_img_decoder.c **** 
 151              		.loc 1 288 12 discriminator 1 view .LVU37
 152 007a 1449     		ldr	r1, .L14
 153 007c FFF7FEFF 		bl	strcmp
 154              	.LVL9:
 288:lvgl/src/draw/lv_img_decoder.c **** 
 155              		.loc 1 288 11 discriminator 2 view .LVU38
 156 0080 08B1     		cbz	r0, .L12
 157              	.LVL10:
 158              	.L5:
 288:lvgl/src/draw/lv_img_decoder.c **** 
 159              		.loc 1 288 54 discriminator 2 view .LVU39
 160 0082 0026     		movs	r6, #0
 161              	.LVL11:
 288:lvgl/src/draw/lv_img_decoder.c **** 
 162              		.loc 1 288 54 discriminator 2 view .LVU40
 163 0084 E0E7     		b	.L3
 164              	.LVL12:
 165              	.L12:
 290:lvgl/src/draw/lv_img_decoder.c ****         lv_fs_res_t res = lv_fs_open(&f, src, LV_FS_MODE_RD);
 166              		.loc 1 290 9 is_stmt 1 view .LVU41
 291:lvgl/src/draw/lv_img_decoder.c ****         if(res == LV_FS_RES_OK) {
 167              		.loc 1 291 9 view .LVU42
 291:lvgl/src/draw/lv_img_decoder.c ****         if(res == LV_FS_RES_OK) {
 168              		.loc 1 291 27 is_stmt 0 view .LVU43
 169 0086 0222     		movs	r2, #2
 170 0088 2946     		mov	r1, r5
 171 008a 01A8     		add	r0, sp, #4
 172 008c FFF7FEFF 		bl	lv_fs_open
 173              	.LVL13:
 292:lvgl/src/draw/lv_img_decoder.c ****             uint32_t rn;
 174              		.loc 1 292 9 is_stmt 1 view .LVU44
 292:lvgl/src/draw/lv_img_decoder.c ****             uint32_t rn;
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 10


 175              		.loc 1 292 11 is_stmt 0 view .LVU45
 176 0090 40B1     		cbz	r0, .L13
 177              	.LVL14:
 178              	.L6:
 302:lvgl/src/draw/lv_img_decoder.c ****     }
 179              		.loc 1 302 9 is_stmt 1 view .LVU46
 302:lvgl/src/draw/lv_img_decoder.c ****     }
 180              		.loc 1 302 18 is_stmt 0 view .LVU47
 181 0092 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 182 0094 03F01F03 		and	r3, r3, #31
 302:lvgl/src/draw/lv_img_decoder.c ****     }
 183              		.loc 1 302 43 view .LVU48
 184 0098 1C33     		adds	r3, r3, #28
 185 009a 03F01F03 		and	r3, r3, #31
 302:lvgl/src/draw/lv_img_decoder.c ****     }
 186              		.loc 1 302 11 view .LVU49
 187 009e 0A2B     		cmp	r3, #10
 188 00a0 D2D9     		bls	.L3
 189 00a2 EEE7     		b	.L5
 190              	.LVL15:
 191              	.L13:
 192              	.LBB14:
 293:lvgl/src/draw/lv_img_decoder.c ****             res = lv_fs_read(&f, header, sizeof(lv_img_header_t), &rn);
 193              		.loc 1 293 13 is_stmt 1 view .LVU50
 294:lvgl/src/draw/lv_img_decoder.c ****             lv_fs_close(&f);
 194              		.loc 1 294 13 view .LVU51
 294:lvgl/src/draw/lv_img_decoder.c ****             lv_fs_close(&f);
 195              		.loc 1 294 19 is_stmt 0 view .LVU52
 196 00a4 6B46     		mov	r3, sp
 197 00a6 0422     		movs	r2, #4
 198 00a8 2146     		mov	r1, r4
 199 00aa 0DEB0200 		add	r0, sp, r2
 200              	.LVL16:
 294:lvgl/src/draw/lv_img_decoder.c ****             lv_fs_close(&f);
 201              		.loc 1 294 19 view .LVU53
 202 00ae FFF7FEFF 		bl	lv_fs_read
 203              	.LVL17:
 204 00b2 0546     		mov	r5, r0
 205              	.LVL18:
 295:lvgl/src/draw/lv_img_decoder.c ****             if(res != LV_FS_RES_OK || rn != sizeof(lv_img_header_t)) {
 206              		.loc 1 295 13 is_stmt 1 view .LVU54
 207 00b4 01A8     		add	r0, sp, #4
 208 00b6 FFF7FEFF 		bl	lv_fs_close
 209              	.LVL19:
 296:lvgl/src/draw/lv_img_decoder.c ****                 LV_LOG_WARN("Image get info get read file header");
 210              		.loc 1 296 13 view .LVU55
 296:lvgl/src/draw/lv_img_decoder.c ****                 LV_LOG_WARN("Image get info get read file header");
 211              		.loc 1 296 15 is_stmt 0 view .LVU56
 212 00ba 002D     		cmp	r5, #0
 213 00bc E1D1     		bne	.L5
 296:lvgl/src/draw/lv_img_decoder.c ****                 LV_LOG_WARN("Image get info get read file header");
 214              		.loc 1 296 42 discriminator 1 view .LVU57
 215 00be 009B     		ldr	r3, [sp]
 296:lvgl/src/draw/lv_img_decoder.c ****                 LV_LOG_WARN("Image get info get read file header");
 216              		.loc 1 296 36 discriminator 1 view .LVU58
 217 00c0 042B     		cmp	r3, #4
 218 00c2 DED1     		bne	.L5
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 11


 219 00c4 E5E7     		b	.L6
 220              	.LVL20:
 221              	.L9:
 296:lvgl/src/draw/lv_img_decoder.c ****                 LV_LOG_WARN("Image get info get read file header");
 222              		.loc 1 296 36 discriminator 1 view .LVU59
 223              	.LBE14:
 224              	.LBE13:
 315:lvgl/src/draw/lv_img_decoder.c ****     }
 225              		.loc 1 315 16 view .LVU60
 226 00c6 0026     		movs	r6, #0
 227 00c8 BEE7     		b	.L3
 228              	.L15:
 229 00ca 00BF     		.align	2
 230              	.L14:
 231 00cc 00000000 		.word	.LC0
 232              		.cfi_endproc
 233              	.LFE67:
 235              		.section	.text.lv_img_decoder_built_in_close,"ax",%progbits
 236              		.align	1
 237              		.global	lv_img_decoder_built_in_close
 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 242              	lv_img_decoder_built_in_close:
 243              	.LVL21:
 244              	.LFB70:
 319:lvgl/src/draw/lv_img_decoder.c **** 
 320:lvgl/src/draw/lv_img_decoder.c **** /**
 321:lvgl/src/draw/lv_img_decoder.c ****  * Open a built in image
 322:lvgl/src/draw/lv_img_decoder.c ****  * @param decoder the decoder where this function belongs
 323:lvgl/src/draw/lv_img_decoder.c ****  * @param dsc pointer to decoder descriptor. `src`, `color` are already initialized in it.
 324:lvgl/src/draw/lv_img_decoder.c ****  * @return LV_RES_OK: the info is successfully stored in `header`; LV_RES_INV: unknown format or ot
 325:lvgl/src/draw/lv_img_decoder.c ****  */
 326:lvgl/src/draw/lv_img_decoder.c **** lv_res_t lv_img_decoder_built_in_open(lv_img_decoder_t * decoder, lv_img_decoder_dsc_t * dsc)
 327:lvgl/src/draw/lv_img_decoder.c **** {
 328:lvgl/src/draw/lv_img_decoder.c ****     /*Open the file if it's a file*/
 329:lvgl/src/draw/lv_img_decoder.c ****     if(dsc->src_type == LV_IMG_SRC_FILE) {
 330:lvgl/src/draw/lv_img_decoder.c ****         /*Support only "*.bin" files*/
 331:lvgl/src/draw/lv_img_decoder.c ****         if(strcmp(lv_fs_get_ext(dsc->src), "bin")) return LV_RES_INV;
 332:lvgl/src/draw/lv_img_decoder.c **** 
 333:lvgl/src/draw/lv_img_decoder.c ****         lv_fs_file_t f;
 334:lvgl/src/draw/lv_img_decoder.c ****         lv_fs_res_t res = lv_fs_open(&f, dsc->src, LV_FS_MODE_RD);
 335:lvgl/src/draw/lv_img_decoder.c ****         if(res != LV_FS_RES_OK) {
 336:lvgl/src/draw/lv_img_decoder.c ****             LV_LOG_WARN("Built-in image decoder can't open the file");
 337:lvgl/src/draw/lv_img_decoder.c ****             return LV_RES_INV;
 338:lvgl/src/draw/lv_img_decoder.c ****         }
 339:lvgl/src/draw/lv_img_decoder.c **** 
 340:lvgl/src/draw/lv_img_decoder.c ****         /*If the file was open successfully save the file descriptor*/
 341:lvgl/src/draw/lv_img_decoder.c ****         if(dsc->user_data == NULL) {
 342:lvgl/src/draw/lv_img_decoder.c ****             dsc->user_data = lv_mem_alloc(sizeof(lv_img_decoder_built_in_data_t));
 343:lvgl/src/draw/lv_img_decoder.c ****             LV_ASSERT_MALLOC(dsc->user_data);
 344:lvgl/src/draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 345:lvgl/src/draw/lv_img_decoder.c ****                 LV_LOG_ERROR("img_decoder_built_in_open: out of memory");
 346:lvgl/src/draw/lv_img_decoder.c ****                 lv_fs_close(&f);
 347:lvgl/src/draw/lv_img_decoder.c ****                 return LV_RES_INV;
 348:lvgl/src/draw/lv_img_decoder.c ****             }
 349:lvgl/src/draw/lv_img_decoder.c ****             lv_memset_00(dsc->user_data, sizeof(lv_img_decoder_built_in_data_t));
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 12


 350:lvgl/src/draw/lv_img_decoder.c ****         }
 351:lvgl/src/draw/lv_img_decoder.c **** 
 352:lvgl/src/draw/lv_img_decoder.c ****         lv_img_decoder_built_in_data_t * user_data = dsc->user_data;
 353:lvgl/src/draw/lv_img_decoder.c ****         lv_memcpy_small(&user_data->f, &f, sizeof(f));
 354:lvgl/src/draw/lv_img_decoder.c ****     }
 355:lvgl/src/draw/lv_img_decoder.c ****     else if(dsc->src_type == LV_IMG_SRC_VARIABLE) {
 356:lvgl/src/draw/lv_img_decoder.c ****         /*The variables should have valid data*/
 357:lvgl/src/draw/lv_img_decoder.c ****         if(((lv_img_dsc_t *)dsc->src)->data == NULL) {
 358:lvgl/src/draw/lv_img_decoder.c ****             return LV_RES_INV;
 359:lvgl/src/draw/lv_img_decoder.c ****         }
 360:lvgl/src/draw/lv_img_decoder.c ****     }
 361:lvgl/src/draw/lv_img_decoder.c **** 
 362:lvgl/src/draw/lv_img_decoder.c ****     lv_img_cf_t cf = dsc->header.cf;
 363:lvgl/src/draw/lv_img_decoder.c ****     /*Process true color formats*/
 364:lvgl/src/draw/lv_img_decoder.c ****     if(cf == LV_IMG_CF_TRUE_COLOR || cf == LV_IMG_CF_TRUE_COLOR_ALPHA || cf == LV_IMG_CF_TRUE_COLOR
 365:lvgl/src/draw/lv_img_decoder.c ****         if(dsc->src_type == LV_IMG_SRC_VARIABLE) {
 366:lvgl/src/draw/lv_img_decoder.c ****             /*In case of uncompressed formats the image stored in the ROM/RAM.
 367:lvgl/src/draw/lv_img_decoder.c ****              *So simply give its pointer*/
 368:lvgl/src/draw/lv_img_decoder.c ****             dsc->img_data = ((lv_img_dsc_t *)dsc->src)->data;
 369:lvgl/src/draw/lv_img_decoder.c ****             return LV_RES_OK;
 370:lvgl/src/draw/lv_img_decoder.c ****         }
 371:lvgl/src/draw/lv_img_decoder.c ****         else {
 372:lvgl/src/draw/lv_img_decoder.c ****             /*If it's a file it need to be read line by line later*/
 373:lvgl/src/draw/lv_img_decoder.c ****             return LV_RES_OK;
 374:lvgl/src/draw/lv_img_decoder.c ****         }
 375:lvgl/src/draw/lv_img_decoder.c ****     }
 376:lvgl/src/draw/lv_img_decoder.c ****     /*Process indexed images. Build a palette*/
 377:lvgl/src/draw/lv_img_decoder.c ****     else if(cf == LV_IMG_CF_INDEXED_1BIT || cf == LV_IMG_CF_INDEXED_2BIT || cf == LV_IMG_CF_INDEXED
 378:lvgl/src/draw/lv_img_decoder.c ****             cf == LV_IMG_CF_INDEXED_8BIT) {
 379:lvgl/src/draw/lv_img_decoder.c ****         uint8_t px_size       = lv_img_cf_get_px_size(cf);
 380:lvgl/src/draw/lv_img_decoder.c ****         uint32_t palette_size = 1 << px_size;
 381:lvgl/src/draw/lv_img_decoder.c **** 
 382:lvgl/src/draw/lv_img_decoder.c ****         /*Allocate the palette*/
 383:lvgl/src/draw/lv_img_decoder.c ****         if(dsc->user_data == NULL) {
 384:lvgl/src/draw/lv_img_decoder.c ****             dsc->user_data = lv_mem_alloc(sizeof(lv_img_decoder_built_in_data_t));
 385:lvgl/src/draw/lv_img_decoder.c ****             LV_ASSERT_MALLOC(dsc->user_data);
 386:lvgl/src/draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 387:lvgl/src/draw/lv_img_decoder.c ****                 LV_LOG_ERROR("img_decoder_built_in_open: out of memory");
 388:lvgl/src/draw/lv_img_decoder.c ****                 return LV_RES_INV;
 389:lvgl/src/draw/lv_img_decoder.c ****             }
 390:lvgl/src/draw/lv_img_decoder.c ****             lv_memset_00(dsc->user_data, sizeof(lv_img_decoder_built_in_data_t));
 391:lvgl/src/draw/lv_img_decoder.c ****         }
 392:lvgl/src/draw/lv_img_decoder.c **** 
 393:lvgl/src/draw/lv_img_decoder.c ****         lv_img_decoder_built_in_data_t * user_data = dsc->user_data;
 394:lvgl/src/draw/lv_img_decoder.c ****         user_data->palette                         = lv_mem_alloc(palette_size * sizeof(lv_color_t)
 395:lvgl/src/draw/lv_img_decoder.c ****         LV_ASSERT_MALLOC(user_data->palette);
 396:lvgl/src/draw/lv_img_decoder.c ****         user_data->opa                             = lv_mem_alloc(palette_size * sizeof(lv_opa_t));
 397:lvgl/src/draw/lv_img_decoder.c ****         LV_ASSERT_MALLOC(user_data->opa);
 398:lvgl/src/draw/lv_img_decoder.c ****         if(user_data->palette == NULL || user_data->opa == NULL) {
 399:lvgl/src/draw/lv_img_decoder.c ****             LV_LOG_ERROR("img_decoder_built_in_open: out of memory");
 400:lvgl/src/draw/lv_img_decoder.c ****             lv_img_decoder_built_in_close(decoder, dsc);
 401:lvgl/src/draw/lv_img_decoder.c ****             return LV_RES_INV;
 402:lvgl/src/draw/lv_img_decoder.c ****         }
 403:lvgl/src/draw/lv_img_decoder.c **** 
 404:lvgl/src/draw/lv_img_decoder.c ****         if(dsc->src_type == LV_IMG_SRC_FILE) {
 405:lvgl/src/draw/lv_img_decoder.c ****             /*Read the palette from file*/
 406:lvgl/src/draw/lv_img_decoder.c ****             lv_fs_seek(&user_data->f, 4, LV_FS_SEEK_SET); /*Skip the header*/
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 13


 407:lvgl/src/draw/lv_img_decoder.c ****             lv_color32_t cur_color;
 408:lvgl/src/draw/lv_img_decoder.c ****             uint32_t i;
 409:lvgl/src/draw/lv_img_decoder.c ****             for(i = 0; i < palette_size; i++) {
 410:lvgl/src/draw/lv_img_decoder.c ****                 lv_fs_read(&user_data->f, &cur_color, sizeof(lv_color32_t), NULL);
 411:lvgl/src/draw/lv_img_decoder.c ****                 user_data->palette[i] = lv_color_make(cur_color.ch.red, cur_color.ch.green, cur_col
 412:lvgl/src/draw/lv_img_decoder.c ****                 user_data->opa[i]     = cur_color.ch.alpha;
 413:lvgl/src/draw/lv_img_decoder.c ****             }
 414:lvgl/src/draw/lv_img_decoder.c ****         }
 415:lvgl/src/draw/lv_img_decoder.c ****         else {
 416:lvgl/src/draw/lv_img_decoder.c ****             /*The palette begins in the beginning of the image data. Just point to it.*/
 417:lvgl/src/draw/lv_img_decoder.c ****             lv_color32_t * palette_p = (lv_color32_t *)((lv_img_dsc_t *)dsc->src)->data;
 418:lvgl/src/draw/lv_img_decoder.c **** 
 419:lvgl/src/draw/lv_img_decoder.c ****             uint32_t i;
 420:lvgl/src/draw/lv_img_decoder.c ****             for(i = 0; i < palette_size; i++) {
 421:lvgl/src/draw/lv_img_decoder.c ****                 user_data->palette[i] = lv_color_make(palette_p[i].ch.red, palette_p[i].ch.green, p
 422:lvgl/src/draw/lv_img_decoder.c ****                 user_data->opa[i]     = palette_p[i].ch.alpha;
 423:lvgl/src/draw/lv_img_decoder.c ****             }
 424:lvgl/src/draw/lv_img_decoder.c ****         }
 425:lvgl/src/draw/lv_img_decoder.c **** 
 426:lvgl/src/draw/lv_img_decoder.c ****         return LV_RES_OK;
 427:lvgl/src/draw/lv_img_decoder.c ****     }
 428:lvgl/src/draw/lv_img_decoder.c ****     /*Alpha indexed images.*/
 429:lvgl/src/draw/lv_img_decoder.c ****     else if(cf == LV_IMG_CF_ALPHA_1BIT || cf == LV_IMG_CF_ALPHA_2BIT || cf == LV_IMG_CF_ALPHA_4BIT 
 430:lvgl/src/draw/lv_img_decoder.c ****             cf == LV_IMG_CF_ALPHA_8BIT) {
 431:lvgl/src/draw/lv_img_decoder.c ****         return LV_RES_OK; /*Nothing to process*/
 432:lvgl/src/draw/lv_img_decoder.c ****     }
 433:lvgl/src/draw/lv_img_decoder.c ****     /*Unknown format. Can't decode it.*/
 434:lvgl/src/draw/lv_img_decoder.c ****     else {
 435:lvgl/src/draw/lv_img_decoder.c ****         /*Free the potentially allocated memories*/
 436:lvgl/src/draw/lv_img_decoder.c ****         lv_img_decoder_built_in_close(decoder, dsc);
 437:lvgl/src/draw/lv_img_decoder.c **** 
 438:lvgl/src/draw/lv_img_decoder.c ****         LV_LOG_WARN("Image decoder open: unknown color format");
 439:lvgl/src/draw/lv_img_decoder.c ****         return LV_RES_INV;
 440:lvgl/src/draw/lv_img_decoder.c ****     }
 441:lvgl/src/draw/lv_img_decoder.c **** }
 442:lvgl/src/draw/lv_img_decoder.c **** 
 443:lvgl/src/draw/lv_img_decoder.c **** /**
 444:lvgl/src/draw/lv_img_decoder.c ****  * Decode `len` pixels starting from the given `x`, `y` coordinates and store them in `buf`.
 445:lvgl/src/draw/lv_img_decoder.c ****  * Required only if the "open" function can't return with the whole decoded pixel array.
 446:lvgl/src/draw/lv_img_decoder.c ****  * @param decoder pointer to the decoder the function associated with
 447:lvgl/src/draw/lv_img_decoder.c ****  * @param dsc pointer to decoder descriptor
 448:lvgl/src/draw/lv_img_decoder.c ****  * @param x start x coordinate
 449:lvgl/src/draw/lv_img_decoder.c ****  * @param y start y coordinate
 450:lvgl/src/draw/lv_img_decoder.c ****  * @param len number of pixels to decode
 451:lvgl/src/draw/lv_img_decoder.c ****  * @param buf a buffer to store the decoded pixels
 452:lvgl/src/draw/lv_img_decoder.c ****  * @return LV_RES_OK: ok; LV_RES_INV: failed
 453:lvgl/src/draw/lv_img_decoder.c ****  */
 454:lvgl/src/draw/lv_img_decoder.c **** lv_res_t lv_img_decoder_built_in_read_line(lv_img_decoder_t * decoder, lv_img_decoder_dsc_t * dsc, 
 455:lvgl/src/draw/lv_img_decoder.c ****                                            lv_coord_t y, lv_coord_t len, uint8_t * buf)
 456:lvgl/src/draw/lv_img_decoder.c **** {
 457:lvgl/src/draw/lv_img_decoder.c ****     LV_UNUSED(decoder); /*Unused*/
 458:lvgl/src/draw/lv_img_decoder.c **** 
 459:lvgl/src/draw/lv_img_decoder.c ****     lv_res_t res = LV_RES_INV;
 460:lvgl/src/draw/lv_img_decoder.c **** 
 461:lvgl/src/draw/lv_img_decoder.c ****     if(dsc->header.cf == LV_IMG_CF_TRUE_COLOR || dsc->header.cf == LV_IMG_CF_TRUE_COLOR_ALPHA ||
 462:lvgl/src/draw/lv_img_decoder.c ****        dsc->header.cf == LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED) {
 463:lvgl/src/draw/lv_img_decoder.c ****         /*For TRUE_COLOR images read line required only for files.
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 14


 464:lvgl/src/draw/lv_img_decoder.c ****          *For variables the image data was returned in `open`*/
 465:lvgl/src/draw/lv_img_decoder.c ****         if(dsc->src_type == LV_IMG_SRC_FILE) {
 466:lvgl/src/draw/lv_img_decoder.c ****             res = lv_img_decoder_built_in_line_true_color(dsc, x, y, len, buf);
 467:lvgl/src/draw/lv_img_decoder.c ****         }
 468:lvgl/src/draw/lv_img_decoder.c ****     }
 469:lvgl/src/draw/lv_img_decoder.c ****     else if(dsc->header.cf == LV_IMG_CF_ALPHA_1BIT || dsc->header.cf == LV_IMG_CF_ALPHA_2BIT ||
 470:lvgl/src/draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_4BIT || dsc->header.cf == LV_IMG_CF_ALPHA_8BIT) {
 471:lvgl/src/draw/lv_img_decoder.c ****         res = lv_img_decoder_built_in_line_alpha(dsc, x, y, len, buf);
 472:lvgl/src/draw/lv_img_decoder.c ****     }
 473:lvgl/src/draw/lv_img_decoder.c ****     else if(dsc->header.cf == LV_IMG_CF_INDEXED_1BIT || dsc->header.cf == LV_IMG_CF_INDEXED_2BIT ||
 474:lvgl/src/draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_INDEXED_4BIT || dsc->header.cf == LV_IMG_CF_INDEXED_8BIT) {
 475:lvgl/src/draw/lv_img_decoder.c ****         res = lv_img_decoder_built_in_line_indexed(dsc, x, y, len, buf);
 476:lvgl/src/draw/lv_img_decoder.c ****     }
 477:lvgl/src/draw/lv_img_decoder.c ****     else {
 478:lvgl/src/draw/lv_img_decoder.c ****         LV_LOG_WARN("Built-in image decoder read not supports the color format");
 479:lvgl/src/draw/lv_img_decoder.c ****         return LV_RES_INV;
 480:lvgl/src/draw/lv_img_decoder.c ****     }
 481:lvgl/src/draw/lv_img_decoder.c **** 
 482:lvgl/src/draw/lv_img_decoder.c ****     return res;
 483:lvgl/src/draw/lv_img_decoder.c **** }
 484:lvgl/src/draw/lv_img_decoder.c **** 
 485:lvgl/src/draw/lv_img_decoder.c **** /**
 486:lvgl/src/draw/lv_img_decoder.c ****  * Close the pending decoding. Free resources etc.
 487:lvgl/src/draw/lv_img_decoder.c ****  * @param decoder pointer to the decoder the function associated with
 488:lvgl/src/draw/lv_img_decoder.c ****  * @param dsc pointer to decoder descriptor
 489:lvgl/src/draw/lv_img_decoder.c ****  */
 490:lvgl/src/draw/lv_img_decoder.c **** void lv_img_decoder_built_in_close(lv_img_decoder_t * decoder, lv_img_decoder_dsc_t * dsc)
 491:lvgl/src/draw/lv_img_decoder.c **** {
 245              		.loc 1 491 1 is_stmt 1 view -0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              		.loc 1 491 1 is_stmt 0 view .LVU62
 250 0000 38B5     		push	{r3, r4, r5, lr}
 251              	.LCFI4:
 252              		.cfi_def_cfa_offset 16
 253              		.cfi_offset 3, -16
 254              		.cfi_offset 4, -12
 255              		.cfi_offset 5, -8
 256              		.cfi_offset 14, -4
 492:lvgl/src/draw/lv_img_decoder.c ****     LV_UNUSED(decoder); /*Unused*/
 257              		.loc 1 492 5 is_stmt 1 view .LVU63
 493:lvgl/src/draw/lv_img_decoder.c **** 
 494:lvgl/src/draw/lv_img_decoder.c ****     lv_img_decoder_built_in_data_t * user_data = dsc->user_data;
 258              		.loc 1 494 5 view .LVU64
 259              		.loc 1 494 38 is_stmt 0 view .LVU65
 260 0002 4D6A     		ldr	r5, [r1, #36]
 261              	.LVL22:
 495:lvgl/src/draw/lv_img_decoder.c ****     if(user_data) {
 262              		.loc 1 495 5 is_stmt 1 view .LVU66
 263              		.loc 1 495 7 is_stmt 0 view .LVU67
 264 0004 85B1     		cbz	r5, .L16
 265 0006 0C46     		mov	r4, r1
 496:lvgl/src/draw/lv_img_decoder.c ****         if(dsc->src_type == LV_IMG_SRC_FILE) {
 266              		.loc 1 496 9 is_stmt 1 view .LVU68
 267              		.loc 1 496 15 is_stmt 0 view .LVU69
 268 0008 0B7C     		ldrb	r3, [r1, #16]	@ zero_extendqisi2
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 15


 269              		.loc 1 496 11 view .LVU70
 270 000a 012B     		cmp	r3, #1
 271 000c 0DD0     		beq	.L22
 272              	.LVL23:
 273              	.L18:
 497:lvgl/src/draw/lv_img_decoder.c ****             lv_fs_close(&user_data->f);
 498:lvgl/src/draw/lv_img_decoder.c ****         }
 499:lvgl/src/draw/lv_img_decoder.c ****         if(user_data->palette) lv_mem_free(user_data->palette);
 274              		.loc 1 499 9 is_stmt 1 view .LVU71
 275              		.loc 1 499 21 is_stmt 0 view .LVU72
 276 000e E868     		ldr	r0, [r5, #12]
 277              		.loc 1 499 11 view .LVU73
 278 0010 08B1     		cbz	r0, .L19
 279              		.loc 1 499 32 is_stmt 1 discriminator 1 view .LVU74
 280 0012 FFF7FEFF 		bl	lv_mem_free
 281              	.LVL24:
 282              	.L19:
 500:lvgl/src/draw/lv_img_decoder.c ****         if(user_data->opa) lv_mem_free(user_data->opa);
 283              		.loc 1 500 9 view .LVU75
 284              		.loc 1 500 21 is_stmt 0 view .LVU76
 285 0016 2869     		ldr	r0, [r5, #16]
 286              		.loc 1 500 11 view .LVU77
 287 0018 08B1     		cbz	r0, .L20
 288              		.loc 1 500 28 is_stmt 1 discriminator 1 view .LVU78
 289 001a FFF7FEFF 		bl	lv_mem_free
 290              	.LVL25:
 291              	.L20:
 501:lvgl/src/draw/lv_img_decoder.c **** 
 502:lvgl/src/draw/lv_img_decoder.c ****         lv_mem_free(user_data);
 292              		.loc 1 502 9 view .LVU79
 293 001e 2846     		mov	r0, r5
 294 0020 FFF7FEFF 		bl	lv_mem_free
 295              	.LVL26:
 503:lvgl/src/draw/lv_img_decoder.c ****         dsc->user_data = NULL;
 296              		.loc 1 503 9 view .LVU80
 297              		.loc 1 503 24 is_stmt 0 view .LVU81
 298 0024 0023     		movs	r3, #0
 299 0026 6362     		str	r3, [r4, #36]
 300              	.LVL27:
 301              	.L16:
 504:lvgl/src/draw/lv_img_decoder.c ****     }
 505:lvgl/src/draw/lv_img_decoder.c **** }
 302              		.loc 1 505 1 view .LVU82
 303 0028 38BD     		pop	{r3, r4, r5, pc}
 304              	.LVL28:
 305              	.L22:
 497:lvgl/src/draw/lv_img_decoder.c ****         }
 306              		.loc 1 497 13 is_stmt 1 view .LVU83
 307 002a 2846     		mov	r0, r5
 308              	.LVL29:
 497:lvgl/src/draw/lv_img_decoder.c ****         }
 309              		.loc 1 497 13 is_stmt 0 view .LVU84
 310 002c FFF7FEFF 		bl	lv_fs_close
 311              	.LVL30:
 497:lvgl/src/draw/lv_img_decoder.c ****         }
 312              		.loc 1 497 13 view .LVU85
 313 0030 EDE7     		b	.L18
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 16


 314              		.cfi_endproc
 315              	.LFE70:
 317              		.section	.text.lv_img_decoder_built_in_open,"ax",%progbits
 318              		.align	1
 319              		.global	lv_img_decoder_built_in_open
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 324              	lv_img_decoder_built_in_open:
 325              	.LVL31:
 326              	.LFB68:
 327:lvgl/src/draw/lv_img_decoder.c ****     /*Open the file if it's a file*/
 327              		.loc 1 327 1 is_stmt 1 view -0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 16
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 327:lvgl/src/draw/lv_img_decoder.c ****     /*Open the file if it's a file*/
 331              		.loc 1 327 1 is_stmt 0 view .LVU87
 332 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 333              	.LCFI5:
 334              		.cfi_def_cfa_offset 32
 335              		.cfi_offset 4, -32
 336              		.cfi_offset 5, -28
 337              		.cfi_offset 6, -24
 338              		.cfi_offset 7, -20
 339              		.cfi_offset 8, -16
 340              		.cfi_offset 9, -12
 341              		.cfi_offset 10, -8
 342              		.cfi_offset 14, -4
 343 0004 84B0     		sub	sp, sp, #16
 344              	.LCFI6:
 345              		.cfi_def_cfa_offset 48
 346 0006 0546     		mov	r5, r0
 347 0008 0C46     		mov	r4, r1
 329:lvgl/src/draw/lv_img_decoder.c ****         /*Support only "*.bin" files*/
 348              		.loc 1 329 5 is_stmt 1 view .LVU88
 329:lvgl/src/draw/lv_img_decoder.c ****         /*Support only "*.bin" files*/
 349              		.loc 1 329 11 is_stmt 0 view .LVU89
 350 000a 087C     		ldrb	r0, [r1, #16]	@ zero_extendqisi2
 351              	.LVL32:
 329:lvgl/src/draw/lv_img_decoder.c ****         /*Support only "*.bin" files*/
 352              		.loc 1 329 7 view .LVU90
 353 000c 0128     		cmp	r0, #1
 354 000e 15D0     		beq	.L52
 355:lvgl/src/draw/lv_img_decoder.c ****         /*The variables should have valid data*/
 355              		.loc 1 355 10 is_stmt 1 view .LVU91
 355:lvgl/src/draw/lv_img_decoder.c ****         /*The variables should have valid data*/
 356              		.loc 1 355 12 is_stmt 0 view .LVU92
 357 0010 10B9     		cbnz	r0, .L31
 357:lvgl/src/draw/lv_img_decoder.c ****             return LV_RES_INV;
 358              		.loc 1 357 9 is_stmt 1 view .LVU93
 357:lvgl/src/draw/lv_img_decoder.c ****             return LV_RES_INV;
 359              		.loc 1 357 32 is_stmt 0 view .LVU94
 360 0012 4B68     		ldr	r3, [r1, #4]
 357:lvgl/src/draw/lv_img_decoder.c ****             return LV_RES_INV;
 361              		.loc 1 357 38 view .LVU95
 362 0014 9B68     		ldr	r3, [r3, #8]
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 17


 357:lvgl/src/draw/lv_img_decoder.c ****             return LV_RES_INV;
 363              		.loc 1 357 11 view .LVU96
 364 0016 73B1     		cbz	r3, .L32
 365              	.LVL33:
 366              	.L31:
 362:lvgl/src/draw/lv_img_decoder.c ****     /*Process true color formats*/
 367              		.loc 1 362 5 is_stmt 1 view .LVU97
 362:lvgl/src/draw/lv_img_decoder.c ****     /*Process true color formats*/
 368              		.loc 1 362 33 is_stmt 0 view .LVU98
 369 0018 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 370 001a 03F01F00 		and	r0, r3, #31
 371              	.LVL34:
 364:lvgl/src/draw/lv_img_decoder.c ****         if(dsc->src_type == LV_IMG_SRC_VARIABLE) {
 372              		.loc 1 364 5 is_stmt 1 view .LVU99
 364:lvgl/src/draw/lv_img_decoder.c ****         if(dsc->src_type == LV_IMG_SRC_VARIABLE) {
 373              		.loc 1 364 71 is_stmt 0 view .LVU100
 374 001e 021F     		subs	r2, r0, #4
 375 0020 D2B2     		uxtb	r2, r2
 364:lvgl/src/draw/lv_img_decoder.c ****         if(dsc->src_type == LV_IMG_SRC_VARIABLE) {
 376              		.loc 1 364 7 view .LVU101
 377 0022 022A     		cmp	r2, #2
 378 0024 32D8     		bhi	.L33
 365:lvgl/src/draw/lv_img_decoder.c ****             /*In case of uncompressed formats the image stored in the ROM/RAM.
 379              		.loc 1 365 9 is_stmt 1 view .LVU102
 365:lvgl/src/draw/lv_img_decoder.c ****             /*In case of uncompressed formats the image stored in the ROM/RAM.
 380              		.loc 1 365 15 is_stmt 0 view .LVU103
 381 0026 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 382              	.LVL35:
 365:lvgl/src/draw/lv_img_decoder.c ****             /*In case of uncompressed formats the image stored in the ROM/RAM.
 383              		.loc 1 365 11 view .LVU104
 384 0028 002B     		cmp	r3, #0
 385 002a 40F0BA80 		bne	.L49
 368:lvgl/src/draw/lv_img_decoder.c ****             return LV_RES_OK;
 386              		.loc 1 368 13 is_stmt 1 view .LVU105
 368:lvgl/src/draw/lv_img_decoder.c ****             return LV_RES_OK;
 387              		.loc 1 368 49 is_stmt 0 view .LVU106
 388 002e 6368     		ldr	r3, [r4, #4]
 368:lvgl/src/draw/lv_img_decoder.c ****             return LV_RES_OK;
 389              		.loc 1 368 55 view .LVU107
 390 0030 9B68     		ldr	r3, [r3, #8]
 368:lvgl/src/draw/lv_img_decoder.c ****             return LV_RES_OK;
 391              		.loc 1 368 27 view .LVU108
 392 0032 A361     		str	r3, [r4, #24]
 369:lvgl/src/draw/lv_img_decoder.c ****         }
 393              		.loc 1 369 13 is_stmt 1 view .LVU109
 369:lvgl/src/draw/lv_img_decoder.c ****         }
 394              		.loc 1 369 20 is_stmt 0 view .LVU110
 395 0034 0120     		movs	r0, #1
 396              	.LVL36:
 397              	.L32:
 441:lvgl/src/draw/lv_img_decoder.c **** 
 398              		.loc 1 441 1 view .LVU111
 399 0036 04B0     		add	sp, sp, #16
 400              	.LCFI7:
 401              		.cfi_remember_state
 402              		.cfi_def_cfa_offset 32
 403              		@ sp needed
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 18


 404 0038 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 405              	.LVL37:
 406              	.L52:
 407              	.LCFI8:
 408              		.cfi_restore_state
 409              	.LBB15:
 331:lvgl/src/draw/lv_img_decoder.c **** 
 410              		.loc 1 331 9 is_stmt 1 view .LVU112
 331:lvgl/src/draw/lv_img_decoder.c **** 
 411              		.loc 1 331 12 is_stmt 0 view .LVU113
 412 003c 4868     		ldr	r0, [r1, #4]
 413 003e FFF7FEFF 		bl	lv_fs_get_ext
 414              	.LVL38:
 331:lvgl/src/draw/lv_img_decoder.c **** 
 415              		.loc 1 331 12 discriminator 1 view .LVU114
 416 0042 5949     		ldr	r1, .L60
 417 0044 FFF7FEFF 		bl	strcmp
 418              	.LVL39:
 331:lvgl/src/draw/lv_img_decoder.c **** 
 419              		.loc 1 331 11 discriminator 2 view .LVU115
 420 0048 08B1     		cbz	r0, .L53
 421              	.L25:
 331:lvgl/src/draw/lv_img_decoder.c **** 
 422              		.loc 1 331 59 discriminator 2 view .LVU116
 423 004a 0020     		movs	r0, #0
 424 004c F3E7     		b	.L32
 425              	.L53:
 333:lvgl/src/draw/lv_img_decoder.c ****         lv_fs_res_t res = lv_fs_open(&f, dsc->src, LV_FS_MODE_RD);
 426              		.loc 1 333 9 is_stmt 1 view .LVU117
 334:lvgl/src/draw/lv_img_decoder.c ****         if(res != LV_FS_RES_OK) {
 427              		.loc 1 334 9 view .LVU118
 334:lvgl/src/draw/lv_img_decoder.c ****         if(res != LV_FS_RES_OK) {
 428              		.loc 1 334 27 is_stmt 0 view .LVU119
 429 004e 0222     		movs	r2, #2
 430 0050 6168     		ldr	r1, [r4, #4]
 431 0052 01A8     		add	r0, sp, #4
 432 0054 FFF7FEFF 		bl	lv_fs_open
 433              	.LVL40:
 335:lvgl/src/draw/lv_img_decoder.c ****             LV_LOG_WARN("Built-in image decoder can't open the file");
 434              		.loc 1 335 9 is_stmt 1 view .LVU120
 335:lvgl/src/draw/lv_img_decoder.c ****             LV_LOG_WARN("Built-in image decoder can't open the file");
 435              		.loc 1 335 11 is_stmt 0 view .LVU121
 436 0058 0028     		cmp	r0, #0
 437 005a F6D1     		bne	.L25
 341:lvgl/src/draw/lv_img_decoder.c ****             dsc->user_data = lv_mem_alloc(sizeof(lv_img_decoder_built_in_data_t));
 438              		.loc 1 341 9 is_stmt 1 view .LVU122
 341:lvgl/src/draw/lv_img_decoder.c ****             dsc->user_data = lv_mem_alloc(sizeof(lv_img_decoder_built_in_data_t));
 439              		.loc 1 341 15 is_stmt 0 view .LVU123
 440 005c 636A     		ldr	r3, [r4, #36]
 341:lvgl/src/draw/lv_img_decoder.c ****             dsc->user_data = lv_mem_alloc(sizeof(lv_img_decoder_built_in_data_t));
 441              		.loc 1 341 11 view .LVU124
 442 005e 1BB1     		cbz	r3, .L54
 443              	.LVL41:
 444              	.L26:
 352:lvgl/src/draw/lv_img_decoder.c ****         lv_memcpy_small(&user_data->f, &f, sizeof(f));
 445              		.loc 1 352 9 is_stmt 1 view .LVU125
 352:lvgl/src/draw/lv_img_decoder.c ****         lv_memcpy_small(&user_data->f, &f, sizeof(f));
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 19


 446              		.loc 1 352 42 is_stmt 0 view .LVU126
 447 0060 616A     		ldr	r1, [r4, #36]
 448              	.LVL42:
 353:lvgl/src/draw/lv_img_decoder.c ****     }
 449              		.loc 1 353 9 is_stmt 1 view .LVU127
 450              	.LBB16:
 451              	.LBI16:
 452              		.file 2 "lvgl/src/draw/../misc/lv_mem.h"
   1:lvgl/src/draw/../misc/lv_mem.h **** /**
   2:lvgl/src/draw/../misc/lv_mem.h ****  * @file lv_mem.h
   3:lvgl/src/draw/../misc/lv_mem.h ****  *
   4:lvgl/src/draw/../misc/lv_mem.h ****  */
   5:lvgl/src/draw/../misc/lv_mem.h **** 
   6:lvgl/src/draw/../misc/lv_mem.h **** #ifndef LV_MEM_H
   7:lvgl/src/draw/../misc/lv_mem.h **** #define LV_MEM_H
   8:lvgl/src/draw/../misc/lv_mem.h **** 
   9:lvgl/src/draw/../misc/lv_mem.h **** #ifdef __cplusplus
  10:lvgl/src/draw/../misc/lv_mem.h **** extern "C" {
  11:lvgl/src/draw/../misc/lv_mem.h **** #endif
  12:lvgl/src/draw/../misc/lv_mem.h **** 
  13:lvgl/src/draw/../misc/lv_mem.h **** /*********************
  14:lvgl/src/draw/../misc/lv_mem.h ****  *      INCLUDES
  15:lvgl/src/draw/../misc/lv_mem.h ****  *********************/
  16:lvgl/src/draw/../misc/lv_mem.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/draw/../misc/lv_mem.h **** 
  18:lvgl/src/draw/../misc/lv_mem.h **** #include <stdint.h>
  19:lvgl/src/draw/../misc/lv_mem.h **** #include <stddef.h>
  20:lvgl/src/draw/../misc/lv_mem.h **** #include <string.h>
  21:lvgl/src/draw/../misc/lv_mem.h **** 
  22:lvgl/src/draw/../misc/lv_mem.h **** #include "lv_types.h"
  23:lvgl/src/draw/../misc/lv_mem.h **** 
  24:lvgl/src/draw/../misc/lv_mem.h **** /*********************
  25:lvgl/src/draw/../misc/lv_mem.h ****  *      DEFINES
  26:lvgl/src/draw/../misc/lv_mem.h ****  *********************/
  27:lvgl/src/draw/../misc/lv_mem.h **** 
  28:lvgl/src/draw/../misc/lv_mem.h **** /**********************
  29:lvgl/src/draw/../misc/lv_mem.h ****  *      TYPEDEFS
  30:lvgl/src/draw/../misc/lv_mem.h ****  **********************/
  31:lvgl/src/draw/../misc/lv_mem.h **** 
  32:lvgl/src/draw/../misc/lv_mem.h **** /**
  33:lvgl/src/draw/../misc/lv_mem.h ****  * Heap information structure.
  34:lvgl/src/draw/../misc/lv_mem.h ****  */
  35:lvgl/src/draw/../misc/lv_mem.h **** typedef struct {
  36:lvgl/src/draw/../misc/lv_mem.h ****     uint32_t total_size; /**< Total heap size*/
  37:lvgl/src/draw/../misc/lv_mem.h ****     uint32_t free_cnt;
  38:lvgl/src/draw/../misc/lv_mem.h ****     uint32_t free_size; /**< Size of available memory*/
  39:lvgl/src/draw/../misc/lv_mem.h ****     uint32_t free_biggest_size;
  40:lvgl/src/draw/../misc/lv_mem.h ****     uint32_t used_cnt;
  41:lvgl/src/draw/../misc/lv_mem.h ****     uint32_t max_used; /**< Max size of Heap memory used*/
  42:lvgl/src/draw/../misc/lv_mem.h ****     uint8_t used_pct; /**< Percentage used*/
  43:lvgl/src/draw/../misc/lv_mem.h ****     uint8_t frag_pct; /**< Amount of fragmentation*/
  44:lvgl/src/draw/../misc/lv_mem.h **** } lv_mem_monitor_t;
  45:lvgl/src/draw/../misc/lv_mem.h **** 
  46:lvgl/src/draw/../misc/lv_mem.h **** typedef struct {
  47:lvgl/src/draw/../misc/lv_mem.h ****     void * p;
  48:lvgl/src/draw/../misc/lv_mem.h ****     uint16_t size;
  49:lvgl/src/draw/../misc/lv_mem.h ****     uint8_t used : 1;
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 20


  50:lvgl/src/draw/../misc/lv_mem.h **** } lv_mem_buf_t;
  51:lvgl/src/draw/../misc/lv_mem.h **** 
  52:lvgl/src/draw/../misc/lv_mem.h **** typedef lv_mem_buf_t lv_mem_buf_arr_t[LV_MEM_BUF_MAX_NUM];
  53:lvgl/src/draw/../misc/lv_mem.h **** 
  54:lvgl/src/draw/../misc/lv_mem.h **** /**********************
  55:lvgl/src/draw/../misc/lv_mem.h ****  * GLOBAL PROTOTYPES
  56:lvgl/src/draw/../misc/lv_mem.h ****  **********************/
  57:lvgl/src/draw/../misc/lv_mem.h **** 
  58:lvgl/src/draw/../misc/lv_mem.h **** /**
  59:lvgl/src/draw/../misc/lv_mem.h ****  * Initialize the dyn_mem module (work memory and other variables)
  60:lvgl/src/draw/../misc/lv_mem.h ****  */
  61:lvgl/src/draw/../misc/lv_mem.h **** void lv_mem_init(void);
  62:lvgl/src/draw/../misc/lv_mem.h **** 
  63:lvgl/src/draw/../misc/lv_mem.h **** /**
  64:lvgl/src/draw/../misc/lv_mem.h ****  * Clean up the memory buffer which frees all the allocated memories.
  65:lvgl/src/draw/../misc/lv_mem.h ****  * @note It work only if `LV_MEM_CUSTOM == 0`
  66:lvgl/src/draw/../misc/lv_mem.h ****  */
  67:lvgl/src/draw/../misc/lv_mem.h **** void lv_mem_deinit(void);
  68:lvgl/src/draw/../misc/lv_mem.h **** 
  69:lvgl/src/draw/../misc/lv_mem.h **** /**
  70:lvgl/src/draw/../misc/lv_mem.h ****  * Allocate a memory dynamically
  71:lvgl/src/draw/../misc/lv_mem.h ****  * @param size size of the memory to allocate in bytes
  72:lvgl/src/draw/../misc/lv_mem.h ****  * @return pointer to the allocated memory
  73:lvgl/src/draw/../misc/lv_mem.h ****  */
  74:lvgl/src/draw/../misc/lv_mem.h **** void * lv_mem_alloc(size_t size);
  75:lvgl/src/draw/../misc/lv_mem.h **** 
  76:lvgl/src/draw/../misc/lv_mem.h **** /**
  77:lvgl/src/draw/../misc/lv_mem.h ****  * Free an allocated data
  78:lvgl/src/draw/../misc/lv_mem.h ****  * @param data pointer to an allocated memory
  79:lvgl/src/draw/../misc/lv_mem.h ****  */
  80:lvgl/src/draw/../misc/lv_mem.h **** void lv_mem_free(void * data);
  81:lvgl/src/draw/../misc/lv_mem.h **** 
  82:lvgl/src/draw/../misc/lv_mem.h **** /**
  83:lvgl/src/draw/../misc/lv_mem.h ****  * Reallocate a memory with a new size. The old content will be kept.
  84:lvgl/src/draw/../misc/lv_mem.h ****  * @param data pointer to an allocated memory.
  85:lvgl/src/draw/../misc/lv_mem.h ****  * Its content will be copied to the new memory block and freed
  86:lvgl/src/draw/../misc/lv_mem.h ****  * @param new_size the desired new size in byte
  87:lvgl/src/draw/../misc/lv_mem.h ****  * @return pointer to the new memory, NULL on failure
  88:lvgl/src/draw/../misc/lv_mem.h ****  */
  89:lvgl/src/draw/../misc/lv_mem.h **** void * lv_mem_realloc(void * data_p, size_t new_size);
  90:lvgl/src/draw/../misc/lv_mem.h **** 
  91:lvgl/src/draw/../misc/lv_mem.h **** /**
  92:lvgl/src/draw/../misc/lv_mem.h ****  *
  93:lvgl/src/draw/../misc/lv_mem.h ****  * @return
  94:lvgl/src/draw/../misc/lv_mem.h ****  */
  95:lvgl/src/draw/../misc/lv_mem.h **** lv_res_t lv_mem_test(void);
  96:lvgl/src/draw/../misc/lv_mem.h **** 
  97:lvgl/src/draw/../misc/lv_mem.h **** /**
  98:lvgl/src/draw/../misc/lv_mem.h ****  * Give information about the work memory of dynamic allocation
  99:lvgl/src/draw/../misc/lv_mem.h ****  * @param mon_p pointer to a lv_mem_monitor_t variable,
 100:lvgl/src/draw/../misc/lv_mem.h ****  *              the result of the analysis will be stored here
 101:lvgl/src/draw/../misc/lv_mem.h ****  */
 102:lvgl/src/draw/../misc/lv_mem.h **** void lv_mem_monitor(lv_mem_monitor_t * mon_p);
 103:lvgl/src/draw/../misc/lv_mem.h **** 
 104:lvgl/src/draw/../misc/lv_mem.h **** 
 105:lvgl/src/draw/../misc/lv_mem.h **** /**
 106:lvgl/src/draw/../misc/lv_mem.h ****  * Get a temporal buffer with the given size.
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 21


 107:lvgl/src/draw/../misc/lv_mem.h ****  * @param size the required size
 108:lvgl/src/draw/../misc/lv_mem.h ****  */
 109:lvgl/src/draw/../misc/lv_mem.h **** void * lv_mem_buf_get(uint32_t size);
 110:lvgl/src/draw/../misc/lv_mem.h **** 
 111:lvgl/src/draw/../misc/lv_mem.h **** /**
 112:lvgl/src/draw/../misc/lv_mem.h ****  * Release a memory buffer
 113:lvgl/src/draw/../misc/lv_mem.h ****  * @param p buffer to release
 114:lvgl/src/draw/../misc/lv_mem.h ****  */
 115:lvgl/src/draw/../misc/lv_mem.h **** void lv_mem_buf_release(void * p);
 116:lvgl/src/draw/../misc/lv_mem.h **** 
 117:lvgl/src/draw/../misc/lv_mem.h **** /**
 118:lvgl/src/draw/../misc/lv_mem.h ****  * Free all memory buffers
 119:lvgl/src/draw/../misc/lv_mem.h ****  */
 120:lvgl/src/draw/../misc/lv_mem.h **** void lv_mem_buf_free_all(void);
 121:lvgl/src/draw/../misc/lv_mem.h **** 
 122:lvgl/src/draw/../misc/lv_mem.h **** //! @cond Doxygen_Suppress
 123:lvgl/src/draw/../misc/lv_mem.h **** 
 124:lvgl/src/draw/../misc/lv_mem.h **** #if LV_MEMCPY_MEMSET_STD
 125:lvgl/src/draw/../misc/lv_mem.h **** 
 126:lvgl/src/draw/../misc/lv_mem.h **** /**
 127:lvgl/src/draw/../misc/lv_mem.h ****  * Wrapper for the standard memcpy
 128:lvgl/src/draw/../misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 129:lvgl/src/draw/../misc/lv_mem.h ****  * @param src pointer to the source buffer
 130:lvgl/src/draw/../misc/lv_mem.h ****  * @param len number of byte to copy
 131:lvgl/src/draw/../misc/lv_mem.h ****  */
 132:lvgl/src/draw/../misc/lv_mem.h **** static inline void * lv_memcpy(void * dst, const void * src, size_t len)
 133:lvgl/src/draw/../misc/lv_mem.h **** {
 134:lvgl/src/draw/../misc/lv_mem.h ****     return memcpy(dst, src, len);
 135:lvgl/src/draw/../misc/lv_mem.h **** }
 136:lvgl/src/draw/../misc/lv_mem.h **** 
 137:lvgl/src/draw/../misc/lv_mem.h **** /**
 138:lvgl/src/draw/../misc/lv_mem.h ****  * Wrapper for the standard memcpy
 139:lvgl/src/draw/../misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 140:lvgl/src/draw/../misc/lv_mem.h ****  * @param src pointer to the source buffer
 141:lvgl/src/draw/../misc/lv_mem.h ****  * @param len number of byte to copy
 142:lvgl/src/draw/../misc/lv_mem.h ****  */
 143:lvgl/src/draw/../misc/lv_mem.h **** static inline void * lv_memcpy_small(void * dst, const void * src, size_t len)
 144:lvgl/src/draw/../misc/lv_mem.h **** {
 145:lvgl/src/draw/../misc/lv_mem.h ****     return memcpy(dst, src, len);
 146:lvgl/src/draw/../misc/lv_mem.h **** }
 147:lvgl/src/draw/../misc/lv_mem.h **** 
 148:lvgl/src/draw/../misc/lv_mem.h **** /**
 149:lvgl/src/draw/../misc/lv_mem.h ****  * Wrapper for the standard memset
 150:lvgl/src/draw/../misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 151:lvgl/src/draw/../misc/lv_mem.h ****  * @param v value to set [0..255]
 152:lvgl/src/draw/../misc/lv_mem.h ****  * @param len number of byte to set
 153:lvgl/src/draw/../misc/lv_mem.h ****  */
 154:lvgl/src/draw/../misc/lv_mem.h **** static inline void lv_memset(void * dst, uint8_t v, size_t len)
 155:lvgl/src/draw/../misc/lv_mem.h **** {
 156:lvgl/src/draw/../misc/lv_mem.h ****     memset(dst, v, len);
 157:lvgl/src/draw/../misc/lv_mem.h **** }
 158:lvgl/src/draw/../misc/lv_mem.h **** 
 159:lvgl/src/draw/../misc/lv_mem.h **** /**
 160:lvgl/src/draw/../misc/lv_mem.h ****  * Wrapper for the standard memset with fixed 0x00 value
 161:lvgl/src/draw/../misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 162:lvgl/src/draw/../misc/lv_mem.h ****  * @param len number of byte to set
 163:lvgl/src/draw/../misc/lv_mem.h ****  */
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 22


 164:lvgl/src/draw/../misc/lv_mem.h **** static inline void lv_memset_00(void * dst, size_t len)
 165:lvgl/src/draw/../misc/lv_mem.h **** {
 166:lvgl/src/draw/../misc/lv_mem.h ****     memset(dst, 0x00, len);
 167:lvgl/src/draw/../misc/lv_mem.h **** }
 168:lvgl/src/draw/../misc/lv_mem.h **** 
 169:lvgl/src/draw/../misc/lv_mem.h **** /**
 170:lvgl/src/draw/../misc/lv_mem.h ****  * Wrapper for the standard memset with fixed 0xFF value
 171:lvgl/src/draw/../misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 172:lvgl/src/draw/../misc/lv_mem.h ****  * @param len number of byte to set
 173:lvgl/src/draw/../misc/lv_mem.h ****  */
 174:lvgl/src/draw/../misc/lv_mem.h **** static inline void lv_memset_ff(void * dst, size_t len)
 175:lvgl/src/draw/../misc/lv_mem.h **** {
 176:lvgl/src/draw/../misc/lv_mem.h ****     memset(dst, 0xFF, len);
 177:lvgl/src/draw/../misc/lv_mem.h **** }
 178:lvgl/src/draw/../misc/lv_mem.h **** 
 179:lvgl/src/draw/../misc/lv_mem.h **** #else
 180:lvgl/src/draw/../misc/lv_mem.h **** /**
 181:lvgl/src/draw/../misc/lv_mem.h ****  * Same as `memcpy` but optimized for 4 byte operation.
 182:lvgl/src/draw/../misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 183:lvgl/src/draw/../misc/lv_mem.h ****  * @param src pointer to the source buffer
 184:lvgl/src/draw/../misc/lv_mem.h ****  * @param len number of byte to copy
 185:lvgl/src/draw/../misc/lv_mem.h ****  */
 186:lvgl/src/draw/../misc/lv_mem.h **** LV_ATTRIBUTE_FAST_MEM void * lv_memcpy(void * dst, const void * src, size_t len);
 187:lvgl/src/draw/../misc/lv_mem.h **** 
 188:lvgl/src/draw/../misc/lv_mem.h **** /**
 189:lvgl/src/draw/../misc/lv_mem.h ****  * Same as `memcpy` but optimized to copy only a few bytes.
 190:lvgl/src/draw/../misc/lv_mem.h ****  * @param dst pointer to the destination buffer
 191:lvgl/src/draw/../misc/lv_mem.h ****  * @param src pointer to the source buffer
 192:lvgl/src/draw/../misc/lv_mem.h ****  * @param len number of byte to copy
 193:lvgl/src/draw/../misc/lv_mem.h ****  */
 194:lvgl/src/draw/../misc/lv_mem.h **** LV_ATTRIBUTE_FAST_MEM static inline void * lv_memcpy_small(void * dst, const void * src, size_t len
 453              		.loc 2 194 44 view .LVU128
 454              	.LBB17:
 195:lvgl/src/draw/../misc/lv_mem.h **** {
 196:lvgl/src/draw/../misc/lv_mem.h ****     uint8_t * d8 = (uint8_t *)dst;
 455              		.loc 2 196 5 view .LVU129
 197:lvgl/src/draw/../misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 456              		.loc 2 197 5 view .LVU130
 198:lvgl/src/draw/../misc/lv_mem.h **** 
 199:lvgl/src/draw/../misc/lv_mem.h ****     while(len) {
 457              		.loc 2 199 5 view .LVU131
 197:lvgl/src/draw/../misc/lv_mem.h ****     const uint8_t * s8 = (const uint8_t *)src;
 458              		.loc 2 197 21 is_stmt 0 view .LVU132
 459 0062 01AA     		add	r2, sp, #4
 460              	.LVL43:
 461              		.loc 2 199 10 view .LVU133
 462 0064 0C23     		movs	r3, #12
 463 0066 0EE0     		b	.L29
 464              	.LVL44:
 465              	.L54:
 466              		.loc 2 199 10 view .LVU134
 467              	.LBE17:
 468              	.LBE16:
 342:lvgl/src/draw/lv_img_decoder.c ****             LV_ASSERT_MALLOC(dsc->user_data);
 469              		.loc 1 342 13 is_stmt 1 view .LVU135
 342:lvgl/src/draw/lv_img_decoder.c ****             LV_ASSERT_MALLOC(dsc->user_data);
 470              		.loc 1 342 30 is_stmt 0 view .LVU136
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 23


 471 0068 1420     		movs	r0, #20
 472              	.LVL45:
 342:lvgl/src/draw/lv_img_decoder.c ****             LV_ASSERT_MALLOC(dsc->user_data);
 473              		.loc 1 342 30 view .LVU137
 474 006a FFF7FEFF 		bl	lv_mem_alloc
 475              	.LVL46:
 342:lvgl/src/draw/lv_img_decoder.c ****             LV_ASSERT_MALLOC(dsc->user_data);
 476              		.loc 1 342 28 discriminator 1 view .LVU138
 477 006e 6062     		str	r0, [r4, #36]
 343:lvgl/src/draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 478              		.loc 1 343 13 is_stmt 1 view .LVU139
 343:lvgl/src/draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 479              		.loc 1 343 13 view .LVU140
 480 0070 18B1     		cbz	r0, .L28
 343:lvgl/src/draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 481              		.loc 1 343 13 discriminator 2 view .LVU141
 343:lvgl/src/draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 482              		.loc 1 343 45 discriminator 2 view .LVU142
 344:lvgl/src/draw/lv_img_decoder.c ****                 LV_LOG_ERROR("img_decoder_built_in_open: out of memory");
 483              		.loc 1 344 13 view .LVU143
 349:lvgl/src/draw/lv_img_decoder.c ****         }
 484              		.loc 1 349 13 view .LVU144
 485 0072 1421     		movs	r1, #20
 486 0074 FFF7FEFF 		bl	lv_memset_00
 487              	.LVL47:
 488 0078 F2E7     		b	.L26
 489              	.L28:
 343:lvgl/src/draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 490              		.loc 1 343 13 discriminator 1 view .LVU145
 343:lvgl/src/draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 491              		.loc 1 343 13 discriminator 1 view .LVU146
 343:lvgl/src/draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 492              		.loc 1 343 13 discriminator 1 view .LVU147
 343:lvgl/src/draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 493              		.loc 1 343 13 discriminator 1 view .LVU148
 343:lvgl/src/draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 494              		.loc 1 343 13 discriminator 1 view .LVU149
 495 007a FEE7     		b	.L28
 496              	.LVL48:
 497              	.L30:
 498              	.LBB19:
 499              	.LBB18:
 200:lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 500              		.loc 2 200 9 view .LVU150
 501              		.loc 2 200 15 is_stmt 0 view .LVU151
 502 007c 12F8010B 		ldrb	r0, [r2], #1	@ zero_extendqisi2
 503              	.LVL49:
 504              		.loc 2 200 13 view .LVU152
 505 0080 01F8010B 		strb	r0, [r1], #1
 506              	.LVL50:
 201:lvgl/src/draw/../misc/lv_mem.h ****         d8++;
 507              		.loc 2 201 9 is_stmt 1 view .LVU153
 202:lvgl/src/draw/../misc/lv_mem.h ****         s8++;
 508              		.loc 2 202 9 view .LVU154
 203:lvgl/src/draw/../misc/lv_mem.h ****         len--;
 509              		.loc 2 203 9 view .LVU155
 510              		.loc 2 203 12 is_stmt 0 view .LVU156
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 24


 511 0084 013B     		subs	r3, r3, #1
 512              	.LVL51:
 513              	.L29:
 199:lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 514              		.loc 2 199 11 is_stmt 1 view .LVU157
 515 0086 002B     		cmp	r3, #0
 516 0088 F8D1     		bne	.L30
 199:lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 517              		.loc 2 199 11 is_stmt 0 view .LVU158
 518 008a C5E7     		b	.L31
 519              	.LVL52:
 520              	.L33:
 199:lvgl/src/draw/../misc/lv_mem.h ****         *d8 = *s8;
 521              		.loc 2 199 11 view .LVU159
 522              	.LBE18:
 523              	.LBE19:
 524              	.LBE15:
 377:lvgl/src/draw/lv_img_decoder.c ****             cf == LV_IMG_CF_INDEXED_8BIT) {
 525              		.loc 1 377 10 is_stmt 1 view .LVU160
 377:lvgl/src/draw/lv_img_decoder.c ****             cf == LV_IMG_CF_INDEXED_8BIT) {
 526              		.loc 1 377 106 is_stmt 0 view .LVU161
 527 008c C21F     		subs	r2, r0, #7
 528 008e D2B2     		uxtb	r2, r2
 377:lvgl/src/draw/lv_img_decoder.c ****             cf == LV_IMG_CF_INDEXED_8BIT) {
 529              		.loc 1 377 12 view .LVU162
 530 0090 032A     		cmp	r2, #3
 531 0092 06D9     		bls	.L55
 429:lvgl/src/draw/lv_img_decoder.c ****             cf == LV_IMG_CF_ALPHA_8BIT) {
 532              		.loc 1 429 10 is_stmt 1 view .LVU163
 429:lvgl/src/draw/lv_img_decoder.c ****             cf == LV_IMG_CF_ALPHA_8BIT) {
 533              		.loc 1 429 100 is_stmt 0 view .LVU164
 534 0094 A0F10B03 		sub	r3, r0, #11
 535              	.LVL53:
 429:lvgl/src/draw/lv_img_decoder.c ****             cf == LV_IMG_CF_ALPHA_8BIT) {
 536              		.loc 1 429 100 view .LVU165
 537 0098 DBB2     		uxtb	r3, r3
 429:lvgl/src/draw/lv_img_decoder.c ****             cf == LV_IMG_CF_ALPHA_8BIT) {
 538              		.loc 1 429 12 view .LVU166
 539 009a 032B     		cmp	r3, #3
 540 009c 7BD8     		bhi	.L56
 431:lvgl/src/draw/lv_img_decoder.c ****     }
 541              		.loc 1 431 16 view .LVU167
 542 009e 0120     		movs	r0, #1
 543 00a0 C9E7     		b	.L32
 544              	.LVL54:
 545              	.L55:
 546              	.LBB20:
 379:lvgl/src/draw/lv_img_decoder.c ****         uint32_t palette_size = 1 << px_size;
 547              		.loc 1 379 9 is_stmt 1 view .LVU168
 379:lvgl/src/draw/lv_img_decoder.c ****         uint32_t palette_size = 1 << px_size;
 548              		.loc 1 379 33 is_stmt 0 view .LVU169
 549 00a2 FFF7FEFF 		bl	lv_img_cf_get_px_size
 550              	.LVL55:
 379:lvgl/src/draw/lv_img_decoder.c ****         uint32_t palette_size = 1 << px_size;
 551              		.loc 1 379 33 view .LVU170
 552 00a6 8246     		mov	r10, r0
 553              	.LVL56:
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 25


 380:lvgl/src/draw/lv_img_decoder.c **** 
 554              		.loc 1 380 9 is_stmt 1 view .LVU171
 380:lvgl/src/draw/lv_img_decoder.c **** 
 555              		.loc 1 380 35 is_stmt 0 view .LVU172
 556 00a8 4FF00109 		mov	r9, #1
 557 00ac 09FA00F9 		lsl	r9, r9, r0
 558              	.LVL57:
 383:lvgl/src/draw/lv_img_decoder.c ****             dsc->user_data = lv_mem_alloc(sizeof(lv_img_decoder_built_in_data_t));
 559              		.loc 1 383 9 is_stmt 1 view .LVU173
 383:lvgl/src/draw/lv_img_decoder.c ****             dsc->user_data = lv_mem_alloc(sizeof(lv_img_decoder_built_in_data_t));
 560              		.loc 1 383 15 is_stmt 0 view .LVU174
 561 00b0 636A     		ldr	r3, [r4, #36]
 383:lvgl/src/draw/lv_img_decoder.c ****             dsc->user_data = lv_mem_alloc(sizeof(lv_img_decoder_built_in_data_t));
 562              		.loc 1 383 11 view .LVU175
 563 00b2 9BB3     		cbz	r3, .L57
 564              	.LVL58:
 565              	.L35:
 393:lvgl/src/draw/lv_img_decoder.c ****         user_data->palette                         = lv_mem_alloc(palette_size * sizeof(lv_color_t)
 566              		.loc 1 393 9 is_stmt 1 view .LVU176
 393:lvgl/src/draw/lv_img_decoder.c ****         user_data->palette                         = lv_mem_alloc(palette_size * sizeof(lv_color_t)
 567              		.loc 1 393 42 is_stmt 0 view .LVU177
 568 00b4 D4F82480 		ldr	r8, [r4, #36]
 569              	.LVL59:
 394:lvgl/src/draw/lv_img_decoder.c ****         LV_ASSERT_MALLOC(user_data->palette);
 570              		.loc 1 394 9 is_stmt 1 view .LVU178
 394:lvgl/src/draw/lv_img_decoder.c ****         LV_ASSERT_MALLOC(user_data->palette);
 571              		.loc 1 394 54 is_stmt 0 view .LVU179
 572 00b8 0220     		movs	r0, #2
 573 00ba 00FA0AF0 		lsl	r0, r0, r10
 574 00be FFF7FEFF 		bl	lv_mem_alloc
 575              	.LVL60:
 394:lvgl/src/draw/lv_img_decoder.c ****         LV_ASSERT_MALLOC(user_data->palette);
 576              		.loc 1 394 52 discriminator 1 view .LVU180
 577 00c2 C8F80C00 		str	r0, [r8, #12]
 395:lvgl/src/draw/lv_img_decoder.c ****         user_data->opa                             = lv_mem_alloc(palette_size * sizeof(lv_opa_t));
 578              		.loc 1 395 9 is_stmt 1 view .LVU181
 395:lvgl/src/draw/lv_img_decoder.c ****         user_data->opa                             = lv_mem_alloc(palette_size * sizeof(lv_opa_t));
 579              		.loc 1 395 9 view .LVU182
 580 00c6 98B3     		cbz	r0, .L39
 395:lvgl/src/draw/lv_img_decoder.c ****         user_data->opa                             = lv_mem_alloc(palette_size * sizeof(lv_opa_t));
 581              		.loc 1 395 9 discriminator 2 view .LVU183
 395:lvgl/src/draw/lv_img_decoder.c ****         user_data->opa                             = lv_mem_alloc(palette_size * sizeof(lv_opa_t));
 582              		.loc 1 395 45 discriminator 2 view .LVU184
 396:lvgl/src/draw/lv_img_decoder.c ****         LV_ASSERT_MALLOC(user_data->opa);
 583              		.loc 1 396 9 view .LVU185
 396:lvgl/src/draw/lv_img_decoder.c ****         LV_ASSERT_MALLOC(user_data->opa);
 584              		.loc 1 396 54 is_stmt 0 view .LVU186
 585 00c8 4846     		mov	r0, r9
 586 00ca FFF7FEFF 		bl	lv_mem_alloc
 587              	.LVL61:
 396:lvgl/src/draw/lv_img_decoder.c ****         LV_ASSERT_MALLOC(user_data->opa);
 588              		.loc 1 396 52 discriminator 1 view .LVU187
 589 00ce C8F81000 		str	r0, [r8, #16]
 397:lvgl/src/draw/lv_img_decoder.c ****         if(user_data->palette == NULL || user_data->opa == NULL) {
 590              		.loc 1 397 9 is_stmt 1 view .LVU188
 397:lvgl/src/draw/lv_img_decoder.c ****         if(user_data->palette == NULL || user_data->opa == NULL) {
 591              		.loc 1 397 9 view .LVU189
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 26


 592 00d2 70B3     		cbz	r0, .L41
 397:lvgl/src/draw/lv_img_decoder.c ****         if(user_data->palette == NULL || user_data->opa == NULL) {
 593              		.loc 1 397 9 discriminator 2 view .LVU190
 397:lvgl/src/draw/lv_img_decoder.c ****         if(user_data->palette == NULL || user_data->opa == NULL) {
 594              		.loc 1 397 41 discriminator 2 view .LVU191
 398:lvgl/src/draw/lv_img_decoder.c ****             LV_LOG_ERROR("img_decoder_built_in_open: out of memory");
 595              		.loc 1 398 9 view .LVU192
 398:lvgl/src/draw/lv_img_decoder.c ****             LV_LOG_ERROR("img_decoder_built_in_open: out of memory");
 596              		.loc 1 398 21 is_stmt 0 view .LVU193
 597 00d4 D8F80C30 		ldr	r3, [r8, #12]
 398:lvgl/src/draw/lv_img_decoder.c ****             LV_LOG_ERROR("img_decoder_built_in_open: out of memory");
 598              		.loc 1 398 11 view .LVU194
 599 00d8 63B3     		cbz	r3, .L58
 404:lvgl/src/draw/lv_img_decoder.c ****             /*Read the palette from file*/
 600              		.loc 1 404 9 is_stmt 1 view .LVU195
 404:lvgl/src/draw/lv_img_decoder.c ****             /*Read the palette from file*/
 601              		.loc 1 404 15 is_stmt 0 view .LVU196
 602 00da 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 404:lvgl/src/draw/lv_img_decoder.c ****             /*Read the palette from file*/
 603              		.loc 1 404 11 view .LVU197
 604 00dc 012B     		cmp	r3, #1
 605 00de 2FD0     		beq	.L59
 606              	.LBB21:
 417:lvgl/src/draw/lv_img_decoder.c **** 
 607              		.loc 1 417 13 is_stmt 1 view .LVU198
 417:lvgl/src/draw/lv_img_decoder.c **** 
 608              		.loc 1 417 76 is_stmt 0 view .LVU199
 609 00e0 6368     		ldr	r3, [r4, #4]
 417:lvgl/src/draw/lv_img_decoder.c **** 
 610              		.loc 1 417 28 view .LVU200
 611 00e2 9F68     		ldr	r7, [r3, #8]
 612              	.LVL62:
 419:lvgl/src/draw/lv_img_decoder.c ****             for(i = 0; i < palette_size; i++) {
 613              		.loc 1 419 13 is_stmt 1 view .LVU201
 420:lvgl/src/draw/lv_img_decoder.c ****                 user_data->palette[i] = lv_color_make(palette_p[i].ch.red, palette_p[i].ch.green, p
 614              		.loc 1 420 13 view .LVU202
 420:lvgl/src/draw/lv_img_decoder.c ****                 user_data->palette[i] = lv_color_make(palette_p[i].ch.red, palette_p[i].ch.green, p
 615              		.loc 1 420 19 is_stmt 0 view .LVU203
 616 00e4 0023     		movs	r3, #0
 617              	.LVL63:
 618              	.L47:
 420:lvgl/src/draw/lv_img_decoder.c ****                 user_data->palette[i] = lv_color_make(palette_p[i].ch.red, palette_p[i].ch.green, p
 619              		.loc 1 420 26 is_stmt 1 discriminator 1 view .LVU204
 620 00e6 4B45     		cmp	r3, r9
 621 00e8 53D2     		bcs	.L46
 421:lvgl/src/draw/lv_img_decoder.c ****                 user_data->opa[i]     = palette_p[i].ch.alpha;
 622              		.loc 1 421 17 view .LVU205
 421:lvgl/src/draw/lv_img_decoder.c ****                 user_data->opa[i]     = palette_p[i].ch.alpha;
 623              		.loc 1 421 64 is_stmt 0 view .LVU206
 624 00ea 07EB8302 		add	r2, r7, r3, lsl #2
 421:lvgl/src/draw/lv_img_decoder.c ****                 user_data->opa[i]     = palette_p[i].ch.alpha;
 625              		.loc 1 421 41 view .LVU207
 626 00ee 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 627 00f0 5478     		ldrb	r4, [r2, #1]	@ zero_extendqisi2
 628 00f2 17F82350 		ldrb	r5, [r7, r3, lsl #2]	@ zero_extendqisi2
 421:lvgl/src/draw/lv_img_decoder.c ****                 user_data->opa[i]     = palette_p[i].ch.alpha;
 629              		.loc 1 421 26 view .LVU208
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 27


 630 00f6 D8F80C00 		ldr	r0, [r8, #12]
 631              	.LVL64:
 632              	.LBB22:
 633              	.LBI22:
 634              		.file 3 "lvgl/src/draw/../misc/lv_color.h"
   1:lvgl/src/draw/../misc/lv_color.h **** /**
   2:lvgl/src/draw/../misc/lv_color.h ****  * @file lv_color.h
   3:lvgl/src/draw/../misc/lv_color.h ****  *
   4:lvgl/src/draw/../misc/lv_color.h ****  */
   5:lvgl/src/draw/../misc/lv_color.h **** 
   6:lvgl/src/draw/../misc/lv_color.h **** #ifndef LV_COLOR_H
   7:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_H
   8:lvgl/src/draw/../misc/lv_color.h **** 
   9:lvgl/src/draw/../misc/lv_color.h **** #ifdef __cplusplus
  10:lvgl/src/draw/../misc/lv_color.h **** extern "C" {
  11:lvgl/src/draw/../misc/lv_color.h **** #endif
  12:lvgl/src/draw/../misc/lv_color.h **** 
  13:lvgl/src/draw/../misc/lv_color.h **** /*********************
  14:lvgl/src/draw/../misc/lv_color.h ****  *      INCLUDES
  15:lvgl/src/draw/../misc/lv_color.h ****  *********************/
  16:lvgl/src/draw/../misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/draw/../misc/lv_color.h **** #include "lv_assert.h"
  18:lvgl/src/draw/../misc/lv_color.h **** #include "lv_math.h"
  19:lvgl/src/draw/../misc/lv_color.h **** #include "lv_types.h"
  20:lvgl/src/draw/../misc/lv_color.h **** 
  21:lvgl/src/draw/../misc/lv_color.h **** /*Error checking*/
  22:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  23:lvgl/src/draw/../misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  24:lvgl/src/draw/../misc/lv_color.h **** #endif
  25:lvgl/src/draw/../misc/lv_color.h **** 
  26:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 32 && LV_COLOR_SCREEN_TRANSP != 0
  27:lvgl/src/draw/../misc/lv_color.h **** #error "LV_COLOR_SCREEN_TRANSP requires LV_COLOR_DEPTH == 32. Set it in lv_conf.h"
  28:lvgl/src/draw/../misc/lv_color.h **** #endif
  29:lvgl/src/draw/../misc/lv_color.h **** 
  30:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  31:lvgl/src/draw/../misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  32:lvgl/src/draw/../misc/lv_color.h **** #endif
  33:lvgl/src/draw/../misc/lv_color.h **** 
  34:lvgl/src/draw/../misc/lv_color.h **** #include <stdint.h>
  35:lvgl/src/draw/../misc/lv_color.h **** 
  36:lvgl/src/draw/../misc/lv_color.h **** /*********************
  37:lvgl/src/draw/../misc/lv_color.h ****  *      DEFINES
  38:lvgl/src/draw/../misc/lv_color.h ****  *********************/
  39:lvgl/src/draw/../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_DEPTH);
  40:lvgl/src/draw/../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_16_SWAP);
  41:lvgl/src/draw/../misc/lv_color.h **** 
  42:lvgl/src/draw/../misc/lv_color.h **** /**
  43:lvgl/src/draw/../misc/lv_color.h ****  * Opacity percentages.
  44:lvgl/src/draw/../misc/lv_color.h ****  */
  45:lvgl/src/draw/../misc/lv_color.h **** enum {
  46:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  47:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_0      = 0,
  48:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_10     = 25,
  49:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_20     = 51,
  50:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_30     = 76,
  51:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_40     = 102,
  52:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_50     = 127,
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 28


  53:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_60     = 153,
  54:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_70     = 178,
  55:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_80     = 204,
  56:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_90     = 229,
  57:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_100    = 255,
  58:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_COVER  = 255,
  59:lvgl/src/draw/../misc/lv_color.h **** };
  60:lvgl/src/draw/../misc/lv_color.h **** 
  61:lvgl/src/draw/../misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  62:lvgl/src/draw/../misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  63:lvgl/src/draw/../misc/lv_color.h **** 
  64:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  65:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  66:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  67:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  68:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  69:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 16
  70:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
  71:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 32
  72:lvgl/src/draw/../misc/lv_color.h **** #else
  73:lvgl/src/draw/../misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  74:lvgl/src/draw/../misc/lv_color.h **** #endif
  75:lvgl/src/draw/../misc/lv_color.h **** 
  76:lvgl/src/draw/../misc/lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  77:lvgl/src/draw/../misc/lv_color.h **** /**
  78:lvgl/src/draw/../misc/lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  79:lvgl/src/draw/../misc/lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  80:lvgl/src/draw/../misc/lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  81:lvgl/src/draw/../misc/lv_color.h **** */
  82:lvgl/src/draw/../misc/lv_color.h **** #ifdef _MSC_VER
  83:lvgl/src/draw/../misc/lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  84:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  85:lvgl/src/draw/../misc/lv_color.h **** #endif
  86:lvgl/src/draw/../misc/lv_color.h **** #else
  87:lvgl/src/draw/../misc/lv_color.h **** #if __cplusplus >= 201103L
  88:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  89:lvgl/src/draw/../misc/lv_color.h **** #endif
  90:lvgl/src/draw/../misc/lv_color.h **** #endif
  91:lvgl/src/draw/../misc/lv_color.h **** #endif /*__cplusplus*/
  92:lvgl/src/draw/../misc/lv_color.h **** 
  93:lvgl/src/draw/../misc/lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
  94:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
  95:lvgl/src/draw/../misc/lv_color.h **** #endif
  96:lvgl/src/draw/../misc/lv_color.h **** 
  97:lvgl/src/draw/../misc/lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
  98:lvgl/src/draw/../misc/lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
  99:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
 100:lvgl/src/draw/../misc/lv_color.h **** #else
 101:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
 102:lvgl/src/draw/../misc/lv_color.h **** #endif
 103:lvgl/src/draw/../misc/lv_color.h **** 
 104:lvgl/src/draw/../misc/lv_color.h **** /*---------------------------------------
 105:lvgl/src/draw/../misc/lv_color.h ****  * Macros for all existing color depths
 106:lvgl/src/draw/../misc/lv_color.h ****  * to set/get values of the color channels
 107:lvgl/src/draw/../misc/lv_color.h ****  *------------------------------------------*/
 108:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 109:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 29


 110:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 111:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 112:lvgl/src/draw/../misc/lv_color.h **** 
 113:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 114:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 115:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 116:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 117:lvgl/src/draw/../misc/lv_color.h **** 
 118:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 119:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 120:lvgl/src/draw/../misc/lv_color.h **** 
 121:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 122:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 123:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 124:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 125:lvgl/src/draw/../misc/lv_color.h **** 
 126:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 127:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 128:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 129:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 130:lvgl/src/draw/../misc/lv_color.h **** 
 131:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 132:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 133:lvgl/src/draw/../misc/lv_color.h **** 
 134:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 135:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 136:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 137:lvgl/src/draw/../misc/lv_color.h **** #else
 138:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 139:lvgl/src/draw/../misc/lv_color.h **** #endif
 140:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 141:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 142:lvgl/src/draw/../misc/lv_color.h **** 
 143:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 144:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 145:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 146:lvgl/src/draw/../misc/lv_color.h **** #else
 147:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 148:lvgl/src/draw/../misc/lv_color.h **** #endif
 149:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 150:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 151:lvgl/src/draw/../misc/lv_color.h **** 
 152:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 153:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 154:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 155:lvgl/src/draw/../misc/lv_color.h **** #else
 156:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 157:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 158:lvgl/src/draw/../misc/lv_color.h **** #endif
 159:lvgl/src/draw/../misc/lv_color.h **** 
 160:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 161:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 162:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 163:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 164:lvgl/src/draw/../misc/lv_color.h **** 
 165:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 166:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 30


 167:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 168:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 169:lvgl/src/draw/../misc/lv_color.h **** 
 170:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 171:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 172:lvgl/src/draw/../misc/lv_color.h **** 
 173:lvgl/src/draw/../misc/lv_color.h **** /*---------------------------------------
 174:lvgl/src/draw/../misc/lv_color.h ****  * Macros for the current color depth
 175:lvgl/src/draw/../misc/lv_color.h ****  * to set/get values of the color channels
 176:lvgl/src/draw/../misc/lv_color.h ****  *------------------------------------------*/
 177:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 178:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 179:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 180:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 181:lvgl/src/draw/../misc/lv_color.h **** 
 182:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 183:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 184:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 185:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 186:lvgl/src/draw/../misc/lv_color.h **** 
 187:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 188:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 189:lvgl/src/draw/../misc/lv_color.h **** 
 190:lvgl/src/draw/../misc/lv_color.h **** /**********************
 191:lvgl/src/draw/../misc/lv_color.h ****  *      TYPEDEFS
 192:lvgl/src/draw/../misc/lv_color.h ****  **********************/
 193:lvgl/src/draw/../misc/lv_color.h **** 
 194:lvgl/src/draw/../misc/lv_color.h **** typedef union {
 195:lvgl/src/draw/../misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 196:lvgl/src/draw/../misc/lv_color.h ****     union {
 197:lvgl/src/draw/../misc/lv_color.h ****         uint8_t blue : 1;
 198:lvgl/src/draw/../misc/lv_color.h ****         uint8_t green : 1;
 199:lvgl/src/draw/../misc/lv_color.h ****         uint8_t red : 1;
 200:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 201:lvgl/src/draw/../misc/lv_color.h **** } lv_color1_t;
 202:lvgl/src/draw/../misc/lv_color.h **** 
 203:lvgl/src/draw/../misc/lv_color.h **** typedef union {
 204:lvgl/src/draw/../misc/lv_color.h ****     struct {
 205:lvgl/src/draw/../misc/lv_color.h ****         uint8_t blue : 2;
 206:lvgl/src/draw/../misc/lv_color.h ****         uint8_t green : 3;
 207:lvgl/src/draw/../misc/lv_color.h ****         uint8_t red : 3;
 208:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 209:lvgl/src/draw/../misc/lv_color.h ****     uint8_t full;
 210:lvgl/src/draw/../misc/lv_color.h **** } lv_color8_t;
 211:lvgl/src/draw/../misc/lv_color.h **** 
 212:lvgl/src/draw/../misc/lv_color.h **** typedef union {
 213:lvgl/src/draw/../misc/lv_color.h ****     struct {
 214:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 215:lvgl/src/draw/../misc/lv_color.h ****         uint16_t blue : 5;
 216:lvgl/src/draw/../misc/lv_color.h ****         uint16_t green : 6;
 217:lvgl/src/draw/../misc/lv_color.h ****         uint16_t red : 5;
 218:lvgl/src/draw/../misc/lv_color.h **** #else
 219:lvgl/src/draw/../misc/lv_color.h ****         uint16_t green_h : 3;
 220:lvgl/src/draw/../misc/lv_color.h ****         uint16_t red : 5;
 221:lvgl/src/draw/../misc/lv_color.h ****         uint16_t blue : 5;
 222:lvgl/src/draw/../misc/lv_color.h ****         uint16_t green_l : 3;
 223:lvgl/src/draw/../misc/lv_color.h **** #endif
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 31


 224:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 225:lvgl/src/draw/../misc/lv_color.h ****     uint16_t full;
 226:lvgl/src/draw/../misc/lv_color.h **** } lv_color16_t;
 227:lvgl/src/draw/../misc/lv_color.h **** 
 228:lvgl/src/draw/../misc/lv_color.h **** typedef union {
 229:lvgl/src/draw/../misc/lv_color.h ****     struct {
 230:lvgl/src/draw/../misc/lv_color.h ****         uint8_t blue;
 231:lvgl/src/draw/../misc/lv_color.h ****         uint8_t green;
 232:lvgl/src/draw/../misc/lv_color.h ****         uint8_t red;
 233:lvgl/src/draw/../misc/lv_color.h ****         uint8_t alpha;
 234:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 235:lvgl/src/draw/../misc/lv_color.h ****     uint32_t full;
 236:lvgl/src/draw/../misc/lv_color.h **** } lv_color32_t;
 237:lvgl/src/draw/../misc/lv_color.h **** 
 238:lvgl/src/draw/../misc/lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 239:lvgl/src/draw/../misc/lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 240:lvgl/src/draw/../misc/lv_color.h **** 
 241:lvgl/src/draw/../misc/lv_color.h **** typedef struct {
 242:lvgl/src/draw/../misc/lv_color.h ****     uint16_t h;
 243:lvgl/src/draw/../misc/lv_color.h ****     uint8_t s;
 244:lvgl/src/draw/../misc/lv_color.h ****     uint8_t v;
 245:lvgl/src/draw/../misc/lv_color.h **** } lv_color_hsv_t;
 246:lvgl/src/draw/../misc/lv_color.h **** 
 247:lvgl/src/draw/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 248:lvgl/src/draw/../misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 249:lvgl/src/draw/../misc/lv_color.h **** typedef uint8_t lv_opa_t;
 250:lvgl/src/draw/../misc/lv_color.h **** //! @endcond
 251:lvgl/src/draw/../misc/lv_color.h **** 
 252:lvgl/src/draw/../misc/lv_color.h **** struct _lv_color_filter_dsc_t;
 253:lvgl/src/draw/../misc/lv_color.h **** 
 254:lvgl/src/draw/../misc/lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 255:lvgl/src/draw/../misc/lv_color.h **** 
 256:lvgl/src/draw/../misc/lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 257:lvgl/src/draw/../misc/lv_color.h ****     lv_color_filter_cb_t filter_cb;
 258:lvgl/src/draw/../misc/lv_color.h ****     void * user_data;
 259:lvgl/src/draw/../misc/lv_color.h **** } lv_color_filter_dsc_t;
 260:lvgl/src/draw/../misc/lv_color.h **** 
 261:lvgl/src/draw/../misc/lv_color.h **** 
 262:lvgl/src/draw/../misc/lv_color.h **** typedef enum {
 263:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_RED,
 264:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_PINK,
 265:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_PURPLE,
 266:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 267:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_INDIGO,
 268:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_BLUE,
 269:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 270:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_CYAN,
 271:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_TEAL,
 272:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_GREEN,
 273:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 274:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_LIME,
 275:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_YELLOW,
 276:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_AMBER,
 277:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_ORANGE,
 278:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 279:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_BROWN,
 280:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_BLUE_GREY,
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 32


 281:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_GREY,
 282:lvgl/src/draw/../misc/lv_color.h ****     _LV_PALETTE_LAST,
 283:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_NONE = 0xff,
 284:lvgl/src/draw/../misc/lv_color.h **** } lv_palette_t;
 285:lvgl/src/draw/../misc/lv_color.h **** 
 286:lvgl/src/draw/../misc/lv_color.h **** /**********************
 287:lvgl/src/draw/../misc/lv_color.h ****  * GLOBAL PROTOTYPES
 288:lvgl/src/draw/../misc/lv_color.h ****  **********************/
 289:lvgl/src/draw/../misc/lv_color.h **** 
 290:lvgl/src/draw/../misc/lv_color.h **** /*In color conversations:
 291:lvgl/src/draw/../misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 292:lvgl/src/draw/../misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 293:lvgl/src/draw/../misc/lv_color.h ****  *         8 bit Red has 3 bits
 294:lvgl/src/draw/../misc/lv_color.h ****  *        ----------------------
 295:lvgl/src/draw/../misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 296:lvgl/src/draw/../misc/lv_color.h ****  *
 297:lvgl/src/draw/../misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 298:lvgl/src/draw/../misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 299:lvgl/src/draw/../misc/lv_color.h ****  *        16 bit Red has 5 bits
 300:lvgl/src/draw/../misc/lv_color.h ****  *        ----------------------
 301:lvgl/src/draw/../misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 302:lvgl/src/draw/../misc/lv_color.h ****  */
 303:lvgl/src/draw/../misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 304:lvgl/src/draw/../misc/lv_color.h **** {
 305:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 306:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 307:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 308:lvgl/src/draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 309:lvgl/src/draw/../misc/lv_color.h ****         return 1;
 310:lvgl/src/draw/../misc/lv_color.h ****     }
 311:lvgl/src/draw/../misc/lv_color.h ****     else {
 312:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 313:lvgl/src/draw/../misc/lv_color.h ****     }
 314:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 315:lvgl/src/draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 316:lvgl/src/draw/../misc/lv_color.h ****         return 1;
 317:lvgl/src/draw/../misc/lv_color.h ****     }
 318:lvgl/src/draw/../misc/lv_color.h ****     else {
 319:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 320:lvgl/src/draw/../misc/lv_color.h ****     }
 321:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 322:lvgl/src/draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 323:lvgl/src/draw/../misc/lv_color.h ****         return 1;
 324:lvgl/src/draw/../misc/lv_color.h ****     }
 325:lvgl/src/draw/../misc/lv_color.h ****     else {
 326:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 327:lvgl/src/draw/../misc/lv_color.h ****     }
 328:lvgl/src/draw/../misc/lv_color.h **** #endif
 329:lvgl/src/draw/../misc/lv_color.h **** }
 330:lvgl/src/draw/../misc/lv_color.h **** 
 331:lvgl/src/draw/../misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 332:lvgl/src/draw/../misc/lv_color.h **** {
 333:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 334:lvgl/src/draw/../misc/lv_color.h ****     if(color.full == 0)
 335:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 336:lvgl/src/draw/../misc/lv_color.h ****     else
 337:lvgl/src/draw/../misc/lv_color.h ****         return 0xFF;
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 33


 338:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 339:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 340:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 341:lvgl/src/draw/../misc/lv_color.h ****     lv_color8_t ret;
 342:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 343:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 344:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 345:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 346:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 347:lvgl/src/draw/../misc/lv_color.h ****     lv_color8_t ret;
 348:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 349:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 350:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 351:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 352:lvgl/src/draw/../misc/lv_color.h **** #endif
 353:lvgl/src/draw/../misc/lv_color.h **** }
 354:lvgl/src/draw/../misc/lv_color.h **** 
 355:lvgl/src/draw/../misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 356:lvgl/src/draw/../misc/lv_color.h **** {
 357:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 358:lvgl/src/draw/../misc/lv_color.h ****     if(color.full == 0)
 359:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 360:lvgl/src/draw/../misc/lv_color.h ****     else
 361:lvgl/src/draw/../misc/lv_color.h ****         return 0xFFFF;
 362:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 363:lvgl/src/draw/../misc/lv_color.h ****     lv_color16_t ret;
 364:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 365:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 366:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 367:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 368:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 369:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 370:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 371:lvgl/src/draw/../misc/lv_color.h ****     lv_color16_t ret;
 372:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
 373:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 374:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 375:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 376:lvgl/src/draw/../misc/lv_color.h **** #endif
 377:lvgl/src/draw/../misc/lv_color.h **** }
 378:lvgl/src/draw/../misc/lv_color.h **** 
 379:lvgl/src/draw/../misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 380:lvgl/src/draw/../misc/lv_color.h **** {
 381:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 382:lvgl/src/draw/../misc/lv_color.h ****     if(color.full == 0)
 383:lvgl/src/draw/../misc/lv_color.h ****         return 0xFF000000;
 384:lvgl/src/draw/../misc/lv_color.h ****     else
 385:lvgl/src/draw/../misc/lv_color.h ****         return 0xFFFFFFFF;
 386:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 387:lvgl/src/draw/../misc/lv_color.h ****     lv_color32_t ret;
 388:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 389:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 390:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 391:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 392:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 393:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 394:lvgl/src/draw/../misc/lv_color.h ****     /**
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 34


 395:lvgl/src/draw/../misc/lv_color.h ****      * The floating point math for conversion is:
 396:lvgl/src/draw/../misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 397:lvgl/src/draw/../misc/lv_color.h ****      * The faster integer math for conversion is:
 398:lvgl/src/draw/../misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 399:lvgl/src/draw/../misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 400:lvgl/src/draw/../misc/lv_color.h ****      *
 401:lvgl/src/draw/../misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 402:lvgl/src/draw/../misc/lv_color.h ****      *
 403:lvgl/src/draw/../misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 404:lvgl/src/draw/../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 405:lvgl/src/draw/../misc/lv_color.h ****      *       0           8      7        7       255
 406:lvgl/src/draw/../misc/lv_color.h ****      *       1          16     14        7       255
 407:lvgl/src/draw/../misc/lv_color.h ****      *       2          32     28        7       255
 408:lvgl/src/draw/../misc/lv_color.h ****      *       3          65     25        3       255
 409:lvgl/src/draw/../misc/lv_color.h ****      *       4         131     19        1       255
 410:lvgl/src/draw/../misc/lv_color.h ****      *       5         263      7        0       255
 411:lvgl/src/draw/../misc/lv_color.h ****      *
 412:lvgl/src/draw/../misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 413:lvgl/src/draw/../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 414:lvgl/src/draw/../misc/lv_color.h ****      *       0           4      3        3       255
 415:lvgl/src/draw/../misc/lv_color.h ****      *       1           8      6        3       255
 416:lvgl/src/draw/../misc/lv_color.h ****      *       2          16     12        3       255
 417:lvgl/src/draw/../misc/lv_color.h ****      *       3          32     24        3       255
 418:lvgl/src/draw/../misc/lv_color.h ****      *       4          64     48        3       255
 419:lvgl/src/draw/../misc/lv_color.h ****      *       5         129     33        1       255
 420:lvgl/src/draw/../misc/lv_color.h ****      *       6         259      3        0       255
 421:lvgl/src/draw/../misc/lv_color.h ****      */
 422:lvgl/src/draw/../misc/lv_color.h **** 
 423:lvgl/src/draw/../misc/lv_color.h ****     lv_color32_t ret;
 424:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 425:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 426:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 427:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 428:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 429:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 430:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 431:lvgl/src/draw/../misc/lv_color.h **** #endif
 432:lvgl/src/draw/../misc/lv_color.h **** }
 433:lvgl/src/draw/../misc/lv_color.h **** 
 434:lvgl/src/draw/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 435:lvgl/src/draw/../misc/lv_color.h **** 
 436:lvgl/src/draw/../misc/lv_color.h **** /**
 437:lvgl/src/draw/../misc/lv_color.h ****  * Mix two colors with a given ratio.
 438:lvgl/src/draw/../misc/lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 439:lvgl/src/draw/../misc/lv_color.h ****  * @param c2 the second color to mix (usually the background)
 440:lvgl/src/draw/../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 441:lvgl/src/draw/../misc/lv_color.h ****  * @return the mixed color
 442:lvgl/src/draw/../misc/lv_color.h ****  */
 443:lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 444:lvgl/src/draw/../misc/lv_color.h **** {
 445:lvgl/src/draw/../misc/lv_color.h ****     lv_color_t ret;
 446:lvgl/src/draw/../misc/lv_color.h **** 
 447:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_16_SWAP == 0
 448:lvgl/src/draw/../misc/lv_color.h ****     /*Source: https://stackoverflow.com/a/50012418/1999969*/
 449:lvgl/src/draw/../misc/lv_color.h ****     mix = (mix + 4) >> 3;
 450:lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 451:lvgl/src/draw/../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 35


 452:lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | ((uint32_t)c1.full << 16)) & 0x7E0F81F;
 453:lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 454:lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 455:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 456:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 457:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 458:lvgl/src/draw/../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 459:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 460:lvgl/src/draw/../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 461:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 462:lvgl/src/draw/../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 463:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 464:lvgl/src/draw/../misc/lv_color.h **** #else
 465:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 466:lvgl/src/draw/../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 467:lvgl/src/draw/../misc/lv_color.h **** #endif
 468:lvgl/src/draw/../misc/lv_color.h **** 
 469:lvgl/src/draw/../misc/lv_color.h ****     return ret;
 470:lvgl/src/draw/../misc/lv_color.h **** }
 471:lvgl/src/draw/../misc/lv_color.h **** 
 472:lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 473:lvgl/src/draw/../misc/lv_color.h **** {
 474:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 475:lvgl/src/draw/../misc/lv_color.h ****     out[0] = (uint16_t)LV_COLOR_GET_R(c) * mix;
 476:lvgl/src/draw/../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 477:lvgl/src/draw/../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 478:lvgl/src/draw/../misc/lv_color.h **** #else
 479:lvgl/src/draw/../misc/lv_color.h ****     (void) mix;
 480:lvgl/src/draw/../misc/lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 481:lvgl/src/draw/../misc/lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 482:lvgl/src/draw/../misc/lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 483:lvgl/src/draw/../misc/lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 484:lvgl/src/draw/../misc/lv_color.h **** #endif
 485:lvgl/src/draw/../misc/lv_color.h **** 
 486:lvgl/src/draw/../misc/lv_color.h **** }
 487:lvgl/src/draw/../misc/lv_color.h **** 
 488:lvgl/src/draw/../misc/lv_color.h **** /**
 489:lvgl/src/draw/../misc/lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 490:lvgl/src/draw/../misc/lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 491:lvgl/src/draw/../misc/lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 492:lvgl/src/draw/../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 493:lvgl/src/draw/../misc/lv_color.h ****  *            Should be modified like mix = `255 - mix`
 494:lvgl/src/draw/../misc/lv_color.h ****  * @return the mixed color
 495:lvgl/src/draw/../misc/lv_color.h ****  * @note 255 won't give clearly `c1`.
 496:lvgl/src/draw/../misc/lv_color.h ****  */
 497:lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix_premult(uint16_t * premult_c1, lv_color
 498:lvgl/src/draw/../misc/lv_color.h **** {
 499:lvgl/src/draw/../misc/lv_color.h ****     lv_color_t ret;
 500:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 501:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8 or 32*/
 502:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROUND_OF
 503:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 504:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 505:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 506:lvgl/src/draw/../misc/lv_color.h **** #else
 507:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 508:lvgl/src/draw/../misc/lv_color.h ****     /*Restore color1*/
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 36


 509:lvgl/src/draw/../misc/lv_color.h ****     lv_color_t c1;
 510:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
 511:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 512:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 513:lvgl/src/draw/../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
 514:lvgl/src/draw/../misc/lv_color.h **** #endif
 515:lvgl/src/draw/../misc/lv_color.h **** 
 516:lvgl/src/draw/../misc/lv_color.h ****     return ret;
 517:lvgl/src/draw/../misc/lv_color.h **** }
 518:lvgl/src/draw/../misc/lv_color.h **** 
 519:lvgl/src/draw/../misc/lv_color.h **** /**
 520:lvgl/src/draw/../misc/lv_color.h ****  * Mix two colors. Both color can have alpha value.
 521:lvgl/src/draw/../misc/lv_color.h ****  * @param bg_color background color
 522:lvgl/src/draw/../misc/lv_color.h ****  * @param bg_opa alpha of the background color
 523:lvgl/src/draw/../misc/lv_color.h ****  * @param fg_color foreground color
 524:lvgl/src/draw/../misc/lv_color.h ****  * @param fg_opa alpha of the foreground color
 525:lvgl/src/draw/../misc/lv_color.h ****  * @param res_color the result color
 526:lvgl/src/draw/../misc/lv_color.h ****  * @param res_opa the result opacity
 527:lvgl/src/draw/../misc/lv_color.h ****  */
 528:lvgl/src/draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 529:lvgl/src/draw/../misc/lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
 530:lvgl/src/draw/../misc/lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 531:lvgl/src/draw/../misc/lv_color.h **** {
 532:lvgl/src/draw/../misc/lv_color.h ****     /*Pick the foreground if it's fully opaque or the Background is fully transparent*/
 533:lvgl/src/draw/../misc/lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 534:lvgl/src/draw/../misc/lv_color.h ****         res_color->full = fg_color.full;
 535:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = fg_opa;
 536:lvgl/src/draw/../misc/lv_color.h ****     }
 537:lvgl/src/draw/../misc/lv_color.h ****     /*Transparent foreground: use the Background*/
 538:lvgl/src/draw/../misc/lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 539:lvgl/src/draw/../misc/lv_color.h ****         res_color->full = bg_color.full;
 540:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = bg_opa;
 541:lvgl/src/draw/../misc/lv_color.h ****     }
 542:lvgl/src/draw/../misc/lv_color.h ****     /*Opaque background: use simple mix*/
 543:lvgl/src/draw/../misc/lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 544:lvgl/src/draw/../misc/lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 545:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = LV_OPA_COVER;
 546:lvgl/src/draw/../misc/lv_color.h ****     }
 547:lvgl/src/draw/../misc/lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 548:lvgl/src/draw/../misc/lv_color.h ****     else {
 549:lvgl/src/draw/../misc/lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
 550:lvgl/src/draw/../misc/lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 551:lvgl/src/draw/../misc/lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 552:lvgl/src/draw/../misc/lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 553:lvgl/src/draw/../misc/lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 554:lvgl/src/draw/../misc/lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
 555:lvgl/src/draw/../misc/lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 556:lvgl/src/draw/../misc/lv_color.h **** 
 557:lvgl/src/draw/../misc/lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
 558:lvgl/src/draw/../misc/lv_color.h ****            bg_color.full != bg_color_save.full) {
 559:lvgl/src/draw/../misc/lv_color.h ****             fg_opa_save        = fg_opa;
 560:lvgl/src/draw/../misc/lv_color.h ****             bg_opa_save        = bg_opa;
 561:lvgl/src/draw/../misc/lv_color.h ****             fg_color_save.full = fg_color.full;
 562:lvgl/src/draw/../misc/lv_color.h ****             bg_color_save.full = bg_color.full;
 563:lvgl/src/draw/../misc/lv_color.h ****             /*Info:
 564:lvgl/src/draw/../misc/lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
 565:lvgl/src/draw/../misc/lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 37


 566:lvgl/src/draw/../misc/lv_color.h ****             LV_ASSERT(res_opa_saved != 0);
 567:lvgl/src/draw/../misc/lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
 568:lvgl/src/draw/../misc/lv_color.h ****             res_color_saved = lv_color_mix(fg_color, bg_color, ratio);
 569:lvgl/src/draw/../misc/lv_color.h **** 
 570:lvgl/src/draw/../misc/lv_color.h ****         }
 571:lvgl/src/draw/../misc/lv_color.h **** 
 572:lvgl/src/draw/../misc/lv_color.h ****         res_color->full = res_color_saved.full;
 573:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = res_opa_saved;
 574:lvgl/src/draw/../misc/lv_color.h ****     }
 575:lvgl/src/draw/../misc/lv_color.h **** }
 576:lvgl/src/draw/../misc/lv_color.h **** 
 577:lvgl/src/draw/../misc/lv_color.h **** //! @endcond
 578:lvgl/src/draw/../misc/lv_color.h **** 
 579:lvgl/src/draw/../misc/lv_color.h **** /**
 580:lvgl/src/draw/../misc/lv_color.h ****  * Get the brightness of a color
 581:lvgl/src/draw/../misc/lv_color.h ****  * @param color a color
 582:lvgl/src/draw/../misc/lv_color.h ****  * @return the brightness [0..255]
 583:lvgl/src/draw/../misc/lv_color.h ****  */
 584:lvgl/src/draw/../misc/lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 585:lvgl/src/draw/../misc/lv_color.h **** {
 586:lvgl/src/draw/../misc/lv_color.h ****     lv_color32_t c32;
 587:lvgl/src/draw/../misc/lv_color.h ****     c32.full        = lv_color_to32(color);
 588:lvgl/src/draw/../misc/lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 589:lvgl/src/draw/../misc/lv_color.h ****     return (uint8_t)(bright >> 3);
 590:lvgl/src/draw/../misc/lv_color.h **** }
 591:lvgl/src/draw/../misc/lv_color.h **** 
 592:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)
 635              		.loc 3 592 26 is_stmt 1 view .LVU209
 636              	.LBB23:
 593:lvgl/src/draw/../misc/lv_color.h **** {
 594:lvgl/src/draw/../misc/lv_color.h ****     return _LV_COLOR_MAKE_TYPE_HELPER LV_COLOR_MAKE(r, g, b);
 637              		.loc 3 594 5 view .LVU210
 638              		.loc 3 594 39 is_stmt 0 view .LVU211
 639 00fa ED08     		lsrs	r5, r5, #3
 640 00fc A408     		lsrs	r4, r4, #2
 641 00fe C908     		lsrs	r1, r1, #3
 642              		.loc 3 594 12 view .LVU212
 643 0100 65F30406 		bfi	r6, r5, #0, #5
 644 0104 64F34A16 		bfi	r6, r4, #5, #6
 645 0108 61F3CF26 		bfi	r6, r1, #11, #5
 646              	.LVL65:
 647              		.loc 3 594 12 view .LVU213
 648              	.LBE23:
 649              	.LBE22:
 421:lvgl/src/draw/lv_img_decoder.c ****                 user_data->opa[i]     = palette_p[i].ch.alpha;
 650              		.loc 1 421 41 view .LVU214
 651 010c 20F81360 		strh	r6, [r0, r3, lsl #1]	@ movhi
 422:lvgl/src/draw/lv_img_decoder.c ****             }
 652              		.loc 1 422 17 is_stmt 1 view .LVU215
 422:lvgl/src/draw/lv_img_decoder.c ****             }
 653              		.loc 1 422 26 is_stmt 0 view .LVU216
 654 0110 D8F81010 		ldr	r1, [r8, #16]
 422:lvgl/src/draw/lv_img_decoder.c ****             }
 655              		.loc 1 422 56 view .LVU217
 656 0114 D278     		ldrb	r2, [r2, #3]	@ zero_extendqisi2
 422:lvgl/src/draw/lv_img_decoder.c ****             }
 657              		.loc 1 422 39 view .LVU218
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 38


 658 0116 CA54     		strb	r2, [r1, r3]
 420:lvgl/src/draw/lv_img_decoder.c ****                 user_data->palette[i] = lv_color_make(palette_p[i].ch.red, palette_p[i].ch.green, p
 659              		.loc 1 420 43 is_stmt 1 discriminator 3 view .LVU219
 660 0118 0133     		adds	r3, r3, #1
 661              	.LVL66:
 420:lvgl/src/draw/lv_img_decoder.c ****                 user_data->palette[i] = lv_color_make(palette_p[i].ch.red, palette_p[i].ch.green, p
 662              		.loc 1 420 43 is_stmt 0 discriminator 3 view .LVU220
 663 011a E4E7     		b	.L47
 664              	.LVL67:
 665              	.L57:
 420:lvgl/src/draw/lv_img_decoder.c ****                 user_data->palette[i] = lv_color_make(palette_p[i].ch.red, palette_p[i].ch.green, p
 666              		.loc 1 420 43 discriminator 3 view .LVU221
 667              	.LBE21:
 384:lvgl/src/draw/lv_img_decoder.c ****             LV_ASSERT_MALLOC(dsc->user_data);
 668              		.loc 1 384 13 is_stmt 1 view .LVU222
 384:lvgl/src/draw/lv_img_decoder.c ****             LV_ASSERT_MALLOC(dsc->user_data);
 669              		.loc 1 384 30 is_stmt 0 view .LVU223
 670 011c 1420     		movs	r0, #20
 671              	.LVL68:
 384:lvgl/src/draw/lv_img_decoder.c ****             LV_ASSERT_MALLOC(dsc->user_data);
 672              		.loc 1 384 30 view .LVU224
 673 011e FFF7FEFF 		bl	lv_mem_alloc
 674              	.LVL69:
 384:lvgl/src/draw/lv_img_decoder.c ****             LV_ASSERT_MALLOC(dsc->user_data);
 675              		.loc 1 384 28 discriminator 1 view .LVU225
 676 0122 6062     		str	r0, [r4, #36]
 385:lvgl/src/draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 677              		.loc 1 385 13 is_stmt 1 view .LVU226
 385:lvgl/src/draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 678              		.loc 1 385 13 view .LVU227
 679 0124 18B1     		cbz	r0, .L37
 385:lvgl/src/draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 680              		.loc 1 385 13 discriminator 2 view .LVU228
 385:lvgl/src/draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 681              		.loc 1 385 45 discriminator 2 view .LVU229
 386:lvgl/src/draw/lv_img_decoder.c ****                 LV_LOG_ERROR("img_decoder_built_in_open: out of memory");
 682              		.loc 1 386 13 view .LVU230
 390:lvgl/src/draw/lv_img_decoder.c ****         }
 683              		.loc 1 390 13 view .LVU231
 684 0126 1421     		movs	r1, #20
 685 0128 FFF7FEFF 		bl	lv_memset_00
 686              	.LVL70:
 687 012c C2E7     		b	.L35
 688              	.L37:
 385:lvgl/src/draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 689              		.loc 1 385 13 discriminator 1 view .LVU232
 385:lvgl/src/draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 690              		.loc 1 385 13 discriminator 1 view .LVU233
 385:lvgl/src/draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 691              		.loc 1 385 13 discriminator 1 view .LVU234
 385:lvgl/src/draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 692              		.loc 1 385 13 discriminator 1 view .LVU235
 385:lvgl/src/draw/lv_img_decoder.c ****             if(dsc->user_data == NULL) {
 693              		.loc 1 385 13 discriminator 1 view .LVU236
 694 012e FEE7     		b	.L37
 695              	.LVL71:
 696              	.L39:
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 39


 395:lvgl/src/draw/lv_img_decoder.c ****         user_data->opa                             = lv_mem_alloc(palette_size * sizeof(lv_opa_t));
 697              		.loc 1 395 9 discriminator 1 view .LVU237
 395:lvgl/src/draw/lv_img_decoder.c ****         user_data->opa                             = lv_mem_alloc(palette_size * sizeof(lv_opa_t));
 698              		.loc 1 395 9 discriminator 1 view .LVU238
 395:lvgl/src/draw/lv_img_decoder.c ****         user_data->opa                             = lv_mem_alloc(palette_size * sizeof(lv_opa_t));
 699              		.loc 1 395 9 discriminator 1 view .LVU239
 395:lvgl/src/draw/lv_img_decoder.c ****         user_data->opa                             = lv_mem_alloc(palette_size * sizeof(lv_opa_t));
 700              		.loc 1 395 9 discriminator 1 view .LVU240
 395:lvgl/src/draw/lv_img_decoder.c ****         user_data->opa                             = lv_mem_alloc(palette_size * sizeof(lv_opa_t));
 701              		.loc 1 395 9 discriminator 1 view .LVU241
 702 0130 FEE7     		b	.L39
 703              	.L41:
 397:lvgl/src/draw/lv_img_decoder.c ****         if(user_data->palette == NULL || user_data->opa == NULL) {
 704              		.loc 1 397 9 discriminator 1 view .LVU242
 397:lvgl/src/draw/lv_img_decoder.c ****         if(user_data->palette == NULL || user_data->opa == NULL) {
 705              		.loc 1 397 9 discriminator 1 view .LVU243
 397:lvgl/src/draw/lv_img_decoder.c ****         if(user_data->palette == NULL || user_data->opa == NULL) {
 706              		.loc 1 397 9 discriminator 1 view .LVU244
 397:lvgl/src/draw/lv_img_decoder.c ****         if(user_data->palette == NULL || user_data->opa == NULL) {
 707              		.loc 1 397 9 discriminator 1 view .LVU245
 397:lvgl/src/draw/lv_img_decoder.c ****         if(user_data->palette == NULL || user_data->opa == NULL) {
 708              		.loc 1 397 9 discriminator 1 view .LVU246
 709 0132 FEE7     		b	.L41
 710              	.L58:
 399:lvgl/src/draw/lv_img_decoder.c ****             lv_img_decoder_built_in_close(decoder, dsc);
 711              		.loc 1 399 13 view .LVU247
 399:lvgl/src/draw/lv_img_decoder.c ****             lv_img_decoder_built_in_close(decoder, dsc);
 712              		.loc 1 399 13 view .LVU248
 399:lvgl/src/draw/lv_img_decoder.c ****             lv_img_decoder_built_in_close(decoder, dsc);
 713              		.loc 1 399 13 view .LVU249
 400:lvgl/src/draw/lv_img_decoder.c ****             return LV_RES_INV;
 714              		.loc 1 400 13 view .LVU250
 715 0134 2146     		mov	r1, r4
 716 0136 2846     		mov	r0, r5
 717 0138 FFF7FEFF 		bl	lv_img_decoder_built_in_close
 718              	.LVL72:
 401:lvgl/src/draw/lv_img_decoder.c ****         }
 719              		.loc 1 401 13 view .LVU251
 401:lvgl/src/draw/lv_img_decoder.c ****         }
 720              		.loc 1 401 20 is_stmt 0 view .LVU252
 721 013c 0020     		movs	r0, #0
 722 013e 7AE7     		b	.L32
 723              	.L59:
 724              	.LBB24:
 406:lvgl/src/draw/lv_img_decoder.c ****             lv_color32_t cur_color;
 725              		.loc 1 406 13 is_stmt 1 view .LVU253
 726 0140 0022     		movs	r2, #0
 727 0142 0421     		movs	r1, #4
 728 0144 4046     		mov	r0, r8
 729 0146 FFF7FEFF 		bl	lv_fs_seek
 730              	.LVL73:
 407:lvgl/src/draw/lv_img_decoder.c ****             uint32_t i;
 731              		.loc 1 407 13 view .LVU254
 408:lvgl/src/draw/lv_img_decoder.c ****             for(i = 0; i < palette_size; i++) {
 732              		.loc 1 408 13 view .LVU255
 409:lvgl/src/draw/lv_img_decoder.c ****                 lv_fs_read(&user_data->f, &cur_color, sizeof(lv_color32_t), NULL);
 733              		.loc 1 409 13 view .LVU256
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 40


 409:lvgl/src/draw/lv_img_decoder.c ****                 lv_fs_read(&user_data->f, &cur_color, sizeof(lv_color32_t), NULL);
 734              		.loc 1 409 19 is_stmt 0 view .LVU257
 735 014a 0024     		movs	r4, #0
 736              	.LVL74:
 409:lvgl/src/draw/lv_img_decoder.c ****                 lv_fs_read(&user_data->f, &cur_color, sizeof(lv_color32_t), NULL);
 737              		.loc 1 409 13 view .LVU258
 738 014c 1FE0     		b	.L44
 739              	.LVL75:
 740              	.L45:
 410:lvgl/src/draw/lv_img_decoder.c ****                 user_data->palette[i] = lv_color_make(cur_color.ch.red, cur_color.ch.green, cur_col
 741              		.loc 1 410 17 is_stmt 1 view .LVU259
 742 014e 0023     		movs	r3, #0
 743 0150 0422     		movs	r2, #4
 744 0152 0DEB0201 		add	r1, sp, r2
 745 0156 4046     		mov	r0, r8
 746 0158 FFF7FEFF 		bl	lv_fs_read
 747              	.LVL76:
 411:lvgl/src/draw/lv_img_decoder.c ****                 user_data->opa[i]     = cur_color.ch.alpha;
 748              		.loc 1 411 17 view .LVU260
 411:lvgl/src/draw/lv_img_decoder.c ****                 user_data->opa[i]     = cur_color.ch.alpha;
 749              		.loc 1 411 41 is_stmt 0 view .LVU261
 750 015c 9DF80630 		ldrb	r3, [sp, #6]	@ zero_extendqisi2
 751 0160 9DF80520 		ldrb	r2, [sp, #5]	@ zero_extendqisi2
 752 0164 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2
 411:lvgl/src/draw/lv_img_decoder.c ****                 user_data->opa[i]     = cur_color.ch.alpha;
 753              		.loc 1 411 26 view .LVU262
 754 0168 D8F80C10 		ldr	r1, [r8, #12]
 755              	.LVL77:
 756              	.LBB25:
 757              	.LBI25:
 592:lvgl/src/draw/../misc/lv_color.h **** {
 758              		.loc 3 592 26 is_stmt 1 view .LVU263
 759              	.LBB26:
 760              		.loc 3 594 5 view .LVU264
 761              		.loc 3 594 39 is_stmt 0 view .LVU265
 762 016c C008     		lsrs	r0, r0, #3
 763 016e 9208     		lsrs	r2, r2, #2
 764 0170 DB08     		lsrs	r3, r3, #3
 765              		.loc 3 594 12 view .LVU266
 766 0172 60F30407 		bfi	r7, r0, #0, #5
 767 0176 62F34A17 		bfi	r7, r2, #5, #6
 768 017a 63F3CF27 		bfi	r7, r3, #11, #5
 769              	.LVL78:
 770              		.loc 3 594 12 view .LVU267
 771              	.LBE26:
 772              	.LBE25:
 411:lvgl/src/draw/lv_img_decoder.c ****                 user_data->opa[i]     = cur_color.ch.alpha;
 773              		.loc 1 411 41 view .LVU268
 774 017e 21F81470 		strh	r7, [r1, r4, lsl #1]	@ movhi
 412:lvgl/src/draw/lv_img_decoder.c ****             }
 775              		.loc 1 412 17 is_stmt 1 view .LVU269
 412:lvgl/src/draw/lv_img_decoder.c ****             }
 776              		.loc 1 412 26 is_stmt 0 view .LVU270
 777 0182 D8F81030 		ldr	r3, [r8, #16]
 412:lvgl/src/draw/lv_img_decoder.c ****             }
 778              		.loc 1 412 53 view .LVU271
 779 0186 9DF80720 		ldrb	r2, [sp, #7]	@ zero_extendqisi2
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 41


 412:lvgl/src/draw/lv_img_decoder.c ****             }
 780              		.loc 1 412 39 view .LVU272
 781 018a 1A55     		strb	r2, [r3, r4]
 409:lvgl/src/draw/lv_img_decoder.c ****                 lv_fs_read(&user_data->f, &cur_color, sizeof(lv_color32_t), NULL);
 782              		.loc 1 409 43 is_stmt 1 discriminator 3 view .LVU273
 783 018c 0134     		adds	r4, r4, #1
 784              	.LVL79:
 785              	.L44:
 409:lvgl/src/draw/lv_img_decoder.c ****                 lv_fs_read(&user_data->f, &cur_color, sizeof(lv_color32_t), NULL);
 786              		.loc 1 409 26 discriminator 1 view .LVU274
 787 018e 4C45     		cmp	r4, r9
 788 0190 DDD3     		bcc	.L45
 789              	.LVL80:
 790              	.L46:
 409:lvgl/src/draw/lv_img_decoder.c ****                 lv_fs_read(&user_data->f, &cur_color, sizeof(lv_color32_t), NULL);
 791              		.loc 1 409 26 is_stmt 0 discriminator 1 view .LVU275
 792              	.LBE24:
 426:lvgl/src/draw/lv_img_decoder.c ****     }
 793              		.loc 1 426 9 is_stmt 1 view .LVU276
 426:lvgl/src/draw/lv_img_decoder.c ****     }
 794              		.loc 1 426 16 is_stmt 0 view .LVU277
 795 0192 0120     		movs	r0, #1
 796 0194 4FE7     		b	.L32
 797              	.LVL81:
 798              	.L56:
 426:lvgl/src/draw/lv_img_decoder.c ****     }
 799              		.loc 1 426 16 view .LVU278
 800              	.LBE20:
 436:lvgl/src/draw/lv_img_decoder.c **** 
 801              		.loc 1 436 9 is_stmt 1 view .LVU279
 802 0196 2146     		mov	r1, r4
 803 0198 2846     		mov	r0, r5
 804 019a FFF7FEFF 		bl	lv_img_decoder_built_in_close
 805              	.LVL82:
 438:lvgl/src/draw/lv_img_decoder.c ****         return LV_RES_INV;
 806              		.loc 1 438 9 view .LVU280
 438:lvgl/src/draw/lv_img_decoder.c ****         return LV_RES_INV;
 807              		.loc 1 438 9 view .LVU281
 438:lvgl/src/draw/lv_img_decoder.c ****         return LV_RES_INV;
 808              		.loc 1 438 9 view .LVU282
 439:lvgl/src/draw/lv_img_decoder.c ****     }
 809              		.loc 1 439 9 view .LVU283
 439:lvgl/src/draw/lv_img_decoder.c ****     }
 810              		.loc 1 439 16 is_stmt 0 view .LVU284
 811 019e 0020     		movs	r0, #0
 812 01a0 49E7     		b	.L32
 813              	.LVL83:
 814              	.L49:
 373:lvgl/src/draw/lv_img_decoder.c ****         }
 815              		.loc 1 373 20 view .LVU285
 816 01a2 0120     		movs	r0, #1
 817 01a4 47E7     		b	.L32
 818              	.L61:
 819 01a6 00BF     		.align	2
 820              	.L60:
 821 01a8 00000000 		.word	.LC0
 822              		.cfi_endproc
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 42


 823              	.LFE68:
 825              		.section	.text.lv_img_decoder_built_in_line_true_color,"ax",%progbits
 826              		.align	1
 827              		.syntax unified
 828              		.thumb
 829              		.thumb_func
 831              	lv_img_decoder_built_in_line_true_color:
 832              	.LVL84:
 833              	.LFB71:
 506:lvgl/src/draw/lv_img_decoder.c **** 
 507:lvgl/src/draw/lv_img_decoder.c **** /**********************
 508:lvgl/src/draw/lv_img_decoder.c ****  *   STATIC FUNCTIONS
 509:lvgl/src/draw/lv_img_decoder.c ****  **********************/
 510:lvgl/src/draw/lv_img_decoder.c **** 
 511:lvgl/src/draw/lv_img_decoder.c **** static lv_res_t lv_img_decoder_built_in_line_true_color(lv_img_decoder_dsc_t * dsc, lv_coord_t x, l
 512:lvgl/src/draw/lv_img_decoder.c ****                                                         lv_coord_t len, uint8_t * buf)
 513:lvgl/src/draw/lv_img_decoder.c **** {
 834              		.loc 1 513 1 is_stmt 1 view -0
 835              		.cfi_startproc
 836              		@ args = 4, pretend = 0, frame = 8
 837              		@ frame_needed = 0, uses_anonymous_args = 0
 838              		.loc 1 513 1 is_stmt 0 view .LVU287
 839 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 840              	.LCFI9:
 841              		.cfi_def_cfa_offset 28
 842              		.cfi_offset 4, -28
 843              		.cfi_offset 5, -24
 844              		.cfi_offset 6, -20
 845              		.cfi_offset 7, -16
 846              		.cfi_offset 8, -12
 847              		.cfi_offset 9, -8
 848              		.cfi_offset 14, -4
 849 0004 83B0     		sub	sp, sp, #12
 850              	.LCFI10:
 851              		.cfi_def_cfa_offset 40
 852 0006 0546     		mov	r5, r0
 853 0008 0C46     		mov	r4, r1
 854 000a 9146     		mov	r9, r2
 855 000c 1F46     		mov	r7, r3
 514:lvgl/src/draw/lv_img_decoder.c ****     lv_img_decoder_built_in_data_t * user_data = dsc->user_data;
 856              		.loc 1 514 5 is_stmt 1 view .LVU288
 857              		.loc 1 514 38 is_stmt 0 view .LVU289
 858 000e D0F82480 		ldr	r8, [r0, #36]
 859              	.LVL85:
 515:lvgl/src/draw/lv_img_decoder.c ****     lv_fs_res_t res;
 860              		.loc 1 515 5 is_stmt 1 view .LVU290
 516:lvgl/src/draw/lv_img_decoder.c ****     uint8_t px_size = lv_img_cf_get_px_size(dsc->header.cf);
 861              		.loc 1 516 5 view .LVU291
 862              		.loc 1 516 56 is_stmt 0 view .LVU292
 863 0012 007D     		ldrb	r0, [r0, #20]	@ zero_extendqisi2
 864              	.LVL86:
 865              		.loc 1 516 23 view .LVU293
 866 0014 00F01F00 		and	r0, r0, #31
 867 0018 FFF7FEFF 		bl	lv_img_cf_get_px_size
 868              	.LVL87:
 869              		.loc 1 516 23 view .LVU294
 870 001c 0646     		mov	r6, r0
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 43


 871              	.LVL88:
 517:lvgl/src/draw/lv_img_decoder.c **** 
 518:lvgl/src/draw/lv_img_decoder.c ****     uint32_t pos = ((y * dsc->header.w + x) * px_size) >> 3;
 872              		.loc 1 518 5 is_stmt 1 view .LVU295
 873              		.loc 1 518 37 is_stmt 0 view .LVU296
 874 001e 6B69     		ldr	r3, [r5, #20]
 875 0020 C3F38A23 		ubfx	r3, r3, #10, #11
 876              		.loc 1 518 40 view .LVU297
 877 0024 03FB0941 		mla	r1, r3, r9, r4
 878              		.loc 1 518 45 view .LVU298
 879 0028 00FB01F1 		mul	r1, r0, r1
 880              		.loc 1 518 56 view .LVU299
 881 002c C910     		asrs	r1, r1, #3
 882              	.LVL89:
 519:lvgl/src/draw/lv_img_decoder.c ****     pos += 4; /*Skip the header*/
 883              		.loc 1 519 5 is_stmt 1 view .LVU300
 520:lvgl/src/draw/lv_img_decoder.c ****     res = lv_fs_seek(&user_data->f, pos, LV_FS_SEEK_SET);
 884              		.loc 1 520 5 view .LVU301
 885              		.loc 1 520 11 is_stmt 0 view .LVU302
 886 002e 0022     		movs	r2, #0
 887 0030 0431     		adds	r1, r1, #4
 888              	.LVL90:
 889              		.loc 1 520 11 view .LVU303
 890 0032 4046     		mov	r0, r8
 891              	.LVL91:
 892              		.loc 1 520 11 view .LVU304
 893 0034 FFF7FEFF 		bl	lv_fs_seek
 894              	.LVL92:
 521:lvgl/src/draw/lv_img_decoder.c ****     if(res != LV_FS_RES_OK) {
 895              		.loc 1 521 5 is_stmt 1 view .LVU305
 896              		.loc 1 521 7 is_stmt 0 view .LVU306
 897 0038 20B1     		cbz	r0, .L66
 522:lvgl/src/draw/lv_img_decoder.c ****         LV_LOG_WARN("Built-in image decoder seek failed");
 523:lvgl/src/draw/lv_img_decoder.c ****         return LV_RES_INV;
 898              		.loc 1 523 16 view .LVU307
 899 003a 0024     		movs	r4, #0
 900              	.LVL93:
 901              	.L63:
 524:lvgl/src/draw/lv_img_decoder.c ****     }
 525:lvgl/src/draw/lv_img_decoder.c ****     uint32_t btr = len * (px_size >> 3);
 526:lvgl/src/draw/lv_img_decoder.c ****     uint32_t br  = 0;
 527:lvgl/src/draw/lv_img_decoder.c ****     res = lv_fs_read(&user_data->f, buf, btr, &br);
 528:lvgl/src/draw/lv_img_decoder.c ****     if(res != LV_FS_RES_OK || btr != br) {
 529:lvgl/src/draw/lv_img_decoder.c ****         LV_LOG_WARN("Built-in image decoder read failed");
 530:lvgl/src/draw/lv_img_decoder.c ****         return LV_RES_INV;
 531:lvgl/src/draw/lv_img_decoder.c ****     }
 532:lvgl/src/draw/lv_img_decoder.c **** 
 533:lvgl/src/draw/lv_img_decoder.c ****     return LV_RES_OK;
 534:lvgl/src/draw/lv_img_decoder.c **** }
 902              		.loc 1 534 1 view .LVU308
 903 003c 2046     		mov	r0, r4
 904              	.LVL94:
 905              		.loc 1 534 1 view .LVU309
 906 003e 03B0     		add	sp, sp, #12
 907              	.LCFI11:
 908              		.cfi_remember_state
 909              		.cfi_def_cfa_offset 28
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 44


 910              		@ sp needed
 911 0040 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 912              	.LVL95:
 913              	.L66:
 914              	.LCFI12:
 915              		.cfi_restore_state
 916              		.loc 1 534 1 view .LVU310
 917 0044 0446     		mov	r4, r0
 525:lvgl/src/draw/lv_img_decoder.c ****     uint32_t br  = 0;
 918              		.loc 1 525 5 is_stmt 1 view .LVU311
 525:lvgl/src/draw/lv_img_decoder.c ****     uint32_t br  = 0;
 919              		.loc 1 525 35 is_stmt 0 view .LVU312
 920 0046 C6F3C706 		ubfx	r6, r6, #3, #8
 525:lvgl/src/draw/lv_img_decoder.c ****     uint32_t br  = 0;
 921              		.loc 1 525 24 view .LVU313
 922 004a 06FB07F7 		mul	r7, r6, r7
 923              	.LVL96:
 526:lvgl/src/draw/lv_img_decoder.c ****     res = lv_fs_read(&user_data->f, buf, btr, &br);
 924              		.loc 1 526 5 is_stmt 1 view .LVU314
 526:lvgl/src/draw/lv_img_decoder.c ****     res = lv_fs_read(&user_data->f, buf, btr, &br);
 925              		.loc 1 526 14 is_stmt 0 view .LVU315
 926 004e 0023     		movs	r3, #0
 927 0050 0193     		str	r3, [sp, #4]
 527:lvgl/src/draw/lv_img_decoder.c ****     if(res != LV_FS_RES_OK || btr != br) {
 928              		.loc 1 527 5 is_stmt 1 view .LVU316
 527:lvgl/src/draw/lv_img_decoder.c ****     if(res != LV_FS_RES_OK || btr != br) {
 929              		.loc 1 527 11 is_stmt 0 view .LVU317
 930 0052 01AB     		add	r3, sp, #4
 931 0054 3A46     		mov	r2, r7
 932 0056 0A99     		ldr	r1, [sp, #40]
 933 0058 4046     		mov	r0, r8
 934              	.LVL97:
 527:lvgl/src/draw/lv_img_decoder.c ****     if(res != LV_FS_RES_OK || btr != br) {
 935              		.loc 1 527 11 view .LVU318
 936 005a FFF7FEFF 		bl	lv_fs_read
 937              	.LVL98:
 528:lvgl/src/draw/lv_img_decoder.c ****         LV_LOG_WARN("Built-in image decoder read failed");
 938              		.loc 1 528 5 is_stmt 1 view .LVU319
 528:lvgl/src/draw/lv_img_decoder.c ****         LV_LOG_WARN("Built-in image decoder read failed");
 939              		.loc 1 528 7 is_stmt 0 view .LVU320
 940 005e 0028     		cmp	r0, #0
 941 0060 ECD1     		bne	.L63
 528:lvgl/src/draw/lv_img_decoder.c ****         LV_LOG_WARN("Built-in image decoder read failed");
 942              		.loc 1 528 35 discriminator 1 view .LVU321
 943 0062 019B     		ldr	r3, [sp, #4]
 528:lvgl/src/draw/lv_img_decoder.c ****         LV_LOG_WARN("Built-in image decoder read failed");
 944              		.loc 1 528 28 discriminator 1 view .LVU322
 945 0064 BB42     		cmp	r3, r7
 946 0066 E9D1     		bne	.L63
 533:lvgl/src/draw/lv_img_decoder.c **** }
 947              		.loc 1 533 12 view .LVU323
 948 0068 0124     		movs	r4, #1
 949 006a E7E7     		b	.L63
 950              		.cfi_endproc
 951              	.LFE71:
 953              		.section	.text.lv_img_decoder_built_in_line_alpha,"ax",%progbits
 954              		.align	1
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 45


 955              		.syntax unified
 956              		.thumb
 957              		.thumb_func
 959              	lv_img_decoder_built_in_line_alpha:
 960              	.LVL99:
 961              	.LFB72:
 535:lvgl/src/draw/lv_img_decoder.c **** 
 536:lvgl/src/draw/lv_img_decoder.c **** static lv_res_t lv_img_decoder_built_in_line_alpha(lv_img_decoder_dsc_t * dsc, lv_coord_t x, lv_coo
 537:lvgl/src/draw/lv_img_decoder.c ****                                                    lv_coord_t len, uint8_t * buf)
 538:lvgl/src/draw/lv_img_decoder.c **** {
 962              		.loc 1 538 1 is_stmt 1 view -0
 963              		.cfi_startproc
 964              		@ args = 4, pretend = 0, frame = 40
 965              		@ frame_needed = 0, uses_anonymous_args = 0
 966              		.loc 1 538 1 is_stmt 0 view .LVU325
 967 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 968              	.LCFI13:
 969              		.cfi_def_cfa_offset 36
 970              		.cfi_offset 4, -36
 971              		.cfi_offset 5, -32
 972              		.cfi_offset 6, -28
 973              		.cfi_offset 7, -24
 974              		.cfi_offset 8, -20
 975              		.cfi_offset 9, -16
 976              		.cfi_offset 10, -12
 977              		.cfi_offset 11, -8
 978              		.cfi_offset 14, -4
 979 0004 8BB0     		sub	sp, sp, #44
 980              	.LCFI14:
 981              		.cfi_def_cfa_offset 80
 982 0006 0746     		mov	r7, r0
 983 0008 0C46     		mov	r4, r1
 984 000a 9246     		mov	r10, r2
 985 000c 1E46     		mov	r6, r3
 986 000e 149D     		ldr	r5, [sp, #80]
 539:lvgl/src/draw/lv_img_decoder.c ****     const lv_opa_t alpha1_opa_table[2]  = {0, 255};          /*Opacity mapping with bpp = 1 (Just f
 987              		.loc 1 539 5 is_stmt 1 view .LVU326
 988              		.loc 1 539 20 is_stmt 0 view .LVU327
 989 0010 4FF47F43 		mov	r3, #65280
 990              	.LVL100:
 991              		.loc 1 539 20 view .LVU328
 992 0014 ADF82430 		strh	r3, [sp, #36]	@ movhi
 540:lvgl/src/draw/lv_img_decoder.c ****     const lv_opa_t alpha2_opa_table[4]  = {0, 85, 170, 255}; /*Opacity mapping with bpp = 2*/
 993              		.loc 1 540 5 is_stmt 1 view .LVU329
 994              		.loc 1 540 20 is_stmt 0 view .LVU330
 995 0018 A3F5AD03 		sub	r3, r3, #5668864
 996 001c A3F52853 		sub	r3, r3, #10752
 997 0020 0893     		str	r3, [sp, #32]
 541:lvgl/src/draw/lv_img_decoder.c ****     const lv_opa_t alpha4_opa_table[16] = {0,  17, 34,  51,  /*Opacity mapping with bpp = 4*/
 998              		.loc 1 541 5 is_stmt 1 view .LVU331
 999              		.loc 1 541 20 is_stmt 0 view .LVU332
 1000 0022 594B     		ldr	r3, .L88
 1001 0024 0DF1100C 		add	ip, sp, #16
 1002 0028 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1003              	.LVL101:
 1004              		.loc 1 541 20 view .LVU333
 1005 002a 8CE80F00 		stm	ip, {r0, r1, r2, r3}
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 46


 542:lvgl/src/draw/lv_img_decoder.c ****                                            68, 85, 102, 119, 136, 153, 170, 187, 204, 221, 238, 255
 543:lvgl/src/draw/lv_img_decoder.c ****                                           };
 544:lvgl/src/draw/lv_img_decoder.c **** 
 545:lvgl/src/draw/lv_img_decoder.c ****     /*Simply fill the buffer with the color. Later only the alpha value will be modified.*/
 546:lvgl/src/draw/lv_img_decoder.c ****     lv_color_t bg_color = dsc->color;
 1006              		.loc 1 546 5 is_stmt 1 view .LVU334
 1007              		.loc 1 546 16 is_stmt 0 view .LVU335
 1008 002e 3889     		ldrh	r0, [r7, #8]
 547:lvgl/src/draw/lv_img_decoder.c ****     lv_coord_t i;
 1009              		.loc 1 547 5 is_stmt 1 view .LVU336
 548:lvgl/src/draw/lv_img_decoder.c ****     for(i = 0; i < len; i++) {
 1010              		.loc 1 548 5 view .LVU337
 1011              	.LVL102:
 1012              		.loc 1 548 11 is_stmt 0 view .LVU338
 1013 0030 0023     		movs	r3, #0
 1014              		.loc 1 548 5 view .LVU339
 1015 0032 08E0     		b	.L68
 1016              	.LVL103:
 1017              	.L69:
 549:lvgl/src/draw/lv_img_decoder.c **** #if LV_COLOR_DEPTH == 8 || LV_COLOR_DEPTH == 1
 550:lvgl/src/draw/lv_img_decoder.c ****         buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE] = bg_color.full;
 551:lvgl/src/draw/lv_img_decoder.c **** #elif LV_COLOR_DEPTH == 16
 552:lvgl/src/draw/lv_img_decoder.c ****         /*Because of Alpha byte 16 bit color can start on odd address which can cause crash*/
 553:lvgl/src/draw/lv_img_decoder.c ****         buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE] = bg_color.full & 0xFF;
 1018              		.loc 1 553 9 is_stmt 1 view .LVU340
 1019              		.loc 1 553 54 is_stmt 0 view .LVU341
 1020 0034 82B2     		uxth	r2, r0
 1021              		.loc 1 553 15 view .LVU342
 1022 0036 03EB4301 		add	r1, r3, r3, lsl #1
 1023              		.loc 1 553 44 view .LVU343
 1024 003a 6A54     		strb	r2, [r5, r1]
 554:lvgl/src/draw/lv_img_decoder.c ****         buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE + 1] = (bg_color.full >> 8) & 0xFF;
 1025              		.loc 1 554 9 is_stmt 1 view .LVU344
 1026              		.loc 1 554 12 is_stmt 0 view .LVU345
 1027 003c 0131     		adds	r1, r1, #1
 1028              		.loc 1 554 48 view .LVU346
 1029 003e 120A     		lsrs	r2, r2, #8
 1030 0040 6A54     		strb	r2, [r5, r1]
 548:lvgl/src/draw/lv_img_decoder.c ****     for(i = 0; i < len; i++) {
 1031              		.loc 1 548 26 is_stmt 1 discriminator 3 view .LVU347
 1032 0042 0133     		adds	r3, r3, #1
 1033              	.LVL104:
 548:lvgl/src/draw/lv_img_decoder.c ****     for(i = 0; i < len; i++) {
 1034              		.loc 1 548 26 is_stmt 0 discriminator 3 view .LVU348
 1035 0044 1BB2     		sxth	r3, r3
 1036              	.LVL105:
 1037              	.L68:
 548:lvgl/src/draw/lv_img_decoder.c ****     for(i = 0; i < len; i++) {
 1038              		.loc 1 548 18 is_stmt 1 discriminator 1 view .LVU349
 1039 0046 B342     		cmp	r3, r6
 1040 0048 F4DB     		blt	.L69
 555:lvgl/src/draw/lv_img_decoder.c **** #elif LV_COLOR_DEPTH == 32
 556:lvgl/src/draw/lv_img_decoder.c ****         *((uint32_t *)&buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE]) = bg_color.full;
 557:lvgl/src/draw/lv_img_decoder.c **** #else
 558:lvgl/src/draw/lv_img_decoder.c **** #error "Invalid LV_COLOR_DEPTH. Check it in lv_conf.h"
 559:lvgl/src/draw/lv_img_decoder.c **** #endif
 560:lvgl/src/draw/lv_img_decoder.c ****     }
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 47


 561:lvgl/src/draw/lv_img_decoder.c **** 
 562:lvgl/src/draw/lv_img_decoder.c ****     const lv_opa_t * opa_table = NULL;
 1041              		.loc 1 562 5 view .LVU350
 1042              	.LVL106:
 563:lvgl/src/draw/lv_img_decoder.c ****     uint8_t px_size            = lv_img_cf_get_px_size(dsc->header.cf);
 1043              		.loc 1 563 5 view .LVU351
 1044              		.loc 1 563 67 is_stmt 0 view .LVU352
 1045 004a 387D     		ldrb	r0, [r7, #20]	@ zero_extendqisi2
 1046              	.LVL107:
 1047              		.loc 1 563 34 view .LVU353
 1048 004c 00F01F00 		and	r0, r0, #31
 1049 0050 FFF7FEFF 		bl	lv_img_cf_get_px_size
 1050              	.LVL108:
 1051              		.loc 1 563 34 view .LVU354
 1052 0054 8146     		mov	r9, r0
 1053              	.LVL109:
 564:lvgl/src/draw/lv_img_decoder.c ****     uint16_t mask              = (1 << px_size) - 1; /*E.g. px_size = 2; mask = 0x03*/
 1054              		.loc 1 564 5 is_stmt 1 view .LVU355
 1055              		.loc 1 564 37 is_stmt 0 view .LVU356
 1056 0056 4FF00108 		mov	r8, #1
 1057 005a 08FA00F8 		lsl	r8, r8, r0
 1058              		.loc 1 564 49 view .LVU357
 1059 005e 1FFA88F8 		uxth	r8, r8
 1060              		.loc 1 564 14 view .LVU358
 1061 0062 08F1FF38 		add	r8, r8, #-1
 1062 0066 1FFA88F8 		uxth	r8, r8
 1063              	.LVL110:
 565:lvgl/src/draw/lv_img_decoder.c **** 
 566:lvgl/src/draw/lv_img_decoder.c ****     lv_coord_t w = 0;
 1064              		.loc 1 566 5 is_stmt 1 view .LVU359
 567:lvgl/src/draw/lv_img_decoder.c ****     uint32_t ofs = 0;
 1065              		.loc 1 567 5 view .LVU360
 568:lvgl/src/draw/lv_img_decoder.c ****     int8_t pos   = 0;
 1066              		.loc 1 568 5 view .LVU361
 569:lvgl/src/draw/lv_img_decoder.c ****     switch(dsc->header.cf) {
 1067              		.loc 1 569 5 view .LVU362
 1068              		.loc 1 569 23 is_stmt 0 view .LVU363
 1069 006a 3B7D     		ldrb	r3, [r7, #20]	@ zero_extendqisi2
 1070 006c 03F01F03 		and	r3, r3, #31
 1071              		.loc 1 569 5 view .LVU364
 1072 0070 0B3B     		subs	r3, r3, #11
 1073 0072 032B     		cmp	r3, #3
 1074 0074 47D8     		bhi	.L83
 1075 0076 DFE803F0 		tbb	[pc, r3]
 1076              	.L72:
 1077 007a 02       		.byte	(.L75-.L72)/2
 1078 007b 1E       		.byte	(.L74-.L72)/2
 1079 007c 2E       		.byte	(.L73-.L72)/2
 1080 007d 3D       		.byte	(.L71-.L72)/2
 1081              		.p2align 1
 1082              	.L75:
 570:lvgl/src/draw/lv_img_decoder.c ****         case LV_IMG_CF_ALPHA_1BIT:
 571:lvgl/src/draw/lv_img_decoder.c ****             w = (dsc->header.w + 7) >> 3; /*E.g. w = 20 -> w = 2 + 1*/
 1083              		.loc 1 571 13 is_stmt 1 view .LVU365
 1084              		.loc 1 571 29 is_stmt 0 view .LVU366
 1085 007e 7B69     		ldr	r3, [r7, #20]
 1086 0080 C3F38A20 		ubfx	r0, r3, #10, #11
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 48


 1087              	.LVL111:
 1088              		.loc 1 571 32 view .LVU367
 1089 0084 0730     		adds	r0, r0, #7
 1090              		.loc 1 571 15 view .LVU368
 1091 0086 C010     		asrs	r0, r0, #3
 1092              	.LVL112:
 572:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + (x >> 3); /*First pixel*/
 1093              		.loc 1 572 13 is_stmt 1 view .LVU369
 1094              		.loc 1 572 31 is_stmt 0 view .LVU370
 1095 0088 E310     		asrs	r3, r4, #3
 1096              		.loc 1 572 26 view .LVU371
 1097 008a 0AFB003A 		mla	r10, r10, r0, r3
 1098              	.LVL113:
 573:lvgl/src/draw/lv_img_decoder.c ****             pos = 7 - (x & 0x7);
 1099              		.loc 1 573 13 is_stmt 1 view .LVU372
 1100              		.loc 1 573 21 is_stmt 0 view .LVU373
 1101 008e E443     		mvns	r4, r4
 1102              	.LVL114:
 1103              		.loc 1 573 17 view .LVU374
 1104 0090 04F00704 		and	r4, r4, #7
 1105              	.LVL115:
 574:lvgl/src/draw/lv_img_decoder.c ****             opa_table = alpha1_opa_table;
 1106              		.loc 1 574 13 is_stmt 1 view .LVU375
 575:lvgl/src/draw/lv_img_decoder.c ****             break;
 1107              		.loc 1 575 13 view .LVU376
 574:lvgl/src/draw/lv_img_decoder.c ****             opa_table = alpha1_opa_table;
 1108              		.loc 1 574 23 is_stmt 0 view .LVU377
 1109 0094 0DF1240B 		add	fp, sp, #36
 1110              	.LVL116:
 1111              	.L70:
 576:lvgl/src/draw/lv_img_decoder.c ****         case LV_IMG_CF_ALPHA_2BIT:
 577:lvgl/src/draw/lv_img_decoder.c ****             w = (dsc->header.w + 3) >> 2; /*E.g. w = 13 -> w = 3 + 1 (bytes)*/
 578:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + (x >> 2); /*First pixel*/
 579:lvgl/src/draw/lv_img_decoder.c ****             pos = 6 - (x & 0x3) * 2;
 580:lvgl/src/draw/lv_img_decoder.c ****             opa_table = alpha2_opa_table;
 581:lvgl/src/draw/lv_img_decoder.c ****             break;
 582:lvgl/src/draw/lv_img_decoder.c ****         case LV_IMG_CF_ALPHA_4BIT:
 583:lvgl/src/draw/lv_img_decoder.c ****             w = (dsc->header.w + 1) >> 1; /*E.g. w = 13 -> w = 6 + 1 (bytes)*/
 584:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + (x >> 1); /*First pixel*/
 585:lvgl/src/draw/lv_img_decoder.c ****             pos = 4 - (x & 0x1) * 4;
 586:lvgl/src/draw/lv_img_decoder.c ****             opa_table = alpha4_opa_table;
 587:lvgl/src/draw/lv_img_decoder.c ****             break;
 588:lvgl/src/draw/lv_img_decoder.c ****         case LV_IMG_CF_ALPHA_8BIT:
 589:lvgl/src/draw/lv_img_decoder.c ****             w = dsc->header.w; /*E.g. x = 7 -> w = 7 (bytes)*/
 590:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + x;  /*First pixel*/
 591:lvgl/src/draw/lv_img_decoder.c ****             pos = 0;
 592:lvgl/src/draw/lv_img_decoder.c ****             break;
 593:lvgl/src/draw/lv_img_decoder.c ****     }
 594:lvgl/src/draw/lv_img_decoder.c **** 
 595:lvgl/src/draw/lv_img_decoder.c ****     lv_img_decoder_built_in_data_t * user_data = dsc->user_data;
 1112              		.loc 1 595 5 is_stmt 1 view .LVU378
 1113              		.loc 1 595 38 is_stmt 0 view .LVU379
 1114 0098 7B6A     		ldr	r3, [r7, #36]
 1115 009a 0293     		str	r3, [sp, #8]
 1116              	.LVL117:
 596:lvgl/src/draw/lv_img_decoder.c ****     uint8_t * fs_buf = lv_mem_buf_get(w);
 1117              		.loc 1 596 5 is_stmt 1 view .LVU380
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 49


 1118              		.loc 1 596 24 is_stmt 0 view .LVU381
 1119 009c 0390     		str	r0, [sp, #12]
 1120 009e FFF7FEFF 		bl	lv_mem_buf_get
 1121              	.LVL118:
 597:lvgl/src/draw/lv_img_decoder.c ****     if(fs_buf == NULL) return LV_RES_INV;
 1122              		.loc 1 597 5 is_stmt 1 view .LVU382
 1123              		.loc 1 597 7 is_stmt 0 view .LVU383
 1124 00a2 0190     		str	r0, [sp, #4]
 1125 00a4 0028     		cmp	r0, #0
 1126 00a6 6CD0     		beq	.L85
 598:lvgl/src/draw/lv_img_decoder.c **** 
 599:lvgl/src/draw/lv_img_decoder.c ****     const uint8_t * data_tmp = NULL;
 1127              		.loc 1 599 5 is_stmt 1 view .LVU384
 1128              	.LVL119:
 600:lvgl/src/draw/lv_img_decoder.c ****     if(dsc->src_type == LV_IMG_SRC_VARIABLE) {
 1129              		.loc 1 600 5 view .LVU385
 1130              		.loc 1 600 11 is_stmt 0 view .LVU386
 1131 00a8 3B7C     		ldrb	r3, [r7, #16]	@ zero_extendqisi2
 1132              		.loc 1 600 7 view .LVU387
 1133 00aa ABBB     		cbnz	r3, .L77
 1134              	.LBB27:
 601:lvgl/src/draw/lv_img_decoder.c ****         const lv_img_dsc_t * img_dsc = dsc->src;
 1135              		.loc 1 601 9 is_stmt 1 view .LVU388
 1136              		.loc 1 601 30 is_stmt 0 view .LVU389
 1137 00ac 7B68     		ldr	r3, [r7, #4]
 1138              	.LVL120:
 602:lvgl/src/draw/lv_img_decoder.c **** 
 603:lvgl/src/draw/lv_img_decoder.c ****         data_tmp = img_dsc->data + ofs;
 1139              		.loc 1 603 9 is_stmt 1 view .LVU390
 1140              		.loc 1 603 27 is_stmt 0 view .LVU391
 1141 00ae 9968     		ldr	r1, [r3, #8]
 1142              		.loc 1 603 18 view .LVU392
 1143 00b0 5144     		add	r1, r1, r10
 1144              	.LVL121:
 1145              	.L78:
 1146              		.loc 1 603 18 view .LVU393
 1147              	.LBE27:
 604:lvgl/src/draw/lv_img_decoder.c ****     }
 605:lvgl/src/draw/lv_img_decoder.c ****     else {
 606:lvgl/src/draw/lv_img_decoder.c ****         lv_fs_seek(&user_data->f, ofs + 4, LV_FS_SEEK_SET); /*+4 to skip the header*/
 607:lvgl/src/draw/lv_img_decoder.c ****         lv_fs_read(&user_data->f, fs_buf, w, NULL);
 608:lvgl/src/draw/lv_img_decoder.c ****         data_tmp = fs_buf;
 1148              		.loc 1 608 18 view .LVU394
 1149 00b2 0022     		movs	r2, #0
 1150 00b4 42E0     		b	.L81
 1151              	.LVL122:
 1152              	.L74:
 577:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + (x >> 2); /*First pixel*/
 1153              		.loc 1 577 13 is_stmt 1 view .LVU395
 577:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + (x >> 2); /*First pixel*/
 1154              		.loc 1 577 29 is_stmt 0 view .LVU396
 1155 00b6 7B69     		ldr	r3, [r7, #20]
 1156 00b8 C3F38A20 		ubfx	r0, r3, #10, #11
 1157              	.LVL123:
 577:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + (x >> 2); /*First pixel*/
 1158              		.loc 1 577 32 view .LVU397
 1159 00bc 0330     		adds	r0, r0, #3
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 50


 577:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + (x >> 2); /*First pixel*/
 1160              		.loc 1 577 15 view .LVU398
 1161 00be 8010     		asrs	r0, r0, #2
 1162              	.LVL124:
 578:lvgl/src/draw/lv_img_decoder.c ****             pos = 6 - (x & 0x3) * 2;
 1163              		.loc 1 578 13 is_stmt 1 view .LVU399
 578:lvgl/src/draw/lv_img_decoder.c ****             pos = 6 - (x & 0x3) * 2;
 1164              		.loc 1 578 31 is_stmt 0 view .LVU400
 1165 00c0 A310     		asrs	r3, r4, #2
 578:lvgl/src/draw/lv_img_decoder.c ****             pos = 6 - (x & 0x3) * 2;
 1166              		.loc 1 578 26 view .LVU401
 1167 00c2 0AFB003A 		mla	r10, r10, r0, r3
 1168              	.LVL125:
 579:lvgl/src/draw/lv_img_decoder.c ****             opa_table = alpha2_opa_table;
 1169              		.loc 1 579 13 is_stmt 1 view .LVU402
 579:lvgl/src/draw/lv_img_decoder.c ****             opa_table = alpha2_opa_table;
 1170              		.loc 1 579 21 is_stmt 0 view .LVU403
 1171 00c6 A4B2     		uxth	r4, r4
 1172 00c8 E443     		mvns	r4, r4
 579:lvgl/src/draw/lv_img_decoder.c ****             opa_table = alpha2_opa_table;
 1173              		.loc 1 579 17 view .LVU404
 1174 00ca 04F00304 		and	r4, r4, #3
 1175 00ce 6400     		lsls	r4, r4, #1
 1176              	.LVL126:
 580:lvgl/src/draw/lv_img_decoder.c ****             break;
 1177              		.loc 1 580 13 is_stmt 1 view .LVU405
 581:lvgl/src/draw/lv_img_decoder.c ****         case LV_IMG_CF_ALPHA_4BIT:
 1178              		.loc 1 581 13 view .LVU406
 580:lvgl/src/draw/lv_img_decoder.c ****             break;
 1179              		.loc 1 580 23 is_stmt 0 view .LVU407
 1180 00d0 0DF1200B 		add	fp, sp, #32
 1181              	.LVL127:
 581:lvgl/src/draw/lv_img_decoder.c ****         case LV_IMG_CF_ALPHA_4BIT:
 1182              		.loc 1 581 13 view .LVU408
 1183 00d4 E0E7     		b	.L70
 1184              	.LVL128:
 1185              	.L73:
 583:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + (x >> 1); /*First pixel*/
 1186              		.loc 1 583 13 is_stmt 1 view .LVU409
 583:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + (x >> 1); /*First pixel*/
 1187              		.loc 1 583 29 is_stmt 0 view .LVU410
 1188 00d6 7B69     		ldr	r3, [r7, #20]
 1189 00d8 C3F38A20 		ubfx	r0, r3, #10, #11
 1190              	.LVL129:
 583:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + (x >> 1); /*First pixel*/
 1191              		.loc 1 583 32 view .LVU411
 1192 00dc 0130     		adds	r0, r0, #1
 583:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + (x >> 1); /*First pixel*/
 1193              		.loc 1 583 15 view .LVU412
 1194 00de 4010     		asrs	r0, r0, #1
 1195              	.LVL130:
 584:lvgl/src/draw/lv_img_decoder.c ****             pos = 4 - (x & 0x1) * 4;
 1196              		.loc 1 584 13 is_stmt 1 view .LVU413
 584:lvgl/src/draw/lv_img_decoder.c ****             pos = 4 - (x & 0x1) * 4;
 1197              		.loc 1 584 31 is_stmt 0 view .LVU414
 1198 00e0 6310     		asrs	r3, r4, #1
 584:lvgl/src/draw/lv_img_decoder.c ****             pos = 4 - (x & 0x1) * 4;
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 51


 1199              		.loc 1 584 26 view .LVU415
 1200 00e2 0AFB003A 		mla	r10, r10, r0, r3
 1201              	.LVL131:
 585:lvgl/src/draw/lv_img_decoder.c ****             opa_table = alpha4_opa_table;
 1202              		.loc 1 585 13 is_stmt 1 view .LVU416
 585:lvgl/src/draw/lv_img_decoder.c ****             opa_table = alpha4_opa_table;
 1203              		.loc 1 585 17 is_stmt 0 view .LVU417
 1204 00e6 14F0010F 		tst	r4, #1
 1205 00ea 11D1     		bne	.L84
 585:lvgl/src/draw/lv_img_decoder.c ****             opa_table = alpha4_opa_table;
 1206              		.loc 1 585 17 discriminator 1 view .LVU418
 1207 00ec 0424     		movs	r4, #4
 586:lvgl/src/draw/lv_img_decoder.c ****             break;
 1208              		.loc 1 586 23 view .LVU419
 1209 00ee 0DF1100B 		add	fp, sp, #16
 1210 00f2 D1E7     		b	.L70
 1211              	.LVL132:
 1212              	.L71:
 589:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + x;  /*First pixel*/
 1213              		.loc 1 589 13 is_stmt 1 view .LVU420
 589:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + x;  /*First pixel*/
 1214              		.loc 1 589 28 is_stmt 0 view .LVU421
 1215 00f4 7869     		ldr	r0, [r7, #20]
 1216              	.LVL133:
 589:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + x;  /*First pixel*/
 1217              		.loc 1 589 28 view .LVU422
 1218 00f6 C0F38A23 		ubfx	r3, r0, #10, #11
 589:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + x;  /*First pixel*/
 1219              		.loc 1 589 15 view .LVU423
 1220 00fa 1846     		mov	r0, r3
 1221              	.LVL134:
 590:lvgl/src/draw/lv_img_decoder.c ****             pos = 0;
 1222              		.loc 1 590 13 is_stmt 1 view .LVU424
 590:lvgl/src/draw/lv_img_decoder.c ****             pos = 0;
 1223              		.loc 1 590 26 is_stmt 0 view .LVU425
 1224 00fc 0AFB034A 		mla	r10, r10, r3, r4
 1225              	.LVL135:
 591:lvgl/src/draw/lv_img_decoder.c ****             break;
 1226              		.loc 1 591 13 is_stmt 1 view .LVU426
 592:lvgl/src/draw/lv_img_decoder.c ****     }
 1227              		.loc 1 592 13 view .LVU427
 591:lvgl/src/draw/lv_img_decoder.c ****             break;
 1228              		.loc 1 591 17 is_stmt 0 view .LVU428
 1229 0100 0024     		movs	r4, #0
 562:lvgl/src/draw/lv_img_decoder.c ****     uint8_t px_size            = lv_img_cf_get_px_size(dsc->header.cf);
 1230              		.loc 1 562 22 view .LVU429
 1231 0102 A346     		mov	fp, r4
 592:lvgl/src/draw/lv_img_decoder.c ****     }
 1232              		.loc 1 592 13 view .LVU430
 1233 0104 C8E7     		b	.L70
 1234              	.LVL136:
 1235              	.L83:
 569:lvgl/src/draw/lv_img_decoder.c ****         case LV_IMG_CF_ALPHA_1BIT:
 1236              		.loc 1 569 5 view .LVU431
 1237 0106 0024     		movs	r4, #0
 1238 0108 A246     		mov	r10, r4
 1239 010a 2046     		mov	r0, r4
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 52


 1240              	.LVL137:
 569:lvgl/src/draw/lv_img_decoder.c ****         case LV_IMG_CF_ALPHA_1BIT:
 1241              		.loc 1 569 5 view .LVU432
 1242 010c A346     		mov	fp, r4
 1243 010e C3E7     		b	.L70
 1244              	.LVL138:
 1245              	.L84:
 585:lvgl/src/draw/lv_img_decoder.c ****             opa_table = alpha4_opa_table;
 1246              		.loc 1 585 17 discriminator 2 view .LVU433
 1247 0110 0024     		movs	r4, #0
 586:lvgl/src/draw/lv_img_decoder.c ****             break;
 1248              		.loc 1 586 23 view .LVU434
 1249 0112 0DF1100B 		add	fp, sp, #16
 1250 0116 BFE7     		b	.L70
 1251              	.LVL139:
 1252              	.L77:
 606:lvgl/src/draw/lv_img_decoder.c ****         lv_fs_read(&user_data->f, fs_buf, w, NULL);
 1253              		.loc 1 606 9 is_stmt 1 view .LVU435
 1254 0118 0022     		movs	r2, #0
 1255 011a 0AF10401 		add	r1, r10, #4
 1256 011e 0298     		ldr	r0, [sp, #8]
 1257              	.LVL140:
 606:lvgl/src/draw/lv_img_decoder.c ****         lv_fs_read(&user_data->f, fs_buf, w, NULL);
 1258              		.loc 1 606 9 is_stmt 0 view .LVU436
 1259 0120 FFF7FEFF 		bl	lv_fs_seek
 1260              	.LVL141:
 607:lvgl/src/draw/lv_img_decoder.c ****         data_tmp = fs_buf;
 1261              		.loc 1 607 9 is_stmt 1 view .LVU437
 1262 0124 0023     		movs	r3, #0
 1263 0126 039A     		ldr	r2, [sp, #12]
 1264 0128 DDF804A0 		ldr	r10, [sp, #4]
 1265              	.LVL142:
 607:lvgl/src/draw/lv_img_decoder.c ****         data_tmp = fs_buf;
 1266              		.loc 1 607 9 is_stmt 0 view .LVU438
 1267 012c 5146     		mov	r1, r10
 1268 012e 0298     		ldr	r0, [sp, #8]
 1269 0130 FFF7FEFF 		bl	lv_fs_read
 1270              	.LVL143:
 1271              		.loc 1 608 9 is_stmt 1 view .LVU439
 1272              		.loc 1 608 18 is_stmt 0 view .LVU440
 1273 0134 5146     		mov	r1, r10
 1274 0136 BCE7     		b	.L78
 1275              	.LVL144:
 1276              	.L80:
 609:lvgl/src/draw/lv_img_decoder.c ****     }
 610:lvgl/src/draw/lv_img_decoder.c **** 
 611:lvgl/src/draw/lv_img_decoder.c ****     for(i = 0; i < len; i++) {
 1277              		.loc 1 611 26 is_stmt 1 discriminator 2 view .LVU441
 1278 0138 0132     		adds	r2, r2, #1
 1279              	.LVL145:
 1280              		.loc 1 611 26 is_stmt 0 discriminator 2 view .LVU442
 1281 013a 12B2     		sxth	r2, r2
 1282              	.LVL146:
 1283              	.L81:
 1284              		.loc 1 611 18 is_stmt 1 discriminator 1 view .LVU443
 1285 013c B242     		cmp	r2, r6
 1286 013e 19DA     		bge	.L87
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 53


 1287              	.LBB28:
 612:lvgl/src/draw/lv_img_decoder.c ****         uint8_t val_act = (*data_tmp >> pos) & mask;
 1288              		.loc 1 612 9 view .LVU444
 1289              		.loc 1 612 28 is_stmt 0 view .LVU445
 1290 0140 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1291              		.loc 1 612 38 view .LVU446
 1292 0142 2341     		asrs	r3, r3, r4
 1293              		.loc 1 612 46 view .LVU447
 1294 0144 03EA0803 		and	r3, r3, r8
 1295              		.loc 1 612 17 view .LVU448
 1296 0148 DBB2     		uxtb	r3, r3
 1297              	.LVL147:
 613:lvgl/src/draw/lv_img_decoder.c **** 
 614:lvgl/src/draw/lv_img_decoder.c ****         buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE + LV_IMG_PX_SIZE_ALPHA_BYTE - 1] =
 1298              		.loc 1 614 9 is_stmt 1 view .LVU449
 615:lvgl/src/draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_8BIT ? val_act : opa_table[val_act];
 1299              		.loc 1 615 28 is_stmt 0 view .LVU450
 1300 014a 387D     		ldrb	r0, [r7, #20]	@ zero_extendqisi2
 1301 014c 00F01F00 		and	r0, r0, #31
 614:lvgl/src/draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_8BIT ? val_act : opa_table[val_act];
 1302              		.loc 1 614 76 view .LVU451
 1303 0150 0E28     		cmp	r0, #14
 1304 0152 01D0     		beq	.L79
 614:lvgl/src/draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_8BIT ? val_act : opa_table[val_act];
 1305              		.loc 1 614 76 discriminator 1 view .LVU452
 1306 0154 1BF80330 		ldrb	r3, [fp, r3]	@ zero_extendqisi2
 1307              	.LVL148:
 1308              	.L79:
 614:lvgl/src/draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_8BIT ? val_act : opa_table[val_act];
 1309              		.loc 1 614 15 discriminator 4 view .LVU453
 1310 0158 02EB4200 		add	r0, r2, r2, lsl #1
 614:lvgl/src/draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_8BIT ? val_act : opa_table[val_act];
 1311              		.loc 1 614 12 discriminator 4 view .LVU454
 1312 015c 0230     		adds	r0, r0, #2
 614:lvgl/src/draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_8BIT ? val_act : opa_table[val_act];
 1313              		.loc 1 614 76 discriminator 4 view .LVU455
 1314 015e 2B54     		strb	r3, [r5, r0]
 1315              	.LVL149:
 616:lvgl/src/draw/lv_img_decoder.c **** 
 617:lvgl/src/draw/lv_img_decoder.c ****         pos -= px_size;
 1316              		.loc 1 617 9 is_stmt 1 view .LVU456
 1317              		.loc 1 617 13 is_stmt 0 view .LVU457
 1318 0160 A4EB0904 		sub	r4, r4, r9
 1319              	.LVL150:
 1320              		.loc 1 617 13 view .LVU458
 1321 0164 64B2     		sxtb	r4, r4
 1322              	.LVL151:
 618:lvgl/src/draw/lv_img_decoder.c ****         if(pos < 0) {
 1323              		.loc 1 618 9 is_stmt 1 view .LVU459
 1324              		.loc 1 618 11 is_stmt 0 view .LVU460
 1325 0166 002C     		cmp	r4, #0
 1326 0168 E6DA     		bge	.L80
 619:lvgl/src/draw/lv_img_decoder.c ****             pos = 8 - px_size;
 1327              		.loc 1 619 13 is_stmt 1 view .LVU461
 1328              		.loc 1 619 21 is_stmt 0 view .LVU462
 1329 016a C9F10804 		rsb	r4, r9, #8
 1330              	.LVL152:
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 54


 1331              		.loc 1 619 17 view .LVU463
 1332 016e 64B2     		sxtb	r4, r4
 1333              	.LVL153:
 620:lvgl/src/draw/lv_img_decoder.c ****             data_tmp++;
 1334              		.loc 1 620 13 is_stmt 1 view .LVU464
 1335              		.loc 1 620 21 is_stmt 0 view .LVU465
 1336 0170 0131     		adds	r1, r1, #1
 1337              	.LVL154:
 1338              		.loc 1 620 21 view .LVU466
 1339 0172 E1E7     		b	.L80
 1340              	.LVL155:
 1341              	.L87:
 1342              		.loc 1 620 21 view .LVU467
 1343              	.LBE28:
 621:lvgl/src/draw/lv_img_decoder.c ****         }
 622:lvgl/src/draw/lv_img_decoder.c ****     }
 623:lvgl/src/draw/lv_img_decoder.c ****     lv_mem_buf_release(fs_buf);
 1344              		.loc 1 623 5 is_stmt 1 view .LVU468
 1345 0174 0198     		ldr	r0, [sp, #4]
 1346 0176 FFF7FEFF 		bl	lv_mem_buf_release
 1347              	.LVL156:
 624:lvgl/src/draw/lv_img_decoder.c ****     return LV_RES_OK;
 1348              		.loc 1 624 5 view .LVU469
 1349              		.loc 1 624 12 is_stmt 0 view .LVU470
 1350 017a 0120     		movs	r0, #1
 1351              	.LVL157:
 1352              	.L76:
 625:lvgl/src/draw/lv_img_decoder.c **** }
 1353              		.loc 1 625 1 view .LVU471
 1354 017c 0BB0     		add	sp, sp, #44
 1355              	.LCFI15:
 1356              		.cfi_remember_state
 1357              		.cfi_def_cfa_offset 36
 1358              		@ sp needed
 1359 017e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1360              	.LVL158:
 1361              	.L85:
 1362              	.LCFI16:
 1363              		.cfi_restore_state
 597:lvgl/src/draw/lv_img_decoder.c **** 
 1364              		.loc 1 597 31 discriminator 1 view .LVU472
 1365 0182 0020     		movs	r0, #0
 1366              	.LVL159:
 597:lvgl/src/draw/lv_img_decoder.c **** 
 1367              		.loc 1 597 31 discriminator 1 view .LVU473
 1368 0184 FAE7     		b	.L76
 1369              	.L89:
 1370 0186 00BF     		.align	2
 1371              	.L88:
 1372 0188 00000000 		.word	.LANCHOR0
 1373              		.cfi_endproc
 1374              	.LFE72:
 1376              		.section	.text.lv_img_decoder_built_in_line_indexed,"ax",%progbits
 1377              		.align	1
 1378              		.syntax unified
 1379              		.thumb
 1380              		.thumb_func
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 55


 1382              	lv_img_decoder_built_in_line_indexed:
 1383              	.LVL160:
 1384              	.LFB73:
 626:lvgl/src/draw/lv_img_decoder.c **** 
 627:lvgl/src/draw/lv_img_decoder.c **** static lv_res_t lv_img_decoder_built_in_line_indexed(lv_img_decoder_dsc_t * dsc, lv_coord_t x, lv_c
 628:lvgl/src/draw/lv_img_decoder.c ****                                                      lv_coord_t len, uint8_t * buf)
 629:lvgl/src/draw/lv_img_decoder.c **** {
 1385              		.loc 1 629 1 is_stmt 1 view -0
 1386              		.cfi_startproc
 1387              		@ args = 4, pretend = 0, frame = 8
 1388              		@ frame_needed = 0, uses_anonymous_args = 0
 1389              		.loc 1 629 1 is_stmt 0 view .LVU475
 1390 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1391              	.LCFI17:
 1392              		.cfi_def_cfa_offset 36
 1393              		.cfi_offset 4, -36
 1394              		.cfi_offset 5, -32
 1395              		.cfi_offset 6, -28
 1396              		.cfi_offset 7, -24
 1397              		.cfi_offset 8, -20
 1398              		.cfi_offset 9, -16
 1399              		.cfi_offset 10, -12
 1400              		.cfi_offset 11, -8
 1401              		.cfi_offset 14, -4
 1402 0004 83B0     		sub	sp, sp, #12
 1403              	.LCFI18:
 1404              		.cfi_def_cfa_offset 48
 1405 0006 8246     		mov	r10, r0
 1406 0008 0C46     		mov	r4, r1
 1407 000a 1746     		mov	r7, r2
 1408 000c 9946     		mov	r9, r3
 1409 000e 0C9D     		ldr	r5, [sp, #48]
 630:lvgl/src/draw/lv_img_decoder.c ****     uint8_t px_size = lv_img_cf_get_px_size(dsc->header.cf);
 1410              		.loc 1 630 5 is_stmt 1 view .LVU476
 1411              		.loc 1 630 56 is_stmt 0 view .LVU477
 1412 0010 007D     		ldrb	r0, [r0, #20]	@ zero_extendqisi2
 1413              	.LVL161:
 1414              		.loc 1 630 23 view .LVU478
 1415 0012 00F01F00 		and	r0, r0, #31
 1416 0016 FFF7FEFF 		bl	lv_img_cf_get_px_size
 1417              	.LVL162:
 1418              		.loc 1 630 23 view .LVU479
 1419 001a 8046     		mov	r8, r0
 1420              	.LVL163:
 631:lvgl/src/draw/lv_img_decoder.c ****     uint16_t mask   = (1 << px_size) - 1; /*E.g. px_size = 2; mask = 0x03*/
 1421              		.loc 1 631 5 is_stmt 1 view .LVU480
 1422              		.loc 1 631 26 is_stmt 0 view .LVU481
 1423 001c 0126     		movs	r6, #1
 1424 001e 8640     		lsls	r6, r6, r0
 1425              		.loc 1 631 38 view .LVU482
 1426 0020 B6B2     		uxth	r6, r6
 1427              		.loc 1 631 14 view .LVU483
 1428 0022 013E     		subs	r6, r6, #1
 1429 0024 B6B2     		uxth	r6, r6
 1430              	.LVL164:
 632:lvgl/src/draw/lv_img_decoder.c **** 
 633:lvgl/src/draw/lv_img_decoder.c ****     lv_coord_t w = 0;
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 56


 1431              		.loc 1 633 5 is_stmt 1 view .LVU484
 634:lvgl/src/draw/lv_img_decoder.c ****     int8_t pos   = 0;
 1432              		.loc 1 634 5 view .LVU485
 635:lvgl/src/draw/lv_img_decoder.c ****     uint32_t ofs = 0;
 1433              		.loc 1 635 5 view .LVU486
 636:lvgl/src/draw/lv_img_decoder.c ****     switch(dsc->header.cf) {
 1434              		.loc 1 636 5 view .LVU487
 1435              		.loc 1 636 23 is_stmt 0 view .LVU488
 1436 0026 9AF81430 		ldrb	r3, [r10, #20]	@ zero_extendqisi2
 1437 002a 03F01F03 		and	r3, r3, #31
 1438              		.loc 1 636 5 view .LVU489
 1439 002e 073B     		subs	r3, r3, #7
 1440 0030 032B     		cmp	r3, #3
 1441 0032 52D8     		bhi	.L103
 1442 0034 DFE803F0 		tbb	[pc, r3]
 1443              	.L93:
 1444 0038 02       		.byte	(.L96-.L93)/2
 1445 0039 23       		.byte	(.L95-.L93)/2
 1446 003a 35       		.byte	(.L94-.L93)/2
 1447 003b 46       		.byte	(.L92-.L93)/2
 1448              		.p2align 1
 1449              	.L96:
 637:lvgl/src/draw/lv_img_decoder.c ****         case LV_IMG_CF_INDEXED_1BIT:
 638:lvgl/src/draw/lv_img_decoder.c ****             w = (dsc->header.w + 7) >> 3; /*E.g. w = 20 -> w = 2 + 1*/
 1450              		.loc 1 638 13 is_stmt 1 view .LVU490
 1451              		.loc 1 638 29 is_stmt 0 view .LVU491
 1452 003c DAF81430 		ldr	r3, [r10, #20]
 1453 0040 C3F38A20 		ubfx	r0, r3, #10, #11
 1454              	.LVL165:
 1455              		.loc 1 638 32 view .LVU492
 1456 0044 0730     		adds	r0, r0, #7
 1457              		.loc 1 638 15 view .LVU493
 1458 0046 C010     		asrs	r0, r0, #3
 1459              	.LVL166:
 639:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + (x >> 3); /*First pixel*/
 1460              		.loc 1 639 13 is_stmt 1 view .LVU494
 1461              		.loc 1 639 31 is_stmt 0 view .LVU495
 1462 0048 4FEAE40B 		asr	fp, r4, #3
 1463              		.loc 1 639 26 view .LVU496
 1464 004c 07FB00BB 		mla	fp, r7, r0, fp
 1465              	.LVL167:
 640:lvgl/src/draw/lv_img_decoder.c ****             ofs += 8;                /*Skip the palette*/
 1466              		.loc 1 640 13 is_stmt 1 view .LVU497
 1467              		.loc 1 640 17 is_stmt 0 view .LVU498
 1468 0050 0BF1080B 		add	fp, fp, #8
 1469              	.LVL168:
 641:lvgl/src/draw/lv_img_decoder.c ****             pos = 7 - (x & 0x7);
 1470              		.loc 1 641 13 is_stmt 1 view .LVU499
 1471              		.loc 1 641 21 is_stmt 0 view .LVU500
 1472 0054 E443     		mvns	r4, r4
 1473              	.LVL169:
 1474              		.loc 1 641 17 view .LVU501
 1475 0056 04F00704 		and	r4, r4, #7
 1476              	.LVL170:
 642:lvgl/src/draw/lv_img_decoder.c ****             break;
 1477              		.loc 1 642 13 is_stmt 1 view .LVU502
 1478              	.L91:
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 57


 643:lvgl/src/draw/lv_img_decoder.c ****         case LV_IMG_CF_INDEXED_2BIT:
 644:lvgl/src/draw/lv_img_decoder.c ****             w = (dsc->header.w + 3) >> 2; /*E.g. w = 13 -> w = 3 + 1 (bytes)*/
 645:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + (x >> 2); /*First pixel*/
 646:lvgl/src/draw/lv_img_decoder.c ****             ofs += 16;               /*Skip the palette*/
 647:lvgl/src/draw/lv_img_decoder.c ****             pos = 6 - (x & 0x3) * 2;
 648:lvgl/src/draw/lv_img_decoder.c ****             break;
 649:lvgl/src/draw/lv_img_decoder.c ****         case LV_IMG_CF_INDEXED_4BIT:
 650:lvgl/src/draw/lv_img_decoder.c ****             w = (dsc->header.w + 1) >> 1; /*E.g. w = 13 -> w = 6 + 1 (bytes)*/
 651:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + (x >> 1); /*First pixel*/
 652:lvgl/src/draw/lv_img_decoder.c ****             ofs += 64;               /*Skip the palette*/
 653:lvgl/src/draw/lv_img_decoder.c ****             pos = 4 - (x & 0x1) * 4;
 654:lvgl/src/draw/lv_img_decoder.c ****             break;
 655:lvgl/src/draw/lv_img_decoder.c ****         case LV_IMG_CF_INDEXED_8BIT:
 656:lvgl/src/draw/lv_img_decoder.c ****             w = dsc->header.w; /*E.g. x = 7 -> w = 7 (bytes)*/
 657:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + x;  /*First pixel*/
 658:lvgl/src/draw/lv_img_decoder.c ****             ofs += 1024;       /*Skip the palette*/
 659:lvgl/src/draw/lv_img_decoder.c ****             pos = 0;
 660:lvgl/src/draw/lv_img_decoder.c ****             break;
 661:lvgl/src/draw/lv_img_decoder.c ****     }
 662:lvgl/src/draw/lv_img_decoder.c **** 
 663:lvgl/src/draw/lv_img_decoder.c ****     lv_img_decoder_built_in_data_t * user_data = dsc->user_data;
 1479              		.loc 1 663 5 view .LVU503
 1480              		.loc 1 663 38 is_stmt 0 view .LVU504
 1481 005a DAF82470 		ldr	r7, [r10, #36]
 1482              	.LVL171:
 664:lvgl/src/draw/lv_img_decoder.c **** 
 665:lvgl/src/draw/lv_img_decoder.c ****     uint8_t * fs_buf = lv_mem_buf_get(w);
 1483              		.loc 1 665 5 is_stmt 1 view .LVU505
 1484              		.loc 1 665 24 is_stmt 0 view .LVU506
 1485 005e 0190     		str	r0, [sp, #4]
 1486 0060 FFF7FEFF 		bl	lv_mem_buf_get
 1487              	.LVL172:
 666:lvgl/src/draw/lv_img_decoder.c ****     if(fs_buf == NULL) return LV_RES_INV;
 1488              		.loc 1 666 5 is_stmt 1 view .LVU507
 1489              		.loc 1 666 7 is_stmt 0 view .LVU508
 1490 0064 0090     		str	r0, [sp]
 1491 0066 0028     		cmp	r0, #0
 1492 0068 78D0     		beq	.L105
 667:lvgl/src/draw/lv_img_decoder.c ****     const uint8_t * data_tmp = NULL;
 1493              		.loc 1 667 5 is_stmt 1 view .LVU509
 1494              	.LVL173:
 668:lvgl/src/draw/lv_img_decoder.c ****     if(dsc->src_type == LV_IMG_SRC_VARIABLE) {
 1495              		.loc 1 668 5 view .LVU510
 1496              		.loc 1 668 11 is_stmt 0 view .LVU511
 1497 006a 9AF81030 		ldrb	r3, [r10, #16]	@ zero_extendqisi2
 1498              		.loc 1 668 7 view .LVU512
 1499 006e DBBB     		cbnz	r3, .L98
 1500              	.LBB29:
 669:lvgl/src/draw/lv_img_decoder.c ****         const lv_img_dsc_t * img_dsc = dsc->src;
 1501              		.loc 1 669 9 is_stmt 1 view .LVU513
 1502              		.loc 1 669 30 is_stmt 0 view .LVU514
 1503 0070 DAF80430 		ldr	r3, [r10, #4]
 1504              	.LVL174:
 670:lvgl/src/draw/lv_img_decoder.c ****         data_tmp                     = img_dsc->data + ofs;
 1505              		.loc 1 670 9 is_stmt 1 view .LVU515
 1506              		.loc 1 670 47 is_stmt 0 view .LVU516
 1507 0074 9B68     		ldr	r3, [r3, #8]
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 58


 1508              	.LVL175:
 1509              		.loc 1 670 38 view .LVU517
 1510 0076 03EB0B0C 		add	ip, r3, fp
 1511              	.LVL176:
 1512              	.L99:
 1513              		.loc 1 670 38 view .LVU518
 1514              	.LBE29:
 671:lvgl/src/draw/lv_img_decoder.c ****     }
 672:lvgl/src/draw/lv_img_decoder.c ****     else {
 673:lvgl/src/draw/lv_img_decoder.c ****         lv_fs_seek(&user_data->f, ofs + 4, LV_FS_SEEK_SET); /*+4 to skip the header*/
 674:lvgl/src/draw/lv_img_decoder.c ****         lv_fs_read(&user_data->f, fs_buf, w, NULL);
 675:lvgl/src/draw/lv_img_decoder.c ****         data_tmp = fs_buf;
 1515              		.loc 1 675 18 view .LVU519
 1516 007a 0020     		movs	r0, #0
 1517 007c 46E0     		b	.L101
 1518              	.LVL177:
 1519              	.L95:
 644:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + (x >> 2); /*First pixel*/
 1520              		.loc 1 644 13 is_stmt 1 view .LVU520
 644:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + (x >> 2); /*First pixel*/
 1521              		.loc 1 644 29 is_stmt 0 view .LVU521
 1522 007e DAF81430 		ldr	r3, [r10, #20]
 1523 0082 C3F38A20 		ubfx	r0, r3, #10, #11
 1524              	.LVL178:
 644:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + (x >> 2); /*First pixel*/
 1525              		.loc 1 644 32 view .LVU522
 1526 0086 0330     		adds	r0, r0, #3
 644:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + (x >> 2); /*First pixel*/
 1527              		.loc 1 644 15 view .LVU523
 1528 0088 8010     		asrs	r0, r0, #2
 1529              	.LVL179:
 645:lvgl/src/draw/lv_img_decoder.c ****             ofs += 16;               /*Skip the palette*/
 1530              		.loc 1 645 13 is_stmt 1 view .LVU524
 645:lvgl/src/draw/lv_img_decoder.c ****             ofs += 16;               /*Skip the palette*/
 1531              		.loc 1 645 31 is_stmt 0 view .LVU525
 1532 008a 4FEAA40B 		asr	fp, r4, #2
 645:lvgl/src/draw/lv_img_decoder.c ****             ofs += 16;               /*Skip the palette*/
 1533              		.loc 1 645 26 view .LVU526
 1534 008e 07FB00BB 		mla	fp, r7, r0, fp
 1535              	.LVL180:
 646:lvgl/src/draw/lv_img_decoder.c ****             pos = 6 - (x & 0x3) * 2;
 1536              		.loc 1 646 13 is_stmt 1 view .LVU527
 646:lvgl/src/draw/lv_img_decoder.c ****             pos = 6 - (x & 0x3) * 2;
 1537              		.loc 1 646 17 is_stmt 0 view .LVU528
 1538 0092 0BF1100B 		add	fp, fp, #16
 1539              	.LVL181:
 647:lvgl/src/draw/lv_img_decoder.c ****             break;
 1540              		.loc 1 647 13 is_stmt 1 view .LVU529
 647:lvgl/src/draw/lv_img_decoder.c ****             break;
 1541              		.loc 1 647 21 is_stmt 0 view .LVU530
 1542 0096 A4B2     		uxth	r4, r4
 1543 0098 E443     		mvns	r4, r4
 647:lvgl/src/draw/lv_img_decoder.c ****             break;
 1544              		.loc 1 647 17 view .LVU531
 1545 009a 04F00304 		and	r4, r4, #3
 1546 009e 6400     		lsls	r4, r4, #1
 1547              	.LVL182:
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 59


 648:lvgl/src/draw/lv_img_decoder.c ****         case LV_IMG_CF_INDEXED_4BIT:
 1548              		.loc 1 648 13 is_stmt 1 view .LVU532
 1549 00a0 DBE7     		b	.L91
 1550              	.LVL183:
 1551              	.L94:
 650:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + (x >> 1); /*First pixel*/
 1552              		.loc 1 650 13 view .LVU533
 650:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + (x >> 1); /*First pixel*/
 1553              		.loc 1 650 29 is_stmt 0 view .LVU534
 1554 00a2 DAF81430 		ldr	r3, [r10, #20]
 1555 00a6 C3F38A20 		ubfx	r0, r3, #10, #11
 1556              	.LVL184:
 650:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + (x >> 1); /*First pixel*/
 1557              		.loc 1 650 32 view .LVU535
 1558 00aa 0130     		adds	r0, r0, #1
 650:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + (x >> 1); /*First pixel*/
 1559              		.loc 1 650 15 view .LVU536
 1560 00ac 4010     		asrs	r0, r0, #1
 1561              	.LVL185:
 651:lvgl/src/draw/lv_img_decoder.c ****             ofs += 64;               /*Skip the palette*/
 1562              		.loc 1 651 13 is_stmt 1 view .LVU537
 651:lvgl/src/draw/lv_img_decoder.c ****             ofs += 64;               /*Skip the palette*/
 1563              		.loc 1 651 31 is_stmt 0 view .LVU538
 1564 00ae 4FEA640B 		asr	fp, r4, #1
 651:lvgl/src/draw/lv_img_decoder.c ****             ofs += 64;               /*Skip the palette*/
 1565              		.loc 1 651 26 view .LVU539
 1566 00b2 07FB00BB 		mla	fp, r7, r0, fp
 1567              	.LVL186:
 652:lvgl/src/draw/lv_img_decoder.c ****             pos = 4 - (x & 0x1) * 4;
 1568              		.loc 1 652 13 is_stmt 1 view .LVU540
 652:lvgl/src/draw/lv_img_decoder.c ****             pos = 4 - (x & 0x1) * 4;
 1569              		.loc 1 652 17 is_stmt 0 view .LVU541
 1570 00b6 0BF1400B 		add	fp, fp, #64
 1571              	.LVL187:
 653:lvgl/src/draw/lv_img_decoder.c ****             break;
 1572              		.loc 1 653 13 is_stmt 1 view .LVU542
 653:lvgl/src/draw/lv_img_decoder.c ****             break;
 1573              		.loc 1 653 17 is_stmt 0 view .LVU543
 1574 00ba 14F0010F 		tst	r4, #1
 1575 00be 11D1     		bne	.L104
 653:lvgl/src/draw/lv_img_decoder.c ****             break;
 1576              		.loc 1 653 17 discriminator 1 view .LVU544
 1577 00c0 0424     		movs	r4, #4
 1578 00c2 CAE7     		b	.L91
 1579              	.LVL188:
 1580              	.L92:
 656:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + x;  /*First pixel*/
 1581              		.loc 1 656 13 is_stmt 1 view .LVU545
 656:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + x;  /*First pixel*/
 1582              		.loc 1 656 28 is_stmt 0 view .LVU546
 1583 00c4 DAF81400 		ldr	r0, [r10, #20]
 1584              	.LVL189:
 656:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + x;  /*First pixel*/
 1585              		.loc 1 656 28 view .LVU547
 1586 00c8 C0F38A23 		ubfx	r3, r0, #10, #11
 656:lvgl/src/draw/lv_img_decoder.c ****             ofs += w * y + x;  /*First pixel*/
 1587              		.loc 1 656 15 view .LVU548
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 60


 1588 00cc 1846     		mov	r0, r3
 1589              	.LVL190:
 657:lvgl/src/draw/lv_img_decoder.c ****             ofs += 1024;       /*Skip the palette*/
 1590              		.loc 1 657 13 is_stmt 1 view .LVU549
 657:lvgl/src/draw/lv_img_decoder.c ****             ofs += 1024;       /*Skip the palette*/
 1591              		.loc 1 657 26 is_stmt 0 view .LVU550
 1592 00ce 07FB0344 		mla	r4, r7, r3, r4
 1593              	.LVL191:
 658:lvgl/src/draw/lv_img_decoder.c ****             pos = 0;
 1594              		.loc 1 658 13 is_stmt 1 view .LVU551
 658:lvgl/src/draw/lv_img_decoder.c ****             pos = 0;
 1595              		.loc 1 658 17 is_stmt 0 view .LVU552
 1596 00d2 04F5806B 		add	fp, r4, #1024
 1597              	.LVL192:
 659:lvgl/src/draw/lv_img_decoder.c ****             break;
 1598              		.loc 1 659 13 is_stmt 1 view .LVU553
 660:lvgl/src/draw/lv_img_decoder.c ****     }
 1599              		.loc 1 660 13 view .LVU554
 659:lvgl/src/draw/lv_img_decoder.c ****             break;
 1600              		.loc 1 659 17 is_stmt 0 view .LVU555
 1601 00d6 0024     		movs	r4, #0
 660:lvgl/src/draw/lv_img_decoder.c ****     }
 1602              		.loc 1 660 13 view .LVU556
 1603 00d8 BFE7     		b	.L91
 1604              	.LVL193:
 1605              	.L103:
 636:lvgl/src/draw/lv_img_decoder.c ****         case LV_IMG_CF_INDEXED_1BIT:
 1606              		.loc 1 636 5 view .LVU557
 1607 00da 4FF0000B 		mov	fp, #0
 1608 00de 5C46     		mov	r4, fp
 1609 00e0 5846     		mov	r0, fp
 1610              	.LVL194:
 636:lvgl/src/draw/lv_img_decoder.c ****         case LV_IMG_CF_INDEXED_1BIT:
 1611              		.loc 1 636 5 view .LVU558
 1612 00e2 BAE7     		b	.L91
 1613              	.LVL195:
 1614              	.L104:
 653:lvgl/src/draw/lv_img_decoder.c ****             break;
 1615              		.loc 1 653 17 discriminator 2 view .LVU559
 1616 00e4 0024     		movs	r4, #0
 1617 00e6 B8E7     		b	.L91
 1618              	.LVL196:
 1619              	.L98:
 673:lvgl/src/draw/lv_img_decoder.c ****         lv_fs_read(&user_data->f, fs_buf, w, NULL);
 1620              		.loc 1 673 9 is_stmt 1 view .LVU560
 1621 00e8 0022     		movs	r2, #0
 1622 00ea 0BF10401 		add	r1, fp, #4
 1623 00ee 3846     		mov	r0, r7
 1624              	.LVL197:
 673:lvgl/src/draw/lv_img_decoder.c ****         lv_fs_read(&user_data->f, fs_buf, w, NULL);
 1625              		.loc 1 673 9 is_stmt 0 view .LVU561
 1626 00f0 FFF7FEFF 		bl	lv_fs_seek
 1627              	.LVL198:
 674:lvgl/src/draw/lv_img_decoder.c ****         data_tmp = fs_buf;
 1628              		.loc 1 674 9 is_stmt 1 view .LVU562
 1629 00f4 0023     		movs	r3, #0
 1630 00f6 019A     		ldr	r2, [sp, #4]
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 61


 1631 00f8 DDF800A0 		ldr	r10, [sp]
 1632              	.LVL199:
 674:lvgl/src/draw/lv_img_decoder.c ****         data_tmp = fs_buf;
 1633              		.loc 1 674 9 is_stmt 0 view .LVU563
 1634 00fc 5146     		mov	r1, r10
 1635 00fe 3846     		mov	r0, r7
 1636 0100 FFF7FEFF 		bl	lv_fs_read
 1637              	.LVL200:
 1638              		.loc 1 675 9 is_stmt 1 view .LVU564
 1639              		.loc 1 675 18 is_stmt 0 view .LVU565
 1640 0104 D446     		mov	ip, r10
 1641 0106 B8E7     		b	.L99
 1642              	.LVL201:
 1643              	.L100:
 676:lvgl/src/draw/lv_img_decoder.c ****     }
 677:lvgl/src/draw/lv_img_decoder.c **** 
 678:lvgl/src/draw/lv_img_decoder.c ****     lv_coord_t i;
 679:lvgl/src/draw/lv_img_decoder.c ****     for(i = 0; i < len; i++) {
 1644              		.loc 1 679 26 is_stmt 1 discriminator 2 view .LVU566
 1645 0108 0130     		adds	r0, r0, #1
 1646              	.LVL202:
 1647              		.loc 1 679 26 is_stmt 0 discriminator 2 view .LVU567
 1648 010a 00B2     		sxth	r0, r0
 1649              	.LVL203:
 1650              	.L101:
 1651              		.loc 1 679 18 is_stmt 1 discriminator 1 view .LVU568
 1652 010c 4845     		cmp	r0, r9
 1653 010e 1EDA     		bge	.L107
 1654              	.LBB30:
 680:lvgl/src/draw/lv_img_decoder.c ****         uint8_t val_act = (*data_tmp >> pos) & mask;
 1655              		.loc 1 680 9 view .LVU569
 1656              		.loc 1 680 28 is_stmt 0 view .LVU570
 1657 0110 9CF80030 		ldrb	r3, [ip]	@ zero_extendqisi2
 1658              		.loc 1 680 38 view .LVU571
 1659 0114 2341     		asrs	r3, r3, r4
 1660              		.loc 1 680 46 view .LVU572
 1661 0116 3340     		ands	r3, r3, r6
 1662              		.loc 1 680 17 view .LVU573
 1663 0118 DBB2     		uxtb	r3, r3
 1664              	.LVL204:
 681:lvgl/src/draw/lv_img_decoder.c **** 
 682:lvgl/src/draw/lv_img_decoder.c ****         lv_color_t color = user_data->palette[val_act];
 1665              		.loc 1 682 9 is_stmt 1 view .LVU574
 1666              		.loc 1 682 37 is_stmt 0 view .LVU575
 1667 011a FA68     		ldr	r2, [r7, #12]
 683:lvgl/src/draw/lv_img_decoder.c **** #if LV_COLOR_DEPTH == 8 || LV_COLOR_DEPTH == 1
 684:lvgl/src/draw/lv_img_decoder.c ****         buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE] = color.full;
 685:lvgl/src/draw/lv_img_decoder.c **** #elif LV_COLOR_DEPTH == 16
 686:lvgl/src/draw/lv_img_decoder.c ****         /*Because of Alpha byte 16 bit color can start on odd address which can cause crash*/
 687:lvgl/src/draw/lv_img_decoder.c ****         buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE] = color.full & 0xFF;
 1668              		.loc 1 687 9 is_stmt 1 view .LVU576
 1669              		.loc 1 687 51 is_stmt 0 view .LVU577
 1670 011c 32F81310 		ldrh	r1, [r2, r3, lsl #1]
 1671              		.loc 1 687 15 view .LVU578
 1672 0120 00EB4002 		add	r2, r0, r0, lsl #1
 1673              		.loc 1 687 44 view .LVU579
 1674 0124 A954     		strb	r1, [r5, r2]
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 62


 688:lvgl/src/draw/lv_img_decoder.c ****         buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE + 1] = (color.full >> 8) & 0xFF;
 1675              		.loc 1 688 9 is_stmt 1 view .LVU580
 1676              		.loc 1 688 12 is_stmt 0 view .LVU581
 1677 0126 02F1010E 		add	lr, r2, #1
 1678              		.loc 1 688 48 view .LVU582
 1679 012a 090A     		lsrs	r1, r1, #8
 1680 012c 05F80E10 		strb	r1, [r5, lr]
 689:lvgl/src/draw/lv_img_decoder.c **** #elif LV_COLOR_DEPTH == 32
 690:lvgl/src/draw/lv_img_decoder.c ****         *((uint32_t *)&buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE]) = color.full;
 691:lvgl/src/draw/lv_img_decoder.c **** #else
 692:lvgl/src/draw/lv_img_decoder.c **** #error "Invalid LV_COLOR_DEPTH. Check it in lv_conf.h"
 693:lvgl/src/draw/lv_img_decoder.c **** #endif
 694:lvgl/src/draw/lv_img_decoder.c ****         buf[i * LV_IMG_PX_SIZE_ALPHA_BYTE + LV_IMG_PX_SIZE_ALPHA_BYTE - 1] = user_data->opa[val_act
 1681              		.loc 1 694 9 is_stmt 1 view .LVU583
 1682              		.loc 1 694 87 is_stmt 0 view .LVU584
 1683 0130 3969     		ldr	r1, [r7, #16]
 1684              		.loc 1 694 12 view .LVU585
 1685 0132 0232     		adds	r2, r2, #2
 1686              		.loc 1 694 92 view .LVU586
 1687 0134 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1688              	.LVL205:
 1689              		.loc 1 694 76 view .LVU587
 1690 0136 AB54     		strb	r3, [r5, r2]
 695:lvgl/src/draw/lv_img_decoder.c **** 
 696:lvgl/src/draw/lv_img_decoder.c ****         pos -= px_size;
 1691              		.loc 1 696 9 is_stmt 1 view .LVU588
 1692              		.loc 1 696 13 is_stmt 0 view .LVU589
 1693 0138 A4EB0804 		sub	r4, r4, r8
 1694              	.LVL206:
 1695              		.loc 1 696 13 view .LVU590
 1696 013c 64B2     		sxtb	r4, r4
 1697              	.LVL207:
 697:lvgl/src/draw/lv_img_decoder.c ****         if(pos < 0) {
 1698              		.loc 1 697 9 is_stmt 1 view .LVU591
 1699              		.loc 1 697 11 is_stmt 0 view .LVU592
 1700 013e 002C     		cmp	r4, #0
 1701 0140 E2DA     		bge	.L100
 698:lvgl/src/draw/lv_img_decoder.c ****             pos = 8 - px_size;
 1702              		.loc 1 698 13 is_stmt 1 view .LVU593
 1703              		.loc 1 698 21 is_stmt 0 view .LVU594
 1704 0142 C8F10804 		rsb	r4, r8, #8
 1705              	.LVL208:
 1706              		.loc 1 698 17 view .LVU595
 1707 0146 64B2     		sxtb	r4, r4
 1708              	.LVL209:
 699:lvgl/src/draw/lv_img_decoder.c ****             data_tmp++;
 1709              		.loc 1 699 13 is_stmt 1 view .LVU596
 1710              		.loc 1 699 21 is_stmt 0 view .LVU597
 1711 0148 0CF1010C 		add	ip, ip, #1
 1712              	.LVL210:
 1713              		.loc 1 699 21 view .LVU598
 1714 014c DCE7     		b	.L100
 1715              	.LVL211:
 1716              	.L107:
 1717              		.loc 1 699 21 view .LVU599
 1718              	.LBE30:
 700:lvgl/src/draw/lv_img_decoder.c ****         }
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 63


 701:lvgl/src/draw/lv_img_decoder.c ****     }
 702:lvgl/src/draw/lv_img_decoder.c ****     lv_mem_buf_release(fs_buf);
 1719              		.loc 1 702 5 is_stmt 1 view .LVU600
 1720 014e 0098     		ldr	r0, [sp]
 1721              	.LVL212:
 1722              		.loc 1 702 5 is_stmt 0 view .LVU601
 1723 0150 FFF7FEFF 		bl	lv_mem_buf_release
 1724              	.LVL213:
 703:lvgl/src/draw/lv_img_decoder.c ****     return LV_RES_OK;
 1725              		.loc 1 703 5 is_stmt 1 view .LVU602
 1726              		.loc 1 703 12 is_stmt 0 view .LVU603
 1727 0154 0120     		movs	r0, #1
 1728              	.LVL214:
 1729              	.L97:
 704:lvgl/src/draw/lv_img_decoder.c **** }
 1730              		.loc 1 704 1 view .LVU604
 1731 0156 03B0     		add	sp, sp, #12
 1732              	.LCFI19:
 1733              		.cfi_remember_state
 1734              		.cfi_def_cfa_offset 36
 1735              	.LVL215:
 1736              		.loc 1 704 1 view .LVU605
 1737              		@ sp needed
 1738 0158 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1739              	.LVL216:
 1740              	.L105:
 1741              	.LCFI20:
 1742              		.cfi_restore_state
 666:lvgl/src/draw/lv_img_decoder.c ****     const uint8_t * data_tmp = NULL;
 1743              		.loc 1 666 31 discriminator 1 view .LVU606
 1744 015c 0020     		movs	r0, #0
 1745              	.LVL217:
 666:lvgl/src/draw/lv_img_decoder.c ****     const uint8_t * data_tmp = NULL;
 1746              		.loc 1 666 31 discriminator 1 view .LVU607
 1747 015e FAE7     		b	.L97
 1748              		.cfi_endproc
 1749              	.LFE73:
 1751              		.section	.text.lv_img_decoder_built_in_read_line,"ax",%progbits
 1752              		.align	1
 1753              		.global	lv_img_decoder_built_in_read_line
 1754              		.syntax unified
 1755              		.thumb
 1756              		.thumb_func
 1758              	lv_img_decoder_built_in_read_line:
 1759              	.LVL218:
 1760              	.LFB69:
 456:lvgl/src/draw/lv_img_decoder.c ****     LV_UNUSED(decoder); /*Unused*/
 1761              		.loc 1 456 1 is_stmt 1 view -0
 1762              		.cfi_startproc
 1763              		@ args = 8, pretend = 0, frame = 0
 1764              		@ frame_needed = 0, uses_anonymous_args = 0
 456:lvgl/src/draw/lv_img_decoder.c ****     LV_UNUSED(decoder); /*Unused*/
 1765              		.loc 1 456 1 is_stmt 0 view .LVU609
 1766 0000 10B5     		push	{r4, lr}
 1767              	.LCFI21:
 1768              		.cfi_def_cfa_offset 8
 1769              		.cfi_offset 4, -8
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 64


 1770              		.cfi_offset 14, -4
 1771 0002 82B0     		sub	sp, sp, #8
 1772              	.LCFI22:
 1773              		.cfi_def_cfa_offset 16
 1774 0004 0846     		mov	r0, r1
 1775              	.LVL219:
 456:lvgl/src/draw/lv_img_decoder.c ****     LV_UNUSED(decoder); /*Unused*/
 1776              		.loc 1 456 1 view .LVU610
 1777 0006 1146     		mov	r1, r2
 1778              	.LVL220:
 456:lvgl/src/draw/lv_img_decoder.c ****     LV_UNUSED(decoder); /*Unused*/
 1779              		.loc 1 456 1 view .LVU611
 1780 0008 1A46     		mov	r2, r3
 1781              	.LVL221:
 456:lvgl/src/draw/lv_img_decoder.c ****     LV_UNUSED(decoder); /*Unused*/
 1782              		.loc 1 456 1 view .LVU612
 1783 000a BDF91030 		ldrsh	r3, [sp, #16]
 1784              	.LVL222:
 457:lvgl/src/draw/lv_img_decoder.c **** 
 1785              		.loc 1 457 5 is_stmt 1 view .LVU613
 459:lvgl/src/draw/lv_img_decoder.c **** 
 1786              		.loc 1 459 5 view .LVU614
 461:lvgl/src/draw/lv_img_decoder.c ****        dsc->header.cf == LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED) {
 1787              		.loc 1 461 5 view .LVU615
 461:lvgl/src/draw/lv_img_decoder.c ****        dsc->header.cf == LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED) {
 1788              		.loc 1 461 23 is_stmt 0 view .LVU616
 1789 000e 90F814C0 		ldrb	ip, [r0, #20]	@ zero_extendqisi2
 461:lvgl/src/draw/lv_img_decoder.c ****        dsc->header.cf == LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED) {
 1790              		.loc 1 461 47 view .LVU617
 1791 0012 0CF01E0E 		and	lr, ip, #30
 461:lvgl/src/draw/lv_img_decoder.c ****        dsc->header.cf == LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED) {
 1792              		.loc 1 461 7 view .LVU618
 1793 0016 BEF1040F 		cmp	lr, #4
 1794 001a 14D0     		beq	.L109
 462:lvgl/src/draw/lv_img_decoder.c ****         /*For TRUE_COLOR images read line required only for files.
 1795              		.loc 1 462 23 view .LVU619
 1796 001c 0CF01F0C 		and	ip, ip, #31
 461:lvgl/src/draw/lv_img_decoder.c ****        dsc->header.cf == LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED) {
 1797              		.loc 1 461 95 discriminator 1 view .LVU620
 1798 0020 BCF1060F 		cmp	ip, #6
 1799 0024 0FD0     		beq	.L109
 469:lvgl/src/draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_4BIT || dsc->header.cf == LV_IMG_CF_ALPHA_8BIT) {
 1800              		.loc 1 469 10 is_stmt 1 view .LVU621
 470:lvgl/src/draw/lv_img_decoder.c ****         res = lv_img_decoder_built_in_line_alpha(dsc, x, y, len, buf);
 1801              		.loc 1 470 52 is_stmt 0 view .LVU622
 1802 0026 ACF10B0E 		sub	lr, ip, #11
 1803 002a 5FFA8EFE 		uxtb	lr, lr
 469:lvgl/src/draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_ALPHA_4BIT || dsc->header.cf == LV_IMG_CF_ALPHA_8BIT) {
 1804              		.loc 1 469 12 view .LVU623
 1805 002e BEF1030F 		cmp	lr, #3
 1806 0032 15D9     		bls	.L116
 473:lvgl/src/draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_INDEXED_4BIT || dsc->header.cf == LV_IMG_CF_INDEXED_8BIT) {
 1807              		.loc 1 473 10 is_stmt 1 view .LVU624
 474:lvgl/src/draw/lv_img_decoder.c ****         res = lv_img_decoder_built_in_line_indexed(dsc, x, y, len, buf);
 1808              		.loc 1 474 54 is_stmt 0 view .LVU625
 1809 0034 ACF1070C 		sub	ip, ip, #7
 1810 0038 5FFA8CFC 		uxtb	ip, ip
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 65


 473:lvgl/src/draw/lv_img_decoder.c ****             dsc->header.cf == LV_IMG_CF_INDEXED_4BIT || dsc->header.cf == LV_IMG_CF_INDEXED_8BIT) {
 1811              		.loc 1 473 12 view .LVU626
 1812 003c BCF1030F 		cmp	ip, #3
 1813 0040 13D9     		bls	.L117
 479:lvgl/src/draw/lv_img_decoder.c ****     }
 1814              		.loc 1 479 16 view .LVU627
 1815 0042 0020     		movs	r0, #0
 1816              	.LVL223:
 479:lvgl/src/draw/lv_img_decoder.c ****     }
 1817              		.loc 1 479 16 view .LVU628
 1818 0044 05E0     		b	.L111
 1819              	.LVL224:
 1820              	.L109:
 465:lvgl/src/draw/lv_img_decoder.c ****             res = lv_img_decoder_built_in_line_true_color(dsc, x, y, len, buf);
 1821              		.loc 1 465 9 is_stmt 1 view .LVU629
 465:lvgl/src/draw/lv_img_decoder.c ****             res = lv_img_decoder_built_in_line_true_color(dsc, x, y, len, buf);
 1822              		.loc 1 465 15 is_stmt 0 view .LVU630
 1823 0046 90F810C0 		ldrb	ip, [r0, #16]	@ zero_extendqisi2
 465:lvgl/src/draw/lv_img_decoder.c ****             res = lv_img_decoder_built_in_line_true_color(dsc, x, y, len, buf);
 1824              		.loc 1 465 11 view .LVU631
 1825 004a BCF1010F 		cmp	ip, #1
 1826 004e 02D0     		beq	.L118
 459:lvgl/src/draw/lv_img_decoder.c **** 
 1827              		.loc 1 459 14 view .LVU632
 1828 0050 0020     		movs	r0, #0
 1829              	.LVL225:
 1830              	.L111:
 483:lvgl/src/draw/lv_img_decoder.c **** 
 1831              		.loc 1 483 1 view .LVU633
 1832 0052 02B0     		add	sp, sp, #8
 1833              	.LCFI23:
 1834              		.cfi_remember_state
 1835              		.cfi_def_cfa_offset 8
 1836              		@ sp needed
 1837 0054 10BD     		pop	{r4, pc}
 1838              	.LVL226:
 1839              	.L118:
 1840              	.LCFI24:
 1841              		.cfi_restore_state
 466:lvgl/src/draw/lv_img_decoder.c ****         }
 1842              		.loc 1 466 13 is_stmt 1 view .LVU634
 466:lvgl/src/draw/lv_img_decoder.c ****         }
 1843              		.loc 1 466 19 is_stmt 0 view .LVU635
 1844 0056 059C     		ldr	r4, [sp, #20]
 1845 0058 0094     		str	r4, [sp]
 1846 005a FFF7FEFF 		bl	lv_img_decoder_built_in_line_true_color
 1847              	.LVL227:
 466:lvgl/src/draw/lv_img_decoder.c ****         }
 1848              		.loc 1 466 19 view .LVU636
 1849 005e F8E7     		b	.L111
 1850              	.LVL228:
 1851              	.L116:
 471:lvgl/src/draw/lv_img_decoder.c ****     }
 1852              		.loc 1 471 9 is_stmt 1 view .LVU637
 471:lvgl/src/draw/lv_img_decoder.c ****     }
 1853              		.loc 1 471 15 is_stmt 0 view .LVU638
 1854 0060 059C     		ldr	r4, [sp, #20]
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 66


 1855 0062 0094     		str	r4, [sp]
 1856 0064 FFF7FEFF 		bl	lv_img_decoder_built_in_line_alpha
 1857              	.LVL229:
 471:lvgl/src/draw/lv_img_decoder.c ****     }
 1858              		.loc 1 471 15 view .LVU639
 1859 0068 F3E7     		b	.L111
 1860              	.LVL230:
 1861              	.L117:
 475:lvgl/src/draw/lv_img_decoder.c ****     }
 1862              		.loc 1 475 9 is_stmt 1 view .LVU640
 475:lvgl/src/draw/lv_img_decoder.c ****     }
 1863              		.loc 1 475 15 is_stmt 0 view .LVU641
 1864 006a 059C     		ldr	r4, [sp, #20]
 1865 006c 0094     		str	r4, [sp]
 1866 006e FFF7FEFF 		bl	lv_img_decoder_built_in_line_indexed
 1867              	.LVL231:
 475:lvgl/src/draw/lv_img_decoder.c ****     }
 1868              		.loc 1 475 15 view .LVU642
 1869 0072 EEE7     		b	.L111
 1870              		.cfi_endproc
 1871              	.LFE69:
 1873              		.section	.text.lv_img_decoder_get_info,"ax",%progbits
 1874              		.align	1
 1875              		.global	lv_img_decoder_get_info
 1876              		.syntax unified
 1877              		.thumb
 1878              		.thumb_func
 1880              	lv_img_decoder_get_info:
 1881              	.LVL232:
 1882              	.LFB57:
  84:lvgl/src/draw/lv_img_decoder.c ****     lv_memset_00(header, sizeof(lv_img_header_t));
 1883              		.loc 1 84 1 is_stmt 1 view -0
 1884              		.cfi_startproc
 1885              		@ args = 0, pretend = 0, frame = 0
 1886              		@ frame_needed = 0, uses_anonymous_args = 0
  84:lvgl/src/draw/lv_img_decoder.c ****     lv_memset_00(header, sizeof(lv_img_header_t));
 1887              		.loc 1 84 1 is_stmt 0 view .LVU644
 1888 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1889              	.LCFI25:
 1890              		.cfi_def_cfa_offset 24
 1891              		.cfi_offset 3, -24
 1892              		.cfi_offset 4, -20
 1893              		.cfi_offset 5, -16
 1894              		.cfi_offset 6, -12
 1895              		.cfi_offset 7, -8
 1896              		.cfi_offset 14, -4
 1897 0002 0646     		mov	r6, r0
 1898 0004 0F46     		mov	r7, r1
  85:lvgl/src/draw/lv_img_decoder.c **** 
 1899              		.loc 1 85 5 is_stmt 1 view .LVU645
 1900 0006 0421     		movs	r1, #4
 1901              	.LVL233:
  85:lvgl/src/draw/lv_img_decoder.c **** 
 1902              		.loc 1 85 5 is_stmt 0 view .LVU646
 1903 0008 3846     		mov	r0, r7
 1904              	.LVL234:
  85:lvgl/src/draw/lv_img_decoder.c **** 
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 67


 1905              		.loc 1 85 5 view .LVU647
 1906 000a FFF7FEFF 		bl	lv_memset_00
 1907              	.LVL235:
  87:lvgl/src/draw/lv_img_decoder.c **** 
 1908              		.loc 1 87 5 is_stmt 1 view .LVU648
  87:lvgl/src/draw/lv_img_decoder.c **** 
 1909              		.loc 1 87 7 is_stmt 0 view .LVU649
 1910 000e EEB1     		cbz	r6, .L125
  89:lvgl/src/draw/lv_img_decoder.c ****     if(src_type == LV_IMG_SRC_VARIABLE) {
 1911              		.loc 1 89 5 is_stmt 1 view .LVU650
  89:lvgl/src/draw/lv_img_decoder.c ****     if(src_type == LV_IMG_SRC_VARIABLE) {
 1912              		.loc 1 89 29 is_stmt 0 view .LVU651
 1913 0010 3046     		mov	r0, r6
 1914 0012 FFF7FEFF 		bl	lv_img_src_get_type
 1915              	.LVL236:
  90:lvgl/src/draw/lv_img_decoder.c ****         const lv_img_dsc_t * img_dsc = src;
 1916              		.loc 1 90 5 is_stmt 1 view .LVU652
  90:lvgl/src/draw/lv_img_decoder.c ****         const lv_img_dsc_t * img_dsc = src;
 1917              		.loc 1 90 7 is_stmt 0 view .LVU653
 1918 0016 0546     		mov	r5, r0
 1919 0018 08B9     		cbnz	r0, .L121
 1920              	.LBB31:
  91:lvgl/src/draw/lv_img_decoder.c ****         if(img_dsc->data == NULL) return LV_RES_INV;
 1921              		.loc 1 91 9 is_stmt 1 view .LVU654
 1922              	.LVL237:
  92:lvgl/src/draw/lv_img_decoder.c ****     }
 1923              		.loc 1 92 9 view .LVU655
  92:lvgl/src/draw/lv_img_decoder.c ****     }
 1924              		.loc 1 92 19 is_stmt 0 view .LVU656
 1925 001a B368     		ldr	r3, [r6, #8]
  92:lvgl/src/draw/lv_img_decoder.c ****     }
 1926              		.loc 1 92 11 view .LVU657
 1927 001c BBB1     		cbz	r3, .L120
 1928              	.LVL238:
 1929              	.L121:
  92:lvgl/src/draw/lv_img_decoder.c ****     }
 1930              		.loc 1 92 11 view .LVU658
 1931              	.LBE31:
  95:lvgl/src/draw/lv_img_decoder.c ****     lv_img_decoder_t * d;
 1932              		.loc 1 95 5 is_stmt 1 view .LVU659
  96:lvgl/src/draw/lv_img_decoder.c ****     _LV_LL_READ(&LV_GC_ROOT(_lv_img_decoder_ll), d) {
 1933              		.loc 1 96 5 view .LVU660
  97:lvgl/src/draw/lv_img_decoder.c ****         if(d->info_cb) {
 1934              		.loc 1 97 5 view .LVU661
 1935 001e 0D48     		ldr	r0, .L127
 1936              	.LVL239:
  97:lvgl/src/draw/lv_img_decoder.c ****         if(d->info_cb) {
 1937              		.loc 1 97 5 is_stmt 0 view .LVU662
 1938 0020 FFF7FEFF 		bl	_lv_ll_get_head
 1939              	.LVL240:
 1940 0024 0446     		mov	r4, r0
 1941              	.LVL241:
  95:lvgl/src/draw/lv_img_decoder.c ****     lv_img_decoder_t * d;
 1942              		.loc 1 95 14 view .LVU663
 1943 0026 0025     		movs	r5, #0
 1944              	.LVL242:
  97:lvgl/src/draw/lv_img_decoder.c ****         if(d->info_cb) {
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 68


 1945              		.loc 1 97 5 view .LVU664
 1946 0028 04E0     		b	.L122
 1947              	.LVL243:
 1948              	.L123:
  97:lvgl/src/draw/lv_img_decoder.c ****         if(d->info_cb) {
 1949              		.loc 1 97 5 is_stmt 1 discriminator 2 view .LVU665
 1950 002a 2146     		mov	r1, r4
 1951 002c 0948     		ldr	r0, .L127
 1952 002e FFF7FEFF 		bl	_lv_ll_get_next
 1953              	.LVL244:
 1954 0032 0446     		mov	r4, r0
 1955              	.LVL245:
 1956              	.L122:
  97:lvgl/src/draw/lv_img_decoder.c ****         if(d->info_cb) {
 1957              		.loc 1 97 5 discriminator 1 view .LVU666
 1958 0034 5CB1     		cbz	r4, .L120
  98:lvgl/src/draw/lv_img_decoder.c ****             res = d->info_cb(d, src, header);
 1959              		.loc 1 98 9 view .LVU667
  98:lvgl/src/draw/lv_img_decoder.c ****             res = d->info_cb(d, src, header);
 1960              		.loc 1 98 13 is_stmt 0 view .LVU668
 1961 0036 2368     		ldr	r3, [r4]
  98:lvgl/src/draw/lv_img_decoder.c ****             res = d->info_cb(d, src, header);
 1962              		.loc 1 98 11 view .LVU669
 1963 0038 002B     		cmp	r3, #0
 1964 003a F6D0     		beq	.L123
  99:lvgl/src/draw/lv_img_decoder.c ****             if(res == LV_RES_OK) break;
 1965              		.loc 1 99 13 is_stmt 1 view .LVU670
  99:lvgl/src/draw/lv_img_decoder.c ****             if(res == LV_RES_OK) break;
 1966              		.loc 1 99 19 is_stmt 0 view .LVU671
 1967 003c 3A46     		mov	r2, r7
 1968 003e 3146     		mov	r1, r6
 1969 0040 2046     		mov	r0, r4
  99:lvgl/src/draw/lv_img_decoder.c ****             if(res == LV_RES_OK) break;
 1970              		.loc 1 99 19 view .LVU672
 1971 0042 9847     		blx	r3
 1972              	.LVL246:
  99:lvgl/src/draw/lv_img_decoder.c ****             if(res == LV_RES_OK) break;
 1973              		.loc 1 99 19 view .LVU673
 1974 0044 0546     		mov	r5, r0
 1975              	.LVL247:
 100:lvgl/src/draw/lv_img_decoder.c ****         }
 1976              		.loc 1 100 13 is_stmt 1 view .LVU674
 100:lvgl/src/draw/lv_img_decoder.c ****         }
 1977              		.loc 1 100 15 is_stmt 0 view .LVU675
 1978 0046 0128     		cmp	r0, #1
 1979 0048 EFD1     		bne	.L123
 1980 004a 00E0     		b	.L120
 1981              	.LVL248:
 1982              	.L125:
  87:lvgl/src/draw/lv_img_decoder.c **** 
 1983              		.loc 1 87 28 discriminator 1 view .LVU676
 1984 004c 0025     		movs	r5, #0
 1985              	.L120:
 105:lvgl/src/draw/lv_img_decoder.c **** 
 1986              		.loc 1 105 1 view .LVU677
 1987 004e 2846     		mov	r0, r5
 1988 0050 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 69


 1989              	.LVL249:
 1990              	.L128:
 105:lvgl/src/draw/lv_img_decoder.c **** 
 1991              		.loc 1 105 1 view .LVU678
 1992 0052 00BF     		.align	2
 1993              	.L127:
 1994 0054 00000000 		.word	_lv_img_decoder_ll
 1995              		.cfi_endproc
 1996              	.LFE57:
 1998              		.section	.text.lv_img_decoder_open,"ax",%progbits
 1999              		.align	1
 2000              		.global	lv_img_decoder_open
 2001              		.syntax unified
 2002              		.thumb
 2003              		.thumb_func
 2005              	lv_img_decoder_open:
 2006              	.LVL250:
 2007              	.LFB58:
 108:lvgl/src/draw/lv_img_decoder.c ****     lv_memset_00(dsc, sizeof(lv_img_decoder_dsc_t));
 2008              		.loc 1 108 1 is_stmt 1 view -0
 2009              		.cfi_startproc
 2010              		@ args = 0, pretend = 0, frame = 0
 2011              		@ frame_needed = 0, uses_anonymous_args = 0
 108:lvgl/src/draw/lv_img_decoder.c ****     lv_memset_00(dsc, sizeof(lv_img_decoder_dsc_t));
 2012              		.loc 1 108 1 is_stmt 0 view .LVU680
 2013 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2014              	.LCFI26:
 2015              		.cfi_def_cfa_offset 24
 2016              		.cfi_offset 4, -24
 2017              		.cfi_offset 5, -20
 2018              		.cfi_offset 6, -16
 2019              		.cfi_offset 7, -12
 2020              		.cfi_offset 8, -8
 2021              		.cfi_offset 14, -4
 2022 0004 0646     		mov	r6, r0
 2023 0006 8846     		mov	r8, r1
 2024 0008 1746     		mov	r7, r2	@ movhi
 2025              	.LVL251:
 108:lvgl/src/draw/lv_img_decoder.c ****     lv_memset_00(dsc, sizeof(lv_img_decoder_dsc_t));
 2026              		.loc 1 108 1 view .LVU681
 2027 000a 1C46     		mov	r4, r3
 109:lvgl/src/draw/lv_img_decoder.c **** 
 2028              		.loc 1 109 5 is_stmt 1 view .LVU682
 2029 000c 2821     		movs	r1, #40
 2030              	.LVL252:
 109:lvgl/src/draw/lv_img_decoder.c **** 
 2031              		.loc 1 109 5 is_stmt 0 view .LVU683
 2032 000e FFF7FEFF 		bl	lv_memset_00
 2033              	.LVL253:
 111:lvgl/src/draw/lv_img_decoder.c ****     lv_img_src_t src_type = lv_img_src_get_type(src);
 2034              		.loc 1 111 5 is_stmt 1 view .LVU684
 111:lvgl/src/draw/lv_img_decoder.c ****     lv_img_src_t src_type = lv_img_src_get_type(src);
 2035              		.loc 1 111 7 is_stmt 0 view .LVU685
 2036 0012 B8F1000F 		cmp	r8, #0
 2037 0016 53D0     		beq	.L139
 112:lvgl/src/draw/lv_img_decoder.c ****     if(src_type == LV_IMG_SRC_VARIABLE) {
 2038              		.loc 1 112 5 is_stmt 1 view .LVU686
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 70


 112:lvgl/src/draw/lv_img_decoder.c ****     if(src_type == LV_IMG_SRC_VARIABLE) {
 2039              		.loc 1 112 29 is_stmt 0 view .LVU687
 2040 0018 4046     		mov	r0, r8
 2041 001a FFF7FEFF 		bl	lv_img_src_get_type
 2042              	.LVL254:
 113:lvgl/src/draw/lv_img_decoder.c ****         const lv_img_dsc_t * img_dsc = src;
 2043              		.loc 1 113 5 is_stmt 1 view .LVU688
 113:lvgl/src/draw/lv_img_decoder.c ****         const lv_img_dsc_t * img_dsc = src;
 2044              		.loc 1 113 7 is_stmt 0 view .LVU689
 2045 001e 0546     		mov	r5, r0
 2046 0020 18B9     		cbnz	r0, .L131
 2047              	.LBB32:
 114:lvgl/src/draw/lv_img_decoder.c ****         if(img_dsc->data == NULL) return LV_RES_INV;
 2048              		.loc 1 114 9 is_stmt 1 view .LVU690
 2049              	.LVL255:
 115:lvgl/src/draw/lv_img_decoder.c ****     }
 2050              		.loc 1 115 9 view .LVU691
 115:lvgl/src/draw/lv_img_decoder.c ****     }
 2051              		.loc 1 115 19 is_stmt 0 view .LVU692
 2052 0022 D8F80830 		ldr	r3, [r8, #8]
 115:lvgl/src/draw/lv_img_decoder.c ****     }
 2053              		.loc 1 115 11 view .LVU693
 2054 0026 002B     		cmp	r3, #0
 2055 0028 43D0     		beq	.L130
 2056              	.LVL256:
 2057              	.L131:
 115:lvgl/src/draw/lv_img_decoder.c ****     }
 2058              		.loc 1 115 11 view .LVU694
 2059              	.LBE32:
 118:lvgl/src/draw/lv_img_decoder.c ****     dsc->src_type = src_type;
 2060              		.loc 1 118 5 is_stmt 1 view .LVU695
 118:lvgl/src/draw/lv_img_decoder.c ****     dsc->src_type = src_type;
 2061              		.loc 1 118 19 is_stmt 0 view .LVU696
 2062 002a 3781     		strh	r7, [r6, #8]	@ movhi
 119:lvgl/src/draw/lv_img_decoder.c ****     dsc->frame_id = frame_id;
 2063              		.loc 1 119 5 is_stmt 1 view .LVU697
 119:lvgl/src/draw/lv_img_decoder.c ****     dsc->frame_id = frame_id;
 2064              		.loc 1 119 19 is_stmt 0 view .LVU698
 2065 002c 3574     		strb	r5, [r6, #16]
 120:lvgl/src/draw/lv_img_decoder.c **** 
 2066              		.loc 1 120 5 is_stmt 1 view .LVU699
 120:lvgl/src/draw/lv_img_decoder.c **** 
 2067              		.loc 1 120 19 is_stmt 0 view .LVU700
 2068 002e F460     		str	r4, [r6, #12]
 122:lvgl/src/draw/lv_img_decoder.c ****         size_t fnlen = strlen(src);
 2069              		.loc 1 122 5 is_stmt 1 view .LVU701
 122:lvgl/src/draw/lv_img_decoder.c ****         size_t fnlen = strlen(src);
 2070              		.loc 1 122 7 is_stmt 0 view .LVU702
 2071 0030 012D     		cmp	r5, #1
 2072 0032 07D0     		beq	.L141
 133:lvgl/src/draw/lv_img_decoder.c ****     }
 2073              		.loc 1 133 9 is_stmt 1 view .LVU703
 133:lvgl/src/draw/lv_img_decoder.c ****     }
 2074              		.loc 1 133 18 is_stmt 0 view .LVU704
 2075 0034 C6F80480 		str	r8, [r6, #4]
 2076              	.LVL257:
 2077              	.L135:
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 71


 136:lvgl/src/draw/lv_img_decoder.c **** 
 2078              		.loc 1 136 5 is_stmt 1 view .LVU705
 138:lvgl/src/draw/lv_img_decoder.c ****     _LV_LL_READ(&LV_GC_ROOT(_lv_img_decoder_ll), decoder) {
 2079              		.loc 1 138 5 view .LVU706
 139:lvgl/src/draw/lv_img_decoder.c ****         /*Info and Open callbacks are required*/
 2080              		.loc 1 139 5 view .LVU707
 2081 0038 2248     		ldr	r0, .L144
 2082 003a FFF7FEFF 		bl	_lv_ll_get_head
 2083              	.LVL258:
 2084 003e 0446     		mov	r4, r0
 2085              	.LVL259:
 136:lvgl/src/draw/lv_img_decoder.c **** 
 2086              		.loc 1 136 14 is_stmt 0 view .LVU708
 2087 0040 0025     		movs	r5, #0
 2088              	.LVL260:
 139:lvgl/src/draw/lv_img_decoder.c ****         /*Info and Open callbacks are required*/
 2089              		.loc 1 139 5 view .LVU709
 2090 0042 11E0     		b	.L136
 2091              	.LVL261:
 2092              	.L141:
 2093              	.LBB33:
 123:lvgl/src/draw/lv_img_decoder.c ****         dsc->src = lv_mem_alloc(fnlen + 1);
 2094              		.loc 1 123 9 is_stmt 1 view .LVU710
 123:lvgl/src/draw/lv_img_decoder.c ****         dsc->src = lv_mem_alloc(fnlen + 1);
 2095              		.loc 1 123 24 is_stmt 0 view .LVU711
 2096 0044 4046     		mov	r0, r8
 2097              	.LVL262:
 123:lvgl/src/draw/lv_img_decoder.c ****         dsc->src = lv_mem_alloc(fnlen + 1);
 2098              		.loc 1 123 24 view .LVU712
 2099 0046 FFF7FEFF 		bl	strlen
 2100              	.LVL263:
 124:lvgl/src/draw/lv_img_decoder.c ****         LV_ASSERT_MALLOC(dsc->src);
 2101              		.loc 1 124 9 is_stmt 1 view .LVU713
 124:lvgl/src/draw/lv_img_decoder.c ****         LV_ASSERT_MALLOC(dsc->src);
 2102              		.loc 1 124 20 is_stmt 0 view .LVU714
 2103 004a 0130     		adds	r0, r0, #1
 2104              	.LVL264:
 124:lvgl/src/draw/lv_img_decoder.c ****         LV_ASSERT_MALLOC(dsc->src);
 2105              		.loc 1 124 20 view .LVU715
 2106 004c FFF7FEFF 		bl	lv_mem_alloc
 2107              	.LVL265:
 124:lvgl/src/draw/lv_img_decoder.c ****         LV_ASSERT_MALLOC(dsc->src);
 2108              		.loc 1 124 18 discriminator 1 view .LVU716
 2109 0050 7060     		str	r0, [r6, #4]
 125:lvgl/src/draw/lv_img_decoder.c ****         if(dsc->src == NULL) {
 2110              		.loc 1 125 9 is_stmt 1 view .LVU717
 125:lvgl/src/draw/lv_img_decoder.c ****         if(dsc->src == NULL) {
 2111              		.loc 1 125 9 view .LVU718
 2112 0052 18B1     		cbz	r0, .L134
 125:lvgl/src/draw/lv_img_decoder.c ****         if(dsc->src == NULL) {
 2113              		.loc 1 125 9 discriminator 2 view .LVU719
 125:lvgl/src/draw/lv_img_decoder.c ****         if(dsc->src == NULL) {
 2114              		.loc 1 125 35 discriminator 2 view .LVU720
 126:lvgl/src/draw/lv_img_decoder.c ****             LV_LOG_WARN("lv_img_decoder_open: out of memory");
 2115              		.loc 1 126 9 view .LVU721
 130:lvgl/src/draw/lv_img_decoder.c ****     }
 2116              		.loc 1 130 9 view .LVU722
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 72


 2117 0054 4146     		mov	r1, r8
 2118 0056 FFF7FEFF 		bl	strcpy
 2119              	.LVL266:
 2120              	.LBE33:
 2121 005a EDE7     		b	.L135
 2122              	.L134:
 2123              	.LBB34:
 125:lvgl/src/draw/lv_img_decoder.c ****         if(dsc->src == NULL) {
 2124              		.loc 1 125 9 discriminator 1 view .LVU723
 125:lvgl/src/draw/lv_img_decoder.c ****         if(dsc->src == NULL) {
 2125              		.loc 1 125 9 discriminator 1 view .LVU724
 125:lvgl/src/draw/lv_img_decoder.c ****         if(dsc->src == NULL) {
 2126              		.loc 1 125 9 discriminator 1 view .LVU725
 125:lvgl/src/draw/lv_img_decoder.c ****         if(dsc->src == NULL) {
 2127              		.loc 1 125 9 discriminator 1 view .LVU726
 125:lvgl/src/draw/lv_img_decoder.c ****         if(dsc->src == NULL) {
 2128              		.loc 1 125 9 discriminator 1 view .LVU727
 2129 005c FEE7     		b	.L134
 2130              	.LVL267:
 2131              	.L137:
 125:lvgl/src/draw/lv_img_decoder.c ****         if(dsc->src == NULL) {
 2132              		.loc 1 125 9 is_stmt 0 discriminator 1 view .LVU728
 2133              	.LBE34:
 139:lvgl/src/draw/lv_img_decoder.c ****         /*Info and Open callbacks are required*/
 2134              		.loc 1 139 5 is_stmt 1 discriminator 2 view .LVU729
 2135 005e 2146     		mov	r1, r4
 2136 0060 1848     		ldr	r0, .L144
 2137 0062 FFF7FEFF 		bl	_lv_ll_get_next
 2138              	.LVL268:
 2139 0066 0446     		mov	r4, r0
 2140              	.LVL269:
 2141              	.L136:
 139:lvgl/src/draw/lv_img_decoder.c ****         /*Info and Open callbacks are required*/
 2142              		.loc 1 139 5 discriminator 1 view .LVU730
 2143 0068 04B3     		cbz	r4, .L142
 141:lvgl/src/draw/lv_img_decoder.c **** 
 2144              		.loc 1 141 9 view .LVU731
 141:lvgl/src/draw/lv_img_decoder.c **** 
 2145              		.loc 1 141 19 is_stmt 0 view .LVU732
 2146 006a 2368     		ldr	r3, [r4]
 141:lvgl/src/draw/lv_img_decoder.c **** 
 2147              		.loc 1 141 11 view .LVU733
 2148 006c 002B     		cmp	r3, #0
 2149 006e F6D0     		beq	.L137
 141:lvgl/src/draw/lv_img_decoder.c **** 
 2150              		.loc 1 141 47 discriminator 2 view .LVU734
 2151 0070 6268     		ldr	r2, [r4, #4]
 141:lvgl/src/draw/lv_img_decoder.c **** 
 2152              		.loc 1 141 37 discriminator 2 view .LVU735
 2153 0072 002A     		cmp	r2, #0
 2154 0074 F3D0     		beq	.L137
 143:lvgl/src/draw/lv_img_decoder.c ****         if(res != LV_RES_OK) continue;
 2155              		.loc 1 143 9 is_stmt 1 view .LVU736
 143:lvgl/src/draw/lv_img_decoder.c ****         if(res != LV_RES_OK) continue;
 2156              		.loc 1 143 15 is_stmt 0 view .LVU737
 2157 0076 06F11407 		add	r7, r6, #20
 2158              	.LVL270:
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 73


 143:lvgl/src/draw/lv_img_decoder.c ****         if(res != LV_RES_OK) continue;
 2159              		.loc 1 143 15 view .LVU738
 2160 007a 3A46     		mov	r2, r7
 2161 007c 4146     		mov	r1, r8
 2162 007e 2046     		mov	r0, r4
 143:lvgl/src/draw/lv_img_decoder.c ****         if(res != LV_RES_OK) continue;
 2163              		.loc 1 143 15 view .LVU739
 2164 0080 9847     		blx	r3
 2165              	.LVL271:
 143:lvgl/src/draw/lv_img_decoder.c ****         if(res != LV_RES_OK) continue;
 2166              		.loc 1 143 15 view .LVU740
 2167 0082 0546     		mov	r5, r0
 2168              	.LVL272:
 144:lvgl/src/draw/lv_img_decoder.c **** 
 2169              		.loc 1 144 9 is_stmt 1 view .LVU741
 144:lvgl/src/draw/lv_img_decoder.c **** 
 2170              		.loc 1 144 11 is_stmt 0 view .LVU742
 2171 0084 0128     		cmp	r0, #1
 2172 0086 EAD1     		bne	.L137
 146:lvgl/src/draw/lv_img_decoder.c ****         res = decoder->open_cb(decoder, dsc);
 2173              		.loc 1 146 9 is_stmt 1 view .LVU743
 146:lvgl/src/draw/lv_img_decoder.c ****         res = decoder->open_cb(decoder, dsc);
 2174              		.loc 1 146 22 is_stmt 0 view .LVU744
 2175 0088 3460     		str	r4, [r6]
 147:lvgl/src/draw/lv_img_decoder.c **** 
 2176              		.loc 1 147 9 is_stmt 1 view .LVU745
 147:lvgl/src/draw/lv_img_decoder.c **** 
 2177              		.loc 1 147 22 is_stmt 0 view .LVU746
 2178 008a 6368     		ldr	r3, [r4, #4]
 147:lvgl/src/draw/lv_img_decoder.c **** 
 2179              		.loc 1 147 15 view .LVU747
 2180 008c 3146     		mov	r1, r6
 2181 008e 2046     		mov	r0, r4
 2182              	.LVL273:
 147:lvgl/src/draw/lv_img_decoder.c **** 
 2183              		.loc 1 147 15 view .LVU748
 2184 0090 9847     		blx	r3
 2185              	.LVL274:
 2186 0092 0546     		mov	r5, r0
 2187              	.LVL275:
 150:lvgl/src/draw/lv_img_decoder.c **** 
 2188              		.loc 1 150 9 is_stmt 1 view .LVU749
 150:lvgl/src/draw/lv_img_decoder.c **** 
 2189              		.loc 1 150 11 is_stmt 0 view .LVU750
 2190 0094 0128     		cmp	r0, #1
 2191 0096 0CD0     		beq	.L130
 153:lvgl/src/draw/lv_img_decoder.c **** 
 2192              		.loc 1 153 9 is_stmt 1 view .LVU751
 2193 0098 0421     		movs	r1, #4
 2194 009a 3846     		mov	r0, r7
 2195              	.LVL276:
 153:lvgl/src/draw/lv_img_decoder.c **** 
 2196              		.loc 1 153 9 is_stmt 0 view .LVU752
 2197 009c FFF7FEFF 		bl	lv_memset_00
 2198              	.LVL277:
 155:lvgl/src/draw/lv_img_decoder.c ****         dsc->img_data  = NULL;
 2199              		.loc 1 155 9 is_stmt 1 view .LVU753
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 74


 155:lvgl/src/draw/lv_img_decoder.c ****         dsc->img_data  = NULL;
 2200              		.loc 1 155 24 is_stmt 0 view .LVU754
 2201 00a0 0023     		movs	r3, #0
 2202 00a2 3362     		str	r3, [r6, #32]
 156:lvgl/src/draw/lv_img_decoder.c ****         dsc->user_data = NULL;
 2203              		.loc 1 156 9 is_stmt 1 view .LVU755
 156:lvgl/src/draw/lv_img_decoder.c ****         dsc->user_data = NULL;
 2204              		.loc 1 156 24 is_stmt 0 view .LVU756
 2205 00a4 B361     		str	r3, [r6, #24]
 157:lvgl/src/draw/lv_img_decoder.c ****         dsc->time_to_open = 0;
 2206              		.loc 1 157 9 is_stmt 1 view .LVU757
 157:lvgl/src/draw/lv_img_decoder.c ****         dsc->time_to_open = 0;
 2207              		.loc 1 157 24 is_stmt 0 view .LVU758
 2208 00a6 7362     		str	r3, [r6, #36]
 158:lvgl/src/draw/lv_img_decoder.c ****     }
 2209              		.loc 1 158 9 is_stmt 1 view .LVU759
 158:lvgl/src/draw/lv_img_decoder.c ****     }
 2210              		.loc 1 158 27 is_stmt 0 view .LVU760
 2211 00a8 F361     		str	r3, [r6, #28]
 2212 00aa D8E7     		b	.L137
 2213              	.LVL278:
 2214              	.L142:
 161:lvgl/src/draw/lv_img_decoder.c ****         lv_mem_free((void *)dsc->src);
 2215              		.loc 1 161 5 is_stmt 1 view .LVU761
 161:lvgl/src/draw/lv_img_decoder.c ****         lv_mem_free((void *)dsc->src);
 2216              		.loc 1 161 11 is_stmt 0 view .LVU762
 2217 00ac 337C     		ldrb	r3, [r6, #16]	@ zero_extendqisi2
 161:lvgl/src/draw/lv_img_decoder.c ****         lv_mem_free((void *)dsc->src);
 2218              		.loc 1 161 7 view .LVU763
 2219 00ae 012B     		cmp	r3, #1
 2220 00b0 02D0     		beq	.L143
 2221              	.LVL279:
 2222              	.L130:
 165:lvgl/src/draw/lv_img_decoder.c **** 
 2223              		.loc 1 165 1 view .LVU764
 2224 00b2 2846     		mov	r0, r5
 2225 00b4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2226              	.LVL280:
 2227              	.L143:
 162:lvgl/src/draw/lv_img_decoder.c **** 
 2228              		.loc 1 162 9 is_stmt 1 view .LVU765
 2229 00b8 7068     		ldr	r0, [r6, #4]
 2230              	.LVL281:
 162:lvgl/src/draw/lv_img_decoder.c **** 
 2231              		.loc 1 162 9 is_stmt 0 view .LVU766
 2232 00ba FFF7FEFF 		bl	lv_mem_free
 2233              	.LVL282:
 2234 00be F8E7     		b	.L130
 2235              	.LVL283:
 2236              	.L139:
 111:lvgl/src/draw/lv_img_decoder.c ****     lv_img_src_t src_type = lv_img_src_get_type(src);
 2237              		.loc 1 111 28 discriminator 1 view .LVU767
 2238 00c0 0025     		movs	r5, #0
 2239 00c2 F6E7     		b	.L130
 2240              	.L145:
 2241              		.align	2
 2242              	.L144:
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 75


 2243 00c4 00000000 		.word	_lv_img_decoder_ll
 2244              		.cfi_endproc
 2245              	.LFE58:
 2247              		.section	.text.lv_img_decoder_read_line,"ax",%progbits
 2248              		.align	1
 2249              		.global	lv_img_decoder_read_line
 2250              		.syntax unified
 2251              		.thumb
 2252              		.thumb_func
 2254              	lv_img_decoder_read_line:
 2255              	.LVL284:
 2256              	.LFB59:
 177:lvgl/src/draw/lv_img_decoder.c ****     lv_res_t res = LV_RES_INV;
 2257              		.loc 1 177 1 is_stmt 1 view -0
 2258              		.cfi_startproc
 2259              		@ args = 4, pretend = 0, frame = 0
 2260              		@ frame_needed = 0, uses_anonymous_args = 0
 177:lvgl/src/draw/lv_img_decoder.c ****     lv_res_t res = LV_RES_INV;
 2261              		.loc 1 177 1 is_stmt 0 view .LVU769
 2262 0000 30B5     		push	{r4, r5, lr}
 2263              	.LCFI27:
 2264              		.cfi_def_cfa_offset 12
 2265              		.cfi_offset 4, -12
 2266              		.cfi_offset 5, -8
 2267              		.cfi_offset 14, -4
 2268 0002 83B0     		sub	sp, sp, #12
 2269              	.LCFI28:
 2270              		.cfi_def_cfa_offset 24
 2271 0004 8446     		mov	ip, r0
 178:lvgl/src/draw/lv_img_decoder.c ****     if(dsc->decoder->read_line_cb) res = dsc->decoder->read_line_cb(dsc->decoder, dsc, x, y, len, b
 2272              		.loc 1 178 5 is_stmt 1 view .LVU770
 2273              	.LVL285:
 179:lvgl/src/draw/lv_img_decoder.c **** 
 2274              		.loc 1 179 5 view .LVU771
 179:lvgl/src/draw/lv_img_decoder.c **** 
 2275              		.loc 1 179 11 is_stmt 0 view .LVU772
 2276 0006 0068     		ldr	r0, [r0]
 2277              	.LVL286:
 179:lvgl/src/draw/lv_img_decoder.c **** 
 2278              		.loc 1 179 20 view .LVU773
 2279 0008 8468     		ldr	r4, [r0, #8]
 179:lvgl/src/draw/lv_img_decoder.c **** 
 2280              		.loc 1 179 7 view .LVU774
 2281 000a 44B1     		cbz	r4, .L148
 179:lvgl/src/draw/lv_img_decoder.c **** 
 2282              		.loc 1 179 36 is_stmt 1 discriminator 1 view .LVU775
 179:lvgl/src/draw/lv_img_decoder.c **** 
 2283              		.loc 1 179 42 is_stmt 0 discriminator 1 view .LVU776
 2284 000c 069D     		ldr	r5, [sp, #24]
 2285 000e 0195     		str	r5, [sp, #4]
 2286 0010 0093     		str	r3, [sp]
 2287 0012 1346     		mov	r3, r2
 2288              	.LVL287:
 179:lvgl/src/draw/lv_img_decoder.c **** 
 2289              		.loc 1 179 42 discriminator 1 view .LVU777
 2290 0014 0A46     		mov	r2, r1
 2291              	.LVL288:
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 76


 179:lvgl/src/draw/lv_img_decoder.c **** 
 2292              		.loc 1 179 42 discriminator 1 view .LVU778
 2293 0016 6146     		mov	r1, ip
 2294              	.LVL289:
 179:lvgl/src/draw/lv_img_decoder.c **** 
 2295              		.loc 1 179 42 discriminator 1 view .LVU779
 2296 0018 A047     		blx	r4
 2297              	.LVL290:
 2298              	.L147:
 181:lvgl/src/draw/lv_img_decoder.c **** }
 2299              		.loc 1 181 5 is_stmt 1 view .LVU780
 182:lvgl/src/draw/lv_img_decoder.c **** 
 2300              		.loc 1 182 1 is_stmt 0 view .LVU781
 2301 001a 03B0     		add	sp, sp, #12
 2302              	.LCFI29:
 2303              		.cfi_remember_state
 2304              		.cfi_def_cfa_offset 12
 2305              		@ sp needed
 2306 001c 30BD     		pop	{r4, r5, pc}
 2307              	.LVL291:
 2308              	.L148:
 2309              	.LCFI30:
 2310              		.cfi_restore_state
 178:lvgl/src/draw/lv_img_decoder.c ****     if(dsc->decoder->read_line_cb) res = dsc->decoder->read_line_cb(dsc->decoder, dsc, x, y, len, b
 2311              		.loc 1 178 14 view .LVU782
 2312 001e 0020     		movs	r0, #0
 2313 0020 FBE7     		b	.L147
 2314              		.cfi_endproc
 2315              	.LFE59:
 2317              		.section	.text.lv_img_decoder_close,"ax",%progbits
 2318              		.align	1
 2319              		.global	lv_img_decoder_close
 2320              		.syntax unified
 2321              		.thumb
 2322              		.thumb_func
 2324              	lv_img_decoder_close:
 2325              	.LVL292:
 2326              	.LFB60:
 189:lvgl/src/draw/lv_img_decoder.c ****     if(dsc->decoder) {
 2327              		.loc 1 189 1 is_stmt 1 view -0
 2328              		.cfi_startproc
 2329              		@ args = 0, pretend = 0, frame = 0
 2330              		@ frame_needed = 0, uses_anonymous_args = 0
 189:lvgl/src/draw/lv_img_decoder.c ****     if(dsc->decoder) {
 2331              		.loc 1 189 1 is_stmt 0 view .LVU784
 2332 0000 10B5     		push	{r4, lr}
 2333              	.LCFI31:
 2334              		.cfi_def_cfa_offset 8
 2335              		.cfi_offset 4, -8
 2336              		.cfi_offset 14, -4
 2337 0002 0446     		mov	r4, r0
 190:lvgl/src/draw/lv_img_decoder.c ****         if(dsc->decoder->close_cb) dsc->decoder->close_cb(dsc->decoder, dsc);
 2338              		.loc 1 190 5 is_stmt 1 view .LVU785
 190:lvgl/src/draw/lv_img_decoder.c ****         if(dsc->decoder->close_cb) dsc->decoder->close_cb(dsc->decoder, dsc);
 2339              		.loc 1 190 11 is_stmt 0 view .LVU786
 2340 0004 0068     		ldr	r0, [r0]
 2341              	.LVL293:
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 77


 190:lvgl/src/draw/lv_img_decoder.c ****         if(dsc->decoder->close_cb) dsc->decoder->close_cb(dsc->decoder, dsc);
 2342              		.loc 1 190 7 view .LVU787
 2343 0006 30B1     		cbz	r0, .L150
 191:lvgl/src/draw/lv_img_decoder.c **** 
 2344              		.loc 1 191 9 is_stmt 1 view .LVU788
 191:lvgl/src/draw/lv_img_decoder.c **** 
 2345              		.loc 1 191 24 is_stmt 0 view .LVU789
 2346 0008 C368     		ldr	r3, [r0, #12]
 191:lvgl/src/draw/lv_img_decoder.c **** 
 2347              		.loc 1 191 11 view .LVU790
 2348 000a 0BB1     		cbz	r3, .L152
 191:lvgl/src/draw/lv_img_decoder.c **** 
 2349              		.loc 1 191 36 is_stmt 1 discriminator 1 view .LVU791
 2350 000c 2146     		mov	r1, r4
 2351 000e 9847     		blx	r3
 2352              	.LVL294:
 2353              	.L152:
 193:lvgl/src/draw/lv_img_decoder.c ****             lv_mem_free((void *)dsc->src);
 2354              		.loc 1 193 9 view .LVU792
 193:lvgl/src/draw/lv_img_decoder.c ****             lv_mem_free((void *)dsc->src);
 2355              		.loc 1 193 15 is_stmt 0 view .LVU793
 2356 0010 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 193:lvgl/src/draw/lv_img_decoder.c ****             lv_mem_free((void *)dsc->src);
 2357              		.loc 1 193 11 view .LVU794
 2358 0012 012B     		cmp	r3, #1
 2359 0014 00D0     		beq	.L154
 2360              	.L150:
 198:lvgl/src/draw/lv_img_decoder.c **** 
 2361              		.loc 1 198 1 view .LVU795
 2362 0016 10BD     		pop	{r4, pc}
 2363              	.LVL295:
 2364              	.L154:
 194:lvgl/src/draw/lv_img_decoder.c ****             dsc->src = NULL;
 2365              		.loc 1 194 13 is_stmt 1 view .LVU796
 2366 0018 6068     		ldr	r0, [r4, #4]
 2367 001a FFF7FEFF 		bl	lv_mem_free
 2368              	.LVL296:
 195:lvgl/src/draw/lv_img_decoder.c ****         }
 2369              		.loc 1 195 13 view .LVU797
 195:lvgl/src/draw/lv_img_decoder.c ****         }
 2370              		.loc 1 195 22 is_stmt 0 view .LVU798
 2371 001e 0023     		movs	r3, #0
 2372 0020 6360     		str	r3, [r4, #4]
 198:lvgl/src/draw/lv_img_decoder.c **** 
 2373              		.loc 1 198 1 view .LVU799
 2374 0022 F8E7     		b	.L150
 2375              		.cfi_endproc
 2376              	.LFE60:
 2378              		.section	.text.lv_img_decoder_create,"ax",%progbits
 2379              		.align	1
 2380              		.global	lv_img_decoder_create
 2381              		.syntax unified
 2382              		.thumb
 2383              		.thumb_func
 2385              	lv_img_decoder_create:
 2386              	.LFB61:
 205:lvgl/src/draw/lv_img_decoder.c ****     lv_img_decoder_t * decoder;
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 78


 2387              		.loc 1 205 1 is_stmt 1 view -0
 2388              		.cfi_startproc
 2389              		@ args = 0, pretend = 0, frame = 0
 2390              		@ frame_needed = 0, uses_anonymous_args = 0
 2391 0000 10B5     		push	{r4, lr}
 2392              	.LCFI32:
 2393              		.cfi_def_cfa_offset 8
 2394              		.cfi_offset 4, -8
 2395              		.cfi_offset 14, -4
 206:lvgl/src/draw/lv_img_decoder.c ****     decoder = _lv_ll_ins_head(&LV_GC_ROOT(_lv_img_decoder_ll));
 2396              		.loc 1 206 5 view .LVU801
 207:lvgl/src/draw/lv_img_decoder.c ****     LV_ASSERT_MALLOC(decoder);
 2397              		.loc 1 207 5 view .LVU802
 207:lvgl/src/draw/lv_img_decoder.c ****     LV_ASSERT_MALLOC(decoder);
 2398              		.loc 1 207 15 is_stmt 0 view .LVU803
 2399 0002 0548     		ldr	r0, .L159
 2400 0004 FFF7FEFF 		bl	_lv_ll_ins_head
 2401              	.LVL297:
 208:lvgl/src/draw/lv_img_decoder.c ****     if(decoder == NULL) return NULL;
 2402              		.loc 1 208 5 is_stmt 1 view .LVU804
 208:lvgl/src/draw/lv_img_decoder.c ****     if(decoder == NULL) return NULL;
 2403              		.loc 1 208 5 view .LVU805
 2404 0008 28B1     		cbz	r0, .L157
 2405 000a 0446     		mov	r4, r0
 208:lvgl/src/draw/lv_img_decoder.c ****     if(decoder == NULL) return NULL;
 2406              		.loc 1 208 5 discriminator 2 view .LVU806
 208:lvgl/src/draw/lv_img_decoder.c ****     if(decoder == NULL) return NULL;
 2407              		.loc 1 208 30 discriminator 2 view .LVU807
 209:lvgl/src/draw/lv_img_decoder.c **** 
 2408              		.loc 1 209 5 view .LVU808
 211:lvgl/src/draw/lv_img_decoder.c **** 
 2409              		.loc 1 211 5 view .LVU809
 2410 000c 1421     		movs	r1, #20
 2411 000e FFF7FEFF 		bl	lv_memset_00
 2412              	.LVL298:
 213:lvgl/src/draw/lv_img_decoder.c **** }
 2413              		.loc 1 213 5 view .LVU810
 214:lvgl/src/draw/lv_img_decoder.c **** 
 2414              		.loc 1 214 1 is_stmt 0 view .LVU811
 2415 0012 2046     		mov	r0, r4
 2416 0014 10BD     		pop	{r4, pc}
 2417              	.LVL299:
 2418              	.L157:
 208:lvgl/src/draw/lv_img_decoder.c ****     if(decoder == NULL) return NULL;
 2419              		.loc 1 208 5 is_stmt 1 discriminator 1 view .LVU812
 208:lvgl/src/draw/lv_img_decoder.c ****     if(decoder == NULL) return NULL;
 2420              		.loc 1 208 5 discriminator 1 view .LVU813
 208:lvgl/src/draw/lv_img_decoder.c ****     if(decoder == NULL) return NULL;
 2421              		.loc 1 208 5 discriminator 1 view .LVU814
 208:lvgl/src/draw/lv_img_decoder.c ****     if(decoder == NULL) return NULL;
 2422              		.loc 1 208 5 discriminator 1 view .LVU815
 208:lvgl/src/draw/lv_img_decoder.c ****     if(decoder == NULL) return NULL;
 2423              		.loc 1 208 5 discriminator 1 view .LVU816
 2424 0016 FEE7     		b	.L157
 2425              	.L160:
 2426              		.align	2
 2427              	.L159:
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 79


 2428 0018 00000000 		.word	_lv_img_decoder_ll
 2429              		.cfi_endproc
 2430              	.LFE61:
 2432              		.section	.text.lv_img_decoder_delete,"ax",%progbits
 2433              		.align	1
 2434              		.global	lv_img_decoder_delete
 2435              		.syntax unified
 2436              		.thumb
 2437              		.thumb_func
 2439              	lv_img_decoder_delete:
 2440              	.LVL300:
 2441              	.LFB62:
 221:lvgl/src/draw/lv_img_decoder.c ****     _lv_ll_remove(&LV_GC_ROOT(_lv_img_decoder_ll), decoder);
 2442              		.loc 1 221 1 view -0
 2443              		.cfi_startproc
 2444              		@ args = 0, pretend = 0, frame = 0
 2445              		@ frame_needed = 0, uses_anonymous_args = 0
 221:lvgl/src/draw/lv_img_decoder.c ****     _lv_ll_remove(&LV_GC_ROOT(_lv_img_decoder_ll), decoder);
 2446              		.loc 1 221 1 is_stmt 0 view .LVU818
 2447 0000 10B5     		push	{r4, lr}
 2448              	.LCFI33:
 2449              		.cfi_def_cfa_offset 8
 2450              		.cfi_offset 4, -8
 2451              		.cfi_offset 14, -4
 2452 0002 0446     		mov	r4, r0
 222:lvgl/src/draw/lv_img_decoder.c ****     lv_mem_free(decoder);
 2453              		.loc 1 222 5 is_stmt 1 view .LVU819
 2454 0004 0146     		mov	r1, r0
 2455 0006 0348     		ldr	r0, .L163
 2456              	.LVL301:
 222:lvgl/src/draw/lv_img_decoder.c ****     lv_mem_free(decoder);
 2457              		.loc 1 222 5 is_stmt 0 view .LVU820
 2458 0008 FFF7FEFF 		bl	_lv_ll_remove
 2459              	.LVL302:
 223:lvgl/src/draw/lv_img_decoder.c **** }
 2460              		.loc 1 223 5 is_stmt 1 view .LVU821
 2461 000c 2046     		mov	r0, r4
 2462 000e FFF7FEFF 		bl	lv_mem_free
 2463              	.LVL303:
 224:lvgl/src/draw/lv_img_decoder.c **** 
 2464              		.loc 1 224 1 is_stmt 0 view .LVU822
 2465 0012 10BD     		pop	{r4, pc}
 2466              	.LVL304:
 2467              	.L164:
 224:lvgl/src/draw/lv_img_decoder.c **** 
 2468              		.loc 1 224 1 view .LVU823
 2469              		.align	2
 2470              	.L163:
 2471 0014 00000000 		.word	_lv_img_decoder_ll
 2472              		.cfi_endproc
 2473              	.LFE62:
 2475              		.section	.text.lv_img_decoder_set_info_cb,"ax",%progbits
 2476              		.align	1
 2477              		.global	lv_img_decoder_set_info_cb
 2478              		.syntax unified
 2479              		.thumb
 2480              		.thumb_func
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 80


 2482              	lv_img_decoder_set_info_cb:
 2483              	.LVL305:
 2484              	.LFB63:
 232:lvgl/src/draw/lv_img_decoder.c ****     decoder->info_cb = info_cb;
 2485              		.loc 1 232 1 is_stmt 1 view -0
 2486              		.cfi_startproc
 2487              		@ args = 0, pretend = 0, frame = 0
 2488              		@ frame_needed = 0, uses_anonymous_args = 0
 2489              		@ link register save eliminated.
 233:lvgl/src/draw/lv_img_decoder.c **** }
 2490              		.loc 1 233 5 view .LVU825
 233:lvgl/src/draw/lv_img_decoder.c **** }
 2491              		.loc 1 233 22 is_stmt 0 view .LVU826
 2492 0000 0160     		str	r1, [r0]
 234:lvgl/src/draw/lv_img_decoder.c **** 
 2493              		.loc 1 234 1 view .LVU827
 2494 0002 7047     		bx	lr
 2495              		.cfi_endproc
 2496              	.LFE63:
 2498              		.section	.text.lv_img_decoder_set_open_cb,"ax",%progbits
 2499              		.align	1
 2500              		.global	lv_img_decoder_set_open_cb
 2501              		.syntax unified
 2502              		.thumb
 2503              		.thumb_func
 2505              	lv_img_decoder_set_open_cb:
 2506              	.LVL306:
 2507              	.LFB64:
 242:lvgl/src/draw/lv_img_decoder.c ****     decoder->open_cb = open_cb;
 2508              		.loc 1 242 1 is_stmt 1 view -0
 2509              		.cfi_startproc
 2510              		@ args = 0, pretend = 0, frame = 0
 2511              		@ frame_needed = 0, uses_anonymous_args = 0
 2512              		@ link register save eliminated.
 243:lvgl/src/draw/lv_img_decoder.c **** }
 2513              		.loc 1 243 5 view .LVU829
 243:lvgl/src/draw/lv_img_decoder.c **** }
 2514              		.loc 1 243 22 is_stmt 0 view .LVU830
 2515 0000 4160     		str	r1, [r0, #4]
 244:lvgl/src/draw/lv_img_decoder.c **** 
 2516              		.loc 1 244 1 view .LVU831
 2517 0002 7047     		bx	lr
 2518              		.cfi_endproc
 2519              	.LFE64:
 2521              		.section	.text.lv_img_decoder_set_read_line_cb,"ax",%progbits
 2522              		.align	1
 2523              		.global	lv_img_decoder_set_read_line_cb
 2524              		.syntax unified
 2525              		.thumb
 2526              		.thumb_func
 2528              	lv_img_decoder_set_read_line_cb:
 2529              	.LVL307:
 2530              	.LFB65:
 252:lvgl/src/draw/lv_img_decoder.c ****     decoder->read_line_cb = read_line_cb;
 2531              		.loc 1 252 1 is_stmt 1 view -0
 2532              		.cfi_startproc
 2533              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 81


 2534              		@ frame_needed = 0, uses_anonymous_args = 0
 2535              		@ link register save eliminated.
 253:lvgl/src/draw/lv_img_decoder.c **** }
 2536              		.loc 1 253 5 view .LVU833
 253:lvgl/src/draw/lv_img_decoder.c **** }
 2537              		.loc 1 253 27 is_stmt 0 view .LVU834
 2538 0000 8160     		str	r1, [r0, #8]
 254:lvgl/src/draw/lv_img_decoder.c **** 
 2539              		.loc 1 254 1 view .LVU835
 2540 0002 7047     		bx	lr
 2541              		.cfi_endproc
 2542              	.LFE65:
 2544              		.section	.text.lv_img_decoder_set_close_cb,"ax",%progbits
 2545              		.align	1
 2546              		.global	lv_img_decoder_set_close_cb
 2547              		.syntax unified
 2548              		.thumb
 2549              		.thumb_func
 2551              	lv_img_decoder_set_close_cb:
 2552              	.LVL308:
 2553              	.LFB66:
 262:lvgl/src/draw/lv_img_decoder.c ****     decoder->close_cb = close_cb;
 2554              		.loc 1 262 1 is_stmt 1 view -0
 2555              		.cfi_startproc
 2556              		@ args = 0, pretend = 0, frame = 0
 2557              		@ frame_needed = 0, uses_anonymous_args = 0
 2558              		@ link register save eliminated.
 263:lvgl/src/draw/lv_img_decoder.c **** }
 2559              		.loc 1 263 5 view .LVU837
 263:lvgl/src/draw/lv_img_decoder.c **** }
 2560              		.loc 1 263 23 is_stmt 0 view .LVU838
 2561 0000 C160     		str	r1, [r0, #12]
 264:lvgl/src/draw/lv_img_decoder.c **** 
 2562              		.loc 1 264 1 view .LVU839
 2563 0002 7047     		bx	lr
 2564              		.cfi_endproc
 2565              	.LFE66:
 2567              		.section	.text._lv_img_decoder_init,"ax",%progbits
 2568              		.align	1
 2569              		.global	_lv_img_decoder_init
 2570              		.syntax unified
 2571              		.thumb
 2572              		.thumb_func
 2574              	_lv_img_decoder_init:
 2575              	.LFB56:
  57:lvgl/src/draw/lv_img_decoder.c ****     _lv_ll_init(&LV_GC_ROOT(_lv_img_decoder_ll), sizeof(lv_img_decoder_t));
 2576              		.loc 1 57 1 is_stmt 1 view -0
 2577              		.cfi_startproc
 2578              		@ args = 0, pretend = 0, frame = 0
 2579              		@ frame_needed = 0, uses_anonymous_args = 0
 2580 0000 10B5     		push	{r4, lr}
 2581              	.LCFI34:
 2582              		.cfi_def_cfa_offset 8
 2583              		.cfi_offset 4, -8
 2584              		.cfi_offset 14, -4
  58:lvgl/src/draw/lv_img_decoder.c **** 
 2585              		.loc 1 58 5 view .LVU841
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 82


 2586 0002 1421     		movs	r1, #20
 2587 0004 0B48     		ldr	r0, .L173
 2588 0006 FFF7FEFF 		bl	_lv_ll_init
 2589              	.LVL309:
  60:lvgl/src/draw/lv_img_decoder.c **** 
 2590              		.loc 1 60 5 view .LVU842
  63:lvgl/src/draw/lv_img_decoder.c ****     LV_ASSERT_MALLOC(decoder);
 2591              		.loc 1 63 5 view .LVU843
  63:lvgl/src/draw/lv_img_decoder.c ****     LV_ASSERT_MALLOC(decoder);
 2592              		.loc 1 63 15 is_stmt 0 view .LVU844
 2593 000a FFF7FEFF 		bl	lv_img_decoder_create
 2594              	.LVL310:
  64:lvgl/src/draw/lv_img_decoder.c ****     if(decoder == NULL) {
 2595              		.loc 1 64 5 is_stmt 1 view .LVU845
  64:lvgl/src/draw/lv_img_decoder.c ****     if(decoder == NULL) {
 2596              		.loc 1 64 5 view .LVU846
 2597 000e 80B1     		cbz	r0, .L171
 2598 0010 0446     		mov	r4, r0
  64:lvgl/src/draw/lv_img_decoder.c ****     if(decoder == NULL) {
 2599              		.loc 1 64 5 discriminator 2 view .LVU847
  64:lvgl/src/draw/lv_img_decoder.c ****     if(decoder == NULL) {
 2600              		.loc 1 64 30 discriminator 2 view .LVU848
  65:lvgl/src/draw/lv_img_decoder.c ****         LV_LOG_WARN("lv_img_decoder_init: out of memory");
 2601              		.loc 1 65 5 view .LVU849
  70:lvgl/src/draw/lv_img_decoder.c ****     lv_img_decoder_set_open_cb(decoder, lv_img_decoder_built_in_open);
 2602              		.loc 1 70 5 view .LVU850
 2603 0012 0949     		ldr	r1, .L173+4
 2604 0014 FFF7FEFF 		bl	lv_img_decoder_set_info_cb
 2605              	.LVL311:
  71:lvgl/src/draw/lv_img_decoder.c ****     lv_img_decoder_set_read_line_cb(decoder, lv_img_decoder_built_in_read_line);
 2606              		.loc 1 71 5 view .LVU851
 2607 0018 0849     		ldr	r1, .L173+8
 2608 001a 2046     		mov	r0, r4
 2609 001c FFF7FEFF 		bl	lv_img_decoder_set_open_cb
 2610              	.LVL312:
  72:lvgl/src/draw/lv_img_decoder.c ****     lv_img_decoder_set_close_cb(decoder, lv_img_decoder_built_in_close);
 2611              		.loc 1 72 5 view .LVU852
 2612 0020 0749     		ldr	r1, .L173+12
 2613 0022 2046     		mov	r0, r4
 2614 0024 FFF7FEFF 		bl	lv_img_decoder_set_read_line_cb
 2615              	.LVL313:
  73:lvgl/src/draw/lv_img_decoder.c **** }
 2616              		.loc 1 73 5 view .LVU853
 2617 0028 0649     		ldr	r1, .L173+16
 2618 002a 2046     		mov	r0, r4
 2619 002c FFF7FEFF 		bl	lv_img_decoder_set_close_cb
 2620              	.LVL314:
  74:lvgl/src/draw/lv_img_decoder.c **** 
 2621              		.loc 1 74 1 is_stmt 0 view .LVU854
 2622 0030 10BD     		pop	{r4, pc}
 2623              	.LVL315:
 2624              	.L171:
  64:lvgl/src/draw/lv_img_decoder.c ****     if(decoder == NULL) {
 2625              		.loc 1 64 5 is_stmt 1 discriminator 1 view .LVU855
  64:lvgl/src/draw/lv_img_decoder.c ****     if(decoder == NULL) {
 2626              		.loc 1 64 5 discriminator 1 view .LVU856
  64:lvgl/src/draw/lv_img_decoder.c ****     if(decoder == NULL) {
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 83


 2627              		.loc 1 64 5 discriminator 1 view .LVU857
  64:lvgl/src/draw/lv_img_decoder.c ****     if(decoder == NULL) {
 2628              		.loc 1 64 5 discriminator 1 view .LVU858
  64:lvgl/src/draw/lv_img_decoder.c ****     if(decoder == NULL) {
 2629              		.loc 1 64 5 discriminator 1 view .LVU859
 2630 0032 FEE7     		b	.L171
 2631              	.L174:
 2632              		.align	2
 2633              	.L173:
 2634 0034 00000000 		.word	_lv_img_decoder_ll
 2635 0038 00000000 		.word	lv_img_decoder_built_in_info
 2636 003c 00000000 		.word	lv_img_decoder_built_in_open
 2637 0040 00000000 		.word	lv_img_decoder_built_in_read_line
 2638 0044 00000000 		.word	lv_img_decoder_built_in_close
 2639              		.cfi_endproc
 2640              	.LFE56:
 2642              		.section	.rodata
 2643              		.align	2
 2644              		.set	.LANCHOR0,. + 0
 2645              	.LC1:
 2646 0000 00112233 		.ascii	"\000\021\"3DUfw\210\231\252\273\314\335\356\377"
 2646      44556677 
 2646      8899AABB 
 2646      CCDDEEFF 
 2647              		.text
 2648              	.Letext0:
 2649              		.file 4 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 2650              		.file 5 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 2651              		.file 6 "lvgl/src/draw/../misc/lv_types.h"
 2652              		.file 7 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/lib/gcc/arm-none
 2653              		.file 8 "lvgl/src/draw/../misc/lv_area.h"
 2654              		.file 9 "lvgl/src/draw/lv_img_buf.h"
 2655              		.file 10 "lvgl/src/draw/../misc/lv_fs.h"
 2656              		.file 11 "lvgl/src/draw/lv_img_decoder.h"
 2657              		.file 12 "lvgl/src/draw/../misc/lv_ll.h"
 2658              		.file 13 "lvgl/src/draw/../draw/lv_draw_img.h"
 2659              		.file 14 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/i
 2660              		.file 15 "lvgl/src/draw/../misc/lv_gc.h"
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 84


DEFINED SYMBOLS
                            *ABS*:00000000 lv_img_decoder.c
C:\usertemp\ccP9fi6x.s:20     .rodata.lv_img_decoder_built_in_info.str1.4:00000000 $d
C:\usertemp\ccP9fi6x.s:24     .text.lv_img_decoder_built_in_info:00000000 $t
C:\usertemp\ccP9fi6x.s:30     .text.lv_img_decoder_built_in_info:00000000 lv_img_decoder_built_in_info
C:\usertemp\ccP9fi6x.s:231    .text.lv_img_decoder_built_in_info:000000cc $d
C:\usertemp\ccP9fi6x.s:236    .text.lv_img_decoder_built_in_close:00000000 $t
C:\usertemp\ccP9fi6x.s:242    .text.lv_img_decoder_built_in_close:00000000 lv_img_decoder_built_in_close
C:\usertemp\ccP9fi6x.s:318    .text.lv_img_decoder_built_in_open:00000000 $t
C:\usertemp\ccP9fi6x.s:324    .text.lv_img_decoder_built_in_open:00000000 lv_img_decoder_built_in_open
C:\usertemp\ccP9fi6x.s:821    .text.lv_img_decoder_built_in_open:000001a8 $d
C:\usertemp\ccP9fi6x.s:826    .text.lv_img_decoder_built_in_line_true_color:00000000 $t
C:\usertemp\ccP9fi6x.s:831    .text.lv_img_decoder_built_in_line_true_color:00000000 lv_img_decoder_built_in_line_true_color
C:\usertemp\ccP9fi6x.s:954    .text.lv_img_decoder_built_in_line_alpha:00000000 $t
C:\usertemp\ccP9fi6x.s:959    .text.lv_img_decoder_built_in_line_alpha:00000000 lv_img_decoder_built_in_line_alpha
C:\usertemp\ccP9fi6x.s:1077   .text.lv_img_decoder_built_in_line_alpha:0000007a $d
C:\usertemp\ccP9fi6x.s:1081   .text.lv_img_decoder_built_in_line_alpha:0000007e $t
C:\usertemp\ccP9fi6x.s:1372   .text.lv_img_decoder_built_in_line_alpha:00000188 $d
C:\usertemp\ccP9fi6x.s:1377   .text.lv_img_decoder_built_in_line_indexed:00000000 $t
C:\usertemp\ccP9fi6x.s:1382   .text.lv_img_decoder_built_in_line_indexed:00000000 lv_img_decoder_built_in_line_indexed
C:\usertemp\ccP9fi6x.s:1444   .text.lv_img_decoder_built_in_line_indexed:00000038 $d
C:\usertemp\ccP9fi6x.s:1448   .text.lv_img_decoder_built_in_line_indexed:0000003c $t
C:\usertemp\ccP9fi6x.s:1752   .text.lv_img_decoder_built_in_read_line:00000000 $t
C:\usertemp\ccP9fi6x.s:1758   .text.lv_img_decoder_built_in_read_line:00000000 lv_img_decoder_built_in_read_line
C:\usertemp\ccP9fi6x.s:1874   .text.lv_img_decoder_get_info:00000000 $t
C:\usertemp\ccP9fi6x.s:1880   .text.lv_img_decoder_get_info:00000000 lv_img_decoder_get_info
C:\usertemp\ccP9fi6x.s:1994   .text.lv_img_decoder_get_info:00000054 $d
C:\usertemp\ccP9fi6x.s:1999   .text.lv_img_decoder_open:00000000 $t
C:\usertemp\ccP9fi6x.s:2005   .text.lv_img_decoder_open:00000000 lv_img_decoder_open
C:\usertemp\ccP9fi6x.s:2243   .text.lv_img_decoder_open:000000c4 $d
C:\usertemp\ccP9fi6x.s:2248   .text.lv_img_decoder_read_line:00000000 $t
C:\usertemp\ccP9fi6x.s:2254   .text.lv_img_decoder_read_line:00000000 lv_img_decoder_read_line
C:\usertemp\ccP9fi6x.s:2318   .text.lv_img_decoder_close:00000000 $t
C:\usertemp\ccP9fi6x.s:2324   .text.lv_img_decoder_close:00000000 lv_img_decoder_close
C:\usertemp\ccP9fi6x.s:2379   .text.lv_img_decoder_create:00000000 $t
C:\usertemp\ccP9fi6x.s:2385   .text.lv_img_decoder_create:00000000 lv_img_decoder_create
C:\usertemp\ccP9fi6x.s:2428   .text.lv_img_decoder_create:00000018 $d
C:\usertemp\ccP9fi6x.s:2433   .text.lv_img_decoder_delete:00000000 $t
C:\usertemp\ccP9fi6x.s:2439   .text.lv_img_decoder_delete:00000000 lv_img_decoder_delete
C:\usertemp\ccP9fi6x.s:2471   .text.lv_img_decoder_delete:00000014 $d
C:\usertemp\ccP9fi6x.s:2476   .text.lv_img_decoder_set_info_cb:00000000 $t
C:\usertemp\ccP9fi6x.s:2482   .text.lv_img_decoder_set_info_cb:00000000 lv_img_decoder_set_info_cb
C:\usertemp\ccP9fi6x.s:2499   .text.lv_img_decoder_set_open_cb:00000000 $t
C:\usertemp\ccP9fi6x.s:2505   .text.lv_img_decoder_set_open_cb:00000000 lv_img_decoder_set_open_cb
C:\usertemp\ccP9fi6x.s:2522   .text.lv_img_decoder_set_read_line_cb:00000000 $t
C:\usertemp\ccP9fi6x.s:2528   .text.lv_img_decoder_set_read_line_cb:00000000 lv_img_decoder_set_read_line_cb
C:\usertemp\ccP9fi6x.s:2545   .text.lv_img_decoder_set_close_cb:00000000 $t
C:\usertemp\ccP9fi6x.s:2551   .text.lv_img_decoder_set_close_cb:00000000 lv_img_decoder_set_close_cb
C:\usertemp\ccP9fi6x.s:2568   .text._lv_img_decoder_init:00000000 $t
C:\usertemp\ccP9fi6x.s:2574   .text._lv_img_decoder_init:00000000 _lv_img_decoder_init
C:\usertemp\ccP9fi6x.s:2634   .text._lv_img_decoder_init:00000034 $d
C:\usertemp\ccP9fi6x.s:2643   .rodata:00000000 $d

UNDEFINED SYMBOLS
lv_img_src_get_type
lv_fs_get_ext
strcmp
ARM GAS  C:\usertemp\ccP9fi6x.s 			page 85


lv_fs_open
lv_fs_read
lv_fs_close
lv_mem_free
lv_mem_alloc
lv_memset_00
lv_img_cf_get_px_size
lv_fs_seek
lv_mem_buf_get
lv_mem_buf_release
_lv_ll_get_head
_lv_ll_get_next
_lv_img_decoder_ll
strlen
strcpy
_lv_ll_ins_head
_lv_ll_remove
_lv_ll_init
