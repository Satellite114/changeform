ARM GAS  C:\usertemp\ccIlwJXO.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_obj.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "lvgl/src/core/lv_obj.c"
  19              		.section	.text.lv_style_get_prop_inlined,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	lv_style_get_prop_inlined:
  26              	.LVL0:
  27              	.LFB49:
  28              		.file 2 "lvgl/src/core/../misc/lv_style.h"
   1:lvgl/src/core/../misc/lv_style.h **** /**
   2:lvgl/src/core/../misc/lv_style.h ****  * @file lv_style.h
   3:lvgl/src/core/../misc/lv_style.h ****  *
   4:lvgl/src/core/../misc/lv_style.h ****  */
   5:lvgl/src/core/../misc/lv_style.h **** 
   6:lvgl/src/core/../misc/lv_style.h **** #ifndef LV_STYLE_H
   7:lvgl/src/core/../misc/lv_style.h **** #define LV_STYLE_H
   8:lvgl/src/core/../misc/lv_style.h **** 
   9:lvgl/src/core/../misc/lv_style.h **** #ifdef __cplusplus
  10:lvgl/src/core/../misc/lv_style.h **** extern "C" {
  11:lvgl/src/core/../misc/lv_style.h **** #endif
  12:lvgl/src/core/../misc/lv_style.h **** 
  13:lvgl/src/core/../misc/lv_style.h **** /*********************
  14:lvgl/src/core/../misc/lv_style.h ****  *      INCLUDES
  15:lvgl/src/core/../misc/lv_style.h ****  *********************/
  16:lvgl/src/core/../misc/lv_style.h **** #include <stdbool.h>
  17:lvgl/src/core/../misc/lv_style.h **** #include <stdint.h>
  18:lvgl/src/core/../misc/lv_style.h **** #include "../font/lv_font.h"
  19:lvgl/src/core/../misc/lv_style.h **** #include "lv_color.h"
  20:lvgl/src/core/../misc/lv_style.h **** #include "lv_area.h"
  21:lvgl/src/core/../misc/lv_style.h **** #include "lv_anim.h"
  22:lvgl/src/core/../misc/lv_style.h **** #include "lv_txt.h"
  23:lvgl/src/core/../misc/lv_style.h **** #include "lv_types.h"
  24:lvgl/src/core/../misc/lv_style.h **** #include "lv_assert.h"
  25:lvgl/src/core/../misc/lv_style.h **** #include "lv_bidi.h"
  26:lvgl/src/core/../misc/lv_style.h **** 
  27:lvgl/src/core/../misc/lv_style.h **** /*********************
  28:lvgl/src/core/../misc/lv_style.h ****  *      DEFINES
  29:lvgl/src/core/../misc/lv_style.h ****  *********************/
  30:lvgl/src/core/../misc/lv_style.h **** 
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 2


  31:lvgl/src/core/../misc/lv_style.h **** #define LV_STYLE_SENTINEL_VALUE     0xAABBCCDD
  32:lvgl/src/core/../misc/lv_style.h **** 
  33:lvgl/src/core/../misc/lv_style.h **** /**
  34:lvgl/src/core/../misc/lv_style.h ****  * Flags for style properties
  35:lvgl/src/core/../misc/lv_style.h ****  */
  36:lvgl/src/core/../misc/lv_style.h **** #define LV_STYLE_PROP_INHERIT               (1 << 10)  /*Inherited*/
  37:lvgl/src/core/../misc/lv_style.h **** #define LV_STYLE_PROP_EXT_DRAW              (1 << 11)  /*Requires ext. draw size update when change
  38:lvgl/src/core/../misc/lv_style.h **** #define LV_STYLE_PROP_LAYOUT_REFR           (1 << 12)  /*Requires layout update when changed*/
  39:lvgl/src/core/../misc/lv_style.h **** #define LV_STYLE_PROP_PARENT_LAYOUT_REFR    (1 << 13)  /*Requires layout update on parent when chan
  40:lvgl/src/core/../misc/lv_style.h **** #define LV_STYLE_PROP_FILTER                (1 << 14)  /*Apply color filter*/
  41:lvgl/src/core/../misc/lv_style.h **** 
  42:lvgl/src/core/../misc/lv_style.h **** /**
  43:lvgl/src/core/../misc/lv_style.h ****  * Other constants
  44:lvgl/src/core/../misc/lv_style.h ****  */
  45:lvgl/src/core/../misc/lv_style.h **** #define LV_IMG_ZOOM_NONE            256        /*Value for not zooming the image*/
  46:lvgl/src/core/../misc/lv_style.h **** LV_EXPORT_CONST_INT(LV_IMG_ZOOM_NONE);
  47:lvgl/src/core/../misc/lv_style.h **** 
  48:lvgl/src/core/../misc/lv_style.h **** #if LV_USE_ASSERT_STYLE
  49:lvgl/src/core/../misc/lv_style.h **** #define LV_STYLE_CONST_INIT(var_name, prop_array) const lv_style_t var_name = { .sentinel = LV_STYL
  50:lvgl/src/core/../misc/lv_style.h **** #else
  51:lvgl/src/core/../misc/lv_style.h **** #define LV_STYLE_CONST_INIT(var_name, prop_array) const lv_style_t var_name = { .v_p = { .const_pro
  52:lvgl/src/core/../misc/lv_style.h **** #endif
  53:lvgl/src/core/../misc/lv_style.h **** 
  54:lvgl/src/core/../misc/lv_style.h **** /** On simple system, don't waste resources on gradients */
  55:lvgl/src/core/../misc/lv_style.h **** #if !defined(LV_DRAW_COMPLEX) || !defined(LV_GRADIENT_MAX_STOPS)
  56:lvgl/src/core/../misc/lv_style.h **** #define LV_GRADIENT_MAX_STOPS 2
  57:lvgl/src/core/../misc/lv_style.h **** #endif
  58:lvgl/src/core/../misc/lv_style.h **** 
  59:lvgl/src/core/../misc/lv_style.h **** 
  60:lvgl/src/core/../misc/lv_style.h **** /**********************
  61:lvgl/src/core/../misc/lv_style.h ****  *      TYPEDEFS
  62:lvgl/src/core/../misc/lv_style.h ****  **********************/
  63:lvgl/src/core/../misc/lv_style.h **** 
  64:lvgl/src/core/../misc/lv_style.h **** /**
  65:lvgl/src/core/../misc/lv_style.h ****  * Possible options how to blend opaque drawings
  66:lvgl/src/core/../misc/lv_style.h ****  */
  67:lvgl/src/core/../misc/lv_style.h **** enum {
  68:lvgl/src/core/../misc/lv_style.h ****     LV_BLEND_MODE_NORMAL,     /**< Simply mix according to the opacity value*/
  69:lvgl/src/core/../misc/lv_style.h ****     LV_BLEND_MODE_ADDITIVE,   /**< Add the respective color channels*/
  70:lvgl/src/core/../misc/lv_style.h ****     LV_BLEND_MODE_SUBTRACTIVE,/**< Subtract the foreground from the background*/
  71:lvgl/src/core/../misc/lv_style.h ****     LV_BLEND_MODE_MULTIPLY,   /**< Multiply the foreground and background*/
  72:lvgl/src/core/../misc/lv_style.h ****     LV_BLEND_MODE_REPLACE,    /**< Replace background with foreground in the area*/
  73:lvgl/src/core/../misc/lv_style.h **** };
  74:lvgl/src/core/../misc/lv_style.h **** 
  75:lvgl/src/core/../misc/lv_style.h **** typedef uint8_t lv_blend_mode_t;
  76:lvgl/src/core/../misc/lv_style.h **** 
  77:lvgl/src/core/../misc/lv_style.h **** /**
  78:lvgl/src/core/../misc/lv_style.h ****  * Some options to apply decorations on texts.
  79:lvgl/src/core/../misc/lv_style.h ****  * 'OR'ed values can be used.
  80:lvgl/src/core/../misc/lv_style.h ****  */
  81:lvgl/src/core/../misc/lv_style.h **** enum {
  82:lvgl/src/core/../misc/lv_style.h ****     LV_TEXT_DECOR_NONE          = 0x00,
  83:lvgl/src/core/../misc/lv_style.h ****     LV_TEXT_DECOR_UNDERLINE     = 0x01,
  84:lvgl/src/core/../misc/lv_style.h ****     LV_TEXT_DECOR_STRIKETHROUGH = 0x02,
  85:lvgl/src/core/../misc/lv_style.h **** };
  86:lvgl/src/core/../misc/lv_style.h **** 
  87:lvgl/src/core/../misc/lv_style.h **** typedef uint8_t lv_text_decor_t;
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 3


  88:lvgl/src/core/../misc/lv_style.h **** 
  89:lvgl/src/core/../misc/lv_style.h **** /**
  90:lvgl/src/core/../misc/lv_style.h ****  * Selects on which sides border should be drawn
  91:lvgl/src/core/../misc/lv_style.h ****  * 'OR'ed values can be used.
  92:lvgl/src/core/../misc/lv_style.h ****  */
  93:lvgl/src/core/../misc/lv_style.h **** enum {
  94:lvgl/src/core/../misc/lv_style.h ****     LV_BORDER_SIDE_NONE     = 0x00,
  95:lvgl/src/core/../misc/lv_style.h ****     LV_BORDER_SIDE_BOTTOM   = 0x01,
  96:lvgl/src/core/../misc/lv_style.h ****     LV_BORDER_SIDE_TOP      = 0x02,
  97:lvgl/src/core/../misc/lv_style.h ****     LV_BORDER_SIDE_LEFT     = 0x04,
  98:lvgl/src/core/../misc/lv_style.h ****     LV_BORDER_SIDE_RIGHT    = 0x08,
  99:lvgl/src/core/../misc/lv_style.h ****     LV_BORDER_SIDE_FULL     = 0x0F,
 100:lvgl/src/core/../misc/lv_style.h ****     LV_BORDER_SIDE_INTERNAL = 0x10, /**< FOR matrix-like objects (e.g. Button matrix)*/
 101:lvgl/src/core/../misc/lv_style.h **** };
 102:lvgl/src/core/../misc/lv_style.h **** typedef uint8_t lv_border_side_t;
 103:lvgl/src/core/../misc/lv_style.h **** 
 104:lvgl/src/core/../misc/lv_style.h **** /**
 105:lvgl/src/core/../misc/lv_style.h ****  * The direction of the gradient.
 106:lvgl/src/core/../misc/lv_style.h ****  */
 107:lvgl/src/core/../misc/lv_style.h **** enum {
 108:lvgl/src/core/../misc/lv_style.h ****     LV_GRAD_DIR_NONE, /**< No gradient (the `grad_color` property is ignored)*/
 109:lvgl/src/core/../misc/lv_style.h ****     LV_GRAD_DIR_VER,  /**< Vertical (top to bottom) gradient*/
 110:lvgl/src/core/../misc/lv_style.h ****     LV_GRAD_DIR_HOR,  /**< Horizontal (left to right) gradient*/
 111:lvgl/src/core/../misc/lv_style.h **** };
 112:lvgl/src/core/../misc/lv_style.h **** 
 113:lvgl/src/core/../misc/lv_style.h **** typedef uint8_t lv_grad_dir_t;
 114:lvgl/src/core/../misc/lv_style.h **** 
 115:lvgl/src/core/../misc/lv_style.h **** /**
 116:lvgl/src/core/../misc/lv_style.h ****  * The dithering algorithm for the gradient
 117:lvgl/src/core/../misc/lv_style.h ****  * Depends on LV_DITHER_GRADIENT
 118:lvgl/src/core/../misc/lv_style.h ****  */
 119:lvgl/src/core/../misc/lv_style.h **** enum {
 120:lvgl/src/core/../misc/lv_style.h ****     LV_DITHER_NONE,     /**< No dithering, colors are just quantized to the output resolution*/
 121:lvgl/src/core/../misc/lv_style.h ****     LV_DITHER_ORDERED,  /**< Ordered dithering. Faster to compute and use less memory but lower qua
 122:lvgl/src/core/../misc/lv_style.h ****     LV_DITHER_ERR_DIFF, /**< Error diffusion mode. Slower to compute and use more memory but give h
 123:lvgl/src/core/../misc/lv_style.h **** };
 124:lvgl/src/core/../misc/lv_style.h **** 
 125:lvgl/src/core/../misc/lv_style.h **** typedef uint8_t lv_dither_mode_t;
 126:lvgl/src/core/../misc/lv_style.h **** 
 127:lvgl/src/core/../misc/lv_style.h **** /** A gradient stop definition.
 128:lvgl/src/core/../misc/lv_style.h ****  *  This matches a color and a position in a virtual 0-255 scale.
 129:lvgl/src/core/../misc/lv_style.h ****  */
 130:lvgl/src/core/../misc/lv_style.h **** typedef struct {
 131:lvgl/src/core/../misc/lv_style.h ****     lv_color_t color;   /**< The stop color */
 132:lvgl/src/core/../misc/lv_style.h ****     uint8_t    frac;    /**< The stop position in 1/255 unit */
 133:lvgl/src/core/../misc/lv_style.h **** } lv_gradient_stop_t;
 134:lvgl/src/core/../misc/lv_style.h **** 
 135:lvgl/src/core/../misc/lv_style.h **** /** A descriptor of a gradient. */
 136:lvgl/src/core/../misc/lv_style.h **** typedef struct {
 137:lvgl/src/core/../misc/lv_style.h ****     lv_gradient_stop_t   stops[LV_GRADIENT_MAX_STOPS]; /**< A gradient stop array */
 138:lvgl/src/core/../misc/lv_style.h ****     uint8_t              stops_count;                  /**< The number of used stops in the array *
 139:lvgl/src/core/../misc/lv_style.h ****     lv_grad_dir_t        dir : 3;                      /**< The gradient direction.
 140:lvgl/src/core/../misc/lv_style.h ****                                                         * Any of LV_GRAD_DIR_HOR, LV_GRAD_DIR_VER, 
 141:lvgl/src/core/../misc/lv_style.h ****     lv_dither_mode_t     dither : 3;                   /**< Whether to dither the gradient or not.
 142:lvgl/src/core/../misc/lv_style.h ****                                                         * Any of LV_DITHER_NONE, LV_DITHER_ORDERED,
 143:lvgl/src/core/../misc/lv_style.h **** } lv_grad_dsc_t;
 144:lvgl/src/core/../misc/lv_style.h **** 
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 4


 145:lvgl/src/core/../misc/lv_style.h **** /**
 146:lvgl/src/core/../misc/lv_style.h ****  * A common type to handle all the property types in the same way.
 147:lvgl/src/core/../misc/lv_style.h ****  */
 148:lvgl/src/core/../misc/lv_style.h **** typedef union {
 149:lvgl/src/core/../misc/lv_style.h ****     int32_t num;         /**< Number integer number (opacity, enums, booleans or "normal" numbers)*
 150:lvgl/src/core/../misc/lv_style.h ****     const void * ptr;    /**< Constant pointers  (font, cone text, etc)*/
 151:lvgl/src/core/../misc/lv_style.h ****     lv_color_t color;    /**< Colors*/
 152:lvgl/src/core/../misc/lv_style.h **** } lv_style_value_t;
 153:lvgl/src/core/../misc/lv_style.h **** 
 154:lvgl/src/core/../misc/lv_style.h **** /**
 155:lvgl/src/core/../misc/lv_style.h ****  * Enumeration of all built in style properties
 156:lvgl/src/core/../misc/lv_style.h ****  */
 157:lvgl/src/core/../misc/lv_style.h **** typedef enum {
 158:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_PROP_INV                = 0,
 159:lvgl/src/core/../misc/lv_style.h **** 
 160:lvgl/src/core/../misc/lv_style.h ****     /*Group 0*/
 161:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_WIDTH                   = 1 | LV_STYLE_PROP_LAYOUT_REFR,
 162:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_MIN_WIDTH               = 2 | LV_STYLE_PROP_LAYOUT_REFR,
 163:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_MAX_WIDTH               = 3 | LV_STYLE_PROP_LAYOUT_REFR,
 164:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_HEIGHT                  = 4 | LV_STYLE_PROP_LAYOUT_REFR,
 165:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_MIN_HEIGHT              = 5 | LV_STYLE_PROP_LAYOUT_REFR,
 166:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_MAX_HEIGHT              = 6 | LV_STYLE_PROP_LAYOUT_REFR,
 167:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_X                       = 7 | LV_STYLE_PROP_LAYOUT_REFR,
 168:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_Y                       = 8 | LV_STYLE_PROP_LAYOUT_REFR,
 169:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_ALIGN                   = 9 | LV_STYLE_PROP_LAYOUT_REFR,
 170:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_TRANSFORM_WIDTH         = 10 | LV_STYLE_PROP_EXT_DRAW,
 171:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_TRANSFORM_HEIGHT        = 11 | LV_STYLE_PROP_EXT_DRAW,
 172:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_TRANSLATE_X             = 12 | LV_STYLE_PROP_LAYOUT_REFR | LV_STYLE_PROP_PARENT_LAYOUT
 173:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_TRANSLATE_Y             = 13 | LV_STYLE_PROP_LAYOUT_REFR | LV_STYLE_PROP_PARENT_LAYOUT
 174:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_TRANSFORM_ZOOM          = 14 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR | LV
 175:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_TRANSFORM_ANGLE         = 15 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR | LV
 176:lvgl/src/core/../misc/lv_style.h **** 
 177:lvgl/src/core/../misc/lv_style.h ****     /*Group 1*/
 178:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_PAD_TOP                 = 16 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR,
 179:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_PAD_BOTTOM              = 17 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR,
 180:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_PAD_LEFT                = 18 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR,
 181:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_PAD_RIGHT               = 19 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR,
 182:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_PAD_ROW                 = 20 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR,
 183:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_PAD_COLUMN              = 21 | LV_STYLE_PROP_EXT_DRAW | LV_STYLE_PROP_LAYOUT_REFR,
 184:lvgl/src/core/../misc/lv_style.h **** 
 185:lvgl/src/core/../misc/lv_style.h ****     /*Group 2*/
 186:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_BG_COLOR                = 32,
 187:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_BG_COLOR_FILTERED       = 32 | LV_STYLE_PROP_FILTER,
 188:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_BG_OPA                  = 33,
 189:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_BG_GRAD_COLOR           = 34,
 190:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_BG_GRAD_COLOR_FILTERED  = 34 | LV_STYLE_PROP_FILTER,
 191:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_BG_GRAD_DIR             = 35,
 192:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_BG_MAIN_STOP            = 36,
 193:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_BG_GRAD_STOP            = 37,
 194:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_BG_GRAD                 = 38,
 195:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_BG_DITHER_MODE          = 39,
 196:lvgl/src/core/../misc/lv_style.h **** 
 197:lvgl/src/core/../misc/lv_style.h **** 
 198:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_BG_IMG_SRC              = 40 | LV_STYLE_PROP_EXT_DRAW,
 199:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_BG_IMG_OPA              = 41,
 200:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_BG_IMG_RECOLOR          = 42,
 201:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_BG_IMG_RECOLOR_FILTERED = 42 | LV_STYLE_PROP_FILTER,
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 5


 202:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_BG_IMG_RECOLOR_OPA      = 43,
 203:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_BG_IMG_TILED            = 44,
 204:lvgl/src/core/../misc/lv_style.h **** 
 205:lvgl/src/core/../misc/lv_style.h ****     /*Group 3*/
 206:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_BORDER_COLOR            = 48,
 207:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_BORDER_COLOR_FILTERED   = 48 | LV_STYLE_PROP_FILTER,
 208:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_BORDER_OPA              = 49,
 209:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_BORDER_WIDTH            = 50 | LV_STYLE_PROP_LAYOUT_REFR,
 210:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_BORDER_SIDE             = 51,
 211:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_BORDER_POST             = 52,
 212:lvgl/src/core/../misc/lv_style.h **** 
 213:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_OUTLINE_WIDTH           = 58 | LV_STYLE_PROP_EXT_DRAW,
 214:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_OUTLINE_COLOR           = 59,
 215:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_OUTLINE_COLOR_FILTERED  = 59 | LV_STYLE_PROP_FILTER,
 216:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_OUTLINE_OPA             = 60 | LV_STYLE_PROP_EXT_DRAW,
 217:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_OUTLINE_PAD             = 61 | LV_STYLE_PROP_EXT_DRAW,
 218:lvgl/src/core/../misc/lv_style.h **** 
 219:lvgl/src/core/../misc/lv_style.h ****     /*Group 4*/
 220:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_SHADOW_WIDTH            = 64 | LV_STYLE_PROP_EXT_DRAW,
 221:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_SHADOW_OFS_X            = 65 | LV_STYLE_PROP_EXT_DRAW,
 222:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_SHADOW_OFS_Y            = 66 | LV_STYLE_PROP_EXT_DRAW,
 223:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_SHADOW_SPREAD           = 67 | LV_STYLE_PROP_EXT_DRAW,
 224:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_SHADOW_COLOR            = 68,
 225:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_SHADOW_COLOR_FILTERED   = 68 | LV_STYLE_PROP_FILTER,
 226:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_SHADOW_OPA              = 69 | LV_STYLE_PROP_EXT_DRAW,
 227:lvgl/src/core/../misc/lv_style.h **** 
 228:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_IMG_OPA                 = 70,
 229:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_IMG_RECOLOR             = 71,
 230:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_IMG_RECOLOR_FILTERED    = 71 | LV_STYLE_PROP_FILTER,
 231:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_IMG_RECOLOR_OPA         = 72,
 232:lvgl/src/core/../misc/lv_style.h **** 
 233:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_LINE_WIDTH              = 73 | LV_STYLE_PROP_EXT_DRAW,
 234:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_LINE_DASH_WIDTH         = 74,
 235:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_LINE_DASH_GAP           = 75,
 236:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_LINE_ROUNDED            = 76,
 237:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_LINE_COLOR              = 77,
 238:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_LINE_COLOR_FILTERED     = 77 | LV_STYLE_PROP_FILTER,
 239:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_LINE_OPA                = 78,
 240:lvgl/src/core/../misc/lv_style.h **** 
 241:lvgl/src/core/../misc/lv_style.h ****     /*Group 5*/
 242:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_ARC_WIDTH               = 80 | LV_STYLE_PROP_EXT_DRAW,
 243:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_ARC_ROUNDED             = 81,
 244:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_ARC_COLOR               = 82,
 245:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_ARC_COLOR_FILTERED      = 82 | LV_STYLE_PROP_FILTER,
 246:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_ARC_OPA                 = 83,
 247:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_ARC_IMG_SRC             = 84,
 248:lvgl/src/core/../misc/lv_style.h **** 
 249:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_TEXT_COLOR              = 87 | LV_STYLE_PROP_INHERIT,
 250:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_TEXT_COLOR_FILTERED     = 87 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_FILTER,
 251:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_TEXT_OPA                = 88 | LV_STYLE_PROP_INHERIT,
 252:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_TEXT_FONT               = 89 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 253:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_TEXT_LETTER_SPACE       = 90 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 254:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_TEXT_LINE_SPACE         = 91 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 255:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_TEXT_DECOR              = 92 | LV_STYLE_PROP_INHERIT,
 256:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_TEXT_ALIGN              = 93 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 257:lvgl/src/core/../misc/lv_style.h **** 
 258:lvgl/src/core/../misc/lv_style.h ****     /*Group 6*/
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 6


 259:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_RADIUS                  = 96,
 260:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_CLIP_CORNER             = 97,
 261:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_OPA                     = 98 | LV_STYLE_PROP_INHERIT,
 262:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_COLOR_FILTER_DSC        = 99,
 263:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_COLOR_FILTER_OPA        = 100,
 264:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_ANIM_TIME               = 101,
 265:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_ANIM_SPEED              = 102,
 266:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_TRANSITION              = 103,
 267:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_BLEND_MODE              = 104,
 268:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_LAYOUT                  = 105 | LV_STYLE_PROP_LAYOUT_REFR,
 269:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_BASE_DIR                = 106 | LV_STYLE_PROP_INHERIT | LV_STYLE_PROP_LAYOUT_REFR,
 270:lvgl/src/core/../misc/lv_style.h **** 
 271:lvgl/src/core/../misc/lv_style.h ****     _LV_STYLE_LAST_BUILT_IN_PROP     = 111,
 272:lvgl/src/core/../misc/lv_style.h **** 
 273:lvgl/src/core/../misc/lv_style.h ****     LV_STYLE_PROP_ANY                = 0xFFFF
 274:lvgl/src/core/../misc/lv_style.h **** } lv_style_prop_t;
 275:lvgl/src/core/../misc/lv_style.h **** 
 276:lvgl/src/core/../misc/lv_style.h **** /**
 277:lvgl/src/core/../misc/lv_style.h ****  * Descriptor for style transitions
 278:lvgl/src/core/../misc/lv_style.h ****  */
 279:lvgl/src/core/../misc/lv_style.h **** typedef struct {
 280:lvgl/src/core/../misc/lv_style.h ****     const lv_style_prop_t * props; /**< An array with the properties to animate.*/
 281:lvgl/src/core/../misc/lv_style.h **** #if LV_USE_USER_DATA
 282:lvgl/src/core/../misc/lv_style.h ****     void * user_data;              /**< A custom user data that will be passed to the animation's u
 283:lvgl/src/core/../misc/lv_style.h **** #endif
 284:lvgl/src/core/../misc/lv_style.h ****     lv_anim_path_cb_t path_xcb;     /**< A path for the animation.*/
 285:lvgl/src/core/../misc/lv_style.h ****     uint32_t time;                 /**< Duration of the transition in [ms]*/
 286:lvgl/src/core/../misc/lv_style.h ****     uint32_t delay;                /**< Delay before the transition in [ms]*/
 287:lvgl/src/core/../misc/lv_style.h **** } lv_style_transition_dsc_t;
 288:lvgl/src/core/../misc/lv_style.h **** 
 289:lvgl/src/core/../misc/lv_style.h **** /**
 290:lvgl/src/core/../misc/lv_style.h ****  * Descriptor of a constant style property.
 291:lvgl/src/core/../misc/lv_style.h ****  */
 292:lvgl/src/core/../misc/lv_style.h **** typedef struct {
 293:lvgl/src/core/../misc/lv_style.h ****     lv_style_prop_t prop;
 294:lvgl/src/core/../misc/lv_style.h ****     lv_style_value_t value;
 295:lvgl/src/core/../misc/lv_style.h **** } lv_style_const_prop_t;
 296:lvgl/src/core/../misc/lv_style.h **** 
 297:lvgl/src/core/../misc/lv_style.h **** /**
 298:lvgl/src/core/../misc/lv_style.h ****  * Descriptor of a style (a collection of properties and values).
 299:lvgl/src/core/../misc/lv_style.h ****  */
 300:lvgl/src/core/../misc/lv_style.h **** typedef struct {
 301:lvgl/src/core/../misc/lv_style.h **** 
 302:lvgl/src/core/../misc/lv_style.h **** #if LV_USE_ASSERT_STYLE
 303:lvgl/src/core/../misc/lv_style.h ****     uint32_t sentinel;
 304:lvgl/src/core/../misc/lv_style.h **** #endif
 305:lvgl/src/core/../misc/lv_style.h **** 
 306:lvgl/src/core/../misc/lv_style.h ****     /*If there is only one property store it directly.
 307:lvgl/src/core/../misc/lv_style.h ****      *For more properties allocate an array*/
 308:lvgl/src/core/../misc/lv_style.h ****     union {
 309:lvgl/src/core/../misc/lv_style.h ****         lv_style_value_t value1;
 310:lvgl/src/core/../misc/lv_style.h ****         uint8_t * values_and_props;
 311:lvgl/src/core/../misc/lv_style.h ****         const lv_style_const_prop_t * const_props;
 312:lvgl/src/core/../misc/lv_style.h ****     } v_p;
 313:lvgl/src/core/../misc/lv_style.h **** 
 314:lvgl/src/core/../misc/lv_style.h ****     uint16_t prop1 : 15;
 315:lvgl/src/core/../misc/lv_style.h ****     uint16_t is_const : 1;
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 7


 316:lvgl/src/core/../misc/lv_style.h ****     uint8_t has_group;
 317:lvgl/src/core/../misc/lv_style.h ****     uint8_t prop_cnt;
 318:lvgl/src/core/../misc/lv_style.h **** } lv_style_t;
 319:lvgl/src/core/../misc/lv_style.h **** 
 320:lvgl/src/core/../misc/lv_style.h **** /**********************
 321:lvgl/src/core/../misc/lv_style.h ****  * GLOBAL PROTOTYPES
 322:lvgl/src/core/../misc/lv_style.h ****  **********************/
 323:lvgl/src/core/../misc/lv_style.h **** 
 324:lvgl/src/core/../misc/lv_style.h **** 
 325:lvgl/src/core/../misc/lv_style.h **** /**
 326:lvgl/src/core/../misc/lv_style.h ****  * Initialize a style
 327:lvgl/src/core/../misc/lv_style.h ****  * @param style pointer to a style to initialize
 328:lvgl/src/core/../misc/lv_style.h ****  * @note Do not call `lv_style_init` on styles that already have some properties
 329:lvgl/src/core/../misc/lv_style.h ****  *       because this function won't free the used memory, just sets a default state for the style.
 330:lvgl/src/core/../misc/lv_style.h ****  *       In other words be sure to initialize styles only once!
 331:lvgl/src/core/../misc/lv_style.h ****  */
 332:lvgl/src/core/../misc/lv_style.h **** void lv_style_init(lv_style_t * style);
 333:lvgl/src/core/../misc/lv_style.h **** 
 334:lvgl/src/core/../misc/lv_style.h **** /**
 335:lvgl/src/core/../misc/lv_style.h ****  * Clear all properties from a style and free all allocated memories.
 336:lvgl/src/core/../misc/lv_style.h ****  * @param style pointer to a style
 337:lvgl/src/core/../misc/lv_style.h ****  */
 338:lvgl/src/core/../misc/lv_style.h **** void lv_style_reset(lv_style_t * style);
 339:lvgl/src/core/../misc/lv_style.h **** 
 340:lvgl/src/core/../misc/lv_style.h **** /**
 341:lvgl/src/core/../misc/lv_style.h ****  * Register a new style property for custom usage
 342:lvgl/src/core/../misc/lv_style.h ****  * @return a new property ID.
 343:lvgl/src/core/../misc/lv_style.h ****  * @example
 344:lvgl/src/core/../misc/lv_style.h ****  * lv_style_prop_t MY_PROP;
 345:lvgl/src/core/../misc/lv_style.h ****  * static inline void lv_style_set_my_prop(lv_style_t * style, lv_color_t value) {
 346:lvgl/src/core/../misc/lv_style.h ****  * lv_style_value_t v = {.color = value}; lv_style_set_prop(style, MY_PROP, v); }
 347:lvgl/src/core/../misc/lv_style.h ****  *
 348:lvgl/src/core/../misc/lv_style.h ****  * ...
 349:lvgl/src/core/../misc/lv_style.h ****  * MY_PROP = lv_style_register_prop();
 350:lvgl/src/core/../misc/lv_style.h ****  * ...
 351:lvgl/src/core/../misc/lv_style.h ****  * lv_style_set_my_prop(&style1, lv_palette_main(LV_PALETTE_RED));
 352:lvgl/src/core/../misc/lv_style.h ****  */
 353:lvgl/src/core/../misc/lv_style.h **** lv_style_prop_t lv_style_register_prop(void);
 354:lvgl/src/core/../misc/lv_style.h **** 
 355:lvgl/src/core/../misc/lv_style.h **** /**
 356:lvgl/src/core/../misc/lv_style.h ****  * Remove a property from a style
 357:lvgl/src/core/../misc/lv_style.h ****  * @param style pointer to a style
 358:lvgl/src/core/../misc/lv_style.h ****  * @param prop  a style property ORed with a state.
 359:lvgl/src/core/../misc/lv_style.h ****  * @return true: the property was found and removed; false: the property wasn't found
 360:lvgl/src/core/../misc/lv_style.h ****  */
 361:lvgl/src/core/../misc/lv_style.h **** bool lv_style_remove_prop(lv_style_t * style, lv_style_prop_t prop);
 362:lvgl/src/core/../misc/lv_style.h **** 
 363:lvgl/src/core/../misc/lv_style.h **** /**
 364:lvgl/src/core/../misc/lv_style.h ****  * Set the value of property in a style.
 365:lvgl/src/core/../misc/lv_style.h ****  * This function shouldn't be used directly by the user.
 366:lvgl/src/core/../misc/lv_style.h ****  * Instead use `lv_style_set_<prop_name>()`. E.g. `lv_style_set_bg_color()`
 367:lvgl/src/core/../misc/lv_style.h ****  * @param style pointer to style
 368:lvgl/src/core/../misc/lv_style.h ****  * @param prop the ID of a property (e.g. `LV_STYLE_BG_COLOR`)
 369:lvgl/src/core/../misc/lv_style.h ****  * @param value `lv_style_value_t` variable in which a field is set according to the type of `prop`
 370:lvgl/src/core/../misc/lv_style.h ****  */
 371:lvgl/src/core/../misc/lv_style.h **** void lv_style_set_prop(lv_style_t * style, lv_style_prop_t prop, lv_style_value_t value);
 372:lvgl/src/core/../misc/lv_style.h **** 
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 8


 373:lvgl/src/core/../misc/lv_style.h **** /**
 374:lvgl/src/core/../misc/lv_style.h ****  * Get the value of a property
 375:lvgl/src/core/../misc/lv_style.h ****  * @param style pointer to a style
 376:lvgl/src/core/../misc/lv_style.h ****  * @param prop  the ID of a property
 377:lvgl/src/core/../misc/lv_style.h ****  * @param value pointer to a `lv_style_value_t` variable to store the value
 378:lvgl/src/core/../misc/lv_style.h ****  * @return LV_RES_INV: the property wasn't found in the style (`value` is unchanged)
 379:lvgl/src/core/../misc/lv_style.h ****  *         LV_RES_OK: the property was fond, and `value` is set accordingly
 380:lvgl/src/core/../misc/lv_style.h ****  * @note For performance reasons there are no sanity check on `style`
 381:lvgl/src/core/../misc/lv_style.h ****  */
 382:lvgl/src/core/../misc/lv_style.h **** lv_res_t lv_style_get_prop(const lv_style_t * style, lv_style_prop_t prop, lv_style_value_t * value
 383:lvgl/src/core/../misc/lv_style.h **** 
 384:lvgl/src/core/../misc/lv_style.h **** 
 385:lvgl/src/core/../misc/lv_style.h **** /**
 386:lvgl/src/core/../misc/lv_style.h ****  * Get the value of a property
 387:lvgl/src/core/../misc/lv_style.h ****  * @param style pointer to a style
 388:lvgl/src/core/../misc/lv_style.h ****  * @param prop  the ID of a property
 389:lvgl/src/core/../misc/lv_style.h ****  * @param value pointer to a `lv_style_value_t` variable to store the value
 390:lvgl/src/core/../misc/lv_style.h ****  * @return LV_RES_INV: the property wasn't found in the style (`value` is unchanged)
 391:lvgl/src/core/../misc/lv_style.h ****  *         LV_RES_OK: the property was fond, and `value` is set accordingly
 392:lvgl/src/core/../misc/lv_style.h ****  * @note For performance reasons there are no sanity check on `style`
 393:lvgl/src/core/../misc/lv_style.h ****  * @note This function is the same as ::lv_style_get_prop but inlined. Use it only on performance c
 394:lvgl/src/core/../misc/lv_style.h ****  */
 395:lvgl/src/core/../misc/lv_style.h **** static inline lv_res_t lv_style_get_prop_inlined(const lv_style_t * style, lv_style_prop_t prop,
 396:lvgl/src/core/../misc/lv_style.h ****                                                  lv_style_value_t * value)
 397:lvgl/src/core/../misc/lv_style.h **** {
  29              		.loc 2 397 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 2 397 1 is_stmt 0 view .LVU1
  34 0000 0346     		mov	r3, r0
 398:lvgl/src/core/../misc/lv_style.h ****     if(style->is_const) {
  35              		.loc 2 398 5 is_stmt 1 view .LVU2
  36              		.loc 2 398 7 is_stmt 0 view .LVU3
  37 0002 90F90500 		ldrsb	r0, [r0, #5]
  38              	.LVL1:
  39              		.loc 2 398 7 view .LVU4
  40 0006 0028     		cmp	r0, #0
  41 0008 12DB     		blt	.L16
 399:lvgl/src/core/../misc/lv_style.h ****         const lv_style_const_prop_t * const_prop;
 400:lvgl/src/core/../misc/lv_style.h ****         for(const_prop = style->v_p.const_props; const_prop->prop != LV_STYLE_PROP_INV; const_prop+
 401:lvgl/src/core/../misc/lv_style.h ****             if(const_prop->prop == prop) {
 402:lvgl/src/core/../misc/lv_style.h ****                 *value = const_prop->value;
 403:lvgl/src/core/../misc/lv_style.h ****                 return LV_RES_OK;
 404:lvgl/src/core/../misc/lv_style.h ****             }
 405:lvgl/src/core/../misc/lv_style.h ****         }
 406:lvgl/src/core/../misc/lv_style.h ****         return LV_RES_INV;
 407:lvgl/src/core/../misc/lv_style.h ****     }
 408:lvgl/src/core/../misc/lv_style.h **** 
 409:lvgl/src/core/../misc/lv_style.h ****     if(style->prop_cnt == 0) return LV_RES_INV;
  42              		.loc 2 409 5 is_stmt 1 view .LVU5
  43              		.loc 2 409 13 is_stmt 0 view .LVU6
  44 000a D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
  45              		.loc 2 409 7 view .LVU7
  46 000c 70B3     		cbz	r0, .L13
 410:lvgl/src/core/../misc/lv_style.h **** 
 411:lvgl/src/core/../misc/lv_style.h ****     if(style->prop_cnt > 1) {
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 9


  47              		.loc 2 411 5 is_stmt 1 view .LVU8
  48              		.loc 2 411 7 is_stmt 0 view .LVU9
  49 000e 0128     		cmp	r0, #1
  50 0010 21D9     		bls	.L7
 397:lvgl/src/core/../misc/lv_style.h ****     if(style->is_const) {
  51              		.loc 2 397 1 view .LVU10
  52 0012 10B5     		push	{r4, lr}
  53              	.LCFI0:
  54              		.cfi_def_cfa_offset 8
  55              		.cfi_offset 4, -8
  56              		.cfi_offset 14, -4
  57              	.LBB99:
 412:lvgl/src/core/../misc/lv_style.h ****         uint8_t * tmp = style->v_p.values_and_props + style->prop_cnt * sizeof(lv_style_value_t);
  58              		.loc 2 412 9 is_stmt 1 view .LVU11
  59              		.loc 2 412 35 is_stmt 0 view .LVU12
  60 0014 1C68     		ldr	r4, [r3]
  61              		.loc 2 412 60 view .LVU13
  62 0016 8646     		mov	lr, r0
  63              		.loc 2 412 71 view .LVU14
  64 0018 8000     		lsls	r0, r0, #2
  65              	.LVL2:
 413:lvgl/src/core/../misc/lv_style.h ****         uint16_t * props = (uint16_t *)tmp;
  66              		.loc 2 413 9 is_stmt 1 view .LVU15
 414:lvgl/src/core/../misc/lv_style.h ****         uint32_t i;
  67              		.loc 2 414 9 view .LVU16
 415:lvgl/src/core/../misc/lv_style.h ****         for(i = 0; i < style->prop_cnt; i++) {
  68              		.loc 2 415 9 view .LVU17
  69              		.loc 2 415 15 is_stmt 0 view .LVU18
  70 001a 0023     		movs	r3, #0
  71              	.LVL3:
  72              	.L8:
  73              		.loc 2 415 22 is_stmt 1 discriminator 1 view .LVU19
  74 001c 9E45     		cmp	lr, r3
  75 001e 18D9     		bls	.L17
 416:lvgl/src/core/../misc/lv_style.h ****             if(props[i] == prop) {
  76              		.loc 2 416 13 view .LVU20
  77              		.loc 2 416 21 is_stmt 0 view .LVU21
  78 0020 04EB000C 		add	ip, r4, r0
  79 0024 3CF813C0 		ldrh	ip, [ip, r3, lsl #1]
  80              		.loc 2 416 15 view .LVU22
  81 0028 8C45     		cmp	ip, r1
  82 002a 0DD0     		beq	.L18
 415:lvgl/src/core/../misc/lv_style.h ****         for(i = 0; i < style->prop_cnt; i++) {
  83              		.loc 2 415 42 is_stmt 1 discriminator 2 view .LVU23
  84 002c 0133     		adds	r3, r3, #1
  85              	.LVL4:
 415:lvgl/src/core/../misc/lv_style.h ****         for(i = 0; i < style->prop_cnt; i++) {
  86              		.loc 2 415 42 is_stmt 0 discriminator 2 view .LVU24
  87 002e F5E7     		b	.L8
  88              	.LVL5:
  89              	.L16:
  90              	.LCFI1:
  91              		.cfi_def_cfa_offset 0
  92              		.cfi_restore 4
  93              		.cfi_restore 14
 415:lvgl/src/core/../misc/lv_style.h ****         for(i = 0; i < style->prop_cnt; i++) {
  94              		.loc 2 415 42 discriminator 2 view .LVU25
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 10


  95              	.LBE99:
  96              	.LBB101:
 399:lvgl/src/core/../misc/lv_style.h ****         for(const_prop = style->v_p.const_props; const_prop->prop != LV_STYLE_PROP_INV; const_prop+
  97              		.loc 2 399 9 is_stmt 1 view .LVU26
 400:lvgl/src/core/../misc/lv_style.h ****             if(const_prop->prop == prop) {
  98              		.loc 2 400 9 view .LVU27
 400:lvgl/src/core/../misc/lv_style.h ****             if(const_prop->prop == prop) {
  99              		.loc 2 400 24 is_stmt 0 view .LVU28
 100 0030 1B68     		ldr	r3, [r3]
 101              	.LVL6:
 102              	.L3:
 400:lvgl/src/core/../misc/lv_style.h ****             if(const_prop->prop == prop) {
 103              		.loc 2 400 67 is_stmt 1 discriminator 1 view .LVU29
 400:lvgl/src/core/../misc/lv_style.h ****             if(const_prop->prop == prop) {
 104              		.loc 2 400 60 is_stmt 0 discriminator 1 view .LVU30
 105 0032 1888     		ldrh	r0, [r3]
 400:lvgl/src/core/../misc/lv_style.h ****             if(const_prop->prop == prop) {
 106              		.loc 2 400 67 discriminator 1 view .LVU31
 107 0034 38B1     		cbz	r0, .L19
 401:lvgl/src/core/../misc/lv_style.h ****                 *value = const_prop->value;
 108              		.loc 2 401 13 is_stmt 1 view .LVU32
 401:lvgl/src/core/../misc/lv_style.h ****                 *value = const_prop->value;
 109              		.loc 2 401 15 is_stmt 0 view .LVU33
 110 0036 8842     		cmp	r0, r1
 111 0038 01D0     		beq	.L20
 400:lvgl/src/core/../misc/lv_style.h ****             if(const_prop->prop == prop) {
 112              		.loc 2 400 99 is_stmt 1 discriminator 2 view .LVU34
 113 003a 0833     		adds	r3, r3, #8
 114              	.LVL7:
 400:lvgl/src/core/../misc/lv_style.h ****             if(const_prop->prop == prop) {
 115              		.loc 2 400 99 is_stmt 0 discriminator 2 view .LVU35
 116 003c F9E7     		b	.L3
 117              	.L20:
 402:lvgl/src/core/../misc/lv_style.h ****                 return LV_RES_OK;
 118              		.loc 2 402 17 is_stmt 1 view .LVU36
 402:lvgl/src/core/../misc/lv_style.h ****                 return LV_RES_OK;
 119              		.loc 2 402 24 is_stmt 0 view .LVU37
 120 003e 5B68     		ldr	r3, [r3, #4]
 121              	.LVL8:
 402:lvgl/src/core/../misc/lv_style.h ****                 return LV_RES_OK;
 122              		.loc 2 402 24 view .LVU38
 123 0040 1360     		str	r3, [r2]
 403:lvgl/src/core/../misc/lv_style.h ****             }
 124              		.loc 2 403 17 is_stmt 1 view .LVU39
 403:lvgl/src/core/../misc/lv_style.h ****             }
 125              		.loc 2 403 24 is_stmt 0 view .LVU40
 126 0042 0120     		movs	r0, #1
 127 0044 7047     		bx	lr
 128              	.LVL9:
 129              	.L19:
 403:lvgl/src/core/../misc/lv_style.h ****             }
 130              		.loc 2 403 24 view .LVU41
 131 0046 7047     		bx	lr
 132              	.LVL10:
 133              	.L18:
 134              	.LCFI2:
 135              		.cfi_def_cfa_offset 8
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 11


 136              		.cfi_offset 4, -8
 137              		.cfi_offset 14, -4
 403:lvgl/src/core/../misc/lv_style.h ****             }
 138              		.loc 2 403 24 view .LVU42
 139              	.LBE101:
 140              	.LBB102:
 141              	.LBB100:
 417:lvgl/src/core/../misc/lv_style.h ****                 lv_style_value_t * values = (lv_style_value_t *)style->v_p.values_and_props;
 142              		.loc 2 417 17 is_stmt 1 view .LVU43
 418:lvgl/src/core/../misc/lv_style.h ****                 *value = values[i];
 143              		.loc 2 418 17 view .LVU44
 144              		.loc 2 418 24 is_stmt 0 view .LVU45
 145 0048 54F82330 		ldr	r3, [r4, r3, lsl #2]
 146              	.LVL11:
 147              		.loc 2 418 24 view .LVU46
 148 004c 1360     		str	r3, [r2]
 419:lvgl/src/core/../misc/lv_style.h ****                 return LV_RES_OK;
 149              		.loc 2 419 17 is_stmt 1 view .LVU47
 150              		.loc 2 419 24 is_stmt 0 view .LVU48
 151 004e 0120     		movs	r0, #1
 152              	.LVL12:
 153              		.loc 2 419 24 view .LVU49
 154 0050 00E0     		b	.L5
 155              	.LVL13:
 156              	.L17:
 157              		.loc 2 419 24 view .LVU50
 158              	.LBE100:
 159              	.LBE102:
 420:lvgl/src/core/../misc/lv_style.h ****             }
 421:lvgl/src/core/../misc/lv_style.h ****         }
 422:lvgl/src/core/../misc/lv_style.h ****     }
 423:lvgl/src/core/../misc/lv_style.h ****     else if(style->prop1 == prop) {
 424:lvgl/src/core/../misc/lv_style.h ****         *value = style->v_p.value1;
 425:lvgl/src/core/../misc/lv_style.h ****         return LV_RES_OK;
 426:lvgl/src/core/../misc/lv_style.h ****     }
 427:lvgl/src/core/../misc/lv_style.h ****     return LV_RES_INV;
 160              		.loc 2 427 12 view .LVU51
 161 0052 0020     		movs	r0, #0
 162              	.LVL14:
 163              	.L5:
 428:lvgl/src/core/../misc/lv_style.h **** }
 164              		.loc 2 428 1 view .LVU52
 165 0054 10BD     		pop	{r4, pc}
 166              	.LVL15:
 167              	.L7:
 168              	.LCFI3:
 169              		.cfi_def_cfa_offset 0
 170              		.cfi_restore 4
 171              		.cfi_restore 14
 423:lvgl/src/core/../misc/lv_style.h ****         *value = style->v_p.value1;
 172              		.loc 2 423 10 is_stmt 1 view .LVU53
 423:lvgl/src/core/../misc/lv_style.h ****         *value = style->v_p.value1;
 173              		.loc 2 423 18 is_stmt 0 view .LVU54
 174 0056 9888     		ldrh	r0, [r3, #4]
 175 0058 C0F30E00 		ubfx	r0, r0, #0, #15
 423:lvgl/src/core/../misc/lv_style.h ****         *value = style->v_p.value1;
 176              		.loc 2 423 12 view .LVU55
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 12


 177 005c 8842     		cmp	r0, r1
 178 005e 01D0     		beq	.L21
 427:lvgl/src/core/../misc/lv_style.h **** }
 179              		.loc 2 427 12 view .LVU56
 180 0060 0020     		movs	r0, #0
 181 0062 7047     		bx	lr
 182              	.L21:
 424:lvgl/src/core/../misc/lv_style.h ****         return LV_RES_OK;
 183              		.loc 2 424 9 is_stmt 1 view .LVU57
 424:lvgl/src/core/../misc/lv_style.h ****         return LV_RES_OK;
 184              		.loc 2 424 16 is_stmt 0 view .LVU58
 185 0064 1B68     		ldr	r3, [r3]
 186              	.LVL16:
 424:lvgl/src/core/../misc/lv_style.h ****         return LV_RES_OK;
 187              		.loc 2 424 16 view .LVU59
 188 0066 1360     		str	r3, [r2]
 425:lvgl/src/core/../misc/lv_style.h ****     }
 189              		.loc 2 425 9 is_stmt 1 view .LVU60
 425:lvgl/src/core/../misc/lv_style.h ****     }
 190              		.loc 2 425 16 is_stmt 0 view .LVU61
 191 0068 0120     		movs	r0, #1
 192 006a 7047     		bx	lr
 193              	.LVL17:
 194              	.L13:
 195              		.loc 2 428 1 view .LVU62
 196 006c 7047     		bx	lr
 197              		.cfi_endproc
 198              	.LFE49:
 200              		.section	.text.obj_valid_child,"ax",%progbits
 201              		.align	1
 202              		.syntax unified
 203              		.thumb
 204              		.thumb_func
 206              	obj_valid_child:
 207              	.LVL18:
 208              	.LFB187:
   1:lvgl/src/core/lv_obj.c **** /**
   2:lvgl/src/core/lv_obj.c ****  * @file lv_obj.c
   3:lvgl/src/core/lv_obj.c ****  *
   4:lvgl/src/core/lv_obj.c ****  */
   5:lvgl/src/core/lv_obj.c **** 
   6:lvgl/src/core/lv_obj.c **** /*********************
   7:lvgl/src/core/lv_obj.c ****  *      INCLUDES
   8:lvgl/src/core/lv_obj.c ****  *********************/
   9:lvgl/src/core/lv_obj.c **** #include "lv_obj.h"
  10:lvgl/src/core/lv_obj.c **** #include "lv_indev.h"
  11:lvgl/src/core/lv_obj.c **** #include "lv_refr.h"
  12:lvgl/src/core/lv_obj.c **** #include "lv_group.h"
  13:lvgl/src/core/lv_obj.c **** #include "lv_disp.h"
  14:lvgl/src/core/lv_obj.c **** #include "lv_theme.h"
  15:lvgl/src/core/lv_obj.c **** #include "../misc/lv_assert.h"
  16:lvgl/src/core/lv_obj.c **** #include "../draw/lv_draw.h"
  17:lvgl/src/core/lv_obj.c **** #include "../misc/lv_anim.h"
  18:lvgl/src/core/lv_obj.c **** #include "../misc/lv_timer.h"
  19:lvgl/src/core/lv_obj.c **** #include "../misc/lv_async.h"
  20:lvgl/src/core/lv_obj.c **** #include "../misc/lv_fs.h"
  21:lvgl/src/core/lv_obj.c **** #include "../misc/lv_gc.h"
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 13


  22:lvgl/src/core/lv_obj.c **** #include "../misc/lv_math.h"
  23:lvgl/src/core/lv_obj.c **** #include "../misc/lv_log.h"
  24:lvgl/src/core/lv_obj.c **** #include "../hal/lv_hal.h"
  25:lvgl/src/core/lv_obj.c **** #include "../extra/lv_extra.h"
  26:lvgl/src/core/lv_obj.c **** #include <stdint.h>
  27:lvgl/src/core/lv_obj.c **** #include <string.h>
  28:lvgl/src/core/lv_obj.c **** 
  29:lvgl/src/core/lv_obj.c **** #if LV_USE_GPU_STM32_DMA2D
  30:lvgl/src/core/lv_obj.c ****     #include "../draw/stm32_dma2d/lv_gpu_stm32_dma2d.h"
  31:lvgl/src/core/lv_obj.c **** #endif
  32:lvgl/src/core/lv_obj.c **** 
  33:lvgl/src/core/lv_obj.c **** #if LV_USE_GPU_NXP_PXP && LV_USE_GPU_NXP_PXP_AUTO_INIT
  34:lvgl/src/core/lv_obj.c ****     #include "../draw/nxp/pxp/lv_gpu_nxp_pxp.h"
  35:lvgl/src/core/lv_obj.c **** #endif
  36:lvgl/src/core/lv_obj.c **** 
  37:lvgl/src/core/lv_obj.c **** /*********************
  38:lvgl/src/core/lv_obj.c ****  *      DEFINES
  39:lvgl/src/core/lv_obj.c ****  *********************/
  40:lvgl/src/core/lv_obj.c **** #define MY_CLASS &lv_obj_class
  41:lvgl/src/core/lv_obj.c **** #define LV_OBJ_DEF_WIDTH    (LV_DPX(100))
  42:lvgl/src/core/lv_obj.c **** #define LV_OBJ_DEF_HEIGHT   (LV_DPX(50))
  43:lvgl/src/core/lv_obj.c **** #define GRID_DEBUG          0   /*Draw rectangles on grid cells*/
  44:lvgl/src/core/lv_obj.c **** #define STYLE_TRANSITION_MAX 32
  45:lvgl/src/core/lv_obj.c **** 
  46:lvgl/src/core/lv_obj.c **** /**********************
  47:lvgl/src/core/lv_obj.c ****  *      TYPEDEFS
  48:lvgl/src/core/lv_obj.c ****  **********************/
  49:lvgl/src/core/lv_obj.c **** 
  50:lvgl/src/core/lv_obj.c **** /**********************
  51:lvgl/src/core/lv_obj.c ****  *  STATIC PROTOTYPES
  52:lvgl/src/core/lv_obj.c ****  **********************/
  53:lvgl/src/core/lv_obj.c **** static void lv_obj_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj);
  54:lvgl/src/core/lv_obj.c **** static void lv_obj_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj);
  55:lvgl/src/core/lv_obj.c **** static void lv_obj_draw(lv_event_t * e);
  56:lvgl/src/core/lv_obj.c **** static void lv_obj_event(const lv_obj_class_t * class_p, lv_event_t * e);
  57:lvgl/src/core/lv_obj.c **** static void draw_scrollbar(lv_obj_t * obj, lv_draw_ctx_t * draw_ctx);
  58:lvgl/src/core/lv_obj.c **** static lv_res_t scrollbar_init_draw_dsc(lv_obj_t * obj, lv_draw_rect_dsc_t * dsc);
  59:lvgl/src/core/lv_obj.c **** static bool obj_valid_child(const lv_obj_t * parent, const lv_obj_t * obj_to_find);
  60:lvgl/src/core/lv_obj.c **** static void lv_obj_set_state(lv_obj_t * obj, lv_state_t new_state);
  61:lvgl/src/core/lv_obj.c **** 
  62:lvgl/src/core/lv_obj.c **** /**********************
  63:lvgl/src/core/lv_obj.c ****  *  STATIC VARIABLES
  64:lvgl/src/core/lv_obj.c ****  **********************/
  65:lvgl/src/core/lv_obj.c **** static bool lv_initialized = false;
  66:lvgl/src/core/lv_obj.c **** const lv_obj_class_t lv_obj_class = {
  67:lvgl/src/core/lv_obj.c ****     .constructor_cb = lv_obj_constructor,
  68:lvgl/src/core/lv_obj.c ****     .destructor_cb = lv_obj_destructor,
  69:lvgl/src/core/lv_obj.c ****     .event_cb = lv_obj_event,
  70:lvgl/src/core/lv_obj.c ****     .width_def = LV_DPI_DEF,
  71:lvgl/src/core/lv_obj.c ****     .height_def = LV_DPI_DEF,
  72:lvgl/src/core/lv_obj.c ****     .editable = LV_OBJ_CLASS_EDITABLE_FALSE,
  73:lvgl/src/core/lv_obj.c ****     .group_def = LV_OBJ_CLASS_GROUP_DEF_FALSE,
  74:lvgl/src/core/lv_obj.c ****     .instance_size = (sizeof(lv_obj_t)),
  75:lvgl/src/core/lv_obj.c ****     .base_class = NULL,
  76:lvgl/src/core/lv_obj.c **** };
  77:lvgl/src/core/lv_obj.c **** 
  78:lvgl/src/core/lv_obj.c **** /**********************
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 14


  79:lvgl/src/core/lv_obj.c ****  *      MACROS
  80:lvgl/src/core/lv_obj.c ****  **********************/
  81:lvgl/src/core/lv_obj.c **** 
  82:lvgl/src/core/lv_obj.c **** /**********************
  83:lvgl/src/core/lv_obj.c ****  *   GLOBAL FUNCTIONS
  84:lvgl/src/core/lv_obj.c ****  **********************/
  85:lvgl/src/core/lv_obj.c **** 
  86:lvgl/src/core/lv_obj.c **** bool lv_is_initialized(void)
  87:lvgl/src/core/lv_obj.c **** {
  88:lvgl/src/core/lv_obj.c ****     return lv_initialized;
  89:lvgl/src/core/lv_obj.c **** }
  90:lvgl/src/core/lv_obj.c **** 
  91:lvgl/src/core/lv_obj.c **** void lv_init(void)
  92:lvgl/src/core/lv_obj.c **** {
  93:lvgl/src/core/lv_obj.c ****     /*Do nothing if already initialized*/
  94:lvgl/src/core/lv_obj.c ****     if(lv_initialized) {
  95:lvgl/src/core/lv_obj.c ****         LV_LOG_WARN("lv_init: already inited");
  96:lvgl/src/core/lv_obj.c ****         return;
  97:lvgl/src/core/lv_obj.c ****     }
  98:lvgl/src/core/lv_obj.c **** 
  99:lvgl/src/core/lv_obj.c ****     LV_LOG_INFO("begin");
 100:lvgl/src/core/lv_obj.c **** 
 101:lvgl/src/core/lv_obj.c ****     /*Initialize the misc modules*/
 102:lvgl/src/core/lv_obj.c ****     lv_mem_init();
 103:lvgl/src/core/lv_obj.c **** 
 104:lvgl/src/core/lv_obj.c ****     _lv_timer_core_init();
 105:lvgl/src/core/lv_obj.c **** 
 106:lvgl/src/core/lv_obj.c ****     _lv_fs_init();
 107:lvgl/src/core/lv_obj.c **** 
 108:lvgl/src/core/lv_obj.c ****     _lv_anim_core_init();
 109:lvgl/src/core/lv_obj.c **** 
 110:lvgl/src/core/lv_obj.c ****     _lv_group_init();
 111:lvgl/src/core/lv_obj.c **** 
 112:lvgl/src/core/lv_obj.c ****     lv_draw_init();
 113:lvgl/src/core/lv_obj.c **** 
 114:lvgl/src/core/lv_obj.c **** #if LV_USE_GPU_STM32_DMA2D
 115:lvgl/src/core/lv_obj.c ****     /*Initialize DMA2D GPU*/
 116:lvgl/src/core/lv_obj.c ****     lv_draw_stm32_dma2d_init();
 117:lvgl/src/core/lv_obj.c **** #endif
 118:lvgl/src/core/lv_obj.c **** 
 119:lvgl/src/core/lv_obj.c **** #if LV_USE_GPU_NXP_PXP && LV_USE_GPU_NXP_PXP_AUTO_INIT
 120:lvgl/src/core/lv_obj.c ****     PXP_COND_STOP(!lv_gpu_nxp_pxp_init(), "PXP init failed.");
 121:lvgl/src/core/lv_obj.c **** #endif
 122:lvgl/src/core/lv_obj.c **** 
 123:lvgl/src/core/lv_obj.c ****     _lv_obj_style_init();
 124:lvgl/src/core/lv_obj.c ****     _lv_ll_init(&LV_GC_ROOT(_lv_disp_ll), sizeof(lv_disp_t));
 125:lvgl/src/core/lv_obj.c ****     _lv_ll_init(&LV_GC_ROOT(_lv_indev_ll), sizeof(lv_indev_t));
 126:lvgl/src/core/lv_obj.c **** 
 127:lvgl/src/core/lv_obj.c ****     /*Initialize the screen refresh system*/
 128:lvgl/src/core/lv_obj.c ****     _lv_refr_init();
 129:lvgl/src/core/lv_obj.c **** 
 130:lvgl/src/core/lv_obj.c ****     _lv_img_decoder_init();
 131:lvgl/src/core/lv_obj.c **** #if LV_IMG_CACHE_DEF_SIZE
 132:lvgl/src/core/lv_obj.c ****     lv_img_cache_set_size(LV_IMG_CACHE_DEF_SIZE);
 133:lvgl/src/core/lv_obj.c **** #endif
 134:lvgl/src/core/lv_obj.c ****     /*Test if the IDE has UTF-8 encoding*/
 135:lvgl/src/core/lv_obj.c ****     char * txt = "Á";
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 15


 136:lvgl/src/core/lv_obj.c **** 
 137:lvgl/src/core/lv_obj.c ****     uint8_t * txt_u8 = (uint8_t *)txt;
 138:lvgl/src/core/lv_obj.c ****     if(txt_u8[0] != 0xc3 || txt_u8[1] != 0x81 || txt_u8[2] != 0x00) {
 139:lvgl/src/core/lv_obj.c ****         LV_LOG_WARN("The strings have no UTF-8 encoding. Non-ASCII characters won't be displayed.")
 140:lvgl/src/core/lv_obj.c ****     }
 141:lvgl/src/core/lv_obj.c **** 
 142:lvgl/src/core/lv_obj.c ****     uint32_t endianess_test = 0x11223344;
 143:lvgl/src/core/lv_obj.c ****     uint8_t * endianess_test_p = (uint8_t *) &endianess_test;
 144:lvgl/src/core/lv_obj.c ****     bool big_endian = endianess_test_p[0] == 0x11 ? true : false;
 145:lvgl/src/core/lv_obj.c **** 
 146:lvgl/src/core/lv_obj.c ****     if(big_endian) {
 147:lvgl/src/core/lv_obj.c ****         LV_ASSERT_MSG(LV_BIG_ENDIAN_SYSTEM == 1,
 148:lvgl/src/core/lv_obj.c ****                       "It's a big endian system but LV_BIG_ENDIAN_SYSTEM is not enabled in lv_conf.
 149:lvgl/src/core/lv_obj.c ****     }
 150:lvgl/src/core/lv_obj.c ****     else {
 151:lvgl/src/core/lv_obj.c ****         LV_ASSERT_MSG(LV_BIG_ENDIAN_SYSTEM == 0,
 152:lvgl/src/core/lv_obj.c ****                       "It's a little endian system but LV_BIG_ENDIAN_SYSTEM is enabled in lv_conf.h
 153:lvgl/src/core/lv_obj.c ****     }
 154:lvgl/src/core/lv_obj.c **** 
 155:lvgl/src/core/lv_obj.c **** #if LV_USE_ASSERT_MEM_INTEGRITY
 156:lvgl/src/core/lv_obj.c ****     LV_LOG_WARN("Memory integrity checks are enabled via LV_USE_ASSERT_MEM_INTEGRITY which makes LV
 157:lvgl/src/core/lv_obj.c **** #endif
 158:lvgl/src/core/lv_obj.c **** 
 159:lvgl/src/core/lv_obj.c **** #if LV_USE_ASSERT_OBJ
 160:lvgl/src/core/lv_obj.c ****     LV_LOG_WARN("Object sanity checks are enabled via LV_USE_ASSERT_OBJ which makes LVGL much slowe
 161:lvgl/src/core/lv_obj.c **** #endif
 162:lvgl/src/core/lv_obj.c **** 
 163:lvgl/src/core/lv_obj.c **** #if LV_USE_ASSERT_STYLE
 164:lvgl/src/core/lv_obj.c ****     LV_LOG_WARN("Style sanity checks are enabled that uses more RAM");
 165:lvgl/src/core/lv_obj.c **** #endif
 166:lvgl/src/core/lv_obj.c **** 
 167:lvgl/src/core/lv_obj.c **** #if LV_LOG_LEVEL == LV_LOG_LEVEL_TRACE
 168:lvgl/src/core/lv_obj.c ****     LV_LOG_WARN("Log level is set to 'Trace' which makes LVGL much slower");
 169:lvgl/src/core/lv_obj.c **** #endif
 170:lvgl/src/core/lv_obj.c **** 
 171:lvgl/src/core/lv_obj.c ****     lv_extra_init();
 172:lvgl/src/core/lv_obj.c **** 
 173:lvgl/src/core/lv_obj.c ****     lv_initialized = true;
 174:lvgl/src/core/lv_obj.c **** 
 175:lvgl/src/core/lv_obj.c ****     LV_LOG_TRACE("finished");
 176:lvgl/src/core/lv_obj.c **** }
 177:lvgl/src/core/lv_obj.c **** 
 178:lvgl/src/core/lv_obj.c **** #if LV_ENABLE_GC || !LV_MEM_CUSTOM
 179:lvgl/src/core/lv_obj.c **** 
 180:lvgl/src/core/lv_obj.c **** void lv_deinit(void)
 181:lvgl/src/core/lv_obj.c **** {
 182:lvgl/src/core/lv_obj.c ****     _lv_gc_clear_roots();
 183:lvgl/src/core/lv_obj.c **** 
 184:lvgl/src/core/lv_obj.c ****     lv_disp_set_default(NULL);
 185:lvgl/src/core/lv_obj.c ****     lv_mem_deinit();
 186:lvgl/src/core/lv_obj.c ****     lv_initialized = false;
 187:lvgl/src/core/lv_obj.c **** 
 188:lvgl/src/core/lv_obj.c ****     LV_LOG_INFO("lv_deinit done");
 189:lvgl/src/core/lv_obj.c **** 
 190:lvgl/src/core/lv_obj.c **** #if LV_USE_LOG
 191:lvgl/src/core/lv_obj.c ****     lv_log_register_print_cb(NULL);
 192:lvgl/src/core/lv_obj.c **** #endif
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 16


 193:lvgl/src/core/lv_obj.c **** }
 194:lvgl/src/core/lv_obj.c **** #endif
 195:lvgl/src/core/lv_obj.c **** 
 196:lvgl/src/core/lv_obj.c **** lv_obj_t * lv_obj_create(lv_obj_t * parent)
 197:lvgl/src/core/lv_obj.c **** {
 198:lvgl/src/core/lv_obj.c ****     LV_LOG_INFO("begin");
 199:lvgl/src/core/lv_obj.c ****     lv_obj_t * obj = lv_obj_class_create_obj(MY_CLASS, parent);
 200:lvgl/src/core/lv_obj.c ****     lv_obj_class_init_obj(obj);
 201:lvgl/src/core/lv_obj.c ****     return obj;
 202:lvgl/src/core/lv_obj.c **** }
 203:lvgl/src/core/lv_obj.c **** 
 204:lvgl/src/core/lv_obj.c **** /*=====================
 205:lvgl/src/core/lv_obj.c ****  * Setter functions
 206:lvgl/src/core/lv_obj.c ****  *====================*/
 207:lvgl/src/core/lv_obj.c **** 
 208:lvgl/src/core/lv_obj.c **** /*-----------------
 209:lvgl/src/core/lv_obj.c ****  * Attribute set
 210:lvgl/src/core/lv_obj.c ****  *----------------*/
 211:lvgl/src/core/lv_obj.c **** 
 212:lvgl/src/core/lv_obj.c **** void lv_obj_add_flag(lv_obj_t * obj, lv_obj_flag_t f)
 213:lvgl/src/core/lv_obj.c **** {
 214:lvgl/src/core/lv_obj.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 215:lvgl/src/core/lv_obj.c **** 
 216:lvgl/src/core/lv_obj.c ****     bool was_on_layout = lv_obj_is_layout_positioned(obj);
 217:lvgl/src/core/lv_obj.c **** 
 218:lvgl/src/core/lv_obj.c ****     if(f & LV_OBJ_FLAG_HIDDEN) lv_obj_invalidate(obj);
 219:lvgl/src/core/lv_obj.c **** 
 220:lvgl/src/core/lv_obj.c ****     obj->flags |= f;
 221:lvgl/src/core/lv_obj.c **** 
 222:lvgl/src/core/lv_obj.c ****     if(f & LV_OBJ_FLAG_HIDDEN) {
 223:lvgl/src/core/lv_obj.c ****         lv_obj_invalidate(obj);
 224:lvgl/src/core/lv_obj.c ****     }
 225:lvgl/src/core/lv_obj.c **** 
 226:lvgl/src/core/lv_obj.c ****     if((was_on_layout != lv_obj_is_layout_positioned(obj)) || (f & (LV_OBJ_FLAG_LAYOUT_1 |  LV_OBJ_
 227:lvgl/src/core/lv_obj.c ****         lv_obj_mark_layout_as_dirty(lv_obj_get_parent(obj));
 228:lvgl/src/core/lv_obj.c ****         lv_obj_mark_layout_as_dirty(obj);
 229:lvgl/src/core/lv_obj.c ****     }
 230:lvgl/src/core/lv_obj.c **** 
 231:lvgl/src/core/lv_obj.c ****     if(f & LV_OBJ_FLAG_SCROLLABLE) {
 232:lvgl/src/core/lv_obj.c ****         lv_area_t hor_area, ver_area;
 233:lvgl/src/core/lv_obj.c ****         lv_obj_get_scrollbar_area(obj, &hor_area, &ver_area);
 234:lvgl/src/core/lv_obj.c ****         lv_obj_invalidate_area(obj, &hor_area);
 235:lvgl/src/core/lv_obj.c ****         lv_obj_invalidate_area(obj, &ver_area);
 236:lvgl/src/core/lv_obj.c ****     }
 237:lvgl/src/core/lv_obj.c **** }
 238:lvgl/src/core/lv_obj.c **** 
 239:lvgl/src/core/lv_obj.c **** void lv_obj_clear_flag(lv_obj_t * obj, lv_obj_flag_t f)
 240:lvgl/src/core/lv_obj.c **** {
 241:lvgl/src/core/lv_obj.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 242:lvgl/src/core/lv_obj.c **** 
 243:lvgl/src/core/lv_obj.c ****     bool was_on_layout = lv_obj_is_layout_positioned(obj);
 244:lvgl/src/core/lv_obj.c ****     if(f & LV_OBJ_FLAG_SCROLLABLE) {
 245:lvgl/src/core/lv_obj.c ****         lv_area_t hor_area, ver_area;
 246:lvgl/src/core/lv_obj.c ****         lv_obj_get_scrollbar_area(obj, &hor_area, &ver_area);
 247:lvgl/src/core/lv_obj.c ****         lv_obj_invalidate_area(obj, &hor_area);
 248:lvgl/src/core/lv_obj.c ****         lv_obj_invalidate_area(obj, &ver_area);
 249:lvgl/src/core/lv_obj.c ****     }
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 17


 250:lvgl/src/core/lv_obj.c **** 
 251:lvgl/src/core/lv_obj.c ****     obj->flags &= (~f);
 252:lvgl/src/core/lv_obj.c **** 
 253:lvgl/src/core/lv_obj.c ****     if(f & LV_OBJ_FLAG_HIDDEN) {
 254:lvgl/src/core/lv_obj.c ****         lv_obj_invalidate(obj);
 255:lvgl/src/core/lv_obj.c ****         if(lv_obj_is_layout_positioned(obj)) {
 256:lvgl/src/core/lv_obj.c ****             lv_obj_mark_layout_as_dirty(lv_obj_get_parent(obj));
 257:lvgl/src/core/lv_obj.c ****             lv_obj_mark_layout_as_dirty(obj);
 258:lvgl/src/core/lv_obj.c ****         }
 259:lvgl/src/core/lv_obj.c ****     }
 260:lvgl/src/core/lv_obj.c **** 
 261:lvgl/src/core/lv_obj.c ****     if((was_on_layout != lv_obj_is_layout_positioned(obj)) || (f & (LV_OBJ_FLAG_LAYOUT_1 |  LV_OBJ_
 262:lvgl/src/core/lv_obj.c ****         lv_obj_mark_layout_as_dirty(lv_obj_get_parent(obj));
 263:lvgl/src/core/lv_obj.c ****     }
 264:lvgl/src/core/lv_obj.c **** }
 265:lvgl/src/core/lv_obj.c **** 
 266:lvgl/src/core/lv_obj.c **** void lv_obj_add_state(lv_obj_t * obj, lv_state_t state)
 267:lvgl/src/core/lv_obj.c **** {
 268:lvgl/src/core/lv_obj.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 269:lvgl/src/core/lv_obj.c **** 
 270:lvgl/src/core/lv_obj.c ****     lv_state_t new_state = obj->state | state;
 271:lvgl/src/core/lv_obj.c ****     if(obj->state != new_state) {
 272:lvgl/src/core/lv_obj.c ****         lv_obj_set_state(obj, new_state);
 273:lvgl/src/core/lv_obj.c ****     }
 274:lvgl/src/core/lv_obj.c **** }
 275:lvgl/src/core/lv_obj.c **** 
 276:lvgl/src/core/lv_obj.c **** void lv_obj_clear_state(lv_obj_t * obj, lv_state_t state)
 277:lvgl/src/core/lv_obj.c **** {
 278:lvgl/src/core/lv_obj.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 279:lvgl/src/core/lv_obj.c **** 
 280:lvgl/src/core/lv_obj.c ****     lv_state_t new_state = obj->state & (~state);
 281:lvgl/src/core/lv_obj.c ****     if(obj->state != new_state) {
 282:lvgl/src/core/lv_obj.c ****         lv_obj_set_state(obj, new_state);
 283:lvgl/src/core/lv_obj.c ****     }
 284:lvgl/src/core/lv_obj.c **** }
 285:lvgl/src/core/lv_obj.c **** 
 286:lvgl/src/core/lv_obj.c **** /*=======================
 287:lvgl/src/core/lv_obj.c ****  * Getter functions
 288:lvgl/src/core/lv_obj.c ****  *======================*/
 289:lvgl/src/core/lv_obj.c **** 
 290:lvgl/src/core/lv_obj.c **** bool lv_obj_has_flag(const lv_obj_t * obj, lv_obj_flag_t f)
 291:lvgl/src/core/lv_obj.c **** {
 292:lvgl/src/core/lv_obj.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 293:lvgl/src/core/lv_obj.c **** 
 294:lvgl/src/core/lv_obj.c ****     return (obj->flags & f)  == f ? true : false;
 295:lvgl/src/core/lv_obj.c **** }
 296:lvgl/src/core/lv_obj.c **** 
 297:lvgl/src/core/lv_obj.c **** bool lv_obj_has_flag_any(const lv_obj_t * obj, lv_obj_flag_t f)
 298:lvgl/src/core/lv_obj.c **** {
 299:lvgl/src/core/lv_obj.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 300:lvgl/src/core/lv_obj.c **** 
 301:lvgl/src/core/lv_obj.c ****     return (obj->flags & f) ? true : false;
 302:lvgl/src/core/lv_obj.c **** }
 303:lvgl/src/core/lv_obj.c **** 
 304:lvgl/src/core/lv_obj.c **** lv_state_t lv_obj_get_state(const lv_obj_t * obj)
 305:lvgl/src/core/lv_obj.c **** {
 306:lvgl/src/core/lv_obj.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 18


 307:lvgl/src/core/lv_obj.c **** 
 308:lvgl/src/core/lv_obj.c ****     return obj->state;
 309:lvgl/src/core/lv_obj.c **** }
 310:lvgl/src/core/lv_obj.c **** 
 311:lvgl/src/core/lv_obj.c **** bool lv_obj_has_state(const lv_obj_t * obj, lv_state_t state)
 312:lvgl/src/core/lv_obj.c **** {
 313:lvgl/src/core/lv_obj.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 314:lvgl/src/core/lv_obj.c **** 
 315:lvgl/src/core/lv_obj.c ****     return obj->state & state ? true : false;
 316:lvgl/src/core/lv_obj.c **** }
 317:lvgl/src/core/lv_obj.c **** 
 318:lvgl/src/core/lv_obj.c **** void * lv_obj_get_group(const lv_obj_t * obj)
 319:lvgl/src/core/lv_obj.c **** {
 320:lvgl/src/core/lv_obj.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 321:lvgl/src/core/lv_obj.c **** 
 322:lvgl/src/core/lv_obj.c ****     if(obj->spec_attr) return obj->spec_attr->group_p;
 323:lvgl/src/core/lv_obj.c ****     else return NULL;
 324:lvgl/src/core/lv_obj.c **** }
 325:lvgl/src/core/lv_obj.c **** 
 326:lvgl/src/core/lv_obj.c **** /*-------------------
 327:lvgl/src/core/lv_obj.c ****  * OTHER FUNCTIONS
 328:lvgl/src/core/lv_obj.c ****  *------------------*/
 329:lvgl/src/core/lv_obj.c **** 
 330:lvgl/src/core/lv_obj.c **** void lv_obj_allocate_spec_attr(lv_obj_t * obj)
 331:lvgl/src/core/lv_obj.c **** {
 332:lvgl/src/core/lv_obj.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 333:lvgl/src/core/lv_obj.c **** 
 334:lvgl/src/core/lv_obj.c ****     if(obj->spec_attr == NULL) {
 335:lvgl/src/core/lv_obj.c ****         static uint32_t x = 0;
 336:lvgl/src/core/lv_obj.c ****         x++;
 337:lvgl/src/core/lv_obj.c ****         obj->spec_attr = lv_mem_alloc(sizeof(_lv_obj_spec_attr_t));
 338:lvgl/src/core/lv_obj.c ****         LV_ASSERT_MALLOC(obj->spec_attr);
 339:lvgl/src/core/lv_obj.c ****         if(obj->spec_attr == NULL) return;
 340:lvgl/src/core/lv_obj.c **** 
 341:lvgl/src/core/lv_obj.c ****         lv_memset_00(obj->spec_attr, sizeof(_lv_obj_spec_attr_t));
 342:lvgl/src/core/lv_obj.c **** 
 343:lvgl/src/core/lv_obj.c ****         obj->spec_attr->scroll_dir = LV_DIR_ALL;
 344:lvgl/src/core/lv_obj.c ****         obj->spec_attr->scrollbar_mode = LV_SCROLLBAR_MODE_AUTO;
 345:lvgl/src/core/lv_obj.c ****     }
 346:lvgl/src/core/lv_obj.c **** }
 347:lvgl/src/core/lv_obj.c **** 
 348:lvgl/src/core/lv_obj.c **** bool lv_obj_check_type(const lv_obj_t * obj, const lv_obj_class_t * class_p)
 349:lvgl/src/core/lv_obj.c **** {
 350:lvgl/src/core/lv_obj.c ****     if(obj == NULL) return false;
 351:lvgl/src/core/lv_obj.c ****     return obj->class_p == class_p ? true : false;
 352:lvgl/src/core/lv_obj.c **** }
 353:lvgl/src/core/lv_obj.c **** 
 354:lvgl/src/core/lv_obj.c **** bool lv_obj_has_class(const lv_obj_t * obj, const lv_obj_class_t * class_p)
 355:lvgl/src/core/lv_obj.c **** {
 356:lvgl/src/core/lv_obj.c ****     const lv_obj_class_t * obj_class = obj->class_p;
 357:lvgl/src/core/lv_obj.c ****     while(obj_class) {
 358:lvgl/src/core/lv_obj.c ****         if(obj_class == class_p) return true;
 359:lvgl/src/core/lv_obj.c ****         obj_class = obj_class->base_class;
 360:lvgl/src/core/lv_obj.c ****     }
 361:lvgl/src/core/lv_obj.c **** 
 362:lvgl/src/core/lv_obj.c ****     return false;
 363:lvgl/src/core/lv_obj.c **** }
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 19


 364:lvgl/src/core/lv_obj.c **** 
 365:lvgl/src/core/lv_obj.c **** const lv_obj_class_t * lv_obj_get_class(const lv_obj_t * obj)
 366:lvgl/src/core/lv_obj.c **** {
 367:lvgl/src/core/lv_obj.c ****     return obj->class_p;
 368:lvgl/src/core/lv_obj.c **** }
 369:lvgl/src/core/lv_obj.c **** 
 370:lvgl/src/core/lv_obj.c **** bool lv_obj_is_valid(const lv_obj_t * obj)
 371:lvgl/src/core/lv_obj.c **** {
 372:lvgl/src/core/lv_obj.c ****     lv_disp_t * disp = lv_disp_get_next(NULL);
 373:lvgl/src/core/lv_obj.c ****     while(disp) {
 374:lvgl/src/core/lv_obj.c ****         uint32_t i;
 375:lvgl/src/core/lv_obj.c ****         for(i = 0; i < disp->screen_cnt; i++) {
 376:lvgl/src/core/lv_obj.c ****             if(disp->screens[i] == obj) return true;
 377:lvgl/src/core/lv_obj.c ****             bool found = obj_valid_child(disp->screens[i], obj);
 378:lvgl/src/core/lv_obj.c ****             if(found) return true;
 379:lvgl/src/core/lv_obj.c ****         }
 380:lvgl/src/core/lv_obj.c **** 
 381:lvgl/src/core/lv_obj.c ****         disp = lv_disp_get_next(disp);
 382:lvgl/src/core/lv_obj.c ****     }
 383:lvgl/src/core/lv_obj.c **** 
 384:lvgl/src/core/lv_obj.c ****     return false;
 385:lvgl/src/core/lv_obj.c **** }
 386:lvgl/src/core/lv_obj.c **** 
 387:lvgl/src/core/lv_obj.c **** /**********************
 388:lvgl/src/core/lv_obj.c ****  *   STATIC FUNCTIONS
 389:lvgl/src/core/lv_obj.c ****  **********************/
 390:lvgl/src/core/lv_obj.c **** 
 391:lvgl/src/core/lv_obj.c **** static void lv_obj_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)
 392:lvgl/src/core/lv_obj.c **** {
 393:lvgl/src/core/lv_obj.c ****     LV_UNUSED(class_p);
 394:lvgl/src/core/lv_obj.c ****     LV_TRACE_OBJ_CREATE("begin");
 395:lvgl/src/core/lv_obj.c **** 
 396:lvgl/src/core/lv_obj.c ****     lv_obj_t * parent = obj->parent;
 397:lvgl/src/core/lv_obj.c ****     if(parent) {
 398:lvgl/src/core/lv_obj.c ****         lv_coord_t sl = lv_obj_get_scroll_left(parent);
 399:lvgl/src/core/lv_obj.c ****         lv_coord_t st = lv_obj_get_scroll_top(parent);
 400:lvgl/src/core/lv_obj.c **** 
 401:lvgl/src/core/lv_obj.c ****         obj->coords.y1 = parent->coords.y1 + lv_obj_get_style_pad_top(parent, LV_PART_MAIN) - st;
 402:lvgl/src/core/lv_obj.c ****         obj->coords.y2 = obj->coords.y1 - 1;
 403:lvgl/src/core/lv_obj.c ****         obj->coords.x1  = parent->coords.x1 + lv_obj_get_style_pad_left(parent, LV_PART_MAIN) - sl;
 404:lvgl/src/core/lv_obj.c ****         obj->coords.x2  = obj->coords.x1 - 1;
 405:lvgl/src/core/lv_obj.c ****     }
 406:lvgl/src/core/lv_obj.c **** 
 407:lvgl/src/core/lv_obj.c ****     /*Set attributes*/
 408:lvgl/src/core/lv_obj.c ****     obj->flags = LV_OBJ_FLAG_CLICKABLE;
 409:lvgl/src/core/lv_obj.c ****     obj->flags |= LV_OBJ_FLAG_SNAPPABLE;
 410:lvgl/src/core/lv_obj.c ****     if(parent) obj->flags |= LV_OBJ_FLAG_PRESS_LOCK;
 411:lvgl/src/core/lv_obj.c ****     if(parent) obj->flags |= LV_OBJ_FLAG_SCROLL_CHAIN;
 412:lvgl/src/core/lv_obj.c ****     obj->flags |= LV_OBJ_FLAG_CLICK_FOCUSABLE;
 413:lvgl/src/core/lv_obj.c ****     obj->flags |= LV_OBJ_FLAG_SCROLLABLE;
 414:lvgl/src/core/lv_obj.c ****     obj->flags |= LV_OBJ_FLAG_SCROLL_ELASTIC;
 415:lvgl/src/core/lv_obj.c ****     obj->flags |= LV_OBJ_FLAG_SCROLL_MOMENTUM;
 416:lvgl/src/core/lv_obj.c ****     obj->flags |= LV_OBJ_FLAG_SCROLL_WITH_ARROW;
 417:lvgl/src/core/lv_obj.c ****     if(parent) obj->flags |= LV_OBJ_FLAG_GESTURE_BUBBLE;
 418:lvgl/src/core/lv_obj.c **** 
 419:lvgl/src/core/lv_obj.c ****     LV_TRACE_OBJ_CREATE("finished");
 420:lvgl/src/core/lv_obj.c **** }
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 20


 421:lvgl/src/core/lv_obj.c **** 
 422:lvgl/src/core/lv_obj.c **** static void lv_obj_destructor(const lv_obj_class_t * class_p, lv_obj_t * obj)
 423:lvgl/src/core/lv_obj.c **** {
 424:lvgl/src/core/lv_obj.c ****     LV_UNUSED(class_p);
 425:lvgl/src/core/lv_obj.c **** 
 426:lvgl/src/core/lv_obj.c ****     _lv_event_mark_deleted(obj);
 427:lvgl/src/core/lv_obj.c **** 
 428:lvgl/src/core/lv_obj.c ****     /*Remove all style*/
 429:lvgl/src/core/lv_obj.c ****     lv_obj_enable_style_refresh(false); /*No need to refresh the style because the object will be d
 430:lvgl/src/core/lv_obj.c ****     lv_obj_remove_style_all(obj);
 431:lvgl/src/core/lv_obj.c ****     lv_obj_enable_style_refresh(true);
 432:lvgl/src/core/lv_obj.c **** 
 433:lvgl/src/core/lv_obj.c ****     /*Remove the animations from this object*/
 434:lvgl/src/core/lv_obj.c ****     lv_anim_del(obj, NULL);
 435:lvgl/src/core/lv_obj.c **** 
 436:lvgl/src/core/lv_obj.c ****     /*Delete from the group*/
 437:lvgl/src/core/lv_obj.c ****     lv_group_t * group = lv_obj_get_group(obj);
 438:lvgl/src/core/lv_obj.c ****     if(group) lv_group_remove_obj(obj);
 439:lvgl/src/core/lv_obj.c **** 
 440:lvgl/src/core/lv_obj.c ****     if(obj->spec_attr) {
 441:lvgl/src/core/lv_obj.c ****         if(obj->spec_attr->children) {
 442:lvgl/src/core/lv_obj.c ****             lv_mem_free(obj->spec_attr->children);
 443:lvgl/src/core/lv_obj.c ****             obj->spec_attr->children = NULL;
 444:lvgl/src/core/lv_obj.c ****         }
 445:lvgl/src/core/lv_obj.c ****         if(obj->spec_attr->event_dsc) {
 446:lvgl/src/core/lv_obj.c ****             lv_mem_free(obj->spec_attr->event_dsc);
 447:lvgl/src/core/lv_obj.c ****             obj->spec_attr->event_dsc = NULL;
 448:lvgl/src/core/lv_obj.c ****         }
 449:lvgl/src/core/lv_obj.c **** 
 450:lvgl/src/core/lv_obj.c ****         lv_mem_free(obj->spec_attr);
 451:lvgl/src/core/lv_obj.c ****         obj->spec_attr = NULL;
 452:lvgl/src/core/lv_obj.c ****     }
 453:lvgl/src/core/lv_obj.c **** }
 454:lvgl/src/core/lv_obj.c **** 
 455:lvgl/src/core/lv_obj.c **** static void lv_obj_draw(lv_event_t * e)
 456:lvgl/src/core/lv_obj.c **** {
 457:lvgl/src/core/lv_obj.c ****     lv_event_code_t code = lv_event_get_code(e);
 458:lvgl/src/core/lv_obj.c ****     lv_obj_t * obj = lv_event_get_target(e);
 459:lvgl/src/core/lv_obj.c ****     if(code == LV_EVENT_COVER_CHECK) {
 460:lvgl/src/core/lv_obj.c ****         lv_cover_check_info_t * info = lv_event_get_param(e);
 461:lvgl/src/core/lv_obj.c ****         if(info->res == LV_COVER_RES_MASKED) return;
 462:lvgl/src/core/lv_obj.c ****         if(lv_obj_get_style_clip_corner(obj, LV_PART_MAIN)) {
 463:lvgl/src/core/lv_obj.c ****             info->res = LV_COVER_RES_MASKED;
 464:lvgl/src/core/lv_obj.c ****             return;
 465:lvgl/src/core/lv_obj.c ****         }
 466:lvgl/src/core/lv_obj.c **** 
 467:lvgl/src/core/lv_obj.c ****         /*Most trivial test. Is the mask fully IN the object? If no it surely doesn't cover it*/
 468:lvgl/src/core/lv_obj.c ****         lv_coord_t r = lv_obj_get_style_radius(obj, LV_PART_MAIN);
 469:lvgl/src/core/lv_obj.c ****         lv_coord_t w = lv_obj_get_style_transform_width(obj, LV_PART_MAIN);
 470:lvgl/src/core/lv_obj.c ****         lv_coord_t h = lv_obj_get_style_transform_height(obj, LV_PART_MAIN);
 471:lvgl/src/core/lv_obj.c ****         lv_area_t coords;
 472:lvgl/src/core/lv_obj.c ****         lv_area_copy(&coords, &obj->coords);
 473:lvgl/src/core/lv_obj.c ****         coords.x1 -= w;
 474:lvgl/src/core/lv_obj.c ****         coords.x2 += w;
 475:lvgl/src/core/lv_obj.c ****         coords.y1 -= h;
 476:lvgl/src/core/lv_obj.c ****         coords.y2 += h;
 477:lvgl/src/core/lv_obj.c **** 
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 21


 478:lvgl/src/core/lv_obj.c ****         if(_lv_area_is_in(info->area, &coords, r) == false) {
 479:lvgl/src/core/lv_obj.c ****             info->res = LV_COVER_RES_NOT_COVER;
 480:lvgl/src/core/lv_obj.c ****             return;
 481:lvgl/src/core/lv_obj.c ****         }
 482:lvgl/src/core/lv_obj.c **** 
 483:lvgl/src/core/lv_obj.c ****         if(lv_obj_get_style_bg_opa(obj, LV_PART_MAIN) < LV_OPA_MAX) {
 484:lvgl/src/core/lv_obj.c ****             info->res = LV_COVER_RES_NOT_COVER;
 485:lvgl/src/core/lv_obj.c ****             return;
 486:lvgl/src/core/lv_obj.c ****         }
 487:lvgl/src/core/lv_obj.c **** 
 488:lvgl/src/core/lv_obj.c **** #if LV_DRAW_COMPLEX
 489:lvgl/src/core/lv_obj.c ****         if(lv_obj_get_style_blend_mode(obj, LV_PART_MAIN) != LV_BLEND_MODE_NORMAL) {
 490:lvgl/src/core/lv_obj.c ****             info->res = LV_COVER_RES_NOT_COVER;
 491:lvgl/src/core/lv_obj.c ****             return;
 492:lvgl/src/core/lv_obj.c ****         }
 493:lvgl/src/core/lv_obj.c **** #endif
 494:lvgl/src/core/lv_obj.c ****         if(lv_obj_get_style_opa(obj, LV_PART_MAIN) < LV_OPA_MAX) {
 495:lvgl/src/core/lv_obj.c ****             info->res = LV_COVER_RES_NOT_COVER;
 496:lvgl/src/core/lv_obj.c ****             return;
 497:lvgl/src/core/lv_obj.c ****         }
 498:lvgl/src/core/lv_obj.c **** 
 499:lvgl/src/core/lv_obj.c ****         info->res = LV_COVER_RES_COVER;
 500:lvgl/src/core/lv_obj.c **** 
 501:lvgl/src/core/lv_obj.c ****     }
 502:lvgl/src/core/lv_obj.c ****     else if(code == LV_EVENT_DRAW_MAIN) {
 503:lvgl/src/core/lv_obj.c ****         lv_draw_ctx_t * draw_ctx = lv_event_get_draw_ctx(e);
 504:lvgl/src/core/lv_obj.c ****         lv_draw_rect_dsc_t draw_dsc;
 505:lvgl/src/core/lv_obj.c ****         lv_draw_rect_dsc_init(&draw_dsc);
 506:lvgl/src/core/lv_obj.c ****         /*If the border is drawn later disable loading its properties*/
 507:lvgl/src/core/lv_obj.c ****         if(lv_obj_get_style_border_post(obj, LV_PART_MAIN)) {
 508:lvgl/src/core/lv_obj.c ****             draw_dsc.border_post = 1;
 509:lvgl/src/core/lv_obj.c ****         }
 510:lvgl/src/core/lv_obj.c **** 
 511:lvgl/src/core/lv_obj.c ****         lv_obj_init_draw_rect_dsc(obj, LV_PART_MAIN, &draw_dsc);
 512:lvgl/src/core/lv_obj.c ****         lv_coord_t w = lv_obj_get_style_transform_width(obj, LV_PART_MAIN);
 513:lvgl/src/core/lv_obj.c ****         lv_coord_t h = lv_obj_get_style_transform_height(obj, LV_PART_MAIN);
 514:lvgl/src/core/lv_obj.c ****         lv_area_t coords;
 515:lvgl/src/core/lv_obj.c ****         lv_area_copy(&coords, &obj->coords);
 516:lvgl/src/core/lv_obj.c ****         coords.x1 -= w;
 517:lvgl/src/core/lv_obj.c ****         coords.x2 += w;
 518:lvgl/src/core/lv_obj.c ****         coords.y1 -= h;
 519:lvgl/src/core/lv_obj.c ****         coords.y2 += h;
 520:lvgl/src/core/lv_obj.c **** 
 521:lvgl/src/core/lv_obj.c ****         lv_obj_draw_part_dsc_t part_dsc;
 522:lvgl/src/core/lv_obj.c ****         lv_obj_draw_dsc_init(&part_dsc, draw_ctx);
 523:lvgl/src/core/lv_obj.c ****         part_dsc.class_p = MY_CLASS;
 524:lvgl/src/core/lv_obj.c ****         part_dsc.type = LV_OBJ_DRAW_PART_RECTANGLE;
 525:lvgl/src/core/lv_obj.c ****         part_dsc.rect_dsc = &draw_dsc;
 526:lvgl/src/core/lv_obj.c ****         part_dsc.draw_area = &coords;
 527:lvgl/src/core/lv_obj.c ****         part_dsc.part = LV_PART_MAIN;
 528:lvgl/src/core/lv_obj.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_BEGIN, &part_dsc);
 529:lvgl/src/core/lv_obj.c **** 
 530:lvgl/src/core/lv_obj.c **** 
 531:lvgl/src/core/lv_obj.c **** #if LV_DRAW_COMPLEX
 532:lvgl/src/core/lv_obj.c ****         /*With clip corner enabled draw the bg img separately to make it clipped*/
 533:lvgl/src/core/lv_obj.c ****         bool clip_corner = (lv_obj_get_style_clip_corner(obj, LV_PART_MAIN) && draw_dsc.radius != 0
 534:lvgl/src/core/lv_obj.c ****         const void * bg_img_src = draw_dsc.bg_img_src;
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 22


 535:lvgl/src/core/lv_obj.c ****         if(clip_corner) {
 536:lvgl/src/core/lv_obj.c ****             draw_dsc.bg_img_src = NULL;
 537:lvgl/src/core/lv_obj.c ****         }
 538:lvgl/src/core/lv_obj.c **** #endif
 539:lvgl/src/core/lv_obj.c **** 
 540:lvgl/src/core/lv_obj.c ****         lv_draw_rect(draw_ctx, &draw_dsc, &coords);
 541:lvgl/src/core/lv_obj.c **** 
 542:lvgl/src/core/lv_obj.c **** 
 543:lvgl/src/core/lv_obj.c **** #if LV_DRAW_COMPLEX
 544:lvgl/src/core/lv_obj.c ****         if(clip_corner) {
 545:lvgl/src/core/lv_obj.c ****             lv_draw_mask_radius_param_t * mp = lv_mem_buf_get(sizeof(lv_draw_mask_radius_param_t));
 546:lvgl/src/core/lv_obj.c ****             lv_draw_mask_radius_init(mp, &obj->coords, draw_dsc.radius, false);
 547:lvgl/src/core/lv_obj.c ****             /*Add the mask and use `obj+8` as custom id. Don't use `obj` directly because it might 
 548:lvgl/src/core/lv_obj.c ****             lv_draw_mask_add(mp, obj + 8);
 549:lvgl/src/core/lv_obj.c **** 
 550:lvgl/src/core/lv_obj.c ****             if(bg_img_src) {
 551:lvgl/src/core/lv_obj.c ****                 draw_dsc.bg_opa = LV_OPA_TRANSP;
 552:lvgl/src/core/lv_obj.c ****                 draw_dsc.border_opa = LV_OPA_TRANSP;
 553:lvgl/src/core/lv_obj.c ****                 draw_dsc.outline_opa = LV_OPA_TRANSP;
 554:lvgl/src/core/lv_obj.c ****                 draw_dsc.shadow_opa = LV_OPA_TRANSP;
 555:lvgl/src/core/lv_obj.c ****                 draw_dsc.bg_img_src = bg_img_src;
 556:lvgl/src/core/lv_obj.c ****                 lv_draw_rect(draw_ctx, &draw_dsc, &coords);
 557:lvgl/src/core/lv_obj.c ****             }
 558:lvgl/src/core/lv_obj.c **** 
 559:lvgl/src/core/lv_obj.c ****         }
 560:lvgl/src/core/lv_obj.c **** #endif
 561:lvgl/src/core/lv_obj.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_END, &part_dsc);
 562:lvgl/src/core/lv_obj.c ****     }
 563:lvgl/src/core/lv_obj.c ****     else if(code == LV_EVENT_DRAW_POST) {
 564:lvgl/src/core/lv_obj.c ****         lv_draw_ctx_t * draw_ctx = lv_event_get_draw_ctx(e);
 565:lvgl/src/core/lv_obj.c ****         draw_scrollbar(obj, draw_ctx);
 566:lvgl/src/core/lv_obj.c **** 
 567:lvgl/src/core/lv_obj.c **** #if LV_DRAW_COMPLEX
 568:lvgl/src/core/lv_obj.c ****         if(lv_obj_get_style_clip_corner(obj, LV_PART_MAIN)) {
 569:lvgl/src/core/lv_obj.c ****             lv_draw_mask_radius_param_t * param = lv_draw_mask_remove_custom(obj + 8);
 570:lvgl/src/core/lv_obj.c ****             if(param) {
 571:lvgl/src/core/lv_obj.c ****                 lv_draw_mask_free_param(param);
 572:lvgl/src/core/lv_obj.c ****                 lv_mem_buf_release(param);
 573:lvgl/src/core/lv_obj.c ****             }
 574:lvgl/src/core/lv_obj.c ****         }
 575:lvgl/src/core/lv_obj.c **** #endif
 576:lvgl/src/core/lv_obj.c **** 
 577:lvgl/src/core/lv_obj.c ****         /*If the border is drawn later disable loading other properties*/
 578:lvgl/src/core/lv_obj.c ****         if(lv_obj_get_style_border_post(obj, LV_PART_MAIN)) {
 579:lvgl/src/core/lv_obj.c ****             lv_draw_rect_dsc_t draw_dsc;
 580:lvgl/src/core/lv_obj.c ****             lv_draw_rect_dsc_init(&draw_dsc);
 581:lvgl/src/core/lv_obj.c ****             draw_dsc.bg_opa = LV_OPA_TRANSP;
 582:lvgl/src/core/lv_obj.c ****             draw_dsc.bg_img_opa = LV_OPA_TRANSP;
 583:lvgl/src/core/lv_obj.c ****             draw_dsc.outline_opa = LV_OPA_TRANSP;
 584:lvgl/src/core/lv_obj.c ****             draw_dsc.shadow_opa = LV_OPA_TRANSP;
 585:lvgl/src/core/lv_obj.c ****             lv_obj_init_draw_rect_dsc(obj, LV_PART_MAIN, &draw_dsc);
 586:lvgl/src/core/lv_obj.c **** 
 587:lvgl/src/core/lv_obj.c ****             lv_coord_t w = lv_obj_get_style_transform_width(obj, LV_PART_MAIN);
 588:lvgl/src/core/lv_obj.c ****             lv_coord_t h = lv_obj_get_style_transform_height(obj, LV_PART_MAIN);
 589:lvgl/src/core/lv_obj.c ****             lv_area_t coords;
 590:lvgl/src/core/lv_obj.c ****             lv_area_copy(&coords, &obj->coords);
 591:lvgl/src/core/lv_obj.c ****             coords.x1 -= w;
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 23


 592:lvgl/src/core/lv_obj.c ****             coords.x2 += w;
 593:lvgl/src/core/lv_obj.c ****             coords.y1 -= h;
 594:lvgl/src/core/lv_obj.c ****             coords.y2 += h;
 595:lvgl/src/core/lv_obj.c **** 
 596:lvgl/src/core/lv_obj.c ****             lv_obj_draw_part_dsc_t part_dsc;
 597:lvgl/src/core/lv_obj.c ****             lv_obj_draw_dsc_init(&part_dsc, draw_ctx);
 598:lvgl/src/core/lv_obj.c ****             part_dsc.class_p = MY_CLASS;
 599:lvgl/src/core/lv_obj.c ****             part_dsc.type = LV_OBJ_DRAW_PART_BORDER_POST;
 600:lvgl/src/core/lv_obj.c ****             part_dsc.rect_dsc = &draw_dsc;
 601:lvgl/src/core/lv_obj.c ****             part_dsc.draw_area = &coords;
 602:lvgl/src/core/lv_obj.c ****             part_dsc.part = LV_PART_MAIN;
 603:lvgl/src/core/lv_obj.c ****             lv_event_send(obj, LV_EVENT_DRAW_PART_BEGIN, &part_dsc);
 604:lvgl/src/core/lv_obj.c **** 
 605:lvgl/src/core/lv_obj.c ****             lv_draw_rect(draw_ctx, &draw_dsc, &coords);
 606:lvgl/src/core/lv_obj.c ****             lv_event_send(obj, LV_EVENT_DRAW_PART_END, &part_dsc);
 607:lvgl/src/core/lv_obj.c ****         }
 608:lvgl/src/core/lv_obj.c ****     }
 609:lvgl/src/core/lv_obj.c **** }
 610:lvgl/src/core/lv_obj.c **** 
 611:lvgl/src/core/lv_obj.c **** static void draw_scrollbar(lv_obj_t * obj, lv_draw_ctx_t * draw_ctx)
 612:lvgl/src/core/lv_obj.c **** {
 613:lvgl/src/core/lv_obj.c **** 
 614:lvgl/src/core/lv_obj.c ****     lv_area_t hor_area;
 615:lvgl/src/core/lv_obj.c ****     lv_area_t ver_area;
 616:lvgl/src/core/lv_obj.c ****     lv_obj_get_scrollbar_area(obj, &hor_area, &ver_area);
 617:lvgl/src/core/lv_obj.c **** 
 618:lvgl/src/core/lv_obj.c ****     if(lv_area_get_size(&hor_area) <= 0 && lv_area_get_size(&ver_area) <= 0) return;
 619:lvgl/src/core/lv_obj.c **** 
 620:lvgl/src/core/lv_obj.c ****     lv_draw_rect_dsc_t draw_dsc;
 621:lvgl/src/core/lv_obj.c ****     lv_res_t sb_res = scrollbar_init_draw_dsc(obj, &draw_dsc);
 622:lvgl/src/core/lv_obj.c ****     if(sb_res != LV_RES_OK) return;
 623:lvgl/src/core/lv_obj.c **** 
 624:lvgl/src/core/lv_obj.c ****     lv_obj_draw_part_dsc_t part_dsc;
 625:lvgl/src/core/lv_obj.c ****     lv_obj_draw_dsc_init(&part_dsc, draw_ctx);
 626:lvgl/src/core/lv_obj.c ****     part_dsc.class_p = MY_CLASS;
 627:lvgl/src/core/lv_obj.c ****     part_dsc.type = LV_OBJ_DRAW_PART_SCROLLBAR;
 628:lvgl/src/core/lv_obj.c ****     part_dsc.rect_dsc = &draw_dsc;
 629:lvgl/src/core/lv_obj.c ****     part_dsc.part = LV_PART_SCROLLBAR;
 630:lvgl/src/core/lv_obj.c **** 
 631:lvgl/src/core/lv_obj.c ****     if(lv_area_get_size(&hor_area) > 0) {
 632:lvgl/src/core/lv_obj.c ****         part_dsc.draw_area = &hor_area;
 633:lvgl/src/core/lv_obj.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_BEGIN, &part_dsc);
 634:lvgl/src/core/lv_obj.c ****         lv_draw_rect(draw_ctx, &draw_dsc, &hor_area);
 635:lvgl/src/core/lv_obj.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_END, &part_dsc);
 636:lvgl/src/core/lv_obj.c ****     }
 637:lvgl/src/core/lv_obj.c ****     if(lv_area_get_size(&ver_area) > 0) {
 638:lvgl/src/core/lv_obj.c ****         part_dsc.draw_area = &ver_area;
 639:lvgl/src/core/lv_obj.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_BEGIN, &part_dsc);
 640:lvgl/src/core/lv_obj.c ****         part_dsc.draw_area = &ver_area;
 641:lvgl/src/core/lv_obj.c ****         lv_draw_rect(draw_ctx, &draw_dsc, &ver_area);
 642:lvgl/src/core/lv_obj.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_END, &part_dsc);
 643:lvgl/src/core/lv_obj.c ****     }
 644:lvgl/src/core/lv_obj.c **** }
 645:lvgl/src/core/lv_obj.c **** 
 646:lvgl/src/core/lv_obj.c **** /**
 647:lvgl/src/core/lv_obj.c ****  * Initialize the draw descriptor for the scrollbar
 648:lvgl/src/core/lv_obj.c ****  * @param obj pointer to an object
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 24


 649:lvgl/src/core/lv_obj.c ****  * @param dsc the draw descriptor to initialize
 650:lvgl/src/core/lv_obj.c ****  * @return LV_RES_OK: the scrollbar is visible; LV_RES_INV: the scrollbar is not visible
 651:lvgl/src/core/lv_obj.c ****  */
 652:lvgl/src/core/lv_obj.c **** static lv_res_t scrollbar_init_draw_dsc(lv_obj_t * obj, lv_draw_rect_dsc_t * dsc)
 653:lvgl/src/core/lv_obj.c **** {
 654:lvgl/src/core/lv_obj.c ****     lv_draw_rect_dsc_init(dsc);
 655:lvgl/src/core/lv_obj.c ****     dsc->bg_opa = lv_obj_get_style_bg_opa(obj, LV_PART_SCROLLBAR);
 656:lvgl/src/core/lv_obj.c ****     if(dsc->bg_opa > LV_OPA_MIN) {
 657:lvgl/src/core/lv_obj.c ****         dsc->bg_color = lv_obj_get_style_bg_color(obj, LV_PART_SCROLLBAR);
 658:lvgl/src/core/lv_obj.c ****     }
 659:lvgl/src/core/lv_obj.c **** 
 660:lvgl/src/core/lv_obj.c ****     dsc->border_opa = lv_obj_get_style_border_opa(obj, LV_PART_SCROLLBAR);
 661:lvgl/src/core/lv_obj.c ****     if(dsc->border_opa > LV_OPA_MIN) {
 662:lvgl/src/core/lv_obj.c ****         dsc->border_width = lv_obj_get_style_border_width(obj, LV_PART_SCROLLBAR);
 663:lvgl/src/core/lv_obj.c ****         if(dsc->border_width > 0) {
 664:lvgl/src/core/lv_obj.c ****             dsc->border_color = lv_obj_get_style_border_color(obj, LV_PART_SCROLLBAR);
 665:lvgl/src/core/lv_obj.c ****         }
 666:lvgl/src/core/lv_obj.c ****         else {
 667:lvgl/src/core/lv_obj.c ****             dsc->border_opa = LV_OPA_TRANSP;
 668:lvgl/src/core/lv_obj.c ****         }
 669:lvgl/src/core/lv_obj.c ****     }
 670:lvgl/src/core/lv_obj.c **** 
 671:lvgl/src/core/lv_obj.c **** #if LV_DRAW_COMPLEX
 672:lvgl/src/core/lv_obj.c ****     dsc->shadow_opa = lv_obj_get_style_shadow_opa(obj, LV_PART_SCROLLBAR);
 673:lvgl/src/core/lv_obj.c ****     if(dsc->shadow_opa > LV_OPA_MIN) {
 674:lvgl/src/core/lv_obj.c ****         dsc->shadow_width = lv_obj_get_style_shadow_width(obj, LV_PART_SCROLLBAR);
 675:lvgl/src/core/lv_obj.c ****         if(dsc->shadow_width > 0) {
 676:lvgl/src/core/lv_obj.c ****             dsc->shadow_spread = lv_obj_get_style_shadow_spread(obj, LV_PART_SCROLLBAR);
 677:lvgl/src/core/lv_obj.c ****             dsc->shadow_color = lv_obj_get_style_shadow_color(obj, LV_PART_SCROLLBAR);
 678:lvgl/src/core/lv_obj.c ****         }
 679:lvgl/src/core/lv_obj.c ****         else {
 680:lvgl/src/core/lv_obj.c ****             dsc->shadow_opa = LV_OPA_TRANSP;
 681:lvgl/src/core/lv_obj.c ****         }
 682:lvgl/src/core/lv_obj.c ****     }
 683:lvgl/src/core/lv_obj.c **** 
 684:lvgl/src/core/lv_obj.c ****     lv_opa_t opa = lv_obj_get_style_opa(obj, LV_PART_SCROLLBAR);
 685:lvgl/src/core/lv_obj.c ****     if(opa < LV_OPA_MAX) {
 686:lvgl/src/core/lv_obj.c ****         dsc->bg_opa = (dsc->bg_opa * opa) >> 8;
 687:lvgl/src/core/lv_obj.c ****         dsc->border_opa = (dsc->bg_opa * opa) >> 8;
 688:lvgl/src/core/lv_obj.c ****         dsc->shadow_opa = (dsc->bg_opa * opa) >> 8;
 689:lvgl/src/core/lv_obj.c ****     }
 690:lvgl/src/core/lv_obj.c **** 
 691:lvgl/src/core/lv_obj.c ****     if(dsc->bg_opa != LV_OPA_TRANSP || dsc->border_opa != LV_OPA_TRANSP || dsc->shadow_opa != LV_OP
 692:lvgl/src/core/lv_obj.c ****         dsc->radius = lv_obj_get_style_radius(obj, LV_PART_SCROLLBAR);
 693:lvgl/src/core/lv_obj.c ****         return LV_RES_OK;
 694:lvgl/src/core/lv_obj.c ****     }
 695:lvgl/src/core/lv_obj.c ****     else {
 696:lvgl/src/core/lv_obj.c ****         return LV_RES_INV;
 697:lvgl/src/core/lv_obj.c ****     }
 698:lvgl/src/core/lv_obj.c **** #else
 699:lvgl/src/core/lv_obj.c ****     if(dsc->bg_opa != LV_OPA_TRANSP || dsc->border_opa != LV_OPA_TRANSP) return LV_RES_OK;
 700:lvgl/src/core/lv_obj.c ****     else return LV_RES_INV;
 701:lvgl/src/core/lv_obj.c **** #endif
 702:lvgl/src/core/lv_obj.c **** }
 703:lvgl/src/core/lv_obj.c **** 
 704:lvgl/src/core/lv_obj.c **** static void lv_obj_event(const lv_obj_class_t * class_p, lv_event_t * e)
 705:lvgl/src/core/lv_obj.c **** {
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 25


 706:lvgl/src/core/lv_obj.c ****     LV_UNUSED(class_p);
 707:lvgl/src/core/lv_obj.c **** 
 708:lvgl/src/core/lv_obj.c ****     lv_event_code_t code = lv_event_get_code(e);
 709:lvgl/src/core/lv_obj.c ****     lv_obj_t * obj = lv_event_get_current_target(e);
 710:lvgl/src/core/lv_obj.c ****     if(code == LV_EVENT_PRESSED) {
 711:lvgl/src/core/lv_obj.c ****         lv_obj_add_state(obj, LV_STATE_PRESSED);
 712:lvgl/src/core/lv_obj.c ****     }
 713:lvgl/src/core/lv_obj.c ****     else if(code == LV_EVENT_RELEASED) {
 714:lvgl/src/core/lv_obj.c ****         lv_obj_clear_state(obj, LV_STATE_PRESSED);
 715:lvgl/src/core/lv_obj.c ****         void * param = lv_event_get_param(e);
 716:lvgl/src/core/lv_obj.c ****         /*Go the checked state if enabled*/
 717:lvgl/src/core/lv_obj.c ****         if(lv_indev_get_scroll_obj(param) == NULL && lv_obj_has_flag(obj, LV_OBJ_FLAG_CHECKABLE)) {
 718:lvgl/src/core/lv_obj.c ****             if(!(lv_obj_get_state(obj) & LV_STATE_CHECKED)) lv_obj_add_state(obj, LV_STATE_CHECKED)
 719:lvgl/src/core/lv_obj.c ****             else lv_obj_clear_state(obj, LV_STATE_CHECKED);
 720:lvgl/src/core/lv_obj.c **** 
 721:lvgl/src/core/lv_obj.c ****             lv_res_t res = lv_event_send(obj, LV_EVENT_VALUE_CHANGED, NULL);
 722:lvgl/src/core/lv_obj.c ****             if(res != LV_RES_OK) return;
 723:lvgl/src/core/lv_obj.c ****         }
 724:lvgl/src/core/lv_obj.c ****     }
 725:lvgl/src/core/lv_obj.c ****     else if(code == LV_EVENT_PRESS_LOST) {
 726:lvgl/src/core/lv_obj.c ****         lv_obj_clear_state(obj, LV_STATE_PRESSED);
 727:lvgl/src/core/lv_obj.c ****     }
 728:lvgl/src/core/lv_obj.c ****     else if(code == LV_EVENT_STYLE_CHANGED) {
 729:lvgl/src/core/lv_obj.c ****         uint32_t child_cnt = lv_obj_get_child_cnt(obj);
 730:lvgl/src/core/lv_obj.c ****         for(uint32_t i = 0; i < child_cnt; i++) {
 731:lvgl/src/core/lv_obj.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 732:lvgl/src/core/lv_obj.c ****             lv_obj_mark_layout_as_dirty(child);
 733:lvgl/src/core/lv_obj.c ****         }
 734:lvgl/src/core/lv_obj.c ****     }
 735:lvgl/src/core/lv_obj.c ****     else if(code == LV_EVENT_KEY) {
 736:lvgl/src/core/lv_obj.c ****         if(lv_obj_has_flag(obj, LV_OBJ_FLAG_CHECKABLE)) {
 737:lvgl/src/core/lv_obj.c ****             char c = *((char *)lv_event_get_param(e));
 738:lvgl/src/core/lv_obj.c ****             if(c == LV_KEY_RIGHT || c == LV_KEY_UP) {
 739:lvgl/src/core/lv_obj.c ****                 lv_obj_add_state(obj, LV_STATE_CHECKED);
 740:lvgl/src/core/lv_obj.c ****             }
 741:lvgl/src/core/lv_obj.c ****             else if(c == LV_KEY_LEFT || c == LV_KEY_DOWN) {
 742:lvgl/src/core/lv_obj.c ****                 lv_obj_clear_state(obj, LV_STATE_CHECKED);
 743:lvgl/src/core/lv_obj.c ****             }
 744:lvgl/src/core/lv_obj.c **** 
 745:lvgl/src/core/lv_obj.c ****             /*With Enter LV_EVENT_RELEASED will send VALUE_CHANGE event*/
 746:lvgl/src/core/lv_obj.c ****             if(c != LV_KEY_ENTER) {
 747:lvgl/src/core/lv_obj.c ****                 lv_res_t res = lv_event_send(obj, LV_EVENT_VALUE_CHANGED, NULL);
 748:lvgl/src/core/lv_obj.c ****                 if(res != LV_RES_OK) return;
 749:lvgl/src/core/lv_obj.c ****             }
 750:lvgl/src/core/lv_obj.c ****         }
 751:lvgl/src/core/lv_obj.c ****         else if(lv_obj_has_flag(obj, LV_OBJ_FLAG_SCROLLABLE | LV_OBJ_FLAG_SCROLL_WITH_ARROW) && !lv
 752:lvgl/src/core/lv_obj.c ****             /*scroll by keypad or encoder*/
 753:lvgl/src/core/lv_obj.c ****             lv_anim_enable_t anim_enable = LV_ANIM_OFF;
 754:lvgl/src/core/lv_obj.c ****             lv_coord_t sl = lv_obj_get_scroll_left(obj);
 755:lvgl/src/core/lv_obj.c ****             lv_coord_t sr = lv_obj_get_scroll_right(obj);
 756:lvgl/src/core/lv_obj.c ****             char c = *((char *)lv_event_get_param(e));
 757:lvgl/src/core/lv_obj.c ****             if(c == LV_KEY_DOWN) {
 758:lvgl/src/core/lv_obj.c ****                 /*use scroll_to_x/y functions to enforce scroll limits*/
 759:lvgl/src/core/lv_obj.c ****                 lv_obj_scroll_to_y(obj, lv_obj_get_scroll_y(obj) + lv_obj_get_height(obj) / 4, anim
 760:lvgl/src/core/lv_obj.c ****             }
 761:lvgl/src/core/lv_obj.c ****             else if(c == LV_KEY_UP) {
 762:lvgl/src/core/lv_obj.c ****                 lv_obj_scroll_to_y(obj, lv_obj_get_scroll_y(obj) - lv_obj_get_height(obj) / 4, anim
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 26


 763:lvgl/src/core/lv_obj.c ****             }
 764:lvgl/src/core/lv_obj.c ****             else if(c == LV_KEY_RIGHT) {
 765:lvgl/src/core/lv_obj.c ****                 /*If the object can't be scrolled horizontally then scroll it vertically*/
 766:lvgl/src/core/lv_obj.c ****                 if(!((lv_obj_get_scroll_dir(obj) & LV_DIR_HOR) && (sl > 0 || sr > 0)))
 767:lvgl/src/core/lv_obj.c ****                     lv_obj_scroll_to_y(obj, lv_obj_get_scroll_y(obj) + lv_obj_get_height(obj) / 4, 
 768:lvgl/src/core/lv_obj.c ****                 else
 769:lvgl/src/core/lv_obj.c ****                     lv_obj_scroll_to_x(obj, lv_obj_get_scroll_x(obj) + lv_obj_get_width(obj) / 4, a
 770:lvgl/src/core/lv_obj.c ****             }
 771:lvgl/src/core/lv_obj.c ****             else if(c == LV_KEY_LEFT) {
 772:lvgl/src/core/lv_obj.c ****                 /*If the object can't be scrolled horizontally then scroll it vertically*/
 773:lvgl/src/core/lv_obj.c ****                 if(!((lv_obj_get_scroll_dir(obj) & LV_DIR_HOR) && (sl > 0 || sr > 0)))
 774:lvgl/src/core/lv_obj.c ****                     lv_obj_scroll_to_y(obj, lv_obj_get_scroll_y(obj) - lv_obj_get_height(obj) / 4, 
 775:lvgl/src/core/lv_obj.c ****                 else
 776:lvgl/src/core/lv_obj.c ****                     lv_obj_scroll_to_x(obj, lv_obj_get_scroll_x(obj) - lv_obj_get_width(obj) / 4, a
 777:lvgl/src/core/lv_obj.c ****             }
 778:lvgl/src/core/lv_obj.c ****         }
 779:lvgl/src/core/lv_obj.c ****     }
 780:lvgl/src/core/lv_obj.c ****     else if(code == LV_EVENT_FOCUSED) {
 781:lvgl/src/core/lv_obj.c ****         if(lv_obj_has_flag(obj, LV_OBJ_FLAG_SCROLL_ON_FOCUS)) {
 782:lvgl/src/core/lv_obj.c ****             lv_obj_scroll_to_view_recursive(obj, LV_ANIM_ON);
 783:lvgl/src/core/lv_obj.c ****         }
 784:lvgl/src/core/lv_obj.c **** 
 785:lvgl/src/core/lv_obj.c ****         bool editing = false;
 786:lvgl/src/core/lv_obj.c ****         editing = lv_group_get_editing(lv_obj_get_group(obj));
 787:lvgl/src/core/lv_obj.c ****         lv_state_t state = LV_STATE_FOCUSED;
 788:lvgl/src/core/lv_obj.c **** 
 789:lvgl/src/core/lv_obj.c ****         /* Use the indev for then indev handler.
 790:lvgl/src/core/lv_obj.c ****          * But if the obj was focused manually it returns NULL so try to
 791:lvgl/src/core/lv_obj.c ****          * use the indev from the event*/
 792:lvgl/src/core/lv_obj.c ****         lv_indev_t * indev = lv_indev_get_act();
 793:lvgl/src/core/lv_obj.c ****         if(indev == NULL) indev = lv_event_get_indev(e);
 794:lvgl/src/core/lv_obj.c **** 
 795:lvgl/src/core/lv_obj.c ****         lv_indev_type_t indev_type = lv_indev_get_type(indev);
 796:lvgl/src/core/lv_obj.c ****         if(indev_type == LV_INDEV_TYPE_KEYPAD || indev_type == LV_INDEV_TYPE_ENCODER) state |= LV_S
 797:lvgl/src/core/lv_obj.c ****         if(editing) {
 798:lvgl/src/core/lv_obj.c ****             state |= LV_STATE_EDITED;
 799:lvgl/src/core/lv_obj.c ****             lv_obj_add_state(obj, state);
 800:lvgl/src/core/lv_obj.c ****         }
 801:lvgl/src/core/lv_obj.c ****         else {
 802:lvgl/src/core/lv_obj.c ****             lv_obj_add_state(obj, state);
 803:lvgl/src/core/lv_obj.c ****             lv_obj_clear_state(obj, LV_STATE_EDITED);
 804:lvgl/src/core/lv_obj.c ****         }
 805:lvgl/src/core/lv_obj.c ****     }
 806:lvgl/src/core/lv_obj.c ****     else if(code == LV_EVENT_SCROLL_BEGIN) {
 807:lvgl/src/core/lv_obj.c ****         lv_obj_add_state(obj, LV_STATE_SCROLLED);
 808:lvgl/src/core/lv_obj.c ****     }
 809:lvgl/src/core/lv_obj.c ****     else if(code == LV_EVENT_SCROLL_END) {
 810:lvgl/src/core/lv_obj.c ****         lv_obj_clear_state(obj, LV_STATE_SCROLLED);
 811:lvgl/src/core/lv_obj.c ****         if(lv_obj_get_scrollbar_mode(obj) == LV_SCROLLBAR_MODE_ACTIVE) {
 812:lvgl/src/core/lv_obj.c ****             lv_area_t hor_area, ver_area;
 813:lvgl/src/core/lv_obj.c ****             lv_obj_get_scrollbar_area(obj, &hor_area, &ver_area);
 814:lvgl/src/core/lv_obj.c ****             lv_obj_invalidate_area(obj, &hor_area);
 815:lvgl/src/core/lv_obj.c ****             lv_obj_invalidate_area(obj, &ver_area);
 816:lvgl/src/core/lv_obj.c ****         }
 817:lvgl/src/core/lv_obj.c ****     }
 818:lvgl/src/core/lv_obj.c ****     else if(code == LV_EVENT_DEFOCUSED) {
 819:lvgl/src/core/lv_obj.c ****         lv_obj_clear_state(obj, LV_STATE_FOCUSED | LV_STATE_EDITED | LV_STATE_FOCUS_KEY);
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 27


 820:lvgl/src/core/lv_obj.c ****     }
 821:lvgl/src/core/lv_obj.c ****     else if(code == LV_EVENT_SIZE_CHANGED) {
 822:lvgl/src/core/lv_obj.c ****         lv_coord_t align = lv_obj_get_style_align(obj, LV_PART_MAIN);
 823:lvgl/src/core/lv_obj.c ****         uint16_t layout = lv_obj_get_style_layout(obj, LV_PART_MAIN);
 824:lvgl/src/core/lv_obj.c ****         if(layout || align) {
 825:lvgl/src/core/lv_obj.c ****             lv_obj_mark_layout_as_dirty(obj);
 826:lvgl/src/core/lv_obj.c ****         }
 827:lvgl/src/core/lv_obj.c **** 
 828:lvgl/src/core/lv_obj.c ****         uint32_t i;
 829:lvgl/src/core/lv_obj.c ****         uint32_t child_cnt = lv_obj_get_child_cnt(obj);
 830:lvgl/src/core/lv_obj.c ****         for(i = 0; i < child_cnt; i++) {
 831:lvgl/src/core/lv_obj.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 832:lvgl/src/core/lv_obj.c ****             lv_obj_mark_layout_as_dirty(child);
 833:lvgl/src/core/lv_obj.c ****         }
 834:lvgl/src/core/lv_obj.c ****     }
 835:lvgl/src/core/lv_obj.c ****     else if(code == LV_EVENT_CHILD_CHANGED) {
 836:lvgl/src/core/lv_obj.c ****         lv_coord_t w = lv_obj_get_style_width(obj, LV_PART_MAIN);
 837:lvgl/src/core/lv_obj.c ****         lv_coord_t h = lv_obj_get_style_height(obj, LV_PART_MAIN);
 838:lvgl/src/core/lv_obj.c ****         lv_coord_t align = lv_obj_get_style_align(obj, LV_PART_MAIN);
 839:lvgl/src/core/lv_obj.c ****         uint16_t layout = lv_obj_get_style_layout(obj, LV_PART_MAIN);
 840:lvgl/src/core/lv_obj.c ****         if(layout || align || w == LV_SIZE_CONTENT || h == LV_SIZE_CONTENT) {
 841:lvgl/src/core/lv_obj.c ****             lv_obj_mark_layout_as_dirty(obj);
 842:lvgl/src/core/lv_obj.c ****         }
 843:lvgl/src/core/lv_obj.c ****     }
 844:lvgl/src/core/lv_obj.c ****     else if(code == LV_EVENT_REFR_EXT_DRAW_SIZE) {
 845:lvgl/src/core/lv_obj.c ****         lv_coord_t * s = lv_event_get_param(e);
 846:lvgl/src/core/lv_obj.c ****         lv_coord_t d = lv_obj_calculate_ext_draw_size(obj, LV_PART_MAIN);
 847:lvgl/src/core/lv_obj.c ****         *s = LV_MAX(*s, d);
 848:lvgl/src/core/lv_obj.c ****     }
 849:lvgl/src/core/lv_obj.c ****     else if(code == LV_EVENT_DRAW_MAIN || code == LV_EVENT_DRAW_POST || code == LV_EVENT_COVER_CHEC
 850:lvgl/src/core/lv_obj.c ****         lv_obj_draw(e);
 851:lvgl/src/core/lv_obj.c ****     }
 852:lvgl/src/core/lv_obj.c **** }
 853:lvgl/src/core/lv_obj.c **** 
 854:lvgl/src/core/lv_obj.c **** /**
 855:lvgl/src/core/lv_obj.c ****  * Set the state (fully overwrite) of an object.
 856:lvgl/src/core/lv_obj.c ****  * If specified in the styles, transition animations will be started from the previous state to the
 857:lvgl/src/core/lv_obj.c ****  * @param obj       pointer to an object
 858:lvgl/src/core/lv_obj.c ****  * @param state     the new state
 859:lvgl/src/core/lv_obj.c ****  */
 860:lvgl/src/core/lv_obj.c **** static void lv_obj_set_state(lv_obj_t * obj, lv_state_t new_state)
 861:lvgl/src/core/lv_obj.c **** {
 862:lvgl/src/core/lv_obj.c ****     if(obj->state == new_state) return;
 863:lvgl/src/core/lv_obj.c **** 
 864:lvgl/src/core/lv_obj.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 865:lvgl/src/core/lv_obj.c **** 
 866:lvgl/src/core/lv_obj.c ****     lv_state_t prev_state = obj->state;
 867:lvgl/src/core/lv_obj.c ****     obj->state = new_state;
 868:lvgl/src/core/lv_obj.c **** 
 869:lvgl/src/core/lv_obj.c ****     _lv_style_state_cmp_t cmp_res = _lv_obj_style_state_compare(obj, prev_state, new_state);
 870:lvgl/src/core/lv_obj.c ****     /*If there is no difference in styles there is nothing else to do*/
 871:lvgl/src/core/lv_obj.c ****     if(cmp_res == _LV_STYLE_STATE_CMP_SAME) return;
 872:lvgl/src/core/lv_obj.c **** 
 873:lvgl/src/core/lv_obj.c ****     _lv_obj_style_transition_dsc_t * ts = lv_mem_buf_get(sizeof(_lv_obj_style_transition_dsc_t) * S
 874:lvgl/src/core/lv_obj.c ****     lv_memset_00(ts, sizeof(_lv_obj_style_transition_dsc_t) * STYLE_TRANSITION_MAX);
 875:lvgl/src/core/lv_obj.c ****     uint32_t tsi = 0;
 876:lvgl/src/core/lv_obj.c ****     uint32_t i;
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 28


 877:lvgl/src/core/lv_obj.c ****     for(i = 0; i < obj->style_cnt && tsi < STYLE_TRANSITION_MAX; i++) {
 878:lvgl/src/core/lv_obj.c ****         _lv_obj_style_t * obj_style = &obj->styles[i];
 879:lvgl/src/core/lv_obj.c ****         lv_state_t state_act = lv_obj_style_get_selector_state(obj->styles[i].selector);
 880:lvgl/src/core/lv_obj.c ****         lv_part_t part_act = lv_obj_style_get_selector_part(obj->styles[i].selector);
 881:lvgl/src/core/lv_obj.c ****         if(state_act & (~new_state)) continue; /*Skip unrelated styles*/
 882:lvgl/src/core/lv_obj.c ****         if(obj_style->is_trans) continue;
 883:lvgl/src/core/lv_obj.c **** 
 884:lvgl/src/core/lv_obj.c ****         lv_style_value_t v;
 885:lvgl/src/core/lv_obj.c ****         if(lv_style_get_prop_inlined(obj_style->style, LV_STYLE_TRANSITION, &v) == false) continue;
 886:lvgl/src/core/lv_obj.c ****         const lv_style_transition_dsc_t * tr = v.ptr;
 887:lvgl/src/core/lv_obj.c **** 
 888:lvgl/src/core/lv_obj.c ****         /*Add the props to the set if not added yet or added but with smaller weight*/
 889:lvgl/src/core/lv_obj.c ****         uint32_t j;
 890:lvgl/src/core/lv_obj.c ****         for(j = 0; tr->props[j] != 0 && tsi < STYLE_TRANSITION_MAX; j++) {
 891:lvgl/src/core/lv_obj.c ****             uint32_t t;
 892:lvgl/src/core/lv_obj.c ****             for(t = 0; t < tsi; t++) {
 893:lvgl/src/core/lv_obj.c ****                 lv_style_selector_t selector = ts[t].selector;
 894:lvgl/src/core/lv_obj.c ****                 lv_state_t state_ts = lv_obj_style_get_selector_state(selector);
 895:lvgl/src/core/lv_obj.c ****                 lv_part_t part_ts = lv_obj_style_get_selector_part(selector);
 896:lvgl/src/core/lv_obj.c ****                 if(ts[t].prop == tr->props[j] && part_ts == part_act && state_ts >= state_act) brea
 897:lvgl/src/core/lv_obj.c ****             }
 898:lvgl/src/core/lv_obj.c **** 
 899:lvgl/src/core/lv_obj.c ****             /*If not found  add it*/
 900:lvgl/src/core/lv_obj.c ****             if(t == tsi) {
 901:lvgl/src/core/lv_obj.c ****                 ts[tsi].time = tr->time;
 902:lvgl/src/core/lv_obj.c ****                 ts[tsi].delay = tr->delay;
 903:lvgl/src/core/lv_obj.c ****                 ts[tsi].path_cb = tr->path_xcb;
 904:lvgl/src/core/lv_obj.c ****                 ts[tsi].prop = tr->props[j];
 905:lvgl/src/core/lv_obj.c **** #if LV_USE_USER_DATA
 906:lvgl/src/core/lv_obj.c ****                 ts[tsi].user_data = tr->user_data;
 907:lvgl/src/core/lv_obj.c **** #endif
 908:lvgl/src/core/lv_obj.c ****                 ts[tsi].selector = obj_style->selector;
 909:lvgl/src/core/lv_obj.c ****                 tsi++;
 910:lvgl/src/core/lv_obj.c ****             }
 911:lvgl/src/core/lv_obj.c ****         }
 912:lvgl/src/core/lv_obj.c ****     }
 913:lvgl/src/core/lv_obj.c **** 
 914:lvgl/src/core/lv_obj.c ****     for(i = 0; i < tsi; i++) {
 915:lvgl/src/core/lv_obj.c ****         lv_part_t part_act = lv_obj_style_get_selector_part(ts[i].selector);
 916:lvgl/src/core/lv_obj.c ****         _lv_obj_style_create_transition(obj, part_act, prev_state, new_state, &ts[i]);
 917:lvgl/src/core/lv_obj.c ****     }
 918:lvgl/src/core/lv_obj.c **** 
 919:lvgl/src/core/lv_obj.c ****     lv_mem_buf_release(ts);
 920:lvgl/src/core/lv_obj.c **** 
 921:lvgl/src/core/lv_obj.c ****     if(cmp_res == _LV_STYLE_STATE_CMP_DIFF_REDRAW) {
 922:lvgl/src/core/lv_obj.c ****         lv_obj_invalidate(obj);
 923:lvgl/src/core/lv_obj.c ****     }
 924:lvgl/src/core/lv_obj.c ****     else if(cmp_res == _LV_STYLE_STATE_CMP_DIFF_LAYOUT) {
 925:lvgl/src/core/lv_obj.c ****         lv_obj_refresh_style(obj, LV_PART_ANY, LV_STYLE_PROP_ANY);
 926:lvgl/src/core/lv_obj.c ****     }
 927:lvgl/src/core/lv_obj.c ****     else if(cmp_res == _LV_STYLE_STATE_CMP_DIFF_DRAW_PAD) {
 928:lvgl/src/core/lv_obj.c ****         lv_obj_invalidate(obj);
 929:lvgl/src/core/lv_obj.c ****         lv_obj_refresh_ext_draw_size(obj);
 930:lvgl/src/core/lv_obj.c ****     }
 931:lvgl/src/core/lv_obj.c **** }
 932:lvgl/src/core/lv_obj.c **** 
 933:lvgl/src/core/lv_obj.c **** static bool obj_valid_child(const lv_obj_t * parent, const lv_obj_t * obj_to_find)
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 29


 934:lvgl/src/core/lv_obj.c **** {
 209              		.loc 1 934 1 is_stmt 1 view -0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		.loc 1 934 1 is_stmt 0 view .LVU64
 214 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 215              	.LCFI4:
 216              		.cfi_def_cfa_offset 24
 217              		.cfi_offset 3, -24
 218              		.cfi_offset 4, -20
 219              		.cfi_offset 5, -16
 220              		.cfi_offset 6, -12
 221              		.cfi_offset 7, -8
 222              		.cfi_offset 14, -4
 223 0002 0546     		mov	r5, r0
 224 0004 0E46     		mov	r6, r1
 935:lvgl/src/core/lv_obj.c ****     /*Check all children of `parent`*/
 936:lvgl/src/core/lv_obj.c ****     uint32_t child_cnt = 0;
 225              		.loc 1 936 5 is_stmt 1 view .LVU65
 226              	.LVL19:
 937:lvgl/src/core/lv_obj.c ****     if(parent->spec_attr) child_cnt = parent->spec_attr->child_cnt;
 227              		.loc 1 937 5 view .LVU66
 228              		.loc 1 937 14 is_stmt 0 view .LVU67
 229 0006 8368     		ldr	r3, [r0, #8]
 230              		.loc 1 937 7 view .LVU68
 231 0008 13B1     		cbz	r3, .L27
 232              		.loc 1 937 27 is_stmt 1 discriminator 1 view .LVU69
 233              		.loc 1 937 37 is_stmt 0 discriminator 1 view .LVU70
 234 000a 5F68     		ldr	r7, [r3, #4]
 235              	.LVL20:
 236              	.L23:
 938:lvgl/src/core/lv_obj.c ****     uint32_t i;
 237              		.loc 1 938 5 is_stmt 1 view .LVU71
 939:lvgl/src/core/lv_obj.c ****     for(i = 0; i < child_cnt; i++) {
 238              		.loc 1 939 5 view .LVU72
 239              		.loc 1 939 11 is_stmt 0 view .LVU73
 240 000c 0024     		movs	r4, #0
 241              		.loc 1 939 5 view .LVU74
 242 000e 02E0     		b	.L24
 243              	.LVL21:
 244              	.L27:
 936:lvgl/src/core/lv_obj.c ****     if(parent->spec_attr) child_cnt = parent->spec_attr->child_cnt;
 245              		.loc 1 936 14 view .LVU75
 246 0010 0027     		movs	r7, #0
 247 0012 FBE7     		b	.L23
 248              	.LVL22:
 249              	.L31:
 250              		.loc 1 939 32 is_stmt 1 discriminator 2 view .LVU76
 251 0014 0134     		adds	r4, r4, #1
 252              	.LVL23:
 253              	.L24:
 254              		.loc 1 939 18 discriminator 1 view .LVU77
 255 0016 A742     		cmp	r7, r4
 256 0018 0BD9     		bls	.L30
 257              	.LBB103:
 940:lvgl/src/core/lv_obj.c ****         lv_obj_t * child = parent->spec_attr->children[i];
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 30


 258              		.loc 1 940 9 view .LVU78
 259              		.loc 1 940 34 is_stmt 0 view .LVU79
 260 001a AB68     		ldr	r3, [r5, #8]
 261              		.loc 1 940 45 view .LVU80
 262 001c 1B68     		ldr	r3, [r3]
 263              		.loc 1 940 20 view .LVU81
 264 001e 53F82400 		ldr	r0, [r3, r4, lsl #2]
 265              	.LVL24:
 941:lvgl/src/core/lv_obj.c ****         if(child == obj_to_find) {
 266              		.loc 1 941 9 is_stmt 1 view .LVU82
 267              		.loc 1 941 11 is_stmt 0 view .LVU83
 268 0022 B042     		cmp	r0, r6
 269 0024 07D0     		beq	.L28
 942:lvgl/src/core/lv_obj.c ****             return true;
 943:lvgl/src/core/lv_obj.c ****         }
 944:lvgl/src/core/lv_obj.c **** 
 945:lvgl/src/core/lv_obj.c ****         /*Check the children*/
 946:lvgl/src/core/lv_obj.c ****         bool found = obj_valid_child(child, obj_to_find);
 270              		.loc 1 946 9 is_stmt 1 view .LVU84
 271              		.loc 1 946 22 is_stmt 0 view .LVU85
 272 0026 3146     		mov	r1, r6
 273 0028 FFF7EAFF 		bl	obj_valid_child
 274              	.LVL25:
 947:lvgl/src/core/lv_obj.c ****         if(found) {
 275              		.loc 1 947 9 is_stmt 1 view .LVU86
 276              		.loc 1 947 11 is_stmt 0 view .LVU87
 277 002c 0028     		cmp	r0, #0
 278 002e F1D0     		beq	.L31
 279 0030 00E0     		b	.L25
 280              	.LVL26:
 281              	.L30:
 282              		.loc 1 947 11 view .LVU88
 283              	.LBE103:
 948:lvgl/src/core/lv_obj.c ****             return true;
 949:lvgl/src/core/lv_obj.c ****         }
 950:lvgl/src/core/lv_obj.c ****     }
 951:lvgl/src/core/lv_obj.c ****     return false;
 284              		.loc 1 951 12 view .LVU89
 285 0032 0020     		movs	r0, #0
 286              	.L25:
 952:lvgl/src/core/lv_obj.c **** }
 287              		.loc 1 952 1 view .LVU90
 288 0034 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 289              	.LVL27:
 290              	.L28:
 291              	.LBB104:
 942:lvgl/src/core/lv_obj.c ****         }
 292              		.loc 1 942 20 view .LVU91
 293 0036 0120     		movs	r0, #1
 294              	.LVL28:
 942:lvgl/src/core/lv_obj.c ****         }
 295              		.loc 1 942 20 view .LVU92
 296 0038 FCE7     		b	.L25
 297              	.LBE104:
 298              		.cfi_endproc
 299              	.LFE187:
 301              		.section	.text.scrollbar_init_draw_dsc,"ax",%progbits
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 31


 302              		.align	1
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 307              	scrollbar_init_draw_dsc:
 308              	.LVL29:
 309              	.LFB184:
 653:lvgl/src/core/lv_obj.c ****     lv_draw_rect_dsc_init(dsc);
 310              		.loc 1 653 1 is_stmt 1 view -0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 0, uses_anonymous_args = 0
 653:lvgl/src/core/lv_obj.c ****     lv_draw_rect_dsc_init(dsc);
 314              		.loc 1 653 1 is_stmt 0 view .LVU94
 315 0000 38B5     		push	{r3, r4, r5, lr}
 316              	.LCFI5:
 317              		.cfi_def_cfa_offset 16
 318              		.cfi_offset 3, -16
 319              		.cfi_offset 4, -12
 320              		.cfi_offset 5, -8
 321              		.cfi_offset 14, -4
 322 0002 0546     		mov	r5, r0
 323 0004 0C46     		mov	r4, r1
 654:lvgl/src/core/lv_obj.c ****     dsc->bg_opa = lv_obj_get_style_bg_opa(obj, LV_PART_SCROLLBAR);
 324              		.loc 1 654 5 is_stmt 1 view .LVU95
 325 0006 0846     		mov	r0, r1
 326              	.LVL30:
 654:lvgl/src/core/lv_obj.c ****     dsc->bg_opa = lv_obj_get_style_bg_opa(obj, LV_PART_SCROLLBAR);
 327              		.loc 1 654 5 is_stmt 0 view .LVU96
 328 0008 FFF7FEFF 		bl	lv_draw_rect_dsc_init
 329              	.LVL31:
 655:lvgl/src/core/lv_obj.c ****     if(dsc->bg_opa > LV_OPA_MIN) {
 330              		.loc 1 655 5 is_stmt 1 view .LVU97
 331              	.LBB105:
 332              	.LBI105:
 333              		.file 3 "lvgl/src/core/lv_obj_style_gen.h"
   1:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_width(const struct _lv_obj_t * obj, uint32_t part)
   2:lvgl/src/core/lv_obj_style_gen.h **** {
   3:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_WIDTH);
   4:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
   5:lvgl/src/core/lv_obj_style_gen.h **** }
   6:lvgl/src/core/lv_obj_style_gen.h **** 
   7:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_min_width(const struct _lv_obj_t * obj, uint32_t part)
   8:lvgl/src/core/lv_obj_style_gen.h **** {
   9:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MIN_WIDTH);
  10:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  11:lvgl/src/core/lv_obj_style_gen.h **** }
  12:lvgl/src/core/lv_obj_style_gen.h **** 
  13:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_max_width(const struct _lv_obj_t * obj, uint32_t part)
  14:lvgl/src/core/lv_obj_style_gen.h **** {
  15:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MAX_WIDTH);
  16:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  17:lvgl/src/core/lv_obj_style_gen.h **** }
  18:lvgl/src/core/lv_obj_style_gen.h **** 
  19:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_height(const struct _lv_obj_t * obj, uint32_t part)
  20:lvgl/src/core/lv_obj_style_gen.h **** {
  21:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_HEIGHT);
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 32


  22:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  23:lvgl/src/core/lv_obj_style_gen.h **** }
  24:lvgl/src/core/lv_obj_style_gen.h **** 
  25:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_min_height(const struct _lv_obj_t * obj, uint32_t part)
  26:lvgl/src/core/lv_obj_style_gen.h **** {
  27:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MIN_HEIGHT);
  28:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  29:lvgl/src/core/lv_obj_style_gen.h **** }
  30:lvgl/src/core/lv_obj_style_gen.h **** 
  31:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_max_height(const struct _lv_obj_t * obj, uint32_t part)
  32:lvgl/src/core/lv_obj_style_gen.h **** {
  33:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MAX_HEIGHT);
  34:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  35:lvgl/src/core/lv_obj_style_gen.h **** }
  36:lvgl/src/core/lv_obj_style_gen.h **** 
  37:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_x(const struct _lv_obj_t * obj, uint32_t part)
  38:lvgl/src/core/lv_obj_style_gen.h **** {
  39:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_X);
  40:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  41:lvgl/src/core/lv_obj_style_gen.h **** }
  42:lvgl/src/core/lv_obj_style_gen.h **** 
  43:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_y(const struct _lv_obj_t * obj, uint32_t part)
  44:lvgl/src/core/lv_obj_style_gen.h **** {
  45:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_Y);
  46:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  47:lvgl/src/core/lv_obj_style_gen.h **** }
  48:lvgl/src/core/lv_obj_style_gen.h **** 
  49:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_align_t lv_obj_get_style_align(const struct _lv_obj_t * obj, uint32_t part)
  50:lvgl/src/core/lv_obj_style_gen.h **** {
  51:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ALIGN);
  52:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_align_t)v.num;
  53:lvgl/src/core/lv_obj_style_gen.h **** }
  54:lvgl/src/core/lv_obj_style_gen.h **** 
  55:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_width(const struct _lv_obj_t * obj, uint32_t pa
  56:lvgl/src/core/lv_obj_style_gen.h **** {
  57:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_WIDTH);
  58:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  59:lvgl/src/core/lv_obj_style_gen.h **** }
  60:lvgl/src/core/lv_obj_style_gen.h **** 
  61:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_height(const struct _lv_obj_t * obj, uint32_t p
  62:lvgl/src/core/lv_obj_style_gen.h **** {
  63:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_HEIGHT);
  64:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  65:lvgl/src/core/lv_obj_style_gen.h **** }
  66:lvgl/src/core/lv_obj_style_gen.h **** 
  67:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_translate_x(const struct _lv_obj_t * obj, uint32_t part)
  68:lvgl/src/core/lv_obj_style_gen.h **** {
  69:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSLATE_X);
  70:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  71:lvgl/src/core/lv_obj_style_gen.h **** }
  72:lvgl/src/core/lv_obj_style_gen.h **** 
  73:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_translate_y(const struct _lv_obj_t * obj, uint32_t part)
  74:lvgl/src/core/lv_obj_style_gen.h **** {
  75:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSLATE_Y);
  76:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  77:lvgl/src/core/lv_obj_style_gen.h **** }
  78:lvgl/src/core/lv_obj_style_gen.h **** 
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 33


  79:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_zoom(const struct _lv_obj_t * obj, uint32_t par
  80:lvgl/src/core/lv_obj_style_gen.h **** {
  81:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_ZOOM);
  82:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  83:lvgl/src/core/lv_obj_style_gen.h **** }
  84:lvgl/src/core/lv_obj_style_gen.h **** 
  85:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_angle(const struct _lv_obj_t * obj, uint32_t pa
  86:lvgl/src/core/lv_obj_style_gen.h **** {
  87:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_ANGLE);
  88:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  89:lvgl/src/core/lv_obj_style_gen.h **** }
  90:lvgl/src/core/lv_obj_style_gen.h **** 
  91:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_top(const struct _lv_obj_t * obj, uint32_t part)
  92:lvgl/src/core/lv_obj_style_gen.h **** {
  93:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_TOP);
  94:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  95:lvgl/src/core/lv_obj_style_gen.h **** }
  96:lvgl/src/core/lv_obj_style_gen.h **** 
  97:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_bottom(const struct _lv_obj_t * obj, uint32_t part)
  98:lvgl/src/core/lv_obj_style_gen.h **** {
  99:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_BOTTOM);
 100:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 101:lvgl/src/core/lv_obj_style_gen.h **** }
 102:lvgl/src/core/lv_obj_style_gen.h **** 
 103:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_left(const struct _lv_obj_t * obj, uint32_t part)
 104:lvgl/src/core/lv_obj_style_gen.h **** {
 105:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_LEFT);
 106:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 107:lvgl/src/core/lv_obj_style_gen.h **** }
 108:lvgl/src/core/lv_obj_style_gen.h **** 
 109:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_right(const struct _lv_obj_t * obj, uint32_t part)
 110:lvgl/src/core/lv_obj_style_gen.h **** {
 111:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_RIGHT);
 112:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 113:lvgl/src/core/lv_obj_style_gen.h **** }
 114:lvgl/src/core/lv_obj_style_gen.h **** 
 115:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_row(const struct _lv_obj_t * obj, uint32_t part)
 116:lvgl/src/core/lv_obj_style_gen.h **** {
 117:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_ROW);
 118:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 119:lvgl/src/core/lv_obj_style_gen.h **** }
 120:lvgl/src/core/lv_obj_style_gen.h **** 
 121:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_column(const struct _lv_obj_t * obj, uint32_t part)
 122:lvgl/src/core/lv_obj_style_gen.h **** {
 123:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_COLUMN);
 124:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 125:lvgl/src/core/lv_obj_style_gen.h **** }
 126:lvgl/src/core/lv_obj_style_gen.h **** 
 127:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_color(const struct _lv_obj_t * obj, uint32_t part)
 128:lvgl/src/core/lv_obj_style_gen.h **** {
 129:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_COLOR);
 130:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 131:lvgl/src/core/lv_obj_style_gen.h **** }
 132:lvgl/src/core/lv_obj_style_gen.h **** 
 133:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_color_filtered(const struct _lv_obj_t * obj, uint32_t 
 134:lvgl/src/core/lv_obj_style_gen.h **** {
 135:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_COLOR_FILTERED);
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 34


 136:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 137:lvgl/src/core/lv_obj_style_gen.h **** }
 138:lvgl/src/core/lv_obj_style_gen.h **** 
 139:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_bg_opa(const struct _lv_obj_t * obj, uint32_t part)
 334              		.loc 3 139 24 view .LVU98
 335              	.LBB106:
 140:lvgl/src/core/lv_obj_style_gen.h **** {
 141:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_OPA);
 336              		.loc 3 141 5 view .LVU99
 337              		.loc 3 141 26 is_stmt 0 view .LVU100
 338 000c 2122     		movs	r2, #33
 339 000e 4FF48031 		mov	r1, #65536
 340 0012 2846     		mov	r0, r5
 341 0014 FFF7FEFF 		bl	lv_obj_get_style_prop
 342              	.LVL32:
 142:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 343              		.loc 3 142 5 is_stmt 1 view .LVU101
 344              		.loc 3 142 12 is_stmt 0 view .LVU102
 345 0018 C0B2     		uxtb	r0, r0
 346              	.LVL33:
 347              		.loc 3 142 12 view .LVU103
 348              	.LBE106:
 349              	.LBE105:
 655:lvgl/src/core/lv_obj.c ****     if(dsc->bg_opa > LV_OPA_MIN) {
 350              		.loc 1 655 17 discriminator 1 view .LVU104
 351 001a E070     		strb	r0, [r4, #3]
 656:lvgl/src/core/lv_obj.c ****         dsc->bg_color = lv_obj_get_style_bg_color(obj, LV_PART_SCROLLBAR);
 352              		.loc 1 656 5 is_stmt 1 view .LVU105
 656:lvgl/src/core/lv_obj.c ****         dsc->bg_color = lv_obj_get_style_bg_color(obj, LV_PART_SCROLLBAR);
 353              		.loc 1 656 7 is_stmt 0 view .LVU106
 354 001c 0228     		cmp	r0, #2
 355 001e 3ED8     		bhi	.L42
 356              	.L33:
 660:lvgl/src/core/lv_obj.c ****     if(dsc->border_opa > LV_OPA_MIN) {
 357              		.loc 1 660 5 is_stmt 1 view .LVU107
 358              	.LVL34:
 359              	.LBB107:
 360              	.LBI107:
 143:lvgl/src/core/lv_obj_style_gen.h **** }
 144:lvgl/src/core/lv_obj_style_gen.h **** 
 145:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_grad_color(const struct _lv_obj_t * obj, uint32_t part
 146:lvgl/src/core/lv_obj_style_gen.h **** {
 147:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_GRAD_COLOR);
 148:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 149:lvgl/src/core/lv_obj_style_gen.h **** }
 150:lvgl/src/core/lv_obj_style_gen.h **** 
 151:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_grad_color_filtered(const struct _lv_obj_t * obj, uint
 152:lvgl/src/core/lv_obj_style_gen.h **** {
 153:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_GRAD_COLOR_FILTERED);
 154:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 155:lvgl/src/core/lv_obj_style_gen.h **** }
 156:lvgl/src/core/lv_obj_style_gen.h **** 
 157:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_grad_dir_t lv_obj_get_style_bg_grad_dir(const struct _lv_obj_t * obj, uint32_t par
 158:lvgl/src/core/lv_obj_style_gen.h **** {
 159:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_GRAD_DIR);
 160:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_grad_dir_t)v.num;
 161:lvgl/src/core/lv_obj_style_gen.h **** }
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 35


 162:lvgl/src/core/lv_obj_style_gen.h **** 
 163:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_bg_main_stop(const struct _lv_obj_t * obj, uint32_t part)
 164:lvgl/src/core/lv_obj_style_gen.h **** {
 165:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_MAIN_STOP);
 166:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 167:lvgl/src/core/lv_obj_style_gen.h **** }
 168:lvgl/src/core/lv_obj_style_gen.h **** 
 169:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_bg_grad_stop(const struct _lv_obj_t * obj, uint32_t part)
 170:lvgl/src/core/lv_obj_style_gen.h **** {
 171:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_GRAD_STOP);
 172:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 173:lvgl/src/core/lv_obj_style_gen.h **** }
 174:lvgl/src/core/lv_obj_style_gen.h **** 
 175:lvgl/src/core/lv_obj_style_gen.h **** static inline const lv_grad_dsc_t * lv_obj_get_style_bg_grad(const struct _lv_obj_t * obj, uint32_t
 176:lvgl/src/core/lv_obj_style_gen.h **** {
 177:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_GRAD);
 178:lvgl/src/core/lv_obj_style_gen.h ****     return (const lv_grad_dsc_t *)v.ptr;
 179:lvgl/src/core/lv_obj_style_gen.h **** }
 180:lvgl/src/core/lv_obj_style_gen.h **** 
 181:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_dither_mode_t lv_obj_get_style_bg_dither_mode(const struct _lv_obj_t * obj, uint32
 182:lvgl/src/core/lv_obj_style_gen.h **** {
 183:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_DITHER_MODE);
 184:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_dither_mode_t)v.num;
 185:lvgl/src/core/lv_obj_style_gen.h **** }
 186:lvgl/src/core/lv_obj_style_gen.h **** 
 187:lvgl/src/core/lv_obj_style_gen.h **** static inline const void * lv_obj_get_style_bg_img_src(const struct _lv_obj_t * obj, uint32_t part)
 188:lvgl/src/core/lv_obj_style_gen.h **** {
 189:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_SRC);
 190:lvgl/src/core/lv_obj_style_gen.h ****     return (const void *)v.ptr;
 191:lvgl/src/core/lv_obj_style_gen.h **** }
 192:lvgl/src/core/lv_obj_style_gen.h **** 
 193:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_bg_img_opa(const struct _lv_obj_t * obj, uint32_t part)
 194:lvgl/src/core/lv_obj_style_gen.h **** {
 195:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_OPA);
 196:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 197:lvgl/src/core/lv_obj_style_gen.h **** }
 198:lvgl/src/core/lv_obj_style_gen.h **** 
 199:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_img_recolor(const struct _lv_obj_t * obj, uint32_t par
 200:lvgl/src/core/lv_obj_style_gen.h **** {
 201:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_RECOLOR);
 202:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 203:lvgl/src/core/lv_obj_style_gen.h **** }
 204:lvgl/src/core/lv_obj_style_gen.h **** 
 205:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_img_recolor_filtered(const struct _lv_obj_t * obj, uin
 206:lvgl/src/core/lv_obj_style_gen.h **** {
 207:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_RECOLOR_FILTERED);
 208:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 209:lvgl/src/core/lv_obj_style_gen.h **** }
 210:lvgl/src/core/lv_obj_style_gen.h **** 
 211:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_bg_img_recolor_opa(const struct _lv_obj_t * obj, uint32_t p
 212:lvgl/src/core/lv_obj_style_gen.h **** {
 213:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_RECOLOR_OPA);
 214:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 215:lvgl/src/core/lv_obj_style_gen.h **** }
 216:lvgl/src/core/lv_obj_style_gen.h **** 
 217:lvgl/src/core/lv_obj_style_gen.h **** static inline bool lv_obj_get_style_bg_img_tiled(const struct _lv_obj_t * obj, uint32_t part)
 218:lvgl/src/core/lv_obj_style_gen.h **** {
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 36


 219:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_TILED);
 220:lvgl/src/core/lv_obj_style_gen.h ****     return (bool)v.num;
 221:lvgl/src/core/lv_obj_style_gen.h **** }
 222:lvgl/src/core/lv_obj_style_gen.h **** 
 223:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_border_color(const struct _lv_obj_t * obj, uint32_t part)
 224:lvgl/src/core/lv_obj_style_gen.h **** {
 225:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_COLOR);
 226:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 227:lvgl/src/core/lv_obj_style_gen.h **** }
 228:lvgl/src/core/lv_obj_style_gen.h **** 
 229:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_border_color_filtered(const struct _lv_obj_t * obj, uint3
 230:lvgl/src/core/lv_obj_style_gen.h **** {
 231:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_COLOR_FILTERED);
 232:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 233:lvgl/src/core/lv_obj_style_gen.h **** }
 234:lvgl/src/core/lv_obj_style_gen.h **** 
 235:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_border_opa(const struct _lv_obj_t * obj, uint32_t part)
 361              		.loc 3 235 24 view .LVU108
 362              	.LBB108:
 236:lvgl/src/core/lv_obj_style_gen.h **** {
 237:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_OPA);
 363              		.loc 3 237 5 view .LVU109
 364              		.loc 3 237 26 is_stmt 0 view .LVU110
 365 0020 3122     		movs	r2, #49
 366 0022 4FF48031 		mov	r1, #65536
 367 0026 2846     		mov	r0, r5
 368 0028 FFF7FEFF 		bl	lv_obj_get_style_prop
 369              	.LVL35:
 238:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 370              		.loc 3 238 5 is_stmt 1 view .LVU111
 371              		.loc 3 238 12 is_stmt 0 view .LVU112
 372 002c C0B2     		uxtb	r0, r0
 373              	.LVL36:
 374              		.loc 3 238 12 view .LVU113
 375              	.LBE108:
 376              	.LBE107:
 660:lvgl/src/core/lv_obj.c ****     if(dsc->border_opa > LV_OPA_MIN) {
 377              		.loc 1 660 21 discriminator 1 view .LVU114
 378 002e 84F82200 		strb	r0, [r4, #34]
 661:lvgl/src/core/lv_obj.c ****         dsc->border_width = lv_obj_get_style_border_width(obj, LV_PART_SCROLLBAR);
 379              		.loc 1 661 5 is_stmt 1 view .LVU115
 661:lvgl/src/core/lv_obj.c ****         dsc->border_width = lv_obj_get_style_border_width(obj, LV_PART_SCROLLBAR);
 380              		.loc 1 661 7 is_stmt 0 view .LVU116
 381 0032 0228     		cmp	r0, #2
 382 0034 3BD8     		bhi	.L43
 383              	.L34:
 672:lvgl/src/core/lv_obj.c ****     if(dsc->shadow_opa > LV_OPA_MIN) {
 384              		.loc 1 672 5 is_stmt 1 view .LVU117
 385              	.LVL37:
 386              	.LBB109:
 387              	.LBI109:
 239:lvgl/src/core/lv_obj_style_gen.h **** }
 240:lvgl/src/core/lv_obj_style_gen.h **** 
 241:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_border_width(const struct _lv_obj_t * obj, uint32_t part)
 242:lvgl/src/core/lv_obj_style_gen.h **** {
 243:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_WIDTH);
 244:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 37


 245:lvgl/src/core/lv_obj_style_gen.h **** }
 246:lvgl/src/core/lv_obj_style_gen.h **** 
 247:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_border_side_t lv_obj_get_style_border_side(const struct _lv_obj_t * obj, uint32_t 
 248:lvgl/src/core/lv_obj_style_gen.h **** {
 249:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_SIDE);
 250:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_border_side_t)v.num;
 251:lvgl/src/core/lv_obj_style_gen.h **** }
 252:lvgl/src/core/lv_obj_style_gen.h **** 
 253:lvgl/src/core/lv_obj_style_gen.h **** static inline bool lv_obj_get_style_border_post(const struct _lv_obj_t * obj, uint32_t part)
 254:lvgl/src/core/lv_obj_style_gen.h **** {
 255:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_POST);
 256:lvgl/src/core/lv_obj_style_gen.h ****     return (bool)v.num;
 257:lvgl/src/core/lv_obj_style_gen.h **** }
 258:lvgl/src/core/lv_obj_style_gen.h **** 
 259:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_outline_width(const struct _lv_obj_t * obj, uint32_t part
 260:lvgl/src/core/lv_obj_style_gen.h **** {
 261:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_OUTLINE_WIDTH);
 262:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 263:lvgl/src/core/lv_obj_style_gen.h **** }
 264:lvgl/src/core/lv_obj_style_gen.h **** 
 265:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_outline_color(const struct _lv_obj_t * obj, uint32_t part
 266:lvgl/src/core/lv_obj_style_gen.h **** {
 267:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_OUTLINE_COLOR);
 268:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 269:lvgl/src/core/lv_obj_style_gen.h **** }
 270:lvgl/src/core/lv_obj_style_gen.h **** 
 271:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_outline_color_filtered(const struct _lv_obj_t * obj, uint
 272:lvgl/src/core/lv_obj_style_gen.h **** {
 273:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_OUTLINE_COLOR_FILTERED);
 274:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 275:lvgl/src/core/lv_obj_style_gen.h **** }
 276:lvgl/src/core/lv_obj_style_gen.h **** 
 277:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_outline_opa(const struct _lv_obj_t * obj, uint32_t part)
 278:lvgl/src/core/lv_obj_style_gen.h **** {
 279:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_OUTLINE_OPA);
 280:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 281:lvgl/src/core/lv_obj_style_gen.h **** }
 282:lvgl/src/core/lv_obj_style_gen.h **** 
 283:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_outline_pad(const struct _lv_obj_t * obj, uint32_t part)
 284:lvgl/src/core/lv_obj_style_gen.h **** {
 285:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_OUTLINE_PAD);
 286:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 287:lvgl/src/core/lv_obj_style_gen.h **** }
 288:lvgl/src/core/lv_obj_style_gen.h **** 
 289:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_shadow_width(const struct _lv_obj_t * obj, uint32_t part)
 290:lvgl/src/core/lv_obj_style_gen.h **** {
 291:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_SHADOW_WIDTH);
 292:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 293:lvgl/src/core/lv_obj_style_gen.h **** }
 294:lvgl/src/core/lv_obj_style_gen.h **** 
 295:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_shadow_ofs_x(const struct _lv_obj_t * obj, uint32_t part)
 296:lvgl/src/core/lv_obj_style_gen.h **** {
 297:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_SHADOW_OFS_X);
 298:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 299:lvgl/src/core/lv_obj_style_gen.h **** }
 300:lvgl/src/core/lv_obj_style_gen.h **** 
 301:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_shadow_ofs_y(const struct _lv_obj_t * obj, uint32_t part)
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 38


 302:lvgl/src/core/lv_obj_style_gen.h **** {
 303:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_SHADOW_OFS_Y);
 304:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 305:lvgl/src/core/lv_obj_style_gen.h **** }
 306:lvgl/src/core/lv_obj_style_gen.h **** 
 307:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_shadow_spread(const struct _lv_obj_t * obj, uint32_t part
 308:lvgl/src/core/lv_obj_style_gen.h **** {
 309:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_SHADOW_SPREAD);
 310:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 311:lvgl/src/core/lv_obj_style_gen.h **** }
 312:lvgl/src/core/lv_obj_style_gen.h **** 
 313:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_shadow_color(const struct _lv_obj_t * obj, uint32_t part)
 314:lvgl/src/core/lv_obj_style_gen.h **** {
 315:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_SHADOW_COLOR);
 316:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 317:lvgl/src/core/lv_obj_style_gen.h **** }
 318:lvgl/src/core/lv_obj_style_gen.h **** 
 319:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_shadow_color_filtered(const struct _lv_obj_t * obj, uint3
 320:lvgl/src/core/lv_obj_style_gen.h **** {
 321:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_SHADOW_COLOR_FILTERED);
 322:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 323:lvgl/src/core/lv_obj_style_gen.h **** }
 324:lvgl/src/core/lv_obj_style_gen.h **** 
 325:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_shadow_opa(const struct _lv_obj_t * obj, uint32_t part)
 388              		.loc 3 325 24 view .LVU118
 389              	.LBB110:
 326:lvgl/src/core/lv_obj_style_gen.h **** {
 327:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_SHADOW_OPA);
 390              		.loc 3 327 5 view .LVU119
 391              		.loc 3 327 26 is_stmt 0 view .LVU120
 392 0036 40F64502 		movw	r2, #2117
 393 003a 4FF48031 		mov	r1, #65536
 394 003e 2846     		mov	r0, r5
 395 0040 FFF7FEFF 		bl	lv_obj_get_style_prop
 396              	.LVL38:
 328:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 397              		.loc 3 328 5 is_stmt 1 view .LVU121
 398              		.loc 3 328 12 is_stmt 0 view .LVU122
 399 0044 C0B2     		uxtb	r0, r0
 400              	.LVL39:
 401              		.loc 3 328 12 view .LVU123
 402              	.LBE110:
 403              	.LBE109:
 672:lvgl/src/core/lv_obj.c ****     if(dsc->shadow_opa > LV_OPA_MIN) {
 404              		.loc 1 672 21 discriminator 1 view .LVU124
 405 0046 84F83600 		strb	r0, [r4, #54]
 673:lvgl/src/core/lv_obj.c ****         dsc->shadow_width = lv_obj_get_style_shadow_width(obj, LV_PART_SCROLLBAR);
 406              		.loc 1 673 5 is_stmt 1 view .LVU125
 673:lvgl/src/core/lv_obj.c ****         dsc->shadow_width = lv_obj_get_style_shadow_width(obj, LV_PART_SCROLLBAR);
 407              		.loc 1 673 7 is_stmt 0 view .LVU126
 408 004a 0228     		cmp	r0, #2
 409 004c 46D8     		bhi	.L44
 410              	.L36:
 684:lvgl/src/core/lv_obj.c ****     if(opa < LV_OPA_MAX) {
 411              		.loc 1 684 5 is_stmt 1 view .LVU127
 412              	.LVL40:
 413              	.LBB111:
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 39


 414              	.LBI111:
 329:lvgl/src/core/lv_obj_style_gen.h **** }
 330:lvgl/src/core/lv_obj_style_gen.h **** 
 331:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_img_opa(const struct _lv_obj_t * obj, uint32_t part)
 332:lvgl/src/core/lv_obj_style_gen.h **** {
 333:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_IMG_OPA);
 334:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 335:lvgl/src/core/lv_obj_style_gen.h **** }
 336:lvgl/src/core/lv_obj_style_gen.h **** 
 337:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_img_recolor(const struct _lv_obj_t * obj, uint32_t part)
 338:lvgl/src/core/lv_obj_style_gen.h **** {
 339:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_IMG_RECOLOR);
 340:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 341:lvgl/src/core/lv_obj_style_gen.h **** }
 342:lvgl/src/core/lv_obj_style_gen.h **** 
 343:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_img_recolor_filtered(const struct _lv_obj_t * obj, uint32
 344:lvgl/src/core/lv_obj_style_gen.h **** {
 345:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_IMG_RECOLOR_FILTERED);
 346:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 347:lvgl/src/core/lv_obj_style_gen.h **** }
 348:lvgl/src/core/lv_obj_style_gen.h **** 
 349:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_img_recolor_opa(const struct _lv_obj_t * obj, uint32_t part
 350:lvgl/src/core/lv_obj_style_gen.h **** {
 351:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_IMG_RECOLOR_OPA);
 352:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 353:lvgl/src/core/lv_obj_style_gen.h **** }
 354:lvgl/src/core/lv_obj_style_gen.h **** 
 355:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_line_width(const struct _lv_obj_t * obj, uint32_t part)
 356:lvgl/src/core/lv_obj_style_gen.h **** {
 357:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LINE_WIDTH);
 358:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 359:lvgl/src/core/lv_obj_style_gen.h **** }
 360:lvgl/src/core/lv_obj_style_gen.h **** 
 361:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_line_dash_width(const struct _lv_obj_t * obj, uint32_t pa
 362:lvgl/src/core/lv_obj_style_gen.h **** {
 363:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LINE_DASH_WIDTH);
 364:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 365:lvgl/src/core/lv_obj_style_gen.h **** }
 366:lvgl/src/core/lv_obj_style_gen.h **** 
 367:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_line_dash_gap(const struct _lv_obj_t * obj, uint32_t part
 368:lvgl/src/core/lv_obj_style_gen.h **** {
 369:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LINE_DASH_GAP);
 370:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 371:lvgl/src/core/lv_obj_style_gen.h **** }
 372:lvgl/src/core/lv_obj_style_gen.h **** 
 373:lvgl/src/core/lv_obj_style_gen.h **** static inline bool lv_obj_get_style_line_rounded(const struct _lv_obj_t * obj, uint32_t part)
 374:lvgl/src/core/lv_obj_style_gen.h **** {
 375:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LINE_ROUNDED);
 376:lvgl/src/core/lv_obj_style_gen.h ****     return (bool)v.num;
 377:lvgl/src/core/lv_obj_style_gen.h **** }
 378:lvgl/src/core/lv_obj_style_gen.h **** 
 379:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_line_color(const struct _lv_obj_t * obj, uint32_t part)
 380:lvgl/src/core/lv_obj_style_gen.h **** {
 381:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LINE_COLOR);
 382:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 383:lvgl/src/core/lv_obj_style_gen.h **** }
 384:lvgl/src/core/lv_obj_style_gen.h **** 
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 40


 385:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_line_color_filtered(const struct _lv_obj_t * obj, uint32_
 386:lvgl/src/core/lv_obj_style_gen.h **** {
 387:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LINE_COLOR_FILTERED);
 388:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 389:lvgl/src/core/lv_obj_style_gen.h **** }
 390:lvgl/src/core/lv_obj_style_gen.h **** 
 391:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_line_opa(const struct _lv_obj_t * obj, uint32_t part)
 392:lvgl/src/core/lv_obj_style_gen.h **** {
 393:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LINE_OPA);
 394:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 395:lvgl/src/core/lv_obj_style_gen.h **** }
 396:lvgl/src/core/lv_obj_style_gen.h **** 
 397:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_arc_width(const struct _lv_obj_t * obj, uint32_t part)
 398:lvgl/src/core/lv_obj_style_gen.h **** {
 399:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ARC_WIDTH);
 400:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 401:lvgl/src/core/lv_obj_style_gen.h **** }
 402:lvgl/src/core/lv_obj_style_gen.h **** 
 403:lvgl/src/core/lv_obj_style_gen.h **** static inline bool lv_obj_get_style_arc_rounded(const struct _lv_obj_t * obj, uint32_t part)
 404:lvgl/src/core/lv_obj_style_gen.h **** {
 405:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ARC_ROUNDED);
 406:lvgl/src/core/lv_obj_style_gen.h ****     return (bool)v.num;
 407:lvgl/src/core/lv_obj_style_gen.h **** }
 408:lvgl/src/core/lv_obj_style_gen.h **** 
 409:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_arc_color(const struct _lv_obj_t * obj, uint32_t part)
 410:lvgl/src/core/lv_obj_style_gen.h **** {
 411:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ARC_COLOR);
 412:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 413:lvgl/src/core/lv_obj_style_gen.h **** }
 414:lvgl/src/core/lv_obj_style_gen.h **** 
 415:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_arc_color_filtered(const struct _lv_obj_t * obj, uint32_t
 416:lvgl/src/core/lv_obj_style_gen.h **** {
 417:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ARC_COLOR_FILTERED);
 418:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 419:lvgl/src/core/lv_obj_style_gen.h **** }
 420:lvgl/src/core/lv_obj_style_gen.h **** 
 421:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_arc_opa(const struct _lv_obj_t * obj, uint32_t part)
 422:lvgl/src/core/lv_obj_style_gen.h **** {
 423:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ARC_OPA);
 424:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 425:lvgl/src/core/lv_obj_style_gen.h **** }
 426:lvgl/src/core/lv_obj_style_gen.h **** 
 427:lvgl/src/core/lv_obj_style_gen.h **** static inline const void * lv_obj_get_style_arc_img_src(const struct _lv_obj_t * obj, uint32_t part
 428:lvgl/src/core/lv_obj_style_gen.h **** {
 429:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ARC_IMG_SRC);
 430:lvgl/src/core/lv_obj_style_gen.h ****     return (const void *)v.ptr;
 431:lvgl/src/core/lv_obj_style_gen.h **** }
 432:lvgl/src/core/lv_obj_style_gen.h **** 
 433:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_text_color(const struct _lv_obj_t * obj, uint32_t part)
 434:lvgl/src/core/lv_obj_style_gen.h **** {
 435:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_COLOR);
 436:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 437:lvgl/src/core/lv_obj_style_gen.h **** }
 438:lvgl/src/core/lv_obj_style_gen.h **** 
 439:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_text_color_filtered(const struct _lv_obj_t * obj, uint32_
 440:lvgl/src/core/lv_obj_style_gen.h **** {
 441:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_COLOR_FILTERED);
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 41


 442:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 443:lvgl/src/core/lv_obj_style_gen.h **** }
 444:lvgl/src/core/lv_obj_style_gen.h **** 
 445:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_text_opa(const struct _lv_obj_t * obj, uint32_t part)
 446:lvgl/src/core/lv_obj_style_gen.h **** {
 447:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_OPA);
 448:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 449:lvgl/src/core/lv_obj_style_gen.h **** }
 450:lvgl/src/core/lv_obj_style_gen.h **** 
 451:lvgl/src/core/lv_obj_style_gen.h **** static inline const lv_font_t * lv_obj_get_style_text_font(const struct _lv_obj_t * obj, uint32_t p
 452:lvgl/src/core/lv_obj_style_gen.h **** {
 453:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_FONT);
 454:lvgl/src/core/lv_obj_style_gen.h ****     return (const lv_font_t *)v.ptr;
 455:lvgl/src/core/lv_obj_style_gen.h **** }
 456:lvgl/src/core/lv_obj_style_gen.h **** 
 457:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_text_letter_space(const struct _lv_obj_t * obj, uint32_t 
 458:lvgl/src/core/lv_obj_style_gen.h **** {
 459:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_LETTER_SPACE);
 460:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 461:lvgl/src/core/lv_obj_style_gen.h **** }
 462:lvgl/src/core/lv_obj_style_gen.h **** 
 463:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_text_line_space(const struct _lv_obj_t * obj, uint32_t pa
 464:lvgl/src/core/lv_obj_style_gen.h **** {
 465:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_LINE_SPACE);
 466:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 467:lvgl/src/core/lv_obj_style_gen.h **** }
 468:lvgl/src/core/lv_obj_style_gen.h **** 
 469:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_text_decor_t lv_obj_get_style_text_decor(const struct _lv_obj_t * obj, uint32_t pa
 470:lvgl/src/core/lv_obj_style_gen.h **** {
 471:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_DECOR);
 472:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_text_decor_t)v.num;
 473:lvgl/src/core/lv_obj_style_gen.h **** }
 474:lvgl/src/core/lv_obj_style_gen.h **** 
 475:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_text_align_t lv_obj_get_style_text_align(const struct _lv_obj_t * obj, uint32_t pa
 476:lvgl/src/core/lv_obj_style_gen.h **** {
 477:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_ALIGN);
 478:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_text_align_t)v.num;
 479:lvgl/src/core/lv_obj_style_gen.h **** }
 480:lvgl/src/core/lv_obj_style_gen.h **** 
 481:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_radius(const struct _lv_obj_t * obj, uint32_t part)
 482:lvgl/src/core/lv_obj_style_gen.h **** {
 483:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_RADIUS);
 484:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 485:lvgl/src/core/lv_obj_style_gen.h **** }
 486:lvgl/src/core/lv_obj_style_gen.h **** 
 487:lvgl/src/core/lv_obj_style_gen.h **** static inline bool lv_obj_get_style_clip_corner(const struct _lv_obj_t * obj, uint32_t part)
 488:lvgl/src/core/lv_obj_style_gen.h **** {
 489:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_CLIP_CORNER);
 490:lvgl/src/core/lv_obj_style_gen.h ****     return (bool)v.num;
 491:lvgl/src/core/lv_obj_style_gen.h **** }
 492:lvgl/src/core/lv_obj_style_gen.h **** 
 493:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_opa(const struct _lv_obj_t * obj, uint32_t part)
 415              		.loc 3 493 24 view .LVU128
 416              	.LBB112:
 494:lvgl/src/core/lv_obj_style_gen.h **** {
 495:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_OPA);
 417              		.loc 3 495 5 view .LVU129
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 42


 418              		.loc 3 495 26 is_stmt 0 view .LVU130
 419 004e 40F26242 		movw	r2, #1122
 420 0052 4FF48031 		mov	r1, #65536
 421 0056 2846     		mov	r0, r5
 422 0058 FFF7FEFF 		bl	lv_obj_get_style_prop
 423              	.LVL41:
 496:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 424              		.loc 3 496 5 is_stmt 1 view .LVU131
 425              		.loc 3 496 12 is_stmt 0 view .LVU132
 426 005c C3B2     		uxtb	r3, r0
 427              	.LVL42:
 428              		.loc 3 496 12 view .LVU133
 429              	.LBE112:
 430              	.LBE111:
 685:lvgl/src/core/lv_obj.c ****         dsc->bg_opa = (dsc->bg_opa * opa) >> 8;
 431              		.loc 1 685 5 is_stmt 1 view .LVU134
 685:lvgl/src/core/lv_obj.c ****         dsc->bg_opa = (dsc->bg_opa * opa) >> 8;
 432              		.loc 1 685 7 is_stmt 0 view .LVU135
 433 005e FC2B     		cmp	r3, #252
 434 0060 0CD8     		bhi	.L38
 686:lvgl/src/core/lv_obj.c ****         dsc->border_opa = (dsc->bg_opa * opa) >> 8;
 435              		.loc 1 686 9 is_stmt 1 view .LVU136
 686:lvgl/src/core/lv_obj.c ****         dsc->border_opa = (dsc->bg_opa * opa) >> 8;
 436              		.loc 1 686 27 is_stmt 0 view .LVU137
 437 0062 E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 438              	.LVL43:
 686:lvgl/src/core/lv_obj.c ****         dsc->border_opa = (dsc->bg_opa * opa) >> 8;
 439              		.loc 1 686 27 view .LVU138
 440 0064 C0B2     		uxtb	r0, r0
 686:lvgl/src/core/lv_obj.c ****         dsc->border_opa = (dsc->bg_opa * opa) >> 8;
 441              		.loc 1 686 36 view .LVU139
 442 0066 00FB03F3 		mul	r3, r0, r3
 686:lvgl/src/core/lv_obj.c ****         dsc->border_opa = (dsc->bg_opa * opa) >> 8;
 443              		.loc 1 686 43 view .LVU140
 444 006a 1B12     		asrs	r3, r3, #8
 686:lvgl/src/core/lv_obj.c ****         dsc->border_opa = (dsc->bg_opa * opa) >> 8;
 445              		.loc 1 686 21 view .LVU141
 446 006c E370     		strb	r3, [r4, #3]
 687:lvgl/src/core/lv_obj.c ****         dsc->shadow_opa = (dsc->bg_opa * opa) >> 8;
 447              		.loc 1 687 9 is_stmt 1 view .LVU142
 687:lvgl/src/core/lv_obj.c ****         dsc->shadow_opa = (dsc->bg_opa * opa) >> 8;
 448              		.loc 1 687 40 is_stmt 0 view .LVU143
 449 006e 03FB00F0 		mul	r0, r3, r0
 450              	.LVL44:
 687:lvgl/src/core/lv_obj.c ****         dsc->shadow_opa = (dsc->bg_opa * opa) >> 8;
 451              		.loc 1 687 25 view .LVU144
 452 0072 000A     		lsrs	r0, r0, #8
 453 0074 84F82200 		strb	r0, [r4, #34]
 688:lvgl/src/core/lv_obj.c ****     }
 454              		.loc 1 688 9 is_stmt 1 view .LVU145
 688:lvgl/src/core/lv_obj.c ****     }
 455              		.loc 1 688 25 is_stmt 0 view .LVU146
 456 0078 84F83600 		strb	r0, [r4, #54]
 457              	.L38:
 691:lvgl/src/core/lv_obj.c ****         dsc->radius = lv_obj_get_style_radius(obj, LV_PART_SCROLLBAR);
 458              		.loc 1 691 5 is_stmt 1 view .LVU147
 691:lvgl/src/core/lv_obj.c ****         dsc->radius = lv_obj_get_style_radius(obj, LV_PART_SCROLLBAR);
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 43


 459              		.loc 1 691 11 is_stmt 0 view .LVU148
 460 007c E378     		ldrb	r3, [r4, #3]	@ zero_extendqisi2
 691:lvgl/src/core/lv_obj.c ****         dsc->radius = lv_obj_get_style_radius(obj, LV_PART_SCROLLBAR);
 461              		.loc 1 691 7 view .LVU149
 462 007e 2BB9     		cbnz	r3, .L39
 691:lvgl/src/core/lv_obj.c ****         dsc->radius = lv_obj_get_style_radius(obj, LV_PART_SCROLLBAR);
 463              		.loc 1 691 43 discriminator 1 view .LVU150
 464 0080 94F82230 		ldrb	r3, [r4, #34]	@ zero_extendqisi2
 691:lvgl/src/core/lv_obj.c ****         dsc->radius = lv_obj_get_style_radius(obj, LV_PART_SCROLLBAR);
 465              		.loc 1 691 37 discriminator 1 view .LVU151
 466 0084 13B9     		cbnz	r3, .L39
 691:lvgl/src/core/lv_obj.c ****         dsc->radius = lv_obj_get_style_radius(obj, LV_PART_SCROLLBAR);
 467              		.loc 1 691 79 discriminator 2 view .LVU152
 468 0086 94F83600 		ldrb	r0, [r4, #54]	@ zero_extendqisi2
 691:lvgl/src/core/lv_obj.c ****         dsc->radius = lv_obj_get_style_radius(obj, LV_PART_SCROLLBAR);
 469              		.loc 1 691 73 discriminator 2 view .LVU153
 470 008a 38B1     		cbz	r0, .L40
 471              	.L39:
 692:lvgl/src/core/lv_obj.c ****         return LV_RES_OK;
 472              		.loc 1 692 9 is_stmt 1 view .LVU154
 473              	.LVL45:
 474              	.LBB113:
 475              	.LBI113:
 481:lvgl/src/core/lv_obj_style_gen.h **** {
 476              		.loc 3 481 26 view .LVU155
 477              	.LBB114:
 483:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 478              		.loc 3 483 5 view .LVU156
 483:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 479              		.loc 3 483 26 is_stmt 0 view .LVU157
 480 008c 6022     		movs	r2, #96
 481 008e 4FF48031 		mov	r1, #65536
 482 0092 2846     		mov	r0, r5
 483 0094 FFF7FEFF 		bl	lv_obj_get_style_prop
 484              	.LVL46:
 484:lvgl/src/core/lv_obj_style_gen.h **** }
 485              		.loc 3 484 5 is_stmt 1 view .LVU158
 484:lvgl/src/core/lv_obj_style_gen.h **** }
 486              		.loc 3 484 5 is_stmt 0 view .LVU159
 487              	.LBE114:
 488              	.LBE113:
 692:lvgl/src/core/lv_obj.c ****         return LV_RES_OK;
 489              		.loc 1 692 21 discriminator 1 view .LVU160
 490 0098 2080     		strh	r0, [r4]	@ movhi
 693:lvgl/src/core/lv_obj.c ****     }
 491              		.loc 1 693 9 is_stmt 1 view .LVU161
 693:lvgl/src/core/lv_obj.c ****     }
 492              		.loc 1 693 16 is_stmt 0 view .LVU162
 493 009a 0120     		movs	r0, #1
 494              	.L40:
 702:lvgl/src/core/lv_obj.c **** 
 495              		.loc 1 702 1 view .LVU163
 496 009c 38BD     		pop	{r3, r4, r5, pc}
 497              	.LVL47:
 498              	.L42:
 657:lvgl/src/core/lv_obj.c ****     }
 499              		.loc 1 657 9 is_stmt 1 view .LVU164
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 44


 500              	.LBB115:
 501              	.LBI115:
 127:lvgl/src/core/lv_obj_style_gen.h **** {
 502              		.loc 3 127 26 view .LVU165
 503              	.LBB116:
 129:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 504              		.loc 3 129 5 view .LVU166
 129:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 505              		.loc 3 129 26 is_stmt 0 view .LVU167
 506 009e 2022     		movs	r2, #32
 507 00a0 4FF48031 		mov	r1, #65536
 508 00a4 2846     		mov	r0, r5
 509 00a6 FFF7FEFF 		bl	lv_obj_get_style_prop
 510              	.LVL48:
 130:lvgl/src/core/lv_obj_style_gen.h **** }
 511              		.loc 3 130 5 is_stmt 1 view .LVU168
 130:lvgl/src/core/lv_obj_style_gen.h **** }
 512              		.loc 3 130 5 is_stmt 0 view .LVU169
 513              	.LBE116:
 514              	.LBE115:
 657:lvgl/src/core/lv_obj.c ****     }
 515              		.loc 1 657 25 view .LVU170
 516 00aa A080     		strh	r0, [r4, #4]	@ movhi
 517 00ac B8E7     		b	.L33
 518              	.L43:
 662:lvgl/src/core/lv_obj.c ****         if(dsc->border_width > 0) {
 519              		.loc 1 662 9 is_stmt 1 view .LVU171
 520              	.LVL49:
 521              	.LBB117:
 522              	.LBI117:
 241:lvgl/src/core/lv_obj_style_gen.h **** {
 523              		.loc 3 241 26 view .LVU172
 524              	.LBB118:
 243:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 525              		.loc 3 243 5 view .LVU173
 243:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 526              		.loc 3 243 26 is_stmt 0 view .LVU174
 527 00ae 41F23202 		movw	r2, #4146
 528 00b2 4FF48031 		mov	r1, #65536
 529 00b6 2846     		mov	r0, r5
 530 00b8 FFF7FEFF 		bl	lv_obj_get_style_prop
 531              	.LVL50:
 244:lvgl/src/core/lv_obj_style_gen.h **** }
 532              		.loc 3 244 5 is_stmt 1 view .LVU175
 244:lvgl/src/core/lv_obj_style_gen.h **** }
 533              		.loc 3 244 12 is_stmt 0 view .LVU176
 534 00bc 00B2     		sxth	r0, r0
 535              	.LVL51:
 244:lvgl/src/core/lv_obj_style_gen.h **** }
 536              		.loc 3 244 12 view .LVU177
 537              	.LBE118:
 538              	.LBE117:
 662:lvgl/src/core/lv_obj.c ****         if(dsc->border_width > 0) {
 539              		.loc 1 662 27 discriminator 1 view .LVU178
 540 00be 2084     		strh	r0, [r4, #32]	@ movhi
 663:lvgl/src/core/lv_obj.c ****             dsc->border_color = lv_obj_get_style_border_color(obj, LV_PART_SCROLLBAR);
 541              		.loc 1 663 9 is_stmt 1 view .LVU179
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 45


 663:lvgl/src/core/lv_obj.c ****             dsc->border_color = lv_obj_get_style_border_color(obj, LV_PART_SCROLLBAR);
 542              		.loc 1 663 11 is_stmt 0 view .LVU180
 543 00c0 0028     		cmp	r0, #0
 544 00c2 03DC     		bgt	.L45
 667:lvgl/src/core/lv_obj.c ****         }
 545              		.loc 1 667 13 is_stmt 1 view .LVU181
 667:lvgl/src/core/lv_obj.c ****         }
 546              		.loc 1 667 29 is_stmt 0 view .LVU182
 547 00c4 0023     		movs	r3, #0
 548 00c6 84F82230 		strb	r3, [r4, #34]
 549 00ca B4E7     		b	.L34
 550              	.L45:
 664:lvgl/src/core/lv_obj.c ****         }
 551              		.loc 1 664 13 is_stmt 1 view .LVU183
 552              	.LVL52:
 553              	.LBB119:
 554              	.LBI119:
 223:lvgl/src/core/lv_obj_style_gen.h **** {
 555              		.loc 3 223 26 view .LVU184
 556              	.LBB120:
 225:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 557              		.loc 3 225 5 view .LVU185
 225:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 558              		.loc 3 225 26 is_stmt 0 view .LVU186
 559 00cc 3022     		movs	r2, #48
 560 00ce 4FF48031 		mov	r1, #65536
 561 00d2 2846     		mov	r0, r5
 562 00d4 FFF7FEFF 		bl	lv_obj_get_style_prop
 563              	.LVL53:
 226:lvgl/src/core/lv_obj_style_gen.h **** }
 564              		.loc 3 226 5 is_stmt 1 view .LVU187
 226:lvgl/src/core/lv_obj_style_gen.h **** }
 565              		.loc 3 226 5 is_stmt 0 view .LVU188
 566              	.LBE120:
 567              	.LBE119:
 664:lvgl/src/core/lv_obj.c ****         }
 568              		.loc 1 664 33 view .LVU189
 569 00d8 E083     		strh	r0, [r4, #30]	@ movhi
 570 00da ACE7     		b	.L34
 571              	.L44:
 674:lvgl/src/core/lv_obj.c ****         if(dsc->shadow_width > 0) {
 572              		.loc 1 674 9 is_stmt 1 view .LVU190
 573              	.LVL54:
 574              	.LBB121:
 575              	.LBI121:
 289:lvgl/src/core/lv_obj_style_gen.h **** {
 576              		.loc 3 289 26 view .LVU191
 577              	.LBB122:
 291:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 578              		.loc 3 291 5 view .LVU192
 291:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 579              		.loc 3 291 26 is_stmt 0 view .LVU193
 580 00dc 4FF40462 		mov	r2, #2112
 581 00e0 4FF48031 		mov	r1, #65536
 582 00e4 2846     		mov	r0, r5
 583 00e6 FFF7FEFF 		bl	lv_obj_get_style_prop
 584              	.LVL55:
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 46


 292:lvgl/src/core/lv_obj_style_gen.h **** }
 585              		.loc 3 292 5 is_stmt 1 view .LVU194
 292:lvgl/src/core/lv_obj_style_gen.h **** }
 586              		.loc 3 292 12 is_stmt 0 view .LVU195
 587 00ea 00B2     		sxth	r0, r0
 588              	.LVL56:
 292:lvgl/src/core/lv_obj_style_gen.h **** }
 589              		.loc 3 292 12 view .LVU196
 590              	.LBE122:
 591              	.LBE121:
 674:lvgl/src/core/lv_obj.c ****         if(dsc->shadow_width > 0) {
 592              		.loc 1 674 27 discriminator 1 view .LVU197
 593 00ec E085     		strh	r0, [r4, #46]	@ movhi
 675:lvgl/src/core/lv_obj.c ****             dsc->shadow_spread = lv_obj_get_style_shadow_spread(obj, LV_PART_SCROLLBAR);
 594              		.loc 1 675 9 is_stmt 1 view .LVU198
 675:lvgl/src/core/lv_obj.c ****             dsc->shadow_spread = lv_obj_get_style_shadow_spread(obj, LV_PART_SCROLLBAR);
 595              		.loc 1 675 11 is_stmt 0 view .LVU199
 596 00ee 0028     		cmp	r0, #0
 597 00f0 03DC     		bgt	.L46
 680:lvgl/src/core/lv_obj.c ****         }
 598              		.loc 1 680 13 is_stmt 1 view .LVU200
 680:lvgl/src/core/lv_obj.c ****         }
 599              		.loc 1 680 29 is_stmt 0 view .LVU201
 600 00f2 0023     		movs	r3, #0
 601 00f4 84F83630 		strb	r3, [r4, #54]
 602 00f8 A9E7     		b	.L36
 603              	.L46:
 676:lvgl/src/core/lv_obj.c ****             dsc->shadow_color = lv_obj_get_style_shadow_color(obj, LV_PART_SCROLLBAR);
 604              		.loc 1 676 13 is_stmt 1 view .LVU202
 605              	.LVL57:
 606              	.LBB123:
 607              	.LBI123:
 307:lvgl/src/core/lv_obj_style_gen.h **** {
 608              		.loc 3 307 26 view .LVU203
 609              	.LBB124:
 309:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 610              		.loc 3 309 5 view .LVU204
 309:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 611              		.loc 3 309 26 is_stmt 0 view .LVU205
 612 00fa 40F64302 		movw	r2, #2115
 613 00fe 4FF48031 		mov	r1, #65536
 614 0102 2846     		mov	r0, r5
 615 0104 FFF7FEFF 		bl	lv_obj_get_style_prop
 616              	.LVL58:
 310:lvgl/src/core/lv_obj_style_gen.h **** }
 617              		.loc 3 310 5 is_stmt 1 view .LVU206
 310:lvgl/src/core/lv_obj_style_gen.h **** }
 618              		.loc 3 310 5 is_stmt 0 view .LVU207
 619              	.LBE124:
 620              	.LBE123:
 676:lvgl/src/core/lv_obj.c ****             dsc->shadow_color = lv_obj_get_style_shadow_color(obj, LV_PART_SCROLLBAR);
 621              		.loc 1 676 32 discriminator 1 view .LVU208
 622 0108 A086     		strh	r0, [r4, #52]	@ movhi
 677:lvgl/src/core/lv_obj.c ****         }
 623              		.loc 1 677 13 is_stmt 1 view .LVU209
 624              	.LVL59:
 625              	.LBB125:
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 47


 626              	.LBI125:
 313:lvgl/src/core/lv_obj_style_gen.h **** {
 627              		.loc 3 313 26 view .LVU210
 628              	.LBB126:
 315:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 629              		.loc 3 315 5 view .LVU211
 315:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 630              		.loc 3 315 26 is_stmt 0 view .LVU212
 631 010a 4422     		movs	r2, #68
 632 010c 4FF48031 		mov	r1, #65536
 633 0110 2846     		mov	r0, r5
 634 0112 FFF7FEFF 		bl	lv_obj_get_style_prop
 635              	.LVL60:
 316:lvgl/src/core/lv_obj_style_gen.h **** }
 636              		.loc 3 316 5 is_stmt 1 view .LVU213
 316:lvgl/src/core/lv_obj_style_gen.h **** }
 637              		.loc 3 316 5 is_stmt 0 view .LVU214
 638              	.LBE126:
 639              	.LBE125:
 677:lvgl/src/core/lv_obj.c ****         }
 640              		.loc 1 677 33 view .LVU215
 641 0116 A085     		strh	r0, [r4, #44]	@ movhi
 642 0118 99E7     		b	.L36
 643              		.cfi_endproc
 644              	.LFE184:
 646              		.section	.text.draw_scrollbar,"ax",%progbits
 647              		.align	1
 648              		.syntax unified
 649              		.thumb
 650              		.thumb_func
 652              	draw_scrollbar:
 653              	.LVL61:
 654              	.LFB183:
 612:lvgl/src/core/lv_obj.c **** 
 655              		.loc 1 612 1 is_stmt 1 view -0
 656              		.cfi_startproc
 657              		@ args = 0, pretend = 0, frame = 144
 658              		@ frame_needed = 0, uses_anonymous_args = 0
 612:lvgl/src/core/lv_obj.c **** 
 659              		.loc 1 612 1 is_stmt 0 view .LVU217
 660 0000 70B5     		push	{r4, r5, r6, lr}
 661              	.LCFI6:
 662              		.cfi_def_cfa_offset 16
 663              		.cfi_offset 4, -16
 664              		.cfi_offset 5, -12
 665              		.cfi_offset 6, -8
 666              		.cfi_offset 14, -4
 667 0002 A4B0     		sub	sp, sp, #144
 668              	.LCFI7:
 669              		.cfi_def_cfa_offset 160
 670 0004 0446     		mov	r4, r0
 671 0006 0D46     		mov	r5, r1
 614:lvgl/src/core/lv_obj.c ****     lv_area_t ver_area;
 672              		.loc 1 614 5 is_stmt 1 view .LVU218
 615:lvgl/src/core/lv_obj.c ****     lv_obj_get_scrollbar_area(obj, &hor_area, &ver_area);
 673              		.loc 1 615 5 view .LVU219
 616:lvgl/src/core/lv_obj.c **** 
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 48


 674              		.loc 1 616 5 view .LVU220
 675 0008 20AA     		add	r2, sp, #128
 676 000a 22A9     		add	r1, sp, #136
 677              	.LVL62:
 616:lvgl/src/core/lv_obj.c **** 
 678              		.loc 1 616 5 is_stmt 0 view .LVU221
 679 000c FFF7FEFF 		bl	lv_obj_get_scrollbar_area
 680              	.LVL63:
 618:lvgl/src/core/lv_obj.c **** 
 681              		.loc 1 618 5 is_stmt 1 view .LVU222
 618:lvgl/src/core/lv_obj.c **** 
 682              		.loc 1 618 8 is_stmt 0 view .LVU223
 683 0010 22A8     		add	r0, sp, #136
 684 0012 FFF7FEFF 		bl	lv_area_get_size
 685              	.LVL64:
 618:lvgl/src/core/lv_obj.c **** 
 686              		.loc 1 618 7 discriminator 1 view .LVU224
 687 0016 18B9     		cbnz	r0, .L48
 618:lvgl/src/core/lv_obj.c **** 
 688              		.loc 1 618 44 discriminator 1 view .LVU225
 689 0018 20A8     		add	r0, sp, #128
 690 001a FFF7FEFF 		bl	lv_area_get_size
 691              	.LVL65:
 618:lvgl/src/core/lv_obj.c **** 
 692              		.loc 1 618 41 discriminator 1 view .LVU226
 693 001e 28B1     		cbz	r0, .L47
 694              	.L48:
 620:lvgl/src/core/lv_obj.c ****     lv_res_t sb_res = scrollbar_init_draw_dsc(obj, &draw_dsc);
 695              		.loc 1 620 5 is_stmt 1 view .LVU227
 621:lvgl/src/core/lv_obj.c ****     if(sb_res != LV_RES_OK) return;
 696              		.loc 1 621 5 view .LVU228
 621:lvgl/src/core/lv_obj.c ****     if(sb_res != LV_RES_OK) return;
 697              		.loc 1 621 23 is_stmt 0 view .LVU229
 698 0020 12A9     		add	r1, sp, #72
 699 0022 2046     		mov	r0, r4
 700 0024 FFF7FEFF 		bl	scrollbar_init_draw_dsc
 701              	.LVL66:
 622:lvgl/src/core/lv_obj.c **** 
 702              		.loc 1 622 5 is_stmt 1 view .LVU230
 622:lvgl/src/core/lv_obj.c **** 
 703              		.loc 1 622 7 is_stmt 0 view .LVU231
 704 0028 0128     		cmp	r0, #1
 705 002a 01D0     		beq	.L54
 706              	.LVL67:
 707              	.L47:
 644:lvgl/src/core/lv_obj.c **** 
 708              		.loc 1 644 1 view .LVU232
 709 002c 24B0     		add	sp, sp, #144
 710              	.LCFI8:
 711              		.cfi_remember_state
 712              		.cfi_def_cfa_offset 16
 713              		@ sp needed
 714 002e 70BD     		pop	{r4, r5, r6, pc}
 715              	.LVL68:
 716              	.L54:
 717              	.LCFI9:
 718              		.cfi_restore_state
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 49


 624:lvgl/src/core/lv_obj.c ****     lv_obj_draw_dsc_init(&part_dsc, draw_ctx);
 719              		.loc 1 624 5 is_stmt 1 view .LVU233
 625:lvgl/src/core/lv_obj.c ****     part_dsc.class_p = MY_CLASS;
 720              		.loc 1 625 5 view .LVU234
 721 0030 2946     		mov	r1, r5
 722 0032 6846     		mov	r0, sp
 723              	.LVL69:
 625:lvgl/src/core/lv_obj.c ****     part_dsc.class_p = MY_CLASS;
 724              		.loc 1 625 5 is_stmt 0 view .LVU235
 725 0034 FFF7FEFF 		bl	lv_obj_draw_dsc_init
 726              	.LVL70:
 626:lvgl/src/core/lv_obj.c ****     part_dsc.type = LV_OBJ_DRAW_PART_SCROLLBAR;
 727              		.loc 1 626 5 is_stmt 1 view .LVU236
 626:lvgl/src/core/lv_obj.c ****     part_dsc.type = LV_OBJ_DRAW_PART_SCROLLBAR;
 728              		.loc 1 626 22 is_stmt 0 view .LVU237
 729 0038 1B4B     		ldr	r3, .L56
 730 003a 0193     		str	r3, [sp, #4]
 627:lvgl/src/core/lv_obj.c ****     part_dsc.rect_dsc = &draw_dsc;
 731              		.loc 1 627 5 is_stmt 1 view .LVU238
 627:lvgl/src/core/lv_obj.c ****     part_dsc.rect_dsc = &draw_dsc;
 732              		.loc 1 627 19 is_stmt 0 view .LVU239
 733 003c 0223     		movs	r3, #2
 734 003e 0293     		str	r3, [sp, #8]
 628:lvgl/src/core/lv_obj.c ****     part_dsc.part = LV_PART_SCROLLBAR;
 735              		.loc 1 628 5 is_stmt 1 view .LVU240
 628:lvgl/src/core/lv_obj.c ****     part_dsc.part = LV_PART_SCROLLBAR;
 736              		.loc 1 628 23 is_stmt 0 view .LVU241
 737 0040 12AB     		add	r3, sp, #72
 738 0042 0493     		str	r3, [sp, #16]
 629:lvgl/src/core/lv_obj.c **** 
 739              		.loc 1 629 5 is_stmt 1 view .LVU242
 629:lvgl/src/core/lv_obj.c **** 
 740              		.loc 1 629 19 is_stmt 0 view .LVU243
 741 0044 4FF48033 		mov	r3, #65536
 742 0048 0D93     		str	r3, [sp, #52]
 631:lvgl/src/core/lv_obj.c ****         part_dsc.draw_area = &hor_area;
 743              		.loc 1 631 5 is_stmt 1 view .LVU244
 631:lvgl/src/core/lv_obj.c ****         part_dsc.draw_area = &hor_area;
 744              		.loc 1 631 8 is_stmt 0 view .LVU245
 745 004a 22A8     		add	r0, sp, #136
 746 004c FFF7FEFF 		bl	lv_area_get_size
 747              	.LVL71:
 631:lvgl/src/core/lv_obj.c ****         part_dsc.draw_area = &hor_area;
 748              		.loc 1 631 7 discriminator 1 view .LVU246
 749 0050 B8B9     		cbnz	r0, .L55
 750              	.L50:
 637:lvgl/src/core/lv_obj.c ****         part_dsc.draw_area = &ver_area;
 751              		.loc 1 637 5 is_stmt 1 view .LVU247
 637:lvgl/src/core/lv_obj.c ****         part_dsc.draw_area = &ver_area;
 752              		.loc 1 637 8 is_stmt 0 view .LVU248
 753 0052 20A8     		add	r0, sp, #128
 754 0054 FFF7FEFF 		bl	lv_area_get_size
 755              	.LVL72:
 637:lvgl/src/core/lv_obj.c ****         part_dsc.draw_area = &ver_area;
 756              		.loc 1 637 7 discriminator 1 view .LVU249
 757 0058 0028     		cmp	r0, #0
 758 005a E7D0     		beq	.L47
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 50


 638:lvgl/src/core/lv_obj.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_BEGIN, &part_dsc);
 759              		.loc 1 638 9 is_stmt 1 view .LVU250
 638:lvgl/src/core/lv_obj.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_BEGIN, &part_dsc);
 760              		.loc 1 638 28 is_stmt 0 view .LVU251
 761 005c 20AE     		add	r6, sp, #128
 762 005e 0396     		str	r6, [sp, #12]
 639:lvgl/src/core/lv_obj.c ****         part_dsc.draw_area = &ver_area;
 763              		.loc 1 639 9 is_stmt 1 view .LVU252
 764 0060 6A46     		mov	r2, sp
 765 0062 1A21     		movs	r1, #26
 766 0064 2046     		mov	r0, r4
 767 0066 FFF7FEFF 		bl	lv_event_send
 768              	.LVL73:
 640:lvgl/src/core/lv_obj.c ****         lv_draw_rect(draw_ctx, &draw_dsc, &ver_area);
 769              		.loc 1 640 9 view .LVU253
 640:lvgl/src/core/lv_obj.c ****         lv_draw_rect(draw_ctx, &draw_dsc, &ver_area);
 770              		.loc 1 640 28 is_stmt 0 view .LVU254
 771 006a 0396     		str	r6, [sp, #12]
 641:lvgl/src/core/lv_obj.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_END, &part_dsc);
 772              		.loc 1 641 9 is_stmt 1 view .LVU255
 773 006c 3246     		mov	r2, r6
 774 006e 12A9     		add	r1, sp, #72
 775 0070 2846     		mov	r0, r5
 776 0072 FFF7FEFF 		bl	lv_draw_rect
 777              	.LVL74:
 642:lvgl/src/core/lv_obj.c ****     }
 778              		.loc 1 642 9 view .LVU256
 779 0076 6A46     		mov	r2, sp
 780 0078 1B21     		movs	r1, #27
 781 007a 2046     		mov	r0, r4
 782 007c FFF7FEFF 		bl	lv_event_send
 783              	.LVL75:
 784 0080 D4E7     		b	.L47
 785              	.L55:
 632:lvgl/src/core/lv_obj.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_BEGIN, &part_dsc);
 786              		.loc 1 632 9 view .LVU257
 632:lvgl/src/core/lv_obj.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_BEGIN, &part_dsc);
 787              		.loc 1 632 28 is_stmt 0 view .LVU258
 788 0082 22AE     		add	r6, sp, #136
 789 0084 0396     		str	r6, [sp, #12]
 633:lvgl/src/core/lv_obj.c ****         lv_draw_rect(draw_ctx, &draw_dsc, &hor_area);
 790              		.loc 1 633 9 is_stmt 1 view .LVU259
 791 0086 6A46     		mov	r2, sp
 792 0088 1A21     		movs	r1, #26
 793 008a 2046     		mov	r0, r4
 794 008c FFF7FEFF 		bl	lv_event_send
 795              	.LVL76:
 634:lvgl/src/core/lv_obj.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_END, &part_dsc);
 796              		.loc 1 634 9 view .LVU260
 797 0090 3246     		mov	r2, r6
 798 0092 12A9     		add	r1, sp, #72
 799 0094 2846     		mov	r0, r5
 800 0096 FFF7FEFF 		bl	lv_draw_rect
 801              	.LVL77:
 635:lvgl/src/core/lv_obj.c ****     }
 802              		.loc 1 635 9 view .LVU261
 803 009a 6A46     		mov	r2, sp
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 51


 804 009c 1B21     		movs	r1, #27
 805 009e 2046     		mov	r0, r4
 806 00a0 FFF7FEFF 		bl	lv_event_send
 807              	.LVL78:
 808 00a4 D5E7     		b	.L50
 809              	.L57:
 810 00a6 00BF     		.align	2
 811              	.L56:
 812 00a8 00000000 		.word	lv_obj_class
 813              		.cfi_endproc
 814              	.LFE183:
 816              		.section	.text.lv_obj_draw,"ax",%progbits
 817              		.align	1
 818              		.syntax unified
 819              		.thumb
 820              		.thumb_func
 822              	lv_obj_draw:
 823              	.LVL79:
 824              	.LFB182:
 456:lvgl/src/core/lv_obj.c ****     lv_event_code_t code = lv_event_get_code(e);
 825              		.loc 1 456 1 view -0
 826              		.cfi_startproc
 827              		@ args = 0, pretend = 0, frame = 136
 828              		@ frame_needed = 0, uses_anonymous_args = 0
 456:lvgl/src/core/lv_obj.c ****     lv_event_code_t code = lv_event_get_code(e);
 829              		.loc 1 456 1 is_stmt 0 view .LVU263
 830 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 831              	.LCFI10:
 832              		.cfi_def_cfa_offset 24
 833              		.cfi_offset 4, -24
 834              		.cfi_offset 5, -20
 835              		.cfi_offset 6, -16
 836              		.cfi_offset 7, -12
 837              		.cfi_offset 8, -8
 838              		.cfi_offset 14, -4
 839 0004 A2B0     		sub	sp, sp, #136
 840              	.LCFI11:
 841              		.cfi_def_cfa_offset 160
 842 0006 0646     		mov	r6, r0
 457:lvgl/src/core/lv_obj.c ****     lv_obj_t * obj = lv_event_get_target(e);
 843              		.loc 1 457 5 is_stmt 1 view .LVU264
 457:lvgl/src/core/lv_obj.c ****     lv_obj_t * obj = lv_event_get_target(e);
 844              		.loc 1 457 28 is_stmt 0 view .LVU265
 845 0008 FFF7FEFF 		bl	lv_event_get_code
 846              	.LVL80:
 457:lvgl/src/core/lv_obj.c ****     lv_obj_t * obj = lv_event_get_target(e);
 847              		.loc 1 457 28 view .LVU266
 848 000c 0546     		mov	r5, r0
 849              	.LVL81:
 458:lvgl/src/core/lv_obj.c ****     if(code == LV_EVENT_COVER_CHECK) {
 850              		.loc 1 458 5 is_stmt 1 view .LVU267
 458:lvgl/src/core/lv_obj.c ****     if(code == LV_EVENT_COVER_CHECK) {
 851              		.loc 1 458 22 is_stmt 0 view .LVU268
 852 000e 3046     		mov	r0, r6
 853 0010 FFF7FEFF 		bl	lv_event_get_target
 854              	.LVL82:
 855 0014 0446     		mov	r4, r0
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 52


 856              	.LVL83:
 459:lvgl/src/core/lv_obj.c ****         lv_cover_check_info_t * info = lv_event_get_param(e);
 857              		.loc 1 459 5 is_stmt 1 view .LVU269
 459:lvgl/src/core/lv_obj.c ****         lv_cover_check_info_t * info = lv_event_get_param(e);
 858              		.loc 1 459 7 is_stmt 0 view .LVU270
 859 0016 122D     		cmp	r5, #18
 860 0018 07D0     		beq	.L76
 502:lvgl/src/core/lv_obj.c ****         lv_draw_ctx_t * draw_ctx = lv_event_get_draw_ctx(e);
 861              		.loc 1 502 10 is_stmt 1 view .LVU271
 502:lvgl/src/core/lv_obj.c ****         lv_draw_ctx_t * draw_ctx = lv_event_get_draw_ctx(e);
 862              		.loc 1 502 12 is_stmt 0 view .LVU272
 863 001a 152D     		cmp	r5, #21
 864 001c 78D0     		beq	.L77
 563:lvgl/src/core/lv_obj.c ****         lv_draw_ctx_t * draw_ctx = lv_event_get_draw_ctx(e);
 865              		.loc 1 563 10 is_stmt 1 view .LVU273
 563:lvgl/src/core/lv_obj.c ****         lv_draw_ctx_t * draw_ctx = lv_event_get_draw_ctx(e);
 866              		.loc 1 563 12 is_stmt 0 view .LVU274
 867 001e 182D     		cmp	r5, #24
 868 0020 00F01081 		beq	.L78
 869              	.LVL84:
 870              	.L58:
 609:lvgl/src/core/lv_obj.c **** 
 871              		.loc 1 609 1 view .LVU275
 872 0024 22B0     		add	sp, sp, #136
 873              	.LCFI12:
 874              		.cfi_remember_state
 875              		.cfi_def_cfa_offset 24
 876              		@ sp needed
 877 0026 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 878              	.LVL85:
 879              	.L76:
 880              	.LCFI13:
 881              		.cfi_restore_state
 882              	.LBB127:
 460:lvgl/src/core/lv_obj.c ****         if(info->res == LV_COVER_RES_MASKED) return;
 883              		.loc 1 460 9 is_stmt 1 view .LVU276
 460:lvgl/src/core/lv_obj.c ****         if(info->res == LV_COVER_RES_MASKED) return;
 884              		.loc 1 460 40 is_stmt 0 view .LVU277
 885 002a 3046     		mov	r0, r6
 886              	.LVL86:
 460:lvgl/src/core/lv_obj.c ****         if(info->res == LV_COVER_RES_MASKED) return;
 887              		.loc 1 460 40 view .LVU278
 888 002c FFF7FEFF 		bl	lv_event_get_param
 889              	.LVL87:
 890 0030 0546     		mov	r5, r0
 891              	.LVL88:
 461:lvgl/src/core/lv_obj.c ****         if(lv_obj_get_style_clip_corner(obj, LV_PART_MAIN)) {
 892              		.loc 1 461 9 is_stmt 1 view .LVU279
 461:lvgl/src/core/lv_obj.c ****         if(lv_obj_get_style_clip_corner(obj, LV_PART_MAIN)) {
 893              		.loc 1 461 16 is_stmt 0 view .LVU280
 894 0032 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 461:lvgl/src/core/lv_obj.c ****         if(lv_obj_get_style_clip_corner(obj, LV_PART_MAIN)) {
 895              		.loc 1 461 11 view .LVU281
 896 0034 022B     		cmp	r3, #2
 897 0036 F5D0     		beq	.L58
 462:lvgl/src/core/lv_obj.c ****             info->res = LV_COVER_RES_MASKED;
 898              		.loc 1 462 9 is_stmt 1 view .LVU282
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 53


 899              	.LVL89:
 900              	.LBB128:
 901              	.LBI128:
 487:lvgl/src/core/lv_obj_style_gen.h **** {
 902              		.loc 3 487 20 view .LVU283
 903              	.LBB129:
 489:lvgl/src/core/lv_obj_style_gen.h ****     return (bool)v.num;
 904              		.loc 3 489 5 view .LVU284
 489:lvgl/src/core/lv_obj_style_gen.h ****     return (bool)v.num;
 905              		.loc 3 489 26 is_stmt 0 view .LVU285
 906 0038 6122     		movs	r2, #97
 907 003a 0021     		movs	r1, #0
 908 003c 2046     		mov	r0, r4
 909              	.LVL90:
 489:lvgl/src/core/lv_obj_style_gen.h ****     return (bool)v.num;
 910              		.loc 3 489 26 view .LVU286
 911 003e FFF7FEFF 		bl	lv_obj_get_style_prop
 912              	.LVL91:
 490:lvgl/src/core/lv_obj_style_gen.h **** }
 913              		.loc 3 490 5 is_stmt 1 view .LVU287
 490:lvgl/src/core/lv_obj_style_gen.h **** }
 914              		.loc 3 490 5 is_stmt 0 view .LVU288
 915              	.LBE129:
 916              	.LBE128:
 462:lvgl/src/core/lv_obj.c ****             info->res = LV_COVER_RES_MASKED;
 917              		.loc 1 462 11 discriminator 1 view .LVU289
 918 0042 10B1     		cbz	r0, .L61
 463:lvgl/src/core/lv_obj.c ****             return;
 919              		.loc 1 463 13 is_stmt 1 view .LVU290
 463:lvgl/src/core/lv_obj.c ****             return;
 920              		.loc 1 463 23 is_stmt 0 view .LVU291
 921 0044 0223     		movs	r3, #2
 922 0046 2B70     		strb	r3, [r5]
 464:lvgl/src/core/lv_obj.c ****         }
 923              		.loc 1 464 13 is_stmt 1 view .LVU292
 924 0048 ECE7     		b	.L58
 925              	.L61:
 468:lvgl/src/core/lv_obj.c ****         lv_coord_t w = lv_obj_get_style_transform_width(obj, LV_PART_MAIN);
 926              		.loc 1 468 9 view .LVU293
 927              	.LVL92:
 928              	.LBB130:
 929              	.LBI130:
 481:lvgl/src/core/lv_obj_style_gen.h **** {
 930              		.loc 3 481 26 view .LVU294
 931              	.LBB131:
 483:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 932              		.loc 3 483 5 view .LVU295
 483:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 933              		.loc 3 483 26 is_stmt 0 view .LVU296
 934 004a 6022     		movs	r2, #96
 935 004c 0021     		movs	r1, #0
 936 004e 2046     		mov	r0, r4
 937 0050 FFF7FEFF 		bl	lv_obj_get_style_prop
 938              	.LVL93:
 484:lvgl/src/core/lv_obj_style_gen.h **** }
 939              		.loc 3 484 5 is_stmt 1 view .LVU297
 484:lvgl/src/core/lv_obj_style_gen.h **** }
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 54


 940              		.loc 3 484 12 is_stmt 0 view .LVU298
 941 0054 07B2     		sxth	r7, r0
 942              	.LVL94:
 484:lvgl/src/core/lv_obj_style_gen.h **** }
 943              		.loc 3 484 12 view .LVU299
 944              	.LBE131:
 945              	.LBE130:
 469:lvgl/src/core/lv_obj.c ****         lv_coord_t h = lv_obj_get_style_transform_height(obj, LV_PART_MAIN);
 946              		.loc 1 469 9 is_stmt 1 view .LVU300
 947              	.LBB132:
 948              	.LBI132:
  55:lvgl/src/core/lv_obj_style_gen.h **** {
 949              		.loc 3 55 26 view .LVU301
 950              	.LBB133:
  57:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 951              		.loc 3 57 5 view .LVU302
  57:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 952              		.loc 3 57 26 is_stmt 0 view .LVU303
 953 0056 40F60A02 		movw	r2, #2058
 954 005a 0021     		movs	r1, #0
 955 005c 2046     		mov	r0, r4
 956 005e FFF7FEFF 		bl	lv_obj_get_style_prop
 957              	.LVL95:
 958 0062 0646     		mov	r6, r0
 959              	.LVL96:
  58:lvgl/src/core/lv_obj_style_gen.h **** }
 960              		.loc 3 58 5 is_stmt 1 view .LVU304
  58:lvgl/src/core/lv_obj_style_gen.h **** }
 961              		.loc 3 58 5 is_stmt 0 view .LVU305
 962              	.LBE133:
 963              	.LBE132:
 470:lvgl/src/core/lv_obj.c ****         lv_area_t coords;
 964              		.loc 1 470 9 is_stmt 1 view .LVU306
 965              	.LBB134:
 966              	.LBI134:
  61:lvgl/src/core/lv_obj_style_gen.h **** {
 967              		.loc 3 61 26 view .LVU307
 968              	.LBB135:
  63:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 969              		.loc 3 63 5 view .LVU308
  63:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 970              		.loc 3 63 26 is_stmt 0 view .LVU309
 971 0064 40F60B02 		movw	r2, #2059
 972 0068 0021     		movs	r1, #0
 973 006a 2046     		mov	r0, r4
 974 006c FFF7FEFF 		bl	lv_obj_get_style_prop
 975              	.LVL97:
  64:lvgl/src/core/lv_obj_style_gen.h **** }
 976              		.loc 3 64 5 is_stmt 1 view .LVU310
  64:lvgl/src/core/lv_obj_style_gen.h **** }
 977              		.loc 3 64 5 is_stmt 0 view .LVU311
 978              	.LBE135:
 979              	.LBE134:
 471:lvgl/src/core/lv_obj.c ****         lv_area_copy(&coords, &obj->coords);
 980              		.loc 1 471 9 is_stmt 1 view .LVU312
 472:lvgl/src/core/lv_obj.c ****         coords.x1 -= w;
 981              		.loc 1 472 9 view .LVU313
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 55


 982              	.LBB136:
 983              	.LBI136:
 984              		.file 4 "lvgl/src/core/../misc/../font/../misc/lv_area.h"
   1:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /**
   2:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @file lv_area.h
   3:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  *
   4:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  */
   5:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
   6:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #ifndef LV_AREA_H
   7:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #define LV_AREA_H
   8:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
   9:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #ifdef __cplusplus
  10:lvgl/src/core/../misc/../font/../misc/lv_area.h **** extern "C" {
  11:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #endif
  12:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  13:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /*********************
  14:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  *      INCLUDES
  15:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  *********************/
  16:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #include <stdbool.h>
  18:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #include <stdint.h>
  19:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  20:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /*********************
  21:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  *      DEFINES
  22:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  *********************/
  23:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  24:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #if LV_USE_LARGE_COORD
  25:lvgl/src/core/../misc/../font/../misc/lv_area.h **** typedef int32_t lv_coord_t;
  26:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #else
  27:lvgl/src/core/../misc/../font/../misc/lv_area.h **** typedef int16_t lv_coord_t;
  28:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #endif
  29:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  30:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /**********************
  31:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  *      TYPEDEFS
  32:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  **********************/
  33:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  34:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /**
  35:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * Represents a point on the screen.
  36:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  */
  37:lvgl/src/core/../misc/../font/../misc/lv_area.h **** typedef struct {
  38:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     lv_coord_t x;
  39:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     lv_coord_t y;
  40:lvgl/src/core/../misc/../font/../misc/lv_area.h **** } lv_point_t;
  41:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  42:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /** Represents an area of the screen.*/
  43:lvgl/src/core/../misc/../font/../misc/lv_area.h **** typedef struct {
  44:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     lv_coord_t x1;
  45:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     lv_coord_t y1;
  46:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     lv_coord_t x2;
  47:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     lv_coord_t y2;
  48:lvgl/src/core/../misc/../font/../misc/lv_area.h **** } lv_area_t;
  49:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  50:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /** Alignments*/
  51:lvgl/src/core/../misc/../font/../misc/lv_area.h **** enum {
  52:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_DEFAULT = 0,
  53:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_TOP_LEFT,
  54:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_TOP_MID,
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 56


  55:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_TOP_RIGHT,
  56:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_LEFT,
  57:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_MID,
  58:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_RIGHT,
  59:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_LEFT_MID,
  60:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_RIGHT_MID,
  61:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_CENTER,
  62:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  63:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  64:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  65:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  66:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  67:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  68:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  69:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  70:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  71:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  72:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  73:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  74:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  75:lvgl/src/core/../misc/../font/../misc/lv_area.h **** };
  76:lvgl/src/core/../misc/../font/../misc/lv_area.h **** typedef uint8_t lv_align_t;
  77:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  78:lvgl/src/core/../misc/../font/../misc/lv_area.h **** enum {
  79:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_NONE     = 0x00,
  80:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_LEFT     = (1 << 0),
  81:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_RIGHT    = (1 << 1),
  82:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_TOP      = (1 << 2),
  83:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_BOTTOM   = (1 << 3),
  84:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_HOR      = LV_DIR_LEFT | LV_DIR_RIGHT,
  85:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_VER      = LV_DIR_TOP | LV_DIR_BOTTOM,
  86:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_ALL      = LV_DIR_HOR | LV_DIR_VER,
  87:lvgl/src/core/../misc/../font/../misc/lv_area.h **** };
  88:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  89:lvgl/src/core/../misc/../font/../misc/lv_area.h **** typedef uint8_t lv_dir_t;
  90:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  91:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /**********************
  92:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * GLOBAL PROTOTYPES
  93:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  **********************/
  94:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  95:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /**
  96:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * Initialize an area
  97:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param area_p pointer to an area
  98:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param x1 left coordinate of the area
  99:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param y1 top coordinate of the area
 100:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param x2 right coordinate of the area
 101:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param y2 bottom coordinate of the area
 102:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  */
 103:lvgl/src/core/../misc/../font/../misc/lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
 104:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
 105:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /**
 106:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * Copy an area
 107:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param dest pointer to the destination area
 108:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param src pointer to the source area
 109:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  */
 110:lvgl/src/core/../misc/../font/../misc/lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
 985              		.loc 4 110 20 view .LVU314
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 57


 986              	.LBB137:
 111:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 112:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x1 = src->x1;
 987              		.loc 4 112 5 view .LVU315
 988              		.loc 4 112 19 is_stmt 0 view .LVU316
 989 0070 B4F91410 		ldrsh	r1, [r4, #20]
 990              		.loc 4 112 14 view .LVU317
 991 0074 ADF84010 		strh	r1, [sp, #64]	@ movhi
 113:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 992              		.loc 4 113 5 is_stmt 1 view .LVU318
 993              		.loc 4 113 19 is_stmt 0 view .LVU319
 994 0078 B4F91630 		ldrsh	r3, [r4, #22]
 995              		.loc 4 113 14 view .LVU320
 996 007c ADF84230 		strh	r3, [sp, #66]	@ movhi
 114:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 997              		.loc 4 114 5 is_stmt 1 view .LVU321
 998              		.loc 4 114 19 is_stmt 0 view .LVU322
 999 0080 B4F918C0 		ldrsh	ip, [r4, #24]
 1000              		.loc 4 114 14 view .LVU323
 1001 0084 ADF844C0 		strh	ip, [sp, #68]	@ movhi
 115:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 1002              		.loc 4 115 5 is_stmt 1 view .LVU324
 1003              		.loc 4 115 19 is_stmt 0 view .LVU325
 1004 0088 B4F91A20 		ldrsh	r2, [r4, #26]
 1005              		.loc 4 115 14 view .LVU326
 1006 008c ADF84620 		strh	r2, [sp, #70]	@ movhi
 1007              	.LVL98:
 1008              		.loc 4 115 14 view .LVU327
 1009              	.LBE137:
 1010              	.LBE136:
 473:lvgl/src/core/lv_obj.c ****         coords.x2 += w;
 1011              		.loc 1 473 9 is_stmt 1 view .LVU328
 473:lvgl/src/core/lv_obj.c ****         coords.x2 += w;
 1012              		.loc 1 473 15 is_stmt 0 view .LVU329
 1013 0090 89B2     		uxth	r1, r1
 473:lvgl/src/core/lv_obj.c ****         coords.x2 += w;
 1014              		.loc 1 473 19 view .LVU330
 1015 0092 B6B2     		uxth	r6, r6
 473:lvgl/src/core/lv_obj.c ****         coords.x2 += w;
 1016              		.loc 1 473 19 view .LVU331
 1017 0094 891B     		subs	r1, r1, r6
 1018 0096 ADF84010 		strh	r1, [sp, #64]	@ movhi
 474:lvgl/src/core/lv_obj.c ****         coords.y1 -= h;
 1019              		.loc 1 474 9 is_stmt 1 view .LVU332
 474:lvgl/src/core/lv_obj.c ****         coords.y1 -= h;
 1020              		.loc 1 474 19 is_stmt 0 view .LVU333
 1021 009a 16FA8CFC 		uxtah	ip, r6, ip
 1022 009e ADF844C0 		strh	ip, [sp, #68]	@ movhi
 475:lvgl/src/core/lv_obj.c ****         coords.y2 += h;
 1023              		.loc 1 475 9 is_stmt 1 view .LVU334
 475:lvgl/src/core/lv_obj.c ****         coords.y2 += h;
 1024              		.loc 1 475 15 is_stmt 0 view .LVU335
 1025 00a2 9BB2     		uxth	r3, r3
 475:lvgl/src/core/lv_obj.c ****         coords.y2 += h;
 1026              		.loc 1 475 19 view .LVU336
 1027 00a4 80B2     		uxth	r0, r0
 475:lvgl/src/core/lv_obj.c ****         coords.y2 += h;
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 58


 1028              		.loc 1 475 19 view .LVU337
 1029 00a6 1B1A     		subs	r3, r3, r0
 1030 00a8 ADF84230 		strh	r3, [sp, #66]	@ movhi
 476:lvgl/src/core/lv_obj.c **** 
 1031              		.loc 1 476 9 is_stmt 1 view .LVU338
 476:lvgl/src/core/lv_obj.c **** 
 1032              		.loc 1 476 19 is_stmt 0 view .LVU339
 1033 00ac 10FA82F2 		uxtah	r2, r0, r2
 1034 00b0 ADF84620 		strh	r2, [sp, #70]	@ movhi
 478:lvgl/src/core/lv_obj.c ****             info->res = LV_COVER_RES_NOT_COVER;
 1035              		.loc 1 478 9 is_stmt 1 view .LVU340
 478:lvgl/src/core/lv_obj.c ****             info->res = LV_COVER_RES_NOT_COVER;
 1036              		.loc 1 478 12 is_stmt 0 view .LVU341
 1037 00b4 3A46     		mov	r2, r7
 1038 00b6 10A9     		add	r1, sp, #64
 1039 00b8 6868     		ldr	r0, [r5, #4]
 1040              	.LVL99:
 478:lvgl/src/core/lv_obj.c ****             info->res = LV_COVER_RES_NOT_COVER;
 1041              		.loc 1 478 12 view .LVU342
 1042 00ba FFF7FEFF 		bl	_lv_area_is_in
 1043              	.LVL100:
 478:lvgl/src/core/lv_obj.c ****             info->res = LV_COVER_RES_NOT_COVER;
 1044              		.loc 1 478 11 discriminator 1 view .LVU343
 1045 00be 10B9     		cbnz	r0, .L62
 479:lvgl/src/core/lv_obj.c ****             return;
 1046              		.loc 1 479 13 is_stmt 1 view .LVU344
 479:lvgl/src/core/lv_obj.c ****             return;
 1047              		.loc 1 479 23 is_stmt 0 view .LVU345
 1048 00c0 0123     		movs	r3, #1
 1049 00c2 2B70     		strb	r3, [r5]
 480:lvgl/src/core/lv_obj.c ****         }
 1050              		.loc 1 480 13 is_stmt 1 view .LVU346
 1051 00c4 AEE7     		b	.L58
 1052              	.L62:
 483:lvgl/src/core/lv_obj.c ****             info->res = LV_COVER_RES_NOT_COVER;
 1053              		.loc 1 483 9 view .LVU347
 1054              	.LVL101:
 1055              	.LBB138:
 1056              	.LBI138:
 139:lvgl/src/core/lv_obj_style_gen.h **** {
 1057              		.loc 3 139 24 view .LVU348
 1058              	.LBB139:
 141:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 1059              		.loc 3 141 5 view .LVU349
 141:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 1060              		.loc 3 141 26 is_stmt 0 view .LVU350
 1061 00c6 2122     		movs	r2, #33
 1062 00c8 0021     		movs	r1, #0
 1063 00ca 2046     		mov	r0, r4
 1064 00cc FFF7FEFF 		bl	lv_obj_get_style_prop
 1065              	.LVL102:
 142:lvgl/src/core/lv_obj_style_gen.h **** }
 1066              		.loc 3 142 5 is_stmt 1 view .LVU351
 142:lvgl/src/core/lv_obj_style_gen.h **** }
 1067              		.loc 3 142 12 is_stmt 0 view .LVU352
 1068 00d0 C0B2     		uxtb	r0, r0
 1069              	.LVL103:
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 59


 142:lvgl/src/core/lv_obj_style_gen.h **** }
 1070              		.loc 3 142 12 view .LVU353
 1071              	.LBE139:
 1072              	.LBE138:
 483:lvgl/src/core/lv_obj.c ****             info->res = LV_COVER_RES_NOT_COVER;
 1073              		.loc 1 483 11 discriminator 1 view .LVU354
 1074 00d2 FC28     		cmp	r0, #252
 1075 00d4 02D8     		bhi	.L63
 484:lvgl/src/core/lv_obj.c ****             return;
 1076              		.loc 1 484 13 is_stmt 1 view .LVU355
 484:lvgl/src/core/lv_obj.c ****             return;
 1077              		.loc 1 484 23 is_stmt 0 view .LVU356
 1078 00d6 0123     		movs	r3, #1
 1079 00d8 2B70     		strb	r3, [r5]
 485:lvgl/src/core/lv_obj.c ****         }
 1080              		.loc 1 485 13 is_stmt 1 view .LVU357
 1081 00da A3E7     		b	.L58
 1082              	.L63:
 489:lvgl/src/core/lv_obj.c ****             info->res = LV_COVER_RES_NOT_COVER;
 1083              		.loc 1 489 9 view .LVU358
 1084              	.LVL104:
 1085              	.LBB140:
 1086              	.LBI140:
 497:lvgl/src/core/lv_obj_style_gen.h **** }
 498:lvgl/src/core/lv_obj_style_gen.h **** 
 499:lvgl/src/core/lv_obj_style_gen.h **** static inline const lv_color_filter_dsc_t * lv_obj_get_style_color_filter_dsc(const struct _lv_obj_
 500:lvgl/src/core/lv_obj_style_gen.h ****                                                                               uint32_t part)
 501:lvgl/src/core/lv_obj_style_gen.h **** {
 502:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_COLOR_FILTER_DSC);
 503:lvgl/src/core/lv_obj_style_gen.h ****     return (const lv_color_filter_dsc_t *)v.ptr;
 504:lvgl/src/core/lv_obj_style_gen.h **** }
 505:lvgl/src/core/lv_obj_style_gen.h **** 
 506:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_color_filter_opa(const struct _lv_obj_t * obj, uint32_t par
 507:lvgl/src/core/lv_obj_style_gen.h **** {
 508:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_COLOR_FILTER_OPA);
 509:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 510:lvgl/src/core/lv_obj_style_gen.h **** }
 511:lvgl/src/core/lv_obj_style_gen.h **** 
 512:lvgl/src/core/lv_obj_style_gen.h **** static inline uint32_t lv_obj_get_style_anim_time(const struct _lv_obj_t * obj, uint32_t part)
 513:lvgl/src/core/lv_obj_style_gen.h **** {
 514:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ANIM_TIME);
 515:lvgl/src/core/lv_obj_style_gen.h ****     return (uint32_t)v.num;
 516:lvgl/src/core/lv_obj_style_gen.h **** }
 517:lvgl/src/core/lv_obj_style_gen.h **** 
 518:lvgl/src/core/lv_obj_style_gen.h **** static inline uint32_t lv_obj_get_style_anim_speed(const struct _lv_obj_t * obj, uint32_t part)
 519:lvgl/src/core/lv_obj_style_gen.h **** {
 520:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ANIM_SPEED);
 521:lvgl/src/core/lv_obj_style_gen.h ****     return (uint32_t)v.num;
 522:lvgl/src/core/lv_obj_style_gen.h **** }
 523:lvgl/src/core/lv_obj_style_gen.h **** 
 524:lvgl/src/core/lv_obj_style_gen.h **** static inline const lv_style_transition_dsc_t * lv_obj_get_style_transition(const struct _lv_obj_t 
 525:lvgl/src/core/lv_obj_style_gen.h **** {
 526:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSITION);
 527:lvgl/src/core/lv_obj_style_gen.h ****     return (const lv_style_transition_dsc_t *)v.ptr;
 528:lvgl/src/core/lv_obj_style_gen.h **** }
 529:lvgl/src/core/lv_obj_style_gen.h **** 
 530:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_blend_mode_t lv_obj_get_style_blend_mode(const struct _lv_obj_t * obj, uint32_t pa
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 60


 1087              		.loc 3 530 31 view .LVU359
 1088              	.LBB141:
 531:lvgl/src/core/lv_obj_style_gen.h **** {
 532:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BLEND_MODE);
 1089              		.loc 3 532 5 view .LVU360
 1090              		.loc 3 532 26 is_stmt 0 view .LVU361
 1091 00dc 6822     		movs	r2, #104
 1092 00de 0021     		movs	r1, #0
 1093 00e0 2046     		mov	r0, r4
 1094 00e2 FFF7FEFF 		bl	lv_obj_get_style_prop
 1095              	.LVL105:
 533:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_blend_mode_t)v.num;
 1096              		.loc 3 533 5 is_stmt 1 view .LVU362
 1097              		.loc 3 533 5 is_stmt 0 view .LVU363
 1098              	.LBE141:
 1099              	.LBE140:
 489:lvgl/src/core/lv_obj.c ****             info->res = LV_COVER_RES_NOT_COVER;
 1100              		.loc 1 489 11 discriminator 1 view .LVU364
 1101 00e6 10F0FF0F 		tst	r0, #255
 1102 00ea 02D0     		beq	.L64
 490:lvgl/src/core/lv_obj.c ****             return;
 1103              		.loc 1 490 13 is_stmt 1 view .LVU365
 490:lvgl/src/core/lv_obj.c ****             return;
 1104              		.loc 1 490 23 is_stmt 0 view .LVU366
 1105 00ec 0123     		movs	r3, #1
 1106 00ee 2B70     		strb	r3, [r5]
 491:lvgl/src/core/lv_obj.c ****         }
 1107              		.loc 1 491 13 is_stmt 1 view .LVU367
 1108 00f0 98E7     		b	.L58
 1109              	.L64:
 494:lvgl/src/core/lv_obj.c ****             info->res = LV_COVER_RES_NOT_COVER;
 1110              		.loc 1 494 9 view .LVU368
 1111              	.LVL106:
 1112              	.LBB142:
 1113              	.LBI142:
 493:lvgl/src/core/lv_obj_style_gen.h **** {
 1114              		.loc 3 493 24 view .LVU369
 1115              	.LBB143:
 495:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 1116              		.loc 3 495 5 view .LVU370
 495:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 1117              		.loc 3 495 26 is_stmt 0 view .LVU371
 1118 00f2 40F26242 		movw	r2, #1122
 1119 00f6 0021     		movs	r1, #0
 1120 00f8 2046     		mov	r0, r4
 1121 00fa FFF7FEFF 		bl	lv_obj_get_style_prop
 1122              	.LVL107:
 496:lvgl/src/core/lv_obj_style_gen.h **** }
 1123              		.loc 3 496 5 is_stmt 1 view .LVU372
 496:lvgl/src/core/lv_obj_style_gen.h **** }
 1124              		.loc 3 496 12 is_stmt 0 view .LVU373
 1125 00fe C3B2     		uxtb	r3, r0
 1126              	.LVL108:
 496:lvgl/src/core/lv_obj_style_gen.h **** }
 1127              		.loc 3 496 12 view .LVU374
 1128              	.LBE143:
 1129              	.LBE142:
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 61


 494:lvgl/src/core/lv_obj.c ****             info->res = LV_COVER_RES_NOT_COVER;
 1130              		.loc 1 494 11 discriminator 1 view .LVU375
 1131 0100 FC2B     		cmp	r3, #252
 1132 0102 02D9     		bls	.L79
 499:lvgl/src/core/lv_obj.c **** 
 1133              		.loc 1 499 9 is_stmt 1 view .LVU376
 499:lvgl/src/core/lv_obj.c **** 
 1134              		.loc 1 499 19 is_stmt 0 view .LVU377
 1135 0104 0023     		movs	r3, #0
 1136 0106 2B70     		strb	r3, [r5]
 1137              	.LBE127:
 1138 0108 8CE7     		b	.L58
 1139              	.L79:
 1140              	.LBB144:
 495:lvgl/src/core/lv_obj.c ****             return;
 1141              		.loc 1 495 13 is_stmt 1 view .LVU378
 495:lvgl/src/core/lv_obj.c ****             return;
 1142              		.loc 1 495 23 is_stmt 0 view .LVU379
 1143 010a 0123     		movs	r3, #1
 1144 010c 2B70     		strb	r3, [r5]
 496:lvgl/src/core/lv_obj.c ****         }
 1145              		.loc 1 496 13 is_stmt 1 view .LVU380
 1146 010e 89E7     		b	.L58
 1147              	.LVL109:
 1148              	.L77:
 496:lvgl/src/core/lv_obj.c ****         }
 1149              		.loc 1 496 13 is_stmt 0 view .LVU381
 1150              	.LBE144:
 1151              	.LBB145:
 503:lvgl/src/core/lv_obj.c ****         lv_draw_rect_dsc_t draw_dsc;
 1152              		.loc 1 503 9 is_stmt 1 view .LVU382
 503:lvgl/src/core/lv_obj.c ****         lv_draw_rect_dsc_t draw_dsc;
 1153              		.loc 1 503 36 is_stmt 0 view .LVU383
 1154 0110 3046     		mov	r0, r6
 1155              	.LVL110:
 503:lvgl/src/core/lv_obj.c ****         lv_draw_rect_dsc_t draw_dsc;
 1156              		.loc 1 503 36 view .LVU384
 1157 0112 FFF7FEFF 		bl	lv_event_get_draw_ctx
 1158              	.LVL111:
 1159 0116 0646     		mov	r6, r0
 1160              	.LVL112:
 504:lvgl/src/core/lv_obj.c ****         lv_draw_rect_dsc_init(&draw_dsc);
 1161              		.loc 1 504 9 is_stmt 1 view .LVU385
 505:lvgl/src/core/lv_obj.c ****         /*If the border is drawn later disable loading its properties*/
 1162              		.loc 1 505 9 view .LVU386
 1163 0118 02A8     		add	r0, sp, #8
 1164              	.LVL113:
 505:lvgl/src/core/lv_obj.c ****         /*If the border is drawn later disable loading its properties*/
 1165              		.loc 1 505 9 is_stmt 0 view .LVU387
 1166 011a FFF7FEFF 		bl	lv_draw_rect_dsc_init
 1167              	.LVL114:
 507:lvgl/src/core/lv_obj.c ****             draw_dsc.border_post = 1;
 1168              		.loc 1 507 9 is_stmt 1 view .LVU388
 1169              	.LBB146:
 1170              	.LBI146:
 253:lvgl/src/core/lv_obj_style_gen.h **** {
 1171              		.loc 3 253 20 view .LVU389
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 62


 1172              	.LBB147:
 255:lvgl/src/core/lv_obj_style_gen.h ****     return (bool)v.num;
 1173              		.loc 3 255 5 view .LVU390
 255:lvgl/src/core/lv_obj_style_gen.h ****     return (bool)v.num;
 1174              		.loc 3 255 26 is_stmt 0 view .LVU391
 1175 011e 3422     		movs	r2, #52
 1176 0120 0021     		movs	r1, #0
 1177 0122 2046     		mov	r0, r4
 1178 0124 FFF7FEFF 		bl	lv_obj_get_style_prop
 1179              	.LVL115:
 256:lvgl/src/core/lv_obj_style_gen.h **** }
 1180              		.loc 3 256 5 is_stmt 1 view .LVU392
 256:lvgl/src/core/lv_obj_style_gen.h **** }
 1181              		.loc 3 256 5 is_stmt 0 view .LVU393
 1182              	.LBE147:
 1183              	.LBE146:
 507:lvgl/src/core/lv_obj.c ****             draw_dsc.border_post = 1;
 1184              		.loc 1 507 11 discriminator 1 view .LVU394
 1185 0128 28B1     		cbz	r0, .L68
 508:lvgl/src/core/lv_obj.c ****         }
 1186              		.loc 1 508 13 is_stmt 1 view .LVU395
 508:lvgl/src/core/lv_obj.c ****         }
 1187              		.loc 1 508 34 is_stmt 0 view .LVU396
 1188 012a 9DF82B30 		ldrb	r3, [sp, #43]	@ zero_extendqisi2
 1189 012e 43F00103 		orr	r3, r3, #1
 1190 0132 8DF82B30 		strb	r3, [sp, #43]
 1191              	.L68:
 511:lvgl/src/core/lv_obj.c ****         lv_coord_t w = lv_obj_get_style_transform_width(obj, LV_PART_MAIN);
 1192              		.loc 1 511 9 is_stmt 1 view .LVU397
 1193 0136 02AF     		add	r7, sp, #8
 1194 0138 3A46     		mov	r2, r7
 1195 013a 0021     		movs	r1, #0
 1196 013c 2046     		mov	r0, r4
 1197 013e FFF7FEFF 		bl	lv_obj_init_draw_rect_dsc
 1198              	.LVL116:
 512:lvgl/src/core/lv_obj.c ****         lv_coord_t h = lv_obj_get_style_transform_height(obj, LV_PART_MAIN);
 1199              		.loc 1 512 9 view .LVU398
 1200              	.LBB148:
 1201              	.LBI148:
  55:lvgl/src/core/lv_obj_style_gen.h **** {
 1202              		.loc 3 55 26 view .LVU399
 1203              	.LBB149:
  57:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1204              		.loc 3 57 5 view .LVU400
  57:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1205              		.loc 3 57 26 is_stmt 0 view .LVU401
 1206 0142 40F60A02 		movw	r2, #2058
 1207 0146 0021     		movs	r1, #0
 1208 0148 2046     		mov	r0, r4
 1209 014a FFF7FEFF 		bl	lv_obj_get_style_prop
 1210              	.LVL117:
 1211 014e 0546     		mov	r5, r0
 1212              	.LVL118:
  58:lvgl/src/core/lv_obj_style_gen.h **** }
 1213              		.loc 3 58 5 is_stmt 1 view .LVU402
  58:lvgl/src/core/lv_obj_style_gen.h **** }
 1214              		.loc 3 58 5 is_stmt 0 view .LVU403
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 63


 1215              	.LBE149:
 1216              	.LBE148:
 513:lvgl/src/core/lv_obj.c ****         lv_area_t coords;
 1217              		.loc 1 513 9 is_stmt 1 view .LVU404
 1218              	.LBB150:
 1219              	.LBI150:
  61:lvgl/src/core/lv_obj_style_gen.h **** {
 1220              		.loc 3 61 26 view .LVU405
 1221              	.LBB151:
  63:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1222              		.loc 3 63 5 view .LVU406
  63:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1223              		.loc 3 63 26 is_stmt 0 view .LVU407
 1224 0150 40F60B02 		movw	r2, #2059
 1225 0154 0021     		movs	r1, #0
 1226 0156 2046     		mov	r0, r4
 1227 0158 FFF7FEFF 		bl	lv_obj_get_style_prop
 1228              	.LVL119:
  64:lvgl/src/core/lv_obj_style_gen.h **** }
 1229              		.loc 3 64 5 is_stmt 1 view .LVU408
  64:lvgl/src/core/lv_obj_style_gen.h **** }
 1230              		.loc 3 64 5 is_stmt 0 view .LVU409
 1231              	.LBE151:
 1232              	.LBE150:
 514:lvgl/src/core/lv_obj.c ****         lv_area_copy(&coords, &obj->coords);
 1233              		.loc 1 514 9 is_stmt 1 view .LVU410
 515:lvgl/src/core/lv_obj.c ****         coords.x1 -= w;
 1234              		.loc 1 515 9 view .LVU411
 1235              	.LBB152:
 1236              	.LBI152:
 110:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 1237              		.loc 4 110 20 view .LVU412
 1238              	.LBB153:
 112:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 1239              		.loc 4 112 5 view .LVU413
 112:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 1240              		.loc 4 112 19 is_stmt 0 view .LVU414
 1241 015c B4F91420 		ldrsh	r2, [r4, #20]
 112:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 1242              		.loc 4 112 14 view .LVU415
 1243 0160 ADF80020 		strh	r2, [sp]	@ movhi
 113:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 1244              		.loc 4 113 5 is_stmt 1 view .LVU416
 113:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 1245              		.loc 4 113 19 is_stmt 0 view .LVU417
 1246 0164 B4F91630 		ldrsh	r3, [r4, #22]
 113:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 1247              		.loc 4 113 14 view .LVU418
 1248 0168 ADF80230 		strh	r3, [sp, #2]	@ movhi
 114:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 1249              		.loc 4 114 5 is_stmt 1 view .LVU419
 114:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 1250              		.loc 4 114 19 is_stmt 0 view .LVU420
 1251 016c B4F918C0 		ldrsh	ip, [r4, #24]
 114:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 1252              		.loc 4 114 14 view .LVU421
 1253 0170 ADF804C0 		strh	ip, [sp, #4]	@ movhi
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 64


 1254              		.loc 4 115 5 is_stmt 1 view .LVU422
 1255              		.loc 4 115 19 is_stmt 0 view .LVU423
 1256 0174 B4F91A10 		ldrsh	r1, [r4, #26]
 1257              		.loc 4 115 14 view .LVU424
 1258 0178 ADF80610 		strh	r1, [sp, #6]	@ movhi
 1259              	.LVL120:
 1260              		.loc 4 115 14 view .LVU425
 1261              	.LBE153:
 1262              	.LBE152:
 516:lvgl/src/core/lv_obj.c ****         coords.x2 += w;
 1263              		.loc 1 516 9 is_stmt 1 view .LVU426
 516:lvgl/src/core/lv_obj.c ****         coords.x2 += w;
 1264              		.loc 1 516 15 is_stmt 0 view .LVU427
 1265 017c 92B2     		uxth	r2, r2
 516:lvgl/src/core/lv_obj.c ****         coords.x2 += w;
 1266              		.loc 1 516 19 view .LVU428
 1267 017e ADB2     		uxth	r5, r5
 516:lvgl/src/core/lv_obj.c ****         coords.x2 += w;
 1268              		.loc 1 516 19 view .LVU429
 1269 0180 521B     		subs	r2, r2, r5
 1270 0182 ADF80020 		strh	r2, [sp]	@ movhi
 517:lvgl/src/core/lv_obj.c ****         coords.y1 -= h;
 1271              		.loc 1 517 9 is_stmt 1 view .LVU430
 517:lvgl/src/core/lv_obj.c ****         coords.y1 -= h;
 1272              		.loc 1 517 19 is_stmt 0 view .LVU431
 1273 0186 15FA8CFC 		uxtah	ip, r5, ip
 1274 018a ADF804C0 		strh	ip, [sp, #4]	@ movhi
 518:lvgl/src/core/lv_obj.c ****         coords.y2 += h;
 1275              		.loc 1 518 9 is_stmt 1 view .LVU432
 518:lvgl/src/core/lv_obj.c ****         coords.y2 += h;
 1276              		.loc 1 518 15 is_stmt 0 view .LVU433
 1277 018e 9BB2     		uxth	r3, r3
 518:lvgl/src/core/lv_obj.c ****         coords.y2 += h;
 1278              		.loc 1 518 19 view .LVU434
 1279 0190 80B2     		uxth	r0, r0
 518:lvgl/src/core/lv_obj.c ****         coords.y2 += h;
 1280              		.loc 1 518 19 view .LVU435
 1281 0192 1B1A     		subs	r3, r3, r0
 1282 0194 ADF80230 		strh	r3, [sp, #2]	@ movhi
 519:lvgl/src/core/lv_obj.c **** 
 1283              		.loc 1 519 9 is_stmt 1 view .LVU436
 519:lvgl/src/core/lv_obj.c **** 
 1284              		.loc 1 519 19 is_stmt 0 view .LVU437
 1285 0198 10FA81F1 		uxtah	r1, r0, r1
 1286 019c ADF80610 		strh	r1, [sp, #6]	@ movhi
 521:lvgl/src/core/lv_obj.c ****         lv_obj_draw_dsc_init(&part_dsc, draw_ctx);
 1287              		.loc 1 521 9 is_stmt 1 view .LVU438
 522:lvgl/src/core/lv_obj.c ****         part_dsc.class_p = MY_CLASS;
 1288              		.loc 1 522 9 view .LVU439
 1289 01a0 3146     		mov	r1, r6
 1290 01a2 10A8     		add	r0, sp, #64
 1291              	.LVL121:
 522:lvgl/src/core/lv_obj.c ****         part_dsc.class_p = MY_CLASS;
 1292              		.loc 1 522 9 is_stmt 0 view .LVU440
 1293 01a4 FFF7FEFF 		bl	lv_obj_draw_dsc_init
 1294              	.LVL122:
 523:lvgl/src/core/lv_obj.c ****         part_dsc.type = LV_OBJ_DRAW_PART_RECTANGLE;
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 65


 1295              		.loc 1 523 9 is_stmt 1 view .LVU441
 523:lvgl/src/core/lv_obj.c ****         part_dsc.type = LV_OBJ_DRAW_PART_RECTANGLE;
 1296              		.loc 1 523 26 is_stmt 0 view .LVU442
 1297 01a8 684B     		ldr	r3, .L82
 1298 01aa 1193     		str	r3, [sp, #68]
 524:lvgl/src/core/lv_obj.c ****         part_dsc.rect_dsc = &draw_dsc;
 1299              		.loc 1 524 9 is_stmt 1 view .LVU443
 524:lvgl/src/core/lv_obj.c ****         part_dsc.rect_dsc = &draw_dsc;
 1300              		.loc 1 524 23 is_stmt 0 view .LVU444
 1301 01ac 0025     		movs	r5, #0
 1302              	.LVL123:
 524:lvgl/src/core/lv_obj.c ****         part_dsc.rect_dsc = &draw_dsc;
 1303              		.loc 1 524 23 view .LVU445
 1304 01ae 1295     		str	r5, [sp, #72]
 525:lvgl/src/core/lv_obj.c ****         part_dsc.draw_area = &coords;
 1305              		.loc 1 525 9 is_stmt 1 view .LVU446
 525:lvgl/src/core/lv_obj.c ****         part_dsc.draw_area = &coords;
 1306              		.loc 1 525 27 is_stmt 0 view .LVU447
 1307 01b0 1497     		str	r7, [sp, #80]
 526:lvgl/src/core/lv_obj.c ****         part_dsc.part = LV_PART_MAIN;
 1308              		.loc 1 526 9 is_stmt 1 view .LVU448
 526:lvgl/src/core/lv_obj.c ****         part_dsc.part = LV_PART_MAIN;
 1309              		.loc 1 526 28 is_stmt 0 view .LVU449
 1310 01b2 CDF84CD0 		str	sp, [sp, #76]
 527:lvgl/src/core/lv_obj.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_BEGIN, &part_dsc);
 1311              		.loc 1 527 9 is_stmt 1 view .LVU450
 527:lvgl/src/core/lv_obj.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_BEGIN, &part_dsc);
 1312              		.loc 1 527 23 is_stmt 0 view .LVU451
 1313 01b6 1D95     		str	r5, [sp, #116]
 528:lvgl/src/core/lv_obj.c **** 
 1314              		.loc 1 528 9 is_stmt 1 view .LVU452
 1315 01b8 10AA     		add	r2, sp, #64
 1316 01ba 1A21     		movs	r1, #26
 1317 01bc 2046     		mov	r0, r4
 1318 01be FFF7FEFF 		bl	lv_event_send
 1319              	.LVL124:
 533:lvgl/src/core/lv_obj.c ****         const void * bg_img_src = draw_dsc.bg_img_src;
 1320              		.loc 1 533 9 view .LVU453
 1321              	.LBB154:
 1322              	.LBI154:
 487:lvgl/src/core/lv_obj_style_gen.h **** {
 1323              		.loc 3 487 20 view .LVU454
 1324              	.LBB155:
 489:lvgl/src/core/lv_obj_style_gen.h ****     return (bool)v.num;
 1325              		.loc 3 489 5 view .LVU455
 489:lvgl/src/core/lv_obj_style_gen.h ****     return (bool)v.num;
 1326              		.loc 3 489 26 is_stmt 0 view .LVU456
 1327 01c2 6122     		movs	r2, #97
 1328 01c4 2946     		mov	r1, r5
 1329 01c6 2046     		mov	r0, r4
 1330 01c8 FFF7FEFF 		bl	lv_obj_get_style_prop
 1331              	.LVL125:
 490:lvgl/src/core/lv_obj_style_gen.h **** }
 1332              		.loc 3 490 5 is_stmt 1 view .LVU457
 490:lvgl/src/core/lv_obj_style_gen.h **** }
 1333              		.loc 3 490 5 is_stmt 0 view .LVU458
 1334              	.LBE155:
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 66


 1335              	.LBE154:
 533:lvgl/src/core/lv_obj.c ****         const void * bg_img_src = draw_dsc.bg_img_src;
 1336              		.loc 1 533 109 discriminator 1 view .LVU459
 1337 01cc 20B1     		cbz	r0, .L73
 533:lvgl/src/core/lv_obj.c ****         const void * bg_img_src = draw_dsc.bg_img_src;
 1338              		.loc 1 533 88 discriminator 1 view .LVU460
 1339 01ce BDF90830 		ldrsh	r3, [sp, #8]
 533:lvgl/src/core/lv_obj.c ****         const void * bg_img_src = draw_dsc.bg_img_src;
 1340              		.loc 1 533 109 discriminator 1 view .LVU461
 1341 01d2 9BB9     		cbnz	r3, .L74
 533:lvgl/src/core/lv_obj.c ****         const void * bg_img_src = draw_dsc.bg_img_src;
 1342              		.loc 1 533 109 discriminator 4 view .LVU462
 1343 01d4 2B46     		mov	r3, r5
 1344 01d6 00E0     		b	.L69
 1345              	.L73:
 1346 01d8 0023     		movs	r3, #0
 1347              	.L69:
 1348              	.LVL126:
 534:lvgl/src/core/lv_obj.c ****         if(clip_corner) {
 1349              		.loc 1 534 9 is_stmt 1 view .LVU463
 534:lvgl/src/core/lv_obj.c ****         if(clip_corner) {
 1350              		.loc 1 534 22 is_stmt 0 view .LVU464
 1351 01da 069F     		ldr	r7, [sp, #24]
 1352              	.LVL127:
 535:lvgl/src/core/lv_obj.c ****             draw_dsc.bg_img_src = NULL;
 1353              		.loc 1 535 9 is_stmt 1 view .LVU465
 535:lvgl/src/core/lv_obj.c ****             draw_dsc.bg_img_src = NULL;
 1354              		.loc 1 535 11 is_stmt 0 view .LVU466
 1355 01dc 1D46     		mov	r5, r3
 1356 01de 0BB1     		cbz	r3, .L70
 536:lvgl/src/core/lv_obj.c ****         }
 1357              		.loc 1 536 13 is_stmt 1 view .LVU467
 536:lvgl/src/core/lv_obj.c ****         }
 1358              		.loc 1 536 33 is_stmt 0 view .LVU468
 1359 01e0 0023     		movs	r3, #0
 1360              	.LVL128:
 536:lvgl/src/core/lv_obj.c ****         }
 1361              		.loc 1 536 33 view .LVU469
 1362 01e2 0693     		str	r3, [sp, #24]
 1363              	.L70:
 540:lvgl/src/core/lv_obj.c **** 
 1364              		.loc 1 540 9 is_stmt 1 view .LVU470
 1365 01e4 6A46     		mov	r2, sp
 1366 01e6 02A9     		add	r1, sp, #8
 1367 01e8 3046     		mov	r0, r6
 1368 01ea FFF7FEFF 		bl	lv_draw_rect
 1369              	.LVL129:
 544:lvgl/src/core/lv_obj.c ****             lv_draw_mask_radius_param_t * mp = lv_mem_buf_get(sizeof(lv_draw_mask_radius_param_t));
 1370              		.loc 1 544 9 view .LVU471
 544:lvgl/src/core/lv_obj.c ****             lv_draw_mask_radius_param_t * mp = lv_mem_buf_get(sizeof(lv_draw_mask_radius_param_t));
 1371              		.loc 1 544 11 is_stmt 0 view .LVU472
 1372 01ee 3DB9     		cbnz	r5, .L80
 1373              	.LVL130:
 1374              	.L71:
 561:lvgl/src/core/lv_obj.c ****     }
 1375              		.loc 1 561 9 is_stmt 1 view .LVU473
 1376 01f0 10AA     		add	r2, sp, #64
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 67


 1377 01f2 1B21     		movs	r1, #27
 1378 01f4 2046     		mov	r0, r4
 1379 01f6 FFF7FEFF 		bl	lv_event_send
 1380              	.LVL131:
 1381              	.LBE145:
 1382 01fa 13E7     		b	.L58
 1383              	.LVL132:
 1384              	.L74:
 1385              	.LBB157:
 533:lvgl/src/core/lv_obj.c ****         const void * bg_img_src = draw_dsc.bg_img_src;
 1386              		.loc 1 533 109 is_stmt 0 discriminator 3 view .LVU474
 1387 01fc 0123     		movs	r3, #1
 1388 01fe ECE7     		b	.L69
 1389              	.LVL133:
 1390              	.L80:
 1391              	.LBB156:
 545:lvgl/src/core/lv_obj.c ****             lv_draw_mask_radius_init(mp, &obj->coords, draw_dsc.radius, false);
 1392              		.loc 1 545 13 is_stmt 1 view .LVU475
 545:lvgl/src/core/lv_obj.c ****             lv_draw_mask_radius_init(mp, &obj->coords, draw_dsc.radius, false);
 1393              		.loc 1 545 48 is_stmt 0 view .LVU476
 1394 0200 1820     		movs	r0, #24
 1395 0202 FFF7FEFF 		bl	lv_mem_buf_get
 1396              	.LVL134:
 1397 0206 0546     		mov	r5, r0
 1398              	.LVL135:
 546:lvgl/src/core/lv_obj.c ****             /*Add the mask and use `obj+8` as custom id. Don't use `obj` directly because it might 
 1399              		.loc 1 546 13 is_stmt 1 view .LVU477
 1400 0208 0023     		movs	r3, #0
 1401 020a BDF90820 		ldrsh	r2, [sp, #8]
 1402 020e 04F11401 		add	r1, r4, #20
 1403 0212 FFF7FEFF 		bl	lv_draw_mask_radius_init
 1404              	.LVL136:
 548:lvgl/src/core/lv_obj.c **** 
 1405              		.loc 1 548 13 view .LVU478
 1406 0216 04F59071 		add	r1, r4, #288
 1407 021a 2846     		mov	r0, r5
 1408 021c FFF7FEFF 		bl	lv_draw_mask_add
 1409              	.LVL137:
 550:lvgl/src/core/lv_obj.c ****                 draw_dsc.bg_opa = LV_OPA_TRANSP;
 1410              		.loc 1 550 13 view .LVU479
 550:lvgl/src/core/lv_obj.c ****                 draw_dsc.bg_opa = LV_OPA_TRANSP;
 1411              		.loc 1 550 15 is_stmt 0 view .LVU480
 1412 0220 002F     		cmp	r7, #0
 1413 0222 E5D0     		beq	.L71
 551:lvgl/src/core/lv_obj.c ****                 draw_dsc.border_opa = LV_OPA_TRANSP;
 1414              		.loc 1 551 17 is_stmt 1 view .LVU481
 551:lvgl/src/core/lv_obj.c ****                 draw_dsc.border_opa = LV_OPA_TRANSP;
 1415              		.loc 1 551 33 is_stmt 0 view .LVU482
 1416 0224 0023     		movs	r3, #0
 1417 0226 8DF80B30 		strb	r3, [sp, #11]
 552:lvgl/src/core/lv_obj.c ****                 draw_dsc.outline_opa = LV_OPA_TRANSP;
 1418              		.loc 1 552 17 is_stmt 1 view .LVU483
 552:lvgl/src/core/lv_obj.c ****                 draw_dsc.outline_opa = LV_OPA_TRANSP;
 1419              		.loc 1 552 37 is_stmt 0 view .LVU484
 1420 022a 8DF82A30 		strb	r3, [sp, #42]
 553:lvgl/src/core/lv_obj.c ****                 draw_dsc.shadow_opa = LV_OPA_TRANSP;
 1421              		.loc 1 553 17 is_stmt 1 view .LVU485
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 68


 553:lvgl/src/core/lv_obj.c ****                 draw_dsc.shadow_opa = LV_OPA_TRANSP;
 1422              		.loc 1 553 38 is_stmt 0 view .LVU486
 1423 022e 8DF83230 		strb	r3, [sp, #50]
 554:lvgl/src/core/lv_obj.c ****                 draw_dsc.bg_img_src = bg_img_src;
 1424              		.loc 1 554 17 is_stmt 1 view .LVU487
 554:lvgl/src/core/lv_obj.c ****                 draw_dsc.bg_img_src = bg_img_src;
 1425              		.loc 1 554 37 is_stmt 0 view .LVU488
 1426 0232 8DF83E30 		strb	r3, [sp, #62]
 555:lvgl/src/core/lv_obj.c ****                 lv_draw_rect(draw_ctx, &draw_dsc, &coords);
 1427              		.loc 1 555 17 is_stmt 1 view .LVU489
 555:lvgl/src/core/lv_obj.c ****                 lv_draw_rect(draw_ctx, &draw_dsc, &coords);
 1428              		.loc 1 555 37 is_stmt 0 view .LVU490
 1429 0236 0697     		str	r7, [sp, #24]
 556:lvgl/src/core/lv_obj.c ****             }
 1430              		.loc 1 556 17 is_stmt 1 view .LVU491
 1431 0238 6A46     		mov	r2, sp
 1432 023a 02A9     		add	r1, sp, #8
 1433 023c 3046     		mov	r0, r6
 1434 023e FFF7FEFF 		bl	lv_draw_rect
 1435              	.LVL138:
 1436 0242 D5E7     		b	.L71
 1437              	.LVL139:
 1438              	.L78:
 556:lvgl/src/core/lv_obj.c ****             }
 1439              		.loc 1 556 17 is_stmt 0 view .LVU492
 1440              	.LBE156:
 1441              	.LBE157:
 1442              	.LBB158:
 564:lvgl/src/core/lv_obj.c ****         draw_scrollbar(obj, draw_ctx);
 1443              		.loc 1 564 9 is_stmt 1 view .LVU493
 564:lvgl/src/core/lv_obj.c ****         draw_scrollbar(obj, draw_ctx);
 1444              		.loc 1 564 36 is_stmt 0 view .LVU494
 1445 0244 3046     		mov	r0, r6
 1446              	.LVL140:
 564:lvgl/src/core/lv_obj.c ****         draw_scrollbar(obj, draw_ctx);
 1447              		.loc 1 564 36 view .LVU495
 1448 0246 FFF7FEFF 		bl	lv_event_get_draw_ctx
 1449              	.LVL141:
 1450 024a 0546     		mov	r5, r0
 1451              	.LVL142:
 565:lvgl/src/core/lv_obj.c **** 
 1452              		.loc 1 565 9 is_stmt 1 view .LVU496
 1453 024c 0146     		mov	r1, r0
 1454 024e 2046     		mov	r0, r4
 1455              	.LVL143:
 565:lvgl/src/core/lv_obj.c **** 
 1456              		.loc 1 565 9 is_stmt 0 view .LVU497
 1457 0250 FFF7FEFF 		bl	draw_scrollbar
 1458              	.LVL144:
 568:lvgl/src/core/lv_obj.c ****             lv_draw_mask_radius_param_t * param = lv_draw_mask_remove_custom(obj + 8);
 1459              		.loc 1 568 9 is_stmt 1 view .LVU498
 1460              	.LBB159:
 1461              	.LBI159:
 487:lvgl/src/core/lv_obj_style_gen.h **** {
 1462              		.loc 3 487 20 view .LVU499
 1463              	.LBB160:
 489:lvgl/src/core/lv_obj_style_gen.h ****     return (bool)v.num;
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 69


 1464              		.loc 3 489 5 view .LVU500
 489:lvgl/src/core/lv_obj_style_gen.h ****     return (bool)v.num;
 1465              		.loc 3 489 26 is_stmt 0 view .LVU501
 1466 0254 6122     		movs	r2, #97
 1467 0256 0021     		movs	r1, #0
 1468 0258 2046     		mov	r0, r4
 1469 025a FFF7FEFF 		bl	lv_obj_get_style_prop
 1470              	.LVL145:
 490:lvgl/src/core/lv_obj_style_gen.h **** }
 1471              		.loc 3 490 5 is_stmt 1 view .LVU502
 490:lvgl/src/core/lv_obj_style_gen.h **** }
 1472              		.loc 3 490 5 is_stmt 0 view .LVU503
 1473              	.LBE160:
 1474              	.LBE159:
 568:lvgl/src/core/lv_obj.c ****             lv_draw_mask_radius_param_t * param = lv_draw_mask_remove_custom(obj + 8);
 1475              		.loc 1 568 11 discriminator 1 view .LVU504
 1476 025e 0028     		cmp	r0, #0
 1477 0260 66D1     		bne	.L81
 1478              	.LVL146:
 1479              	.L72:
 578:lvgl/src/core/lv_obj.c ****             lv_draw_rect_dsc_t draw_dsc;
 1480              		.loc 1 578 9 is_stmt 1 view .LVU505
 1481              	.LBB161:
 1482              	.LBI161:
 253:lvgl/src/core/lv_obj_style_gen.h **** {
 1483              		.loc 3 253 20 view .LVU506
 1484              	.LBB162:
 255:lvgl/src/core/lv_obj_style_gen.h ****     return (bool)v.num;
 1485              		.loc 3 255 5 view .LVU507
 255:lvgl/src/core/lv_obj_style_gen.h ****     return (bool)v.num;
 1486              		.loc 3 255 26 is_stmt 0 view .LVU508
 1487 0262 3422     		movs	r2, #52
 1488 0264 0021     		movs	r1, #0
 1489 0266 2046     		mov	r0, r4
 1490 0268 FFF7FEFF 		bl	lv_obj_get_style_prop
 1491              	.LVL147:
 256:lvgl/src/core/lv_obj_style_gen.h **** }
 1492              		.loc 3 256 5 is_stmt 1 view .LVU509
 256:lvgl/src/core/lv_obj_style_gen.h **** }
 1493              		.loc 3 256 5 is_stmt 0 view .LVU510
 1494              	.LBE162:
 1495              	.LBE161:
 578:lvgl/src/core/lv_obj.c ****             lv_draw_rect_dsc_t draw_dsc;
 1496              		.loc 1 578 11 discriminator 1 view .LVU511
 1497 026c 0028     		cmp	r0, #0
 1498 026e 3FF4D9AE 		beq	.L58
 1499              	.LBB163:
 579:lvgl/src/core/lv_obj.c ****             lv_draw_rect_dsc_init(&draw_dsc);
 1500              		.loc 1 579 13 is_stmt 1 view .LVU512
 580:lvgl/src/core/lv_obj.c ****             draw_dsc.bg_opa = LV_OPA_TRANSP;
 1501              		.loc 1 580 13 view .LVU513
 1502 0272 0DF10808 		add	r8, sp, #8
 1503 0276 4046     		mov	r0, r8
 1504 0278 FFF7FEFF 		bl	lv_draw_rect_dsc_init
 1505              	.LVL148:
 581:lvgl/src/core/lv_obj.c ****             draw_dsc.bg_img_opa = LV_OPA_TRANSP;
 1506              		.loc 1 581 13 view .LVU514
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 70


 581:lvgl/src/core/lv_obj.c ****             draw_dsc.bg_img_opa = LV_OPA_TRANSP;
 1507              		.loc 1 581 29 is_stmt 0 view .LVU515
 1508 027c 0026     		movs	r6, #0
 1509 027e 8DF80B60 		strb	r6, [sp, #11]
 582:lvgl/src/core/lv_obj.c ****             draw_dsc.outline_opa = LV_OPA_TRANSP;
 1510              		.loc 1 582 13 is_stmt 1 view .LVU516
 582:lvgl/src/core/lv_obj.c ****             draw_dsc.outline_opa = LV_OPA_TRANSP;
 1511              		.loc 1 582 33 is_stmt 0 view .LVU517
 1512 0282 8DF82260 		strb	r6, [sp, #34]
 583:lvgl/src/core/lv_obj.c ****             draw_dsc.shadow_opa = LV_OPA_TRANSP;
 1513              		.loc 1 583 13 is_stmt 1 view .LVU518
 583:lvgl/src/core/lv_obj.c ****             draw_dsc.shadow_opa = LV_OPA_TRANSP;
 1514              		.loc 1 583 34 is_stmt 0 view .LVU519
 1515 0286 8DF83260 		strb	r6, [sp, #50]
 584:lvgl/src/core/lv_obj.c ****             lv_obj_init_draw_rect_dsc(obj, LV_PART_MAIN, &draw_dsc);
 1516              		.loc 1 584 13 is_stmt 1 view .LVU520
 584:lvgl/src/core/lv_obj.c ****             lv_obj_init_draw_rect_dsc(obj, LV_PART_MAIN, &draw_dsc);
 1517              		.loc 1 584 33 is_stmt 0 view .LVU521
 1518 028a 8DF83E60 		strb	r6, [sp, #62]
 585:lvgl/src/core/lv_obj.c **** 
 1519              		.loc 1 585 13 is_stmt 1 view .LVU522
 1520 028e 4246     		mov	r2, r8
 1521 0290 3146     		mov	r1, r6
 1522 0292 2046     		mov	r0, r4
 1523 0294 FFF7FEFF 		bl	lv_obj_init_draw_rect_dsc
 1524              	.LVL149:
 587:lvgl/src/core/lv_obj.c ****             lv_coord_t h = lv_obj_get_style_transform_height(obj, LV_PART_MAIN);
 1525              		.loc 1 587 13 view .LVU523
 1526              	.LBB164:
 1527              	.LBI164:
  55:lvgl/src/core/lv_obj_style_gen.h **** {
 1528              		.loc 3 55 26 view .LVU524
 1529              	.LBB165:
  57:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1530              		.loc 3 57 5 view .LVU525
  57:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1531              		.loc 3 57 26 is_stmt 0 view .LVU526
 1532 0298 40F60A02 		movw	r2, #2058
 1533 029c 3146     		mov	r1, r6
 1534 029e 2046     		mov	r0, r4
 1535 02a0 FFF7FEFF 		bl	lv_obj_get_style_prop
 1536              	.LVL150:
 1537 02a4 0746     		mov	r7, r0
 1538              	.LVL151:
  58:lvgl/src/core/lv_obj_style_gen.h **** }
 1539              		.loc 3 58 5 is_stmt 1 view .LVU527
  58:lvgl/src/core/lv_obj_style_gen.h **** }
 1540              		.loc 3 58 5 is_stmt 0 view .LVU528
 1541              	.LBE165:
 1542              	.LBE164:
 588:lvgl/src/core/lv_obj.c ****             lv_area_t coords;
 1543              		.loc 1 588 13 is_stmt 1 view .LVU529
 1544              	.LBB166:
 1545              	.LBI166:
  61:lvgl/src/core/lv_obj_style_gen.h **** {
 1546              		.loc 3 61 26 view .LVU530
 1547              	.LBB167:
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 71


  63:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1548              		.loc 3 63 5 view .LVU531
  63:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1549              		.loc 3 63 26 is_stmt 0 view .LVU532
 1550 02a6 40F60B02 		movw	r2, #2059
 1551 02aa 3146     		mov	r1, r6
 1552 02ac 2046     		mov	r0, r4
 1553 02ae FFF7FEFF 		bl	lv_obj_get_style_prop
 1554              	.LVL152:
  64:lvgl/src/core/lv_obj_style_gen.h **** }
 1555              		.loc 3 64 5 is_stmt 1 view .LVU533
  64:lvgl/src/core/lv_obj_style_gen.h **** }
 1556              		.loc 3 64 5 is_stmt 0 view .LVU534
 1557              	.LBE167:
 1558              	.LBE166:
 589:lvgl/src/core/lv_obj.c ****             lv_area_copy(&coords, &obj->coords);
 1559              		.loc 1 589 13 is_stmt 1 view .LVU535
 590:lvgl/src/core/lv_obj.c ****             coords.x1 -= w;
 1560              		.loc 1 590 13 view .LVU536
 1561              	.LBB168:
 1562              	.LBI168:
 110:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 1563              		.loc 4 110 20 view .LVU537
 1564              	.LBB169:
 112:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 1565              		.loc 4 112 5 view .LVU538
 112:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 1566              		.loc 4 112 19 is_stmt 0 view .LVU539
 1567 02b2 B4F91420 		ldrsh	r2, [r4, #20]
 112:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 1568              		.loc 4 112 14 view .LVU540
 1569 02b6 ADF80020 		strh	r2, [sp]	@ movhi
 113:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 1570              		.loc 4 113 5 is_stmt 1 view .LVU541
 113:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 1571              		.loc 4 113 19 is_stmt 0 view .LVU542
 1572 02ba B4F91630 		ldrsh	r3, [r4, #22]
 113:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 1573              		.loc 4 113 14 view .LVU543
 1574 02be ADF80230 		strh	r3, [sp, #2]	@ movhi
 114:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 1575              		.loc 4 114 5 is_stmt 1 view .LVU544
 114:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 1576              		.loc 4 114 19 is_stmt 0 view .LVU545
 1577 02c2 B4F918C0 		ldrsh	ip, [r4, #24]
 114:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 1578              		.loc 4 114 14 view .LVU546
 1579 02c6 ADF804C0 		strh	ip, [sp, #4]	@ movhi
 1580              		.loc 4 115 5 is_stmt 1 view .LVU547
 1581              		.loc 4 115 19 is_stmt 0 view .LVU548
 1582 02ca B4F91A10 		ldrsh	r1, [r4, #26]
 1583              		.loc 4 115 14 view .LVU549
 1584 02ce ADF80610 		strh	r1, [sp, #6]	@ movhi
 1585              	.LVL153:
 1586              		.loc 4 115 14 view .LVU550
 1587              	.LBE169:
 1588              	.LBE168:
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 72


 591:lvgl/src/core/lv_obj.c ****             coords.x2 += w;
 1589              		.loc 1 591 13 is_stmt 1 view .LVU551
 591:lvgl/src/core/lv_obj.c ****             coords.x2 += w;
 1590              		.loc 1 591 19 is_stmt 0 view .LVU552
 1591 02d2 92B2     		uxth	r2, r2
 591:lvgl/src/core/lv_obj.c ****             coords.x2 += w;
 1592              		.loc 1 591 23 view .LVU553
 1593 02d4 BFB2     		uxth	r7, r7
 591:lvgl/src/core/lv_obj.c ****             coords.x2 += w;
 1594              		.loc 1 591 23 view .LVU554
 1595 02d6 D21B     		subs	r2, r2, r7
 1596 02d8 ADF80020 		strh	r2, [sp]	@ movhi
 592:lvgl/src/core/lv_obj.c ****             coords.y1 -= h;
 1597              		.loc 1 592 13 is_stmt 1 view .LVU555
 592:lvgl/src/core/lv_obj.c ****             coords.y1 -= h;
 1598              		.loc 1 592 23 is_stmt 0 view .LVU556
 1599 02dc 17FA8CFC 		uxtah	ip, r7, ip
 1600 02e0 ADF804C0 		strh	ip, [sp, #4]	@ movhi
 593:lvgl/src/core/lv_obj.c ****             coords.y2 += h;
 1601              		.loc 1 593 13 is_stmt 1 view .LVU557
 593:lvgl/src/core/lv_obj.c ****             coords.y2 += h;
 1602              		.loc 1 593 19 is_stmt 0 view .LVU558
 1603 02e4 9BB2     		uxth	r3, r3
 593:lvgl/src/core/lv_obj.c ****             coords.y2 += h;
 1604              		.loc 1 593 23 view .LVU559
 1605 02e6 80B2     		uxth	r0, r0
 593:lvgl/src/core/lv_obj.c ****             coords.y2 += h;
 1606              		.loc 1 593 23 view .LVU560
 1607 02e8 1B1A     		subs	r3, r3, r0
 1608 02ea ADF80230 		strh	r3, [sp, #2]	@ movhi
 594:lvgl/src/core/lv_obj.c **** 
 1609              		.loc 1 594 13 is_stmt 1 view .LVU561
 594:lvgl/src/core/lv_obj.c **** 
 1610              		.loc 1 594 23 is_stmt 0 view .LVU562
 1611 02ee 10FA81F1 		uxtah	r1, r0, r1
 1612 02f2 ADF80610 		strh	r1, [sp, #6]	@ movhi
 596:lvgl/src/core/lv_obj.c ****             lv_obj_draw_dsc_init(&part_dsc, draw_ctx);
 1613              		.loc 1 596 13 is_stmt 1 view .LVU563
 597:lvgl/src/core/lv_obj.c ****             part_dsc.class_p = MY_CLASS;
 1614              		.loc 1 597 13 view .LVU564
 1615 02f6 2946     		mov	r1, r5
 1616 02f8 10A8     		add	r0, sp, #64
 1617              	.LVL154:
 597:lvgl/src/core/lv_obj.c ****             part_dsc.class_p = MY_CLASS;
 1618              		.loc 1 597 13 is_stmt 0 view .LVU565
 1619 02fa FFF7FEFF 		bl	lv_obj_draw_dsc_init
 1620              	.LVL155:
 598:lvgl/src/core/lv_obj.c ****             part_dsc.type = LV_OBJ_DRAW_PART_BORDER_POST;
 1621              		.loc 1 598 13 is_stmt 1 view .LVU566
 598:lvgl/src/core/lv_obj.c ****             part_dsc.type = LV_OBJ_DRAW_PART_BORDER_POST;
 1622              		.loc 1 598 30 is_stmt 0 view .LVU567
 1623 02fe 134B     		ldr	r3, .L82
 1624 0300 1193     		str	r3, [sp, #68]
 599:lvgl/src/core/lv_obj.c ****             part_dsc.rect_dsc = &draw_dsc;
 1625              		.loc 1 599 13 is_stmt 1 view .LVU568
 599:lvgl/src/core/lv_obj.c ****             part_dsc.rect_dsc = &draw_dsc;
 1626              		.loc 1 599 27 is_stmt 0 view .LVU569
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 73


 1627 0302 0123     		movs	r3, #1
 1628 0304 1293     		str	r3, [sp, #72]
 600:lvgl/src/core/lv_obj.c ****             part_dsc.draw_area = &coords;
 1629              		.loc 1 600 13 is_stmt 1 view .LVU570
 600:lvgl/src/core/lv_obj.c ****             part_dsc.draw_area = &coords;
 1630              		.loc 1 600 31 is_stmt 0 view .LVU571
 1631 0306 CDF85080 		str	r8, [sp, #80]
 601:lvgl/src/core/lv_obj.c ****             part_dsc.part = LV_PART_MAIN;
 1632              		.loc 1 601 13 is_stmt 1 view .LVU572
 601:lvgl/src/core/lv_obj.c ****             part_dsc.part = LV_PART_MAIN;
 1633              		.loc 1 601 32 is_stmt 0 view .LVU573
 1634 030a CDF84CD0 		str	sp, [sp, #76]
 602:lvgl/src/core/lv_obj.c ****             lv_event_send(obj, LV_EVENT_DRAW_PART_BEGIN, &part_dsc);
 1635              		.loc 1 602 13 is_stmt 1 view .LVU574
 602:lvgl/src/core/lv_obj.c ****             lv_event_send(obj, LV_EVENT_DRAW_PART_BEGIN, &part_dsc);
 1636              		.loc 1 602 27 is_stmt 0 view .LVU575
 1637 030e 1D96     		str	r6, [sp, #116]
 603:lvgl/src/core/lv_obj.c **** 
 1638              		.loc 1 603 13 is_stmt 1 view .LVU576
 1639 0310 10AA     		add	r2, sp, #64
 1640 0312 1A21     		movs	r1, #26
 1641 0314 2046     		mov	r0, r4
 1642 0316 FFF7FEFF 		bl	lv_event_send
 1643              	.LVL156:
 605:lvgl/src/core/lv_obj.c ****             lv_event_send(obj, LV_EVENT_DRAW_PART_END, &part_dsc);
 1644              		.loc 1 605 13 view .LVU577
 1645 031a 6A46     		mov	r2, sp
 1646 031c 4146     		mov	r1, r8
 1647 031e 2846     		mov	r0, r5
 1648 0320 FFF7FEFF 		bl	lv_draw_rect
 1649              	.LVL157:
 606:lvgl/src/core/lv_obj.c ****         }
 1650              		.loc 1 606 13 view .LVU578
 1651 0324 10AA     		add	r2, sp, #64
 1652 0326 1B21     		movs	r1, #27
 1653 0328 2046     		mov	r0, r4
 1654 032a FFF7FEFF 		bl	lv_event_send
 1655              	.LVL158:
 1656 032e 79E6     		b	.L58
 1657              	.LVL159:
 1658              	.L81:
 606:lvgl/src/core/lv_obj.c ****         }
 1659              		.loc 1 606 13 is_stmt 0 view .LVU579
 1660              	.LBE163:
 1661              	.LBB170:
 569:lvgl/src/core/lv_obj.c ****             if(param) {
 1662              		.loc 1 569 13 is_stmt 1 view .LVU580
 569:lvgl/src/core/lv_obj.c ****             if(param) {
 1663              		.loc 1 569 51 is_stmt 0 view .LVU581
 1664 0330 04F59070 		add	r0, r4, #288
 1665 0334 FFF7FEFF 		bl	lv_draw_mask_remove_custom
 1666              	.LVL160:
 570:lvgl/src/core/lv_obj.c ****                 lv_draw_mask_free_param(param);
 1667              		.loc 1 570 13 is_stmt 1 view .LVU582
 570:lvgl/src/core/lv_obj.c ****                 lv_draw_mask_free_param(param);
 1668              		.loc 1 570 15 is_stmt 0 view .LVU583
 1669 0338 0646     		mov	r6, r0
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 74


 1670              	.LVL161:
 570:lvgl/src/core/lv_obj.c ****                 lv_draw_mask_free_param(param);
 1671              		.loc 1 570 15 view .LVU584
 1672 033a 0028     		cmp	r0, #0
 1673 033c 91D0     		beq	.L72
 571:lvgl/src/core/lv_obj.c ****                 lv_mem_buf_release(param);
 1674              		.loc 1 571 17 is_stmt 1 view .LVU585
 1675 033e FFF7FEFF 		bl	lv_draw_mask_free_param
 1676              	.LVL162:
 572:lvgl/src/core/lv_obj.c ****             }
 1677              		.loc 1 572 17 view .LVU586
 1678 0342 3046     		mov	r0, r6
 1679 0344 FFF7FEFF 		bl	lv_mem_buf_release
 1680              	.LVL163:
 1681 0348 8BE7     		b	.L72
 1682              	.L83:
 1683 034a 00BF     		.align	2
 1684              	.L82:
 1685 034c 00000000 		.word	lv_obj_class
 1686              	.LBE170:
 1687              	.LBE158:
 1688              		.cfi_endproc
 1689              	.LFE182:
 1691              		.section	.text.lv_obj_constructor,"ax",%progbits
 1692              		.align	1
 1693              		.syntax unified
 1694              		.thumb
 1695              		.thumb_func
 1697              	lv_obj_constructor:
 1698              	.LVL164:
 1699              	.LFB180:
 392:lvgl/src/core/lv_obj.c ****     LV_UNUSED(class_p);
 1700              		.loc 1 392 1 view -0
 1701              		.cfi_startproc
 1702              		@ args = 0, pretend = 0, frame = 0
 1703              		@ frame_needed = 0, uses_anonymous_args = 0
 392:lvgl/src/core/lv_obj.c ****     LV_UNUSED(class_p);
 1704              		.loc 1 392 1 is_stmt 0 view .LVU588
 1705 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1706              	.LCFI14:
 1707              		.cfi_def_cfa_offset 24
 1708              		.cfi_offset 4, -24
 1709              		.cfi_offset 5, -20
 1710              		.cfi_offset 6, -16
 1711              		.cfi_offset 7, -12
 1712              		.cfi_offset 8, -8
 1713              		.cfi_offset 14, -4
 1714 0004 0C46     		mov	r4, r1
 393:lvgl/src/core/lv_obj.c ****     LV_TRACE_OBJ_CREATE("begin");
 1715              		.loc 1 393 5 is_stmt 1 view .LVU589
 394:lvgl/src/core/lv_obj.c **** 
 1716              		.loc 1 394 5 view .LVU590
 394:lvgl/src/core/lv_obj.c **** 
 1717              		.loc 1 394 5 view .LVU591
 394:lvgl/src/core/lv_obj.c **** 
 1718              		.loc 1 394 5 view .LVU592
 396:lvgl/src/core/lv_obj.c ****     if(parent) {
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 75


 1719              		.loc 1 396 5 view .LVU593
 396:lvgl/src/core/lv_obj.c ****     if(parent) {
 1720              		.loc 1 396 16 is_stmt 0 view .LVU594
 1721 0006 4D68     		ldr	r5, [r1, #4]
 1722              	.LVL165:
 397:lvgl/src/core/lv_obj.c ****         lv_coord_t sl = lv_obj_get_scroll_left(parent);
 1723              		.loc 1 397 5 is_stmt 1 view .LVU595
 397:lvgl/src/core/lv_obj.c ****         lv_coord_t sl = lv_obj_get_scroll_left(parent);
 1724              		.loc 1 397 7 is_stmt 0 view .LVU596
 1725 0008 35B3     		cbz	r5, .L85
 1726              	.LBB171:
 398:lvgl/src/core/lv_obj.c ****         lv_coord_t st = lv_obj_get_scroll_top(parent);
 1727              		.loc 1 398 9 is_stmt 1 view .LVU597
 398:lvgl/src/core/lv_obj.c ****         lv_coord_t st = lv_obj_get_scroll_top(parent);
 1728              		.loc 1 398 25 is_stmt 0 view .LVU598
 1729 000a 2846     		mov	r0, r5
 1730              	.LVL166:
 398:lvgl/src/core/lv_obj.c ****         lv_coord_t st = lv_obj_get_scroll_top(parent);
 1731              		.loc 1 398 25 view .LVU599
 1732 000c FFF7FEFF 		bl	lv_obj_get_scroll_left
 1733              	.LVL167:
 398:lvgl/src/core/lv_obj.c ****         lv_coord_t st = lv_obj_get_scroll_top(parent);
 1734              		.loc 1 398 25 view .LVU600
 1735 0010 0646     		mov	r6, r0
 1736              	.LVL168:
 399:lvgl/src/core/lv_obj.c **** 
 1737              		.loc 1 399 9 is_stmt 1 view .LVU601
 399:lvgl/src/core/lv_obj.c **** 
 1738              		.loc 1 399 25 is_stmt 0 view .LVU602
 1739 0012 2846     		mov	r0, r5
 1740 0014 FFF7FEFF 		bl	lv_obj_get_scroll_top
 1741              	.LVL169:
 1742 0018 0746     		mov	r7, r0
 1743              	.LVL170:
 401:lvgl/src/core/lv_obj.c ****         obj->coords.y2 = obj->coords.y1 - 1;
 1744              		.loc 1 401 9 is_stmt 1 view .LVU603
 401:lvgl/src/core/lv_obj.c ****         obj->coords.y2 = obj->coords.y1 - 1;
 1745              		.loc 1 401 40 is_stmt 0 view .LVU604
 1746 001a B5F81680 		ldrh	r8, [r5, #22]
 1747              	.LVL171:
 1748              	.LBB172:
 1749              	.LBI172:
  91:lvgl/src/core/lv_obj_style_gen.h **** {
 1750              		.loc 3 91 26 is_stmt 1 view .LVU605
 1751              	.LBB173:
  93:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1752              		.loc 3 93 5 view .LVU606
  93:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1753              		.loc 3 93 26 is_stmt 0 view .LVU607
 1754 001e 41F61002 		movw	r2, #6160
 1755 0022 0021     		movs	r1, #0
 1756 0024 2846     		mov	r0, r5
 1757 0026 FFF7FEFF 		bl	lv_obj_get_style_prop
 1758              	.LVL172:
  94:lvgl/src/core/lv_obj_style_gen.h **** }
 1759              		.loc 3 94 5 is_stmt 1 view .LVU608
  94:lvgl/src/core/lv_obj_style_gen.h **** }
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 76


 1760              		.loc 3 94 5 is_stmt 0 view .LVU609
 1761              	.LBE173:
 1762              	.LBE172:
 401:lvgl/src/core/lv_obj.c ****         obj->coords.y2 = obj->coords.y1 - 1;
 1763              		.loc 1 401 44 discriminator 1 view .LVU610
 1764 002a 18FA80F3 		uxtah	r3, r8, r0
 1765 002e 9BB2     		uxth	r3, r3
 401:lvgl/src/core/lv_obj.c ****         obj->coords.y2 = obj->coords.y1 - 1;
 1766              		.loc 1 401 93 discriminator 1 view .LVU611
 1767 0030 DB1B     		subs	r3, r3, r7
 1768 0032 9AB2     		uxth	r2, r3
 401:lvgl/src/core/lv_obj.c ****         obj->coords.y2 = obj->coords.y1 - 1;
 1769              		.loc 1 401 24 discriminator 1 view .LVU612
 1770 0034 E382     		strh	r3, [r4, #22]	@ movhi
 402:lvgl/src/core/lv_obj.c ****         obj->coords.x1  = parent->coords.x1 + lv_obj_get_style_pad_left(parent, LV_PART_MAIN) - sl;
 1771              		.loc 1 402 9 is_stmt 1 view .LVU613
 402:lvgl/src/core/lv_obj.c ****         obj->coords.x1  = parent->coords.x1 + lv_obj_get_style_pad_left(parent, LV_PART_MAIN) - sl;
 1772              		.loc 1 402 41 is_stmt 0 view .LVU614
 1773 0036 531E     		subs	r3, r2, #1
 402:lvgl/src/core/lv_obj.c ****         obj->coords.x1  = parent->coords.x1 + lv_obj_get_style_pad_left(parent, LV_PART_MAIN) - sl;
 1774              		.loc 1 402 24 view .LVU615
 1775 0038 6383     		strh	r3, [r4, #26]	@ movhi
 403:lvgl/src/core/lv_obj.c ****         obj->coords.x2  = obj->coords.x1 - 1;
 1776              		.loc 1 403 9 is_stmt 1 view .LVU616
 403:lvgl/src/core/lv_obj.c ****         obj->coords.x2  = obj->coords.x1 - 1;
 1777              		.loc 1 403 41 is_stmt 0 view .LVU617
 1778 003a AF8A     		ldrh	r7, [r5, #20]
 1779              	.LVL173:
 1780              	.LBB174:
 1781              	.LBI174:
 103:lvgl/src/core/lv_obj_style_gen.h **** {
 1782              		.loc 3 103 26 is_stmt 1 view .LVU618
 1783              	.LBB175:
 105:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1784              		.loc 3 105 5 view .LVU619
 105:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1785              		.loc 3 105 26 is_stmt 0 view .LVU620
 1786 003c 41F61202 		movw	r2, #6162
 1787 0040 0021     		movs	r1, #0
 1788 0042 2846     		mov	r0, r5
 1789 0044 FFF7FEFF 		bl	lv_obj_get_style_prop
 1790              	.LVL174:
 106:lvgl/src/core/lv_obj_style_gen.h **** }
 1791              		.loc 3 106 5 is_stmt 1 view .LVU621
 106:lvgl/src/core/lv_obj_style_gen.h **** }
 1792              		.loc 3 106 5 is_stmt 0 view .LVU622
 1793              	.LBE175:
 1794              	.LBE174:
 403:lvgl/src/core/lv_obj.c ****         obj->coords.x2  = obj->coords.x1 - 1;
 1795              		.loc 1 403 45 discriminator 1 view .LVU623
 1796 0048 17FA80F3 		uxtah	r3, r7, r0
 1797 004c 9BB2     		uxth	r3, r3
 403:lvgl/src/core/lv_obj.c ****         obj->coords.x2  = obj->coords.x1 - 1;
 1798              		.loc 1 403 95 discriminator 1 view .LVU624
 1799 004e 981B     		subs	r0, r3, r6
 1800 0050 83B2     		uxth	r3, r0
 403:lvgl/src/core/lv_obj.c ****         obj->coords.x2  = obj->coords.x1 - 1;
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 77


 1801              		.loc 1 403 25 discriminator 1 view .LVU625
 1802 0052 A082     		strh	r0, [r4, #20]	@ movhi
 404:lvgl/src/core/lv_obj.c ****     }
 1803              		.loc 1 404 9 is_stmt 1 view .LVU626
 404:lvgl/src/core/lv_obj.c ****     }
 1804              		.loc 1 404 42 is_stmt 0 view .LVU627
 1805 0054 013B     		subs	r3, r3, #1
 404:lvgl/src/core/lv_obj.c ****     }
 1806              		.loc 1 404 25 view .LVU628
 1807 0056 2383     		strh	r3, [r4, #24]	@ movhi
 1808              	.LVL175:
 1809              	.L85:
 404:lvgl/src/core/lv_obj.c ****     }
 1810              		.loc 1 404 25 view .LVU629
 1811              	.LBE171:
 408:lvgl/src/core/lv_obj.c ****     obj->flags |= LV_OBJ_FLAG_SNAPPABLE;
 1812              		.loc 1 408 5 is_stmt 1 view .LVU630
 408:lvgl/src/core/lv_obj.c ****     obj->flags |= LV_OBJ_FLAG_SNAPPABLE;
 1813              		.loc 1 408 16 is_stmt 0 view .LVU631
 1814 0058 0223     		movs	r3, #2
 1815 005a E361     		str	r3, [r4, #28]
 409:lvgl/src/core/lv_obj.c ****     if(parent) obj->flags |= LV_OBJ_FLAG_PRESS_LOCK;
 1816              		.loc 1 409 5 is_stmt 1 view .LVU632
 409:lvgl/src/core/lv_obj.c ****     if(parent) obj->flags |= LV_OBJ_FLAG_PRESS_LOCK;
 1817              		.loc 1 409 16 is_stmt 0 view .LVU633
 1818 005c 41F20203 		movw	r3, #4098
 1819 0060 E361     		str	r3, [r4, #28]
 410:lvgl/src/core/lv_obj.c ****     if(parent) obj->flags |= LV_OBJ_FLAG_SCROLL_CHAIN;
 1820              		.loc 1 410 5 is_stmt 1 view .LVU634
 410:lvgl/src/core/lv_obj.c ****     if(parent) obj->flags |= LV_OBJ_FLAG_SCROLL_CHAIN;
 1821              		.loc 1 410 7 is_stmt 0 view .LVU635
 1822 0062 2DB1     		cbz	r5, .L86
 410:lvgl/src/core/lv_obj.c ****     if(parent) obj->flags |= LV_OBJ_FLAG_SCROLL_CHAIN;
 1823              		.loc 1 410 16 is_stmt 1 discriminator 1 view .LVU636
 410:lvgl/src/core/lv_obj.c ****     if(parent) obj->flags |= LV_OBJ_FLAG_SCROLL_CHAIN;
 1824              		.loc 1 410 27 is_stmt 0 discriminator 1 view .LVU637
 1825 0064 43F20203 		movw	r3, #12290
 1826 0068 E361     		str	r3, [r4, #28]
 411:lvgl/src/core/lv_obj.c ****     obj->flags |= LV_OBJ_FLAG_CLICK_FOCUSABLE;
 1827              		.loc 1 411 5 is_stmt 1 view .LVU638
 411:lvgl/src/core/lv_obj.c ****     obj->flags |= LV_OBJ_FLAG_CLICK_FOCUSABLE;
 1828              		.loc 1 411 16 discriminator 1 view .LVU639
 411:lvgl/src/core/lv_obj.c ****     obj->flags |= LV_OBJ_FLAG_CLICK_FOCUSABLE;
 1829              		.loc 1 411 27 is_stmt 0 discriminator 1 view .LVU640
 1830 006a 43F20233 		movw	r3, #13058
 1831 006e E361     		str	r3, [r4, #28]
 1832              	.L86:
 412:lvgl/src/core/lv_obj.c ****     obj->flags |= LV_OBJ_FLAG_SCROLLABLE;
 1833              		.loc 1 412 5 is_stmt 1 view .LVU641
 412:lvgl/src/core/lv_obj.c ****     obj->flags |= LV_OBJ_FLAG_SCROLLABLE;
 1834              		.loc 1 412 8 is_stmt 0 view .LVU642
 1835 0070 E369     		ldr	r3, [r4, #28]
 412:lvgl/src/core/lv_obj.c ****     obj->flags |= LV_OBJ_FLAG_SCROLLABLE;
 1836              		.loc 1 412 16 view .LVU643
 1837 0072 43F00402 		orr	r2, r3, #4
 1838 0076 E261     		str	r2, [r4, #28]
 413:lvgl/src/core/lv_obj.c ****     obj->flags |= LV_OBJ_FLAG_SCROLL_ELASTIC;
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 78


 1839              		.loc 1 413 5 is_stmt 1 view .LVU644
 413:lvgl/src/core/lv_obj.c ****     obj->flags |= LV_OBJ_FLAG_SCROLL_ELASTIC;
 1840              		.loc 1 413 16 is_stmt 0 view .LVU645
 1841 0078 43F01402 		orr	r2, r3, #20
 1842 007c E261     		str	r2, [r4, #28]
 414:lvgl/src/core/lv_obj.c ****     obj->flags |= LV_OBJ_FLAG_SCROLL_MOMENTUM;
 1843              		.loc 1 414 5 is_stmt 1 view .LVU646
 414:lvgl/src/core/lv_obj.c ****     obj->flags |= LV_OBJ_FLAG_SCROLL_MOMENTUM;
 1844              		.loc 1 414 16 is_stmt 0 view .LVU647
 1845 007e 43F03402 		orr	r2, r3, #52
 1846 0082 E261     		str	r2, [r4, #28]
 415:lvgl/src/core/lv_obj.c ****     obj->flags |= LV_OBJ_FLAG_SCROLL_WITH_ARROW;
 1847              		.loc 1 415 5 is_stmt 1 view .LVU648
 415:lvgl/src/core/lv_obj.c ****     obj->flags |= LV_OBJ_FLAG_SCROLL_WITH_ARROW;
 1848              		.loc 1 415 16 is_stmt 0 view .LVU649
 1849 0084 43F07402 		orr	r2, r3, #116
 1850 0088 E261     		str	r2, [r4, #28]
 416:lvgl/src/core/lv_obj.c ****     if(parent) obj->flags |= LV_OBJ_FLAG_GESTURE_BUBBLE;
 1851              		.loc 1 416 5 is_stmt 1 view .LVU650
 416:lvgl/src/core/lv_obj.c ****     if(parent) obj->flags |= LV_OBJ_FLAG_GESTURE_BUBBLE;
 1852              		.loc 1 416 16 is_stmt 0 view .LVU651
 1853 008a 40F67402 		movw	r2, #2164
 1854 008e 1A43     		orrs	r2, r2, r3
 1855 0090 E261     		str	r2, [r4, #28]
 417:lvgl/src/core/lv_obj.c **** 
 1856              		.loc 1 417 5 is_stmt 1 view .LVU652
 417:lvgl/src/core/lv_obj.c **** 
 1857              		.loc 1 417 7 is_stmt 0 view .LVU653
 1858 0092 1DB1     		cbz	r5, .L84
 417:lvgl/src/core/lv_obj.c **** 
 1859              		.loc 1 417 16 is_stmt 1 discriminator 1 view .LVU654
 417:lvgl/src/core/lv_obj.c **** 
 1860              		.loc 1 417 27 is_stmt 0 discriminator 1 view .LVU655
 1861 0094 48F67402 		movw	r2, #34932
 1862 0098 1A43     		orrs	r2, r2, r3
 1863 009a E261     		str	r2, [r4, #28]
 419:lvgl/src/core/lv_obj.c **** }
 1864              		.loc 1 419 5 is_stmt 1 view .LVU656
 419:lvgl/src/core/lv_obj.c **** }
 1865              		.loc 1 419 5 view .LVU657
 419:lvgl/src/core/lv_obj.c **** }
 1866              		.loc 1 419 5 view .LVU658
 1867              	.L84:
 420:lvgl/src/core/lv_obj.c **** 
 1868              		.loc 1 420 1 is_stmt 0 view .LVU659
 1869 009c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 420:lvgl/src/core/lv_obj.c **** 
 1870              		.loc 1 420 1 view .LVU660
 1871              		.cfi_endproc
 1872              	.LFE180:
 1874              		.section	.text.lv_obj_set_state,"ax",%progbits
 1875              		.align	1
 1876              		.syntax unified
 1877              		.thumb
 1878              		.thumb_func
 1880              	lv_obj_set_state:
 1881              	.LVL176:
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 79


 1882              	.LFB186:
 861:lvgl/src/core/lv_obj.c ****     if(obj->state == new_state) return;
 1883              		.loc 1 861 1 is_stmt 1 view -0
 1884              		.cfi_startproc
 1885              		@ args = 0, pretend = 0, frame = 48
 1886              		@ frame_needed = 0, uses_anonymous_args = 0
 861:lvgl/src/core/lv_obj.c ****     if(obj->state == new_state) return;
 1887              		.loc 1 861 1 is_stmt 0 view .LVU662
 1888 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1889              	.LCFI15:
 1890              		.cfi_def_cfa_offset 36
 1891              		.cfi_offset 4, -36
 1892              		.cfi_offset 5, -32
 1893              		.cfi_offset 6, -28
 1894              		.cfi_offset 7, -24
 1895              		.cfi_offset 8, -20
 1896              		.cfi_offset 9, -16
 1897              		.cfi_offset 10, -12
 1898              		.cfi_offset 11, -8
 1899              		.cfi_offset 14, -4
 1900 0004 8FB0     		sub	sp, sp, #60
 1901              	.LCFI16:
 1902              		.cfi_def_cfa_offset 96
 1903 0006 0691     		str	r1, [sp, #24]
 862:lvgl/src/core/lv_obj.c **** 
 1904              		.loc 1 862 5 is_stmt 1 view .LVU663
 862:lvgl/src/core/lv_obj.c **** 
 1905              		.loc 1 862 11 is_stmt 0 view .LVU664
 1906 0008 078C     		ldrh	r7, [r0, #32]
 862:lvgl/src/core/lv_obj.c **** 
 1907              		.loc 1 862 7 view .LVU665
 1908 000a 8F42     		cmp	r7, r1
 1909 000c 08D0     		beq	.L89
 1910 000e 0446     		mov	r4, r0
 864:lvgl/src/core/lv_obj.c **** 
 1911              		.loc 1 864 5 is_stmt 1 view .LVU666
 864:lvgl/src/core/lv_obj.c **** 
 1912              		.loc 1 864 5 view .LVU667
 864:lvgl/src/core/lv_obj.c **** 
 1913              		.loc 1 864 5 view .LVU668
 866:lvgl/src/core/lv_obj.c ****     obj->state = new_state;
 1914              		.loc 1 866 5 view .LVU669
 1915              	.LVL177:
 867:lvgl/src/core/lv_obj.c **** 
 1916              		.loc 1 867 5 view .LVU670
 867:lvgl/src/core/lv_obj.c **** 
 1917              		.loc 1 867 16 is_stmt 0 view .LVU671
 1918 0010 0D46     		mov	r5, r1
 1919 0012 0184     		strh	r1, [r0, #32]	@ movhi
 869:lvgl/src/core/lv_obj.c ****     /*If there is no difference in styles there is nothing else to do*/
 1920              		.loc 1 869 5 is_stmt 1 view .LVU672
 869:lvgl/src/core/lv_obj.c ****     /*If there is no difference in styles there is nothing else to do*/
 1921              		.loc 1 869 37 is_stmt 0 view .LVU673
 1922 0014 0A46     		mov	r2, r1
 1923 0016 3946     		mov	r1, r7
 1924              	.LVL178:
 869:lvgl/src/core/lv_obj.c ****     /*If there is no difference in styles there is nothing else to do*/
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 80


 1925              		.loc 1 869 37 view .LVU674
 1926 0018 FFF7FEFF 		bl	_lv_obj_style_state_compare
 1927              	.LVL179:
 871:lvgl/src/core/lv_obj.c **** 
 1928              		.loc 1 871 5 is_stmt 1 view .LVU675
 871:lvgl/src/core/lv_obj.c **** 
 1929              		.loc 1 871 7 is_stmt 0 view .LVU676
 1930 001c 0646     		mov	r6, r0
 1931 001e 10B9     		cbnz	r0, .L112
 1932              	.LVL180:
 1933              	.L89:
 931:lvgl/src/core/lv_obj.c **** 
 1934              		.loc 1 931 1 view .LVU677
 1935 0020 0FB0     		add	sp, sp, #60
 1936              	.LCFI17:
 1937              		.cfi_remember_state
 1938              		.cfi_def_cfa_offset 36
 1939              		@ sp needed
 1940 0022 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1941              	.LVL181:
 1942              	.L112:
 1943              	.LCFI18:
 1944              		.cfi_restore_state
 873:lvgl/src/core/lv_obj.c ****     lv_memset_00(ts, sizeof(_lv_obj_style_transition_dsc_t) * STYLE_TRANSITION_MAX);
 1945              		.loc 1 873 5 is_stmt 1 view .LVU678
 873:lvgl/src/core/lv_obj.c ****     lv_memset_00(ts, sizeof(_lv_obj_style_transition_dsc_t) * STYLE_TRANSITION_MAX);
 1946              		.loc 1 873 43 is_stmt 0 view .LVU679
 1947 0026 4FF42070 		mov	r0, #640
 1948              	.LVL182:
 873:lvgl/src/core/lv_obj.c ****     lv_memset_00(ts, sizeof(_lv_obj_style_transition_dsc_t) * STYLE_TRANSITION_MAX);
 1949              		.loc 1 873 43 view .LVU680
 1950 002a FFF7FEFF 		bl	lv_mem_buf_get
 1951              	.LVL183:
 1952 002e 8346     		mov	fp, r0
 1953              	.LVL184:
 874:lvgl/src/core/lv_obj.c ****     uint32_t tsi = 0;
 1954              		.loc 1 874 5 is_stmt 1 view .LVU681
 1955 0030 4FF42071 		mov	r1, #640
 1956 0034 FFF7FEFF 		bl	lv_memset_00
 1957              	.LVL185:
 875:lvgl/src/core/lv_obj.c ****     uint32_t i;
 1958              		.loc 1 875 5 view .LVU682
 876:lvgl/src/core/lv_obj.c ****     for(i = 0; i < obj->style_cnt && tsi < STYLE_TRANSITION_MAX; i++) {
 1959              		.loc 1 876 5 view .LVU683
 877:lvgl/src/core/lv_obj.c ****         _lv_obj_style_t * obj_style = &obj->styles[i];
 1960              		.loc 1 877 5 view .LVU684
 877:lvgl/src/core/lv_obj.c ****         _lv_obj_style_t * obj_style = &obj->styles[i];
 1961              		.loc 1 877 11 is_stmt 0 view .LVU685
 1962 0038 4FF00009 		mov	r9, #0
 875:lvgl/src/core/lv_obj.c ****     uint32_t i;
 1963              		.loc 1 875 14 view .LVU686
 1964 003c CA46     		mov	r10, r9
 1965 003e 0A97     		str	r7, [sp, #40]
 1966 0040 0B96     		str	r6, [sp, #44]
 1967 0042 2746     		mov	r7, r4
 1968              	.LVL186:
 875:lvgl/src/core/lv_obj.c ****     uint32_t i;
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 81


 1969              		.loc 1 875 14 view .LVU687
 1970 0044 4C46     		mov	r4, r9
 1971              	.LVL187:
 875:lvgl/src/core/lv_obj.c ****     uint32_t i;
 1972              		.loc 1 875 14 view .LVU688
 1973 0046 A946     		mov	r9, r5
 877:lvgl/src/core/lv_obj.c ****         _lv_obj_style_t * obj_style = &obj->styles[i];
 1974              		.loc 1 877 5 view .LVU689
 1975 0048 58E0     		b	.L91
 1976              	.LVL188:
 1977              	.L94:
 1978              	.LBB176:
 1979              	.LBB177:
 892:lvgl/src/core/lv_obj.c ****                 lv_style_selector_t selector = ts[t].selector;
 1980              		.loc 1 892 34 is_stmt 1 discriminator 2 view .LVU690
 1981 004a 0134     		adds	r4, r4, #1
 1982              	.LVL189:
 1983              	.L100:
 892:lvgl/src/core/lv_obj.c ****                 lv_style_selector_t selector = ts[t].selector;
 1984              		.loc 1 892 26 discriminator 1 view .LVU691
 1985 004c A245     		cmp	r10, r4
 1986 004e 1CD9     		bls	.L95
 1987              	.LBB178:
 893:lvgl/src/core/lv_obj.c ****                 lv_state_t state_ts = lv_obj_style_get_selector_state(selector);
 1988              		.loc 1 893 17 view .LVU692
 893:lvgl/src/core/lv_obj.c ****                 lv_state_t state_ts = lv_obj_style_get_selector_state(selector);
 1989              		.loc 1 893 50 is_stmt 0 view .LVU693
 1990 0050 04EB8405 		add	r5, r4, r4, lsl #2
 1991 0054 0BEB8505 		add	r5, fp, r5, lsl #2
 893:lvgl/src/core/lv_obj.c ****                 lv_state_t state_ts = lv_obj_style_get_selector_state(selector);
 1992              		.loc 1 893 37 view .LVU694
 1993 0058 6F68     		ldr	r7, [r5, #4]
 1994              	.LVL190:
 894:lvgl/src/core/lv_obj.c ****                 lv_part_t part_ts = lv_obj_style_get_selector_part(selector);
 1995              		.loc 1 894 17 is_stmt 1 view .LVU695
 894:lvgl/src/core/lv_obj.c ****                 lv_part_t part_ts = lv_obj_style_get_selector_part(selector);
 1996              		.loc 1 894 39 is_stmt 0 view .LVU696
 1997 005a 3846     		mov	r0, r7
 1998 005c FFF7FEFF 		bl	lv_obj_style_get_selector_state
 1999              	.LVL191:
 2000 0060 0646     		mov	r6, r0
 2001              	.LVL192:
 895:lvgl/src/core/lv_obj.c ****                 if(ts[t].prop == tr->props[j] && part_ts == part_act && state_ts >= state_act) brea
 2002              		.loc 1 895 17 is_stmt 1 view .LVU697
 895:lvgl/src/core/lv_obj.c ****                 if(ts[t].prop == tr->props[j] && part_ts == part_act && state_ts >= state_act) brea
 2003              		.loc 1 895 37 is_stmt 0 view .LVU698
 2004 0062 3846     		mov	r0, r7
 2005 0064 FFF7FEFF 		bl	lv_obj_style_get_selector_part
 2006              	.LVL193:
 896:lvgl/src/core/lv_obj.c ****             }
 2007              		.loc 1 896 17 is_stmt 1 view .LVU699
 896:lvgl/src/core/lv_obj.c ****             }
 2008              		.loc 1 896 25 is_stmt 0 view .LVU700
 2009 0068 2A89     		ldrh	r2, [r5, #8]
 896:lvgl/src/core/lv_obj.c ****             }
 2010              		.loc 1 896 36 view .LVU701
 2011 006a D8F80030 		ldr	r3, [r8]
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 82


 896:lvgl/src/core/lv_obj.c ****             }
 2012              		.loc 1 896 31 view .LVU702
 2013 006e 33F80930 		ldrh	r3, [r3, r9]
 896:lvgl/src/core/lv_obj.c ****             }
 2014              		.loc 1 896 19 view .LVU703
 2015 0072 9A42     		cmp	r2, r3
 2016 0074 E9D1     		bne	.L94
 896:lvgl/src/core/lv_obj.c ****             }
 2017              		.loc 1 896 82 discriminator 1 view .LVU704
 2018 0076 029B     		ldr	r3, [sp, #8]
 2019 0078 B342     		cmp	r3, r6
 2020 007a 8CBF     		ite	hi
 2021 007c 0026     		movhi	r6, #0
 2022              	.LVL194:
 896:lvgl/src/core/lv_obj.c ****             }
 2023              		.loc 1 896 82 discriminator 1 view .LVU705
 2024 007e 0126     		movls	r6, #1
 896:lvgl/src/core/lv_obj.c ****             }
 2025              		.loc 1 896 70 discriminator 1 view .LVU706
 2026 0080 039B     		ldr	r3, [sp, #12]
 2027 0082 8342     		cmp	r3, r0
 2028 0084 E1D1     		bne	.L94
 2029 0086 002E     		cmp	r6, #0
 2030 0088 DFD0     		beq	.L94
 2031              	.LVL195:
 2032              	.L95:
 896:lvgl/src/core/lv_obj.c ****             }
 2033              		.loc 1 896 70 discriminator 1 view .LVU707
 2034              	.LBE178:
 900:lvgl/src/core/lv_obj.c ****                 ts[tsi].time = tr->time;
 2035              		.loc 1 900 15 view .LVU708
 2036 008a 049A     		ldr	r2, [sp, #16]
 900:lvgl/src/core/lv_obj.c ****                 ts[tsi].time = tr->time;
 2037              		.loc 1 900 13 is_stmt 1 view .LVU709
 900:lvgl/src/core/lv_obj.c ****                 ts[tsi].time = tr->time;
 2038              		.loc 1 900 15 is_stmt 0 view .LVU710
 2039 008c A245     		cmp	r10, r4
 2040 008e 0DD0     		beq	.L113
 2041              	.LVL196:
 2042              	.L98:
 900:lvgl/src/core/lv_obj.c ****                 ts[tsi].time = tr->time;
 2043              		.loc 1 900 15 view .LVU711
 2044              	.LBE177:
 890:lvgl/src/core/lv_obj.c ****             uint32_t t;
 2045              		.loc 1 890 70 is_stmt 1 discriminator 2 view .LVU712
 2046 0090 0132     		adds	r2, r2, #1
 2047              	.LVL197:
 2048              	.L93:
 890:lvgl/src/core/lv_obj.c ****             uint32_t t;
 2049              		.loc 1 890 38 discriminator 1 view .LVU713
 890:lvgl/src/core/lv_obj.c ****             uint32_t t;
 2050              		.loc 1 890 22 is_stmt 0 discriminator 1 view .LVU714
 2051 0092 D8F80030 		ldr	r3, [r8]
 890:lvgl/src/core/lv_obj.c ****             uint32_t t;
 2052              		.loc 1 890 29 discriminator 1 view .LVU715
 2053 0096 4FEA4209 		lsl	r9, r2, #1
 2054 009a 33F81230 		ldrh	r3, [r3, r2, lsl #1]
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 83


 890:lvgl/src/core/lv_obj.c ****             uint32_t t;
 2055              		.loc 1 890 38 discriminator 1 view .LVU716
 2056 009e 43B3     		cbz	r3, .L110
 890:lvgl/src/core/lv_obj.c ****             uint32_t t;
 2057              		.loc 1 890 38 discriminator 3 view .LVU717
 2058 00a0 BAF11F0F 		cmp	r10, #31
 2059 00a4 20D8     		bhi	.L114
 2060              	.LBB179:
 892:lvgl/src/core/lv_obj.c ****                 lv_style_selector_t selector = ts[t].selector;
 2061              		.loc 1 892 19 view .LVU718
 2062 00a6 0024     		movs	r4, #0
 2063 00a8 0492     		str	r2, [sp, #16]
 2064 00aa CFE7     		b	.L100
 2065              	.LVL198:
 2066              	.L113:
 901:lvgl/src/core/lv_obj.c ****                 ts[tsi].delay = tr->delay;
 2067              		.loc 1 901 17 is_stmt 1 view .LVU719
 901:lvgl/src/core/lv_obj.c ****                 ts[tsi].delay = tr->delay;
 2068              		.loc 1 901 34 is_stmt 0 view .LVU720
 2069 00ac D8F80C00 		ldr	r0, [r8, #12]
 901:lvgl/src/core/lv_obj.c ****                 ts[tsi].delay = tr->delay;
 2070              		.loc 1 901 19 view .LVU721
 2071 00b0 0AEB8A04 		add	r4, r10, r10, lsl #2
 2072              	.LVL199:
 901:lvgl/src/core/lv_obj.c ****                 ts[tsi].delay = tr->delay;
 2073              		.loc 1 901 19 view .LVU722
 2074 00b4 0BEB8403 		add	r3, fp, r4, lsl #2
 901:lvgl/src/core/lv_obj.c ****                 ts[tsi].delay = tr->delay;
 2075              		.loc 1 901 30 view .LVU723
 2076 00b8 2BF82400 		strh	r0, [fp, r4, lsl #2]	@ movhi
 902:lvgl/src/core/lv_obj.c ****                 ts[tsi].path_cb = tr->path_xcb;
 2077              		.loc 1 902 17 is_stmt 1 view .LVU724
 902:lvgl/src/core/lv_obj.c ****                 ts[tsi].path_cb = tr->path_xcb;
 2078              		.loc 1 902 35 is_stmt 0 view .LVU725
 2079 00bc D8F81000 		ldr	r0, [r8, #16]
 902:lvgl/src/core/lv_obj.c ****                 ts[tsi].path_cb = tr->path_xcb;
 2080              		.loc 1 902 31 view .LVU726
 2081 00c0 5880     		strh	r0, [r3, #2]	@ movhi
 903:lvgl/src/core/lv_obj.c ****                 ts[tsi].prop = tr->props[j];
 2082              		.loc 1 903 17 is_stmt 1 view .LVU727
 903:lvgl/src/core/lv_obj.c ****                 ts[tsi].prop = tr->props[j];
 2083              		.loc 1 903 37 is_stmt 0 view .LVU728
 2084 00c2 D8F80800 		ldr	r0, [r8, #8]
 903:lvgl/src/core/lv_obj.c ****                 ts[tsi].prop = tr->props[j];
 2085              		.loc 1 903 33 view .LVU729
 2086 00c6 D860     		str	r0, [r3, #12]
 904:lvgl/src/core/lv_obj.c **** #if LV_USE_USER_DATA
 2087              		.loc 1 904 17 is_stmt 1 view .LVU730
 904:lvgl/src/core/lv_obj.c **** #if LV_USE_USER_DATA
 2088              		.loc 1 904 34 is_stmt 0 view .LVU731
 2089 00c8 D8F80000 		ldr	r0, [r8]
 904:lvgl/src/core/lv_obj.c **** #if LV_USE_USER_DATA
 2090              		.loc 1 904 41 view .LVU732
 2091 00cc 30F80900 		ldrh	r0, [r0, r9]
 904:lvgl/src/core/lv_obj.c **** #if LV_USE_USER_DATA
 2092              		.loc 1 904 30 view .LVU733
 2093 00d0 1881     		strh	r0, [r3, #8]	@ movhi
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 84


 906:lvgl/src/core/lv_obj.c **** #endif
 2094              		.loc 1 906 17 is_stmt 1 view .LVU734
 906:lvgl/src/core/lv_obj.c **** #endif
 2095              		.loc 1 906 39 is_stmt 0 view .LVU735
 2096 00d2 D8F80400 		ldr	r0, [r8, #4]
 906:lvgl/src/core/lv_obj.c **** #endif
 2097              		.loc 1 906 35 view .LVU736
 2098 00d6 1861     		str	r0, [r3, #16]
 908:lvgl/src/core/lv_obj.c ****                 tsi++;
 2099              		.loc 1 908 17 is_stmt 1 view .LVU737
 908:lvgl/src/core/lv_obj.c ****                 tsi++;
 2100              		.loc 1 908 45 is_stmt 0 view .LVU738
 2101 00d8 0599     		ldr	r1, [sp, #20]
 2102 00da 4868     		ldr	r0, [r1, #4]
 2103 00dc C0F31700 		ubfx	r0, r0, #0, #24
 908:lvgl/src/core/lv_obj.c ****                 tsi++;
 2104              		.loc 1 908 34 view .LVU739
 2105 00e0 5860     		str	r0, [r3, #4]
 909:lvgl/src/core/lv_obj.c ****             }
 2106              		.loc 1 909 17 is_stmt 1 view .LVU740
 909:lvgl/src/core/lv_obj.c ****             }
 2107              		.loc 1 909 20 is_stmt 0 view .LVU741
 2108 00e2 0AF1010A 		add	r10, r10, #1
 2109              	.LVL200:
 909:lvgl/src/core/lv_obj.c ****             }
 2110              		.loc 1 909 20 view .LVU742
 2111 00e6 D3E7     		b	.L98
 2112              	.LVL201:
 2113              	.L114:
 909:lvgl/src/core/lv_obj.c ****             }
 2114              		.loc 1 909 20 view .LVU743
 2115 00e8 079C     		ldr	r4, [sp, #28]
 2116 00ea 089F     		ldr	r7, [sp, #32]
 2117 00ec DDF82490 		ldr	r9, [sp, #36]
 2118              	.LBE179:
 2119 00f0 03E0     		b	.L101
 2120              	.L110:
 2121 00f2 079C     		ldr	r4, [sp, #28]
 2122 00f4 089F     		ldr	r7, [sp, #32]
 2123 00f6 DDF82490 		ldr	r9, [sp, #36]
 2124              	.LVL202:
 2125              	.L101:
 909:lvgl/src/core/lv_obj.c ****             }
 2126              		.loc 1 909 20 view .LVU744
 2127              	.LBE176:
 877:lvgl/src/core/lv_obj.c ****         _lv_obj_style_t * obj_style = &obj->styles[i];
 2128              		.loc 1 877 67 is_stmt 1 discriminator 2 view .LVU745
 2129 00fa 0134     		adds	r4, r4, #1
 2130              	.LVL203:
 2131              	.L91:
 877:lvgl/src/core/lv_obj.c ****         _lv_obj_style_t * obj_style = &obj->styles[i];
 2132              		.loc 1 877 35 discriminator 1 view .LVU746
 877:lvgl/src/core/lv_obj.c ****         _lv_obj_style_t * obj_style = &obj->styles[i];
 2133              		.loc 1 877 23 is_stmt 0 discriminator 1 view .LVU747
 2134 00fc 7B8C     		ldrh	r3, [r7, #34]
 2135 00fe C3F3C503 		ubfx	r3, r3, #3, #6
 877:lvgl/src/core/lv_obj.c ****         _lv_obj_style_t * obj_style = &obj->styles[i];
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 85


 2136              		.loc 1 877 35 discriminator 1 view .LVU748
 2137 0102 A342     		cmp	r3, r4
 2138 0104 58D9     		bls	.L109
 877:lvgl/src/core/lv_obj.c ****         _lv_obj_style_t * obj_style = &obj->styles[i];
 2139              		.loc 1 877 35 discriminator 3 view .LVU749
 2140 0106 BAF11F0F 		cmp	r10, #31
 2141 010a 2BD8     		bhi	.L115
 2142              	.LBB180:
 878:lvgl/src/core/lv_obj.c ****         lv_state_t state_act = lv_obj_style_get_selector_state(obj->styles[i].selector);
 2143              		.loc 1 878 9 is_stmt 1 view .LVU750
 878:lvgl/src/core/lv_obj.c ****         lv_state_t state_act = lv_obj_style_get_selector_state(obj->styles[i].selector);
 2144              		.loc 1 878 43 is_stmt 0 view .LVU751
 2145 010c FE68     		ldr	r6, [r7, #12]
 878:lvgl/src/core/lv_obj.c ****         lv_state_t state_act = lv_obj_style_get_selector_state(obj->styles[i].selector);
 2146              		.loc 1 878 51 view .LVU752
 2147 010e E500     		lsls	r5, r4, #3
 878:lvgl/src/core/lv_obj.c ****         lv_state_t state_act = lv_obj_style_get_selector_state(obj->styles[i].selector);
 2148              		.loc 1 878 27 view .LVU753
 2149 0110 06EBC403 		add	r3, r6, r4, lsl #3
 2150              	.LVL204:
 879:lvgl/src/core/lv_obj.c ****         lv_part_t part_act = lv_obj_style_get_selector_part(obj->styles[i].selector);
 2151              		.loc 1 879 9 is_stmt 1 view .LVU754
 879:lvgl/src/core/lv_obj.c ****         lv_part_t part_act = lv_obj_style_get_selector_part(obj->styles[i].selector);
 2152              		.loc 1 879 78 is_stmt 0 view .LVU755
 2153 0114 0593     		str	r3, [sp, #20]
 2154 0116 5868     		ldr	r0, [r3, #4]
 879:lvgl/src/core/lv_obj.c ****         lv_part_t part_act = lv_obj_style_get_selector_part(obj->styles[i].selector);
 2155              		.loc 1 879 32 view .LVU756
 2156 0118 20F07F40 		bic	r0, r0, #-16777216
 2157 011c FFF7FEFF 		bl	lv_obj_style_get_selector_state
 2158              	.LVL205:
 879:lvgl/src/core/lv_obj.c ****         lv_part_t part_act = lv_obj_style_get_selector_part(obj->styles[i].selector);
 2159              		.loc 1 879 32 view .LVU757
 2160 0120 8046     		mov	r8, r0
 2161 0122 0290     		str	r0, [sp, #8]
 2162              	.LVL206:
 880:lvgl/src/core/lv_obj.c ****         if(state_act & (~new_state)) continue; /*Skip unrelated styles*/
 2163              		.loc 1 880 9 is_stmt 1 view .LVU758
 880:lvgl/src/core/lv_obj.c ****         if(state_act & (~new_state)) continue; /*Skip unrelated styles*/
 2164              		.loc 1 880 64 is_stmt 0 view .LVU759
 2165 0124 FB68     		ldr	r3, [r7, #12]
 880:lvgl/src/core/lv_obj.c ****         if(state_act & (~new_state)) continue; /*Skip unrelated styles*/
 2166              		.loc 1 880 72 view .LVU760
 2167 0126 2B44     		add	r3, r3, r5
 880:lvgl/src/core/lv_obj.c ****         if(state_act & (~new_state)) continue; /*Skip unrelated styles*/
 2168              		.loc 1 880 75 view .LVU761
 2169 0128 5868     		ldr	r0, [r3, #4]
 880:lvgl/src/core/lv_obj.c ****         if(state_act & (~new_state)) continue; /*Skip unrelated styles*/
 2170              		.loc 1 880 30 view .LVU762
 2171 012a 20F07F40 		bic	r0, r0, #-16777216
 2172 012e FFF7FEFF 		bl	lv_obj_style_get_selector_part
 2173              	.LVL207:
 2174 0132 0390     		str	r0, [sp, #12]
 2175              	.LVL208:
 881:lvgl/src/core/lv_obj.c ****         if(obj_style->is_trans) continue;
 2176              		.loc 1 881 9 is_stmt 1 view .LVU763
 881:lvgl/src/core/lv_obj.c ****         if(obj_style->is_trans) continue;
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 86


 2177              		.loc 1 881 11 is_stmt 0 view .LVU764
 2178 0134 38EA0903 		bics	r3, r8, r9
 2179 0138 DFD1     		bne	.L101
 882:lvgl/src/core/lv_obj.c **** 
 2180              		.loc 1 882 9 is_stmt 1 view .LVU765
 882:lvgl/src/core/lv_obj.c **** 
 2181              		.loc 1 882 12 is_stmt 0 view .LVU766
 2182 013a 059B     		ldr	r3, [sp, #20]
 2183 013c DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 882:lvgl/src/core/lv_obj.c **** 
 2184              		.loc 1 882 11 view .LVU767
 2185 013e 13F0020F 		tst	r3, #2
 2186 0142 DAD1     		bne	.L101
 884:lvgl/src/core/lv_obj.c ****         if(lv_style_get_prop_inlined(obj_style->style, LV_STYLE_TRANSITION, &v) == false) continue;
 2187              		.loc 1 884 9 is_stmt 1 view .LVU768
 885:lvgl/src/core/lv_obj.c ****         const lv_style_transition_dsc_t * tr = v.ptr;
 2188              		.loc 1 885 9 view .LVU769
 885:lvgl/src/core/lv_obj.c ****         const lv_style_transition_dsc_t * tr = v.ptr;
 2189              		.loc 1 885 12 is_stmt 0 view .LVU770
 2190 0144 0DAA     		add	r2, sp, #52
 2191 0146 6721     		movs	r1, #103
 2192 0148 7059     		ldr	r0, [r6, r5]
 2193              	.LVL209:
 885:lvgl/src/core/lv_obj.c ****         const lv_style_transition_dsc_t * tr = v.ptr;
 2194              		.loc 1 885 12 view .LVU771
 2195 014a FFF7FEFF 		bl	lv_style_get_prop_inlined
 2196              	.LVL210:
 885:lvgl/src/core/lv_obj.c ****         const lv_style_transition_dsc_t * tr = v.ptr;
 2197              		.loc 1 885 11 discriminator 1 view .LVU772
 2198 014e 0028     		cmp	r0, #0
 2199 0150 D3D0     		beq	.L101
 886:lvgl/src/core/lv_obj.c **** 
 2200              		.loc 1 886 9 is_stmt 1 view .LVU773
 886:lvgl/src/core/lv_obj.c **** 
 2201              		.loc 1 886 43 is_stmt 0 view .LVU774
 2202 0152 DDF83480 		ldr	r8, [sp, #52]
 2203              	.LVL211:
 889:lvgl/src/core/lv_obj.c ****         for(j = 0; tr->props[j] != 0 && tsi < STYLE_TRANSITION_MAX; j++) {
 2204              		.loc 1 889 9 is_stmt 1 view .LVU775
 890:lvgl/src/core/lv_obj.c ****             uint32_t t;
 2205              		.loc 1 890 9 view .LVU776
 890:lvgl/src/core/lv_obj.c ****             uint32_t t;
 2206              		.loc 1 890 15 is_stmt 0 view .LVU777
 2207 0156 0025     		movs	r5, #0
 2208 0158 0794     		str	r4, [sp, #28]
 2209 015a 2A46     		mov	r2, r5
 2210 015c 0897     		str	r7, [sp, #32]
 2211 015e CDF82490 		str	r9, [sp, #36]
 890:lvgl/src/core/lv_obj.c ****             uint32_t t;
 2212              		.loc 1 890 9 view .LVU778
 2213 0162 96E7     		b	.L93
 2214              	.LVL212:
 2215              	.L115:
 890:lvgl/src/core/lv_obj.c ****             uint32_t t;
 2216              		.loc 1 890 9 view .LVU779
 2217              	.LBE180:
 2218 0164 0B9E     		ldr	r6, [sp, #44]
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 87


 2219 0166 3C46     		mov	r4, r7
 2220              	.LVL213:
 890:lvgl/src/core/lv_obj.c ****             uint32_t t;
 2221              		.loc 1 890 9 view .LVU780
 2222 0168 0A9F     		ldr	r7, [sp, #40]
 2223 016a 0025     		movs	r5, #0
 2224 016c B846     		mov	r8, r7
 2225 016e DDF81890 		ldr	r9, [sp, #24]
 2226 0172 0EE0     		b	.L104
 2227              	.LVL214:
 2228              	.L105:
 2229              	.LBB181:
 915:lvgl/src/core/lv_obj.c ****         _lv_obj_style_create_transition(obj, part_act, prev_state, new_state, &ts[i]);
 2230              		.loc 1 915 9 is_stmt 1 view .LVU781
 915:lvgl/src/core/lv_obj.c ****         _lv_obj_style_create_transition(obj, part_act, prev_state, new_state, &ts[i]);
 2231              		.loc 1 915 63 is_stmt 0 view .LVU782
 2232 0174 05EB8507 		add	r7, r5, r5, lsl #2
 2233 0178 0BEB8707 		add	r7, fp, r7, lsl #2
 915:lvgl/src/core/lv_obj.c ****         _lv_obj_style_create_transition(obj, part_act, prev_state, new_state, &ts[i]);
 2234              		.loc 1 915 30 view .LVU783
 2235 017c 7868     		ldr	r0, [r7, #4]
 2236 017e FFF7FEFF 		bl	lv_obj_style_get_selector_part
 2237              	.LVL215:
 2238 0182 0146     		mov	r1, r0
 2239              	.LVL216:
 916:lvgl/src/core/lv_obj.c ****     }
 2240              		.loc 1 916 9 is_stmt 1 view .LVU784
 2241 0184 0097     		str	r7, [sp]
 2242 0186 4B46     		mov	r3, r9
 2243 0188 4246     		mov	r2, r8
 2244 018a 2046     		mov	r0, r4
 2245              	.LVL217:
 916:lvgl/src/core/lv_obj.c ****     }
 2246              		.loc 1 916 9 is_stmt 0 view .LVU785
 2247 018c FFF7FEFF 		bl	_lv_obj_style_create_transition
 2248              	.LVL218:
 916:lvgl/src/core/lv_obj.c ****     }
 2249              		.loc 1 916 9 view .LVU786
 2250              	.LBE181:
 914:lvgl/src/core/lv_obj.c ****         lv_part_t part_act = lv_obj_style_get_selector_part(ts[i].selector);
 2251              		.loc 1 914 26 is_stmt 1 discriminator 3 view .LVU787
 2252 0190 0135     		adds	r5, r5, #1
 2253              	.LVL219:
 2254              	.L104:
 914:lvgl/src/core/lv_obj.c ****         lv_part_t part_act = lv_obj_style_get_selector_part(ts[i].selector);
 2255              		.loc 1 914 18 discriminator 1 view .LVU788
 2256 0192 AA45     		cmp	r10, r5
 2257 0194 EED8     		bhi	.L105
 919:lvgl/src/core/lv_obj.c **** 
 2258              		.loc 1 919 5 view .LVU789
 2259 0196 5846     		mov	r0, fp
 2260 0198 FFF7FEFF 		bl	lv_mem_buf_release
 2261              	.LVL220:
 921:lvgl/src/core/lv_obj.c ****         lv_obj_invalidate(obj);
 2262              		.loc 1 921 5 view .LVU790
 921:lvgl/src/core/lv_obj.c ****         lv_obj_invalidate(obj);
 2263              		.loc 1 921 7 is_stmt 0 view .LVU791
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 88


 2264 019c 012E     		cmp	r6, #1
 2265 019e 13D0     		beq	.L116
 924:lvgl/src/core/lv_obj.c ****         lv_obj_refresh_style(obj, LV_PART_ANY, LV_STYLE_PROP_ANY);
 2266              		.loc 1 924 10 is_stmt 1 view .LVU792
 924:lvgl/src/core/lv_obj.c ****         lv_obj_refresh_style(obj, LV_PART_ANY, LV_STYLE_PROP_ANY);
 2267              		.loc 1 924 12 is_stmt 0 view .LVU793
 2268 01a0 032E     		cmp	r6, #3
 2269 01a2 15D0     		beq	.L117
 927:lvgl/src/core/lv_obj.c ****         lv_obj_invalidate(obj);
 2270              		.loc 1 927 10 is_stmt 1 view .LVU794
 927:lvgl/src/core/lv_obj.c ****         lv_obj_invalidate(obj);
 2271              		.loc 1 927 12 is_stmt 0 view .LVU795
 2272 01a4 022E     		cmp	r6, #2
 2273 01a6 7FF43BAF 		bne	.L89
 928:lvgl/src/core/lv_obj.c ****         lv_obj_refresh_ext_draw_size(obj);
 2274              		.loc 1 928 9 is_stmt 1 view .LVU796
 2275 01aa 2046     		mov	r0, r4
 2276 01ac FFF7FEFF 		bl	lv_obj_invalidate
 2277              	.LVL221:
 929:lvgl/src/core/lv_obj.c ****     }
 2278              		.loc 1 929 9 view .LVU797
 2279 01b0 2046     		mov	r0, r4
 2280 01b2 FFF7FEFF 		bl	lv_obj_refresh_ext_draw_size
 2281              	.LVL222:
 2282 01b6 33E7     		b	.L89
 2283              	.LVL223:
 2284              	.L109:
 929:lvgl/src/core/lv_obj.c ****     }
 2285              		.loc 1 929 9 is_stmt 0 view .LVU798
 2286 01b8 0B9E     		ldr	r6, [sp, #44]
 2287 01ba 3C46     		mov	r4, r7
 2288              	.LVL224:
 929:lvgl/src/core/lv_obj.c ****     }
 2289              		.loc 1 929 9 view .LVU799
 2290 01bc 0A9F     		ldr	r7, [sp, #40]
 2291 01be 0025     		movs	r5, #0
 2292 01c0 B846     		mov	r8, r7
 2293 01c2 DDF81890 		ldr	r9, [sp, #24]
 2294 01c6 E4E7     		b	.L104
 2295              	.LVL225:
 2296              	.L116:
 922:lvgl/src/core/lv_obj.c ****     }
 2297              		.loc 1 922 9 is_stmt 1 view .LVU800
 2298 01c8 2046     		mov	r0, r4
 2299 01ca FFF7FEFF 		bl	lv_obj_invalidate
 2300              	.LVL226:
 2301 01ce 27E7     		b	.L89
 2302              	.L117:
 925:lvgl/src/core/lv_obj.c ****     }
 2303              		.loc 1 925 9 view .LVU801
 2304 01d0 4FF6FF72 		movw	r2, #65535
 2305 01d4 4FF47021 		mov	r1, #983040
 2306 01d8 2046     		mov	r0, r4
 2307 01da FFF7FEFF 		bl	lv_obj_refresh_style
 2308              	.LVL227:
 2309 01de 1FE7     		b	.L89
 2310              		.cfi_endproc
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 89


 2311              	.LFE186:
 2313              		.section	.text.lv_is_initialized,"ax",%progbits
 2314              		.align	1
 2315              		.global	lv_is_initialized
 2316              		.syntax unified
 2317              		.thumb
 2318              		.thumb_func
 2320              	lv_is_initialized:
 2321              	.LFB162:
  87:lvgl/src/core/lv_obj.c ****     return lv_initialized;
 2322              		.loc 1 87 1 view -0
 2323              		.cfi_startproc
 2324              		@ args = 0, pretend = 0, frame = 0
 2325              		@ frame_needed = 0, uses_anonymous_args = 0
 2326              		@ link register save eliminated.
  88:lvgl/src/core/lv_obj.c **** }
 2327              		.loc 1 88 5 view .LVU803
  89:lvgl/src/core/lv_obj.c **** 
 2328              		.loc 1 89 1 is_stmt 0 view .LVU804
 2329 0000 014B     		ldr	r3, .L119
 2330 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 2331 0004 7047     		bx	lr
 2332              	.L120:
 2333 0006 00BF     		.align	2
 2334              	.L119:
 2335 0008 00000000 		.word	lv_initialized
 2336              		.cfi_endproc
 2337              	.LFE162:
 2339              		.section	.text.lv_init,"ax",%progbits
 2340              		.align	1
 2341              		.global	lv_init
 2342              		.syntax unified
 2343              		.thumb
 2344              		.thumb_func
 2346              	lv_init:
 2347              	.LFB163:
  92:lvgl/src/core/lv_obj.c ****     /*Do nothing if already initialized*/
 2348              		.loc 1 92 1 is_stmt 1 view -0
 2349              		.cfi_startproc
 2350              		@ args = 0, pretend = 0, frame = 0
 2351              		@ frame_needed = 0, uses_anonymous_args = 0
 2352 0000 08B5     		push	{r3, lr}
 2353              	.LCFI19:
 2354              		.cfi_def_cfa_offset 8
 2355              		.cfi_offset 3, -8
 2356              		.cfi_offset 14, -4
  94:lvgl/src/core/lv_obj.c ****         LV_LOG_WARN("lv_init: already inited");
 2357              		.loc 1 94 5 view .LVU806
  94:lvgl/src/core/lv_obj.c ****         LV_LOG_WARN("lv_init: already inited");
 2358              		.loc 1 94 8 is_stmt 0 view .LVU807
 2359 0002 124B     		ldr	r3, .L125
 2360 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  94:lvgl/src/core/lv_obj.c ****         LV_LOG_WARN("lv_init: already inited");
 2361              		.loc 1 94 7 view .LVU808
 2362 0006 03B1     		cbz	r3, .L124
 2363              	.L121:
 176:lvgl/src/core/lv_obj.c **** 
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 90


 2364              		.loc 1 176 1 view .LVU809
 2365 0008 08BD     		pop	{r3, pc}
 2366              	.L124:
  99:lvgl/src/core/lv_obj.c **** 
 2367              		.loc 1 99 5 is_stmt 1 view .LVU810
  99:lvgl/src/core/lv_obj.c **** 
 2368              		.loc 1 99 5 view .LVU811
  99:lvgl/src/core/lv_obj.c **** 
 2369              		.loc 1 99 5 view .LVU812
 102:lvgl/src/core/lv_obj.c **** 
 2370              		.loc 1 102 5 view .LVU813
 2371 000a FFF7FEFF 		bl	lv_mem_init
 2372              	.LVL228:
 104:lvgl/src/core/lv_obj.c **** 
 2373              		.loc 1 104 5 view .LVU814
 2374 000e FFF7FEFF 		bl	_lv_timer_core_init
 2375              	.LVL229:
 106:lvgl/src/core/lv_obj.c **** 
 2376              		.loc 1 106 5 view .LVU815
 2377 0012 FFF7FEFF 		bl	_lv_fs_init
 2378              	.LVL230:
 108:lvgl/src/core/lv_obj.c **** 
 2379              		.loc 1 108 5 view .LVU816
 2380 0016 FFF7FEFF 		bl	_lv_anim_core_init
 2381              	.LVL231:
 110:lvgl/src/core/lv_obj.c **** 
 2382              		.loc 1 110 5 view .LVU817
 2383 001a FFF7FEFF 		bl	_lv_group_init
 2384              	.LVL232:
 112:lvgl/src/core/lv_obj.c **** 
 2385              		.loc 1 112 5 view .LVU818
 2386 001e FFF7FEFF 		bl	lv_draw_init
 2387              	.LVL233:
 123:lvgl/src/core/lv_obj.c ****     _lv_ll_init(&LV_GC_ROOT(_lv_disp_ll), sizeof(lv_disp_t));
 2388              		.loc 1 123 5 view .LVU819
 2389 0022 FFF7FEFF 		bl	_lv_obj_style_init
 2390              	.LVL234:
 124:lvgl/src/core/lv_obj.c ****     _lv_ll_init(&LV_GC_ROOT(_lv_indev_ll), sizeof(lv_indev_t));
 2391              		.loc 1 124 5 view .LVU820
 2392 0026 4FF4AC71 		mov	r1, #344
 2393 002a 0948     		ldr	r0, .L125+4
 2394 002c FFF7FEFF 		bl	_lv_ll_init
 2395              	.LVL235:
 125:lvgl/src/core/lv_obj.c **** 
 2396              		.loc 1 125 5 view .LVU821
 2397 0030 5821     		movs	r1, #88
 2398 0032 0848     		ldr	r0, .L125+8
 2399 0034 FFF7FEFF 		bl	_lv_ll_init
 2400              	.LVL236:
 128:lvgl/src/core/lv_obj.c **** 
 2401              		.loc 1 128 5 view .LVU822
 2402 0038 FFF7FEFF 		bl	_lv_refr_init
 2403              	.LVL237:
 130:lvgl/src/core/lv_obj.c **** #if LV_IMG_CACHE_DEF_SIZE
 2404              		.loc 1 130 5 view .LVU823
 2405 003c FFF7FEFF 		bl	_lv_img_decoder_init
 2406              	.LVL238:
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 91


 135:lvgl/src/core/lv_obj.c **** 
 2407              		.loc 1 135 5 view .LVU824
 137:lvgl/src/core/lv_obj.c ****     if(txt_u8[0] != 0xc3 || txt_u8[1] != 0x81 || txt_u8[2] != 0x00) {
 2408              		.loc 1 137 5 view .LVU825
 138:lvgl/src/core/lv_obj.c ****         LV_LOG_WARN("The strings have no UTF-8 encoding. Non-ASCII characters won't be displayed.")
 2409              		.loc 1 138 5 view .LVU826
 139:lvgl/src/core/lv_obj.c ****     }
 2410              		.loc 1 139 9 view .LVU827
 139:lvgl/src/core/lv_obj.c ****     }
 2411              		.loc 1 139 9 view .LVU828
 139:lvgl/src/core/lv_obj.c ****     }
 2412              		.loc 1 139 9 view .LVU829
 142:lvgl/src/core/lv_obj.c ****     uint8_t * endianess_test_p = (uint8_t *) &endianess_test;
 2413              		.loc 1 142 5 view .LVU830
 143:lvgl/src/core/lv_obj.c ****     bool big_endian = endianess_test_p[0] == 0x11 ? true : false;
 2414              		.loc 1 143 5 view .LVU831
 144:lvgl/src/core/lv_obj.c **** 
 2415              		.loc 1 144 5 view .LVU832
 146:lvgl/src/core/lv_obj.c ****         LV_ASSERT_MSG(LV_BIG_ENDIAN_SYSTEM == 1,
 2416              		.loc 1 146 5 view .LVU833
 151:lvgl/src/core/lv_obj.c ****                       "It's a little endian system but LV_BIG_ENDIAN_SYSTEM is enabled in lv_conf.h
 2417              		.loc 1 151 9 view .LVU834
 151:lvgl/src/core/lv_obj.c ****                       "It's a little endian system but LV_BIG_ENDIAN_SYSTEM is enabled in lv_conf.h
 2418              		.loc 1 151 9 view .LVU835
 151:lvgl/src/core/lv_obj.c ****                       "It's a little endian system but LV_BIG_ENDIAN_SYSTEM is enabled in lv_conf.h
 2419              		.loc 1 151 9 discriminator 2 view .LVU836
 171:lvgl/src/core/lv_obj.c **** 
 2420              		.loc 1 171 5 view .LVU837
 2421 0040 FFF7FEFF 		bl	lv_extra_init
 2422              	.LVL239:
 173:lvgl/src/core/lv_obj.c **** 
 2423              		.loc 1 173 5 view .LVU838
 173:lvgl/src/core/lv_obj.c **** 
 2424              		.loc 1 173 20 is_stmt 0 view .LVU839
 2425 0044 014B     		ldr	r3, .L125
 2426 0046 0122     		movs	r2, #1
 2427 0048 1A70     		strb	r2, [r3]
 175:lvgl/src/core/lv_obj.c **** }
 2428              		.loc 1 175 5 is_stmt 1 view .LVU840
 175:lvgl/src/core/lv_obj.c **** }
 2429              		.loc 1 175 5 view .LVU841
 175:lvgl/src/core/lv_obj.c **** }
 2430              		.loc 1 175 5 view .LVU842
 2431              	.LVL240:
 175:lvgl/src/core/lv_obj.c **** }
 2432              		.loc 1 175 5 is_stmt 0 view .LVU843
 2433 004a DDE7     		b	.L121
 2434              	.L126:
 2435              		.align	2
 2436              	.L125:
 2437 004c 00000000 		.word	lv_initialized
 2438 0050 00000000 		.word	_lv_disp_ll
 2439 0054 00000000 		.word	_lv_indev_ll
 2440              		.cfi_endproc
 2441              	.LFE163:
 2443              		.section	.text.lv_deinit,"ax",%progbits
 2444              		.align	1
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 92


 2445              		.global	lv_deinit
 2446              		.syntax unified
 2447              		.thumb
 2448              		.thumb_func
 2450              	lv_deinit:
 2451              	.LFB164:
 181:lvgl/src/core/lv_obj.c ****     _lv_gc_clear_roots();
 2452              		.loc 1 181 1 is_stmt 1 view -0
 2453              		.cfi_startproc
 2454              		@ args = 0, pretend = 0, frame = 0
 2455              		@ frame_needed = 0, uses_anonymous_args = 0
 2456 0000 08B5     		push	{r3, lr}
 2457              	.LCFI20:
 2458              		.cfi_def_cfa_offset 8
 2459              		.cfi_offset 3, -8
 2460              		.cfi_offset 14, -4
 182:lvgl/src/core/lv_obj.c **** 
 2461              		.loc 1 182 5 view .LVU845
 2462 0002 FFF7FEFF 		bl	_lv_gc_clear_roots
 2463              	.LVL241:
 184:lvgl/src/core/lv_obj.c ****     lv_mem_deinit();
 2464              		.loc 1 184 5 view .LVU846
 2465 0006 0020     		movs	r0, #0
 2466 0008 FFF7FEFF 		bl	lv_disp_set_default
 2467              	.LVL242:
 185:lvgl/src/core/lv_obj.c ****     lv_initialized = false;
 2468              		.loc 1 185 5 view .LVU847
 2469 000c FFF7FEFF 		bl	lv_mem_deinit
 2470              	.LVL243:
 186:lvgl/src/core/lv_obj.c **** 
 2471              		.loc 1 186 5 view .LVU848
 186:lvgl/src/core/lv_obj.c **** 
 2472              		.loc 1 186 20 is_stmt 0 view .LVU849
 2473 0010 0020     		movs	r0, #0
 2474 0012 024B     		ldr	r3, .L129
 2475 0014 1870     		strb	r0, [r3]
 188:lvgl/src/core/lv_obj.c **** 
 2476              		.loc 1 188 5 is_stmt 1 view .LVU850
 188:lvgl/src/core/lv_obj.c **** 
 2477              		.loc 1 188 5 view .LVU851
 188:lvgl/src/core/lv_obj.c **** 
 2478              		.loc 1 188 5 view .LVU852
 191:lvgl/src/core/lv_obj.c **** #endif
 2479              		.loc 1 191 5 view .LVU853
 2480 0016 FFF7FEFF 		bl	lv_log_register_print_cb
 2481              	.LVL244:
 193:lvgl/src/core/lv_obj.c **** #endif
 2482              		.loc 1 193 1 is_stmt 0 view .LVU854
 2483 001a 08BD     		pop	{r3, pc}
 2484              	.L130:
 2485              		.align	2
 2486              	.L129:
 2487 001c 00000000 		.word	lv_initialized
 2488              		.cfi_endproc
 2489              	.LFE164:
 2491              		.section	.text.lv_obj_create,"ax",%progbits
 2492              		.align	1
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 93


 2493              		.global	lv_obj_create
 2494              		.syntax unified
 2495              		.thumb
 2496              		.thumb_func
 2498              	lv_obj_create:
 2499              	.LVL245:
 2500              	.LFB165:
 197:lvgl/src/core/lv_obj.c ****     LV_LOG_INFO("begin");
 2501              		.loc 1 197 1 is_stmt 1 view -0
 2502              		.cfi_startproc
 2503              		@ args = 0, pretend = 0, frame = 0
 2504              		@ frame_needed = 0, uses_anonymous_args = 0
 197:lvgl/src/core/lv_obj.c ****     LV_LOG_INFO("begin");
 2505              		.loc 1 197 1 is_stmt 0 view .LVU856
 2506 0000 10B5     		push	{r4, lr}
 2507              	.LCFI21:
 2508              		.cfi_def_cfa_offset 8
 2509              		.cfi_offset 4, -8
 2510              		.cfi_offset 14, -4
 2511 0002 0146     		mov	r1, r0
 198:lvgl/src/core/lv_obj.c ****     lv_obj_t * obj = lv_obj_class_create_obj(MY_CLASS, parent);
 2512              		.loc 1 198 5 is_stmt 1 view .LVU857
 198:lvgl/src/core/lv_obj.c ****     lv_obj_t * obj = lv_obj_class_create_obj(MY_CLASS, parent);
 2513              		.loc 1 198 5 view .LVU858
 198:lvgl/src/core/lv_obj.c ****     lv_obj_t * obj = lv_obj_class_create_obj(MY_CLASS, parent);
 2514              		.loc 1 198 5 view .LVU859
 199:lvgl/src/core/lv_obj.c ****     lv_obj_class_init_obj(obj);
 2515              		.loc 1 199 5 view .LVU860
 199:lvgl/src/core/lv_obj.c ****     lv_obj_class_init_obj(obj);
 2516              		.loc 1 199 22 is_stmt 0 view .LVU861
 2517 0004 0348     		ldr	r0, .L133
 2518              	.LVL246:
 199:lvgl/src/core/lv_obj.c ****     lv_obj_class_init_obj(obj);
 2519              		.loc 1 199 22 view .LVU862
 2520 0006 FFF7FEFF 		bl	lv_obj_class_create_obj
 2521              	.LVL247:
 199:lvgl/src/core/lv_obj.c ****     lv_obj_class_init_obj(obj);
 2522              		.loc 1 199 22 view .LVU863
 2523 000a 0446     		mov	r4, r0
 2524              	.LVL248:
 200:lvgl/src/core/lv_obj.c ****     return obj;
 2525              		.loc 1 200 5 is_stmt 1 view .LVU864
 2526 000c FFF7FEFF 		bl	lv_obj_class_init_obj
 2527              	.LVL249:
 201:lvgl/src/core/lv_obj.c **** }
 2528              		.loc 1 201 5 view .LVU865
 202:lvgl/src/core/lv_obj.c **** 
 2529              		.loc 1 202 1 is_stmt 0 view .LVU866
 2530 0010 2046     		mov	r0, r4
 2531 0012 10BD     		pop	{r4, pc}
 2532              	.LVL250:
 2533              	.L134:
 202:lvgl/src/core/lv_obj.c **** 
 2534              		.loc 1 202 1 view .LVU867
 2535              		.align	2
 2536              	.L133:
 2537 0014 00000000 		.word	lv_obj_class
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 94


 2538              		.cfi_endproc
 2539              	.LFE165:
 2541              		.section	.text.lv_obj_add_flag,"ax",%progbits
 2542              		.align	1
 2543              		.global	lv_obj_add_flag
 2544              		.syntax unified
 2545              		.thumb
 2546              		.thumb_func
 2548              	lv_obj_add_flag:
 2549              	.LVL251:
 2550              	.LFB166:
 213:lvgl/src/core/lv_obj.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 2551              		.loc 1 213 1 is_stmt 1 view -0
 2552              		.cfi_startproc
 2553              		@ args = 0, pretend = 0, frame = 16
 2554              		@ frame_needed = 0, uses_anonymous_args = 0
 213:lvgl/src/core/lv_obj.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 2555              		.loc 1 213 1 is_stmt 0 view .LVU869
 2556 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2557              	.LCFI22:
 2558              		.cfi_def_cfa_offset 20
 2559              		.cfi_offset 4, -20
 2560              		.cfi_offset 5, -16
 2561              		.cfi_offset 6, -12
 2562              		.cfi_offset 7, -8
 2563              		.cfi_offset 14, -4
 2564 0002 85B0     		sub	sp, sp, #20
 2565              	.LCFI23:
 2566              		.cfi_def_cfa_offset 40
 2567 0004 0446     		mov	r4, r0
 2568 0006 0D46     		mov	r5, r1
 214:lvgl/src/core/lv_obj.c **** 
 2569              		.loc 1 214 5 is_stmt 1 view .LVU870
 214:lvgl/src/core/lv_obj.c **** 
 2570              		.loc 1 214 5 view .LVU871
 214:lvgl/src/core/lv_obj.c **** 
 2571              		.loc 1 214 5 view .LVU872
 216:lvgl/src/core/lv_obj.c **** 
 2572              		.loc 1 216 5 view .LVU873
 216:lvgl/src/core/lv_obj.c **** 
 2573              		.loc 1 216 26 is_stmt 0 view .LVU874
 2574 0008 FFF7FEFF 		bl	lv_obj_is_layout_positioned
 2575              	.LVL252:
 216:lvgl/src/core/lv_obj.c **** 
 2576              		.loc 1 216 26 view .LVU875
 2577 000c 0646     		mov	r6, r0
 2578              	.LVL253:
 218:lvgl/src/core/lv_obj.c **** 
 2579              		.loc 1 218 5 is_stmt 1 view .LVU876
 218:lvgl/src/core/lv_obj.c **** 
 2580              		.loc 1 218 7 is_stmt 0 view .LVU877
 2581 000e 15F00107 		ands	r7, r5, #1
 2582 0012 18D1     		bne	.L142
 2583              	.L136:
 220:lvgl/src/core/lv_obj.c **** 
 2584              		.loc 1 220 5 is_stmt 1 view .LVU878
 220:lvgl/src/core/lv_obj.c **** 
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 95


 2585              		.loc 1 220 8 is_stmt 0 view .LVU879
 2586 0014 E369     		ldr	r3, [r4, #28]
 220:lvgl/src/core/lv_obj.c **** 
 2587              		.loc 1 220 16 view .LVU880
 2588 0016 2B43     		orrs	r3, r3, r5
 2589 0018 E361     		str	r3, [r4, #28]
 222:lvgl/src/core/lv_obj.c ****         lv_obj_invalidate(obj);
 2590              		.loc 1 222 5 is_stmt 1 view .LVU881
 222:lvgl/src/core/lv_obj.c ****         lv_obj_invalidate(obj);
 2591              		.loc 1 222 7 is_stmt 0 view .LVU882
 2592 001a C7B9     		cbnz	r7, .L143
 2593              	.L137:
 226:lvgl/src/core/lv_obj.c ****         lv_obj_mark_layout_as_dirty(lv_obj_get_parent(obj));
 2594              		.loc 1 226 5 is_stmt 1 view .LVU883
 226:lvgl/src/core/lv_obj.c ****         lv_obj_mark_layout_as_dirty(lv_obj_get_parent(obj));
 2595              		.loc 1 226 26 is_stmt 0 view .LVU884
 2596 001c 2046     		mov	r0, r4
 2597 001e FFF7FEFF 		bl	lv_obj_is_layout_positioned
 2598              	.LVL254:
 226:lvgl/src/core/lv_obj.c ****         lv_obj_mark_layout_as_dirty(lv_obj_get_parent(obj));
 2599              		.loc 1 226 7 discriminator 1 view .LVU885
 2600 0022 B042     		cmp	r0, r6
 2601 0024 02D1     		bne	.L138
 226:lvgl/src/core/lv_obj.c ****         lv_obj_mark_layout_as_dirty(lv_obj_get_parent(obj));
 2602              		.loc 1 226 60 discriminator 1 view .LVU886
 2603 0026 15F0C07F 		tst	r5, #25165824
 2604 002a 07D0     		beq	.L139
 2605              	.L138:
 227:lvgl/src/core/lv_obj.c ****         lv_obj_mark_layout_as_dirty(obj);
 2606              		.loc 1 227 9 is_stmt 1 view .LVU887
 2607 002c 2046     		mov	r0, r4
 2608 002e FFF7FEFF 		bl	lv_obj_get_parent
 2609              	.LVL255:
 227:lvgl/src/core/lv_obj.c ****         lv_obj_mark_layout_as_dirty(obj);
 2610              		.loc 1 227 9 is_stmt 0 discriminator 1 view .LVU888
 2611 0032 FFF7FEFF 		bl	lv_obj_mark_layout_as_dirty
 2612              	.LVL256:
 228:lvgl/src/core/lv_obj.c ****     }
 2613              		.loc 1 228 9 is_stmt 1 view .LVU889
 2614 0036 2046     		mov	r0, r4
 2615 0038 FFF7FEFF 		bl	lv_obj_mark_layout_as_dirty
 2616              	.LVL257:
 2617              	.L139:
 231:lvgl/src/core/lv_obj.c ****         lv_area_t hor_area, ver_area;
 2618              		.loc 1 231 5 view .LVU890
 231:lvgl/src/core/lv_obj.c ****         lv_area_t hor_area, ver_area;
 2619              		.loc 1 231 7 is_stmt 0 view .LVU891
 2620 003c 15F0100F 		tst	r5, #16
 2621 0040 09D1     		bne	.L144
 2622              	.L135:
 237:lvgl/src/core/lv_obj.c **** 
 2623              		.loc 1 237 1 view .LVU892
 2624 0042 05B0     		add	sp, sp, #20
 2625              	.LCFI24:
 2626              		.cfi_remember_state
 2627              		.cfi_def_cfa_offset 20
 2628              		@ sp needed
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 96


 2629 0044 F0BD     		pop	{r4, r5, r6, r7, pc}
 2630              	.LVL258:
 2631              	.L142:
 2632              	.LCFI25:
 2633              		.cfi_restore_state
 218:lvgl/src/core/lv_obj.c **** 
 2634              		.loc 1 218 32 is_stmt 1 discriminator 1 view .LVU893
 2635 0046 2046     		mov	r0, r4
 2636 0048 FFF7FEFF 		bl	lv_obj_invalidate
 2637              	.LVL259:
 2638 004c E2E7     		b	.L136
 2639              	.L143:
 223:lvgl/src/core/lv_obj.c ****     }
 2640              		.loc 1 223 9 view .LVU894
 2641 004e 2046     		mov	r0, r4
 2642 0050 FFF7FEFF 		bl	lv_obj_invalidate
 2643              	.LVL260:
 2644 0054 E2E7     		b	.L137
 2645              	.L144:
 2646              	.LBB182:
 232:lvgl/src/core/lv_obj.c ****         lv_obj_get_scrollbar_area(obj, &hor_area, &ver_area);
 2647              		.loc 1 232 9 view .LVU895
 233:lvgl/src/core/lv_obj.c ****         lv_obj_invalidate_area(obj, &hor_area);
 2648              		.loc 1 233 9 view .LVU896
 2649 0056 02AA     		add	r2, sp, #8
 2650 0058 6946     		mov	r1, sp
 2651 005a 2046     		mov	r0, r4
 2652 005c FFF7FEFF 		bl	lv_obj_get_scrollbar_area
 2653              	.LVL261:
 234:lvgl/src/core/lv_obj.c ****         lv_obj_invalidate_area(obj, &ver_area);
 2654              		.loc 1 234 9 view .LVU897
 2655 0060 6946     		mov	r1, sp
 2656 0062 2046     		mov	r0, r4
 2657 0064 FFF7FEFF 		bl	lv_obj_invalidate_area
 2658              	.LVL262:
 235:lvgl/src/core/lv_obj.c ****     }
 2659              		.loc 1 235 9 view .LVU898
 2660 0068 02A9     		add	r1, sp, #8
 2661 006a 2046     		mov	r0, r4
 2662 006c FFF7FEFF 		bl	lv_obj_invalidate_area
 2663              	.LVL263:
 2664              	.LBE182:
 237:lvgl/src/core/lv_obj.c **** 
 2665              		.loc 1 237 1 is_stmt 0 view .LVU899
 2666 0070 E7E7     		b	.L135
 2667              		.cfi_endproc
 2668              	.LFE166:
 2670              		.section	.text.lv_obj_clear_flag,"ax",%progbits
 2671              		.align	1
 2672              		.global	lv_obj_clear_flag
 2673              		.syntax unified
 2674              		.thumb
 2675              		.thumb_func
 2677              	lv_obj_clear_flag:
 2678              	.LVL264:
 2679              	.LFB167:
 240:lvgl/src/core/lv_obj.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 97


 2680              		.loc 1 240 1 is_stmt 1 view -0
 2681              		.cfi_startproc
 2682              		@ args = 0, pretend = 0, frame = 16
 2683              		@ frame_needed = 0, uses_anonymous_args = 0
 240:lvgl/src/core/lv_obj.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 2684              		.loc 1 240 1 is_stmt 0 view .LVU901
 2685 0000 70B5     		push	{r4, r5, r6, lr}
 2686              	.LCFI26:
 2687              		.cfi_def_cfa_offset 16
 2688              		.cfi_offset 4, -16
 2689              		.cfi_offset 5, -12
 2690              		.cfi_offset 6, -8
 2691              		.cfi_offset 14, -4
 2692 0002 84B0     		sub	sp, sp, #16
 2693              	.LCFI27:
 2694              		.cfi_def_cfa_offset 32
 2695 0004 0446     		mov	r4, r0
 2696 0006 0D46     		mov	r5, r1
 241:lvgl/src/core/lv_obj.c **** 
 2697              		.loc 1 241 5 is_stmt 1 view .LVU902
 241:lvgl/src/core/lv_obj.c **** 
 2698              		.loc 1 241 5 view .LVU903
 241:lvgl/src/core/lv_obj.c **** 
 2699              		.loc 1 241 5 view .LVU904
 243:lvgl/src/core/lv_obj.c ****     if(f & LV_OBJ_FLAG_SCROLLABLE) {
 2700              		.loc 1 243 5 view .LVU905
 243:lvgl/src/core/lv_obj.c ****     if(f & LV_OBJ_FLAG_SCROLLABLE) {
 2701              		.loc 1 243 26 is_stmt 0 view .LVU906
 2702 0008 FFF7FEFF 		bl	lv_obj_is_layout_positioned
 2703              	.LVL265:
 243:lvgl/src/core/lv_obj.c ****     if(f & LV_OBJ_FLAG_SCROLLABLE) {
 2704              		.loc 1 243 26 view .LVU907
 2705 000c 0646     		mov	r6, r0
 2706              	.LVL266:
 244:lvgl/src/core/lv_obj.c ****         lv_area_t hor_area, ver_area;
 2707              		.loc 1 244 5 is_stmt 1 view .LVU908
 244:lvgl/src/core/lv_obj.c ****         lv_area_t hor_area, ver_area;
 2708              		.loc 1 244 7 is_stmt 0 view .LVU909
 2709 000e 15F0100F 		tst	r5, #16
 2710 0012 15D1     		bne	.L151
 2711              	.L146:
 251:lvgl/src/core/lv_obj.c **** 
 2712              		.loc 1 251 5 is_stmt 1 view .LVU910
 251:lvgl/src/core/lv_obj.c **** 
 2713              		.loc 1 251 8 is_stmt 0 view .LVU911
 2714 0014 E369     		ldr	r3, [r4, #28]
 251:lvgl/src/core/lv_obj.c **** 
 2715              		.loc 1 251 16 view .LVU912
 2716 0016 23EA0503 		bic	r3, r3, r5
 2717 001a E361     		str	r3, [r4, #28]
 253:lvgl/src/core/lv_obj.c ****         lv_obj_invalidate(obj);
 2718              		.loc 1 253 5 is_stmt 1 view .LVU913
 253:lvgl/src/core/lv_obj.c ****         lv_obj_invalidate(obj);
 2719              		.loc 1 253 7 is_stmt 0 view .LVU914
 2720 001c 15F0010F 		tst	r5, #1
 2721 0020 1CD1     		bne	.L152
 2722              	.L147:
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 98


 261:lvgl/src/core/lv_obj.c ****         lv_obj_mark_layout_as_dirty(lv_obj_get_parent(obj));
 2723              		.loc 1 261 5 is_stmt 1 view .LVU915
 261:lvgl/src/core/lv_obj.c ****         lv_obj_mark_layout_as_dirty(lv_obj_get_parent(obj));
 2724              		.loc 1 261 26 is_stmt 0 view .LVU916
 2725 0022 2046     		mov	r0, r4
 2726 0024 FFF7FEFF 		bl	lv_obj_is_layout_positioned
 2727              	.LVL267:
 261:lvgl/src/core/lv_obj.c ****         lv_obj_mark_layout_as_dirty(lv_obj_get_parent(obj));
 2728              		.loc 1 261 7 discriminator 1 view .LVU917
 2729 0028 B042     		cmp	r0, r6
 2730 002a 02D1     		bne	.L148
 261:lvgl/src/core/lv_obj.c ****         lv_obj_mark_layout_as_dirty(lv_obj_get_parent(obj));
 2731              		.loc 1 261 60 discriminator 1 view .LVU918
 2732 002c 15F0C07F 		tst	r5, #25165824
 2733 0030 04D0     		beq	.L145
 2734              	.L148:
 262:lvgl/src/core/lv_obj.c ****     }
 2735              		.loc 1 262 9 is_stmt 1 view .LVU919
 2736 0032 2046     		mov	r0, r4
 2737 0034 FFF7FEFF 		bl	lv_obj_get_parent
 2738              	.LVL268:
 262:lvgl/src/core/lv_obj.c ****     }
 2739              		.loc 1 262 9 is_stmt 0 discriminator 1 view .LVU920
 2740 0038 FFF7FEFF 		bl	lv_obj_mark_layout_as_dirty
 2741              	.LVL269:
 2742              	.L145:
 264:lvgl/src/core/lv_obj.c **** 
 2743              		.loc 1 264 1 view .LVU921
 2744 003c 04B0     		add	sp, sp, #16
 2745              	.LCFI28:
 2746              		.cfi_remember_state
 2747              		.cfi_def_cfa_offset 16
 2748              		@ sp needed
 2749 003e 70BD     		pop	{r4, r5, r6, pc}
 2750              	.LVL270:
 2751              	.L151:
 2752              	.LCFI29:
 2753              		.cfi_restore_state
 2754              	.LBB183:
 245:lvgl/src/core/lv_obj.c ****         lv_obj_get_scrollbar_area(obj, &hor_area, &ver_area);
 2755              		.loc 1 245 9 is_stmt 1 view .LVU922
 246:lvgl/src/core/lv_obj.c ****         lv_obj_invalidate_area(obj, &hor_area);
 2756              		.loc 1 246 9 view .LVU923
 2757 0040 02AA     		add	r2, sp, #8
 2758 0042 6946     		mov	r1, sp
 2759 0044 2046     		mov	r0, r4
 2760 0046 FFF7FEFF 		bl	lv_obj_get_scrollbar_area
 2761              	.LVL271:
 247:lvgl/src/core/lv_obj.c ****         lv_obj_invalidate_area(obj, &ver_area);
 2762              		.loc 1 247 9 view .LVU924
 2763 004a 6946     		mov	r1, sp
 2764 004c 2046     		mov	r0, r4
 2765 004e FFF7FEFF 		bl	lv_obj_invalidate_area
 2766              	.LVL272:
 248:lvgl/src/core/lv_obj.c ****     }
 2767              		.loc 1 248 9 view .LVU925
 2768 0052 02A9     		add	r1, sp, #8
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 99


 2769 0054 2046     		mov	r0, r4
 2770 0056 FFF7FEFF 		bl	lv_obj_invalidate_area
 2771              	.LVL273:
 2772 005a DBE7     		b	.L146
 2773              	.L152:
 248:lvgl/src/core/lv_obj.c ****     }
 2774              		.loc 1 248 9 is_stmt 0 view .LVU926
 2775              	.LBE183:
 254:lvgl/src/core/lv_obj.c ****         if(lv_obj_is_layout_positioned(obj)) {
 2776              		.loc 1 254 9 is_stmt 1 view .LVU927
 2777 005c 2046     		mov	r0, r4
 2778 005e FFF7FEFF 		bl	lv_obj_invalidate
 2779              	.LVL274:
 255:lvgl/src/core/lv_obj.c ****             lv_obj_mark_layout_as_dirty(lv_obj_get_parent(obj));
 2780              		.loc 1 255 9 view .LVU928
 255:lvgl/src/core/lv_obj.c ****             lv_obj_mark_layout_as_dirty(lv_obj_get_parent(obj));
 2781              		.loc 1 255 12 is_stmt 0 view .LVU929
 2782 0062 2046     		mov	r0, r4
 2783 0064 FFF7FEFF 		bl	lv_obj_is_layout_positioned
 2784              	.LVL275:
 255:lvgl/src/core/lv_obj.c ****             lv_obj_mark_layout_as_dirty(lv_obj_get_parent(obj));
 2785              		.loc 1 255 11 discriminator 1 view .LVU930
 2786 0068 0028     		cmp	r0, #0
 2787 006a DAD0     		beq	.L147
 256:lvgl/src/core/lv_obj.c ****             lv_obj_mark_layout_as_dirty(obj);
 2788              		.loc 1 256 13 is_stmt 1 view .LVU931
 2789 006c 2046     		mov	r0, r4
 2790 006e FFF7FEFF 		bl	lv_obj_get_parent
 2791              	.LVL276:
 256:lvgl/src/core/lv_obj.c ****             lv_obj_mark_layout_as_dirty(obj);
 2792              		.loc 1 256 13 is_stmt 0 discriminator 1 view .LVU932
 2793 0072 FFF7FEFF 		bl	lv_obj_mark_layout_as_dirty
 2794              	.LVL277:
 257:lvgl/src/core/lv_obj.c ****         }
 2795              		.loc 1 257 13 is_stmt 1 view .LVU933
 2796 0076 2046     		mov	r0, r4
 2797 0078 FFF7FEFF 		bl	lv_obj_mark_layout_as_dirty
 2798              	.LVL278:
 2799 007c D1E7     		b	.L147
 2800              		.cfi_endproc
 2801              	.LFE167:
 2803              		.section	.text.lv_obj_add_state,"ax",%progbits
 2804              		.align	1
 2805              		.global	lv_obj_add_state
 2806              		.syntax unified
 2807              		.thumb
 2808              		.thumb_func
 2810              	lv_obj_add_state:
 2811              	.LVL279:
 2812              	.LFB168:
 267:lvgl/src/core/lv_obj.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 2813              		.loc 1 267 1 view -0
 2814              		.cfi_startproc
 2815              		@ args = 0, pretend = 0, frame = 0
 2816              		@ frame_needed = 0, uses_anonymous_args = 0
 267:lvgl/src/core/lv_obj.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 2817              		.loc 1 267 1 is_stmt 0 view .LVU935
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 100


 2818 0000 08B5     		push	{r3, lr}
 2819              	.LCFI30:
 2820              		.cfi_def_cfa_offset 8
 2821              		.cfi_offset 3, -8
 2822              		.cfi_offset 14, -4
 268:lvgl/src/core/lv_obj.c **** 
 2823              		.loc 1 268 5 is_stmt 1 view .LVU936
 268:lvgl/src/core/lv_obj.c **** 
 2824              		.loc 1 268 5 view .LVU937
 268:lvgl/src/core/lv_obj.c **** 
 2825              		.loc 1 268 5 view .LVU938
 270:lvgl/src/core/lv_obj.c ****     if(obj->state != new_state) {
 2826              		.loc 1 270 5 view .LVU939
 270:lvgl/src/core/lv_obj.c ****     if(obj->state != new_state) {
 2827              		.loc 1 270 31 is_stmt 0 view .LVU940
 2828 0002 038C     		ldrh	r3, [r0, #32]
 270:lvgl/src/core/lv_obj.c ****     if(obj->state != new_state) {
 2829              		.loc 1 270 16 view .LVU941
 2830 0004 43EA0102 		orr	r2, r3, r1
 2831              	.LVL280:
 271:lvgl/src/core/lv_obj.c ****         lv_obj_set_state(obj, new_state);
 2832              		.loc 1 271 5 is_stmt 1 view .LVU942
 271:lvgl/src/core/lv_obj.c ****         lv_obj_set_state(obj, new_state);
 2833              		.loc 1 271 7 is_stmt 0 view .LVU943
 2834 0008 31EA0303 		bics	r3, r1, r3
 2835 000c 00D1     		bne	.L156
 2836              	.LVL281:
 2837              	.L153:
 274:lvgl/src/core/lv_obj.c **** 
 2838              		.loc 1 274 1 view .LVU944
 2839 000e 08BD     		pop	{r3, pc}
 2840              	.LVL282:
 2841              	.L156:
 272:lvgl/src/core/lv_obj.c ****     }
 2842              		.loc 1 272 9 is_stmt 1 view .LVU945
 2843 0010 1146     		mov	r1, r2
 2844              	.LVL283:
 272:lvgl/src/core/lv_obj.c ****     }
 2845              		.loc 1 272 9 is_stmt 0 view .LVU946
 2846 0012 FFF7FEFF 		bl	lv_obj_set_state
 2847              	.LVL284:
 274:lvgl/src/core/lv_obj.c **** 
 2848              		.loc 1 274 1 view .LVU947
 2849 0016 FAE7     		b	.L153
 2850              		.cfi_endproc
 2851              	.LFE168:
 2853              		.section	.text.lv_obj_clear_state,"ax",%progbits
 2854              		.align	1
 2855              		.global	lv_obj_clear_state
 2856              		.syntax unified
 2857              		.thumb
 2858              		.thumb_func
 2860              	lv_obj_clear_state:
 2861              	.LVL285:
 2862              	.LFB169:
 277:lvgl/src/core/lv_obj.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 2863              		.loc 1 277 1 is_stmt 1 view -0
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 101


 2864              		.cfi_startproc
 2865              		@ args = 0, pretend = 0, frame = 0
 2866              		@ frame_needed = 0, uses_anonymous_args = 0
 277:lvgl/src/core/lv_obj.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 2867              		.loc 1 277 1 is_stmt 0 view .LVU949
 2868 0000 08B5     		push	{r3, lr}
 2869              	.LCFI31:
 2870              		.cfi_def_cfa_offset 8
 2871              		.cfi_offset 3, -8
 2872              		.cfi_offset 14, -4
 278:lvgl/src/core/lv_obj.c **** 
 2873              		.loc 1 278 5 is_stmt 1 view .LVU950
 278:lvgl/src/core/lv_obj.c **** 
 2874              		.loc 1 278 5 view .LVU951
 278:lvgl/src/core/lv_obj.c **** 
 2875              		.loc 1 278 5 view .LVU952
 280:lvgl/src/core/lv_obj.c ****     if(obj->state != new_state) {
 2876              		.loc 1 280 5 view .LVU953
 280:lvgl/src/core/lv_obj.c ****     if(obj->state != new_state) {
 2877              		.loc 1 280 31 is_stmt 0 view .LVU954
 2878 0002 028C     		ldrh	r2, [r0, #32]
 280:lvgl/src/core/lv_obj.c ****     if(obj->state != new_state) {
 2879              		.loc 1 280 39 view .LVU955
 2880 0004 CB43     		mvns	r3, r1
 2881 0006 1BB2     		sxth	r3, r3
 280:lvgl/src/core/lv_obj.c ****     if(obj->state != new_state) {
 2882              		.loc 1 280 16 view .LVU956
 2883 0008 02EA0301 		and	r1, r2, r3
 2884              	.LVL286:
 281:lvgl/src/core/lv_obj.c ****         lv_obj_set_state(obj, new_state);
 2885              		.loc 1 281 5 is_stmt 1 view .LVU957
 281:lvgl/src/core/lv_obj.c ****         lv_obj_set_state(obj, new_state);
 2886              		.loc 1 281 7 is_stmt 0 view .LVU958
 2887 000c 9A43     		bics	r2, r2, r3
 2888 000e 00D1     		bne	.L160
 2889              	.LVL287:
 2890              	.L157:
 284:lvgl/src/core/lv_obj.c **** 
 2891              		.loc 1 284 1 view .LVU959
 2892 0010 08BD     		pop	{r3, pc}
 2893              	.LVL288:
 2894              	.L160:
 282:lvgl/src/core/lv_obj.c ****     }
 2895              		.loc 1 282 9 is_stmt 1 view .LVU960
 2896 0012 FFF7FEFF 		bl	lv_obj_set_state
 2897              	.LVL289:
 284:lvgl/src/core/lv_obj.c **** 
 2898              		.loc 1 284 1 is_stmt 0 view .LVU961
 2899 0016 FBE7     		b	.L157
 2900              		.cfi_endproc
 2901              	.LFE169:
 2903              		.section	.text.lv_obj_has_flag,"ax",%progbits
 2904              		.align	1
 2905              		.global	lv_obj_has_flag
 2906              		.syntax unified
 2907              		.thumb
 2908              		.thumb_func
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 102


 2910              	lv_obj_has_flag:
 2911              	.LVL290:
 2912              	.LFB170:
 291:lvgl/src/core/lv_obj.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 2913              		.loc 1 291 1 is_stmt 1 view -0
 2914              		.cfi_startproc
 2915              		@ args = 0, pretend = 0, frame = 0
 2916              		@ frame_needed = 0, uses_anonymous_args = 0
 2917              		@ link register save eliminated.
 292:lvgl/src/core/lv_obj.c **** 
 2918              		.loc 1 292 5 view .LVU963
 292:lvgl/src/core/lv_obj.c **** 
 2919              		.loc 1 292 5 view .LVU964
 292:lvgl/src/core/lv_obj.c **** 
 2920              		.loc 1 292 5 view .LVU965
 294:lvgl/src/core/lv_obj.c **** }
 2921              		.loc 1 294 5 view .LVU966
 294:lvgl/src/core/lv_obj.c **** }
 2922              		.loc 1 294 16 is_stmt 0 view .LVU967
 2923 0000 C369     		ldr	r3, [r0, #28]
 294:lvgl/src/core/lv_obj.c **** }
 2924              		.loc 1 294 42 view .LVU968
 2925 0002 9943     		bics	r1, r1, r3
 2926              	.LVL291:
 295:lvgl/src/core/lv_obj.c **** 
 2927              		.loc 1 295 1 view .LVU969
 2928 0004 0CBF     		ite	eq
 2929 0006 0120     		moveq	r0, #1
 2930              	.LVL292:
 295:lvgl/src/core/lv_obj.c **** 
 2931              		.loc 1 295 1 view .LVU970
 2932 0008 0020     		movne	r0, #0
 2933 000a 7047     		bx	lr
 2934              		.cfi_endproc
 2935              	.LFE170:
 2937              		.section	.text.lv_obj_has_flag_any,"ax",%progbits
 2938              		.align	1
 2939              		.global	lv_obj_has_flag_any
 2940              		.syntax unified
 2941              		.thumb
 2942              		.thumb_func
 2944              	lv_obj_has_flag_any:
 2945              	.LVL293:
 2946              	.LFB171:
 298:lvgl/src/core/lv_obj.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 2947              		.loc 1 298 1 is_stmt 1 view -0
 2948              		.cfi_startproc
 2949              		@ args = 0, pretend = 0, frame = 0
 2950              		@ frame_needed = 0, uses_anonymous_args = 0
 2951              		@ link register save eliminated.
 299:lvgl/src/core/lv_obj.c **** 
 2952              		.loc 1 299 5 view .LVU972
 299:lvgl/src/core/lv_obj.c **** 
 2953              		.loc 1 299 5 view .LVU973
 299:lvgl/src/core/lv_obj.c **** 
 2954              		.loc 1 299 5 view .LVU974
 301:lvgl/src/core/lv_obj.c **** }
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 103


 2955              		.loc 1 301 5 view .LVU975
 301:lvgl/src/core/lv_obj.c **** }
 2956              		.loc 1 301 16 is_stmt 0 view .LVU976
 2957 0000 C369     		ldr	r3, [r0, #28]
 301:lvgl/src/core/lv_obj.c **** }
 2958              		.loc 1 301 36 view .LVU977
 2959 0002 0B42     		tst	r3, r1
 302:lvgl/src/core/lv_obj.c **** 
 2960              		.loc 1 302 1 view .LVU978
 2961 0004 14BF     		ite	ne
 2962 0006 0120     		movne	r0, #1
 2963              	.LVL294:
 302:lvgl/src/core/lv_obj.c **** 
 2964              		.loc 1 302 1 view .LVU979
 2965 0008 0020     		moveq	r0, #0
 2966 000a 7047     		bx	lr
 2967              		.cfi_endproc
 2968              	.LFE171:
 2970              		.section	.text.lv_obj_get_state,"ax",%progbits
 2971              		.align	1
 2972              		.global	lv_obj_get_state
 2973              		.syntax unified
 2974              		.thumb
 2975              		.thumb_func
 2977              	lv_obj_get_state:
 2978              	.LVL295:
 2979              	.LFB172:
 305:lvgl/src/core/lv_obj.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 2980              		.loc 1 305 1 is_stmt 1 view -0
 2981              		.cfi_startproc
 2982              		@ args = 0, pretend = 0, frame = 0
 2983              		@ frame_needed = 0, uses_anonymous_args = 0
 2984              		@ link register save eliminated.
 306:lvgl/src/core/lv_obj.c **** 
 2985              		.loc 1 306 5 view .LVU981
 306:lvgl/src/core/lv_obj.c **** 
 2986              		.loc 1 306 5 view .LVU982
 306:lvgl/src/core/lv_obj.c **** 
 2987              		.loc 1 306 5 view .LVU983
 308:lvgl/src/core/lv_obj.c **** }
 2988              		.loc 1 308 5 view .LVU984
 309:lvgl/src/core/lv_obj.c **** 
 2989              		.loc 1 309 1 is_stmt 0 view .LVU985
 2990 0000 008C     		ldrh	r0, [r0, #32]
 2991              	.LVL296:
 309:lvgl/src/core/lv_obj.c **** 
 2992              		.loc 1 309 1 view .LVU986
 2993 0002 7047     		bx	lr
 2994              		.cfi_endproc
 2995              	.LFE172:
 2997              		.section	.text.lv_obj_has_state,"ax",%progbits
 2998              		.align	1
 2999              		.global	lv_obj_has_state
 3000              		.syntax unified
 3001              		.thumb
 3002              		.thumb_func
 3004              	lv_obj_has_state:
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 104


 3005              	.LVL297:
 3006              	.LFB173:
 312:lvgl/src/core/lv_obj.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 3007              		.loc 1 312 1 is_stmt 1 view -0
 3008              		.cfi_startproc
 3009              		@ args = 0, pretend = 0, frame = 0
 3010              		@ frame_needed = 0, uses_anonymous_args = 0
 3011              		@ link register save eliminated.
 313:lvgl/src/core/lv_obj.c **** 
 3012              		.loc 1 313 5 view .LVU988
 313:lvgl/src/core/lv_obj.c **** 
 3013              		.loc 1 313 5 view .LVU989
 313:lvgl/src/core/lv_obj.c **** 
 3014              		.loc 1 313 5 view .LVU990
 315:lvgl/src/core/lv_obj.c **** }
 3015              		.loc 1 315 5 view .LVU991
 315:lvgl/src/core/lv_obj.c **** }
 3016              		.loc 1 315 15 is_stmt 0 view .LVU992
 3017 0000 038C     		ldrh	r3, [r0, #32]
 315:lvgl/src/core/lv_obj.c **** }
 3018              		.loc 1 315 38 view .LVU993
 3019 0002 0B42     		tst	r3, r1
 316:lvgl/src/core/lv_obj.c **** 
 3020              		.loc 1 316 1 view .LVU994
 3021 0004 14BF     		ite	ne
 3022 0006 0120     		movne	r0, #1
 3023              	.LVL298:
 316:lvgl/src/core/lv_obj.c **** 
 3024              		.loc 1 316 1 view .LVU995
 3025 0008 0020     		moveq	r0, #0
 3026 000a 7047     		bx	lr
 3027              		.cfi_endproc
 3028              	.LFE173:
 3030              		.section	.text.lv_obj_get_group,"ax",%progbits
 3031              		.align	1
 3032              		.global	lv_obj_get_group
 3033              		.syntax unified
 3034              		.thumb
 3035              		.thumb_func
 3037              	lv_obj_get_group:
 3038              	.LVL299:
 3039              	.LFB174:
 319:lvgl/src/core/lv_obj.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 3040              		.loc 1 319 1 is_stmt 1 view -0
 3041              		.cfi_startproc
 3042              		@ args = 0, pretend = 0, frame = 0
 3043              		@ frame_needed = 0, uses_anonymous_args = 0
 3044              		@ link register save eliminated.
 320:lvgl/src/core/lv_obj.c **** 
 3045              		.loc 1 320 5 view .LVU997
 320:lvgl/src/core/lv_obj.c **** 
 3046              		.loc 1 320 5 view .LVU998
 320:lvgl/src/core/lv_obj.c **** 
 3047              		.loc 1 320 5 view .LVU999
 322:lvgl/src/core/lv_obj.c ****     else return NULL;
 3048              		.loc 1 322 5 view .LVU1000
 322:lvgl/src/core/lv_obj.c ****     else return NULL;
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 105


 3049              		.loc 1 322 11 is_stmt 0 view .LVU1001
 3050 0000 8068     		ldr	r0, [r0, #8]
 3051              	.LVL300:
 322:lvgl/src/core/lv_obj.c ****     else return NULL;
 3052              		.loc 1 322 7 view .LVU1002
 3053 0002 00B1     		cbz	r0, .L165
 322:lvgl/src/core/lv_obj.c ****     else return NULL;
 3054              		.loc 1 322 24 is_stmt 1 discriminator 1 view .LVU1003
 322:lvgl/src/core/lv_obj.c ****     else return NULL;
 3055              		.loc 1 322 45 is_stmt 0 discriminator 1 view .LVU1004
 3056 0004 8068     		ldr	r0, [r0, #8]
 3057              	.L165:
 324:lvgl/src/core/lv_obj.c **** 
 3058              		.loc 1 324 1 view .LVU1005
 3059 0006 7047     		bx	lr
 3060              		.cfi_endproc
 3061              	.LFE174:
 3063              		.section	.text.lv_obj_event,"ax",%progbits
 3064              		.align	1
 3065              		.syntax unified
 3066              		.thumb
 3067              		.thumb_func
 3069              	lv_obj_event:
 3070              	.LVL301:
 3071              	.LFB185:
 705:lvgl/src/core/lv_obj.c ****     LV_UNUSED(class_p);
 3072              		.loc 1 705 1 is_stmt 1 view -0
 3073              		.cfi_startproc
 3074              		@ args = 0, pretend = 0, frame = 16
 3075              		@ frame_needed = 0, uses_anonymous_args = 0
 705:lvgl/src/core/lv_obj.c ****     LV_UNUSED(class_p);
 3076              		.loc 1 705 1 is_stmt 0 view .LVU1007
 3077 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3078              	.LCFI32:
 3079              		.cfi_def_cfa_offset 20
 3080              		.cfi_offset 4, -20
 3081              		.cfi_offset 5, -16
 3082              		.cfi_offset 6, -12
 3083              		.cfi_offset 7, -8
 3084              		.cfi_offset 14, -4
 3085 0002 85B0     		sub	sp, sp, #20
 3086              	.LCFI33:
 3087              		.cfi_def_cfa_offset 40
 3088 0004 0E46     		mov	r6, r1
 706:lvgl/src/core/lv_obj.c **** 
 3089              		.loc 1 706 5 is_stmt 1 view .LVU1008
 708:lvgl/src/core/lv_obj.c ****     lv_obj_t * obj = lv_event_get_current_target(e);
 3090              		.loc 1 708 5 view .LVU1009
 708:lvgl/src/core/lv_obj.c ****     lv_obj_t * obj = lv_event_get_current_target(e);
 3091              		.loc 1 708 28 is_stmt 0 view .LVU1010
 3092 0006 0846     		mov	r0, r1
 3093              	.LVL302:
 708:lvgl/src/core/lv_obj.c ****     lv_obj_t * obj = lv_event_get_current_target(e);
 3094              		.loc 1 708 28 view .LVU1011
 3095 0008 FFF7FEFF 		bl	lv_event_get_code
 3096              	.LVL303:
 708:lvgl/src/core/lv_obj.c ****     lv_obj_t * obj = lv_event_get_current_target(e);
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 106


 3097              		.loc 1 708 28 view .LVU1012
 3098 000c 0446     		mov	r4, r0
 3099              	.LVL304:
 709:lvgl/src/core/lv_obj.c ****     if(code == LV_EVENT_PRESSED) {
 3100              		.loc 1 709 5 is_stmt 1 view .LVU1013
 709:lvgl/src/core/lv_obj.c ****     if(code == LV_EVENT_PRESSED) {
 3101              		.loc 1 709 22 is_stmt 0 view .LVU1014
 3102 000e 3046     		mov	r0, r6
 3103 0010 FFF7FEFF 		bl	lv_event_get_current_target
 3104              	.LVL305:
 3105 0014 0546     		mov	r5, r0
 3106              	.LVL306:
 710:lvgl/src/core/lv_obj.c ****         lv_obj_add_state(obj, LV_STATE_PRESSED);
 3107              		.loc 1 710 5 is_stmt 1 view .LVU1015
 3108 0016 631E     		subs	r3, r4, #1
 3109 0018 292B     		cmp	r3, #41
 3110 001a 2ED8     		bhi	.L167
 3111 001c DFE813F0 		tbh	[pc, r3, lsl #1]
 3112              	.L170:
 3113 0020 2A00     		.2byte	(.L182-.L170)/2
 3114 0022 2D00     		.2byte	(.L167-.L170)/2
 3115 0024 5400     		.2byte	(.L181-.L170)/2
 3116 0026 2D00     		.2byte	(.L167-.L170)/2
 3117 0028 2D00     		.2byte	(.L167-.L170)/2
 3118 002a 2D00     		.2byte	(.L167-.L170)/2
 3119 002c 2D00     		.2byte	(.L167-.L170)/2
 3120 002e 2F00     		.2byte	(.L180-.L170)/2
 3121 0030 6201     		.2byte	(.L179-.L170)/2
 3122 0032 6601     		.2byte	(.L178-.L170)/2
 3123 0034 2D00     		.2byte	(.L167-.L170)/2
 3124 0036 2D00     		.2byte	(.L167-.L170)/2
 3125 0038 6700     		.2byte	(.L177-.L170)/2
 3126 003a 3301     		.2byte	(.L176-.L170)/2
 3127 003c 7D01     		.2byte	(.L175-.L170)/2
 3128 003e 2D00     		.2byte	(.L167-.L170)/2
 3129 0040 2D00     		.2byte	(.L167-.L170)/2
 3130 0042 E301     		.2byte	(.L173-.L170)/2
 3131 0044 D401     		.2byte	(.L174-.L170)/2
 3132 0046 2D00     		.2byte	(.L167-.L170)/2
 3133 0048 E301     		.2byte	(.L173-.L170)/2
 3134 004a 2D00     		.2byte	(.L167-.L170)/2
 3135 004c 2D00     		.2byte	(.L167-.L170)/2
 3136 004e E301     		.2byte	(.L173-.L170)/2
 3137 0050 2D00     		.2byte	(.L167-.L170)/2
 3138 0052 2D00     		.2byte	(.L167-.L170)/2
 3139 0054 2D00     		.2byte	(.L167-.L170)/2
 3140 0056 2D00     		.2byte	(.L167-.L170)/2
 3141 0058 2D00     		.2byte	(.L167-.L170)/2
 3142 005a 2D00     		.2byte	(.L167-.L170)/2
 3143 005c 2D00     		.2byte	(.L167-.L170)/2
 3144 005e 2D00     		.2byte	(.L167-.L170)/2
 3145 0060 2D00     		.2byte	(.L167-.L170)/2
 3146 0062 A601     		.2byte	(.L172-.L170)/2
 3147 0064 2D00     		.2byte	(.L167-.L170)/2
 3148 0066 2D00     		.2byte	(.L167-.L170)/2
 3149 0068 2D00     		.2byte	(.L167-.L170)/2
 3150 006a 2D00     		.2byte	(.L167-.L170)/2
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 107


 3151 006c 2D00     		.2byte	(.L167-.L170)/2
 3152 006e 2D00     		.2byte	(.L167-.L170)/2
 3153 0070 8101     		.2byte	(.L171-.L170)/2
 3154 0072 5800     		.2byte	(.L169-.L170)/2
 3155              		.p2align 1
 3156              	.L182:
 711:lvgl/src/core/lv_obj.c ****     }
 3157              		.loc 1 711 9 view .LVU1016
 3158 0074 2021     		movs	r1, #32
 3159 0076 FFF7FEFF 		bl	lv_obj_add_state
 3160              	.LVL307:
 3161              	.L167:
 852:lvgl/src/core/lv_obj.c **** 
 3162              		.loc 1 852 1 is_stmt 0 view .LVU1017
 3163 007a 05B0     		add	sp, sp, #20
 3164              	.LCFI34:
 3165              		.cfi_remember_state
 3166              		.cfi_def_cfa_offset 20
 3167              		@ sp needed
 3168 007c F0BD     		pop	{r4, r5, r6, r7, pc}
 3169              	.LVL308:
 3170              	.L180:
 3171              	.LCFI35:
 3172              		.cfi_restore_state
 3173              	.LBB184:
 714:lvgl/src/core/lv_obj.c ****         void * param = lv_event_get_param(e);
 3174              		.loc 1 714 9 is_stmt 1 view .LVU1018
 3175 007e 2021     		movs	r1, #32
 3176 0080 FFF7FEFF 		bl	lv_obj_clear_state
 3177              	.LVL309:
 715:lvgl/src/core/lv_obj.c ****         /*Go the checked state if enabled*/
 3178              		.loc 1 715 9 view .LVU1019
 715:lvgl/src/core/lv_obj.c ****         /*Go the checked state if enabled*/
 3179              		.loc 1 715 24 is_stmt 0 view .LVU1020
 3180 0084 3046     		mov	r0, r6
 3181 0086 FFF7FEFF 		bl	lv_event_get_param
 3182              	.LVL310:
 717:lvgl/src/core/lv_obj.c ****             if(!(lv_obj_get_state(obj) & LV_STATE_CHECKED)) lv_obj_add_state(obj, LV_STATE_CHECKED)
 3183              		.loc 1 717 9 is_stmt 1 view .LVU1021
 717:lvgl/src/core/lv_obj.c ****             if(!(lv_obj_get_state(obj) & LV_STATE_CHECKED)) lv_obj_add_state(obj, LV_STATE_CHECKED)
 3184              		.loc 1 717 12 is_stmt 0 view .LVU1022
 3185 008a FFF7FEFF 		bl	lv_indev_get_scroll_obj
 3186              	.LVL311:
 717:lvgl/src/core/lv_obj.c ****             if(!(lv_obj_get_state(obj) & LV_STATE_CHECKED)) lv_obj_add_state(obj, LV_STATE_CHECKED)
 3187              		.loc 1 717 11 discriminator 1 view .LVU1023
 3188 008e 0028     		cmp	r0, #0
 3189 0090 F3D1     		bne	.L167
 717:lvgl/src/core/lv_obj.c ****             if(!(lv_obj_get_state(obj) & LV_STATE_CHECKED)) lv_obj_add_state(obj, LV_STATE_CHECKED)
 3190              		.loc 1 717 54 discriminator 1 view .LVU1024
 3191 0092 0821     		movs	r1, #8
 3192 0094 2846     		mov	r0, r5
 3193 0096 FFF7FEFF 		bl	lv_obj_has_flag
 3194              	.LVL312:
 717:lvgl/src/core/lv_obj.c ****             if(!(lv_obj_get_state(obj) & LV_STATE_CHECKED)) lv_obj_add_state(obj, LV_STATE_CHECKED)
 3195              		.loc 1 717 51 discriminator 1 view .LVU1025
 3196 009a 0028     		cmp	r0, #0
 3197 009c EDD0     		beq	.L167
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 108


 3198              	.LBB185:
 718:lvgl/src/core/lv_obj.c ****             else lv_obj_clear_state(obj, LV_STATE_CHECKED);
 3199              		.loc 1 718 13 is_stmt 1 view .LVU1026
 718:lvgl/src/core/lv_obj.c ****             else lv_obj_clear_state(obj, LV_STATE_CHECKED);
 3200              		.loc 1 718 18 is_stmt 0 view .LVU1027
 3201 009e 2846     		mov	r0, r5
 3202 00a0 FFF7FEFF 		bl	lv_obj_get_state
 3203              	.LVL313:
 718:lvgl/src/core/lv_obj.c ****             else lv_obj_clear_state(obj, LV_STATE_CHECKED);
 3204              		.loc 1 718 15 discriminator 1 view .LVU1028
 3205 00a4 10F0010F 		tst	r0, #1
 3206 00a8 09D1     		bne	.L183
 718:lvgl/src/core/lv_obj.c ****             else lv_obj_clear_state(obj, LV_STATE_CHECKED);
 3207              		.loc 1 718 61 is_stmt 1 discriminator 1 view .LVU1029
 3208 00aa 0121     		movs	r1, #1
 3209 00ac 2846     		mov	r0, r5
 3210 00ae FFF7FEFF 		bl	lv_obj_add_state
 3211              	.LVL314:
 3212              	.L184:
 721:lvgl/src/core/lv_obj.c ****             if(res != LV_RES_OK) return;
 3213              		.loc 1 721 13 view .LVU1030
 721:lvgl/src/core/lv_obj.c ****             if(res != LV_RES_OK) return;
 3214              		.loc 1 721 28 is_stmt 0 view .LVU1031
 3215 00b2 0022     		movs	r2, #0
 3216 00b4 1C21     		movs	r1, #28
 3217 00b6 2846     		mov	r0, r5
 3218 00b8 FFF7FEFF 		bl	lv_event_send
 3219              	.LVL315:
 722:lvgl/src/core/lv_obj.c ****         }
 3220              		.loc 1 722 13 is_stmt 1 view .LVU1032
 722:lvgl/src/core/lv_obj.c ****         }
 3221              		.loc 1 722 34 discriminator 1 view .LVU1033
 3222 00bc DDE7     		b	.L167
 3223              	.L183:
 719:lvgl/src/core/lv_obj.c **** 
 3224              		.loc 1 719 18 view .LVU1034
 3225 00be 0121     		movs	r1, #1
 3226 00c0 2846     		mov	r0, r5
 3227 00c2 FFF7FEFF 		bl	lv_obj_clear_state
 3228              	.LVL316:
 3229 00c6 F4E7     		b	.L184
 3230              	.LVL317:
 3231              	.L181:
 719:lvgl/src/core/lv_obj.c **** 
 3232              		.loc 1 719 18 is_stmt 0 view .LVU1035
 3233              	.LBE185:
 3234              	.LBE184:
 726:lvgl/src/core/lv_obj.c ****     }
 3235              		.loc 1 726 9 is_stmt 1 view .LVU1036
 3236 00c8 2021     		movs	r1, #32
 3237 00ca FFF7FEFF 		bl	lv_obj_clear_state
 3238              	.LVL318:
 726:lvgl/src/core/lv_obj.c ****     }
 3239              		.loc 1 726 9 is_stmt 0 view .LVU1037
 3240 00ce D4E7     		b	.L167
 3241              	.LVL319:
 3242              	.L169:
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 109


 3243              	.LBB186:
 729:lvgl/src/core/lv_obj.c ****         for(uint32_t i = 0; i < child_cnt; i++) {
 3244              		.loc 1 729 9 is_stmt 1 view .LVU1038
 729:lvgl/src/core/lv_obj.c ****         for(uint32_t i = 0; i < child_cnt; i++) {
 3245              		.loc 1 729 30 is_stmt 0 view .LVU1039
 3246 00d0 FFF7FEFF 		bl	lv_obj_get_child_cnt
 3247              	.LVL320:
 729:lvgl/src/core/lv_obj.c ****         for(uint32_t i = 0; i < child_cnt; i++) {
 3248              		.loc 1 729 30 view .LVU1040
 3249 00d4 0646     		mov	r6, r0
 3250              	.LVL321:
 730:lvgl/src/core/lv_obj.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 3251              		.loc 1 730 9 is_stmt 1 view .LVU1041
 3252              	.LBB187:
 730:lvgl/src/core/lv_obj.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 3253              		.loc 1 730 13 view .LVU1042
 730:lvgl/src/core/lv_obj.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 3254              		.loc 1 730 22 is_stmt 0 view .LVU1043
 3255 00d6 0024     		movs	r4, #0
 3256              	.LVL322:
 730:lvgl/src/core/lv_obj.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 3257              		.loc 1 730 9 view .LVU1044
 3258 00d8 06E0     		b	.L185
 3259              	.LVL323:
 3260              	.L186:
 3261              	.LBB188:
 731:lvgl/src/core/lv_obj.c ****             lv_obj_mark_layout_as_dirty(child);
 3262              		.loc 1 731 13 is_stmt 1 view .LVU1045
 731:lvgl/src/core/lv_obj.c ****             lv_obj_mark_layout_as_dirty(child);
 3263              		.loc 1 731 35 is_stmt 0 view .LVU1046
 3264 00da AB68     		ldr	r3, [r5, #8]
 731:lvgl/src/core/lv_obj.c ****             lv_obj_mark_layout_as_dirty(child);
 3265              		.loc 1 731 46 view .LVU1047
 3266 00dc 1B68     		ldr	r3, [r3]
 3267              	.LVL324:
 732:lvgl/src/core/lv_obj.c ****         }
 3268              		.loc 1 732 13 is_stmt 1 view .LVU1048
 3269 00de 53F82400 		ldr	r0, [r3, r4, lsl #2]
 3270 00e2 FFF7FEFF 		bl	lv_obj_mark_layout_as_dirty
 3271              	.LVL325:
 732:lvgl/src/core/lv_obj.c ****         }
 3272              		.loc 1 732 13 is_stmt 0 view .LVU1049
 3273              	.LBE188:
 730:lvgl/src/core/lv_obj.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 3274              		.loc 1 730 45 is_stmt 1 discriminator 3 view .LVU1050
 3275 00e6 0134     		adds	r4, r4, #1
 3276              	.LVL326:
 3277              	.L185:
 730:lvgl/src/core/lv_obj.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 3278              		.loc 1 730 31 discriminator 1 view .LVU1051
 3279 00e8 B442     		cmp	r4, r6
 3280 00ea F6D3     		bcc	.L186
 3281 00ec C5E7     		b	.L167
 3282              	.LVL327:
 3283              	.L177:
 730:lvgl/src/core/lv_obj.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 3284              		.loc 1 730 31 is_stmt 0 discriminator 1 view .LVU1052
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 110


 3285              	.LBE187:
 3286              	.LBE186:
 736:lvgl/src/core/lv_obj.c ****             char c = *((char *)lv_event_get_param(e));
 3287              		.loc 1 736 9 is_stmt 1 view .LVU1053
 736:lvgl/src/core/lv_obj.c ****             char c = *((char *)lv_event_get_param(e));
 3288              		.loc 1 736 12 is_stmt 0 view .LVU1054
 3289 00ee 0821     		movs	r1, #8
 3290 00f0 FFF7FEFF 		bl	lv_obj_has_flag
 3291              	.LVL328:
 736:lvgl/src/core/lv_obj.c ****             char c = *((char *)lv_event_get_param(e));
 3292              		.loc 1 736 11 discriminator 1 view .LVU1055
 3293 00f4 F0B9     		cbnz	r0, .L221
 751:lvgl/src/core/lv_obj.c ****             /*scroll by keypad or encoder*/
 3294              		.loc 1 751 14 is_stmt 1 view .LVU1056
 751:lvgl/src/core/lv_obj.c ****             /*scroll by keypad or encoder*/
 3295              		.loc 1 751 17 is_stmt 0 view .LVU1057
 3296 00f6 4FF40161 		mov	r1, #2064
 3297 00fa 2846     		mov	r0, r5
 3298 00fc FFF7FEFF 		bl	lv_obj_has_flag
 3299              	.LVL329:
 751:lvgl/src/core/lv_obj.c ****             /*scroll by keypad or encoder*/
 3300              		.loc 1 751 16 discriminator 1 view .LVU1058
 3301 0100 0028     		cmp	r0, #0
 3302 0102 BAD0     		beq	.L167
 751:lvgl/src/core/lv_obj.c ****             /*scroll by keypad or encoder*/
 3303              		.loc 1 751 98 discriminator 1 view .LVU1059
 3304 0104 2846     		mov	r0, r5
 3305 0106 FFF7FEFF 		bl	lv_obj_is_editable
 3306              	.LVL330:
 751:lvgl/src/core/lv_obj.c ****             /*scroll by keypad or encoder*/
 3307              		.loc 1 751 94 discriminator 1 view .LVU1060
 3308 010a 0028     		cmp	r0, #0
 3309 010c B5D1     		bne	.L167
 3310              	.LBB189:
 753:lvgl/src/core/lv_obj.c ****             lv_coord_t sl = lv_obj_get_scroll_left(obj);
 3311              		.loc 1 753 13 is_stmt 1 view .LVU1061
 3312              	.LVL331:
 754:lvgl/src/core/lv_obj.c ****             lv_coord_t sr = lv_obj_get_scroll_right(obj);
 3313              		.loc 1 754 13 view .LVU1062
 754:lvgl/src/core/lv_obj.c ****             lv_coord_t sr = lv_obj_get_scroll_right(obj);
 3314              		.loc 1 754 29 is_stmt 0 view .LVU1063
 3315 010e 2846     		mov	r0, r5
 3316 0110 FFF7FEFF 		bl	lv_obj_get_scroll_left
 3317              	.LVL332:
 3318 0114 0746     		mov	r7, r0
 3319              	.LVL333:
 755:lvgl/src/core/lv_obj.c ****             char c = *((char *)lv_event_get_param(e));
 3320              		.loc 1 755 13 is_stmt 1 view .LVU1064
 755:lvgl/src/core/lv_obj.c ****             char c = *((char *)lv_event_get_param(e));
 3321              		.loc 1 755 29 is_stmt 0 view .LVU1065
 3322 0116 2846     		mov	r0, r5
 3323 0118 FFF7FEFF 		bl	lv_obj_get_scroll_right
 3324              	.LVL334:
 3325 011c 0446     		mov	r4, r0
 3326              	.LVL335:
 756:lvgl/src/core/lv_obj.c ****             if(c == LV_KEY_DOWN) {
 3327              		.loc 1 756 13 is_stmt 1 view .LVU1066
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 111


 756:lvgl/src/core/lv_obj.c ****             if(c == LV_KEY_DOWN) {
 3328              		.loc 1 756 32 is_stmt 0 view .LVU1067
 3329 011e 3046     		mov	r0, r6
 3330 0120 FFF7FEFF 		bl	lv_event_get_param
 3331              	.LVL336:
 756:lvgl/src/core/lv_obj.c ****             if(c == LV_KEY_DOWN) {
 3332              		.loc 1 756 18 discriminator 1 view .LVU1068
 3333 0124 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 3334              	.LVL337:
 757:lvgl/src/core/lv_obj.c ****                 /*use scroll_to_x/y functions to enforce scroll limits*/
 3335              		.loc 1 757 13 is_stmt 1 view .LVU1069
 3336 0126 113B     		subs	r3, r3, #17
 3337 0128 032B     		cmp	r3, #3
 3338 012a A6D8     		bhi	.L167
 3339 012c DFE803F0 		tbb	[pc, r3]
 3340              	.L193:
 3341 0130 33       		.byte	(.L196-.L193)/2
 3342 0131 1F       		.byte	(.L195-.L193)/2
 3343 0132 47       		.byte	(.L194-.L193)/2
 3344 0133 79       		.byte	(.L192-.L193)/2
 3345              	.LVL338:
 3346              		.p2align 1
 3347              	.L221:
 757:lvgl/src/core/lv_obj.c ****                 /*use scroll_to_x/y functions to enforce scroll limits*/
 3348              		.loc 1 757 13 is_stmt 0 view .LVU1070
 3349              	.LBE189:
 3350              	.LBB190:
 737:lvgl/src/core/lv_obj.c ****             if(c == LV_KEY_RIGHT || c == LV_KEY_UP) {
 3351              		.loc 1 737 13 is_stmt 1 view .LVU1071
 737:lvgl/src/core/lv_obj.c ****             if(c == LV_KEY_RIGHT || c == LV_KEY_UP) {
 3352              		.loc 1 737 32 is_stmt 0 view .LVU1072
 3353 0134 3046     		mov	r0, r6
 3354 0136 FFF7FEFF 		bl	lv_event_get_param
 3355              	.LVL339:
 737:lvgl/src/core/lv_obj.c ****             if(c == LV_KEY_RIGHT || c == LV_KEY_UP) {
 3356              		.loc 1 737 18 discriminator 1 view .LVU1073
 3357 013a 0478     		ldrb	r4, [r0]	@ zero_extendqisi2
 3358              	.LVL340:
 738:lvgl/src/core/lv_obj.c ****                 lv_obj_add_state(obj, LV_STATE_CHECKED);
 3359              		.loc 1 738 13 is_stmt 1 view .LVU1074
 3360 013c A4F11103 		sub	r3, r4, #17
 3361 0140 032B     		cmp	r3, #3
 3362 0142 07D8     		bhi	.L188
 3363 0144 DFE803F0 		tbb	[pc, r3]
 3364              	.L190:
 3365 0148 02       		.byte	(.L191-.L190)/2
 3366 0149 0E       		.byte	(.L189-.L190)/2
 3367 014a 02       		.byte	(.L191-.L190)/2
 3368 014b 0E       		.byte	(.L189-.L190)/2
 3369              		.p2align 1
 3370              	.L191:
 739:lvgl/src/core/lv_obj.c ****             }
 3371              		.loc 1 739 17 view .LVU1075
 3372 014c 0121     		movs	r1, #1
 3373 014e 2846     		mov	r0, r5
 3374 0150 FFF7FEFF 		bl	lv_obj_add_state
 3375              	.LVL341:
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 112


 3376              	.L188:
 746:lvgl/src/core/lv_obj.c ****                 lv_res_t res = lv_event_send(obj, LV_EVENT_VALUE_CHANGED, NULL);
 3377              		.loc 1 746 13 view .LVU1076
 746:lvgl/src/core/lv_obj.c ****                 lv_res_t res = lv_event_send(obj, LV_EVENT_VALUE_CHANGED, NULL);
 3378              		.loc 1 746 15 is_stmt 0 view .LVU1077
 3379 0154 0A2C     		cmp	r4, #10
 3380 0156 90D0     		beq	.L167
 3381              	.LBB191:
 747:lvgl/src/core/lv_obj.c ****                 if(res != LV_RES_OK) return;
 3382              		.loc 1 747 17 is_stmt 1 view .LVU1078
 747:lvgl/src/core/lv_obj.c ****                 if(res != LV_RES_OK) return;
 3383              		.loc 1 747 32 is_stmt 0 view .LVU1079
 3384 0158 0022     		movs	r2, #0
 3385 015a 1C21     		movs	r1, #28
 3386 015c 2846     		mov	r0, r5
 3387 015e FFF7FEFF 		bl	lv_event_send
 3388              	.LVL342:
 748:lvgl/src/core/lv_obj.c ****             }
 3389              		.loc 1 748 17 is_stmt 1 view .LVU1080
 748:lvgl/src/core/lv_obj.c ****             }
 3390              		.loc 1 748 38 discriminator 1 view .LVU1081
 3391 0162 8AE7     		b	.L167
 3392              	.L189:
 748:lvgl/src/core/lv_obj.c ****             }
 3393              		.loc 1 748 38 is_stmt 0 discriminator 1 view .LVU1082
 3394              	.LBE191:
 742:lvgl/src/core/lv_obj.c ****             }
 3395              		.loc 1 742 17 is_stmt 1 view .LVU1083
 3396 0164 0121     		movs	r1, #1
 3397 0166 2846     		mov	r0, r5
 3398 0168 FFF7FEFF 		bl	lv_obj_clear_state
 3399              	.LVL343:
 3400 016c F2E7     		b	.L188
 3401              	.LVL344:
 3402              	.L195:
 742:lvgl/src/core/lv_obj.c ****             }
 3403              		.loc 1 742 17 is_stmt 0 view .LVU1084
 3404              	.LBE190:
 3405              	.LBB192:
 759:lvgl/src/core/lv_obj.c ****             }
 3406              		.loc 1 759 17 is_stmt 1 view .LVU1085
 759:lvgl/src/core/lv_obj.c ****             }
 3407              		.loc 1 759 41 is_stmt 0 view .LVU1086
 3408 016e 2846     		mov	r0, r5
 3409              	.LVL345:
 759:lvgl/src/core/lv_obj.c ****             }
 3410              		.loc 1 759 41 view .LVU1087
 3411 0170 FFF7FEFF 		bl	lv_obj_get_scroll_y
 3412              	.LVL346:
 759:lvgl/src/core/lv_obj.c ****             }
 3413              		.loc 1 759 41 discriminator 1 view .LVU1088
 3414 0174 84B2     		uxth	r4, r0
 3415              	.LVL347:
 759:lvgl/src/core/lv_obj.c ****             }
 3416              		.loc 1 759 68 discriminator 1 view .LVU1089
 3417 0176 2846     		mov	r0, r5
 3418 0178 FFF7FEFF 		bl	lv_obj_get_height
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 113


 3419              	.LVL348:
 759:lvgl/src/core/lv_obj.c ****             }
 3420              		.loc 1 759 66 discriminator 2 view .LVU1090
 3421 017c 0246     		mov	r2, r0
 3422 017e 0028     		cmp	r0, #0
 3423 0180 07DB     		blt	.L222
 3424              	.L197:
 3425 0182 04EBA201 		add	r1, r4, r2, asr #2
 759:lvgl/src/core/lv_obj.c ****             }
 3426              		.loc 1 759 17 discriminator 2 view .LVU1091
 3427 0186 0022     		movs	r2, #0
 3428 0188 09B2     		sxth	r1, r1
 3429 018a 2846     		mov	r0, r5
 3430 018c FFF7FEFF 		bl	lv_obj_scroll_to_y
 3431              	.LVL349:
 3432 0190 73E7     		b	.L167
 3433              	.L222:
 759:lvgl/src/core/lv_obj.c ****             }
 3434              		.loc 1 759 66 discriminator 2 view .LVU1092
 3435 0192 C21C     		adds	r2, r0, #3
 3436 0194 F5E7     		b	.L197
 3437              	.LVL350:
 3438              	.L196:
 762:lvgl/src/core/lv_obj.c ****             }
 3439              		.loc 1 762 17 is_stmt 1 view .LVU1093
 762:lvgl/src/core/lv_obj.c ****             }
 3440              		.loc 1 762 41 is_stmt 0 view .LVU1094
 3441 0196 2846     		mov	r0, r5
 3442              	.LVL351:
 762:lvgl/src/core/lv_obj.c ****             }
 3443              		.loc 1 762 41 view .LVU1095
 3444 0198 FFF7FEFF 		bl	lv_obj_get_scroll_y
 3445              	.LVL352:
 762:lvgl/src/core/lv_obj.c ****             }
 3446              		.loc 1 762 41 discriminator 1 view .LVU1096
 3447 019c 84B2     		uxth	r4, r0
 3448              	.LVL353:
 762:lvgl/src/core/lv_obj.c ****             }
 3449              		.loc 1 762 68 discriminator 1 view .LVU1097
 3450 019e 2846     		mov	r0, r5
 3451 01a0 FFF7FEFF 		bl	lv_obj_get_height
 3452              	.LVL354:
 762:lvgl/src/core/lv_obj.c ****             }
 3453              		.loc 1 762 66 discriminator 2 view .LVU1098
 3454 01a4 0246     		mov	r2, r0
 3455 01a6 0028     		cmp	r0, #0
 3456 01a8 07DB     		blt	.L223
 3457              	.L198:
 3458 01aa A4EBA201 		sub	r1, r4, r2, asr #2
 762:lvgl/src/core/lv_obj.c ****             }
 3459              		.loc 1 762 17 discriminator 2 view .LVU1099
 3460 01ae 0022     		movs	r2, #0
 3461 01b0 09B2     		sxth	r1, r1
 3462 01b2 2846     		mov	r0, r5
 3463 01b4 FFF7FEFF 		bl	lv_obj_scroll_to_y
 3464              	.LVL355:
 3465 01b8 5FE7     		b	.L167
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 114


 3466              	.L223:
 762:lvgl/src/core/lv_obj.c ****             }
 3467              		.loc 1 762 66 discriminator 2 view .LVU1100
 3468 01ba C21C     		adds	r2, r0, #3
 3469 01bc F5E7     		b	.L198
 3470              	.LVL356:
 3471              	.L194:
 766:lvgl/src/core/lv_obj.c ****                     lv_obj_scroll_to_y(obj, lv_obj_get_scroll_y(obj) + lv_obj_get_height(obj) / 4, 
 3472              		.loc 1 766 17 is_stmt 1 view .LVU1101
 766:lvgl/src/core/lv_obj.c ****                     lv_obj_scroll_to_y(obj, lv_obj_get_scroll_y(obj) + lv_obj_get_height(obj) / 4, 
 3473              		.loc 1 766 23 is_stmt 0 view .LVU1102
 3474 01be 2846     		mov	r0, r5
 3475              	.LVL357:
 766:lvgl/src/core/lv_obj.c ****                     lv_obj_scroll_to_y(obj, lv_obj_get_scroll_y(obj) + lv_obj_get_height(obj) / 4, 
 3476              		.loc 1 766 23 view .LVU1103
 3477 01c0 FFF7FEFF 		bl	lv_obj_get_scroll_dir
 3478              	.LVL358:
 766:lvgl/src/core/lv_obj.c ****                     lv_obj_scroll_to_y(obj, lv_obj_get_scroll_y(obj) + lv_obj_get_height(obj) / 4, 
 3479              		.loc 1 766 19 discriminator 1 view .LVU1104
 3480 01c4 10F0030F 		tst	r0, #3
 3481 01c8 03D0     		beq	.L199
 766:lvgl/src/core/lv_obj.c ****                     lv_obj_scroll_to_y(obj, lv_obj_get_scroll_y(obj) + lv_obj_get_height(obj) / 4, 
 3482              		.loc 1 766 20 discriminator 1 view .LVU1105
 3483 01ca 002F     		cmp	r7, #0
 3484 01cc D8BF     		it	le
 3485 01ce 002C     		cmple	r4, #0
 3486 01d0 13DC     		bgt	.L200
 3487              	.L199:
 767:lvgl/src/core/lv_obj.c ****                 else
 3488              		.loc 1 767 21 is_stmt 1 view .LVU1106
 767:lvgl/src/core/lv_obj.c ****                 else
 3489              		.loc 1 767 45 is_stmt 0 view .LVU1107
 3490 01d2 2846     		mov	r0, r5
 3491 01d4 FFF7FEFF 		bl	lv_obj_get_scroll_y
 3492              	.LVL359:
 767:lvgl/src/core/lv_obj.c ****                 else
 3493              		.loc 1 767 45 discriminator 1 view .LVU1108
 3494 01d8 84B2     		uxth	r4, r0
 3495              	.LVL360:
 767:lvgl/src/core/lv_obj.c ****                 else
 3496              		.loc 1 767 72 discriminator 1 view .LVU1109
 3497 01da 2846     		mov	r0, r5
 3498 01dc FFF7FEFF 		bl	lv_obj_get_height
 3499              	.LVL361:
 767:lvgl/src/core/lv_obj.c ****                 else
 3500              		.loc 1 767 70 discriminator 2 view .LVU1110
 3501 01e0 0246     		mov	r2, r0
 3502 01e2 0028     		cmp	r0, #0
 3503 01e4 07DB     		blt	.L224
 3504              	.L201:
 3505 01e6 04EBA201 		add	r1, r4, r2, asr #2
 767:lvgl/src/core/lv_obj.c ****                 else
 3506              		.loc 1 767 21 discriminator 2 view .LVU1111
 3507 01ea 0022     		movs	r2, #0
 3508 01ec 09B2     		sxth	r1, r1
 3509 01ee 2846     		mov	r0, r5
 3510 01f0 FFF7FEFF 		bl	lv_obj_scroll_to_y
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 115


 3511              	.LVL362:
 767:lvgl/src/core/lv_obj.c ****                 else
 3512              		.loc 1 767 21 view .LVU1112
 3513 01f4 41E7     		b	.L167
 3514              	.L224:
 767:lvgl/src/core/lv_obj.c ****                 else
 3515              		.loc 1 767 70 discriminator 2 view .LVU1113
 3516 01f6 C21C     		adds	r2, r0, #3
 3517 01f8 F5E7     		b	.L201
 3518              	.LVL363:
 3519              	.L200:
 769:lvgl/src/core/lv_obj.c ****             }
 3520              		.loc 1 769 21 is_stmt 1 view .LVU1114
 769:lvgl/src/core/lv_obj.c ****             }
 3521              		.loc 1 769 45 is_stmt 0 view .LVU1115
 3522 01fa 2846     		mov	r0, r5
 3523 01fc FFF7FEFF 		bl	lv_obj_get_scroll_x
 3524              	.LVL364:
 769:lvgl/src/core/lv_obj.c ****             }
 3525              		.loc 1 769 45 discriminator 1 view .LVU1116
 3526 0200 84B2     		uxth	r4, r0
 3527              	.LVL365:
 769:lvgl/src/core/lv_obj.c ****             }
 3528              		.loc 1 769 72 discriminator 1 view .LVU1117
 3529 0202 2846     		mov	r0, r5
 3530 0204 FFF7FEFF 		bl	lv_obj_get_width
 3531              	.LVL366:
 769:lvgl/src/core/lv_obj.c ****             }
 3532              		.loc 1 769 70 discriminator 2 view .LVU1118
 3533 0208 0246     		mov	r2, r0
 3534 020a 0028     		cmp	r0, #0
 3535 020c 07DB     		blt	.L225
 3536              	.L202:
 3537 020e 04EBA201 		add	r1, r4, r2, asr #2
 769:lvgl/src/core/lv_obj.c ****             }
 3538              		.loc 1 769 21 discriminator 2 view .LVU1119
 3539 0212 0022     		movs	r2, #0
 3540 0214 09B2     		sxth	r1, r1
 3541 0216 2846     		mov	r0, r5
 3542 0218 FFF7FEFF 		bl	lv_obj_scroll_to_x
 3543              	.LVL367:
 3544 021c 2DE7     		b	.L167
 3545              	.L225:
 769:lvgl/src/core/lv_obj.c ****             }
 3546              		.loc 1 769 70 discriminator 2 view .LVU1120
 3547 021e C21C     		adds	r2, r0, #3
 3548 0220 F5E7     		b	.L202
 3549              	.LVL368:
 3550              	.L192:
 773:lvgl/src/core/lv_obj.c ****                     lv_obj_scroll_to_y(obj, lv_obj_get_scroll_y(obj) - lv_obj_get_height(obj) / 4, 
 3551              		.loc 1 773 17 is_stmt 1 view .LVU1121
 773:lvgl/src/core/lv_obj.c ****                     lv_obj_scroll_to_y(obj, lv_obj_get_scroll_y(obj) - lv_obj_get_height(obj) / 4, 
 3552              		.loc 1 773 23 is_stmt 0 view .LVU1122
 3553 0222 2846     		mov	r0, r5
 3554              	.LVL369:
 773:lvgl/src/core/lv_obj.c ****                     lv_obj_scroll_to_y(obj, lv_obj_get_scroll_y(obj) - lv_obj_get_height(obj) / 4, 
 3555              		.loc 1 773 23 view .LVU1123
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 116


 3556 0224 FFF7FEFF 		bl	lv_obj_get_scroll_dir
 3557              	.LVL370:
 773:lvgl/src/core/lv_obj.c ****                     lv_obj_scroll_to_y(obj, lv_obj_get_scroll_y(obj) - lv_obj_get_height(obj) / 4, 
 3558              		.loc 1 773 19 discriminator 1 view .LVU1124
 3559 0228 10F0030F 		tst	r0, #3
 3560 022c 03D0     		beq	.L203
 773:lvgl/src/core/lv_obj.c ****                     lv_obj_scroll_to_y(obj, lv_obj_get_scroll_y(obj) - lv_obj_get_height(obj) / 4, 
 3561              		.loc 1 773 20 discriminator 1 view .LVU1125
 3562 022e 002F     		cmp	r7, #0
 3563 0230 D8BF     		it	le
 3564 0232 002C     		cmple	r4, #0
 3565 0234 13DC     		bgt	.L204
 3566              	.L203:
 774:lvgl/src/core/lv_obj.c ****                 else
 3567              		.loc 1 774 21 is_stmt 1 view .LVU1126
 774:lvgl/src/core/lv_obj.c ****                 else
 3568              		.loc 1 774 45 is_stmt 0 view .LVU1127
 3569 0236 2846     		mov	r0, r5
 3570 0238 FFF7FEFF 		bl	lv_obj_get_scroll_y
 3571              	.LVL371:
 774:lvgl/src/core/lv_obj.c ****                 else
 3572              		.loc 1 774 45 discriminator 1 view .LVU1128
 3573 023c 84B2     		uxth	r4, r0
 3574              	.LVL372:
 774:lvgl/src/core/lv_obj.c ****                 else
 3575              		.loc 1 774 72 discriminator 1 view .LVU1129
 3576 023e 2846     		mov	r0, r5
 3577 0240 FFF7FEFF 		bl	lv_obj_get_height
 3578              	.LVL373:
 774:lvgl/src/core/lv_obj.c ****                 else
 3579              		.loc 1 774 70 discriminator 2 view .LVU1130
 3580 0244 0246     		mov	r2, r0
 3581 0246 0028     		cmp	r0, #0
 3582 0248 07DB     		blt	.L226
 3583              	.L205:
 3584 024a A4EBA201 		sub	r1, r4, r2, asr #2
 774:lvgl/src/core/lv_obj.c ****                 else
 3585              		.loc 1 774 21 discriminator 2 view .LVU1131
 3586 024e 0022     		movs	r2, #0
 3587 0250 09B2     		sxth	r1, r1
 3588 0252 2846     		mov	r0, r5
 3589 0254 FFF7FEFF 		bl	lv_obj_scroll_to_y
 3590              	.LVL374:
 774:lvgl/src/core/lv_obj.c ****                 else
 3591              		.loc 1 774 21 view .LVU1132
 3592 0258 0FE7     		b	.L167
 3593              	.L226:
 774:lvgl/src/core/lv_obj.c ****                 else
 3594              		.loc 1 774 70 discriminator 2 view .LVU1133
 3595 025a C21C     		adds	r2, r0, #3
 3596 025c F5E7     		b	.L205
 3597              	.LVL375:
 3598              	.L204:
 776:lvgl/src/core/lv_obj.c ****             }
 3599              		.loc 1 776 21 is_stmt 1 view .LVU1134
 776:lvgl/src/core/lv_obj.c ****             }
 3600              		.loc 1 776 45 is_stmt 0 view .LVU1135
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 117


 3601 025e 2846     		mov	r0, r5
 3602 0260 FFF7FEFF 		bl	lv_obj_get_scroll_x
 3603              	.LVL376:
 776:lvgl/src/core/lv_obj.c ****             }
 3604              		.loc 1 776 45 discriminator 1 view .LVU1136
 3605 0264 84B2     		uxth	r4, r0
 3606              	.LVL377:
 776:lvgl/src/core/lv_obj.c ****             }
 3607              		.loc 1 776 72 discriminator 1 view .LVU1137
 3608 0266 2846     		mov	r0, r5
 3609 0268 FFF7FEFF 		bl	lv_obj_get_width
 3610              	.LVL378:
 776:lvgl/src/core/lv_obj.c ****             }
 3611              		.loc 1 776 70 discriminator 2 view .LVU1138
 3612 026c 0246     		mov	r2, r0
 3613 026e 0028     		cmp	r0, #0
 3614 0270 07DB     		blt	.L227
 3615              	.L206:
 3616 0272 A4EBA201 		sub	r1, r4, r2, asr #2
 776:lvgl/src/core/lv_obj.c ****             }
 3617              		.loc 1 776 21 discriminator 2 view .LVU1139
 3618 0276 0022     		movs	r2, #0
 3619 0278 09B2     		sxth	r1, r1
 3620 027a 2846     		mov	r0, r5
 3621 027c FFF7FEFF 		bl	lv_obj_scroll_to_x
 3622              	.LVL379:
 3623 0280 FBE6     		b	.L167
 3624              	.L227:
 776:lvgl/src/core/lv_obj.c ****             }
 3625              		.loc 1 776 70 discriminator 2 view .LVU1140
 3626 0282 C21C     		adds	r2, r0, #3
 3627 0284 F5E7     		b	.L206
 3628              	.LVL380:
 3629              	.L176:
 776:lvgl/src/core/lv_obj.c ****             }
 3630              		.loc 1 776 70 discriminator 2 view .LVU1141
 3631              	.LBE192:
 3632              	.LBB193:
 781:lvgl/src/core/lv_obj.c ****             lv_obj_scroll_to_view_recursive(obj, LV_ANIM_ON);
 3633              		.loc 1 781 9 is_stmt 1 view .LVU1142
 781:lvgl/src/core/lv_obj.c ****             lv_obj_scroll_to_view_recursive(obj, LV_ANIM_ON);
 3634              		.loc 1 781 12 is_stmt 0 view .LVU1143
 3635 0286 4FF48061 		mov	r1, #1024
 3636 028a FFF7FEFF 		bl	lv_obj_has_flag
 3637              	.LVL381:
 781:lvgl/src/core/lv_obj.c ****             lv_obj_scroll_to_view_recursive(obj, LV_ANIM_ON);
 3638              		.loc 1 781 11 discriminator 1 view .LVU1144
 3639 028e B0B9     		cbnz	r0, .L228
 3640              	.L207:
 785:lvgl/src/core/lv_obj.c ****         editing = lv_group_get_editing(lv_obj_get_group(obj));
 3641              		.loc 1 785 9 is_stmt 1 view .LVU1145
 3642              	.LVL382:
 786:lvgl/src/core/lv_obj.c ****         lv_state_t state = LV_STATE_FOCUSED;
 3643              		.loc 1 786 9 view .LVU1146
 786:lvgl/src/core/lv_obj.c ****         lv_state_t state = LV_STATE_FOCUSED;
 3644              		.loc 1 786 40 is_stmt 0 view .LVU1147
 3645 0290 2846     		mov	r0, r5
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 118


 3646 0292 FFF7FEFF 		bl	lv_obj_get_group
 3647              	.LVL383:
 786:lvgl/src/core/lv_obj.c ****         lv_state_t state = LV_STATE_FOCUSED;
 3648              		.loc 1 786 19 discriminator 1 view .LVU1148
 3649 0296 FFF7FEFF 		bl	lv_group_get_editing
 3650              	.LVL384:
 3651 029a 0446     		mov	r4, r0
 3652              	.LVL385:
 787:lvgl/src/core/lv_obj.c **** 
 3653              		.loc 1 787 9 is_stmt 1 view .LVU1149
 792:lvgl/src/core/lv_obj.c ****         if(indev == NULL) indev = lv_event_get_indev(e);
 3654              		.loc 1 792 9 view .LVU1150
 792:lvgl/src/core/lv_obj.c ****         if(indev == NULL) indev = lv_event_get_indev(e);
 3655              		.loc 1 792 30 is_stmt 0 view .LVU1151
 3656 029c FFF7FEFF 		bl	lv_indev_get_act
 3657              	.LVL386:
 793:lvgl/src/core/lv_obj.c **** 
 3658              		.loc 1 793 9 is_stmt 1 view .LVU1152
 793:lvgl/src/core/lv_obj.c **** 
 3659              		.loc 1 793 11 is_stmt 0 view .LVU1153
 3660 02a0 90B1     		cbz	r0, .L229
 3661              	.L208:
 795:lvgl/src/core/lv_obj.c ****         if(indev_type == LV_INDEV_TYPE_KEYPAD || indev_type == LV_INDEV_TYPE_ENCODER) state |= LV_S
 3662              		.loc 1 795 9 is_stmt 1 view .LVU1154
 795:lvgl/src/core/lv_obj.c ****         if(indev_type == LV_INDEV_TYPE_KEYPAD || indev_type == LV_INDEV_TYPE_ENCODER) state |= LV_S
 3663              		.loc 1 795 38 is_stmt 0 view .LVU1155
 3664 02a2 FFF7FEFF 		bl	lv_indev_get_type
 3665              	.LVL387:
 796:lvgl/src/core/lv_obj.c ****         if(editing) {
 3666              		.loc 1 796 9 is_stmt 1 view .LVU1156
 796:lvgl/src/core/lv_obj.c ****         if(editing) {
 3667              		.loc 1 796 11 is_stmt 0 view .LVU1157
 3668 02a6 0428     		cmp	r0, #4
 3669 02a8 18BF     		it	ne
 3670 02aa 0228     		cmpne	r0, #2
 3671 02ac 10D0     		beq	.L216
 787:lvgl/src/core/lv_obj.c **** 
 3672              		.loc 1 787 20 view .LVU1158
 3673 02ae 0221     		movs	r1, #2
 3674              	.L209:
 3675              	.LVL388:
 797:lvgl/src/core/lv_obj.c ****             state |= LV_STATE_EDITED;
 3676              		.loc 1 797 9 is_stmt 1 view .LVU1159
 797:lvgl/src/core/lv_obj.c ****             state |= LV_STATE_EDITED;
 3677              		.loc 1 797 11 is_stmt 0 view .LVU1160
 3678 02b0 84B1     		cbz	r4, .L210
 798:lvgl/src/core/lv_obj.c ****             lv_obj_add_state(obj, state);
 3679              		.loc 1 798 13 is_stmt 1 view .LVU1161
 3680              	.LVL389:
 799:lvgl/src/core/lv_obj.c ****         }
 3681              		.loc 1 799 13 view .LVU1162
 3682 02b2 41F00801 		orr	r1, r1, #8
 3683              	.LVL390:
 799:lvgl/src/core/lv_obj.c ****         }
 3684              		.loc 1 799 13 is_stmt 0 view .LVU1163
 3685 02b6 2846     		mov	r0, r5
 3686              	.LVL391:
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 119


 799:lvgl/src/core/lv_obj.c ****         }
 3687              		.loc 1 799 13 view .LVU1164
 3688 02b8 FFF7FEFF 		bl	lv_obj_add_state
 3689              	.LVL392:
 3690 02bc DDE6     		b	.L167
 3691              	.LVL393:
 3692              	.L228:
 782:lvgl/src/core/lv_obj.c ****         }
 3693              		.loc 1 782 13 is_stmt 1 view .LVU1165
 3694 02be 0121     		movs	r1, #1
 3695 02c0 2846     		mov	r0, r5
 3696 02c2 FFF7FEFF 		bl	lv_obj_scroll_to_view_recursive
 3697              	.LVL394:
 3698 02c6 E3E7     		b	.L207
 3699              	.LVL395:
 3700              	.L229:
 793:lvgl/src/core/lv_obj.c **** 
 3701              		.loc 1 793 27 discriminator 1 view .LVU1166
 793:lvgl/src/core/lv_obj.c **** 
 3702              		.loc 1 793 35 is_stmt 0 discriminator 1 view .LVU1167
 3703 02c8 3046     		mov	r0, r6
 3704              	.LVL396:
 793:lvgl/src/core/lv_obj.c **** 
 3705              		.loc 1 793 35 discriminator 1 view .LVU1168
 3706 02ca FFF7FEFF 		bl	lv_event_get_indev
 3707              	.LVL397:
 793:lvgl/src/core/lv_obj.c **** 
 3708              		.loc 1 793 35 discriminator 1 view .LVU1169
 3709 02ce E8E7     		b	.L208
 3710              	.LVL398:
 3711              	.L216:
 796:lvgl/src/core/lv_obj.c ****         if(editing) {
 3712              		.loc 1 796 93 discriminator 1 view .LVU1170
 3713 02d0 0621     		movs	r1, #6
 3714 02d2 EDE7     		b	.L209
 3715              	.LVL399:
 3716              	.L210:
 802:lvgl/src/core/lv_obj.c ****             lv_obj_clear_state(obj, LV_STATE_EDITED);
 3717              		.loc 1 802 13 is_stmt 1 view .LVU1171
 3718 02d4 2846     		mov	r0, r5
 3719              	.LVL400:
 802:lvgl/src/core/lv_obj.c ****             lv_obj_clear_state(obj, LV_STATE_EDITED);
 3720              		.loc 1 802 13 is_stmt 0 view .LVU1172
 3721 02d6 FFF7FEFF 		bl	lv_obj_add_state
 3722              	.LVL401:
 803:lvgl/src/core/lv_obj.c ****         }
 3723              		.loc 1 803 13 is_stmt 1 view .LVU1173
 3724 02da 0821     		movs	r1, #8
 3725 02dc 2846     		mov	r0, r5
 3726 02de FFF7FEFF 		bl	lv_obj_clear_state
 3727              	.LVL402:
 3728 02e2 CAE6     		b	.L167
 3729              	.LVL403:
 3730              	.L179:
 803:lvgl/src/core/lv_obj.c ****         }
 3731              		.loc 1 803 13 is_stmt 0 view .LVU1174
 3732              	.LBE193:
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 120


 807:lvgl/src/core/lv_obj.c ****     }
 3733              		.loc 1 807 9 is_stmt 1 view .LVU1175
 3734 02e4 4021     		movs	r1, #64
 3735 02e6 FFF7FEFF 		bl	lv_obj_add_state
 3736              	.LVL404:
 807:lvgl/src/core/lv_obj.c ****     }
 3737              		.loc 1 807 9 is_stmt 0 view .LVU1176
 3738 02ea C6E6     		b	.L167
 3739              	.LVL405:
 3740              	.L178:
 810:lvgl/src/core/lv_obj.c ****         if(lv_obj_get_scrollbar_mode(obj) == LV_SCROLLBAR_MODE_ACTIVE) {
 3741              		.loc 1 810 9 is_stmt 1 view .LVU1177
 3742 02ec 4021     		movs	r1, #64
 3743 02ee FFF7FEFF 		bl	lv_obj_clear_state
 3744              	.LVL406:
 811:lvgl/src/core/lv_obj.c ****             lv_area_t hor_area, ver_area;
 3745              		.loc 1 811 9 view .LVU1178
 811:lvgl/src/core/lv_obj.c ****             lv_area_t hor_area, ver_area;
 3746              		.loc 1 811 12 is_stmt 0 view .LVU1179
 3747 02f2 2846     		mov	r0, r5
 3748 02f4 FFF7FEFF 		bl	lv_obj_get_scrollbar_mode
 3749              	.LVL407:
 811:lvgl/src/core/lv_obj.c ****             lv_area_t hor_area, ver_area;
 3750              		.loc 1 811 11 discriminator 1 view .LVU1180
 3751 02f8 0228     		cmp	r0, #2
 3752 02fa 7FF4BEAE 		bne	.L167
 3753              	.LBB194:
 812:lvgl/src/core/lv_obj.c ****             lv_obj_get_scrollbar_area(obj, &hor_area, &ver_area);
 3754              		.loc 1 812 13 is_stmt 1 view .LVU1181
 813:lvgl/src/core/lv_obj.c ****             lv_obj_invalidate_area(obj, &hor_area);
 3755              		.loc 1 813 13 view .LVU1182
 3756 02fe 02AA     		add	r2, sp, #8
 3757 0300 6946     		mov	r1, sp
 3758 0302 2846     		mov	r0, r5
 3759 0304 FFF7FEFF 		bl	lv_obj_get_scrollbar_area
 3760              	.LVL408:
 814:lvgl/src/core/lv_obj.c ****             lv_obj_invalidate_area(obj, &ver_area);
 3761              		.loc 1 814 13 view .LVU1183
 3762 0308 6946     		mov	r1, sp
 3763 030a 2846     		mov	r0, r5
 3764 030c FFF7FEFF 		bl	lv_obj_invalidate_area
 3765              	.LVL409:
 815:lvgl/src/core/lv_obj.c ****         }
 3766              		.loc 1 815 13 view .LVU1184
 3767 0310 02A9     		add	r1, sp, #8
 3768 0312 2846     		mov	r0, r5
 3769 0314 FFF7FEFF 		bl	lv_obj_invalidate_area
 3770              	.LVL410:
 3771 0318 AFE6     		b	.L167
 3772              	.LVL411:
 3773              	.L175:
 815:lvgl/src/core/lv_obj.c ****         }
 3774              		.loc 1 815 13 is_stmt 0 view .LVU1185
 3775              	.LBE194:
 819:lvgl/src/core/lv_obj.c ****     }
 3776              		.loc 1 819 9 is_stmt 1 view .LVU1186
 3777 031a 0E21     		movs	r1, #14
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 121


 3778 031c FFF7FEFF 		bl	lv_obj_clear_state
 3779              	.LVL412:
 819:lvgl/src/core/lv_obj.c ****     }
 3780              		.loc 1 819 9 is_stmt 0 view .LVU1187
 3781 0320 ABE6     		b	.L167
 3782              	.LVL413:
 3783              	.L171:
 3784              	.LBB195:
 822:lvgl/src/core/lv_obj.c ****         uint16_t layout = lv_obj_get_style_layout(obj, LV_PART_MAIN);
 3785              		.loc 1 822 9 is_stmt 1 view .LVU1188
 3786              	.LBB196:
 3787              	.LBI196:
  49:lvgl/src/core/lv_obj_style_gen.h **** {
 3788              		.loc 3 49 26 view .LVU1189
 3789              	.LBB197:
  51:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_align_t)v.num;
 3790              		.loc 3 51 5 view .LVU1190
  51:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_align_t)v.num;
 3791              		.loc 3 51 26 is_stmt 0 view .LVU1191
 3792 0322 41F20902 		movw	r2, #4105
 3793 0326 0021     		movs	r1, #0
 3794 0328 FFF7FEFF 		bl	lv_obj_get_style_prop
 3795              	.LVL414:
  52:lvgl/src/core/lv_obj_style_gen.h **** }
 3796              		.loc 3 52 5 is_stmt 1 view .LVU1192
  52:lvgl/src/core/lv_obj_style_gen.h **** }
 3797              		.loc 3 52 12 is_stmt 0 view .LVU1193
 3798 032c C4B2     		uxtb	r4, r0
 3799              	.LVL415:
  52:lvgl/src/core/lv_obj_style_gen.h **** }
 3800              		.loc 3 52 12 view .LVU1194
 3801              	.LBE197:
 3802              	.LBE196:
 823:lvgl/src/core/lv_obj.c ****         if(layout || align) {
 3803              		.loc 1 823 9 is_stmt 1 view .LVU1195
 3804              	.LBB198:
 3805              	.LBI198:
 534:lvgl/src/core/lv_obj_style_gen.h **** }
 535:lvgl/src/core/lv_obj_style_gen.h **** 
 536:lvgl/src/core/lv_obj_style_gen.h **** static inline uint16_t lv_obj_get_style_layout(const struct _lv_obj_t * obj, uint32_t part)
 3806              		.loc 3 536 24 view .LVU1196
 3807              	.LBB199:
 537:lvgl/src/core/lv_obj_style_gen.h **** {
 538:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LAYOUT);
 3808              		.loc 3 538 5 view .LVU1197
 3809              		.loc 3 538 26 is_stmt 0 view .LVU1198
 3810 032e 41F26902 		movw	r2, #4201
 3811 0332 0021     		movs	r1, #0
 3812 0334 2846     		mov	r0, r5
 3813 0336 FFF7FEFF 		bl	lv_obj_get_style_prop
 3814              	.LVL416:
 539:lvgl/src/core/lv_obj_style_gen.h ****     return (uint16_t)v.num;
 3815              		.loc 3 539 5 is_stmt 1 view .LVU1199
 3816              		.loc 3 539 12 is_stmt 0 view .LVU1200
 3817 033a 80B2     		uxth	r0, r0
 3818              	.LVL417:
 3819              		.loc 3 539 12 view .LVU1201
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 122


 3820              	.LBE199:
 3821              	.LBE198:
 824:lvgl/src/core/lv_obj.c ****             lv_obj_mark_layout_as_dirty(obj);
 3822              		.loc 1 824 9 is_stmt 1 view .LVU1202
 824:lvgl/src/core/lv_obj.c ****             lv_obj_mark_layout_as_dirty(obj);
 3823              		.loc 1 824 11 is_stmt 0 view .LVU1203
 3824 033c 002C     		cmp	r4, #0
 3825 033e 08BF     		it	eq
 3826 0340 0028     		cmpeq	r0, #0
 3827 0342 05D1     		bne	.L230
 3828              	.LVL418:
 3829              	.L211:
 828:lvgl/src/core/lv_obj.c ****         uint32_t child_cnt = lv_obj_get_child_cnt(obj);
 3830              		.loc 1 828 9 is_stmt 1 view .LVU1204
 829:lvgl/src/core/lv_obj.c ****         for(i = 0; i < child_cnt; i++) {
 3831              		.loc 1 829 9 view .LVU1205
 829:lvgl/src/core/lv_obj.c ****         for(i = 0; i < child_cnt; i++) {
 3832              		.loc 1 829 30 is_stmt 0 view .LVU1206
 3833 0344 2846     		mov	r0, r5
 3834 0346 FFF7FEFF 		bl	lv_obj_get_child_cnt
 3835              	.LVL419:
 3836 034a 0646     		mov	r6, r0
 3837              	.LVL420:
 830:lvgl/src/core/lv_obj.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 3838              		.loc 1 830 9 is_stmt 1 view .LVU1207
 830:lvgl/src/core/lv_obj.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 3839              		.loc 1 830 15 is_stmt 0 view .LVU1208
 3840 034c 0024     		movs	r4, #0
 3841              	.LVL421:
 830:lvgl/src/core/lv_obj.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 3842              		.loc 1 830 9 view .LVU1209
 3843 034e 0AE0     		b	.L212
 3844              	.LVL422:
 3845              	.L230:
 825:lvgl/src/core/lv_obj.c ****         }
 3846              		.loc 1 825 13 is_stmt 1 view .LVU1210
 3847 0350 2846     		mov	r0, r5
 3848              	.LVL423:
 825:lvgl/src/core/lv_obj.c ****         }
 3849              		.loc 1 825 13 is_stmt 0 view .LVU1211
 3850 0352 FFF7FEFF 		bl	lv_obj_mark_layout_as_dirty
 3851              	.LVL424:
 3852 0356 F5E7     		b	.L211
 3853              	.LVL425:
 3854              	.L213:
 3855              	.LBB200:
 831:lvgl/src/core/lv_obj.c ****             lv_obj_mark_layout_as_dirty(child);
 3856              		.loc 1 831 13 is_stmt 1 view .LVU1212
 831:lvgl/src/core/lv_obj.c ****             lv_obj_mark_layout_as_dirty(child);
 3857              		.loc 1 831 35 is_stmt 0 view .LVU1213
 3858 0358 AB68     		ldr	r3, [r5, #8]
 831:lvgl/src/core/lv_obj.c ****             lv_obj_mark_layout_as_dirty(child);
 3859              		.loc 1 831 46 view .LVU1214
 3860 035a 1B68     		ldr	r3, [r3]
 3861              	.LVL426:
 832:lvgl/src/core/lv_obj.c ****         }
 3862              		.loc 1 832 13 is_stmt 1 view .LVU1215
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 123


 3863 035c 53F82400 		ldr	r0, [r3, r4, lsl #2]
 3864 0360 FFF7FEFF 		bl	lv_obj_mark_layout_as_dirty
 3865              	.LVL427:
 832:lvgl/src/core/lv_obj.c ****         }
 3866              		.loc 1 832 13 is_stmt 0 view .LVU1216
 3867              	.LBE200:
 830:lvgl/src/core/lv_obj.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 3868              		.loc 1 830 36 is_stmt 1 discriminator 3 view .LVU1217
 3869 0364 0134     		adds	r4, r4, #1
 3870              	.LVL428:
 3871              	.L212:
 830:lvgl/src/core/lv_obj.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 3872              		.loc 1 830 22 discriminator 1 view .LVU1218
 3873 0366 B442     		cmp	r4, r6
 3874 0368 F6D3     		bcc	.L213
 3875 036a 86E6     		b	.L167
 3876              	.LVL429:
 3877              	.L172:
 830:lvgl/src/core/lv_obj.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 3878              		.loc 1 830 22 is_stmt 0 discriminator 1 view .LVU1219
 3879              	.LBE195:
 3880              	.LBB201:
 836:lvgl/src/core/lv_obj.c ****         lv_coord_t h = lv_obj_get_style_height(obj, LV_PART_MAIN);
 3881              		.loc 1 836 9 is_stmt 1 view .LVU1220
 3882              	.LBB202:
 3883              	.LBI202:
   1:lvgl/src/core/lv_obj_style_gen.h **** {
 3884              		.loc 3 1 26 view .LVU1221
 3885              	.LBB203:
   3:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 3886              		.loc 3 3 5 view .LVU1222
   3:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 3887              		.loc 3 3 26 is_stmt 0 view .LVU1223
 3888 036c 41F20102 		movw	r2, #4097
 3889 0370 0021     		movs	r1, #0
 3890 0372 FFF7FEFF 		bl	lv_obj_get_style_prop
 3891              	.LVL430:
   4:lvgl/src/core/lv_obj_style_gen.h **** }
 3892              		.loc 3 4 5 is_stmt 1 view .LVU1224
   4:lvgl/src/core/lv_obj_style_gen.h **** }
 3893              		.loc 3 4 12 is_stmt 0 view .LVU1225
 3894 0376 07B2     		sxth	r7, r0
 3895              	.LVL431:
   4:lvgl/src/core/lv_obj_style_gen.h **** }
 3896              		.loc 3 4 12 view .LVU1226
 3897              	.LBE203:
 3898              	.LBE202:
 837:lvgl/src/core/lv_obj.c ****         lv_coord_t align = lv_obj_get_style_align(obj, LV_PART_MAIN);
 3899              		.loc 1 837 9 is_stmt 1 view .LVU1227
 3900              	.LBB204:
 3901              	.LBI204:
  19:lvgl/src/core/lv_obj_style_gen.h **** {
 3902              		.loc 3 19 26 view .LVU1228
 3903              	.LBB205:
  21:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 3904              		.loc 3 21 5 view .LVU1229
  21:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 124


 3905              		.loc 3 21 26 is_stmt 0 view .LVU1230
 3906 0378 41F20402 		movw	r2, #4100
 3907 037c 0021     		movs	r1, #0
 3908 037e 2846     		mov	r0, r5
 3909 0380 FFF7FEFF 		bl	lv_obj_get_style_prop
 3910              	.LVL432:
  22:lvgl/src/core/lv_obj_style_gen.h **** }
 3911              		.loc 3 22 5 is_stmt 1 view .LVU1231
  22:lvgl/src/core/lv_obj_style_gen.h **** }
 3912              		.loc 3 22 12 is_stmt 0 view .LVU1232
 3913 0384 04B2     		sxth	r4, r0
 3914              	.LVL433:
  22:lvgl/src/core/lv_obj_style_gen.h **** }
 3915              		.loc 3 22 12 view .LVU1233
 3916              	.LBE205:
 3917              	.LBE204:
 838:lvgl/src/core/lv_obj.c ****         uint16_t layout = lv_obj_get_style_layout(obj, LV_PART_MAIN);
 3918              		.loc 1 838 9 is_stmt 1 view .LVU1234
 3919              	.LBB206:
 3920              	.LBI206:
  49:lvgl/src/core/lv_obj_style_gen.h **** {
 3921              		.loc 3 49 26 view .LVU1235
 3922              	.LBB207:
  51:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_align_t)v.num;
 3923              		.loc 3 51 5 view .LVU1236
  51:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_align_t)v.num;
 3924              		.loc 3 51 26 is_stmt 0 view .LVU1237
 3925 0386 41F20902 		movw	r2, #4105
 3926 038a 0021     		movs	r1, #0
 3927 038c 2846     		mov	r0, r5
 3928 038e FFF7FEFF 		bl	lv_obj_get_style_prop
 3929              	.LVL434:
  52:lvgl/src/core/lv_obj_style_gen.h **** }
 3930              		.loc 3 52 5 is_stmt 1 view .LVU1238
  52:lvgl/src/core/lv_obj_style_gen.h **** }
 3931              		.loc 3 52 12 is_stmt 0 view .LVU1239
 3932 0392 C6B2     		uxtb	r6, r0
 3933              	.LVL435:
  52:lvgl/src/core/lv_obj_style_gen.h **** }
 3934              		.loc 3 52 12 view .LVU1240
 3935              	.LBE207:
 3936              	.LBE206:
 839:lvgl/src/core/lv_obj.c ****         if(layout || align || w == LV_SIZE_CONTENT || h == LV_SIZE_CONTENT) {
 3937              		.loc 1 839 9 is_stmt 1 view .LVU1241
 3938              	.LBB208:
 3939              	.LBI208:
 536:lvgl/src/core/lv_obj_style_gen.h **** {
 3940              		.loc 3 536 24 view .LVU1242
 3941              	.LBB209:
 538:lvgl/src/core/lv_obj_style_gen.h ****     return (uint16_t)v.num;
 3942              		.loc 3 538 5 view .LVU1243
 538:lvgl/src/core/lv_obj_style_gen.h ****     return (uint16_t)v.num;
 3943              		.loc 3 538 26 is_stmt 0 view .LVU1244
 3944 0394 41F26902 		movw	r2, #4201
 3945 0398 0021     		movs	r1, #0
 3946 039a 2846     		mov	r0, r5
 3947 039c FFF7FEFF 		bl	lv_obj_get_style_prop
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 125


 3948              	.LVL436:
 3949              		.loc 3 539 5 is_stmt 1 view .LVU1245
 3950              		.loc 3 539 12 is_stmt 0 view .LVU1246
 3951 03a0 80B2     		uxth	r0, r0
 3952              	.LVL437:
 3953              		.loc 3 539 12 view .LVU1247
 3954              	.LBE209:
 3955              	.LBE208:
 840:lvgl/src/core/lv_obj.c ****             lv_obj_mark_layout_as_dirty(obj);
 3956              		.loc 1 840 9 is_stmt 1 view .LVU1248
 840:lvgl/src/core/lv_obj.c ****             lv_obj_mark_layout_as_dirty(obj);
 3957              		.loc 1 840 11 is_stmt 0 view .LVU1249
 3958 03a2 002E     		cmp	r6, #0
 3959 03a4 08BF     		it	eq
 3960 03a6 0028     		cmpeq	r0, #0
 3961 03a8 0AD1     		bne	.L214
 840:lvgl/src/core/lv_obj.c ****             lv_obj_mark_layout_as_dirty(obj);
 3962              		.loc 1 840 33 discriminator 1 view .LVU1250
 3963 03aa 42F2D173 		movw	r3, #10193
 840:lvgl/src/core/lv_obj.c ****             lv_obj_mark_layout_as_dirty(obj);
 3964              		.loc 1 840 57 discriminator 1 view .LVU1251
 3965 03ae 9C42     		cmp	r4, r3
 3966 03b0 14BF     		ite	ne
 3967 03b2 0024     		movne	r4, #0
 3968              	.LVL438:
 840:lvgl/src/core/lv_obj.c ****             lv_obj_mark_layout_as_dirty(obj);
 3969              		.loc 1 840 57 discriminator 1 view .LVU1252
 3970 03b4 0124     		moveq	r4, #1
 840:lvgl/src/core/lv_obj.c ****             lv_obj_mark_layout_as_dirty(obj);
 3971              		.loc 1 840 52 discriminator 1 view .LVU1253
 3972 03b6 9F42     		cmp	r7, r3
 3973 03b8 02D0     		beq	.L214
 3974 03ba 002C     		cmp	r4, #0
 3975 03bc 3FF45DAE 		beq	.L167
 3976              	.L214:
 841:lvgl/src/core/lv_obj.c ****         }
 3977              		.loc 1 841 13 is_stmt 1 view .LVU1254
 3978 03c0 2846     		mov	r0, r5
 3979              	.LVL439:
 841:lvgl/src/core/lv_obj.c ****         }
 3980              		.loc 1 841 13 is_stmt 0 view .LVU1255
 3981 03c2 FFF7FEFF 		bl	lv_obj_mark_layout_as_dirty
 3982              	.LVL440:
 3983 03c6 58E6     		b	.L167
 3984              	.LVL441:
 3985              	.L174:
 841:lvgl/src/core/lv_obj.c ****         }
 3986              		.loc 1 841 13 view .LVU1256
 3987              	.LBE201:
 3988              	.LBB210:
 845:lvgl/src/core/lv_obj.c ****         lv_coord_t d = lv_obj_calculate_ext_draw_size(obj, LV_PART_MAIN);
 3989              		.loc 1 845 9 is_stmt 1 view .LVU1257
 845:lvgl/src/core/lv_obj.c ****         lv_coord_t d = lv_obj_calculate_ext_draw_size(obj, LV_PART_MAIN);
 3990              		.loc 1 845 26 is_stmt 0 view .LVU1258
 3991 03c8 3046     		mov	r0, r6
 3992              	.LVL442:
 845:lvgl/src/core/lv_obj.c ****         lv_coord_t d = lv_obj_calculate_ext_draw_size(obj, LV_PART_MAIN);
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 126


 3993              		.loc 1 845 26 view .LVU1259
 3994 03ca FFF7FEFF 		bl	lv_event_get_param
 3995              	.LVL443:
 3996 03ce 0446     		mov	r4, r0
 3997              	.LVL444:
 846:lvgl/src/core/lv_obj.c ****         *s = LV_MAX(*s, d);
 3998              		.loc 1 846 9 is_stmt 1 view .LVU1260
 846:lvgl/src/core/lv_obj.c ****         *s = LV_MAX(*s, d);
 3999              		.loc 1 846 24 is_stmt 0 view .LVU1261
 4000 03d0 0021     		movs	r1, #0
 4001 03d2 2846     		mov	r0, r5
 4002              	.LVL445:
 846:lvgl/src/core/lv_obj.c ****         *s = LV_MAX(*s, d);
 4003              		.loc 1 846 24 view .LVU1262
 4004 03d4 FFF7FEFF 		bl	lv_obj_calculate_ext_draw_size
 4005              	.LVL446:
 847:lvgl/src/core/lv_obj.c ****     }
 4006              		.loc 1 847 9 is_stmt 1 view .LVU1263
 847:lvgl/src/core/lv_obj.c ****     }
 4007              		.loc 1 847 14 is_stmt 0 view .LVU1264
 4008 03d8 B4F90030 		ldrsh	r3, [r4]
 4009 03dc 8342     		cmp	r3, r0
 4010 03de B8BF     		it	lt
 4011 03e0 0346     		movlt	r3, r0
 847:lvgl/src/core/lv_obj.c ****     }
 4012              		.loc 1 847 12 view .LVU1265
 4013 03e2 2380     		strh	r3, [r4]	@ movhi
 4014              	.LBE210:
 4015 03e4 49E6     		b	.L167
 4016              	.LVL447:
 4017              	.L173:
 850:lvgl/src/core/lv_obj.c ****     }
 4018              		.loc 1 850 9 is_stmt 1 view .LVU1266
 4019 03e6 3046     		mov	r0, r6
 4020              	.LVL448:
 850:lvgl/src/core/lv_obj.c ****     }
 4021              		.loc 1 850 9 is_stmt 0 view .LVU1267
 4022 03e8 FFF7FEFF 		bl	lv_obj_draw
 4023              	.LVL449:
 4024 03ec 45E6     		b	.L167
 4025              		.cfi_endproc
 4026              	.LFE185:
 4028              		.section	.text.lv_obj_destructor,"ax",%progbits
 4029              		.align	1
 4030              		.syntax unified
 4031              		.thumb
 4032              		.thumb_func
 4034              	lv_obj_destructor:
 4035              	.LVL450:
 4036              	.LFB181:
 423:lvgl/src/core/lv_obj.c ****     LV_UNUSED(class_p);
 4037              		.loc 1 423 1 is_stmt 1 view -0
 4038              		.cfi_startproc
 4039              		@ args = 0, pretend = 0, frame = 0
 4040              		@ frame_needed = 0, uses_anonymous_args = 0
 423:lvgl/src/core/lv_obj.c ****     LV_UNUSED(class_p);
 4041              		.loc 1 423 1 is_stmt 0 view .LVU1269
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 127


 4042 0000 10B5     		push	{r4, lr}
 4043              	.LCFI36:
 4044              		.cfi_def_cfa_offset 8
 4045              		.cfi_offset 4, -8
 4046              		.cfi_offset 14, -4
 4047 0002 0C46     		mov	r4, r1
 424:lvgl/src/core/lv_obj.c **** 
 4048              		.loc 1 424 5 is_stmt 1 view .LVU1270
 426:lvgl/src/core/lv_obj.c **** 
 4049              		.loc 1 426 5 view .LVU1271
 4050 0004 0846     		mov	r0, r1
 4051              	.LVL451:
 426:lvgl/src/core/lv_obj.c **** 
 4052              		.loc 1 426 5 is_stmt 0 view .LVU1272
 4053 0006 FFF7FEFF 		bl	_lv_event_mark_deleted
 4054              	.LVL452:
 429:lvgl/src/core/lv_obj.c ****     lv_obj_remove_style_all(obj);
 4055              		.loc 1 429 5 is_stmt 1 view .LVU1273
 4056 000a 0020     		movs	r0, #0
 4057 000c FFF7FEFF 		bl	lv_obj_enable_style_refresh
 4058              	.LVL453:
 430:lvgl/src/core/lv_obj.c ****     lv_obj_enable_style_refresh(true);
 4059              		.loc 1 430 5 view .LVU1274
 4060              	.LBB211:
 4061              	.LBI211:
 4062              		.file 5 "lvgl/src/core/lv_obj_style.h"
   1:lvgl/src/core/lv_obj_style.h **** /**
   2:lvgl/src/core/lv_obj_style.h ****  * @file lv_obj_style.h
   3:lvgl/src/core/lv_obj_style.h ****  *
   4:lvgl/src/core/lv_obj_style.h ****  */
   5:lvgl/src/core/lv_obj_style.h **** 
   6:lvgl/src/core/lv_obj_style.h **** #ifndef LV_OBJ_STYLE_H
   7:lvgl/src/core/lv_obj_style.h **** #define LV_OBJ_STYLE_H
   8:lvgl/src/core/lv_obj_style.h **** 
   9:lvgl/src/core/lv_obj_style.h **** #ifdef __cplusplus
  10:lvgl/src/core/lv_obj_style.h **** extern "C" {
  11:lvgl/src/core/lv_obj_style.h **** #endif
  12:lvgl/src/core/lv_obj_style.h **** 
  13:lvgl/src/core/lv_obj_style.h **** /*********************
  14:lvgl/src/core/lv_obj_style.h ****  *      INCLUDES
  15:lvgl/src/core/lv_obj_style.h ****  *********************/
  16:lvgl/src/core/lv_obj_style.h **** #include <stdint.h>
  17:lvgl/src/core/lv_obj_style.h **** #include <stdbool.h>
  18:lvgl/src/core/lv_obj_style.h **** #include "../misc/lv_bidi.h"
  19:lvgl/src/core/lv_obj_style.h **** 
  20:lvgl/src/core/lv_obj_style.h **** /*********************
  21:lvgl/src/core/lv_obj_style.h ****  *      DEFINES
  22:lvgl/src/core/lv_obj_style.h ****  *********************/
  23:lvgl/src/core/lv_obj_style.h **** 
  24:lvgl/src/core/lv_obj_style.h **** /**********************
  25:lvgl/src/core/lv_obj_style.h ****  *      TYPEDEFS
  26:lvgl/src/core/lv_obj_style.h ****  **********************/
  27:lvgl/src/core/lv_obj_style.h **** /*Can't include lv_obj.h because it includes this header file*/
  28:lvgl/src/core/lv_obj_style.h **** struct _lv_obj_t;
  29:lvgl/src/core/lv_obj_style.h **** 
  30:lvgl/src/core/lv_obj_style.h **** typedef enum {
  31:lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_SAME,           /*The style properties in the 2 states are identical*/
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 128


  32:lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_REDRAW,    /*The differences can be shown with a simple redraw*/
  33:lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_DRAW_PAD,  /*The differences can be shown with a simple redraw*/
  34:lvgl/src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_LAYOUT,    /*The differences can be shown with a simple redraw*/
  35:lvgl/src/core/lv_obj_style.h **** } _lv_style_state_cmp_t;
  36:lvgl/src/core/lv_obj_style.h **** 
  37:lvgl/src/core/lv_obj_style.h **** typedef uint32_t lv_style_selector_t;
  38:lvgl/src/core/lv_obj_style.h **** 
  39:lvgl/src/core/lv_obj_style.h **** typedef struct {
  40:lvgl/src/core/lv_obj_style.h ****     lv_style_t * style;
  41:lvgl/src/core/lv_obj_style.h ****     uint32_t selector : 24;
  42:lvgl/src/core/lv_obj_style.h ****     uint32_t is_local : 1;
  43:lvgl/src/core/lv_obj_style.h ****     uint32_t is_trans : 1;
  44:lvgl/src/core/lv_obj_style.h **** } _lv_obj_style_t;
  45:lvgl/src/core/lv_obj_style.h **** 
  46:lvgl/src/core/lv_obj_style.h **** typedef struct {
  47:lvgl/src/core/lv_obj_style.h ****     uint16_t time;
  48:lvgl/src/core/lv_obj_style.h ****     uint16_t delay;
  49:lvgl/src/core/lv_obj_style.h ****     lv_style_selector_t selector;
  50:lvgl/src/core/lv_obj_style.h ****     lv_style_prop_t prop;
  51:lvgl/src/core/lv_obj_style.h ****     lv_anim_path_cb_t path_cb;
  52:lvgl/src/core/lv_obj_style.h **** #if LV_USE_USER_DATA
  53:lvgl/src/core/lv_obj_style.h ****     void * user_data;
  54:lvgl/src/core/lv_obj_style.h **** #endif
  55:lvgl/src/core/lv_obj_style.h **** } _lv_obj_style_transition_dsc_t;
  56:lvgl/src/core/lv_obj_style.h **** 
  57:lvgl/src/core/lv_obj_style.h **** /**********************
  58:lvgl/src/core/lv_obj_style.h ****  * GLOBAL PROTOTYPES
  59:lvgl/src/core/lv_obj_style.h ****  **********************/
  60:lvgl/src/core/lv_obj_style.h **** 
  61:lvgl/src/core/lv_obj_style.h **** /**
  62:lvgl/src/core/lv_obj_style.h ****  * Initialize the object related style manager module.
  63:lvgl/src/core/lv_obj_style.h ****  * Called by LVGL in `lv_init()`
  64:lvgl/src/core/lv_obj_style.h ****  */
  65:lvgl/src/core/lv_obj_style.h **** void _lv_obj_style_init(void);
  66:lvgl/src/core/lv_obj_style.h **** 
  67:lvgl/src/core/lv_obj_style.h **** /**
  68:lvgl/src/core/lv_obj_style.h ****  * Add a style to an object.
  69:lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
  70:lvgl/src/core/lv_obj_style.h ****  * @param style     pointer to a style to add
  71:lvgl/src/core/lv_obj_style.h ****  * @param selector  OR-ed value of parts and state to which the style should be added
  72:lvgl/src/core/lv_obj_style.h ****  * @example         lv_obj_add_style(btn, &style_btn, 0); //Default button style
  73:lvgl/src/core/lv_obj_style.h ****  * @example         lv_obj_add_style(btn, &btn_red, LV_STATE_PRESSED); //Overwrite only some colors
  74:lvgl/src/core/lv_obj_style.h ****  */
  75:lvgl/src/core/lv_obj_style.h **** void lv_obj_add_style(struct _lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector);
  76:lvgl/src/core/lv_obj_style.h **** 
  77:lvgl/src/core/lv_obj_style.h **** /**
  78:lvgl/src/core/lv_obj_style.h ****  * Add a style to an object.
  79:lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
  80:lvgl/src/core/lv_obj_style.h ****  * @param style     pointer to a style to remove. Can be NULL to check only the selector
  81:lvgl/src/core/lv_obj_style.h ****  * @param selector  OR-ed values of states and a part to remove only styles with matching selectors
  82:lvgl/src/core/lv_obj_style.h ****  * @example lv_obj_remove_style(obj, &style, LV_PART_ANY | LV_STATE_ANY); //Remove a specific style
  83:lvgl/src/core/lv_obj_style.h ****  * @example lv_obj_remove_style(obj, NULL, LV_PART_MAIN | LV_STATE_ANY); //Remove all styles from t
  84:lvgl/src/core/lv_obj_style.h ****  * @example lv_obj_remove_style(obj, NULL, LV_PART_ANY | LV_STATE_ANY); //Remove all styles
  85:lvgl/src/core/lv_obj_style.h ****  */
  86:lvgl/src/core/lv_obj_style.h **** void lv_obj_remove_style(struct _lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector);
  87:lvgl/src/core/lv_obj_style.h **** 
  88:lvgl/src/core/lv_obj_style.h **** /**
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 129


  89:lvgl/src/core/lv_obj_style.h ****  * Remove all styles from an object
  90:lvgl/src/core/lv_obj_style.h ****  * @param obj       pointer to an object
  91:lvgl/src/core/lv_obj_style.h ****  */
  92:lvgl/src/core/lv_obj_style.h **** static inline void lv_obj_remove_style_all(struct _lv_obj_t * obj)
 4063              		.loc 5 92 20 view .LVU1275
 4064              	.LBB212:
  93:lvgl/src/core/lv_obj_style.h **** {
  94:lvgl/src/core/lv_obj_style.h ****     lv_obj_remove_style(obj, NULL, LV_PART_ANY | LV_STATE_ANY);
 4065              		.loc 5 94 5 view .LVU1276
 4066 0010 144A     		ldr	r2, .L237
 4067 0012 0021     		movs	r1, #0
 4068 0014 2046     		mov	r0, r4
 4069 0016 FFF7FEFF 		bl	lv_obj_remove_style
 4070              	.LVL454:
 4071              		.loc 5 94 5 is_stmt 0 view .LVU1277
 4072              	.LBE212:
 4073              	.LBE211:
 431:lvgl/src/core/lv_obj.c **** 
 4074              		.loc 1 431 5 is_stmt 1 view .LVU1278
 4075 001a 0120     		movs	r0, #1
 4076 001c FFF7FEFF 		bl	lv_obj_enable_style_refresh
 4077              	.LVL455:
 434:lvgl/src/core/lv_obj.c **** 
 4078              		.loc 1 434 5 view .LVU1279
 4079 0020 0021     		movs	r1, #0
 4080 0022 2046     		mov	r0, r4
 4081 0024 FFF7FEFF 		bl	lv_anim_del
 4082              	.LVL456:
 437:lvgl/src/core/lv_obj.c ****     if(group) lv_group_remove_obj(obj);
 4083              		.loc 1 437 5 view .LVU1280
 437:lvgl/src/core/lv_obj.c ****     if(group) lv_group_remove_obj(obj);
 4084              		.loc 1 437 26 is_stmt 0 view .LVU1281
 4085 0028 2046     		mov	r0, r4
 4086 002a FFF7FEFF 		bl	lv_obj_get_group
 4087              	.LVL457:
 438:lvgl/src/core/lv_obj.c **** 
 4088              		.loc 1 438 5 is_stmt 1 view .LVU1282
 438:lvgl/src/core/lv_obj.c **** 
 4089              		.loc 1 438 7 is_stmt 0 view .LVU1283
 4090 002e 10B1     		cbz	r0, .L232
 438:lvgl/src/core/lv_obj.c **** 
 4091              		.loc 1 438 15 is_stmt 1 discriminator 1 view .LVU1284
 4092 0030 2046     		mov	r0, r4
 4093              	.LVL458:
 438:lvgl/src/core/lv_obj.c **** 
 4094              		.loc 1 438 15 is_stmt 0 discriminator 1 view .LVU1285
 4095 0032 FFF7FEFF 		bl	lv_group_remove_obj
 4096              	.LVL459:
 4097              	.L232:
 440:lvgl/src/core/lv_obj.c ****         if(obj->spec_attr->children) {
 4098              		.loc 1 440 5 is_stmt 1 view .LVU1286
 440:lvgl/src/core/lv_obj.c ****         if(obj->spec_attr->children) {
 4099              		.loc 1 440 11 is_stmt 0 view .LVU1287
 4100 0036 A368     		ldr	r3, [r4, #8]
 440:lvgl/src/core/lv_obj.c ****         if(obj->spec_attr->children) {
 4101              		.loc 1 440 7 view .LVU1288
 4102 0038 9BB1     		cbz	r3, .L231
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 130


 441:lvgl/src/core/lv_obj.c ****             lv_mem_free(obj->spec_attr->children);
 4103              		.loc 1 441 9 is_stmt 1 view .LVU1289
 441:lvgl/src/core/lv_obj.c ****             lv_mem_free(obj->spec_attr->children);
 4104              		.loc 1 441 26 is_stmt 0 view .LVU1290
 4105 003a 1868     		ldr	r0, [r3]
 441:lvgl/src/core/lv_obj.c ****             lv_mem_free(obj->spec_attr->children);
 4106              		.loc 1 441 11 view .LVU1291
 4107 003c 20B1     		cbz	r0, .L234
 442:lvgl/src/core/lv_obj.c ****             obj->spec_attr->children = NULL;
 4108              		.loc 1 442 13 is_stmt 1 view .LVU1292
 4109 003e FFF7FEFF 		bl	lv_mem_free
 4110              	.LVL460:
 443:lvgl/src/core/lv_obj.c ****         }
 4111              		.loc 1 443 13 view .LVU1293
 443:lvgl/src/core/lv_obj.c ****         }
 4112              		.loc 1 443 16 is_stmt 0 view .LVU1294
 4113 0042 A368     		ldr	r3, [r4, #8]
 443:lvgl/src/core/lv_obj.c ****         }
 4114              		.loc 1 443 38 view .LVU1295
 4115 0044 0022     		movs	r2, #0
 4116 0046 1A60     		str	r2, [r3]
 4117              	.L234:
 445:lvgl/src/core/lv_obj.c ****             lv_mem_free(obj->spec_attr->event_dsc);
 4118              		.loc 1 445 9 is_stmt 1 view .LVU1296
 445:lvgl/src/core/lv_obj.c ****             lv_mem_free(obj->spec_attr->event_dsc);
 4119              		.loc 1 445 15 is_stmt 0 view .LVU1297
 4120 0048 A368     		ldr	r3, [r4, #8]
 445:lvgl/src/core/lv_obj.c ****             lv_mem_free(obj->spec_attr->event_dsc);
 4121              		.loc 1 445 26 view .LVU1298
 4122 004a D868     		ldr	r0, [r3, #12]
 445:lvgl/src/core/lv_obj.c ****             lv_mem_free(obj->spec_attr->event_dsc);
 4123              		.loc 1 445 11 view .LVU1299
 4124 004c 20B1     		cbz	r0, .L235
 446:lvgl/src/core/lv_obj.c ****             obj->spec_attr->event_dsc = NULL;
 4125              		.loc 1 446 13 is_stmt 1 view .LVU1300
 4126 004e FFF7FEFF 		bl	lv_mem_free
 4127              	.LVL461:
 447:lvgl/src/core/lv_obj.c ****         }
 4128              		.loc 1 447 13 view .LVU1301
 447:lvgl/src/core/lv_obj.c ****         }
 4129              		.loc 1 447 16 is_stmt 0 view .LVU1302
 4130 0052 A368     		ldr	r3, [r4, #8]
 447:lvgl/src/core/lv_obj.c ****         }
 4131              		.loc 1 447 39 view .LVU1303
 4132 0054 0022     		movs	r2, #0
 4133 0056 DA60     		str	r2, [r3, #12]
 4134              	.L235:
 450:lvgl/src/core/lv_obj.c ****         obj->spec_attr = NULL;
 4135              		.loc 1 450 9 is_stmt 1 view .LVU1304
 4136 0058 A068     		ldr	r0, [r4, #8]
 4137 005a FFF7FEFF 		bl	lv_mem_free
 4138              	.LVL462:
 451:lvgl/src/core/lv_obj.c ****     }
 4139              		.loc 1 451 9 view .LVU1305
 451:lvgl/src/core/lv_obj.c ****     }
 4140              		.loc 1 451 24 is_stmt 0 view .LVU1306
 4141 005e 0023     		movs	r3, #0
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 131


 4142 0060 A360     		str	r3, [r4, #8]
 4143              	.L231:
 453:lvgl/src/core/lv_obj.c **** 
 4144              		.loc 1 453 1 view .LVU1307
 4145 0062 10BD     		pop	{r4, pc}
 4146              	.LVL463:
 4147              	.L238:
 453:lvgl/src/core/lv_obj.c **** 
 4148              		.loc 1 453 1 view .LVU1308
 4149              		.align	2
 4150              	.L237:
 4151 0064 FFFF0F00 		.word	1048575
 4152              		.cfi_endproc
 4153              	.LFE181:
 4155              		.section	.text.lv_obj_allocate_spec_attr,"ax",%progbits
 4156              		.align	1
 4157              		.global	lv_obj_allocate_spec_attr
 4158              		.syntax unified
 4159              		.thumb
 4160              		.thumb_func
 4162              	lv_obj_allocate_spec_attr:
 4163              	.LVL464:
 4164              	.LFB175:
 331:lvgl/src/core/lv_obj.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 4165              		.loc 1 331 1 is_stmt 1 view -0
 4166              		.cfi_startproc
 4167              		@ args = 0, pretend = 0, frame = 0
 4168              		@ frame_needed = 0, uses_anonymous_args = 0
 332:lvgl/src/core/lv_obj.c **** 
 4169              		.loc 1 332 5 view .LVU1310
 332:lvgl/src/core/lv_obj.c **** 
 4170              		.loc 1 332 5 view .LVU1311
 332:lvgl/src/core/lv_obj.c **** 
 4171              		.loc 1 332 5 view .LVU1312
 334:lvgl/src/core/lv_obj.c ****         static uint32_t x = 0;
 4172              		.loc 1 334 5 view .LVU1313
 334:lvgl/src/core/lv_obj.c ****         static uint32_t x = 0;
 4173              		.loc 1 334 11 is_stmt 0 view .LVU1314
 4174 0000 8368     		ldr	r3, [r0, #8]
 334:lvgl/src/core/lv_obj.c ****         static uint32_t x = 0;
 4175              		.loc 1 334 7 view .LVU1315
 4176 0002 03B1     		cbz	r3, .L247
 4177 0004 7047     		bx	lr
 4178              	.L247:
 331:lvgl/src/core/lv_obj.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 4179              		.loc 1 331 1 view .LVU1316
 4180 0006 10B5     		push	{r4, lr}
 4181              	.LCFI37:
 4182              		.cfi_def_cfa_offset 8
 4183              		.cfi_offset 4, -8
 4184              		.cfi_offset 14, -4
 4185 0008 0446     		mov	r4, r0
 4186              	.LBB213:
 335:lvgl/src/core/lv_obj.c ****         x++;
 4187              		.loc 1 335 9 is_stmt 1 view .LVU1317
 336:lvgl/src/core/lv_obj.c ****         obj->spec_attr = lv_mem_alloc(sizeof(_lv_obj_spec_attr_t));
 4188              		.loc 1 336 9 view .LVU1318
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 132


 336:lvgl/src/core/lv_obj.c ****         obj->spec_attr = lv_mem_alloc(sizeof(_lv_obj_spec_attr_t));
 4189              		.loc 1 336 10 is_stmt 0 view .LVU1319
 4190 000a 0C4A     		ldr	r2, .L248
 4191 000c 1368     		ldr	r3, [r2]
 4192 000e 0133     		adds	r3, r3, #1
 4193 0010 1360     		str	r3, [r2]
 337:lvgl/src/core/lv_obj.c ****         LV_ASSERT_MALLOC(obj->spec_attr);
 4194              		.loc 1 337 9 is_stmt 1 view .LVU1320
 337:lvgl/src/core/lv_obj.c ****         LV_ASSERT_MALLOC(obj->spec_attr);
 4195              		.loc 1 337 26 is_stmt 0 view .LVU1321
 4196 0012 1C20     		movs	r0, #28
 4197              	.LVL465:
 337:lvgl/src/core/lv_obj.c ****         LV_ASSERT_MALLOC(obj->spec_attr);
 4198              		.loc 1 337 26 view .LVU1322
 4199 0014 FFF7FEFF 		bl	lv_mem_alloc
 4200              	.LVL466:
 337:lvgl/src/core/lv_obj.c ****         LV_ASSERT_MALLOC(obj->spec_attr);
 4201              		.loc 1 337 24 discriminator 1 view .LVU1323
 4202 0018 A060     		str	r0, [r4, #8]
 338:lvgl/src/core/lv_obj.c ****         if(obj->spec_attr == NULL) return;
 4203              		.loc 1 338 9 is_stmt 1 view .LVU1324
 338:lvgl/src/core/lv_obj.c ****         if(obj->spec_attr == NULL) return;
 4204              		.loc 1 338 9 view .LVU1325
 4205 001a 68B1     		cbz	r0, .L242
 338:lvgl/src/core/lv_obj.c ****         if(obj->spec_attr == NULL) return;
 4206              		.loc 1 338 9 discriminator 2 view .LVU1326
 338:lvgl/src/core/lv_obj.c ****         if(obj->spec_attr == NULL) return;
 4207              		.loc 1 338 41 discriminator 2 view .LVU1327
 339:lvgl/src/core/lv_obj.c **** 
 4208              		.loc 1 339 9 view .LVU1328
 341:lvgl/src/core/lv_obj.c **** 
 4209              		.loc 1 341 9 view .LVU1329
 4210 001c 1C21     		movs	r1, #28
 4211 001e FFF7FEFF 		bl	lv_memset_00
 4212              	.LVL467:
 343:lvgl/src/core/lv_obj.c ****         obj->spec_attr->scrollbar_mode = LV_SCROLLBAR_MODE_AUTO;
 4213              		.loc 1 343 9 view .LVU1330
 343:lvgl/src/core/lv_obj.c ****         obj->spec_attr->scrollbar_mode = LV_SCROLLBAR_MODE_AUTO;
 4214              		.loc 1 343 12 is_stmt 0 view .LVU1331
 4215 0022 A268     		ldr	r2, [r4, #8]
 343:lvgl/src/core/lv_obj.c ****         obj->spec_attr->scrollbar_mode = LV_SCROLLBAR_MODE_AUTO;
 4216              		.loc 1 343 36 view .LVU1332
 4217 0024 537E     		ldrb	r3, [r2, #25]	@ zero_extendqisi2
 4218 0026 43F00F03 		orr	r3, r3, #15
 4219 002a 5376     		strb	r3, [r2, #25]
 344:lvgl/src/core/lv_obj.c ****     }
 4220              		.loc 1 344 9 is_stmt 1 view .LVU1333
 344:lvgl/src/core/lv_obj.c ****     }
 4221              		.loc 1 344 12 is_stmt 0 view .LVU1334
 4222 002c A268     		ldr	r2, [r4, #8]
 344:lvgl/src/core/lv_obj.c ****     }
 4223              		.loc 1 344 40 view .LVU1335
 4224 002e 137E     		ldrb	r3, [r2, #24]	@ zero_extendqisi2
 4225 0030 43F00303 		orr	r3, r3, #3
 4226 0034 1376     		strb	r3, [r2, #24]
 4227              	.LBE213:
 346:lvgl/src/core/lv_obj.c **** 
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 133


 4228              		.loc 1 346 1 view .LVU1336
 4229 0036 10BD     		pop	{r4, pc}
 4230              	.LVL468:
 4231              	.L242:
 4232              	.LBB214:
 338:lvgl/src/core/lv_obj.c ****         if(obj->spec_attr == NULL) return;
 4233              		.loc 1 338 9 is_stmt 1 discriminator 1 view .LVU1337
 338:lvgl/src/core/lv_obj.c ****         if(obj->spec_attr == NULL) return;
 4234              		.loc 1 338 9 discriminator 1 view .LVU1338
 338:lvgl/src/core/lv_obj.c ****         if(obj->spec_attr == NULL) return;
 4235              		.loc 1 338 9 discriminator 1 view .LVU1339
 338:lvgl/src/core/lv_obj.c ****         if(obj->spec_attr == NULL) return;
 4236              		.loc 1 338 9 discriminator 1 view .LVU1340
 338:lvgl/src/core/lv_obj.c ****         if(obj->spec_attr == NULL) return;
 4237              		.loc 1 338 9 discriminator 1 view .LVU1341
 4238 0038 FEE7     		b	.L242
 4239              	.L249:
 4240 003a 00BF     		.align	2
 4241              	.L248:
 4242 003c 00000000 		.word	x.0
 4243              	.LBE214:
 4244              		.cfi_endproc
 4245              	.LFE175:
 4247              		.section	.text.lv_obj_check_type,"ax",%progbits
 4248              		.align	1
 4249              		.global	lv_obj_check_type
 4250              		.syntax unified
 4251              		.thumb
 4252              		.thumb_func
 4254              	lv_obj_check_type:
 4255              	.LVL469:
 4256              	.LFB176:
 349:lvgl/src/core/lv_obj.c ****     if(obj == NULL) return false;
 4257              		.loc 1 349 1 view -0
 4258              		.cfi_startproc
 4259              		@ args = 0, pretend = 0, frame = 0
 4260              		@ frame_needed = 0, uses_anonymous_args = 0
 4261              		@ link register save eliminated.
 350:lvgl/src/core/lv_obj.c ****     return obj->class_p == class_p ? true : false;
 4262              		.loc 1 350 5 view .LVU1343
 350:lvgl/src/core/lv_obj.c ****     return obj->class_p == class_p ? true : false;
 4263              		.loc 1 350 7 is_stmt 0 view .LVU1344
 4264 0000 28B1     		cbz	r0, .L252
 351:lvgl/src/core/lv_obj.c **** }
 4265              		.loc 1 351 5 is_stmt 1 view .LVU1345
 351:lvgl/src/core/lv_obj.c **** }
 4266              		.loc 1 351 15 is_stmt 0 view .LVU1346
 4267 0002 0068     		ldr	r0, [r0]
 4268              	.LVL470:
 351:lvgl/src/core/lv_obj.c **** }
 4269              		.loc 1 351 43 view .LVU1347
 4270 0004 8842     		cmp	r0, r1
 4271 0006 14BF     		ite	ne
 4272 0008 0020     		movne	r0, #0
 4273 000a 0120     		moveq	r0, #1
 4274 000c 7047     		bx	lr
 4275              	.LVL471:
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 134


 4276              	.L252:
 350:lvgl/src/core/lv_obj.c ****     return obj->class_p == class_p ? true : false;
 4277              		.loc 1 350 28 discriminator 1 view .LVU1348
 4278 000e 0020     		movs	r0, #0
 4279              	.LVL472:
 352:lvgl/src/core/lv_obj.c **** 
 4280              		.loc 1 352 1 view .LVU1349
 4281 0010 7047     		bx	lr
 4282              		.cfi_endproc
 4283              	.LFE176:
 4285              		.section	.text.lv_obj_has_class,"ax",%progbits
 4286              		.align	1
 4287              		.global	lv_obj_has_class
 4288              		.syntax unified
 4289              		.thumb
 4290              		.thumb_func
 4292              	lv_obj_has_class:
 4293              	.LVL473:
 4294              	.LFB177:
 355:lvgl/src/core/lv_obj.c ****     const lv_obj_class_t * obj_class = obj->class_p;
 4295              		.loc 1 355 1 is_stmt 1 view -0
 4296              		.cfi_startproc
 4297              		@ args = 0, pretend = 0, frame = 0
 4298              		@ frame_needed = 0, uses_anonymous_args = 0
 4299              		@ link register save eliminated.
 356:lvgl/src/core/lv_obj.c ****     while(obj_class) {
 4300              		.loc 1 356 5 view .LVU1351
 356:lvgl/src/core/lv_obj.c ****     while(obj_class) {
 4301              		.loc 1 356 28 is_stmt 0 view .LVU1352
 4302 0000 0368     		ldr	r3, [r0]
 4303              	.LVL474:
 357:lvgl/src/core/lv_obj.c ****         if(obj_class == class_p) return true;
 4304              		.loc 1 357 5 is_stmt 1 view .LVU1353
 357:lvgl/src/core/lv_obj.c ****         if(obj_class == class_p) return true;
 4305              		.loc 1 357 10 is_stmt 0 view .LVU1354
 4306 0002 00E0     		b	.L254
 4307              	.L259:
 359:lvgl/src/core/lv_obj.c ****     }
 4308              		.loc 1 359 9 is_stmt 1 view .LVU1355
 359:lvgl/src/core/lv_obj.c ****     }
 4309              		.loc 1 359 19 is_stmt 0 view .LVU1356
 4310 0004 1B68     		ldr	r3, [r3]
 4311              	.LVL475:
 4312              	.L254:
 357:lvgl/src/core/lv_obj.c ****         if(obj_class == class_p) return true;
 4313              		.loc 1 357 11 is_stmt 1 view .LVU1357
 4314 0006 1BB1     		cbz	r3, .L258
 358:lvgl/src/core/lv_obj.c ****         obj_class = obj_class->base_class;
 4315              		.loc 1 358 9 view .LVU1358
 358:lvgl/src/core/lv_obj.c ****         obj_class = obj_class->base_class;
 4316              		.loc 1 358 11 is_stmt 0 view .LVU1359
 4317 0008 8B42     		cmp	r3, r1
 4318 000a FBD1     		bne	.L259
 358:lvgl/src/core/lv_obj.c ****         obj_class = obj_class->base_class;
 4319              		.loc 1 358 41 discriminator 1 view .LVU1360
 4320 000c 0120     		movs	r0, #1
 4321              	.LVL476:
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 135


 363:lvgl/src/core/lv_obj.c **** 
 4322              		.loc 1 363 1 view .LVU1361
 4323 000e 7047     		bx	lr
 4324              	.LVL477:
 4325              	.L258:
 362:lvgl/src/core/lv_obj.c **** }
 4326              		.loc 1 362 12 view .LVU1362
 4327 0010 0020     		movs	r0, #0
 4328              	.LVL478:
 362:lvgl/src/core/lv_obj.c **** }
 4329              		.loc 1 362 12 view .LVU1363
 4330 0012 7047     		bx	lr
 4331              		.cfi_endproc
 4332              	.LFE177:
 4334              		.section	.text.lv_obj_get_class,"ax",%progbits
 4335              		.align	1
 4336              		.global	lv_obj_get_class
 4337              		.syntax unified
 4338              		.thumb
 4339              		.thumb_func
 4341              	lv_obj_get_class:
 4342              	.LVL479:
 4343              	.LFB178:
 366:lvgl/src/core/lv_obj.c ****     return obj->class_p;
 4344              		.loc 1 366 1 is_stmt 1 view -0
 4345              		.cfi_startproc
 4346              		@ args = 0, pretend = 0, frame = 0
 4347              		@ frame_needed = 0, uses_anonymous_args = 0
 4348              		@ link register save eliminated.
 367:lvgl/src/core/lv_obj.c **** }
 4349              		.loc 1 367 5 view .LVU1365
 368:lvgl/src/core/lv_obj.c **** 
 4350              		.loc 1 368 1 is_stmt 0 view .LVU1366
 4351 0000 0068     		ldr	r0, [r0]
 4352              	.LVL480:
 368:lvgl/src/core/lv_obj.c **** 
 4353              		.loc 1 368 1 view .LVU1367
 4354 0002 7047     		bx	lr
 4355              		.cfi_endproc
 4356              	.LFE178:
 4358              		.section	.text.lv_obj_is_valid,"ax",%progbits
 4359              		.align	1
 4360              		.global	lv_obj_is_valid
 4361              		.syntax unified
 4362              		.thumb
 4363              		.thumb_func
 4365              	lv_obj_is_valid:
 4366              	.LVL481:
 4367              	.LFB179:
 371:lvgl/src/core/lv_obj.c ****     lv_disp_t * disp = lv_disp_get_next(NULL);
 4368              		.loc 1 371 1 is_stmt 1 view -0
 4369              		.cfi_startproc
 4370              		@ args = 0, pretend = 0, frame = 0
 4371              		@ frame_needed = 0, uses_anonymous_args = 0
 371:lvgl/src/core/lv_obj.c ****     lv_disp_t * disp = lv_disp_get_next(NULL);
 4372              		.loc 1 371 1 is_stmt 0 view .LVU1369
 4373 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 136


 4374              	.LCFI38:
 4375              		.cfi_def_cfa_offset 16
 4376              		.cfi_offset 4, -16
 4377              		.cfi_offset 5, -12
 4378              		.cfi_offset 6, -8
 4379              		.cfi_offset 14, -4
 4380 0002 0646     		mov	r6, r0
 372:lvgl/src/core/lv_obj.c ****     while(disp) {
 4381              		.loc 1 372 5 is_stmt 1 view .LVU1370
 372:lvgl/src/core/lv_obj.c ****     while(disp) {
 4382              		.loc 1 372 24 is_stmt 0 view .LVU1371
 4383 0004 0020     		movs	r0, #0
 4384              	.LVL482:
 372:lvgl/src/core/lv_obj.c ****     while(disp) {
 4385              		.loc 1 372 24 view .LVU1372
 4386 0006 FFF7FEFF 		bl	lv_disp_get_next
 4387              	.LVL483:
 4388 000a 0546     		mov	r5, r0
 4389              	.LVL484:
 373:lvgl/src/core/lv_obj.c ****         uint32_t i;
 4390              		.loc 1 373 5 is_stmt 1 view .LVU1373
 4391              	.L262:
 373:lvgl/src/core/lv_obj.c ****         uint32_t i;
 4392              		.loc 1 373 11 view .LVU1374
 4393 000c B5B1     		cbz	r5, .L269
 4394              	.LBB215:
 375:lvgl/src/core/lv_obj.c ****             if(disp->screens[i] == obj) return true;
 4395              		.loc 1 375 15 is_stmt 0 view .LVU1375
 4396 000e 0024     		movs	r4, #0
 4397 0010 00E0     		b	.L265
 4398              	.LVL485:
 4399              	.L271:
 375:lvgl/src/core/lv_obj.c ****             if(disp->screens[i] == obj) return true;
 4400              		.loc 1 375 43 is_stmt 1 discriminator 2 view .LVU1376
 4401 0012 0134     		adds	r4, r4, #1
 4402              	.LVL486:
 4403              	.L265:
 375:lvgl/src/core/lv_obj.c ****             if(disp->screens[i] == obj) return true;
 4404              		.loc 1 375 22 discriminator 1 view .LVU1377
 375:lvgl/src/core/lv_obj.c ****             if(disp->screens[i] == obj) return true;
 4405              		.loc 1 375 28 is_stmt 0 discriminator 1 view .LVU1378
 4406 0014 6B6A     		ldr	r3, [r5, #36]
 375:lvgl/src/core/lv_obj.c ****             if(disp->screens[i] == obj) return true;
 4407              		.loc 1 375 22 discriminator 1 view .LVU1379
 4408 0016 A342     		cmp	r3, r4
 4409 0018 0BD9     		bls	.L270
 4410              	.LBB216:
 376:lvgl/src/core/lv_obj.c ****             bool found = obj_valid_child(disp->screens[i], obj);
 4411              		.loc 1 376 13 is_stmt 1 view .LVU1380
 376:lvgl/src/core/lv_obj.c ****             bool found = obj_valid_child(disp->screens[i], obj);
 4412              		.loc 1 376 20 is_stmt 0 view .LVU1381
 4413 001a EB68     		ldr	r3, [r5, #12]
 376:lvgl/src/core/lv_obj.c ****             bool found = obj_valid_child(disp->screens[i], obj);
 4414              		.loc 1 376 29 view .LVU1382
 4415 001c 53F82400 		ldr	r0, [r3, r4, lsl #2]
 376:lvgl/src/core/lv_obj.c ****             bool found = obj_valid_child(disp->screens[i], obj);
 4416              		.loc 1 376 15 view .LVU1383
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 137


 4417 0020 B042     		cmp	r0, r6
 4418 0022 0DD0     		beq	.L266
 377:lvgl/src/core/lv_obj.c ****             if(found) return true;
 4419              		.loc 1 377 13 is_stmt 1 view .LVU1384
 377:lvgl/src/core/lv_obj.c ****             if(found) return true;
 4420              		.loc 1 377 26 is_stmt 0 view .LVU1385
 4421 0024 3146     		mov	r1, r6
 4422 0026 FFF7FEFF 		bl	obj_valid_child
 4423              	.LVL487:
 378:lvgl/src/core/lv_obj.c ****         }
 4424              		.loc 1 378 13 is_stmt 1 view .LVU1386
 378:lvgl/src/core/lv_obj.c ****         }
 4425              		.loc 1 378 15 is_stmt 0 view .LVU1387
 4426 002a 0346     		mov	r3, r0
 4427 002c 0028     		cmp	r0, #0
 4428 002e F0D0     		beq	.L271
 4429 0030 07E0     		b	.L263
 4430              	.LVL488:
 4431              	.L270:
 378:lvgl/src/core/lv_obj.c ****         }
 4432              		.loc 1 378 15 view .LVU1388
 4433              	.LBE216:
 381:lvgl/src/core/lv_obj.c ****     }
 4434              		.loc 1 381 9 is_stmt 1 view .LVU1389
 381:lvgl/src/core/lv_obj.c ****     }
 4435              		.loc 1 381 16 is_stmt 0 view .LVU1390
 4436 0032 2846     		mov	r0, r5
 4437 0034 FFF7FEFF 		bl	lv_disp_get_next
 4438              	.LVL489:
 4439 0038 0546     		mov	r5, r0
 4440              	.LVL490:
 381:lvgl/src/core/lv_obj.c ****     }
 4441              		.loc 1 381 16 view .LVU1391
 4442 003a E7E7     		b	.L262
 4443              	.LVL491:
 4444              	.L269:
 381:lvgl/src/core/lv_obj.c ****     }
 4445              		.loc 1 381 16 view .LVU1392
 4446              	.LBE215:
 384:lvgl/src/core/lv_obj.c **** }
 4447              		.loc 1 384 12 view .LVU1393
 4448 003c 0023     		movs	r3, #0
 4449 003e 00E0     		b	.L263
 4450              	.LVL492:
 4451              	.L266:
 4452              	.LBB218:
 4453              	.LBB217:
 376:lvgl/src/core/lv_obj.c ****             bool found = obj_valid_child(disp->screens[i], obj);
 4454              		.loc 1 376 48 discriminator 1 view .LVU1394
 4455 0040 0123     		movs	r3, #1
 4456              	.LVL493:
 4457              	.L263:
 376:lvgl/src/core/lv_obj.c ****             bool found = obj_valid_child(disp->screens[i], obj);
 4458              		.loc 1 376 48 discriminator 1 view .LVU1395
 4459              	.LBE217:
 4460              	.LBE218:
 385:lvgl/src/core/lv_obj.c **** 
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 138


 4461              		.loc 1 385 1 view .LVU1396
 4462 0042 1846     		mov	r0, r3
 4463 0044 70BD     		pop	{r4, r5, r6, pc}
 385:lvgl/src/core/lv_obj.c **** 
 4464              		.loc 1 385 1 view .LVU1397
 4465              		.cfi_endproc
 4466              	.LFE179:
 4468              		.section	.bss.x.0,"aw",%nobits
 4469              		.align	2
 4472              	x.0:
 4473 0000 00000000 		.space	4
 4474              		.global	lv_obj_class
 4475              		.section	.rodata.lv_obj_class,"a"
 4476              		.align	2
 4479              	lv_obj_class:
 4480 0000 00000000 		.word	0
 4481 0004 00000000 		.word	lv_obj_constructor
 4482 0008 00000000 		.word	lv_obj_destructor
 4483 000c 00000000 		.space	4
 4484 0010 00000000 		.word	lv_obj_event
 4485 0014 8200     		.short	130
 4486 0016 8200     		.short	130
 4487 0018 4A       		.byte	74
 4488 0019 02       		.byte	2
 4489 001a 00       		.byte	0
 4490 001b 00       		.space	1
 4491              		.section	.bss.lv_initialized,"aw",%nobits
 4494              	lv_initialized:
 4495 0000 00       		.space	1
 4496              		.text
 4497              	.Letext0:
 4498              		.file 6 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 4499              		.file 7 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 4500              		.file 8 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/lib/gcc/arm-none
 4501              		.file 9 "lvgl/src/core/../misc/../font/lv_font.h"
 4502              		.file 10 "lvgl/src/core/../misc/lv_types.h"
 4503              		.file 11 "lvgl/src/core/../misc/lv_log.h"
 4504              		.file 12 "lvgl/src/core/../misc/lv_color.h"
 4505              		.file 13 "lvgl/src/core/../misc/lv_anim.h"
 4506              		.file 14 "lvgl/src/core/../misc/lv_txt.h"
 4507              		.file 15 "lvgl/src/core/../misc/lv_bidi.h"
 4508              		.file 16 "lvgl/src/core/../hal/../draw/lv_img_buf.h"
 4509              		.file 17 "lvgl/src/core/lv_obj.h"
 4510              		.file 18 "lvgl/src/core/../hal/../draw/lv_draw_rect.h"
 4511              		.file 19 "lvgl/src/core/../hal/../draw/lv_draw_label.h"
 4512              		.file 20 "lvgl/src/core/../hal/../draw/lv_draw_img.h"
 4513              		.file 21 "lvgl/src/core/../hal/../draw/lv_draw_line.h"
 4514              		.file 22 "lvgl/src/core/../hal/../draw/lv_draw_arc.h"
 4515              		.file 23 "lvgl/src/core/../hal/../draw/lv_draw_mask.h"
 4516              		.file 24 "lvgl/src/core/../hal/../draw/lv_draw.h"
 4517              		.file 25 "lvgl/src/core/../hal/../misc/lv_ll.h"
 4518              		.file 26 "lvgl/src/core/../hal/../misc/lv_timer.h"
 4519              		.file 27 "lvgl/src/core/../hal/lv_hal_disp.h"
 4520              		.file 28 "lvgl/src/core/lv_theme.h"
 4521              		.file 29 "lvgl/src/core/../hal/lv_hal_indev.h"
 4522              		.file 30 "lvgl/src/core/lv_group.h"
 4523              		.file 31 "lvgl/src/core/lv_obj_scroll.h"
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 139


 4524              		.file 32 "lvgl/src/core/lv_obj_draw.h"
 4525              		.file 33 "lvgl/src/core/lv_obj_class.h"
 4526              		.file 34 "lvgl/src/core/lv_event.h"
 4527              		.file 35 "lvgl/src/core/../misc/lv_gc.h"
 4528              		.file 36 "lvgl/src/core/../misc/lv_mem.h"
 4529              		.file 37 "lvgl/src/core/lv_obj_tree.h"
 4530              		.file 38 "lvgl/src/core/../hal/../draw/sw/../../core/lv_obj_pos.h"
 4531              		.file 39 "lvgl/src/core/../extra/lv_extra.h"
 4532              		.file 40 "lvgl/src/core/../hal/../draw/lv_img_decoder.h"
 4533              		.file 41 "lvgl/src/core/lv_refr.h"
 4534              		.file 42 "lvgl/src/core/../hal/../draw/../misc/lv_fs.h"
 4535              		.file 43 "lvgl/src/core/lv_indev.h"
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 140


DEFINED SYMBOLS
                            *ABS*:00000000 lv_obj.c
C:\usertemp\ccIlwJXO.s:20     .text.lv_style_get_prop_inlined:00000000 $t
C:\usertemp\ccIlwJXO.s:25     .text.lv_style_get_prop_inlined:00000000 lv_style_get_prop_inlined
C:\usertemp\ccIlwJXO.s:201    .text.obj_valid_child:00000000 $t
C:\usertemp\ccIlwJXO.s:206    .text.obj_valid_child:00000000 obj_valid_child
C:\usertemp\ccIlwJXO.s:302    .text.scrollbar_init_draw_dsc:00000000 $t
C:\usertemp\ccIlwJXO.s:307    .text.scrollbar_init_draw_dsc:00000000 scrollbar_init_draw_dsc
C:\usertemp\ccIlwJXO.s:647    .text.draw_scrollbar:00000000 $t
C:\usertemp\ccIlwJXO.s:652    .text.draw_scrollbar:00000000 draw_scrollbar
C:\usertemp\ccIlwJXO.s:812    .text.draw_scrollbar:000000a8 $d
C:\usertemp\ccIlwJXO.s:4479   .rodata.lv_obj_class:00000000 lv_obj_class
C:\usertemp\ccIlwJXO.s:817    .text.lv_obj_draw:00000000 $t
C:\usertemp\ccIlwJXO.s:822    .text.lv_obj_draw:00000000 lv_obj_draw
C:\usertemp\ccIlwJXO.s:1685   .text.lv_obj_draw:0000034c $d
C:\usertemp\ccIlwJXO.s:1692   .text.lv_obj_constructor:00000000 $t
C:\usertemp\ccIlwJXO.s:1697   .text.lv_obj_constructor:00000000 lv_obj_constructor
C:\usertemp\ccIlwJXO.s:1875   .text.lv_obj_set_state:00000000 $t
C:\usertemp\ccIlwJXO.s:1880   .text.lv_obj_set_state:00000000 lv_obj_set_state
C:\usertemp\ccIlwJXO.s:2314   .text.lv_is_initialized:00000000 $t
C:\usertemp\ccIlwJXO.s:2320   .text.lv_is_initialized:00000000 lv_is_initialized
C:\usertemp\ccIlwJXO.s:2335   .text.lv_is_initialized:00000008 $d
C:\usertemp\ccIlwJXO.s:4494   .bss.lv_initialized:00000000 lv_initialized
C:\usertemp\ccIlwJXO.s:2340   .text.lv_init:00000000 $t
C:\usertemp\ccIlwJXO.s:2346   .text.lv_init:00000000 lv_init
C:\usertemp\ccIlwJXO.s:2437   .text.lv_init:0000004c $d
C:\usertemp\ccIlwJXO.s:2444   .text.lv_deinit:00000000 $t
C:\usertemp\ccIlwJXO.s:2450   .text.lv_deinit:00000000 lv_deinit
C:\usertemp\ccIlwJXO.s:2487   .text.lv_deinit:0000001c $d
C:\usertemp\ccIlwJXO.s:2492   .text.lv_obj_create:00000000 $t
C:\usertemp\ccIlwJXO.s:2498   .text.lv_obj_create:00000000 lv_obj_create
C:\usertemp\ccIlwJXO.s:2537   .text.lv_obj_create:00000014 $d
C:\usertemp\ccIlwJXO.s:2542   .text.lv_obj_add_flag:00000000 $t
C:\usertemp\ccIlwJXO.s:2548   .text.lv_obj_add_flag:00000000 lv_obj_add_flag
C:\usertemp\ccIlwJXO.s:2671   .text.lv_obj_clear_flag:00000000 $t
C:\usertemp\ccIlwJXO.s:2677   .text.lv_obj_clear_flag:00000000 lv_obj_clear_flag
C:\usertemp\ccIlwJXO.s:2804   .text.lv_obj_add_state:00000000 $t
C:\usertemp\ccIlwJXO.s:2810   .text.lv_obj_add_state:00000000 lv_obj_add_state
C:\usertemp\ccIlwJXO.s:2854   .text.lv_obj_clear_state:00000000 $t
C:\usertemp\ccIlwJXO.s:2860   .text.lv_obj_clear_state:00000000 lv_obj_clear_state
C:\usertemp\ccIlwJXO.s:2904   .text.lv_obj_has_flag:00000000 $t
C:\usertemp\ccIlwJXO.s:2910   .text.lv_obj_has_flag:00000000 lv_obj_has_flag
C:\usertemp\ccIlwJXO.s:2938   .text.lv_obj_has_flag_any:00000000 $t
C:\usertemp\ccIlwJXO.s:2944   .text.lv_obj_has_flag_any:00000000 lv_obj_has_flag_any
C:\usertemp\ccIlwJXO.s:2971   .text.lv_obj_get_state:00000000 $t
C:\usertemp\ccIlwJXO.s:2977   .text.lv_obj_get_state:00000000 lv_obj_get_state
C:\usertemp\ccIlwJXO.s:2998   .text.lv_obj_has_state:00000000 $t
C:\usertemp\ccIlwJXO.s:3004   .text.lv_obj_has_state:00000000 lv_obj_has_state
C:\usertemp\ccIlwJXO.s:3031   .text.lv_obj_get_group:00000000 $t
C:\usertemp\ccIlwJXO.s:3037   .text.lv_obj_get_group:00000000 lv_obj_get_group
C:\usertemp\ccIlwJXO.s:3064   .text.lv_obj_event:00000000 $t
C:\usertemp\ccIlwJXO.s:3069   .text.lv_obj_event:00000000 lv_obj_event
C:\usertemp\ccIlwJXO.s:3113   .text.lv_obj_event:00000020 $d
C:\usertemp\ccIlwJXO.s:3155   .text.lv_obj_event:00000074 $t
C:\usertemp\ccIlwJXO.s:3341   .text.lv_obj_event:00000130 $d
C:\usertemp\ccIlwJXO.s:3346   .text.lv_obj_event:00000134 $t
C:\usertemp\ccIlwJXO.s:3365   .text.lv_obj_event:00000148 $d
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 141


C:\usertemp\ccIlwJXO.s:3369   .text.lv_obj_event:0000014c $t
C:\usertemp\ccIlwJXO.s:4029   .text.lv_obj_destructor:00000000 $t
C:\usertemp\ccIlwJXO.s:4034   .text.lv_obj_destructor:00000000 lv_obj_destructor
C:\usertemp\ccIlwJXO.s:4151   .text.lv_obj_destructor:00000064 $d
C:\usertemp\ccIlwJXO.s:4156   .text.lv_obj_allocate_spec_attr:00000000 $t
C:\usertemp\ccIlwJXO.s:4162   .text.lv_obj_allocate_spec_attr:00000000 lv_obj_allocate_spec_attr
C:\usertemp\ccIlwJXO.s:4242   .text.lv_obj_allocate_spec_attr:0000003c $d
C:\usertemp\ccIlwJXO.s:4472   .bss.x.0:00000000 x.0
C:\usertemp\ccIlwJXO.s:4248   .text.lv_obj_check_type:00000000 $t
C:\usertemp\ccIlwJXO.s:4254   .text.lv_obj_check_type:00000000 lv_obj_check_type
C:\usertemp\ccIlwJXO.s:4286   .text.lv_obj_has_class:00000000 $t
C:\usertemp\ccIlwJXO.s:4292   .text.lv_obj_has_class:00000000 lv_obj_has_class
C:\usertemp\ccIlwJXO.s:4335   .text.lv_obj_get_class:00000000 $t
C:\usertemp\ccIlwJXO.s:4341   .text.lv_obj_get_class:00000000 lv_obj_get_class
C:\usertemp\ccIlwJXO.s:4359   .text.lv_obj_is_valid:00000000 $t
C:\usertemp\ccIlwJXO.s:4365   .text.lv_obj_is_valid:00000000 lv_obj_is_valid
C:\usertemp\ccIlwJXO.s:4469   .bss.x.0:00000000 $d
C:\usertemp\ccIlwJXO.s:4476   .rodata.lv_obj_class:00000000 $d
C:\usertemp\ccIlwJXO.s:4495   .bss.lv_initialized:00000000 $d

UNDEFINED SYMBOLS
lv_draw_rect_dsc_init
lv_obj_get_style_prop
lv_obj_get_scrollbar_area
lv_area_get_size
lv_obj_draw_dsc_init
lv_event_send
lv_draw_rect
lv_event_get_code
lv_event_get_target
lv_event_get_param
_lv_area_is_in
lv_event_get_draw_ctx
lv_obj_init_draw_rect_dsc
lv_mem_buf_get
lv_draw_mask_radius_init
lv_draw_mask_add
lv_draw_mask_remove_custom
lv_draw_mask_free_param
lv_mem_buf_release
lv_obj_get_scroll_left
lv_obj_get_scroll_top
_lv_obj_style_state_compare
lv_memset_00
lv_obj_style_get_selector_state
lv_obj_style_get_selector_part
_lv_obj_style_create_transition
lv_obj_invalidate
lv_obj_refresh_ext_draw_size
lv_obj_refresh_style
lv_mem_init
_lv_timer_core_init
_lv_fs_init
_lv_anim_core_init
_lv_group_init
lv_draw_init
_lv_obj_style_init
ARM GAS  C:\usertemp\ccIlwJXO.s 			page 142


_lv_ll_init
_lv_refr_init
_lv_img_decoder_init
lv_extra_init
_lv_disp_ll
_lv_indev_ll
_lv_gc_clear_roots
lv_disp_set_default
lv_mem_deinit
lv_log_register_print_cb
lv_obj_class_create_obj
lv_obj_class_init_obj
lv_obj_is_layout_positioned
lv_obj_get_parent
lv_obj_mark_layout_as_dirty
lv_obj_invalidate_area
lv_event_get_current_target
lv_indev_get_scroll_obj
lv_obj_get_child_cnt
lv_obj_is_editable
lv_obj_get_scroll_right
lv_obj_get_scroll_y
lv_obj_get_height
lv_obj_scroll_to_y
lv_obj_get_scroll_dir
lv_obj_get_scroll_x
lv_obj_get_width
lv_obj_scroll_to_x
lv_group_get_editing
lv_indev_get_act
lv_indev_get_type
lv_obj_scroll_to_view_recursive
lv_event_get_indev
lv_obj_get_scrollbar_mode
lv_obj_calculate_ext_draw_size
_lv_event_mark_deleted
lv_obj_enable_style_refresh
lv_obj_remove_style
lv_anim_del
lv_group_remove_obj
lv_mem_free
lv_mem_alloc
lv_disp_get_next
