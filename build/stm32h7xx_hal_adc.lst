ARM GAS  C:\usertemp\cca0PO6L.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"stm32h7xx_hal_adc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c"
  19              		.section	.text.LL_ADC_REG_SetSequencerRanks,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	LL_ADC_REG_SetSequencerRanks:
  26              	.LVL0:
  27              	.LFB176:
  28              		.file 2 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h"
   1:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
   2:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @file    stm32h7xx_ll_adc.h
   4:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @attention
   8:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
   9:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * Copyright (c) 2017 STMicroelectronics.
  10:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * All rights reserved.
  11:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
  12:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * in the root directory of this software component.
  14:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
  16:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ******************************************************************************
  17:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
  18:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  19:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #ifndef STM32H7xx_LL_ADC_H
  21:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define STM32H7xx_LL_ADC_H
  22:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  23:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #ifdef __cplusplus
  24:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** extern "C" {
  25:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
  26:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  27:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  28:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #include "stm32h7xx.h"
  29:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  30:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @addtogroup STM32H7xx_LL_Driver
ARM GAS  C:\usertemp\cca0PO6L.s 			page 2


  31:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
  32:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
  33:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  34:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined (ADC1) || defined (ADC2) || defined (ADC3)
  35:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  36:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  37:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
  38:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
  39:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  40:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  41:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  42:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  43:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  45:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
  46:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
  47:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  48:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC calibration:                                         */
  49:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal register offset for ADC calibration factors configuration */
  50:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  51:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literals LL_ADC_CALIB_OFFSET, LL_ADC_CALIB_LINEARITY, ...   */
  52:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* the relevant bits for:                                                     */
  53:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (concatenation of multiple bits used in different registers)               */
  54:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - ADC calibration configuration: configuration before calibration start    */
  55:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - ADC calibration factors: register offset                                 */
  56:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CALIB_FACTOR_OFFSET_REGOFFSET    (0x00000000UL) /* Register CALFACT defined as referenc
  57:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CALIB_FACTOR_LINEARITY_REGOFFSET (0x00000001UL) /* Register CALFACT2 offset vs register
  58:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CALIB_FACTOR_REGOFFSET_MASK      (ADC_CALIB_FACTOR_OFFSET_REGOFFSET | ADC_CALIB_FACTOR_
  59:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CALIB_MODE_MASK                  (ADC_CR_ADCALLIN)
  60:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CALIB_MODE_BINARY_MASK           (ADC_CALIB_FACTOR_REGOFFSET_MASK) /* Mask to get binar
  61:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  62:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  63:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  64:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  65:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - sequencer register offset                                                */
  66:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  67:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  68:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal register offset for ADC group regular sequencer configuration */
  69:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  70:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SQR1_REGOFFSET                 (0x00000000UL)
  71:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SQR2_REGOFFSET                 (0x00000100UL)
  72:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SQR3_REGOFFSET                 (0x00000200UL)
  73:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SQR4_REGOFFSET                 (0x00000300UL)
  74:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  75:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_SQRX_REGOFFSET_MASK        (ADC_SQR1_REGOFFSET | ADC_SQR2_REGOFFSET | ADC_SQR3_REGO
  76:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SQRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_SQRx_REGOFFSET in ADC_REG_
  77:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  78:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  79:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  80:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  81:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_SQR1_SQ1" po
  82:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_SQR1_SQ2" po
  83:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  (18UL) /* Value equivalent to bitfield "ADC_SQR1_SQ3" po
  84:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_SQR1_SQ4" po
  85:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  ( 0UL) /* Value equivalent to bitfield "ADC_SQR2_SQ5" po
  86:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_SQR2_SQ6" po
  87:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_SQR2_SQ7" po
ARM GAS  C:\usertemp\cca0PO6L.s 			page 3


  88:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (18UL) /* Value equivalent to bitfield "ADC_SQR2_SQ8" po
  89:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_9_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_SQR2_SQ9" po
  90:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_10_SQRX_BITOFFSET_POS ( 0UL) /* Value equivalent to bitfield "ADC_SQR3_SQ10" p
  91:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_11_SQRX_BITOFFSET_POS ( 6UL) /* Value equivalent to bitfield "ADC_SQR3_SQ11" p
  92:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_12_SQRX_BITOFFSET_POS (12UL) /* Value equivalent to bitfield "ADC_SQR3_SQ12" p
  93:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_13_SQRX_BITOFFSET_POS (18UL) /* Value equivalent to bitfield "ADC_SQR3_SQ13" p
  94:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_14_SQRX_BITOFFSET_POS (24UL) /* Value equivalent to bitfield "ADC_SQR3_SQ14" p
  95:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_15_SQRX_BITOFFSET_POS ( 0UL) /* Value equivalent to bitfield "ADC_SQR4_SQ15" p
  96:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_RANK_16_SQRX_BITOFFSET_POS ( 6UL) /* Value equivalent to bitfield "ADC_SQR4_SQ16" p
  97:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  98:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
  99:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 100:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC group injected sequencer:                            */
 101:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_RANK_x the relevant bits for:            */
 102:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - data register offset                                                     */
 103:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
 104:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 105:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal register offset for ADC group injected data register */
 106:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 107:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_JDR1_REGOFFSET                 (0x00000000UL)
 108:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_JDR2_REGOFFSET                 (0x00000100UL)
 109:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_JDR3_REGOFFSET                 (0x00000200UL)
 110:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_JDR4_REGOFFSET                 (0x00000300UL)
 111:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 112:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_JDRX_REGOFFSET_MASK        (ADC_JDR1_REGOFFSET | ADC_JDR2_REGOFFSET | ADC_JDR3_REGO
 113:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_RANK_ID_JSQR_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
 114:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_JDRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_JDRx_REGOFFSET in ADC_INJ_
 115:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 116:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Definition of ADC group injected sequencer bits information to be inserted */
 117:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* into ADC group injected sequencer ranks literals definition.               */
 118:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_RANK_1_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ1_Pos)
 119:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_RANK_2_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ2_Pos)
 120:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_RANK_3_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ3_Pos)
 121:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_RANK_4_JSQR_BITOFFSET_POS  (ADC_JSQR_JSQ4_Pos)
 122:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 123:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 124:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 125:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
 126:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
 127:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - regular trigger source                                                   */
 128:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - regular trigger edge                                                     */
 129:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT       (ADC_CFGR_EXTEN_0) /* Trigger edge set to rising edge (
 130:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 131:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 132:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 133:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 134:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK            (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTSEL) << (4U *
 135:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 136:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 137:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 138:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 139:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 140:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 141:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 142:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK              (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN) << (4U * 
 143:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 144:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 4


 145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 146:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 147:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
 148:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_CFGR_EXTSEL"
 149:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (10UL) /* Value equivalent to bitfield "ADC_CFGR_EXTEN" 
 150:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 151:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 152:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 153:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC group injected trigger:                              */
 154:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_TRIG_x the relevant bits for:            */
 155:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - injected trigger source                                                  */
 156:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - injected trigger edge                                                    */
 157:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_TRIG_EXT_EDGE_DEFAULT      (ADC_JSQR_JEXTEN_0) /* Trigger edge set to rising edge (
 158:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 159:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 160:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 161:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 162:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_TRIG_SOURCE_MASK            (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTSEL) << (4U 
 163:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                             ((ADC_JSQR_JEXTSEL)                             << (4U 
 164:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                             ((ADC_JSQR_JEXTSEL)                             << (4U 
 165:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                             ((ADC_JSQR_JEXTSEL)                             << (4U 
 166:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 167:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 168:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 169:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 170:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_TRIG_EDGE_MASK              (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN) << (4U *
 171:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 172:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 173:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 174:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 175:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Definition of ADC group injected trigger bits information.                 */
 176:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTSEL_BITOFFSET_POS  ( 2UL) /* Value equivalent to bitfield "ADC_JSQR_JEXTSEL
 177:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTEN_BITOFFSET_POS   ( 6UL) /* Value equivalent to bitfield "ADC_JSQR_JEXTEN"
 178:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 179:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 180:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 181:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 182:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 183:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 184:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
 185:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
 186:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - channel identifier defined by number                                     */
 187:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
 188:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 189:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 190:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - channel sampling time defined by SMPRx register offset                   */
 191:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*   and SMPx bits positions into SMPRx register                              */
 192:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR_AWD1CH)
 193:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_AWD2CR_AWD2CH)
 194:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (26UL)/* Value equivalent to bitfield "ADC_CHANNEL_ID_N
 195:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
 196:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 197:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (ADC_SQR2_SQ5) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 198:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 199:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 200:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 201:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH)
ARM GAS  C:\usertemp\cca0PO6L.s 			page 5


 202:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 203:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal register offset for ADC channel sampling time configuration */
 204:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 205:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SMPR1_REGOFFSET                (0x00000000UL)
 206:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SMPR2_REGOFFSET                (0x02000000UL)
 207:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_SMPRX_REGOFFSET_MASK   (ADC_SMPR1_REGOFFSET | ADC_SMPR2_REGOFFSET)
 208:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SMPRX_REGOFFSET_POS            (25UL) /* Position of bits ADC_SMPRx_REGOFFSET in ADC_CH
 209:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 210:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_MASK    (0x01F00000UL)
 211:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_POS     (20UL)           /* Value equivalent to bitfield "ADC_CH
 212:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 213:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 214:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* channels literals definition.                                              */
 215:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 216:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (                                                       
 217:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (                                                       
 218:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (                                                       
 219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (                                        ADC_CFGR_AWD1CH
 220:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (                                        ADC_CFGR_AWD1CH
 221:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (                                        ADC_CFGR_AWD1CH
 222:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (                                        ADC_CFGR_AWD1CH
 223:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (                    ADC_CFGR_AWD1CH_3                  
 224:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (                    ADC_CFGR_AWD1CH_3                  
 225:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (                    ADC_CFGR_AWD1CH_3                  
 226:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (                    ADC_CFGR_AWD1CH_3                  
 227:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 228:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 229:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 230:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (                    ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH
 231:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR_AWD1CH_4                                      
 232:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR_AWD1CH_4                                      
 233:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR_AWD1CH_4                                      
 234:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_19_NUMBER              (ADC_CFGR_AWD1CH_4                                      
 235:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 236:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 237:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* channels literals definition.                                              */
 238:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_AWD2CR_AWD2CH_0)
 239:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_AWD2CR_AWD2CH_1)
 240:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_AWD2CR_AWD2CH_2)
 241:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_AWD2CR_AWD2CH_3)
 242:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_AWD2CR_AWD2CH_4)
 243:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_AWD2CR_AWD2CH_5)
 244:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_AWD2CR_AWD2CH_6)
 245:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_AWD2CR_AWD2CH_7)
 246:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_AWD2CR_AWD2CH_8)
 247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_AWD2CR_AWD2CH_9)
 248:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_AWD2CR_AWD2CH_10)
 249:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_AWD2CR_AWD2CH_11)
 250:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_AWD2CR_AWD2CH_12)
 251:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_AWD2CR_AWD2CH_13)
 252:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_AWD2CR_AWD2CH_14)
 253:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_AWD2CR_AWD2CH_15)
 254:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_AWD2CR_AWD2CH_16)
 255:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_AWD2CR_AWD2CH_17)
 256:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_AWD2CR_AWD2CH_18)
 257:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_19_BITFIELD            (ADC_AWD2CR_AWD2CH_19)
 258:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 6


 259:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Definition of channels sampling time information to be inserted into       */
 260:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* channels literals definition.                                              */
 261:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_0_SMP                  (ADC_SMPR1_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 262:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_1_SMP                  (ADC_SMPR1_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 263:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_2_SMP                  (ADC_SMPR1_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 264:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_3_SMP                  (ADC_SMPR1_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 265:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_4_SMP                  (ADC_SMPR1_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 266:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_5_SMP                  (ADC_SMPR1_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 267:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_6_SMP                  (ADC_SMPR1_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 268:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_7_SMP                  (ADC_SMPR1_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 269:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_8_SMP                  (ADC_SMPR1_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 270:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_9_SMP                  (ADC_SMPR1_REGOFFSET | ((27UL) << ADC_CHANNEL_SMPx_BITOF
 271:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_10_SMP                 (ADC_SMPR2_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 272:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_11_SMP                 (ADC_SMPR2_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 273:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_12_SMP                 (ADC_SMPR2_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 274:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_13_SMP                 (ADC_SMPR2_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 275:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_14_SMP                 (ADC_SMPR2_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 276:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_15_SMP                 (ADC_SMPR2_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 277:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_16_SMP                 (ADC_SMPR2_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 278:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_17_SMP                 (ADC_SMPR2_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 279:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_18_SMP                 (ADC_SMPR2_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 280:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CHANNEL_19_SMP                 (ADC_SMPR2_REGOFFSET | ((27UL) << ADC_CHANNEL_SMPx_BITOF
 281:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 282:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 283:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC mode single or differential ended:                   */
 284:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literals LL_ADC_SINGLE_ENDED or LL_ADC_SINGLE_DIFFERENTIAL  */
 285:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* the relevant bits for:                                                     */
 286:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (concatenation of multiple bits used in different registers)               */
 287:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - ADC calibration: calibration start, calibration factor get or set        */
 288:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - ADC channels: set each ADC channel ending mode                           */
 289:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_START_MASK    (ADC_CR_ADCALDIF)
 290:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_FACTOR_MASK   (ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S)
 291:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_MASK        (ADC_CHANNEL_ID_BITFIELD_MASK) /* Equivalent to ADC_DIFS
 292:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK  (ADC_CALFACT_CALFACT_S_4 | ADC_CALFACT_CALFACT_S_3) /* B
 293:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK   (0x00010000UL)                           /* Selection o
 294:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_POS    (16UL)                                   /* Selection o
 295:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4 (ADC_SINGLEDIFF_CALIB_F_BIT_D_POS - 4UL) /* Shift of bi
 296:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 297:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 298:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 299:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 300:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 families)).       */
 301:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 302:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*   selection of ADC group (ADC groups regular and-or injected).             */
 303:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 304:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*   selection on groups.                                                     */
 305:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 306:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 307:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 308:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 309:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
 310:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 311:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 312:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 313:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 314:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 315:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 7


 316:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 317:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 318:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR_AWD1CH | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | 
 319:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 320:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
 321:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 322:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL) /* Position of bits ADC_AWD_CRx_REGOFFSET in ADC_
 323:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 324:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 325:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 326:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 327:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET)
 328:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 329:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)     /* Position of bits ADC_
 330:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 331:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 332:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 333:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 334:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
 335:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 336:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 thresholds registers */
 337:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* (Set separately as ADC_AWD_TRX_REGOFFSET to spare 32 bits space */
 338:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 339:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_AWD_TR12_REGOFFSETGAP_VAL      (0x00000022UL)
 340:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 341:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Legacy literals */
 342:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD1_TR                      LL_ADC_AWD1
 343:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD2_TR                      LL_ADC_AWD2
 344:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD3_TR                      LL_ADC_AWD3
 345:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 346:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal mask for ADC offset:                                              */
 347:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal register offset for ADC offset number configuration */
 348:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_OFR1_REGOFFSET                 (0x00000000UL)
 349:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_OFR2_REGOFFSET                 (0x00000001UL)
 350:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_OFR3_REGOFFSET                 (0x00000002UL)
 351:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_OFR4_REGOFFSET                 (0x00000003UL)
 352:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_OFRx_REGOFFSET_MASK            (ADC_OFR1_REGOFFSET | ADC_OFR2_REGOFFSET | ADC_OFR3_REGO
 353:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 354:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 355:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* ADC registers bits positions */
 356:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CFGR_RES_BITOFFSET_POS         (ADC_CFGR_RES_Pos)
 357:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CFGR_AWD1SGL_BITOFFSET_POS     (ADC_CFGR_AWD1SGL_Pos)
 358:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CFGR_AWD1EN_BITOFFSET_POS      (ADC_CFGR_AWD1EN_Pos)
 359:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CFGR_JAWD1EN_BITOFFSET_POS     (ADC_CFGR_JAWD1EN_Pos)
 360:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 361:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CFGR_RES_BITOFFSET_POS_ADC3    (ADC3_CFGR_RES_Pos)
 362:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
 363:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 364:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 365:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* ADC registers bits groups */
 366:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JA
 367:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 368:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 369:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* ADC internal channels related definitions */
 370:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Internal voltage reference VrefInt */
 371:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_3)
 372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x8fff810UL))  /* Internal voltage referen
ARM GAS  C:\usertemp\cca0PO6L.s 			page 8


 373:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                         /* Address related to STM32
 374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else /* ADC_VER_V5_90 || ADC_VER_V5_X */
 375:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FF1E860UL)) /* Internal voltage referen
 376:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_3 */
 377:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define VREFINT_CAL_VREF                   (3300UL)                     /* Analog voltage reference
 378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Temperature sensor */
 379:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_3)
 380:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x8fff814UL))  /* Internal temperature sen
 381:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x8fff818UL))  /* Internal temperature sen
 382:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                         /* Addresses related to STM
 383:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else /* ADC_VER_V5_90 || ADC_VER_V5_X */
 384:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FF1E820UL)) /* Internal temperature sen
 385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FF1E840UL)) /* Internal temperature sen
 386:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_3 */
 387:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 388:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (30L)                        /* Internal temperature sen
 389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (110L)                       /* Internal temperature sen
 390:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          (3300UL)                     /* Analog voltage reference
 391:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 392:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Registers addresses with ADC linearity calibration content (programmed during device production,
 393:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEAR_CALIB_REG_1_ADDR ((uint32_t*) (0x1FF1EC00UL))
 394:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEAR_CALIB_REG_2_ADDR ((uint32_t*) (0x1FF1EC04UL))
 395:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEAR_CALIB_REG_3_ADDR ((uint32_t*) (0x1FF1EC08UL))
 396:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEAR_CALIB_REG_4_ADDR ((uint32_t*) (0x1FF1EC0CUL))
 397:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEAR_CALIB_REG_5_ADDR ((uint32_t*) (0x1FF1EC10UL))
 398:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEAR_CALIB_REG_6_ADDR ((uint32_t*) (0x1FF1EC14UL))
 399:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEAR_CALIB_REG_COUNT  (6UL)
 400:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 401:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 402:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 403:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 404:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 405:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 406:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 407:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 408:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 409:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 410:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 411:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 412:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a register from a register basis from which an offset
 413:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is applied.
 414:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 415:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 416:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Pointer to register address
 417:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 418:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 419:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****  ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 420:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 421:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 422:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 423:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 424:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 425:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 426:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 427:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 428:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 429:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
ARM GAS  C:\usertemp\cca0PO6L.s 			page 9


 430:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 431:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 432:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 433:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 434:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and multimode
 435:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 436:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 437:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 438:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sharing the same ADC common instance):
 439:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 440:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         disabled.
 441:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 442:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** typedef struct
 443:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 444:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 445:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 446:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              @note On this STM32 series, if ADC group injected is u
 447:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    clock ratio constraints between ADC clock and AH
 448:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    must be respected. Refer to reference manual.
 449:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 450:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 451:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 452:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t Multimode;                   /*!< Set ADC multimode configuration to operate in independ
 453:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 455:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 457:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t MultiDMATransfer;            /*!< Set ADC dual ADC mode DMA transfer data format: Each D
 458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 459:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 460:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 461:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 462:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t MultiTwoSamplingDelay;       /*!< Set ADC multimode delay between 2 sampling phases.
 463:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 464:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 465:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 466:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 467:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 468:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 469:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 470:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 471:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 472:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Affects both group regular and group injected (availability
 473:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of ADC group injected depends on STM32 families).
 474:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 475:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 476:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 477:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is conditioned to ADC state:
 478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instance must be disabled.
 479:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 480:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 481:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 482:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 483:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 484:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 485:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 486:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         refer to description of each function for setting
ARM GAS  C:\usertemp\cca0PO6L.s 			page 10


 487:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         conditioned to ADC state.
 488:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 489:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** typedef struct
 490:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 491:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 492:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 493:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 494:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 495:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 496:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t LeftBitShift;                /*!< Configures the left shifting applied to the final resu
 497:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LEFT_B
 498:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 499:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 500:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 501:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 502:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 503:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 504:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 505:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 506:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 507:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 508:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 509:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 510:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 511:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (functions with prefix "REG").
 512:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 513:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is conditioned to ADC state:
 514:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instance must be disabled.
 515:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 516:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 517:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 518:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 519:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 520:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 521:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 522:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         refer to description of each function for setting
 523:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         conditioned to ADC state.
 524:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 525:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** typedef struct
 526:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 527:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 528:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 529:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 530:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 531:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 532:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 533:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 534:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 535:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 536:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 537:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 538:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 539:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 540:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 541:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 542:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 543:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
ARM GAS  C:\usertemp\cca0PO6L.s 			page 11


 544:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 545:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 546:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 547:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 548:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 549:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 550:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 551:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 552:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 553:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t DataTransferMode;            /*!< Set ADC group regular conversion data transfer mode: n
 554:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DA
 555:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 557:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 558:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 559:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              data preserved or overwritten.
 560:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 561:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 562:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 563:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 564:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 565:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 566:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 567:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group injected.
 568:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group injected.
 569:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 570:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 571:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (functions with prefix "INJ").
 572:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_INJ_Init()
 573:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is conditioned to ADC state:
 574:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instance must be disabled.
 575:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 576:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 577:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 578:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 579:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 580:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 581:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         refer to description of each function for setting
 583:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         conditioned to ADC state.
 584:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 585:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** typedef struct
 586:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 587:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group injected conversion trigger source: inte
 588:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 589:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 590:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 591:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 592:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 593:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 594:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 595:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group injected sequencer length.
 596:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 597:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 598:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 599:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 600:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group injected sequencer discontinuous mode: s
ARM GAS  C:\usertemp\cca0PO6L.s 			page 12


 601:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 602:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              @note This parameter has an effect only if group injec
 603:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 604:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 605:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 606:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 607:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t TrigAuto;                    /*!< Set ADC group injected conversion trigger: independent
 608:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 609:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              Note: This parameter must be set to set to independent
 610:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 611:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 612:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 613:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** } LL_ADC_INJ_InitTypeDef;
 614:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 615:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 616:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 617:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 618:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 619:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 620:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 621:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 622:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 623:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 624:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 625:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 626:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 627:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 628:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 629:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 630:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 631:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 632:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 633:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 634:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC                   ADC_ISR_JEOC       /*!< ADC flag ADC group injected end 
 635:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS                   ADC_ISR_JEOS       /*!< ADC flag ADC group injected end 
 636:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF                  ADC_ISR_JQOVF      /*!< ADC flag ADC group injected cont
 637:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 638:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 639:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 640:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_MST              ADC_CSR_ADRDY_MST  /*!< ADC flag ADC multimode master in
 641:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_SLV              ADC_CSR_ADRDY_SLV  /*!< ADC flag ADC multimode slave ins
 642:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_MST                ADC_CSR_EOC_MST    /*!< ADC flag ADC multimode master gr
 643:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_SLV                ADC_CSR_EOC_SLV    /*!< ADC flag ADC multimode slave gro
 644:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_MST                ADC_CSR_EOS_MST    /*!< ADC flag ADC multimode master gr
 645:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_SLV                ADC_CSR_EOS_SLV    /*!< ADC flag ADC multimode slave gro
 646:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_MST                ADC_CSR_OVR_MST    /*!< ADC flag ADC multimode master gr
 647:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_SLV                ADC_CSR_OVR_SLV    /*!< ADC flag ADC multimode slave gro
 648:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_MST              ADC_CSR_EOSMP_MST  /*!< ADC flag ADC multimode master gr
 649:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_SLV              ADC_CSR_EOSMP_SLV  /*!< ADC flag ADC multimode slave gro
 650:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_MST               ADC_CSR_JEOC_MST   /*!< ADC flag ADC multimode master gr
 651:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_SLV               ADC_CSR_JEOC_SLV   /*!< ADC flag ADC multimode slave gro
 652:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_MST               ADC_CSR_JEOS_MST   /*!< ADC flag ADC multimode master gr
 653:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_SLV               ADC_CSR_JEOS_SLV   /*!< ADC flag ADC multimode slave gro
 654:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_MST              ADC_CSR_JQOVF_MST  /*!< ADC flag ADC multimode master gr
 655:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_SLV              ADC_CSR_JQOVF_SLV  /*!< ADC flag ADC multimode slave gro
 656:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_MST               ADC_CSR_AWD1_MST   /*!< ADC flag ADC multimode master an
 657:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_SLV               ADC_CSR_AWD1_SLV   /*!< ADC flag ADC multimode slave ana
ARM GAS  C:\usertemp\cca0PO6L.s 			page 13


 658:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_MST               ADC_CSR_AWD2_MST   /*!< ADC flag ADC multimode master an
 659:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_SLV               ADC_CSR_AWD2_SLV   /*!< ADC flag ADC multimode slave ana
 660:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_MST               ADC_CSR_AWD3_MST   /*!< ADC flag ADC multimode master an
 661:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_SLV               ADC_CSR_AWD3_SLV   /*!< ADC flag ADC multimode slave ana
 662:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 663:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 664:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 665:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 666:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 667:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 668:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 669:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 670:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 671:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 672:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 673:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 674:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 675:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_JEOC                     ADC_IER_JEOCIE     /*!< ADC interruption ADC group injec
 676:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_JEOS                     ADC_IER_JEOSIE     /*!< ADC interruption ADC group injec
 677:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_JQOVF                    ADC_IER_JQOVFIE    /*!< ADC interruption ADC group injec
 678:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 679:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 680:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 681:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 682:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 683:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 684:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 685:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 686:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 687:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 688:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 689:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* DMA transfer.                                                              */
 690:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 691:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA          (0x00000000UL) /* ADC group regular conversion data re
 692:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA_MULTI    (0x00000001UL) /* ADC group regular conversion data re
 693:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 694:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 695:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 696:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 697:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 698:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 699:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 700:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CCR_CKMODE_0)                                    /*
 701:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CCR_CKMODE_1                   )                 /*
 702:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CCR_CKMODE_1 | ADC_CCR_CKMODE_0)                 /*
 703:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                                        /*
 704:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                                     /*
 705:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1                  )                   /*
 706:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0)                   /*
 707:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2                                    ) /*
 708:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2                   | ADC_CCR_PRESC_0) /*
 709:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1                  ) /*
 710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 711:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                                     /*
 712:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0)                   /*
 713:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1)                   /*
 714:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
ARM GAS  C:\usertemp\cca0PO6L.s 			page 14


 715:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 717:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 718:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 720:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 721:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 722:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 723:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 724:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 725:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 727:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)         /*!< ADC measurement paths all di
 728:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)       /*!< ADC measurement path to inte
 729:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)         /*!< ADC measurement path to inte
 730:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATEN)       /*!< ADC measurement path to inte
 731:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 732:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 733:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 734:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 735:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_BOOST_MODE ADC instance - Boost mode
 736:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 737:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 738:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_BOOST_MODE_6MHZ25   (0x00000000UL)                                            /*!< B
 739:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_BOOST_MODE_12MHZ5   (                                        ADC_CR_BOOST_0)  /*!< B
 740:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_BOOST_MODE_20MHZ    (                       ADC_CR_BOOST_1                 )  /*!< B
 741:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_BOOST_MODE_25MHZ    ((ADC_CR_BOOST_0 <<2) | ADC_CR_BOOST_1                 )  /*!< B
 742:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_BOOST_MODE_50MHZ    ((ADC_CR_BOOST_0 <<2) | ADC_CR_BOOST_1 | ADC_CR_BOOST_0)  /*!< B
 743:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 744:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 745:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 746:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 747:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CALIBRATION_OFFSET_LINEARITY  ADC instance - Calibration mode for offset an
 748:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 749:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 750:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_OFFSET                (ADC_CALIB_FACTOR_OFFSET_REGOFFSET)                     
 751:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_LINEARITY             (ADC_CALIB_FACTOR_LINEARITY_REGOFFSET)                  
 752:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_OFFSET_LINEARITY      (ADC_CALIB_FACTOR_LINEARITY_REGOFFSET | ADC_CR_ADCALLIN)
 753:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 754:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 755:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 756:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 757:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CALIBRATION_LINEARITY_WORD  ADC instance - Calibration linearity words
 758:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 759:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 760:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_LINEARITY_WORD1       (ADC_CR_LINCALRDYW1)    /*!< ADC calibration linearity w
 761:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_LINEARITY_WORD2       (ADC_CR_LINCALRDYW2)    /*!< ADC calibration linearity w
 762:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_LINEARITY_WORD3       (ADC_CR_LINCALRDYW3)    /*!< ADC calibration linearity w
 763:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_LINEARITY_WORD4       (ADC_CR_LINCALRDYW4)    /*!< ADC calibration linearity w
 764:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_LINEARITY_WORD5       (ADC_CR_LINCALRDYW5)    /*!< ADC calibration linearity w
 765:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CALIB_LINEARITY_WORD6       (ADC_CR_LINCALRDYW6)    /*!< ADC calibration linearity w
 766:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 767:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 768:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 769:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 770:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 771:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
ARM GAS  C:\usertemp\cca0PO6L.s 			page 15


 772:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 773:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_16B              (0x00000000UL)                                      /*!<
 774:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_14B              (                                  ADC_CFGR_RES_0)  /*!<
 775:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (                 ADC_CFGR_RES_1                 )  /*!<
 776:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                 ADC_CFGR_RES_1 | ADC_CFGR_RES_0)  /*!<
 777:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 778:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined (ADC_VER_V5_X)
 779:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_14B_OPT          (ADC_CFGR_RES_2 |                  ADC_CFGR_RES_0)  /*!<
 780:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B_OPT          (ADC_CFGR_RES_2 | ADC_CFGR_RES_1                 )  /*!<
 781:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
 782:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 783:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined (ADC_VER_V5_3) || defined(ADC_VER_V5_V90)
 784:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR_RES_2|ADC_CFGR_RES_1 | ADC_CFGR_RES_0) /*!< AD
 785:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
 786:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR_RES_2                                ) /*!< AD
 787:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                                             /*!< Th
 788:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                                                    
 789:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                                                    
 790:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
 791:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 792:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC3_CFGR_RES_1 | ADC3_CFGR_RES_0)   /*!< ADC resolutio
 793:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
 794:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 795:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 796:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 797:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 798:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 799:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 800:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 801:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 802:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)         /*!< ADC conversion data alignmen
 803:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC3_CFGR_ALIGN)       /*!< ADC conversion data alignme
 804:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 805:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 806:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 807:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 808:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
 809:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 810:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LEFT_BIT_SHIFT   ADC left Shift
 811:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 812:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 813:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_NONE  (0x00000000UL)                                                 
 814:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_1     (ADC_CFGR2_LSHIFT_0)                                           
 815:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_2     (ADC_CFGR2_LSHIFT_1)                                           
 816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_3     (ADC_CFGR2_LSHIFT_1 | ADC_CFGR2_LSHIFT_0)                      
 817:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_4     (ADC_CFGR2_LSHIFT_2)                                           
 818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_5     (ADC_CFGR2_LSHIFT_2 | ADC_CFGR2_LSHIFT_0)                      
 819:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_6     (ADC_CFGR2_LSHIFT_2 | ADC_CFGR2_LSHIFT_1)                      
 820:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_7     (ADC_CFGR2_LSHIFT_2 | ADC_CFGR2_LSHIFT_1 | ADC_CFGR2_LSHIFT_0) 
 821:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_8     (ADC_CFGR2_LSHIFT_3)                                           
 822:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_9     (ADC_CFGR2_LSHIFT_3 | ADC_CFGR2_LSHIFT_0)                      
 823:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_10    (ADC_CFGR2_LSHIFT_3 | ADC_CFGR2_LSHIFT_1)                      
 824:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_11    (ADC_CFGR2_LSHIFT_3 | ADC_CFGR2_LSHIFT_1 | ADC_CFGR2_LSHIFT_0) 
 825:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_12    (ADC_CFGR2_LSHIFT_3 | ADC_CFGR2_LSHIFT_2)                      
 826:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_13    (ADC_CFGR2_LSHIFT_3 | ADC_CFGR2_LSHIFT_2 | ADC_CFGR2_LSHIFT_0) 
 827:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_14    (ADC_CFGR2_LSHIFT_3 | ADC_CFGR2_LSHIFT_2 | ADC_CFGR2_LSHIFT_1) 
 828:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LEFT_BIT_SHIFT_15    (ADC_CFGR2_LSHIFT_3 | ADC_CFGR2_LSHIFT_2 | ADC_CFGR2_LSHIFT_1 |
ARM GAS  C:\usertemp\cca0PO6L.s 			page 16


 829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 830:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 831:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 832:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 833:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 834:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 835:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 836:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)                      /*!< No ADC low powe
 837:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR_AUTDLY)                   /*!< ADC low power m
 838:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 839:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 840:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 841:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 842:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_NB  ADC instance - Offset number
 843:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 844:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 845:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_1                    ADC_OFR1_REGOFFSET /*!< ADC offset number 1: ADC channel
 846:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_2                    ADC_OFR2_REGOFFSET /*!< ADC offset number 2: ADC channel
 847:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_3                    ADC_OFR3_REGOFFSET /*!< ADC offset number 3: ADC channel
 848:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_4                    ADC_OFR4_REGOFFSET /*!< ADC offset number 4: ADC channel
 849:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 850:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 851:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 852:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 853:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_SIGNED_SATURATION ADC instance - Offset signed saturation mode
 854:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 855:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 856:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_SIGNED_SATURATION_DISABLE   (0x00000000UL)   /*!< ADC offset signed saturatio
 857:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_SIGNED_SATURATION_ENABLE    (ADC_OFR1_SSATE) /*!< ADC offset signed saturatio
 858:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 859:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 860:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 861:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 862:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_RSHIFT ADC instance - Offset right shift
 863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 864:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 865:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_RSHIFT_DISABLE   (0x00000000UL)      /*!< ADC offset right shift is disabled 
 866:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_RSHIFT_ENABLE    (ADC_CFGR2_RSHIFT1) /*!< ADC offset right shift is enabled (
 867:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 868:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 869:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 870:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 871:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_SATURATION ADC instance - Offset saturation mode
 872:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 873:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 874:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_SATURATION_DISABLE   (0x00000000UL)           /*!< ADC offset saturation is d
 875:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_SATURATION_ENABLE    (ADC3_OFR1_SATEN)        /*!< ADC offset saturation is e
 876:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 877:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 878:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 879:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 880:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_STATE ADC instance - Offset state
 881:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 882:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 883:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_DISABLE              (0x00000000UL)         /*!< ADC offset disabled (among A
 884:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_ENABLE               (ADC3_OFR1_OFFSET1_EN)  /*!< ADC offset enabled (among A
 885:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
ARM GAS  C:\usertemp\cca0PO6L.s 			page 17


 886:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 887:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 888:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 889:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_SIGN ADC instance - Offset sign
 890:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 891:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 892:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_SIGN_NEGATIVE        (0x00000000UL)        /*!< ADC offset is negative (among
 893:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OFFSET_SIGN_POSITIVE        (ADC3_OFR1_OFFSETPOS) /*!< ADC offset is positive (among
 894:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 895:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 896:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 897:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
 898:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 899:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
 900:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 901:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 902:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 903:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 904:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL) /*!< ADC group regular (available on all 
 905:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_GROUP_INJECTED              (0x00000002UL) /*!< ADC group injected (not available on
 906:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR_INJECTED      (0x00000003UL) /*!< ADC both groups regular and injected
 907:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 908:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 909:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 910:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 911:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 912:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 913:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 914:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_SMP  | ADC_CHANNE
 915:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_SMP  | ADC_CHANNE
 916:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_SMP  | ADC_CHANNE
 917:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_SMP  | ADC_CHANNE
 918:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_SMP  | ADC_CHANNE
 919:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_SMP  | ADC_CHANNE
 920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_SMP  | ADC_CHANNE
 921:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_SMP  | ADC_CHANNE
 922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_SMP  | ADC_CHANNE
 923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_SMP  | ADC_CHANNE
 924:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_SMP | ADC_CHANNE
 925:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_SMP | ADC_CHANNE
 926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_SMP | ADC_CHANNE
 927:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_SMP | ADC_CHANNE
 928:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_SMP | ADC_CHANNE
 929:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_SMP | ADC_CHANNE
 930:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_SMP | ADC_CHANNE
 931:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_SMP | ADC_CHANNE
 932:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_SMP | ADC_CHANNE
 933:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_19                  (ADC_CHANNEL_19_NUMBER | ADC_CHANNEL_19_SMP | ADC_CHANNE
 934:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC3)
 935:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 936:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 937:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 938:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 939:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
 940:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_19 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 941:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 942:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
ARM GAS  C:\usertemp\cca0PO6L.s 			page 18


 943:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
 944:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
 945:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*!< Specific define for STM32H7A3xx and STM32HB3xx varieties of STM32H7XXX */
 946:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_19 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 947:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_14 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 949:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
 950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH1_ADC2        (LL_ADC_CHANNEL_16 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 951:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH2_ADC2        (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 952:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(DAC2)
 953:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*!< Specific define for STM32H7A3xx and STM32HB3xx varieties of STM32H7XXX */
 954:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC2CH1_ADC2        (LL_ADC_CHANNEL_15 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 955:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
 956:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 957:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 958:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 959:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 960:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 961:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 962:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 963:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE          (0x00000000UL)                                           
 964:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH1      (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                          
 965:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH2      (ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)      
 966:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH3      (ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)      
 967:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH2      (ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT
 968:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO     (ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)      
 969:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CH4      (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT
 970:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11   (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT
 971:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO     (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_
 972:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO2    (ADC_CFGR_EXTSEL_3 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)      
 973:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT
 974:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2    (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT
 975:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_
 976:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EXT
 977:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM6_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_
 978:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM15_TRGO    (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_
 979:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CH4      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_
 980:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG1    (ADC_CFGR_EXTSEL_4 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)      
 981:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_HRTIM_TRG3    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT
 982:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_LPTIM1_OUT    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT
 983:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_LPTIM2_OUT    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_
 984:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_LPTIM3_OUT    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EXT
 985:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined (TIM23)
 986:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM23_TRGO    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_
 987:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* TIM23 */
 988:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined (TIM24)
 989:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM24_TRGO    (ADC_CFGR_EXTSEL_4 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_
 990:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* TIM24 */
 991:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
 992:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
 993:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 994:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 995:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 996:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
 997:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
 998:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (                   ADC_CFGR_EXTEN_0)   /*!< ADC group r
 999:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR_EXTEN_1                   )   /*!< ADC group r
ARM GAS  C:\usertemp\cca0PO6L.s 			page 19


1000:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR_EXTEN_1 | ADC_CFGR_EXTEN_0)   /*!< ADC group r
1001:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1002:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1003:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1004:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
1005:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****  /** @defgroup ADC_LL_EC_REG_SAMPLING_MODE  ADC group regular - Sampling mode
1006:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1007:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1008:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_NORMAL               (0x00000000UL)        /*!< ADC conversions sa
1009:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_BULB                 (ADC3_CFGR2_BULB)     /*!< ADC conversions sa
1010:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                                  Note: First conver
1011:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED    (ADC3_CFGR2_SMPTRIG)  /*!< ADC conversions sa
1012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                                  Trigger rising edg
1013:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                                  Trigger falling ed
1014:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1015:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1016:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */ 
1017:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
1018:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1019:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
1020:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @{
1021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** */
1022:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)          /*!< ADC conversions are perform
1023:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR_CONT)         /*!< ADC conversions are perform
1024:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1025:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1026:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1027:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1028:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DATA_TRANSFER_MODE  ADC group regular - Data transfer mode of ADC conve
1029:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1030:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1031:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_DR_TRANSFER             (0x00000000UL)                        /*!< ADC conversio
1032:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (                   ADC_CFGR_DMNGT_0) /*!< ADC conversio
1033:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR_DMNGT_1 | ADC_CFGR_DMNGT_0) /*!< ADC conversio
1034:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_DFSDM_TRANSFER          (ADC_CFGR_DMNGT_1                   ) /*!< ADC conversio
1035:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1036:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1037:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1038:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1039:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
1040:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
1041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1042:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1043:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1044:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC3_REG_DMA_TRANSFER_NONE       (0x00000000UL)                        /*!< ADC conversi
1045:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC3_REG_DMA_TRANSFER_LIMITED    (                  ADC3_CFGR_DMAEN)    /*!< ADC convers
1046:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC3_REG_DMA_TRANSFER_UNLIMITED  (ADC3_CFGR_DMACFG | ADC3_CFGR_DMAEN)    /*!< ADC conver
1047:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1048:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1049:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1050:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
1051:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
1053:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @{
1054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** */
1055:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)         /*!< ADC group regular behavior i
1056:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR_OVRMOD)      /*!< ADC group regular behavior i
ARM GAS  C:\usertemp\cca0PO6L.s 			page 20


1057:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1058:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1059:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1060:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1061:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
1062:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1063:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1064:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (0x00000000UL)                                          
1065:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (                                             ADC_SQR1_L
1066:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (                              ADC_SQR1_L_1             
1067:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (                              ADC_SQR1_L_1 | ADC_SQR1_L
1068:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (               ADC_SQR1_L_2                            
1069:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (               ADC_SQR1_L_2                | ADC_SQR1_L
1070:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1             
1071:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
1072:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS  (ADC_SQR1_L_3                                           
1073:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS (ADC_SQR1_L_3                               | ADC_SQR1_L
1074:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1             
1075:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1 | ADC_SQR1_L
1076:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                            
1077:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                | ADC_SQR1_L
1078:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1             
1079:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
1080:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1081:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1082:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1083:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1084:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
1085:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1086:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1087:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                                          
1088:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (                                                       
1089:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_2RANKS      (                                          ADC_CFGR_DISC
1090:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_3RANKS      (                     ADC_CFGR_DISCNUM_1                
1091:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_4RANKS      (                     ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
1092:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_5RANKS      (ADC_CFGR_DISCNUM_2                                     
1093:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_6RANKS      (ADC_CFGR_DISCNUM_2                      | ADC_CFGR_DISC
1094:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_7RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1                
1095:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_8RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
1096:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1097:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1098:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1099:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1100:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
1101:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1102:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1103:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_1_SQRX_BITOFFSET_POS)
1104:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_2_SQRX_BITOFFSET_POS)
1105:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_3_SQRX_BITOFFSET_POS)
1106:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_4_SQRX_BITOFFSET_POS)
1107:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_5_SQRX_BITOFFSET_POS)
1108:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_6_SQRX_BITOFFSET_POS)
1109:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_7_SQRX_BITOFFSET_POS)
1110:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_8_SQRX_BITOFFSET_POS)
1111:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_9                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_9_SQRX_BITOFFSET_POS)
1112:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_10                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_10_SQRX_BITOFFSET_POS
1113:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_11                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_11_SQRX_BITOFFSET_POS
ARM GAS  C:\usertemp\cca0PO6L.s 			page 21


1114:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_12                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_12_SQRX_BITOFFSET_POS
1115:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_13                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_13_SQRX_BITOFFSET_POS
1116:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_14                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_14_SQRX_BITOFFSET_POS
1117:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_15                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_15_SQRX_BITOFFSET_POS
1118:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_REG_RANK_16                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_16_SQRX_BITOFFSET_POS
1119:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1120:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1121:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1122:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1123:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_SOURCE  ADC group injected - Trigger source
1124:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1125:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1126:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SOFTWARE           (0x00000000UL)                                          
1127:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO      (ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                         
1128:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CH4       (ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1129:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_TRGO      (ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1130:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CH1       (ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1131:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1132:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_TRGO      (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1133:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_EXTI_LINE15    (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1134:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
1135:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1136:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1137:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1138:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH3       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
1139:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_
1140:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH1       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1141:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM6_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1142:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM15_TRGO     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1143:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(HRTIM1)
1144:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2     (ADC_JSQR_JEXTSEL_4 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
1145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
1146:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* HRTIM1 */
1147:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_LPTIM1_OUT     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
1148:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_LPTIM2_OUT     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
1149:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_LPTIM3_OUT     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_
1150:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM23_TRGO     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1151:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM24_TRGO     (ADC_JSQR_JEXTSEL_4 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
1152:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1153:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1154:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1155:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1156:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_EDGE  ADC group injected - Trigger edge
1157:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1158:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1159:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISING         (                    ADC_JSQR_JEXTEN_0) /*!< ADC group i
1160:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_FALLING        (ADC_JSQR_JEXTEN_1                    ) /*!< ADC group i
1161:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISINGFALLING  (ADC_JSQR_JEXTEN_1 | ADC_JSQR_JEXTEN_0) /*!< ADC group i
1162:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1163:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1164:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1165:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1166:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIG_AUTO  ADC group injected - Automatic trigger mode
1167:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @{
1168:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** */
1169:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_INDEPENDENT        (0x00000000UL)         /*!< ADC group injected conversio
1170:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_FROM_GRP_REGULAR   (ADC_CFGR_JAUTO)       /*!< ADC group injected conversio
ARM GAS  C:\usertemp\cca0PO6L.s 			page 22


1171:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1172:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1173:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1174:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1175:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_CONTEXT_QUEUE  ADC group injected - Context queue mode
1176:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1177:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1178:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE (0x00000000UL)         /* Group injected sequence co
1179:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY   (ADC_CFGR_JQM)         /* Group injected sequence co
1180:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_DISABLE               (ADC_CFGR_JQDIS)       /* Group injected sequence co
1181:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1182:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1183:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1184:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1185:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_SCAN_LENGTH  ADC group injected - Sequencer scan length
1186:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1187:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1188:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_DISABLE        (0x00000000UL)                  /*!< ADC group injected 
1189:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS  (                ADC_JSQR_JL_0) /*!< ADC group injected 
1190:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS  (ADC_JSQR_JL_1                ) /*!< ADC group injected 
1191:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS  (ADC_JSQR_JL_1 | ADC_JSQR_JL_0) /*!< ADC group injected 
1192:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1193:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1194:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1195:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1196:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_DISCONT_MODE  ADC group injected - Sequencer discontinuous mode
1197:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1198:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1199:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_DISABLE     (0x00000000UL)         /*!< ADC group injected sequencer
1200:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_1RANK       (ADC_CFGR_JDISCEN)     /*!< ADC group injected sequencer
1201:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1202:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1203:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1204:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1205:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_RANKS  ADC group injected - Sequencer ranks
1206:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1207:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1208:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_RANK_1                  (ADC_JDR1_REGOFFSET | ADC_INJ_RANK_1_JSQR_BITOFFSET_POS)
1209:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_RANK_2                  (ADC_JDR2_REGOFFSET | ADC_INJ_RANK_2_JSQR_BITOFFSET_POS)
1210:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_RANK_3                  (ADC_JDR3_REGOFFSET | ADC_INJ_RANK_3_JSQR_BITOFFSET_POS)
1211:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_INJ_RANK_4                  (ADC_JDR4_REGOFFSET | ADC_INJ_RANK_4_JSQR_BITOFFSET_POS)
1212:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1213:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1214:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1215:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1216:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
1217:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1218:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_1CYCLE_5       (0x00000000UL)                                          
1220:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_2CYCLES_5      (                                        ADC_SMPR2_SMP10
1221:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_8CYCLES_5      (                    ADC_SMPR2_SMP10_1                  
1222:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_16CYCLES_5     (                    ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1223:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_32CYCLES_5     (ADC_SMPR2_SMP10_2                                      
1224:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_64CYCLES_5     (ADC_SMPR2_SMP10_2                     | ADC_SMPR2_SMP10
1225:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_387CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1                  
1226:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_810CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1227:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
ARM GAS  C:\usertemp\cca0PO6L.s 			page 23


1228:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1229:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1230:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
1231:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
1232:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1233:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1234:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_2CYCLES_5      (0x00000000UL)                                     
1235:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_6CYCLES_5      (                                        ADC_SMPR2_
1236:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_12CYCLES_5     (                    ADC_SMPR2_SMP10_1             
1237:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_24CYCLES_5     (                    ADC_SMPR2_SMP10_1 | ADC_SMPR2_
1238:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_47CYCLES_5     (ADC_SMPR2_SMP10_2                                 
1239:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_92CYCLES_5     (ADC_SMPR2_SMP10_2                     | ADC_SMPR2_
1240:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_247CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1             
1241:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_ADC3_640CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1 | ADC_SMPR2_
1242:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1243:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1244:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1245:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
1246:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SINGLE_DIFF_ENDING  Channel - Single or differential ending
1248:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1249:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1250:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_SINGLE_ENDED                (                  ADC_CALFACT_CALFACT_S)         /*!< A
1251:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DIFFERENTIAL_ENDED          (ADC_CR_ADCALDIF | ADC_CALFACT_CALFACT_D)         /*!< A
1252:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_BOTH_SINGLE_DIFF_ENDED      (LL_ADC_SINGLE_ENDED | LL_ADC_DIFFERENTIAL_ENDED) /*!< A
1253:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1254:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1255:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1256:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1257:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
1258:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1259:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1260:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK  | ADC_AWD_CR1_REGOFFSET) /*!<
1261:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR2_REGOFFSET) /*!<
1262:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR3_REGOFFSET) /*!<
1263:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1264:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1265:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1266:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1267:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
1268:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1269:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1270:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                                          
1271:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK                              
1272:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_INJ        (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1273:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG_INJ    (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1274:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)              
1275:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_INJ           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1276:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG_INJ       ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1277:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)              
1278:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_INJ           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1279:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG_INJ       ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1280:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)              
1281:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_INJ           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1282:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG_INJ       ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1283:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)              
1284:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_INJ           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
ARM GAS  C:\usertemp\cca0PO6L.s 			page 24


1285:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG_INJ       ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1286:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)              
1287:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_INJ           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1288:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG_INJ       ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1289:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)              
1290:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_INJ           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1291:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG_INJ       ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1292:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)              
1293:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_INJ           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1294:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG_INJ       ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1295:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)              
1296:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_INJ           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1297:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG_INJ       ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1298:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)              
1299:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_INJ           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1300:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG_INJ       ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1301:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)              
1302:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_INJ           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1303:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG_INJ       ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1304:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)              
1305:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_INJ          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1306:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG_INJ      ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1307:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)              
1308:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_INJ          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1309:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG_INJ      ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1310:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)              
1311:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_INJ          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1312:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG_INJ      ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1313:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)              
1314:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_INJ          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1315:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG_INJ      ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1316:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)              
1317:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_INJ          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1318:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG_INJ      ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1319:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)              
1320:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_INJ          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1321:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG_INJ      ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1322:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)              
1323:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_INJ          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1324:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG_INJ      ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1325:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)              
1326:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_INJ          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1327:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG_INJ      ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1328:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK)              
1329:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_INJ          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1330:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG_INJ      ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1331:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_19_REG          ((LL_ADC_CHANNEL_19 & ADC_CHANNEL_ID_MASK)              
1332:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_19_INJ          ((LL_ADC_CHANNEL_19 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1333:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_19_REG_INJ      ((LL_ADC_CHANNEL_19 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1334:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK)   
1335:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_INJ          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1336:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG_INJ      ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1337:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK)   
1338:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_INJ       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) | 
1339:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ   ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) | 
1340:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK)   
1341:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_INJ             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 25


1342:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG_INJ         ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1343:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK)   
1344:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK) | 
1345:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK) | 
1346:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK)   
1347:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK) | 
1348:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK) | 
1349:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1350:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1351:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1352:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1353:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
1354:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1355:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1356:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (0x1UL)                     /*!< ADC analog watchdog thr
1357:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (0x0UL)                     /*!< ADC analog watchdog thr
1358:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1359:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1360:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1361:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
1362:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_FILTERING_CONFIG  Analog watchdog - filtering config
1363:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1364:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1365:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_NONE          (0x00000000UL)                                          
1366:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_2SAMPLES      (                                          ADC3_TR1_AWDF
1367:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_3SAMPLES      (                     ADC3_TR1_AWDFILT_1                
1368:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_4SAMPLES      (                     ADC3_TR1_AWDFILT_1 | ADC3_TR1_AWDF
1369:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_5SAMPLES      (ADC3_TR1_AWDFILT_2                                     
1370:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_6SAMPLES      (ADC3_TR1_AWDFILT_2 |                      ADC3_TR1_AWDF
1371:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_7SAMPLES      (ADC3_TR1_AWDFILT_2 | ADC3_TR1_AWDFILT_1                
1372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_AWD_FILTERING_8SAMPLES      (ADC3_TR1_AWDFILT_2 | ADC3_TR1_AWDFILT_1 | ADC3_TR1_AWDF
1373:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1375:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1376:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
1377:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
1379:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1380:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1381:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                                        /*
1382:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (                                    ADC_CFGR2_ROVSE) /*
1383:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_RESUMED     (ADC_CFGR2_ROVSM |                   ADC_CFGR2_ROVSE) /*
1384:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJECTED            (                  ADC_CFGR2_JOVSE                  ) /*
1385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJ_REG_RESUMED     (                  ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE) /*
1386:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1387:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1388:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1390:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
1391:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1392:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1393:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)         /*!< ADC oversampling discontinuo
1394:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TROVS)      /*!< ADC oversampling discontinuo
1395:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1396:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1397:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1398:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
ARM GAS  C:\usertemp\cca0PO6L.s 			page 26


1399:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
1400:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1401:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1402:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                                          
1403:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (                                        ADC3_CFGR2_OVSR
1404:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (                    ADC3_CFGR2_OVSR_1                  
1405:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (                    ADC3_CFGR2_OVSR_1 | ADC3_CFGR2_OVSR
1406:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC3_CFGR2_OVSR_2                                      
1407:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC3_CFGR2_OVSR_2                     | ADC3_CFGR2_OVSR
1408:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC3_CFGR2_OVSR_2 | ADC3_CFGR2_OVSR_1                  
1409:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC3_CFGR2_OVSR_2 | ADC3_CFGR2_OVSR_1 | ADC3_CFGR2_OVSR
1410:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1411:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1412:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1413:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
1414:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1415:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data shift
1416:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1417:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1418:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                                          
1419:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (                                                       
1420:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (                                      ADC_CFGR2_OVSS_1 
1421:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (                                      ADC_CFGR2_OVSS_1 
1422:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (                   ADC_CFGR2_OVSS_2                    
1423:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (                   ADC_CFGR2_OVSS_2                    
1424:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1425:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1426:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3                                       
1427:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_9           (ADC_CFGR2_OVSS_3                                       
1428:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_10          (ADC_CFGR2_OVSS_3                    | ADC_CFGR2_OVSS_1 
1429:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_11          (ADC_CFGR2_OVSS_3                    | ADC_CFGR2_OVSS_1 
1430:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1431:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1432:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1433:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1434:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MODE  Multimode - Mode
1435:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1436:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1437:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_INDEPENDENT           (0x00000000UL)                                          
1438:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIMULT       (                 ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1       
1439:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INTERL       (                 ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1 | ADC_
1440:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_SIMULT       (                 ADC_CCR_DUAL_2                  | ADC_
1441:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_ALTERN       (ADC_CCR_DUAL_3                                   | ADC_
1442:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM  (                                                   ADC_
1443:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT  (                                  ADC_CCR_DUAL_1       
1444:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM  (                                  ADC_CCR_DUAL_1 | ADC_
1445:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1446:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1447:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1448:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1449:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_DMA_TRANSFER  Multimode - DMA transfer
1450:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1451:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1452:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_EACH_ADC        (0x00000000UL)                      /*!< ADC multimode
1453:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_RES_32_10B      (ADC_CCR_DAMDF_1                  ) /*!< ADC multimode
1454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_RES_8B          (ADC_CCR_DAMDF_1 | ADC_CCR_DAMDF_0) /*!< ADC multimode
1455:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
ARM GAS  C:\usertemp\cca0PO6L.s 			page 27


1456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1457:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1459:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_TWOSMP_DELAY  Multimode - Delay between two sampling phases
1460:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1461:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1462:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE_5           (0x00000000UL)                                
1463:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES_5          (                                             
1464:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES_5          (                                    ADC_CCR_D
1465:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES_5          (                                    ADC_CCR_D
1466:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES_5_8_BITS   (                  ADC_CCR_DELAY_2 | ADC_CCR_D
1467:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES_5          (                  ADC_CCR_DELAY_2            
1468:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES_5_10_BITS  (                  ADC_CCR_DELAY_2 | ADC_CCR_D
1469:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES            (ADC_CCR_DELAY_3                              
1470:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES_5          (                  ADC_CCR_DELAY_2            
1471:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES_5_12_BITS  (                  ADC_CCR_DELAY_2 | ADC_CCR_D
1472:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES_5          (                  ADC_CCR_DELAY_2 | ADC_CCR_D
1473:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES            (ADC_CCR_DELAY_3                              
1474:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES            (ADC_CCR_DELAY_3                              
1475:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1476:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1477:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1479:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MASTER_SLAVE  Multimode - ADC master or slave
1480:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1481:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1482:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER                (                    ADC_CDR_RDATA_MST) /*!< In multimod
1483:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_SLAVE                 (ADC_CDR_RDATA_SLV                    ) /*!< In multimod
1484:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER_SLAVE          (ADC_CDR_RDATA_SLV | ADC_CDR_RDATA_MST) /*!< In multimod
1485:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1486:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1487:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1488:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1489:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1490:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1491:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
1492:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
1493:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         not timeout values.
1494:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
1495:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         above each literal definition.
1496:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1497:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1498:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1499:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
1500:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       not timeout values.                                                  */
1501:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
1502:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
1503:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
1504:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
1505:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       STM32 series:                                                         */
1506:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 16384/fADC.                   */
1507:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
1508:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
1509:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
1510:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
1511:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
1512:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*         cycles                                                             */
ARM GAS  C:\usertemp\cca0PO6L.s 			page 28


1513:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
1514:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*         configuration.                                                     */
1515:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
1516:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1517:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
1518:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1519:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
1520:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Unit: us                                                                   */
1521:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 10UL)  /*!< Delay for ADC stabilization time (ADC vol
1522:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1523:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
1524:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1525:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* parameter "ts_vrefint").                                                   */
1526:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Unit: us                                                                   */
1527:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US       (5UL)  /*!< Delay for internal voltage reference stabili
1528:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1529:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
1530:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
1531:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* parameter "tSTART_RUN").                                                   */
1532:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Unit: us                                                                   */
1533:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US    ( 26UL)  /*!< Delay for temperature sensor stabilization
1534:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1535:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
1536:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Note: On this STM32 series, a minimum number of ADC clock cycles            */
1537:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
1538:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
1539:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
1540:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
1541:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
1542:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES (  4UL)  /*!< Delay required between ADC end of calibr
1543:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1544:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Fixed timeout value for ADC linearity word bit set/clear delay.                         */
1545:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Values defined to be higher than worst cases: low clock frequency,                      */
1546:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* maximum prescalers.                                                                     */
1547:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Ex of profile low frequency : f_ADC at 4,577 Khz (minimum value                         */
1548:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* according to Data sheet), linearity set/clear bit delay MAX = 6 / f_ADC + 3 cycles AHB  */
1549:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*           6 / 4577 = 1,311ms                                                            */
1550:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* At maximum CPU speed (400 MHz), this means                                              */
1551:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /*    3.58 * 400 MHz = 524400 CPU cycles                                                   */
1552:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define ADC_LINEARITY_BIT_TOGGLE_TIMEOUT         (524400UL)      /*!< ADC linearity set/clear bit d
1553:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1554:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1555:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1557:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1558:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1559:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1560:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1561:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1562:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1563:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
1564:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
1565:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1566:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1567:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1568:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
1569:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
ARM GAS  C:\usertemp\cca0PO6L.s 			page 29


1570:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1571:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1572:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1573:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Write a value in ADC register
1574:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1575:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __REG__ Register to be written
1576:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
1577:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
1578:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1579:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
1580:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1581:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Read a value in ADC register
1583:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1584:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __REG__ Register to be read
1585:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Register value
1586:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1587:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
1588:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1589:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
1590:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1591:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1592:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
1593:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
1594:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1595:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1596:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
1597:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1598:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to convert the resolution defines to STM32H73x/2x ADC3 registers values
1599:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         value corresponding to the ADC3 resolution according to the STM32H73x/2x RefMan.
1600:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The input can be a value from ADC3 resolution (12b, 10b, 8b,6b)
1601:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1602:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1603:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1604:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1605:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1606:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1607:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg 0x00000000UL (value correspodning to ADC3 12 bits)
1608:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg ADC_CFGR_RES_0 = 0x00000004  (value corresponding to ADC3 10 bits)
1609:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg ADC_CFGR_RES_1 = 0x00000008 (value corresponding to ADC3 8 bits)
1610:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg 0x0000001C (value corresponding to ADC3 6 bits)
1611:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This helper macro is applicable for STM32H73x/2x devices only
1612:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1613:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC12_RESOLUTION_TO_ADC3(__ADC_RESOLUTION__)                      \
1614:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          (                                                                     \
1615:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            ((__ADC_RESOLUTION__) == LL_ADC_RESOLUTION_12B)                     \
1616:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****             ?(0x00000000UL)                                                    \
1617:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              :                                                                 \
1618:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ((__ADC_RESOLUTION__) == LL_ADC_RESOLUTION_10B)                   \
1619:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ?(ADC_CFGR_RES_0)                                               \
1620:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                 :                                                              \
1621:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                 ((__ADC_RESOLUTION__) == LL_ADC_RESOLUTION_8B)                 \
1622:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                   ?(ADC_CFGR_RES_1)                                            \
1623:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    :                                                           \
1624:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    ((__ADC_RESOLUTION__) == LL_ADC_RESOLUTION_6B)              \
1625:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                      ?((ADC_CFGR_RES_2|ADC_CFGR_RES_1 | ADC_CFGR_RES_0))       \
1626:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                        :(0x00000000UL)                                         \
ARM GAS  C:\usertemp\cca0PO6L.s 			page 30


1627:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          )
1628:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1629:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
1630:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1631:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1632:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
1633:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
1634:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Example:
1635:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
1636:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           will return decimal number "4".
1637:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
1638:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         number is returned, either defined with number
1639:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
1640:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1641:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
1642:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
1643:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
1644:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
1645:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
1646:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
1647:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1648:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1649:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1650:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1651:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1652:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1653:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1654:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1655:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1656:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1657:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1658:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1659:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1660:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1661:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1662:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1663:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
1664:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
1665:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
1666:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
1667:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
1668:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
1669:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
1670:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
1671:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
1672:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1673:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                        \
1674:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL)                                 \
1675:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ? (                                                                                    \
1676:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS \
1677:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                                    \
1678:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       :                                                                                    \
1679:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       (                                                                                    \
1680:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (uint32_t)POSITION_VAL((__CHANNEL__))                                               \
1681:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                                    \
1682:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
1683:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 31


1684:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1685:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1686:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         from number in decimal format.
1687:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Example:
1688:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1689:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1690:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1691:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1692:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
1693:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
1694:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
1695:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
1696:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
1697:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
1698:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1699:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1700:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1701:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1702:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1703:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1704:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1705:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1706:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1707:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1708:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1709:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1711:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1712:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1713:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1714:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
1715:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
1716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
1717:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
1718:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
1719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
1720:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
1721:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).\n
1722:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1, 2) For ADC channel read back from ADC register,
1723:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                comparison with internal channel parameter to be done
1724:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1725:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                                             
1727:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((__DECIMAL_NB__) <= 9UL)                                                                       
1728:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ? (                                                                                            
1729:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                             |     
1730:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                             |     
1731:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (ADC_SMPR1_REGOFFSET | (((3UL * (__DECIMAL_NB__))) << ADC_CHANNEL_SMPx_BITOFFSET_POS))      
1732:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                                            
1733:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       :                                                                                            
1734:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       (                                                                                            
1735:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                                   
1736:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                                   
1737:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (ADC_SMPR2_REGOFFSET | (((3UL * ((__DECIMAL_NB__) - 10UL))) << ADC_CHANNEL_SMPx_BITOFFSET_PO
1738:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                                            
1739:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
1740:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 32


1741:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1742:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1743:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1744:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1745:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC internal channel:
1746:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1747:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1748:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1749:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1750:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1751:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1752:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1753:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1754:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         returned from ADC registers,
1755:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         because internal and external channels share the same channel
1756:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1757:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         parameters definitions of driver.
1758:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1759:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
1760:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
1761:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
1762:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
1763:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
1764:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
1765:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1766:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1767:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1768:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1769:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1770:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1771:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1772:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1773:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1774:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1775:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1776:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1777:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1778:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1779:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1780:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1781:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
1782:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
1783:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
1784:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
1785:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
1786:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
1787:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
1788:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
1789:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1790:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
1791:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1792:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1793:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
1794:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1795:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1796:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1797:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
ARM GAS  C:\usertemp\cca0PO6L.s 			page 33


1798:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1799:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1800:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1801:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1802:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1803:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1804:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a value defined from parameter definition of
1805:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1806:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1807:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         from ADC registers.
1808:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1809:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
1810:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
1811:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
1812:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
1813:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
1814:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
1815:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1817:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1819:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1820:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1821:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1822:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1823:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1824:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1825:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1826:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1827:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1828:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1830:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1831:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
1832:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
1833:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
1834:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
1835:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
1836:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
1837:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
1838:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
1839:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1840:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1841:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1842:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1843:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1844:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1845:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1846:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1847:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1848:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1849:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1850:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1851:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1852:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1853:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1854:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
ARM GAS  C:\usertemp\cca0PO6L.s 			page 34


1855:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1856:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1857:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1858:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1859:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1860:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1861:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1862:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1864:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1865:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1866:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1867:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1868:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1869:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1870:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1871:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1872:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or a value from functions where a channel number is
1873:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         returned from ADC registers,
1874:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         because internal and external channels share the same channel
1875:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1876:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         parameters definitions of driver.
1877:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1878:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1879:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1880:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1881:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
1882:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
1883:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
1884:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
1885:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
1886:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.
1887:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1888:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1889:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
1890:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC3)
1891:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1892:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((((__ADC_INSTANCE__) == ADC2)                                               \
1893:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     &&(                                                                        \
1894:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC2) ||                       \
1895:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC2)                          \
1896:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
1897:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    )                                                                           \
1898:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    ||                                                                          \
1899:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    (((__ADC_INSTANCE__) == ADC3)                                               \
1900:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     &&(                                                                        \
1901:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR)   ||                       \
1902:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)         ||                       \
1903:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1904:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
1905:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    )                                                                           \
1906:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
1907:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
1908:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1909:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((((__ADC_INSTANCE__) == ADC2)                                               \
1910:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     &&(                                                                        \
1911:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC2) ||                       \
ARM GAS  C:\usertemp\cca0PO6L.s 			page 35


1912:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC2) ||                       \
1913:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR)   ||                       \
1914:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)         ||                       \
1915:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)                               \
1916:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
1917:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    )                                                                           \
1918:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
1919:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
1920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
1921:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
1922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1924:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         from sequencer channel and groups definition.
1925:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example:
1927:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1928:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1929:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1930:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1931:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
1932:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
1933:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
1934:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
1935:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
1936:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
1937:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1938:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1939:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1940:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1941:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1942:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1943:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1944:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1945:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1946:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1947:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1949:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
1951:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1952:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
1953:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
1954:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
1955:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
1956:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
1957:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
1958:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
1959:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
1960:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).\n
1961:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1, 2) For ADC channel read back from ADC register,
1962:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                comparison with internal channel parameter to be done
1963:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1964:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1965:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1966:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_INJECTED
1967:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR_INJECTED
1968:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 36


1969:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1970:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
1971:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
1972:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
1973:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
1974:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
1975:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
1976:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
1977:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
1978:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
1979:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
1980:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
1981:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
1982:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
1983:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
1984:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
1985:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
1986:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
1987:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
1988:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
1989:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
1990:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
1991:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
1992:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
1993:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
1994:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
1995:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
1996:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
1997:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
1998:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
1999:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
2000:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
2001:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
2002:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
2003:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
2004:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
2005:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
2006:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
2007:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
2008:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
2009:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
2010:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
2011:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
2012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
2013:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
2014:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
2015:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
2016:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
2017:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
2018:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
2019:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
2020:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
2021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
2022:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
2023:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
2024:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
2025:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
ARM GAS  C:\usertemp\cca0PO6L.s 			page 37


2026:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
2027:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
2028:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
2029:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
2030:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG          (0)
2031:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_INJ          (0)
2032:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG_INJ
2033:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)(1)
2034:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
2035:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
2036:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)(1)
2037:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(1)
2038:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (1)
2039:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(1)
2040:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(1)
2041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (1)
2042:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     (0)(2)
2043:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     (0)(2)
2044:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ    (2)
2045:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     (0)(2)
2046:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     (0)(2)
2047:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ    (2)
2048:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
2049:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (0) On STM32H7, parameter available only on analog watchdog number: AWD1.\n
2050:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
2051:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.
2052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2053:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
2054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((__GROUP__) == LL_ADC_GROUP_REGULAR)                                                           
2055:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)                 
2056:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       :                                                                                            
2057:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       ((__GROUP__) == LL_ADC_GROUP_INJECTED)                                                       
2058:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)             
2059:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          :                                                                                         
2060:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD
2061:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2062:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2063:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2064:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
2065:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
2066:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         different of 16 bits.
2067:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDThresholds().
2068:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
2069:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         analog watchdog threshold high (on 18 bits):
2070:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
2071:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            (< ADCx param >,
2072:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_1
2073:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            );
2074:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2075:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2076:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2077:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2078:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2079:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2080:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000000 and Max_Data=0xFFFFFF
2081:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000000 and Max_Data=0xFFFFFF
2082:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
ARM GAS  C:\usertemp\cca0PO6L.s 			page 38


2083:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
2084:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
2085:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2086:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2087:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
2088:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
2089:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         different of 16 bits.
2090:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
2091:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
2092:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         analog watchdog threshold high (on 18 bits):
2093:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           < threshold_value_18_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
2094:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
2095:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
2096:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            );
2097:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2098:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2099:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2100:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2101:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2102:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2103:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_16_BITS__ Value between Min_Data=0x000000 and Max_Data=0xFFFFFF
2104:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000000 and Max_Data=0xFFFFFF
2105:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2106:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_16_BITS__) \
2107:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((__AWD_THRESHOLD_16_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
2108:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2109:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2110:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to set the ADC calibration value with both single ended
2111:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and differential modes calibration factors concatenated.
2112:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetCalibrationOffsetFactor().
2113:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example, to set calibration factors single ended to 0x55
2114:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and differential ended to 0x2A:
2115:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           LL_ADC_SetCalibrationOffsetFactor(
2116:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC1,
2117:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(0x55, 0x2A))
2118:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __CALIB_FACTOR_SINGLE_ENDED__ Value between Min_Data=0x00 and Max_Data=0x7F
2119:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __CALIB_FACTOR_DIFFERENTIAL__ Value between Min_Data=0x00 and Max_Data=0x7F
2120:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2121:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2122:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(__CALIB_FACTOR_SINGLE_ENDED__, __CALIB_FACTOR_DIFFERENTIA
2123:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((__CALIB_FACTOR_DIFFERENTIAL__) << ADC_CALFACT_CALFACT_D_Pos) | (__CALIB_FACTOR_SINGLE_ENDED__)
2124:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2125:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2126:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to get the ADC multimode conversion data of ADC master
2127:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or ADC slave from raw value with both ADC conversion data concatenated.
2128:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This macro is intended to be used when multimode transfer by DMA
2129:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is enabled: refer to function @ref LL_ADC_SetMultiDMATransfer().
2130:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         In this case the transferred data need to processed with this macro
2131:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         to separate the conversion data of ADC master and ADC slave.
2132:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_MULTI_MASTER_SLAVE__ This parameter can be one of the following values:
2133:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
2134:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
2135:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_MULTI_CONV_DATA__ Value between Min_Data=0x000 and Max_Data=0xFFF
2136:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2137:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2138:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE(__ADC_MULTI_MASTER_SLAVE__, __ADC_MULTI_CONV_DATA__) 
2139:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((__ADC_MULTI_CONV_DATA__) >> ((ADC_CDR_RDATA_SLV_Pos) & ~(__ADC_MULTI_MASTER_SLAVE__))) & ADC_C
ARM GAS  C:\usertemp\cca0PO6L.s 			page 39


2140:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2141:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2142:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to select, from a ADC instance, to which ADC instance
2143:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         it has a dependence in multimode (ADC master of the corresponding
2144:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC common instance).
2145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of device with multimode available and a mix of
2146:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instances compliant and not compliant with multimode feature,
2147:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instances not compliant with multimode feature are
2148:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         considered as master instances (do not depend to
2149:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         any other ADC instance).
2150:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2151:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval __ADCx__ ADC instance master of the corresponding ADC common instance
2152:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2153:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2154:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ( ( ((__ADCx__) == ADC2)                                                     \
2155:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     )?                                                                         \
2156:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      (ADC1)                                                                    \
2157:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      :                                                                         \
2158:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      (__ADCx__)                                                                \
2159:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2160:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2161:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2162:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
2163:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
2164:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
2165:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
2166:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
2167:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2168:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2169:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval ADC common register instance
2170:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2171:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC3_COMMON)
2172:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2173:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((((__ADCx__) == ADC1) || ((__ADCx__) == ADC2))                              \
2174:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ? (                                                                        \
2175:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (ADC12_COMMON)                                                          \
2176:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
2177:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       :                                                                        \
2178:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       (                                                                        \
2179:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (ADC3_COMMON)                                                           \
2180:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
2181:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2182:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
2183:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)   (ADC12_COMMON)
2184:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
2185:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2186:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2187:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
2188:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC common instance are disabled.
2189:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
2190:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
2191:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2192:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2193:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
2194:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
2195:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
2196:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
ARM GAS  C:\usertemp\cca0PO6L.s 			page 40


2197:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2198:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
2199:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         are disabled.
2200:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
2201:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is enabled.
2202:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2203:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC3_COMMON)
2204:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2205:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((__ADCXY_COMMON__) == ADC12_COMMON)                                        \
2206:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ? (                                                                        \
2207:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (LL_ADC_IsEnabled(ADC1) |                                               \
2208:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         LL_ADC_IsEnabled(ADC2)  )                                              \
2209:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
2210:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       :                                                                        \
2211:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       (                                                                        \
2212:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (LL_ADC_IsEnabled(ADC3))                                                \
2213:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
2214:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2215:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
2216:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2217:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                         (LL_ADC_IsEnabled(ADC1) | LL_ADC_IsEnabled(ADC2))
2218:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
2219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2220:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2221:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
2222:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
2223:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
2224:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
2225:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (refer to reference manual).
2226:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2227:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2228:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2229:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2230:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2231:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2232:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
2233:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2234:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
2235:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (0xFFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))
2236:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2237:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
2238:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2239:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
2240:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
2241:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
2242:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
2243:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (refer to reference manual).
2244:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2245:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2246:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2248:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2249:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: digital value of ADC conversion bit
2250:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2251:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC3_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
2252:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS_ADC3 - 1UL)))
2253:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
ARM GAS  C:\usertemp\cca0PO6L.s 			page 41


2254:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2255:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
2256:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a resolution to another resolution.
2257:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
2258:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
2259:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This parameter can be one of the following values:
2260:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2261:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2262:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2263:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2264:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2265:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
2266:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This parameter can be one of the following values:
2267:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2268:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2269:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2270:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2271:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2272:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
2273:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2274:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_X) || defined(ADC_VER_V5_V90)
2275:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
2276:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
2277:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__) \
2278:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** ( (__ADC_RESOLUTION_CURRENT__ == LL_ADC_RESOLUTION_8B)                                             
2279:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ?(                                                                                               
2280:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ((__DATA__)                                                                                    
2281:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     << (((__ADC_RESOLUTION_CURRENT__) & ~(ADC_CFGR_RES_1 | ADC_CFGR_RES_0) ) >> (ADC_CFGR_RES_BITOF
2282:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))                          
2283:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    )                                                                                               
2284:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   :                                                                                                
2285:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    (                                                                                               
2286:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      (__ADC_RESOLUTION_TARGET__ == LL_ADC_RESOLUTION_8B) \
2287:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ? ( \
2288:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            ((__DATA__)                                                                             
2289:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****             << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))               
2290:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            >> (((__ADC_RESOLUTION_TARGET__) & ~(ADC_CFGR_RES_1 | ADC_CFGR_RES_0) ) >> (ADC_CFGR_RES
2291:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            )                                                                                       
2292:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          :\
2293:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****           (\
2294:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ((__DATA__)                                                                                    
2295:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))                       
2296:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))                         
2297:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      )                                                                                             
2298:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    )\
2299:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****  )
2300:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2301:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2302:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else /* defined(ADC_VER_V5_3) */
2303:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
2304:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
2305:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__) \
2306:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** ( (__ADC_RESOLUTION_CURRENT__ == LL_ADC_RESOLUTION_8B)                                             
2307:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ?(                                                                                               
2308:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ((__DATA__)                                                                                    
2309:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     << (((__ADC_RESOLUTION_CURRENT__) & ~(ADC_CFGR_RES_1 | ADC_CFGR_RES_0) ) >> (ADC_CFGR_RES_BITOF
2310:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))                          
ARM GAS  C:\usertemp\cca0PO6L.s 			page 42


2311:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    )                                                                                               
2312:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   :                                                                                                
2313:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    (                                                                                               
2314:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      (__ADC_RESOLUTION_TARGET__ == LL_ADC_RESOLUTION_8B) \
2315:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        ? ( \
2316:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            ((__DATA__)                                                                             
2317:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****             << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))               
2318:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            >> (((__ADC_RESOLUTION_TARGET__) & ~(ADC_CFGR_RES_1 | ADC_CFGR_RES_0) ) >> (ADC_CFGR_RES
2319:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            )                                                                                       
2320:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          :\
2321:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****           (\
2322:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ((__DATA__)                                                                                    
2323:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))                       
2324:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))                         
2325:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      )                                                                                             
2326:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    )\
2327:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****  )
2328:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2329:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
2330:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2331:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
2332:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2333:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @brief  Helper macro to convert the ADC conversion data from
2334:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         a resolution to another resolution.
2335:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @param  __DATA__ ADC conversion data to be converted
2336:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
2337:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         This parameter can be one of the following values:
2338:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_12B
2339:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_10B
2340:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_8B
2341:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_6B
2342:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
2343:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         This parameter can be one of the following values:
2344:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_12B
2345:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_10B
2346:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_8B
2347:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** *         @arg @ref LL_ADC_RESOLUTION_6B
2348:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** * @retval ADC conversion data to the requested resolution
2349:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** */
2350:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION_ADC3(__DATA__,\
2351:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
2352:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)            \
2353:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((__DATA__)                                                                 \
2354:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS_ADC3 - 1UL)))  \
2355:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS_ADC3 - 1UL))     \
2356:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2357:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
2358:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2359:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
2360:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
2361:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2362:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2363:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2364:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
2365:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 16 bits)
2366:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                       (unit: digital value).
2367:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 43


2368:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2369:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2370:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2371:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2373:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
2374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2375:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
2376:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                       __ADC_DATA__,\
2377:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                      \
2378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
2379:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
2380:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2381:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2382:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2383:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
2384:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
2385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         reference VrefInt.
2386:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
2387:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         stored in system memory for each device during production.
2388:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
2389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         connected to pin Vref+.
2390:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
2391:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and internally bonded to pin Vdda.
2392:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of internal voltage reference
2393:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 16 bits,
2394:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2395:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal voltage reference VrefInt.
2396:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2397:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversion data to 16 bits.
2398:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 16 bits)
2399:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
2400:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2401:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2402:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2403:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2404:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2405:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2406:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
2407:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2408:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
2409:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                          __ADC_RESOLUTION__)                   \
2410:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
2411:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                 \
2412:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                        (__ADC_RESOLUTION__),                   \
2413:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                        LL_ADC_RESOLUTION_16B)                  \
2414:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2415:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2416:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2417:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2418:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2419:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
2420:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         stored in system memory for each device during production.
2421:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Calculation formula:
2422:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
2423:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
2424:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
ARM GAS  C:\usertemp\cca0PO6L.s 			page 44


2425:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
2426:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
2427:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
2428:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
2429:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
2430:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
2431:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
2432:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
2433:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  parameters are correct (address and data).
2434:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
2435:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
2436:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  less accurate than calibrated values),
2437:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
2438:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2439:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2440:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2441:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2442:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2443:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of temperature sensor
2444:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         corresponds to a resolution of 16 bits,
2445:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2446:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         temperature sensor.
2447:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2448:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversion data to 16 bits.
2449:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
2450:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
2451:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
2452:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
2453:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                 sensor voltage has been measured.
2454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This parameter can be one of the following values:
2455:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2457:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2459:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2460:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2461:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2462:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
2463:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
2464:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                   __ADC_RESOLUTION__)                              \
2465:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
2466:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                     (__ADC_RESOLUTION__),          \
2467:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                     LL_ADC_RESOLUTION_16B)         \
2468:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    * (__VREFANALOG_VOLTAGE__))                                     \
2469:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                   / TEMPSENSOR_CAL_VREFANALOG)                                     \
2470:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
2471:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****      ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
2472:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
2473:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    ) + TEMPSENSOR_CAL1_TEMP                                                        \
2474:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2475:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2476:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2477:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2479:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
2480:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (refer to device datasheet).
2481:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Calculation formula:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 45


2482:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
2483:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
2484:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
2485:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                   (unit: digital value)
2486:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
2487:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
2488:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
2489:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
2490:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
2491:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  of the current device has characteristics in line with
2492:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  datasheet typical values.
2493:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
2494:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
2495:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  temperature calculation will be more accurate using
2496:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
2497:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2498:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2499:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2500:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2501:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2502:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 16 bits
2503:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
2504:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 16 bits.
2505:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
2506:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                       On STM32H7, refer to device datasheet parameter "Avg_Slop
2507:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
2508:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                       On STM32H7, refer to device datasheet parameter "V30" (co
2509:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
2510:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) voltage (unit: mV)
2511:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
2512:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
2513:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This parameter can be one of the following values:
2514:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2515:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2516:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2517:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2518:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2519:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2520:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2521:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
2522:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
2523:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
2524:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
2525:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
2526:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                              __ADC_RESOLUTION__)               \
2527:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   ((( (                                                                        \
2528:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
2529:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                   / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
2530:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                  * 1000UL)                                                     \
2531:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        -                                                                       \
2532:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****        (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
2533:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                  * 1000UL)                                                     \
2534:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       )                                                                        \
2535:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                 \
2536:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                     \
2537:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   )
2538:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 46


2539:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2540:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
2541:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2542:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2543:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2544:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
2545:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2546:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2547:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2548:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
2549:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
2550:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
2551:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2552:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2553:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
2554:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
2555:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2557:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2558:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
2559:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
2560:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
2561:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   These ADC registers are data registers:
2562:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
2563:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
2564:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
2565:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
2566:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example:
2567:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
2568:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
2569:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
2570:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
2571:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
2572:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
2573:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
2574:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
2575:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
2576:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_DMA_GetRegAddr\n
2577:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CDR      RDATA_MST      LL_ADC_DMA_GetRegAddr\n
2578:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_DMA_GetRegAddr
2579:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
2580:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
2581:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
2582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA_MULTI (1)
2583:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
2584:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) Available on devices with several ADC instances.
2585:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval ADC register address
2586:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2587:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
2588:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2589:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t data_reg_addr;
2590:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2591:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (Register == LL_ADC_DMA_REG_REGULAR_DATA)
2592:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
2593:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Retrieve address of register DR */
2594:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     data_reg_addr = (uint32_t) & (ADCx->DR);
2595:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
ARM GAS  C:\usertemp\cca0PO6L.s 			page 47


2596:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else /* (Register == LL_ADC_DMA_REG_REGULAR_DATA_MULTI) */
2597:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
2598:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Retrieve address of register CDR */
2599:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     data_reg_addr = (uint32_t) & ((__LL_ADC_COMMON_INSTANCE(ADCx))->CDR);
2600:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
2601:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2602:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return data_reg_addr;
2603:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2604:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2605:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2606:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
2607:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2608:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2609:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
2610:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
2611:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2612:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2613:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2614:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
2615:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, if ADC group injected is used, some
2616:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         clock ratio constraints between ADC clock and AHB clock
2617:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         must be respected.
2618:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to reference manual.
2619:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2620:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
2621:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2622:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2623:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2624:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2625:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_SetCommonClock\n
2626:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_SetCommonClock
2627:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2628:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2629:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
2630:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
2631:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2632:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2633:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2634:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2635:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2636:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2637:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2638:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2639:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2640:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2641:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2642:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2643:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2644:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2645:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
2646:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2647:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
2648:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2649:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC, CommonClock);
2650:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2651:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2652:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
ARM GAS  C:\usertemp\cca0PO6L.s 			page 48


2653:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
2654:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_GetCommonClock\n
2655:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_GetCommonClock
2656:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2657:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2658:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2659:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
2660:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2661:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2662:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2663:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2664:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2665:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2666:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2667:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2668:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2669:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2670:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2671:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2672:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2673:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2674:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2675:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON)
2676:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2677:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC));
2678:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2679:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2680:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2681:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to internal
2682:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
2683:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   One or several values can be selected.
2684:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2685:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2686:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2687:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2688:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2689:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         temperature sensor stabilization time.
2690:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet.
2691:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2692:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
2693:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2694:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2695:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a sampling time minimum value is required.
2696:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet.
2697:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2698:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
2699:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2700:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2701:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2702:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2703:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
2704:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
2705:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalCh
2706:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2707:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2708:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2709:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
ARM GAS  C:\usertemp\cca0PO6L.s 			page 49


2710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2711:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2712:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2713:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
2714:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2715:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
2716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2717:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
2718:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2720:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2721:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
2722:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
2723:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   One or several values can be selected.
2724:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2725:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
2727:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
2728:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_GetCommonPathInternalCh
2729:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2730:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2731:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
2732:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2733:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2734:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2735:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2736:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2737:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
2738:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2739:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
2740:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2741:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2742:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2743:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2744:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2745:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Add paths to the current configuration.
2746:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   One or several values can be selected.
2747:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2748:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2749:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2750:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2751:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2752:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         temperature sensor stabilization time.
2753:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet.
2754:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2755:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
2756:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2757:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2758:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a sampling time minimum value is required.
2759:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet.
2760:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChAdd\n
2761:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChAdd\n
2762:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      VBATEN        LL_ADC_SetCommonPathInternalChAdd
2763:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2764:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2765:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2766:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
ARM GAS  C:\usertemp\cca0PO6L.s 			page 50


2767:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2768:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2769:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2770:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
2771:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2772:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChAdd(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2773:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2774:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   SET_BIT(ADCxy_COMMON->CCR, PathInternal);
2775:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2776:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2777:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2778:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2779:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2780:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Remove paths to the current configuration.
2781:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   One or several values can be selected.
2782:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2783:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2784:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChRem\n
2785:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChRem\n
2786:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CCR      VBATEN        LL_ADC_SetCommonPathInternalChRem
2787:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2788:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2789:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2790:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2791:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2792:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2793:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2794:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
2795:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2796:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChRem(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2797:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2798:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCxy_COMMON->CCR, PathInternal);
2799:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2800:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2801:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2802:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
2803:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2804:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2805:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
2806:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
2807:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2808:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2809:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2810:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
2811:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2812:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
2813:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without having to perform a new calibration using
2814:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
2815:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with differential mode available:
2816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Calibration of offset is specific to each of
2817:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         single-ended and differential modes
2818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (calibration factor must be specified for each of these
2819:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
2820:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         requires their calibration).
2821:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Calibration of linearity is common to both
2822:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         single-ended and differential modes
2823:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (calibration factor can be specified only once).
ARM GAS  C:\usertemp\cca0PO6L.s 			page 51


2824:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of setting calibration factors of both modes single ended
2825:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and differential (parameter LL_ADC_BOTH_SINGLE_DIFF_ENDED):
2826:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         both calibration factors must be concatenated.
2827:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         To perform this processing, use helper macro
2828:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_CALIB_FACTOR_SINGLE_DIFF().
2829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2830:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
2831:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
2832:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on group regular.
2833:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_SetCalibrationOffsetFactor\n
2834:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_SetCalibrationOffsetFactor
2835:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
2836:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2837:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2838:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2839:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOTH_SINGLE_DIFF_ENDED
2840:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
2841:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
2842:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2843:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationOffsetFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff, uint
2844:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2845:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)  
2846:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT_RES13,
2847:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
2848:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              CalibrationFactor << (((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK) >> ADC_SINGLED
2849:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
2850:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
2851:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
2852:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              CalibrationFactor << (((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK) >> ADC_SINGLED
2853:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
2854:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2855:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2856:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2857:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
2858:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2859:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
2860:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
2861:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with differential mode available:
2862:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Calibration of offset is specific to each of
2863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         single-ended and differential modes
2864:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Calibration of linearity is common to both
2865:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         single-ended and differential modes
2866:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_GetCalibrationOffsetFactor\n
2867:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_GetCalibrationOffsetFactor
2868:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
2869:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2870:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2871:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2872:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
2873:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2874:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationOffsetFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff)
2875:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2876:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Retrieve bits with position in register depending on parameter           */
2877:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* "SingleDiff".                                                            */
2878:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameter used with mask "ADC_SINGLEDIFF_CALIB_FACTOR_MASK" because      */
2879:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
2880:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
ARM GAS  C:\usertemp\cca0PO6L.s 			page 52


2881:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT_RES13, (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK)) 
2882:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
2883:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT, (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK)) >> ((S
2884:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
2885:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2886:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2887:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2888:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC Linear calibration factor in the mode single-ended.
2889:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function is intended to set linear calibration parameters
2890:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without having to perform a new calibration using
2891:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
2892:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2893:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
2894:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
2895:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on group regular.
2896:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CALFACT2  LINCALFACT      LL_ADC_SetCalibrationLinearFactor\n
2897:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CALFACT2  LINCALFACT      LL_ADC_SetCalibrationLinearFactor
2898:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
2899:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  LinearityWord This parameter can be one of the following values:
2900:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD1
2901:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD2
2902:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD3
2903:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD4
2904:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD5
2905:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD6
2906:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x3FFFFFFF
2907:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
2908:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2909:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationLinearFactor(ADC_TypeDef *ADCx, uint32_t LinearityWord, u
2910:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2911:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
2912:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx != ADC3)
2913:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
2914:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     uint32_t timeout_cpu_cycles = ADC_LINEARITY_BIT_TOGGLE_TIMEOUT;
2915:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CALFACT2_RES14, ADC_CALFACT2_LINCALFACT, CalibrationFactor);
2916:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CR, ADC_CR_ADCALLIN, LinearityWord);
2917:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     while ((READ_BIT(ADCx->CR, LinearityWord) == 0UL) && (timeout_cpu_cycles > 0UL))
2918:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
2919:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       timeout_cpu_cycles--;
2920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
2921:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
2922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else /* ADC_VER_V5_V90 */
2923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t timeout_cpu_cycles = ADC_LINEARITY_BIT_TOGGLE_TIMEOUT;
2924:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT2, ADC_CALFACT2_LINCALFACT, CalibrationFactor);
2925:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR, ADC_CR_ADCALLIN, LinearityWord);
2926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   while ((READ_BIT(ADCx->CR, LinearityWord) == 0UL) && (timeout_cpu_cycles > 0UL))
2927:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
2928:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     timeout_cpu_cycles--;
2929:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
2930:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
2931:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2932:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2933:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2934:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC Linear calibration factor in the mode single-ended.
2935:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
2936:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
2937:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CALFACT2  LINCALFACT      LL_ADC_GetCalibrationLinearFactor\n
ARM GAS  C:\usertemp\cca0PO6L.s 			page 53


2938:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CALFACT2  LINCALFACT      LL_ADC_GetCalibrationLinearFactor
2939:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
2940:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  LinearityWord This parameter can be one of the following values:
2941:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD1
2942:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD2
2943:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD3
2944:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD4
2945:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD5
2946:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_LINEARITY_WORD6
2947:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3FFFFFFF
2948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2949:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationLinearFactor(ADC_TypeDef *ADCx, uint32_t LinearityWor
2950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2951:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t timeout_cpu_cycles = ADC_LINEARITY_BIT_TOGGLE_TIMEOUT;
2952:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, LinearityWord);
2953:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   while ((READ_BIT(ADCx->CR, LinearityWord) != 0UL) && (timeout_cpu_cycles > 0UL))
2954:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
2955:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     timeout_cpu_cycles--;
2956:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
2957:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
2958:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT2_RES14, ADC_CALFACT2_LINCALFACT));
2959:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
2960:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT2, ADC_CALFACT2_LINCALFACT));
2961:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
2962:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
2963:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
2964:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC resolution.
2965:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2966:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2967:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2968:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
2969:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2970:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
2971:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_SetResolution
2972:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
2973:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
2974:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
2975:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
2976:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2977:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2978:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2979:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
2980:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
2981:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
2982:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
2983:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_3)
2984:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2985:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
2986:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
2987:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #elif defined(ADC_VER_V5_V90)
2988:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
2989:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
2990:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CFGR, ADC3_CFGR_RES, ((__LL_ADC12_RESOLUTION_TO_ADC3(Resolution)  & (ADC_CFGR_
2991:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
2992:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
2993:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
2994:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     if ((DBGMCU->IDCODE & 0x30000000UL) == 0x10000000UL) /* Rev.Y */
ARM GAS  C:\usertemp\cca0PO6L.s 			page 54


2995:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
2996:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
2997:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
2998:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     else /* Rev.V */
2999:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3000:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       if (LL_ADC_RESOLUTION_8B == Resolution)
3001:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       {
3002:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution | 0x0000000CUL);
3003:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       }
3004:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       else
3005:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       {
3006:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
3007:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       }
3008:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3009:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3010:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else /* ADC_VER_V5_V90 */
3011:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if ((DBGMCU->IDCODE & 0x30000000UL) == 0x10000000UL) /* Rev.Y */
3012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3013:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
3014:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3015:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else /* Rev.V */
3016:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3017:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     if (LL_ADC_RESOLUTION_8B == Resolution)
3018:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3019:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution | 0x0000000CUL);
3020:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     else
3022:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3023:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
3024:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3025:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3026:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3027:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_X*/
3028:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3029:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3030:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3031:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC resolution.
3032:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
3033:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         dependencies to ADC resolutions.
3034:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_GetResolution
3035:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3036:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3037:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_16B
3038:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_14B
3039:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
3040:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
3041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
3042:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    *         @arg @ref LL_ADC_RESOLUTION_6B   **Value available for ADC3 on STM32H72x/3x devices on
3043:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3044:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(ADC_TypeDef *ADCx)
3045:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3046:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined (ADC_VER_V5_3)
3047:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3048:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
3049:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3050:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #elif defined(ADC_VER_V5_V90)
3051:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
ARM GAS  C:\usertemp\cca0PO6L.s 			page 55


3052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3053:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t)(READ_BIT(ADCx->CFGR, ADC3_CFGR_RES));
3054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3055:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3056:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3057:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     if ((uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES)) == 0x0000001CUL)
3058:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3059:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       return (LL_ADC_RESOLUTION_8B);
3060:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3061:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     else
3062:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3063:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
3064:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3065:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3066:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3067:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else  /* ADC_VER_V5_V90 */
3068:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if ((DBGMCU->IDCODE & 0x30000000UL) == 0x10000000UL) /* Rev.Y */
3069:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3070:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
3071:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3072:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else /* Rev.V */
3073:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3074:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     if ((uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES)) == 0x0000001CUL)
3075:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3076:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       return (LL_ADC_RESOLUTION_8B);
3077:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3078:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     else
3079:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3080:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
3081:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3082:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3083:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3084:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_X */
3085:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3086:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3087:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3088:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC low power mode.
3089:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Description of ADC low power modes:
3090:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
3091:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
3092:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           in order to reduce power consumption.
3093:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
3094:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
3095:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
3096:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           has been retrieved by user software.
3097:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
3098:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           other conversion.
3099:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
3100:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
3101:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
3102:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           applications.
3103:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           How to use this low power mode:
3104:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
3105:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
3106:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
3107:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
3108:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
ARM GAS  C:\usertemp\cca0PO6L.s 			page 56


3109:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
3110:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
3111:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
3112:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
3113:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
3114:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC conversion start.
3115:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
3116:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
3117:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
3118:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
3119:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
3120:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
3121:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
3122:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
3123:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of delay during which ADC was idle.
3124:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
3125:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
3126:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC channel.
3127:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3128:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3129:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3130:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
3131:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_SetLowPowerMode
3132:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3133:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
3134:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
3135:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
3136:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3137:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3138:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
3139:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3140:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_AUTDLY, LowPowerMode);
3141:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3142:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3143:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3144:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC low power mode:
3145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Description of ADC low power modes:
3146:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
3147:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
3148:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           in order to reduce power consumption.
3149:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
3150:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
3151:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
3152:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           has been retrieved by user software.
3153:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
3154:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           other conversion.
3155:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
3156:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
3157:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
3158:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           applications.
3159:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           How to use this low power mode:
3160:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
3161:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
3162:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
3163:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
3164:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
3165:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
ARM GAS  C:\usertemp\cca0PO6L.s 			page 57


3166:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
3167:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
3168:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
3169:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
3170:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC conversion start.
3171:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
3172:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
3173:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
3174:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
3175:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
3176:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
3177:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
3178:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
3179:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of delay during which ADC was idle.
3180:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
3181:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
3182:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC channel.
3183:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_GetLowPowerMode
3184:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3185:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3186:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
3187:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
3188:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3189:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(ADC_TypeDef *ADCx)
3190:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3191:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_AUTDLY));
3192:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3193:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3194:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3195:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC selected Channel.
3196:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function set the pre-selection of channel configuration.
3197:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Caution: Channel selections is dependent to ADC instance and IP version:
3198:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         For STM32H72x/3x This is applicable only for ADC1/ADC2
3199:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         For Rest of STM32H7xxx This is applicable only all the ADCs instances.
3200:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * 
3201:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3202:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3203:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           
3204:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           
3205:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           
3206:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           
3207:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           
3208:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           
3209:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3210:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3211:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3212:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3213:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3214:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3215:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3216:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3217:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3218:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3220:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3221:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3222:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
ARM GAS  C:\usertemp\cca0PO6L.s 			page 58


3223:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3224:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3225:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelPreSelection(ADC_TypeDef *ADCx, uint32_t Channel)
3226:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3227:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
3228:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     if (ADCx != ADC3)
3229:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
3230:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       /* ADC channels preselection */
3231:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       ADCx->PCSEL_RES0 |= (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(Channel) & 0x1FUL));
3232:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
3233:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
3234:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* ADC channels preselection */
3235:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     ADCx->PCSEL |= (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(Channel) & 0x1FUL));
3236:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
3237:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3238:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3239:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3240:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC selected offset number 1, 2, 3 or 4.
3241:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function set the 2 items of offset configuration:
3242:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC channel to which the offset programmed will be applied
3243:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (independently of channel mapped on ADC group regular
3244:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           or group injected)
3245:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Offset level (offset to be subtracted from the raw
3246:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           converted data).
3247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3248:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
3249:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         are set to 0.
3250:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function enables the offset, by default. It can be forced
3251:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         to disable state using function LL_ADC_SetOffsetState().
3252:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If a channel is mapped on several offsets numbers, only the offset
3253:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         with the lowest value is considered for the subtraction.
3254:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3255:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3256:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3257:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
3258:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On STM32H7, some fast channels are available: fast analog inputs
3259:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN0..5).
3260:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_SetOffset\n
3261:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR1     OFFSET1        LL_ADC_SetOffset\n
3262:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR1     OFFSET1_EN     LL_ADC_SetOffset\n
3263:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_SetOffset\n
3264:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_SetOffset\n
3265:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffset\n
3266:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_SetOffset\n
3267:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_SetOffset\n
3268:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffset\n
3269:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_SetOffset\n
3270:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_SetOffset\n
3271:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffset
3272:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3273:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3274:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3275:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3276:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3277:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3278:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3279:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
ARM GAS  C:\usertemp\cca0PO6L.s 			page 59


3280:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
3281:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
3282:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
3283:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
3284:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
3285:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3286:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3287:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3288:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3289:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3290:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3291:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3292:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3293:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3294:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3295:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3296:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3297:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3298:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
3299:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
3300:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
3301:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
3302:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
3303:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
3304:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
3305:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
3306:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
3307:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
3308:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
3309:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  OffsetLevel Value between Min_Data=0x000 and Max_Data=0x1FFFFFF
3310:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3311:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3312:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffset(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Channel, uint32
3313:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3314:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3315:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
3316:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3317:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3318:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
3319:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
3320:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSET1_EN | (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
3321:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3322:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3323:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
3324:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3325:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
3326:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
3327:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
3328:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3329:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3330:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3331:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3332:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3333:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Channel to which the offset programmed will be applied
3334:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (independently of channel mapped on ADC group regular
3335:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or group injected)
3336:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Usage of the returned channel number:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 60


3337:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3338:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3339:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3340:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3341:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3342:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3343:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           as parameter for another function.
3344:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To get the channel number in decimal format:
3345:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           process the returned value with the helper macro
3346:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3347:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On STM32H7, some fast channels are available: fast analog inputs
3348:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN0..5).
3349:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_GetOffsetChannel\n
3350:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_GetOffsetChannel\n
3351:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_GetOffsetChannel\n
3352:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_GetOffsetChannel
3353:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3354:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3355:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3356:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3357:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3358:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3359:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3360:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
3361:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
3362:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
3363:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
3364:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
3365:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
3366:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3367:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3368:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3369:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3370:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3371:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3373:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3375:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3376:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3377:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3379:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
3380:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
3381:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
3382:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
3383:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
3384:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
3385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
3386:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
3387:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
3388:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
3389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).\n
3390:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1, 2) For ADC channel read back from ADC register,
3391:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                comparison with internal channel parameter to be done
3392:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3393:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
ARM GAS  C:\usertemp\cca0PO6L.s 			page 61


3394:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetChannel(ADC_TypeDef *ADCx, uint32_t Offsety)
3395:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3396:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3397:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3398:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_CH);
3399:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3400:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3401:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3402:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3403:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Offset level (offset to be subtracted from the raw
3404:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         converted data).
3405:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3406:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
3407:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         are set to 0.
3408:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1        LL_ADC_GetOffsetLevel\n
3409:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_GetOffsetLevel\n
3410:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_GetOffsetLevel\n
3411:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_GetOffsetLevel
3412:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3413:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3414:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3415:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3416:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3417:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3418:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x1FFFFFF
3419:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3420:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetLevel(ADC_TypeDef *ADCx, uint32_t Offsety)
3421:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3422:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3423:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3424:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1);
3425:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3426:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3427:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3428:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3429:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set data right shift for the ADC selected offset number 1, 2, 3 or 4:
3430:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         signed offset saturation if enabled or disabled.
3431:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    RSHIFT          LL_ADC_SetDataRightShift\n
3432:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3433:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3434:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3435:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3436:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3437:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3438:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  RigthShift This parameter can be one of the following values:
3439:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_RSHIFT_ENABLE
3440:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_RSHIFT_DISABLE
3441:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned None
3442:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3443:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataRightShift(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t RigthSh
3444:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3445:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_RSHIFT1 | ADC_CFGR2_RSHIFT2 | ADC_CFGR2_RSHIFT3 | ADC_CFGR2_RS
3446:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3447:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3448:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3449:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get data right shift for the ADC selected offset number 1, 2, 3 or 4:
3450:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         signed offset saturation if enabled or disabled.
ARM GAS  C:\usertemp\cca0PO6L.s 			page 62


3451:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    RSHIFT          LL_ADC_GetDataRightShift\n
3452:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3453:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3455:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3457:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3459:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_RSHIFT_ENABLE
3460:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_RSHIFT_DISABLE
3461:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3462:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataRightShift(ADC_TypeDef *ADCx, uint32_t Offsety)
3463:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3464:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->CFGR2, (ADC_CFGR2_RSHIFT1 << (Offsety & 0x1FUL)))) >> (Offsety 
3465:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3466:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3467:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3468:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set signed saturation for the ADC selected offset number 1, 2, 3 or 4:
3469:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         signed offset saturation if enabled or disabled.
3470:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     SSATE          LL_ADC_SetOffsetSignedSaturation\n
3471:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     SSATE          LL_ADC_SetOffsetSignedSaturation\n
3472:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     SSATE          LL_ADC_SetOffsetSignedSaturation\n
3473:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     SSATE          LL_ADC_SetOffsetSignedSaturation
3474:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3475:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3476:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3477:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3479:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3480:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  OffsetSignedSaturation This parameter can be one of the following values:
3481:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGNED_SATURATION_ENABLE
3482:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGNED_SATURATION_DISABLE
3483:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned None
3484:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3485:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetSignedSaturation(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t
3486:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3487:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
3488:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3489:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3490:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Function not available on this instance */
3491:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3492:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3493:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
3494:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3495:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3496:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg, ADC_OFR1_SSATE, OffsetSignedSaturation);
3497:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3498:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3499:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3500:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3501:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get signed saturation for the ADC selected offset number 1, 2, 3 or 4:
3502:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         signed offset saturation if enabled or disabled.
3503:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     SSATE          LL_ADC_GetOffsetSignedSaturation\n
3504:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     SSATE          LL_ADC_GetOffsetSignedSaturation\n
3505:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     SSATE          LL_ADC_GetOffsetSignedSaturation\n
3506:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     SSATE          LL_ADC_GetOffsetSignedSaturation
3507:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\usertemp\cca0PO6L.s 			page 63


3508:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3509:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3510:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3511:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3512:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3513:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3514:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGNED_SATURATION_ENABLE
3515:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGNED_SATURATION_DISABLE
3516:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3517:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetSignedSaturation(ADC_TypeDef *ADCx, uint32_t Offsety)
3518:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3519:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
3520:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3521:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3522:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Function not available on this instance */
3523:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return 0UL;
3524:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3525:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3526:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
3527:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3528:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3529:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t) READ_BIT(*preg, ADC_OFR1_SSATE);
3530:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3531:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3532:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3533:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
3534:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3535:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3536:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         choose offset saturation mode.
3537:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3538:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3539:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3540:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
3541:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     SATEN          LL_ADC_SetOffsetSaturation\n
3542:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     SATEN          LL_ADC_SetOffsetSaturation\n
3543:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     SATEN          LL_ADC_SetOffsetSaturation\n
3544:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     SATEN          LL_ADC_SetOffsetSaturation
3545:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3546:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3547:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3548:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3549:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3550:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3551:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  OffsetSaturation This parameter can be one of the following values:
3552:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_ENABLE
3553:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_DISABLE
3554:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3555:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetSaturation(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Offse
3557:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3558:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3559:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3560:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3561:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3562:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
3563:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_SATEN,
3564:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                OffsetSaturation);
ARM GAS  C:\usertemp\cca0PO6L.s 			page 64


3565:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3566:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3567:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3568:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3569:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3570:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         offset saturation if enabled or disabled.
3571:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     SATEN          LL_ADC_GetOffsetSaturation\n
3572:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     SATEN          LL_ADC_GetOffsetSaturation\n
3573:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     SATEN          LL_ADC_GetOffsetSaturation\n
3574:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     SATEN          LL_ADC_GetOffsetSaturation
3575:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3576:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3577:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3578:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3579:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3580:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3581:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_ENABLE
3583:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SATURATION_DISABLE
3584:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3585:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetSaturation(ADC_TypeDef *ADCx, uint32_t Offsety)
3586:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3587:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3588:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3589:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3590:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3591:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t) READ_BIT(*preg, ADC3_OFR1_SATEN);
3592:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }else
3593:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3594:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return 0UL;
3595:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3596:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3597:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3598:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3599:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3600:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         choose offset sign.
3601:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3602:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3603:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3604:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
3605:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     OFFSETPOS      LL_ADC_SetOffsetSign\n
3606:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSETPOS      LL_ADC_SetOffsetSign\n
3607:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSETPOS      LL_ADC_SetOffsetSign\n
3608:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSETPOS      LL_ADC_SetOffsetSign
3609:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3610:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3611:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3612:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3613:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3614:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3615:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  OffsetSign This parameter can be one of the following values:
3616:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_NEGATIVE
3617:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_POSITIVE
3618:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3619:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3620:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetSign(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetSign)
3621:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
ARM GAS  C:\usertemp\cca0PO6L.s 			page 65


3622:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3623:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3624:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3625:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3626:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
3627:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSETPOS,
3628:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                OffsetSign);
3629:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3630:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3631:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3632:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3633:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3634:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         offset sign if positive or negative.
3635:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     OFFSETPOS      LL_ADC_GetOffsetSign\n
3636:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSETPOS      LL_ADC_GetOffsetSign\n
3637:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSETPOS      LL_ADC_GetOffsetSign\n
3638:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSETPOS      LL_ADC_GetOffsetSign
3639:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3640:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3641:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3642:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3643:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3644:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3645:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3646:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_NEGATIVE
3647:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_SIGN_POSITIVE
3648:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3649:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetSign(ADC_TypeDef *ADCx, uint32_t Offsety)
3650:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3651:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3652:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3653:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3654:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3655:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t) READ_BIT(*preg, ADC3_OFR1_OFFSETPOS);
3656:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3657:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3658:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   { 
3659:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return 0UL;
3660:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3661:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3662:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3663:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3664:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3665:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         force offset state disable or enable
3666:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without modifying offset channel or offset value.
3667:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function should be needed only in case of offset to be
3668:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         enabled-disabled dynamically, and should not be needed in other cases:
3669:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         function LL_ADC_SetOffset() automatically enables the offset.
3670:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3671:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3672:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3673:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
3674:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_SetOffsetState\n
3675:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffsetState\n
3676:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffsetState\n
3677:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffsetState
3678:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\usertemp\cca0PO6L.s 			page 66


3679:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3680:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3681:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3682:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3683:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3684:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  OffsetState This parameter can be one of the following values:
3685:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3686:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3687:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3688:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3689:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetStat
3690:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3691:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3692:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3693:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3694:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
3695:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_OFR1_OFFSET1_EN,
3696:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                OffsetState);
3697:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3698:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3699:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3700:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
3701:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_SSATE,
3702:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                OffsetState);
3703:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3704:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3705:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3706:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3707:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3708:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         offset state disabled or enabled.
3709:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_GetOffsetState\n
3710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_GetOffsetState\n
3711:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_GetOffsetState\n
3712:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_GetOffsetState
3713:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3714:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3715:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3717:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3718:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3720:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3721:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3722:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3723:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety)
3724:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3725:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
3727:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3728:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t) READ_BIT(*preg, ADC3_OFR1_OFFSET1_EN);
3729:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3730:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3731:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3732:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t) READ_BIT(*preg, ADC_OFR1_SSATE);
3733:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3734:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3735:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 67


3736:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
3737:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3738:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3739:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
3740:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3741:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3742:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
3743:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
3744:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3745:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3746:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3747:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
3748:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3749:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         external interrupt line).
3750:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
3751:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         also set trigger polarity to rising edge
3752:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
3753:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
3754:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
3755:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
3756:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3757:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3758:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3759:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3760:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3761:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
3762:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_SetTriggerSource\n
3763:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_SetTriggerSource
3764:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3765:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
3766:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3767:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1
3768:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2
3769:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3770:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3771:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3772:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4
3773:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3774:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3775:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3776:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3777:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3778:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3779:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3780:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3781:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3782:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4
3783:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG1
3784:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG3
3785:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM1_OUT
3786:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM2_OUT
3787:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM3_OUT
3788:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3789:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3790:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
3791:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3792:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN | ADC_CFGR_EXTSEL, TriggerSource);
ARM GAS  C:\usertemp\cca0PO6L.s 			page 68


3793:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3794:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3795:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3796:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
3797:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3798:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         external interrupt line).
3799:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
3800:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal (SW start) or external, without detail
3801:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
3802:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (equivalent to
3803:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
3804:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
3805:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3806:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3807:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_GetTriggerSource\n
3808:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_GetTriggerSource
3809:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3810:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3811:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3812:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1
3813:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2
3814:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3815:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3817:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4
3818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3819:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3820:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3821:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3822:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3823:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3824:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3825:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3826:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3827:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4
3828:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG1
3829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_HRTIM_TRG3
3830:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM1_OUT
3831:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM2_OUT
3832:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_LPTIM3_OUT
3833:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3834:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(ADC_TypeDef *ADCx)
3835:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3836:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->CFGR, ADC_CFGR_EXTSEL | ADC_CFGR_EXTEN);
3837:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3838:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
3839:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* corresponding to ADC_CFGR_EXTEN {0; 1; 2; 3}.                            */
3840:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t ShiftExten = ((TriggerSource & ADC_CFGR_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS - 2U
3841:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3842:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR_EXTEN and ADC_CFGR_EXTSEL         */
3843:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
3844:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((TriggerSource
3845:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> ShiftExten) & ADC_CFGR_EXTSEL)
3846:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> ShiftExten) & ADC_CFGR_EXTEN)
3847:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          );
3848:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3849:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 69


3850:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3851:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
3852:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or external.
3853:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
3854:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
3855:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
3856:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
3857:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3858:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
3859:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
3860:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3861:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
3862:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN)) ? 1
3864:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3865:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3866:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3867:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
3868:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3869:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3870:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3871:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3872:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
3873:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_SetTriggerEdge
3874:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3875:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
3876:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3877:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3878:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3879:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3880:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3881:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
3882:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3883:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN, ExternalTriggerEdge);
3884:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3885:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3886:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3887:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
3888:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3889:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_GetTriggerEdge
3890:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3891:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3892:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3893:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3894:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3895:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3896:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(ADC_TypeDef *ADCx)
3897:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3898:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN));
3899:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3900:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3901:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
3902:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3903:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC sampling mode.
3904:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function set the ADC conversion sampling mode
3905:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This mode applies to regular group only.
3906:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Set sampling mode is applied to all conversion of regular group.
ARM GAS  C:\usertemp\cca0PO6L.s 			page 70


3907:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3908:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
3909:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3910:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
3911:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    BULB           LL_ADC_REG_SetSamplingMode\n
3912:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR2    SMPTRIG        LL_ADC_REG_SetSamplingMode
3913:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3914:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SamplingMode This parameter can be one of the following values:
3915:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_NORMAL
3916:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_BULB
3917:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SAMPLING_MODE_TRIGGER_CONTROLED
3918:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3919:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSamplingMode(ADC_TypeDef *ADCx, uint32_t SamplingMode)
3921:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx != ADC3)
3923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3924:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Function not available on this instance */
3925:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
3927:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
3928:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CFGR2, ADC3_CFGR2_BULB | ADC3_CFGR2_SMPTRIG, SamplingMode);
3929:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
3930:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3931:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
3932:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3933:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3934:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
3935:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3936:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3937:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3938:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3939:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           are configurable.
3940:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This function performs configuration of:
3941:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
3942:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3943:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
3944:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Sequencer ranks are selected using
3945:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
3946:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
3947:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
3948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3949:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           are defined by channel number.
3950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This function performs configuration of:
3951:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
3952:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
3953:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
3954:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3955:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3956:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
3957:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             highest channel number).
3958:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Sequencer ranks are selected using
3959:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
3960:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3961:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3962:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3963:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 71


3964:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3965:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
3966:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_SetSequencerLength
3967:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
3968:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
3969:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
3970:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
3971:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
3972:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
3973:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
3974:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
3975:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
3976:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
3977:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
3978:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
3979:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
3980:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
3981:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
3982:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
3983:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
3984:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
3985:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
3986:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
3987:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
3988:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
3989:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->SQR1, ADC_SQR1_L, SequencerNbRanks);
3990:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
3991:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
3992:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
3993:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
3994:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3995:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3996:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3997:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3998:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           are configurable.
3999:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This function retrieves:
4000:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
4001:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
4002:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
4003:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Sequencer ranks are selected using
4004:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
4005:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
4006:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
4007:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
4008:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           are defined by channel number.
4009:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This function retrieves:
4010:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
4011:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
4012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
4013:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
4014:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
4015:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
4016:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             highest channel number).
4017:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Sequencer ranks are selected using
4018:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
4019:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4020:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
ARM GAS  C:\usertemp\cca0PO6L.s 			page 72


4021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_GetSequencerLength
4022:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4023:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4024:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
4025:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
4026:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
4027:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
4028:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
4029:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
4030:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
4031:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
4032:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
4033:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
4034:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
4035:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
4036:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
4037:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
4038:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
4039:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
4040:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(ADC_TypeDef *ADCx)
4042:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4043:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SQR1, ADC_SQR1_L));
4044:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4045:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4046:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4047:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
4048:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4049:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         number of ranks.
4050:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
4051:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
4052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   It is not possible to enable both ADC auto-injected mode
4053:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         and ADC group regular sequencer discontinuous mode.
4054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4055:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4056:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4057:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
4058:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_SetSequencerDiscont\n
4059:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_SetSequencerDiscont
4060:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4061:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
4062:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
4063:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
4064:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
4065:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
4066:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
4067:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
4068:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
4069:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
4070:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
4071:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4072:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4073:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
4074:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4075:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM, SeqDiscont);
4076:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4077:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 73


4078:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4079:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
4080:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4081:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         number of ranks.
4082:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_GetSequencerDiscont\n
4083:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_GetSequencerDiscont
4084:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4085:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4086:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
4087:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
4088:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
4089:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
4090:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
4091:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
4092:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
4093:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
4094:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
4095:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4096:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(ADC_TypeDef *ADCx)
4097:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4098:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM));
4099:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4100:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4101:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4102:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
4103:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         scan sequence rank.
4104:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function performs configuration of:
4105:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
4106:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
4107:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
4108:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
4109:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         affectation to a channel are configurable.
4110:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
4111:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4112:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4113:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4114:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4115:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         enabled separately.
4116:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4117:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4118:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4119:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4120:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
4121:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_SetSequencerRanks\n
4122:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_SetSequencerRanks\n
4123:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_SetSequencerRanks\n
4124:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_SetSequencerRanks\n
4125:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_SetSequencerRanks\n
4126:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_SetSequencerRanks\n
4127:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_SetSequencerRanks\n
4128:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_SetSequencerRanks\n
4129:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_SetSequencerRanks\n
4130:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_SetSequencerRanks\n
4131:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_SetSequencerRanks\n
4132:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_SetSequencerRanks\n
4133:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_SetSequencerRanks\n
4134:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_SetSequencerRanks\n
ARM GAS  C:\usertemp\cca0PO6L.s 			page 74


4135:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_SetSequencerRanks\n
4136:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_SetSequencerRanks
4137:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4138:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4139:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
4140:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
4141:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
4142:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
4143:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
4144:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
4145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
4146:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
4147:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
4148:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
4149:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
4150:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
4151:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
4152:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
4153:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
4154:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
4155:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4156:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
4157:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
4158:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
4159:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
4160:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
4161:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
4162:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4163:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4164:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4165:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4166:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4167:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4168:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4169:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4170:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4171:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4172:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4173:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4174:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4175:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
4176:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4177:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
4178:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
4179:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
4180:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
4181:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
4182:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
4183:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
4184:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
4185:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
4186:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4187:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4188:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4189:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
  29              		.loc 2 4189 1 view -0
  30              		.cfi_startproc
ARM GAS  C:\usertemp\cca0PO6L.s 			page 75


  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              		.loc 2 4189 1 is_stmt 0 view .LVU1
  35 0000 10B4     		push	{r4}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 4
  38              		.cfi_offset 4, -4
4190:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4191:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* in register and register position depending on parameter "Rank".         */
4192:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4193:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4194:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> A
  39              		.loc 2 4194 3 is_stmt 1 view .LVU2
  40              		.loc 2 4194 25 is_stmt 0 view .LVU3
  41 0002 3030     		adds	r0, r0, #48
  42              	.LVL1:
  43              		.loc 2 4194 25 view .LVU4
  44 0004 0B0A     		lsrs	r3, r1, #8
  45 0006 9B00     		lsls	r3, r3, #2
  46 0008 03F00C03 		and	r3, r3, #12
  47              	.LVL2:
4195:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4196:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(*preg,
  48              		.loc 2 4196 3 is_stmt 1 view .LVU5
  49 000c C458     		ldr	r4, [r0, r3]
  50 000e 01F01F01 		and	r1, r1, #31
  51              	.LVL3:
  52              		.loc 2 4196 3 is_stmt 0 view .LVU6
  53 0012 4FF01F0C 		mov	ip, #31
  54 0016 0CFA01FC 		lsl	ip, ip, r1
  55 001a 24EA0C0C 		bic	ip, r4, ip
  56 001e C2F38462 		ubfx	r2, r2, #26, #5
  57              	.LVL4:
  58              		.loc 2 4196 3 view .LVU7
  59 0022 8A40     		lsls	r2, r2, r1
  60 0024 4CEA0202 		orr	r2, ip, r2
  61 0028 C250     		str	r2, [r0, r3]
4197:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
4198:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
4199:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
  62              		.loc 2 4199 1 view .LVU8
  63 002a 5DF8044B 		ldr	r4, [sp], #4
  64              	.LCFI1:
  65              		.cfi_restore 4
  66              		.cfi_def_cfa_offset 0
  67 002e 7047     		bx	lr
  68              		.cfi_endproc
  69              	.LFE176:
  71              		.section	.text.LL_ADC_SetChannelSamplingTime,"ax",%progbits
  72              		.align	1
  73              		.syntax unified
  74              		.thumb
  75              		.thumb_func
  77              	LL_ADC_SetChannelSamplingTime:
  78              	.LVL5:
  79              	.LFB200:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 76


4200:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4201:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4202:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
4203:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         scan sequence rank.
4204:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
4205:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
4206:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         affectation to a channel are configurable.
4207:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
4208:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4209:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4210:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4211:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4212:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4213:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4214:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4215:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4216:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4217:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           as parameter for another function.
4218:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           process the returned value with the helper macro
4220:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4221:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_GetSequencerRanks\n
4222:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_GetSequencerRanks\n
4223:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_GetSequencerRanks\n
4224:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_GetSequencerRanks\n
4225:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_GetSequencerRanks\n
4226:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_GetSequencerRanks\n
4227:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_GetSequencerRanks\n
4228:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_GetSequencerRanks\n
4229:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_GetSequencerRanks\n
4230:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_GetSequencerRanks\n
4231:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_GetSequencerRanks\n
4232:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_GetSequencerRanks\n
4233:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_GetSequencerRanks\n
4234:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_GetSequencerRanks\n
4235:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_GetSequencerRanks\n
4236:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_GetSequencerRanks
4237:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4238:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4239:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
4240:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
4241:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
4242:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
4243:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
4244:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
4245:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
4246:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
4247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
4248:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
4249:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
4250:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
4251:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
4252:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
4253:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
4254:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
4255:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4256:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
ARM GAS  C:\usertemp\cca0PO6L.s 			page 77


4257:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
4258:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
4259:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
4260:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
4261:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
4262:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4263:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4264:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4265:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4266:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4267:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4268:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4269:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4270:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4271:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4272:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4273:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4274:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4275:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
4276:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4277:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
4278:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
4279:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
4280:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
4281:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
4282:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
4283:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
4284:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
4285:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).\n
4286:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1, 2) For ADC channel read back from ADC register,
4287:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                comparison with internal channel parameter to be done
4288:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4289:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4290:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
4291:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4292:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK
4293:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4294:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)((READ_BIT(*preg,
4295:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                               ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MA
4296:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4297:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    );
4298:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4299:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4300:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4301:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
4302:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
4303:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - single mode: one conversion per trigger
4304:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
4305:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           conversions launched successively automatically.
4306:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
4307:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
4308:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4309:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4310:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4311:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
4312:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_SetContinuousMode
4313:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\usertemp\cca0PO6L.s 			page 78


4314:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
4315:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
4316:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
4317:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4318:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4319:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
4320:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4321:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_CONT, Continuous);
4322:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4323:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4324:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4325:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
4326:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
4327:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - single mode: one conversion per trigger
4328:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
4329:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           conversions launched successively automatically.
4330:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_GetContinuousMode
4331:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4332:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4333:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
4334:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
4335:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4336:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(ADC_TypeDef *ADCx)
4337:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4338:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_CONT));
4339:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4340:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4341:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC data transfer mode
4342:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Conversion data can be either:
4343:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Available in Data Register
4344:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Transferred by DMA in one shot mode
4345:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Transferred by DMA in circular mode
4346:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Transferred to DFSDM data register
4347:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     DMNGT           LL_ADC_REG_SetDataTransferMode
4348:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4349:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  DataTransferMode Select Data Management configuration
4350:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4351:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4352:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDataTransferMode(ADC_TypeDef *ADCx, uint32_t DataTransferMode)
4353:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4354:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DMNGT, DataTransferMode);
4355:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4356:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4357:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
4358:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4359:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable DMA requests for ADC3.
4360:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_SetDMATransfer\n
4361:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4362:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4363:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4364:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableDMAReq (ADC_TypeDef *ADCx)
4365:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4366:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   SET_BIT(ADCx->CFGR, ADC3_CFGR_DMAEN);
4367:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4368:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4369:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableDMAReq(ADC_TypeDef *ADCx)
4370:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
ARM GAS  C:\usertemp\cca0PO6L.s 			page 79


4371:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT (ADCx->CFGR, ADC3_CFGR_DMAEN);
4372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4373:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabledDMAReq (ADC_TypeDef *ADCx)
4375:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4376:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR, ADC3_CFGR_DMAEN) == (ADC3_CFGR_DMAEN)) ? 1UL : 0UL);
4377:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4379:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
4380:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
4381:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
4382:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         mode:
4383:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
4384:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           when number of DMA data transfers (number of
4385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions) is reached.
4386:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
4387:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
4388:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
4389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions).
4390:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
4391:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
4392:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         mode non-circular:
4393:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
4394:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
4395:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
4396:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
4397:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_SetMultiDMATransfer().
4398:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
4399:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
4400:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4401:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4402:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4403:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
4404:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_SetDMATransferMode\n
4405:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_SetDMATransferMode
4406:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4407:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
4408:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC3_REG_DMA_TRANSFER_NONE
4409:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC3_REG_DMA_TRANSFER_LIMITED
4410:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC3_REG_DMA_TRANSFER_UNLIMITED
4411:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4412:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4413:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransferMode(ADC_TypeDef *ADCx, uint32_t DMATransfer)
4414:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4415:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
4416:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
4417:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CFGR, ADC3_CFGR_DMAEN | ADC3_CFGR_DMACFG, DMATransfer);
4418:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
4419:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4420:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4421:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4422:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
4423:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
4424:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
4425:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         mode:
4426:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
4427:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           when number of DMA data transfers (number of
ARM GAS  C:\usertemp\cca0PO6L.s 			page 80


4428:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions) is reached.
4429:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
4430:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
4431:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
4432:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions).
4433:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
4434:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
4435:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         mode non-circular:
4436:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
4437:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
4438:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
4439:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
4440:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_GetMultiDMATransfer().
4441:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
4442:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
4443:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_GetDMATransfer\n
4444:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_GetDMATransfer
4445:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4446:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4447:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC3_REG_DMA_TRANSFER_NONE
4448:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC3_REG_DMA_TRANSFER_LIMITED
4449:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC3_REG_DMA_TRANSFER_UNLIMITED
4450:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4451:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransferMode(ADC_TypeDef *ADCx)
4452:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4453:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
4454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
4455:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t)(READ_BIT(ADCx->CFGR, ADC3_CFGR_DMAEN | ADC3_CFGR_DMACFG));
4456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
4457:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    else
4458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   { 
4459:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return 0UL;
4460:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
4461:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4462:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4463:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
4464:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4465:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4466:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC data transfer mode
4467:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Conversion data can be either:
4468:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Available in Data Register
4469:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Transferred by DMA in one shot mode
4470:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Transferred by DMA in circular mode
4471:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *            - Transferred to DFSDM data register
4472:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     DMNGT           LL_ADC_REG_GetDataTransferMode
4473:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4474:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4475:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DR_TRANSFER
4476:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
4477:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
4478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER
4479:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4480:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDataTransferMode(ADC_TypeDef *ADCx)
4481:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4482:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DMNGT));
4483:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4484:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 81


4485:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4486:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4487:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
4488:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         data preserved or overwritten.
4489:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
4490:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         other devices without this feature have a behavior
4491:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         equivalent to data overwritten.
4492:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         The default setting of overrun is data preserved.
4493:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
4494:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         overrun should be set to data overwritten.
4495:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4496:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4497:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4498:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
4499:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_SetOverrun
4500:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4501:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
4502:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
4503:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
4504:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4505:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4506:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
4507:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4508:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_OVRMOD, Overrun);
4509:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4510:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4511:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4512:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
4513:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         data preserved or overwritten.
4514:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_GetOverrun
4515:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4516:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4517:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
4518:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
4519:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4520:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(ADC_TypeDef *ADCx)
4521:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4522:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_OVRMOD));
4523:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4524:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4525:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4526:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
4527:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4528:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4529:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Injected Configuration of ADC hierarchical scope: g
4530:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
4531:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4532:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4533:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4534:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger source:
4535:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
4536:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         external interrupt line).
4537:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
4538:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         also set trigger polarity to rising edge
4539:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
4540:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
4541:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
ARM GAS  C:\usertemp\cca0PO6L.s 			page 82


4542:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         function @ref LL_ADC_INJ_SetTriggerEdge().
4543:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4544:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         depends on timers availability on the selected device.
4545:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4546:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4547:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4548:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on either groups regular or injected.
4549:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_SetTriggerSource\n
4550:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_SetTriggerSource
4551:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4552:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
4553:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4554:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4555:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4557:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
4558:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
4559:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4560:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
4561:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
4562:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4563:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
4564:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
4565:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
4566:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4567:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
4568:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4569:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
4570:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2
4571:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4
4572:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM1_OUT
4573:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM2_OUT
4574:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM3_OUT
4575:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4576:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4577:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
4578:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4579:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN, TriggerSource);
4580:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4581:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4583:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source:
4584:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
4585:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         external interrupt line).
4586:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   To determine whether group injected trigger source is
4587:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal (SW start) or external, without detail
4588:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
4589:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (equivalent to
4590:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         "if(LL_ADC_INJ_GetTriggerSource(ADC1) == LL_ADC_INJ_TRIG_SOFTWARE)")
4591:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_IsTriggerSourceSWStart.
4592:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
4593:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         depends on timers availability on the selected device.
4594:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_GetTriggerSource\n
4595:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_GetTriggerSource
4596:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4597:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4598:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
ARM GAS  C:\usertemp\cca0PO6L.s 			page 83


4599:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4600:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4601:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4602:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
4603:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
4604:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4605:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
4606:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
4607:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
4608:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
4609:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
4610:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
4611:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4612:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
4613:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4614:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
4615:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2
4616:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4
4617:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM1_OUT
4618:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM2_OUT
4619:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM3_OUT
4620:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4621:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerSource(ADC_TypeDef *ADCx)
4622:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4623:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN);
4624:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4625:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
4626:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* corresponding to ADC_JSQR_JEXTEN {0; 1; 2; 3}.                           */
4627:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t ShiftJexten = ((TriggerSource & ADC_JSQR_JEXTEN) >> (ADC_INJ_TRIG_EXTEN_BITOFFSET_POS - 
4628:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4629:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_JSQR_JEXTEN and ADC_JSQR_JEXTSEL       */
4630:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
4631:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((TriggerSource
4632:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****            & (ADC_INJ_TRIG_SOURCE_MASK >> ShiftJexten) & ADC_JSQR_JEXTSEL)
4633:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****           | ((ADC_INJ_TRIG_EDGE_MASK >> ShiftJexten) & ADC_JSQR_JEXTEN)
4634:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****          );
4635:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4636:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4637:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4638:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source internal (SW start)
4639:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****             or external
4640:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of group injected trigger source set to external trigger,
4641:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
4642:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_GetTriggerSource.
4643:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_IsTriggerSourceSWStart
4644:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4645:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
4646:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
4647:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4648:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
4649:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4650:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN) == (LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN)) ?
4651:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4652:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4653:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4654:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger polarity.
4655:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
ARM GAS  C:\usertemp\cca0PO6L.s 			page 84


4656:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4657:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4658:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4659:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on either groups regular or injected.
4660:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_SetTriggerEdge
4661:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4662:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
4663:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4664:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4665:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4666:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4667:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4668:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
4669:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4670:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTEN, ExternalTriggerEdge);
4671:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4672:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4673:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4674:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger polarity.
4675:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4676:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_GetTriggerEdge
4677:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4678:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4679:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4680:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4681:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4682:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4683:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerEdge(ADC_TypeDef *ADCx)
4684:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4685:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN));
4686:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4687:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4688:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4689:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer length and scan direction.
4690:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function performs configuration of:
4691:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4692:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4693:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4694:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4695:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4696:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4697:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4698:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4699:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on either groups regular or injected.
4700:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_SetSequencerLength
4701:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4702:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4703:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4704:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4705:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4706:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4707:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4708:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4709:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
4710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4711:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JL, SequencerNbRanks);
4712:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
ARM GAS  C:\usertemp\cca0PO6L.s 			page 85


4713:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4714:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4715:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer length and scan direction.
4716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function retrieves:
4717:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4718:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4720:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4721:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4722:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_GetSequencerLength
4723:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4724:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4725:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4727:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4728:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4729:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4730:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerLength(ADC_TypeDef *ADCx)
4731:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4732:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JL));
4733:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4734:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4735:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4736:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer discontinuous mode:
4737:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4738:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         number of ranks.
4739:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4740:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4741:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_SetSequencerDiscont
4742:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4743:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
4744:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4745:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4746:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4747:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4748:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
4749:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4750:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JDISCEN, SeqDiscont);
4751:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4752:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4753:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4754:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer discontinuous mode:
4755:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4756:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         number of ranks.
4757:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_GetSequencerDiscont
4758:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4759:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4760:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4761:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4762:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4763:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerDiscont(ADC_TypeDef *ADCx)
4764:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4765:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JDISCEN));
4766:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4767:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4768:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4769:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group injected sequence: channel on the selected
ARM GAS  C:\usertemp\cca0PO6L.s 			page 86


4770:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sequence rank.
4771:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4772:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4773:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4774:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4775:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         enabled separately.
4776:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4777:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On STM32H7, some fast channels are available: fast analog inputs
4778:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN0..5).
4779:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4780:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4781:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4782:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on either groups regular or injected.
4783:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_SetSequencerRanks\n
4784:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_SetSequencerRanks\n
4785:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_SetSequencerRanks\n
4786:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_SetSequencerRanks
4787:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4788:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4789:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4790:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4791:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4792:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4793:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4794:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
4795:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
4796:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
4797:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
4798:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
4799:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
4800:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4801:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4802:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4803:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4804:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4805:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4806:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4807:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4808:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4809:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4810:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4811:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4812:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4813:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
4814:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4815:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
4816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
4817:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
4818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
4819:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
4820:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
4821:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
4822:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
4823:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
4824:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4825:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4826:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
ARM GAS  C:\usertemp\cca0PO6L.s 			page 87


4827:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4828:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
4830:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4831:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4832:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
4833:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_INJ
4834:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
4835:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4836:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4837:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4838:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected sequence: channel on the selected
4839:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sequence rank.
4840:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4841:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4842:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4843:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4844:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4845:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4846:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4847:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4848:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4849:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           as parameter for another function.
4850:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4851:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           process the returned value with the helper macro
4852:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4853:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_GetSequencerRanks\n
4854:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_GetSequencerRanks\n
4855:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_GetSequencerRanks\n
4856:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_GetSequencerRanks
4857:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4858:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4859:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4860:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4861:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4862:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4864:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
4865:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
4866:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
4867:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
4868:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
4869:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
4870:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4871:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4872:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4873:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4874:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4875:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4876:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4877:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4878:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4879:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4880:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4881:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4882:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4883:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
ARM GAS  C:\usertemp\cca0PO6L.s 			page 88


4884:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4885:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
4886:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
4887:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
4888:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
4889:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
4890:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
4891:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
4892:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
4893:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).\n
4894:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1, 2) For ADC channel read back from ADC register,
4895:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                comparison with internal channel parameter to be done
4896:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *                using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4897:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4898:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
4899:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4900:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->JSQR,
4901:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) <<
4902:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                     >> (Rank & ADC_INJ_RANK_ID_JSQR_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4903:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    );
4904:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4905:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4906:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4907:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger:
4908:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         independent or from ADC group regular.
4909:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This mode can be used to extend number of data registers
4910:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         updated after one ADC conversion trigger and with data
4911:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         permanently kept (not erased by successive conversions of scan of
4912:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC sequencer ranks), up to 5 data registers:
4913:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         1 data register on ADC group regular, 4 data registers
4914:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on ADC group injected.
4915:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC group injected injected trigger source is set to an
4916:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         external trigger, this feature must be must be set to
4917:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         independent trigger.
4918:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC group injected automatic trigger is compliant only with
4919:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         group injected trigger source set to SW start, without any
4920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         further action on  ADC group injected conversion start or stop:
4921:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         in this case, ADC group injected is controlled only
4922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         from ADC group regular.
4923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4924:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4925:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4927:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4928:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
4929:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_SetTrigAuto
4930:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4931:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  TrigAuto This parameter can be one of the following values:
4932:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
4933:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
4934:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4935:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4936:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigAuto(ADC_TypeDef *ADCx, uint32_t TrigAuto)
4937:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4938:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JAUTO, TrigAuto);
4939:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4940:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 89


4941:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4942:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger:
4943:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         independent or from ADC group regular.
4944:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_GetTrigAuto
4945:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4946:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4947:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
4948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
4949:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTrigAuto(ADC_TypeDef *ADCx)
4951:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
4952:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JAUTO));
4953:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
4954:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
4955:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
4956:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC group injected contexts queue mode.
4957:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
4958:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - group injected trigger
4959:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - sequencer length
4960:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - sequencer ranks
4961:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         If contexts queue is disabled:
4962:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - only 1 sequence can be configured
4963:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           and is active perpetually.
4964:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         If contexts queue is enabled:
4965:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - up to 2 contexts can be queued
4966:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           and are checked in and out as a FIFO stack (first-in, first-out).
4967:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - If a new context is set when queues is full, error is triggered
4968:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           by interruption "Injected Queue Overflow".
4969:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Two behaviors are possible when all contexts have been processed:
4970:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           the contexts queue can maintain the last context active perpetually
4971:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           or can be empty and injected group triggers are disabled.
4972:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Triggers can be only external (not internal SW start)
4973:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Caution: The sequence must be fully configured in one time
4974:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           (one write of register JSQR makes a check-in of a new context
4975:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           into the queue).
4976:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Therefore functions to set separately injected trigger and
4977:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           sequencer channels cannot be used, register JSQR must be set
4978:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           using function @ref LL_ADC_INJ_ConfigQueueContext().
4979:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This parameter can be modified only when no conversion is on going
4980:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
4981:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   A modification of the context mode (bit JQDIS) causes the contexts
4982:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         queue to be flushed and the register JSQR is cleared.
4983:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4984:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
4985:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4986:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
4987:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_SetQueueMode\n
4988:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_SetQueueMode
4989:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
4990:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  QueueMode This parameter can be one of the following values:
4991:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
4992:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
4993:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
4994:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
4995:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
4996:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetQueueMode(ADC_TypeDef *ADCx, uint32_t QueueMode)
4997:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
ARM GAS  C:\usertemp\cca0PO6L.s 			page 90


4998:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS, QueueMode);
4999:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5000:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5001:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5002:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected context queue mode.
5003:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_GetQueueMode\n
5004:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_GetQueueMode
5005:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5006:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5007:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
5008:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
5009:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
5010:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5011:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetQueueMode(ADC_TypeDef *ADCx)
5012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5013:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS));
5014:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5015:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5016:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5017:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set one context on ADC group injected that will be checked in
5018:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         contexts queue.
5019:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
5020:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - group injected trigger
5021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - sequencer length
5022:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - sequencer ranks
5023:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This function is intended to be used when contexts queue is enabled,
5024:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         because the sequence must be fully configured in one time
5025:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (functions to set separately injected trigger and sequencer channels
5026:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         cannot be used):
5027:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_INJ_SetQueueMode().
5028:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In the contexts queue, only the active context can be read.
5029:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         The parameters of this function can be read using functions:
5030:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerSource()
5031:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerEdge()
5032:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetSequencerRanks()
5033:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
5034:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
5035:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         enabled separately.
5036:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
5037:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On STM32H7, some fast channels are available: fast analog inputs
5038:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN0..5).
5039:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5040:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
5041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
5042:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on either groups regular or injected.
5043:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_ConfigQueueContext\n
5044:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_ConfigQueueContext\n
5045:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JL             LL_ADC_INJ_ConfigQueueContext\n
5046:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ1           LL_ADC_INJ_ConfigQueueContext\n
5047:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_ConfigQueueContext\n
5048:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_ConfigQueueContext\n
5049:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_ConfigQueueContext
5050:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5051:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
5052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
5053:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
5054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
ARM GAS  C:\usertemp\cca0PO6L.s 			page 91


5055:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
5056:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
5057:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
5058:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
5059:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
5060:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
5061:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
5062:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
5063:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
5064:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
5065:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
5066:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
5067:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
5068:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
5069:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG2
5070:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_HRTIM_TRG4
5071:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM1_OUT
5072:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM2_OUT
5073:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_LPTIM3_OUT
5074:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
5075:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
5076:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
5077:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
5078:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5079:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Note: This parameter is discarded in case of SW start:
5080:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *               parameter "TriggerSource" set to "LL_ADC_INJ_TRIG_SOFTWARE".
5081:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
5082:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
5083:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
5084:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
5085:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
5086:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank1_Channel This parameter can be one of the following values:
5087:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5088:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5089:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5090:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5091:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5092:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5093:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5094:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5095:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5096:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5097:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5098:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5099:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5100:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5101:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5102:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5103:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5104:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5105:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5106:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5107:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5108:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5109:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
5110:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
5111:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
ARM GAS  C:\usertemp\cca0PO6L.s 			page 92


5112:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5113:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
5114:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
5115:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
5116:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
5117:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank2_Channel This parameter can be one of the following values:
5118:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5119:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5120:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5121:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5122:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5123:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5124:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5125:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5126:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5127:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5128:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5129:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5130:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5131:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5132:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5133:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5134:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5135:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5136:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5137:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5138:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5139:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5140:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
5141:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
5142:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
5143:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5144:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
5145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
5146:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
5147:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
5148:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank3_Channel This parameter can be one of the following values:
5149:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5150:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5151:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5152:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5153:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5154:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5155:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5156:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5157:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5158:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5159:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5160:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5161:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5162:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5163:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5164:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5165:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5166:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5167:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5168:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
ARM GAS  C:\usertemp\cca0PO6L.s 			page 93


5169:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5170:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5171:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
5172:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
5173:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
5174:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5175:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
5176:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
5177:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
5178:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
5179:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank4_Channel This parameter can be one of the following values:
5180:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5181:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5182:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5183:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5184:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5185:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5186:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5187:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5188:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5189:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5190:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5191:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5192:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5193:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5194:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5195:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5196:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5197:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5198:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5199:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5200:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5201:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5202:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
5203:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
5204:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
5205:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5206:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
5207:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
5208:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
5209:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
5210:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
5211:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5212:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_ConfigQueueContext(ADC_TypeDef *ADCx,
5213:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    uint32_t TriggerSource,
5214:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    uint32_t ExternalTriggerEdge,
5215:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    uint32_t SequencerNbRanks,
5216:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    uint32_t Rank1_Channel,
5217:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    uint32_t Rank2_Channel,
5218:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    uint32_t Rank3_Channel,
5219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                    uint32_t Rank4_Channel)
5220:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5221:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bits with content of parameter "Rankx_Channel" with bits position    */
5222:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* in register depending on literal "LL_ADC_INJ_RANK_x".                    */
5223:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameters "Rankx_Channel" and "LL_ADC_INJ_RANK_x" are used with masks   */
5224:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* because containing other bits reserved for other purpose.                */
5225:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* If parameter "TriggerSource" is set to SW start, then parameter          */
ARM GAS  C:\usertemp\cca0PO6L.s 			page 94


5226:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* "ExternalTriggerEdge" is discarded.                                      */
5227:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t is_trigger_not_sw = (uint32_t)((TriggerSource != LL_ADC_INJ_TRIG_SOFTWARE) ? 1UL : 0UL);
5228:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
5229:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_JSQR_JEXTSEL |
5230:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_JSQR_JEXTEN  |
5231:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_JSQR_JSQ4    |
5232:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_JSQR_JSQ3    |
5233:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_JSQR_JSQ2    |
5234:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_JSQR_JSQ1    |
5235:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_JSQR_JL,
5236:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (TriggerSource & ADC_JSQR_JEXTSEL)        |
5237:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (ExternalTriggerEdge * (is_trigger_not_sw)) |
5238:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (((Rank4_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5239:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (((Rank3_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5240:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (((Rank2_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5241:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (((Rank1_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
5242:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              SequencerNbRanks
5243:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****             );
5244:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5245:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5246:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
5248:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5249:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5250:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
5251:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
5252:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5253:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5254:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5255:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
5256:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Unit: ADC clock cycles.
5257:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5258:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5259:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
5260:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         converted:
5261:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
5262:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
5263:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         setting).
5264:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
5265:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TS_temp, ...).
5266:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5267:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
5268:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5269:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5270:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5271:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5272:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
5273:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
5274:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is required.
5275:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet.
5276:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5277:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
5278:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5279:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
5280:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_SetChannelSamplingTime\n
5281:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_SetChannelSamplingTime\n
5282:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_SetChannelSamplingTime\n
ARM GAS  C:\usertemp\cca0PO6L.s 			page 95


5283:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_SetChannelSamplingTime\n
5284:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_SetChannelSamplingTime\n
5285:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_SetChannelSamplingTime\n
5286:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_SetChannelSamplingTime\n
5287:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_SetChannelSamplingTime\n
5288:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_SetChannelSamplingTime\n
5289:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_SetChannelSamplingTime\n
5290:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_SetChannelSamplingTime\n
5291:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_SetChannelSamplingTime\n
5292:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_SetChannelSamplingTime\n
5293:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_SetChannelSamplingTime\n
5294:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_SetChannelSamplingTime\n
5295:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_SetChannelSamplingTime\n
5296:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_SetChannelSamplingTime\n
5297:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_SetChannelSamplingTime\n
5298:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_SetChannelSamplingTime
5299:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5300:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5301:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5302:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5303:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5304:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5305:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5306:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5307:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5308:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5309:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5310:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5311:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5312:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5313:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5314:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5315:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5316:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5317:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5318:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5319:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5320:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5321:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5322:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5323:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
5324:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
5325:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
5326:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5327:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
5328:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
5329:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
5330:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
5331:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
5332:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
5333:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5
5334:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_8CYCLES_5
5335:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_16CYCLES_5
5336:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_32CYCLES_5
5337:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_64CYCLES_5
5338:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_387CYCLES_5
5339:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_810CYCLES_5
ARM GAS  C:\usertemp\cca0PO6L.s 			page 96


5340:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
5341:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5342:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
5343:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
  80              		.loc 2 5343 1 is_stmt 1 view -0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              		.loc 2 5343 1 is_stmt 0 view .LVU10
  86 0000 10B4     		push	{r4}
  87              	.LCFI2:
  88              		.cfi_def_cfa_offset 4
  89              		.cfi_offset 4, -4
5344:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bits with content of parameter "SamplingTime" with bits position     */
5345:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* in register and register position depending on parameter "Channel".      */
5346:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
5347:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
5348:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_M
  90              		.loc 2 5348 3 is_stmt 1 view .LVU11
  91              		.loc 2 5348 25 is_stmt 0 view .LVU12
  92 0002 1430     		adds	r0, r0, #20
  93              	.LVL6:
  94              		.loc 2 5348 25 view .LVU13
  95 0004 4B0E     		lsrs	r3, r1, #25
  96 0006 9B00     		lsls	r3, r3, #2
  97 0008 03F00403 		and	r3, r3, #4
  98              	.LVL7:
5349:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5350:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(*preg,
  99              		.loc 2 5350 3 is_stmt 1 view .LVU14
 100 000c C458     		ldr	r4, [r0, r3]
 101 000e C1F30451 		ubfx	r1, r1, #20, #5
 102              	.LVL8:
 103              		.loc 2 5350 3 is_stmt 0 view .LVU15
 104 0012 4FF0070C 		mov	ip, #7
 105 0016 0CFA01FC 		lsl	ip, ip, r1
 106 001a 24EA0C0C 		bic	ip, r4, ip
 107 001e 8A40     		lsls	r2, r2, r1
 108              	.LVL9:
 109              		.loc 2 5350 3 view .LVU16
 110 0020 4CEA0202 		orr	r2, ip, r2
 111 0024 C250     		str	r2, [r0, r3]
5351:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
5352:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              SamplingTime   << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
5353:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 112              		.loc 2 5353 1 view .LVU17
 113 0026 5DF8044B 		ldr	r4, [sp], #4
 114              	.LCFI3:
 115              		.cfi_restore 4
 116              		.cfi_def_cfa_offset 0
 117 002a 7047     		bx	lr
 118              		.cfi_endproc
 119              	.LFE200:
 121              		.section	.text.LL_ADC_SetAnalogWDMonitChannels,"ax",%progbits
 122              		.align	1
 123              		.syntax unified
ARM GAS  C:\usertemp\cca0PO6L.s 			page 97


 124              		.thumb
 125              		.thumb_func
 127              	LL_ADC_SetAnalogWDMonitChannels:
 128              	.LVL10:
 129              	.LFB204:
5354:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5355:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5356:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
5357:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Unit: ADC clock cycles.
5358:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
5359:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
5360:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
5361:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
5362:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
5363:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
5364:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
5365:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
5366:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_GetChannelSamplingTime\n
5367:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_GetChannelSamplingTime\n
5368:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_GetChannelSamplingTime\n
5369:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_GetChannelSamplingTime\n
5370:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_GetChannelSamplingTime\n
5371:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_GetChannelSamplingTime\n
5372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_GetChannelSamplingTime\n
5373:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_GetChannelSamplingTime\n
5374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_GetChannelSamplingTime\n
5375:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_GetChannelSamplingTime\n
5376:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_GetChannelSamplingTime\n
5377:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_GetChannelSamplingTime\n
5378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_GetChannelSamplingTime\n
5379:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_GetChannelSamplingTime\n
5380:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_GetChannelSamplingTime\n
5381:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_GetChannelSamplingTime\n
5382:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_GetChannelSamplingTime\n
5383:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_GetChannelSamplingTime\n
5384:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_GetChannelSamplingTime
5385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5386:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5387:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0           (3)
5388:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1           (3)
5389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2           (3)
5390:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3           (3)
5391:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4           (3)
5392:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5           (3)
5393:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
5394:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
5395:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
5396:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
5397:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5398:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5399:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5400:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5401:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5402:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5403:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5404:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5405:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
ARM GAS  C:\usertemp\cca0PO6L.s 			page 98


5406:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5407:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
5408:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (1)
5409:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (1)
5410:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)
5411:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)
5412:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5413:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
5414:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.\n
5415:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) On STM32H7, fast channel (0.125 us for 14-bit resolution (ADC conversion rate up to
5416:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Other channels are slow channels (conversion rate: refer to reference manual).
5417:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5418:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
5419:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5
5420:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_8CYCLES_5
5421:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_16CYCLES_5
5422:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_32CYCLES_5
5423:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_64CYCLES_5
5424:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_387CYCLES_5
5425:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_810CYCLES_5
5426:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5427:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel)
5428:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5429:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOF
5430:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5431:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
5432:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_
5433:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                     >> ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_P
5434:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    );
5435:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5436:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5437:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5438:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set mode single-ended or differential input of the selected
5439:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC channel.
5440:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Channel ending is on channel scope: independently of channel mapped
5441:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on ADC group regular or injected.
5442:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         In differential mode: Differential measurement is carried out
5443:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         between the selected channel 'i' (positive input) and
5444:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         channel 'i+1' (negative input). Only channel 'i' has to be
5445:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         configured, channel 'i+1' is configured automatically.
5446:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
5447:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         available in differential mode.
5448:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
5449:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         not available in differential mode.
5450:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5451:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5452:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On STM32H7, some channels are internally fixed to single-ended inputs
5453:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         configuration:
5454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC1: Channels 0, 6, 7, 8, 9, 13, 14, 15, 17, and 19
5455:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC2: Channels 0, 6, 7, 8, 9, 13, 14, 15 and 19
5456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC3: Channels 0, 6, 7, 8, 9, 12, 16, 17, and 19
5457:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For ADC channels configured in differential mode, both inputs
5458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         should be biased at (Vref+)/2 +/-200mV.
5459:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (Vref+ is the analog voltage reference)
5460:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5461:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
5462:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be ADC disabled.
ARM GAS  C:\usertemp\cca0PO6L.s 			page 99


5463:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   One or several values can be selected.
5464:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
5465:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_SetChannelSingleDiff
5466:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5467:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
5468:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
5469:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
5470:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
5471:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
5472:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
5473:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5474:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5475:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5476:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5477:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5479:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5480:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5481:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5482:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5483:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SingleDiff This parameter can be a combination of the following values:
5484:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
5485:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
5486:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
5487:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5488:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sing
5489:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5490:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
5491:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Bits of channels in single or differential mode are set only for         */
5492:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* differential mode (for single mode, mask of bits allowed to be set is    */
5493:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* shifted out of range of bits of channels in single or differential mode. */
5494:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
5495:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
5496:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->LTR2_DIFSEL,
5497:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
5498:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                (Channel & ADC_SINGLEDIFF_CHANNEL_MASK) & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SI
5499:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
5500:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
5501:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
5502:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->DIFSEL_RES12,
5503:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
5504:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                (Channel & ADC_SINGLEDIFF_CHANNEL_MASK) & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SI
5505:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
5506:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else  /* ADC_VER_V5_V90 */
5507:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Bits of channels in single or differential mode are set only for         */
5508:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* differential mode (for single mode, mask of bits allowed to be set is    */
5509:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* shifted out of range of bits of channels in single or differential mode. */
5510:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->DIFSEL,
5511:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
5512:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (Channel & ADC_SINGLEDIFF_CHANNEL_MASK) & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SING
5513:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
5514:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5515:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5516:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5517:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get mode single-ended or differential input of the selected
5518:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC channel.
5519:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
ARM GAS  C:\usertemp\cca0PO6L.s 			page 100


5520:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5521:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Therefore, to ensure a channel is configured in single-ended mode,
5522:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         the configuration of channel itself and the channel 'i-1' must be
5523:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         read back (to ensure that the selected channel channel has not been
5524:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         configured in differential mode by the previous channel).
5525:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
5526:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         available in differential mode.
5527:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
5528:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         not available in differential mode.
5529:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
5530:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
5531:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On STM32H7, some channels are internally fixed to single-ended inputs
5532:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         configuration:
5533:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC1: Channels 0, 6, 7, 8, 9, 13, 14, 15, 17, and 19
5534:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC2: Channels 0, 6, 7, 8, 9, 13, 14, 15 and 19
5535:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC3: Channels 0, 6, 7, 8, 9, 12, 16, 17, and 19
5536:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   One or several values can be selected. In this case, the value
5537:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         returned is null if all channels are in single ended-mode.
5538:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
5539:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_GetChannelSingleDiff
5540:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5541:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
5542:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
5543:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
5544:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
5545:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
5546:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
5547:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
5548:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
5549:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
5550:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
5551:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
5552:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
5553:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
5554:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
5555:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
5556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_19
5557:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: channel in single-ended mode, else: channel in differential mode
5558:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5559:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel)
5560:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5561:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)  
5562:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DIFSEL_RES12, (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)));
5563:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else  
5564:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DIFSEL, (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)));
5565:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
5566:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5567:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5568:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5569:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
5570:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5571:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5572:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
5573:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
5574:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5575:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5576:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
ARM GAS  C:\usertemp\cca0PO6L.s 			page 101


5577:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
5578:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a single channel, multiple channels or all channels,
5579:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on ADC groups regular and-or injected.
5580:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
5581:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is enabled.
5582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
5583:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
5584:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
5585:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5586:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         instance:
5587:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5588:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5589:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5590:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5591:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC resolution configured).
5592:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5593:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5594:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5595:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5596:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             be selected. For example:
5597:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5598:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5599:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             groups regular and injected).
5600:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5601:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5602:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5603:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5604:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5605:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             the 2 LSB are ignored.
5606:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5607:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
5608:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5609:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
5610:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
5611:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
5612:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
5613:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_SetAnalogWDMonitChannels\n
5614:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
5615:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
5616:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5617:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5618:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5619:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5620:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5621:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
5622:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5623:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5624:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
5625:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
5626:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5627:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
5628:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
5629:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5630:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
5631:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
5632:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5633:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
ARM GAS  C:\usertemp\cca0PO6L.s 			page 102


5634:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
5635:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5636:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
5637:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
5638:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5639:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
5640:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
5641:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5642:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5643:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5644:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5645:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5646:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5647:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5648:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5649:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5650:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5651:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5652:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5653:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5654:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5655:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5656:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5657:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5658:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5659:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5660:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5661:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5662:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5663:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5664:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5665:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5666:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5667:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5668:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5669:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5670:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5671:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5672:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5673:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5674:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5675:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5676:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5677:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5678:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5679:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5680:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5681:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5682:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5683:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG          (0)
5684:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_INJ          (0)
5685:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG_INJ
5686:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)(1)
5687:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
5688:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
5689:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)(1)
5690:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(1)
ARM GAS  C:\usertemp\cca0PO6L.s 			page 103


5691:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (1)
5692:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(1)
5693:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(1)
5694:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (1)
5695:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     (0)(2)
5696:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     (0)(2)
5697:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ    (2)
5698:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     (0)(2)
5699:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     (0)(2)
5700:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ    (2)
5701:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5702:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (0) On STM32H7, parameter available only on analog watchdog number: AWD1.\n
5703:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On STM32H7, parameter available only on ADC instance: ADC3.\n
5704:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) On STM32H7, parameter available only on ADC instance: ADC2.
5705:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
5706:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5707:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5708:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 130              		.loc 2 5708 1 is_stmt 1 view -0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              		@ link register save eliminated.
 135              		.loc 2 5708 1 is_stmt 0 view .LVU19
 136 0000 10B4     		push	{r4}
 137              	.LCFI4:
 138              		.cfi_def_cfa_offset 4
 139              		.cfi_offset 4, -4
5709:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
5710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
5711:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
5712:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5713:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> AD
 140              		.loc 2 5713 3 is_stmt 1 view .LVU20
 141              		.loc 2 5713 25 is_stmt 0 view .LVU21
 142 0002 0C30     		adds	r0, r0, #12
 143              	.LVL11:
 144              		.loc 2 5713 25 view .LVU22
 145 0004 C1F3015C 		ubfx	ip, r1, #20, #2
 146 0008 01F00103 		and	r3, r1, #1
 147 000c 03EBC303 		add	r3, r3, r3, lsl #3
 148 0010 0CEB830C 		add	ip, ip, r3, lsl #2
 149              	.LVL12:
5714:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
5715:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(*preg,
 150              		.loc 2 5716 3 is_stmt 1 view .LVU23
 151 0014 50F82C30 		ldr	r3, [r0, ip, lsl #2]
 152 0018 054C     		ldr	r4, .L7
 153 001a 0C40     		ands	r4, r4, r1
 154 001c 23EA0403 		bic	r3, r3, r4
 155 0020 1140     		ands	r1, r1, r2
 156              	.LVL13:
 157              		.loc 2 5716 3 is_stmt 0 view .LVU24
 158 0022 0B43     		orrs	r3, r3, r1
 159 0024 40F82C30 		str	r3, [r0, ip, lsl #2]
5717:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
ARM GAS  C:\usertemp\cca0PO6L.s 			page 104


5718:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              AWDChannelGroup & AWDy);
5719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 160              		.loc 2 5719 1 view .LVU25
 161 0028 5DF8044B 		ldr	r4, [sp], #4
 162              	.LCFI5:
 163              		.cfi_restore 4
 164              		.cfi_def_cfa_offset 0
 165 002c 7047     		bx	lr
 166              	.L8:
 167 002e 00BF     		.align	2
 168              	.L7:
 169 0030 FFFFCF7D 		.word	2110783487
 170              		.cfi_endproc
 171              	.LFE204:
 173              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 174              		.align	1
 175              		.weak	HAL_ADC_MspInit
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 180              	HAL_ADC_MspInit:
 181              	.LVL14:
 182              	.LFB335:
   1:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
   2:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ******************************************************************************
   3:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @file    stm32h7xx_hal_adc.c
   4:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following
   6:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          functionalities of the Analog to Digital Converter (ADC)
   7:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          peripheral:
   8:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *           + Peripheral Control functions
   9:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *           + Peripheral State functions
  10:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          Other functions (extended functions) are available in file
  11:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          "stm32h7xx_hal_adc_ex.c".
  12:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *
  13:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ******************************************************************************
  14:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @attention
  15:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *
  16:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * Copyright (c) 2017 STMicroelectronics.
  17:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * All rights reserved.
  18:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *
  19:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * This software is licensed under terms that can be found in the LICENSE file
  20:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * in the root directory of this software component.
  21:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  22:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *
  23:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ******************************************************************************
  24:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   @verbatim
  25:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ==============================================================================
  26:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      ##### ADC peripheral features #####
  27:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ==============================================================================
  28:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   [..]
  29:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) 16-bit, 14-bit, 12-bit, 10-bit or 8-bit configurable resolution.
  30:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        Note: On devices STM32H72xx and STM32H73xx, these resolution are applicable to instances ADC
  31:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        ADC3 is featuring resolutions 12-bit, 10-bit, 8-bit, 6-bit.
  32:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  33:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) Interrupt generation at the end of regular conversion and in case of
  34:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       analog watchdog or overrun events.
ARM GAS  C:\usertemp\cca0PO6L.s 			page 105


  35:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  36:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) Single and continuous conversion modes.
  37:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  38:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) Scan mode for conversion of several channels sequentially.
  39:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  40:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) Data alignment with in-built data coherency.
  41:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  42:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) Programmable sampling time (channel wise)
  43:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  44:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) External trigger (timer or EXTI) with configurable polarity
  45:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  46:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) DMA request generation for transfer of conversions data of regular group.
  47:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  48:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) Configurable delay between conversions in Dual interleaved mode.
  49:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  50:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) ADC channels selectable single/differential input.
  51:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  52:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) ADC offset shared on 4 offset instances.
  53:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) ADC calibration
  54:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  55:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) ADC conversion of regular group.
  56:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  57:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) ADC supply requirements: 1.62 V to 3.6 V.
  58:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  59:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   (+) ADC input range: from Vref- (connected to Vssa) to Vref+ (connected to
  60:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       Vdda or to an external voltage reference).
  61:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  62:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  63:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      ##### How to use this driver #####
  64:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ==============================================================================
  65:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     [..]
  66:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  67:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      *** Configuration of top level parameters related to ADC ***
  68:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      ============================================================
  69:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      [..]
  70:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  71:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) Enable the ADC interface
  72:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         (++) As prerequisite, ADC clock must be configured at RCC top level.
  73:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  74:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         (++) Two clock settings are mandatory:
  75:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              (+++) ADC clock (core clock, also possibly conversion clock).
  76:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  77:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              (+++) ADC clock (conversions clock).
  78:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    Two possible clock sources: synchronous clock derived from AHB clock
  79:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    or asynchronous clock derived from system clock, the PLL2 or the PLL3 running up
  80:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  81:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              (+++) Example:
  82:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    Into HAL_ADC_MspInit() (recommended code location) or with
  83:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    other device clock parameters configuration:
  84:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                (+++) __HAL_RCC_ADC_CLK_ENABLE();                  (mandatory)
  85:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  86:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                RCC_ADCCLKSOURCE_PLL2 enable:                   (optional: if asynchronous clock sel
  87:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                (+++) RCC_PeriphClkInitTypeDef   RCC_PeriphClkInit;
  88:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                (+++) PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
  89:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                (+++) PeriphClkInit.AdcClockSelection    = RCC_ADCCLKSOURCE_PLL2;
  90:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                (+++) HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
  91:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 106


  92:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         (++) ADC clock source and clock prescaler are configured at ADC level with
  93:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              parameter "ClockPrescaler" using function HAL_ADC_Init().
  94:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
  95:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) ADC pins configuration
  96:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Enable the clock for the ADC GPIOs
  97:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_ENABLE()
  98:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Configure these ADC pins in analog mode
  99:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               using function HAL_GPIO_Init()
 100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Configure the NVIC for ADC
 103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               into the function of corresponding ADC interruption vector
 106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               ADCx_IRQHandler().
 107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Configure the DMA (DMA channel, mode normal or circular, ...)
 110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               using function HAL_DMA_Init().
 111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Configure the NVIC for DMA
 112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler()
 114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               into the function of corresponding DMA interruption vector
 115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               DMAx_Channelx_IRQHandler().
 116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      *** Configuration of ADC, group regular, channels parameters ***
 118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      ================================================================
 119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      [..]
 120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) Configure the ADC parameters (resolution, data alignment, ...)
 122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         and regular group parameters (conversion trigger, sequencer, ...)
 123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         using function HAL_ADC_Init().
 124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) Configure the channels for regular group parameters (channel number,
 126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         channel rank into sequencer, ..., into regular group)
 127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         using function HAL_ADC_ConfigChannel().
 128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) Optionally, configure the analog watchdog parameters (channels
 130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         monitored, thresholds, ...)
 131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         using function HAL_ADC_AnalogWDGConfig().
 132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      *** Execution of ADC conversions ***
 134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      ====================================
 135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      [..]
 136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) Optionally, perform an automatic ADC calibration to improve the
 138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         conversion accuracy
 139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         using function HAL_ADCEx_Calibration_Start().
 140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) ADC driver can be used among three modes: polling, interruption,
 142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         transfer by DMA.
 143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         (++) ADC conversion by polling:
 145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 using function HAL_ADC_Start()
 147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Wait for ADC conversion completion
 148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 using function HAL_ADC_PollForConversion()
ARM GAS  C:\usertemp\cca0PO6L.s 			page 107


 149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Retrieve conversion results
 150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 using function HAL_ADC_Stop()
 153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         (++) ADC conversion by interruption:
 155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 using function HAL_ADC_Start_IT()
 157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback()
 159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 (this function must be implemented in user program)
 160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Retrieve conversion results
 161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         (++) ADC conversion with transfer by DMA:
 166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 using function HAL_ADC_Start_DMA()
 168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 (these functions must be implemented in user program)
 171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
 172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 destination variable address.
 173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral
 174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 using function HAL_ADC_Stop_DMA()
 175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      [..]
 177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (@) Callback functions must be implemented in user program:
 179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+@) HAL_ADC_ErrorCallback()
 180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+@) HAL_ADC_LevelOutOfWindowCallback() (callback of analog watchdog)
 181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+@) HAL_ADC_ConvCpltCallback()
 182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+@) HAL_ADC_ConvHalfCpltCallback
 183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      *** Deinitialization of ADC ***
 185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      ============================================================
 186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      [..]
 187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) Disable the ADC interface
 189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (++) ADC clock can be hard reset and disabled at RCC top level.
 190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         (++) Hard reset of ADC peripherals
 191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              using macro __HAL_RCC_ADCx_FORCE_RESET(), __HAL_RCC_ADCx_RELEASE_RESET().
 192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         (++) ADC clock disable
 193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              using the equivalent macro/functions as configuration step.
 194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              (+++) Example:
 195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    other device clock parameters configuration:
 197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                (+++) __HAL_RCC_ADC_CLK_DISABLE();                  (if not used anymore)
 198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                RCC_ADCCLKSOURCE_CLKP restore:                      (optional)
 199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                (+++) RCC_PeriphClkInitTypeDef   RCC_PeriphClkInit;
 200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                (+++) PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                (+++) PeriphClkInit.AdcClockSelection    = RCC_ADCCLKSOURCE_CLKP;
 202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                (+++) HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
 203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) ADC pins configuration
 205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Disable the clock for the ADC GPIOs
ARM GAS  C:\usertemp\cca0PO6L.s 			page 108


 206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Disable the NVIC for ADC
 210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Deinitialize the DMA
 214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               using function HAL_DMA_Init().
 215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          (++) Disable the NVIC for DMA
 216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     [..]
 219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     *** Callback registration ***
 221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     =============================================
 222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     [..]
 223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      The compilation flag USE_HAL_ADC_REGISTER_CALLBACKS, when set to 1,
 225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      allows the user to configure dynamically the driver callbacks.
 226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      Use Functions HAL_ADC_RegisterCallback()
 227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      to register an interrupt callback.
 228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     [..]
 229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      Function HAL_ADC_RegisterCallback() allows to register following callbacks:
 231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      and a pointer to the user callback function.
 244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     [..]
 245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      Use function HAL_ADC_UnRegisterCallback to reset a callback to the default
 247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      weak function.
 248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     [..]
 249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      HAL_ADC_UnRegisterCallback takes as parameters the HAL peripheral handle,
 251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      and the Callback ID.
 252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      This function allows to reset following callbacks:
 253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) InjectedConvCpltCallback       : ADC group injected conversion complete callback
 258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) InjectedQueueOverflowCallback  : ADC group injected context queue overflow callback
 259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
ARM GAS  C:\usertemp\cca0PO6L.s 			page 109


 263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      [..]
 265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      By default, after the HAL_ADC_Init() and when the state is HAL_ADC_STATE_RESET
 267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      all callbacks are set to the corresponding weak functions:
 268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      examples HAL_ADC_ConvCpltCallback(), HAL_ADC_ErrorCallback().
 269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      Exception done for MspInit and MspDeInit functions that are
 270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      reset to the legacy weak functions in the HAL_ADC_Init()/ HAL_ADC_DeInit() only when
 271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      these callbacks are null (not registered beforehand).
 272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     [..]
 273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      If MspInit or MspDeInit are not null, the HAL_ADC_Init()/ HAL_ADC_DeInit()
 275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      [..]
 277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      Callbacks can be registered/unregistered in HAL_ADC_STATE_READY state only.
 279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      in HAL_ADC_STATE_READY or HAL_ADC_STATE_RESET state,
 281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     [..]
 283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      using HAL_ADC_RegisterCallback() before calling HAL_ADC_DeInit()
 286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      or HAL_ADC_Init() function.
 287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      [..]
 288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      When the compilation flag USE_HAL_ADC_REGISTER_CALLBACKS is set to 0 or
 290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      not defined, the callback registration feature is not available and all callbacks
 291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      are set to the corresponding weak functions.
 292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   @endverbatim
 294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ******************************************************************************
 295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #include "stm32h7xx_hal.h"
 299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /** @addtogroup STM32H7xx_HAL_Driver
 301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @{
 302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /** @defgroup ADC ADC
 305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief ADC HAL module driver
 306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @{
 307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /** @defgroup ADC_Private_Constants ADC Private Constants
 315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @{
 316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #define ADC_CFGR_FIELDS_1  ((uint32_t)(ADC_CFGR_RES    |\
 318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                        ADC_CFGR_CONT   | ADC_CFGR_OVRMOD  |\
 319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                        ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM |\
ARM GAS  C:\usertemp\cca0PO6L.s 			page 110


 320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                        ADC_CFGR_EXTEN  | ADC_CFGR_EXTSEL)) /*!< ADC_CFGR fields of 
 321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                                                                   when no regular c
 322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
 324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #define ADC3_CFGR_FIELDS_1  ((ADC3_CFGR_RES    | ADC3_CFGR_ALIGN   |\
 325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                              ADC_CFGR_CONT   | ADC_CFGR_OVRMOD  |\
 326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                              ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM |\
 327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                              ADC_CFGR_EXTEN  | ADC_CFGR_EXTSEL))   /*!< ADC_CFGR fields of paramete
 328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                                                         when no regular conversion 
 329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
 330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #define ADC_CFGR2_FIELDS  ((uint32_t)(ADC_CFGR2_ROVSE | ADC_CFGR2_OVSR  |\
 332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                        ADC_CFGR2_OVSS | ADC_CFGR2_TROVS |\
 333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                        ADC_CFGR2_ROVSM))                     /*!< ADC_CFGR2 fields 
 334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                                                                  (neither regular n
 335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Timeout values for ADC operations (enable settling time,                   */
 337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /*   disable settling time, ...).                                             */
 338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /*   Values defined to be higher than worst cases: low clock frequency,       */
 339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /*   maximum prescalers.                                                      */
 340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #define ADC_ENABLE_TIMEOUT              (2UL)    /*!< ADC enable time-out value  */
 341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #define ADC_DISABLE_TIMEOUT             (2UL)    /*!< ADC disable time-out value */
 342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Timeout to wait for current conversion on going to be completed.           */
 344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Timeout fixed to worst case, for 1 channel.                                */
 345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /*   - maximum sampling time (830.5 adc_clk)                                  */
 346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /*   - ADC resolution (Tsar 16 bits= 16.5 adc_clk)                            */
 347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /*   - ADC clock with prescaler 256                                           */
 348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /*     823 * 256 = 210688 clock cycles max                                    */
 349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Unit: cycles of CPU clock.                                                 */
 350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #define ADC_CONVERSION_TIME_MAX_CPU_CYCLES (210688UL)  /*!< ADC conversion completion time-out valu
 351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
 353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @}
 354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
 358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /* Exported functions --------------------------------------------------------*/
 360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @{
 363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and de-initialization functions
 366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief    ADC Initialization and Configuration functions
 367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *
 368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** @verbatim
 369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****  ===============================================================================
 370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****  ===============================================================================
 372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Initialize and configure the ADC.
 374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) De-initialize the ADC.
 375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** @endverbatim
 376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @{
ARM GAS  C:\usertemp\cca0PO6L.s 			page 111


 377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
 380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Initialize the ADC peripheral and regular group according to
 381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         (refer to description of RCC configuration for ADC
 384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         in header of this file).
 385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
 386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         coming from ADC state reset. Following calls to this function can
 388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef
 389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         structure on the fly, without modifying MSP configuration. If ADC
 390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         before HAL_ADC_Init().
 392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
 393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         For parameters constraints, see comments of structure
 394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         "ADC_InitTypeDef".
 395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire
 396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         ADC and scope of regular group. For parameters details, see comments
 397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         of structure "ADC_InitTypeDef".
 398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Parameters related to common ADC registers (ADC clock mode) are set
 399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         only if all ADCs are disabled.
 400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         If this is not the case, these common parameters setting are
 401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behaviour in
 402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         case of update of a parameter of ADC_InitTypeDef on the fly,
 403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         without  disabling the other ADCs.
 404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
 405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status
 406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpCFGR;
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_conversion_on_going;
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check ADC handle */
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (hadc == NULL)
 418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     return HAL_ERROR;
 420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_CONVERSIONDATAMGT(hadc->Init.ConversionDataManagement));
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
ARM GAS  C:\usertemp\cca0PO6L.s 			page 112


 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
 435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC_REGULAR_DISCONT_NUMBER(hadc->Init.NbrOfDiscConversion));
 444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* DISCEN and CONT bits cannot be set at the same time */
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (hadc->Init.ContinuousConvMode == 
 449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Actions performed only if ADC is coming from state reset:                */
 451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* - Initialization of ADC MSP                                              */
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (hadc->State == HAL_ADC_STATE_RESET)
 453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Init the ADC Callback settings */
 456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->ConvCpltCallback              = HAL_ADC_ConvCpltCallback;                 /* Legacy weak 
 457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->ConvHalfCpltCallback          = HAL_ADC_ConvHalfCpltCallback;             /* Legacy weak 
 458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback      = HAL_ADC_LevelOutOfWindowCallback;         /* Legacy weak 
 459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->ErrorCallback                 = HAL_ADC_ErrorCallback;                    /* Legacy weak 
 460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->InjectedConvCpltCallback      = HAL_ADCEx_InjectedConvCpltCallback;       /* Legacy weak 
 461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->InjectedQueueOverflowCallback = HAL_ADCEx_InjectedQueueOverflowCallback;  /* Legacy weak 
 462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback     = HAL_ADCEx_LevelOutOfWindow2Callback;      /* Legacy weak 
 463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback     = HAL_ADCEx_LevelOutOfWindow3Callback;      /* Legacy weak 
 464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->EndOfSamplingCallback         = HAL_ADCEx_EndOfSamplingCallback;          /* Legacy weak 
 465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->MspInitCallback == NULL)
 467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit  */
 469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Init the low level hardware */
 472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->MspInitCallback(hadc);
 473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
 474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Init the low level hardware */
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
 476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Set ADC error code to none */
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Initialize Lock */
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
 483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* - Exit from deep-power-down mode and ADC voltage regulator enable        */
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (LL_ADC_IsDeepPowerDownEnabled(hadc->Instance) != 0UL)
 487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Disable ADC deep power down mode */
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     LL_ADC_DisableDeepPowerDown(hadc->Instance);
 490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 113


 491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* System was in deep power down mode, calibration must
 492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      be relaunched or a previously saved calibration factor
 493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      re-applied once the ADC voltage regulator is enabled */
 494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Enable ADC internal voltage regulator */
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     LL_ADC_EnableInternalRegulator(hadc->Instance);
 500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Note: Variable divided by 2 to compensate partially              */
 502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*       CPU processing cycles, scaling in us split to not          */
 503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*       exceed 32 bits register capacity and handle low frequency. */
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US / 10UL) * ((SystemCoreClock / (100000UL
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       wait_loop_index--;
 508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Verification that ADC voltage regulator is correctly enabled, whether    */
 512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* or not ADC is coming from state reset (if any potential problem of       */
 513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* clocking, voltage regulator would not be enabled).                       */
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update ADC state machine to error */
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Set ADC error code to ADC peripheral internal error */
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */
 526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* correctly completed and if there is no conversion on going on regular    */
 527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* group (ADC may already be enabled at this point if HAL_ADC_Init() is     */
 528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* called to update a parameter on the fly).                                */
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tmp_adc_reg_is_conversion_on_going = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      )
 534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Set ADC state */
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Configuration of common ADC parameters                                 */
 541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:              */
 544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - clock configuration                                                 */
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
ARM GAS  C:\usertemp\cca0PO6L.s 			page 114


 548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Reset configuration of ADC common register CCR:                      */
 550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*                                                                      */
 551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*   - ADC clock mode and ACC prescaler (CKMODE and PRESC bits)are set  */
 552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*     according to adc->Init.ClockPrescaler. It selects the clock      */
 553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*    source and sets the clock division factor.                        */
 554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*                                                                      */
 555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Some parameters of this register are not reset, since they are set   */
 556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* by other functions and must be kept in case of usage of this         */
 557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* function on the fly (update of a parameter of ADC_InitTypeDef        */
 558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* without needing to reconfigure all other ADC groups/channels         */
 559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* parameters):                                                         */
 560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*   - when multimode feature is available, multimode-related           */
 561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*     parameters: MDMA, DMACFG, DELAY, DUAL (set by API                */
 562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*     HAL_ADCEx_MultiModeConfigChannel() )                             */
 563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
 564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*     (set into HAL_ADC_ConfigChannel() or                             */
 565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*     HAL_ADCEx_InjectedConfigChannel() )                              */
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         LL_ADC_SetCommonClock(__LL_ADC_COMMON_INSTANCE(hadc->Instance), hadc->Init.ClockPrescaler);
 567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Configuration of ADC:                                                  */
 571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - resolution                               Init.Resolution            */
 572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - external trigger to start conversion     Init.ExternalTrigConv      */
 573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - external trigger polarity                Init.ExternalTrigConvEdge  */
 574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - continuous conversion mode               Init.ContinuousConvMode    */
 575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - overrun                                  Init.Overrun               */
 576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - discontinuous mode                       Init.DiscontinuousConvMode */
 577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - discontinuous mode channel count         Init.NbrOfDiscConversion   */
 578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_3)
 579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)           |
 581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 hadc->Init.Overrun                                                    |
 582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 hadc->Init.Resolution                                                 |
 583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #elif defined(ADC_VER_V5_V90)
 586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Instance == ADC3)
 587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)         |
 589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Overrun                                                     |
 590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.DataAlign                                                   |
 591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ((__LL_ADC12_RESOLUTION_TO_ADC3(hadc->Init.Resolution)  & (ADC_CFGR_RES_1 | ADC_C
 592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
 595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)          |
 597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Overrun                                                    |
 598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Resolution                                                 |
 599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
 603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((HAL_GetREVID() > REV_ID_Y) && (ADC_RESOLUTION_8B == hadc->Init.Resolution))
ARM GAS  C:\usertemp\cca0PO6L.s 			page 115


 605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* for STM32H7 silicon rev.B and above , ADC_CFGR_RES value for 8bits resolution is : b111 */
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)          |
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Overrun                                                    |
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Resolution | (ADC_CFGR_RES_1 | ADC_CFGR_RES_0)                |
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
 613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpCFGR  = (ADC_CFGR_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)          |
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Overrun                                                    |
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Resolution                                                 |
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_3 */
 622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpCFGR |= ADC_CFGR_DISCONTINUOUS_NUM(hadc->Init.NbrOfDiscConversion);
 626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Enable external trigger if trigger selection is different of software  */
 629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* start.                                                                 */
 630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Note: This configuration keeps the hardware feature of parameter       */
 631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
 632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*       software start.                                                  */
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpCFGR |= ((hadc->Init.ExternalTrigConv & ADC_CFGR_EXTSEL)
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                  );
 638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
 642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Instance == ADC3)
 643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Update Configuration Register CFGR */
 645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR, ADC3_CFGR_FIELDS_1, tmpCFGR);
 646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Configuration of sampling mode */
 647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR2, ADC3_CFGR2_BULB | ADC3_CFGR2_SMPTRIG, hadc->Init.SamplingMo
 648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
 650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Update Configuration Register CFGR */
 652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_1, tmpCFGR);
 653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
 655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update Configuration Register CFGR */
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_1, tmpCFGR);
 657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
 658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Parameters that can be updated when ADC is disabled or enabled without */
 661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* conversion on going on regular and injected groups:                    */
ARM GAS  C:\usertemp\cca0PO6L.s 			page 116


 662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - Conversion data management      Init.ConversionDataManagement       */
 663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - LowPowerAutoWait feature        Init.LowPowerAutoWait               */
 664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - Oversampling parameters         Init.Oversampling                   */
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        )
 670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
 672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (hadc->Instance == ADC3)
 673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmpCFGR = (
 675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                     ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                     ADC3_CFGR_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
 677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
 679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmpCFGR = (
 681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                     ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                     ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.ConversionDataManagement));
 683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpCFGR = (
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.ConversionDataManagement));
 688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
 689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_FIELDS_2, tmpCFGR);
 691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (hadc->Init.OversamplingMode == ENABLE)
 693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
 695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (hadc->Instance == ADC3)
 696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           assert_param(IS_ADC_OVERSAMPLING_RATIO_ADC3(hadc->Init.Oversampling.Ratio));
 698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         else
 700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           assert_param(IS_ADC_OVERSAMPLING_RATIO(hadc->Init.Oversampling.Ratio));
 702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
 704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         assert_param(IS_ADC_OVERSAMPLING_RATIO(hadc->Init.Oversampling.Ratio));
 705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         assert_param(IS_ADC_RIGHT_BIT_SHIFT(hadc->Init.Oversampling.RightBitShift));
 707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));
 709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if ((hadc->Init.ExternalTrigConv == ADC_SOFTWARE_START)
 711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             || (hadc->Init.ExternalTrigConvEdge == ADC_EXTERNALTRIGCONVEDGE_NONE))
 712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Multi trigger is not applicable to software-triggered conversions */
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           assert_param((hadc->Init.Oversampling.TriggeredMode == ADC_TRIGGEREDMODE_SINGLE_TRIGGER))
 715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
 718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (hadc->Instance == ADC3)
ARM GAS  C:\usertemp\cca0PO6L.s 			page 117


 719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Configuration of Oversampler:                                      */
 721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /*  - Oversampling Ratio                                              */
 722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /*  - Right bit shift                                                 */
 723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /*  - Triggered mode                                                  */
 724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /*  - Oversampling mode (continued/resumed)                           */
 725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           MODIFY_REG(hadc->Instance->CFGR2,
 726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      ADC_CFGR2_OVSR  |
 727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      ADC_CFGR2_OVSS  |
 728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      ADC_CFGR2_TROVS |
 729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      ADC_CFGR2_ROVSM,
 730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      ADC_CFGR2_ROVSE                       |
 731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      hadc->Init.Oversampling.Ratio         |
 732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      hadc->Init.Oversampling.RightBitShift |
 733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      hadc->Init.Oversampling.TriggeredMode |
 734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      hadc->Init.Oversampling.OversamplingStopReset
 735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                     );
 736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         else
 738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Configuration of Oversampler:                                       */
 741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /*  - Oversampling Ratio                                               */
 742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /*  - Right bit shift                                                  */
 743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /*  - Left bit shift                                                   */
 744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /*  - Triggered mode                                                   */
 745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /*  - Oversampling mode (continued/resumed)                            */
 746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_FIELDS,
 747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      ADC_CFGR2_ROVSE                       |
 748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      ((hadc->Init.Oversampling.Ratio - 1UL)  << ADC_CFGR2_OVSR_Pos) |
 749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      hadc->Init.Oversampling.RightBitShift |
 750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      hadc->Init.Oversampling.TriggeredMode |
 751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                      hadc->Init.Oversampling.OversamplingStopReset);
 752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
 754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Configuration of Oversampler:                                       */
 755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*  - Oversampling Ratio                                               */
 756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*  - Right bit shift                                                  */
 757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*  - Left bit shift                                                   */
 758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*  - Triggered mode                                                   */
 759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*  - Oversampling mode (continued/resumed)                            */
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_FIELDS,
 761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    ADC_CFGR2_ROVSE                       |
 762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    ((hadc->Init.Oversampling.Ratio - 1UL) << ADC_CFGR2_OVSR_Pos) |
 763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    hadc->Init.Oversampling.RightBitShift |
 764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    hadc->Init.Oversampling.TriggeredMode |
 765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    hadc->Init.Oversampling.OversamplingStopReset);
 766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
 767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
 770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Disable ADC oversampling scope on ADC group regular */
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSE);
 773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set the LeftShift parameter: it is applied to the final result with or without oversamplin
ARM GAS  C:\usertemp\cca0PO6L.s 			page 118


 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR2, ADC_CFGR2_LSHIFT, hadc->Init.LeftBitShift);
 777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
 778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (hadc->Instance != ADC3)
 779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Configure the BOOST Mode */
 781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         ADC_ConfigureBoostMode(hadc);
 782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
 784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Configure the BOOST Mode */
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       ADC_ConfigureBoostMode(hadc);
 786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
 787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Configuration of regular group sequencer:                              */
 790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*   0x00: 1 channel converted (channel on regular rank 1)                */
 792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*   Note: Scan mode is not present by hardware on this device, but       */
 794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*   emulated by software for alignment over all STM32 devices.           */
 795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*   parameter "NbrOfConversion".                                         */
 797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set number of ranks in regular group sequencer */
 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->SQR1, ADC_SQR1_L, (hadc->Init.NbrOfConversion - (uint8_t)1));
 802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
 804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_L);
 806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Initialize the ADC state */
 809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear HAL_ADC_STATE_BUSY_INTERNAL bit, set HAL_ADC_STATE_READY bit */
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL, HAL_ADC_STATE_READY);
 811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
 813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update ADC state machine to error */
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
 821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return tmp_hal_status;
 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
 825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Deinitialize the ADC peripheral registers to their default reset
 826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         values, with deinitialization of the ADC MSP.
 827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   For devices with several ADCs: reset of ADC common registers is done
 828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         only if all ADCs sharing the same common group are disabled.
 829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         (function "HAL_ADC_MspDeInit()" is also called under the same conditions:
 830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         all ADC instances use the same core clock at RCC level, disabling
 831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         the core clock reset all ADC instances).
 832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         If this is not the case, reset of these common parameters reset is
ARM GAS  C:\usertemp\cca0PO6L.s 			page 119


 833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behavior in
 834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         case of reset of a single ADC while the other ADCs sharing the same
 835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         common group is still running.
 836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   By default, HAL_ADC_DeInit() set ADC in mode deep power-down:
 837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         this saves more power by reducing leakage currents
 838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         and is particularly interesting before entering MCU low-power modes.
 839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
 840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status
 841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
 842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef *hadc)
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check ADC handle */
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (hadc == NULL)
 848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     return HAL_ERROR;
 850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Set ADC state */
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Stop potential conversion on going */
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped            */
 862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Flush register JSQR: reset the queue sequencer when injected             */
 863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* queue sequencer is enabled and ADC disabled.                             */
 864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* The software and hardware triggers of the injected sequence are both     */
 865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* internally disabled just after the completion of the last valid          */
 866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* injected sequence.                                                       */
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQM);
 868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
 871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Disable the ADC peripheral */
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
 874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Change ADC state */
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       hadc->State = HAL_ADC_STATE_READY;
 880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Note: HAL ADC deInit is done independently of ADC conversion stop        */
 884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /*       and disable return status. In case of status fail, attempt to      */
 885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /*       perform deinitialization anyway and it is up user code in          */
 886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /*       in HAL_ADC_MspDeInit() to reset the ADC peripheral using           */
 887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /*       system RCC hard reset.                                             */
 888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ========== Reset ADC registers ========== */
ARM GAS  C:\usertemp\cca0PO6L.s 			page 120


 890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register IER */
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_AWD3  | ADC_IT_AWD2 | ADC_IT_AWD1 |
 892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_IT_JQOVF | ADC_IT_OVR  |
 893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_IT_JEOS  | ADC_IT_JEOC |
 894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_IT_EOS   | ADC_IT_EOC  |
 895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_IT_EOSMP | ADC_IT_RDY));
 896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register ISR */
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD3  | ADC_FLAG_AWD2 | ADC_FLAG_AWD1 |
 899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_FLAG_JQOVF | ADC_FLAG_OVR  |
 900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_FLAG_JEOS  | ADC_FLAG_JEOC |
 901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_FLAG_EOS   | ADC_FLAG_EOC  |
 902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_FLAG_EOSMP | ADC_FLAG_RDY));
 903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register CR */
 905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Bits ADC_CR_JADSTP, ADC_CR_ADSTP, ADC_CR_JADSTART, ADC_CR_ADSTART,
 906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      ADC_CR_ADCAL, ADC_CR_ADDIS and ADC_CR_ADEN are in access mode "read-set":
 907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      no direct reset applicable.
 908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      Update CR register to reset value where doable by software */
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CR, ADC_CR_ADVREGEN | ADC_CR_ADCALDIF);
 910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   SET_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
 911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register CFGR */
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_AWD1CH  | ADC_CFGR_JAUTO   | ADC_CFGR_JAWD1EN |
 914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_CFGR_AWD1EN  | ADC_CFGR_AWD1SGL | ADC_CFGR_JQM     |
 915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_CFGR_JDISCEN | ADC_CFGR_DISCNUM | ADC_CFGR_DISCEN  |
 916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_CFGR_AUTDLY  | ADC_CFGR_CONT    | ADC_CFGR_OVRMOD  |
 917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_CFGR_EXTEN   | ADC_CFGR_EXTSEL  |
 918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_CFGR_RES     | ADC_CFGR_DMNGT);
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register CFGR2 */
 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSM  | ADC_CFGR2_TROVS   | ADC_CFGR2_OVSS |
 923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_CFGR2_OVSR  | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE);
 924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register SMPR1 */
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SMPR1, ADC_SMPR1_FIELDS);
 927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register SMPR2 */
 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SMPR2, ADC_SMPR2_SMP18 | ADC_SMPR2_SMP17 | ADC_SMPR2_SMP16 |
 930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 |
 931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_SMPR2_SMP12 | ADC_SMPR2_SMP11 | ADC_SMPR2_SMP10);
 932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
 934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (hadc->Instance == ADC3)
 935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {  
 936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Reset register LTR1 and HTR1 */
 937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->LTR1_TR1, ADC3_TR1_HT1 | ADC3_TR1_LT1);
 938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->HTR1_TR2, ADC3_TR2_HT2 | ADC3_TR2_LT2);
 939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Reset register LTR3 and HTR3 */
 941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->RES1_TR3, ADC3_TR3_HT3 | ADC3_TR3_LT3);
 942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
 944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {  
 945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->LTR1_TR1, ADC_LTR_LT);
 946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->HTR1_TR2, ADC_HTR_HT);
ARM GAS  C:\usertemp\cca0PO6L.s 			page 121


 947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Reset register LTR2 and HTR2*/
 949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->LTR2_DIFSEL, ADC_LTR_LT);
 950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->HTR2_CALFACT, ADC_HTR_HT);
 951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Reset register LTR3 and HTR3 */
 953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->LTR3_RES10, ADC_LTR_LT);
 954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->HTR3_RES11, ADC_HTR_HT);
 955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
 957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register LTR1 and HTR1 */
 958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->LTR1, ADC_LTR_LT);
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->HTR1, ADC_HTR_HT);
 960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register LTR2 and HTR2*/
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->LTR2, ADC_LTR_LT);
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->HTR2, ADC_HTR_HT);
 964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register LTR3 and HTR3 */
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->LTR3, ADC_LTR_LT);
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->HTR3, ADC_HTR_HT);
 968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
 969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register SQR1 */
 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR1, ADC_SQR1_SQ4 | ADC_SQR1_SQ3 | ADC_SQR1_SQ2 |
 973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_SQR1_SQ1 | ADC_SQR1_L);
 974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register SQR2 */
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR2, ADC_SQR2_SQ9 | ADC_SQR2_SQ8 | ADC_SQR2_SQ7 |
 977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
 978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register SQR3 */
 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR3, ADC_SQR3_SQ14 | ADC_SQR3_SQ13 | ADC_SQR3_SQ12 |
 981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
 982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register SQR4 */
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->SQR4, ADC_SQR4_SQ16 | ADC_SQR4_SQ15);
 985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Register JSQR was reset when the ADC was disabled */
 987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register DR */
 989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable*/
 990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register OFR1 */
 992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_SSATE | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1);
 993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register OFR2 */
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_SSATE | ADC_OFR2_OFFSET2_CH | ADC_OFR2_OFFSET2);
 995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register OFR3 */
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_SSATE | ADC_OFR3_OFFSET3_CH | ADC_OFR3_OFFSET3);
 997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register OFR4 */
 998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_SSATE | ADC_OFR4_OFFSET4_CH | ADC_OFR4_OFFSET4);
 999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset registers JDR1, JDR2, JDR3, JDR4 */
1001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable*/
1002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register AWD2CR */
ARM GAS  C:\usertemp\cca0PO6L.s 			page 122


1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->AWD2CR, ADC_AWD2CR_AWD2CH);
1005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register AWD3CR */
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->AWD3CR, ADC_AWD3CR_AWD3CH);
1008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
1010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (hadc->Instance == ADC3)
1011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register DIFSEL */
1013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->LTR2_DIFSEL, ADC_DIFSEL_DIFSEL);
1014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register CALFACT */
1016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->HTR2_CALFACT, ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S);
1017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
1019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Reset register DIFSEL */
1021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->DIFSEL_RES12, ADC_DIFSEL_DIFSEL);
1022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Reset register CALFACT */
1024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CALFACT_RES13, ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S);
1025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
1027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register DIFSEL */
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->DIFSEL, ADC_DIFSEL_DIFSEL);
1029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register CALFACT */
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->CALFACT, ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S);
1032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
1033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ========== Reset common ADC registers ========== */
1035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Software is allowed to change common parameters only when all the other
1037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      ADCs are disabled.   */
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
1039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Reset configuration of ADC common register CCR:
1041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       - clock mode: CKMODE, PRESCEN
1042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       - multimode related parameters(when this feature is available): DELAY, DUAL
1043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        (set into  HAL_ADCEx_MultiModeConfigChannel() API)
1044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       - internal measurement paths: Vbat, temperature sensor, Vref (set into
1045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         HAL_ADC_ConfigChannel() or HAL_ADCEx_InjectedConfigChannel() )
1046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     */
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     ADC_CLEAR_COMMON_CONTROL_REGISTER(hadc);
1048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* ========== Hard reset ADC peripheral ========== */
1050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Performs a global reset of the entire ADC peripherals instances        */
1051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* sharing the same common ADC instance: ADC state is forced to           */
1052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* a similar state as after device power-on.                              */
1053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Note: A possible implementation is to add RCC bus reset of ADC         */
1054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* (for example, using macro                                              */
1055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  __HAL_RCC_ADC..._FORCE_RESET()/..._RELEASE_RESET()/..._CLK_DISABLE()) */
1056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* in function "void HAL_ADC_MspDeInit(ADC_HandleTypeDef *hadc)":         */
1057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->MspDeInitCallback == NULL)
1060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
ARM GAS  C:\usertemp\cca0PO6L.s 			page 123


1061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit  */
1062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* DeInit the low level hardware: RCC clock, NVIC */
1065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->MspDeInitCallback(hadc);
1066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
1067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* DeInit the low level hardware: RCC clock, NVIC */
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     HAL_ADC_MspDeInit(hadc);
1069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Set ADC error code to none */
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ADC_CLEAR_ERRORCODE(hadc);
1075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset injected channel configuration parameters */
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   hadc->InjectionConfig.ContextQueue = 0;
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
1079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Set ADC state */
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   hadc->State = HAL_ADC_STATE_RESET;
1082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process unlocked */
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return tmp_hal_status;
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
1089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
1091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Initialize the ADC MSP.
1092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
1093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None
1094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
1095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef *hadc)
1096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
 183              		.loc 1 1096 1 is_stmt 1 view -0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              		@ link register save eliminated.
1097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   UNUSED(hadc);
 188              		.loc 1 1098 3 view .LVU27
1099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             function HAL_ADC_MspInit must be implemented in the user file.
1102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****    */
1103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 189              		.loc 1 1103 1 is_stmt 0 view .LVU28
 190 0000 7047     		bx	lr
 191              		.cfi_endproc
 192              	.LFE335:
 194              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 195              		.align	1
 196              		.weak	HAL_ADC_MspDeInit
 197              		.syntax unified
ARM GAS  C:\usertemp\cca0PO6L.s 			page 124


 198              		.thumb
 199              		.thumb_func
 201              	HAL_ADC_MspDeInit:
 202              	.LVL15:
 203              	.LFB336:
1104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
1106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  DeInitialize the ADC MSP.
1107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
1108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   All ADC instances use the same core clock at RCC level, disabling
1109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         the core clock reset all ADC instances).
1110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None
1111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
1112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef *hadc)
1113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
 204              		.loc 1 1113 1 is_stmt 1 view -0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
1114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
1115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   UNUSED(hadc);
 209              		.loc 1 1115 3 view .LVU30
1116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             function HAL_ADC_MspDeInit must be implemented in the user file.
1119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****    */
1120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 210              		.loc 1 1120 1 is_stmt 0 view .LVU31
 211 0000 7047     		bx	lr
 212              		.cfi_endproc
 213              	.LFE336:
 215              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 216              		.align	1
 217              		.global	HAL_ADC_PollForConversion
 218              		.syntax unified
 219              		.thumb
 220              		.thumb_func
 222              	HAL_ADC_PollForConversion:
 223              	.LVL16:
 224              	.LFB339:
1121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
1124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Register a User ADC Callback
1125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         To be used instead of the weak predefined callback
1126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
1127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *                the configuration information for the specified ADC.
1128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be registered
1129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         This parameter can be one of the following values:
1130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
1131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
1132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
1133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
1134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
1135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID        ADC group injected context queue over
1136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
ARM GAS  C:\usertemp\cca0PO6L.s 			page 125


1137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
1138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
1139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
1140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
1141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  pCallback pointer to the Callback function
1142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status
1143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
1144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_RegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Callb
1145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
1146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
1147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (pCallback == NULL)
1149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update the error code */
1151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     return HAL_ERROR;
1154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
1157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     switch (CallbackID)
1159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
1161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->ConvCpltCallback = pCallback;
1162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
1165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = pCallback;
1166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
1169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = pCallback;
1170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
1173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->ErrorCallback = pCallback;
1174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
1177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = pCallback;
1178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID :
1181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->InjectedQueueOverflowCallback = pCallback;
1182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
1185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = pCallback;
1186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
1189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = pCallback;
1190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
1193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->EndOfSamplingCallback = pCallback;
ARM GAS  C:\usertemp\cca0PO6L.s 			page 126


1194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
1198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
1202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       default :
1205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Update the error code */
1206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Return error status */
1209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         status = HAL_ERROR;
1210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     switch (CallbackID)
1216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
1219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
1223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       default :
1226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Update the error code */
1227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Return error status */
1230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         status = HAL_ERROR;
1231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
1235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update the error code */
1237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Return error status */
1240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     status =  HAL_ERROR;
1241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return status;
1244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
1245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
1247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Unregister a ADC Callback
1248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         ADC callback is redirected to the weak predefined callback
1249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
1250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *                the configuration information for the specified ADC.
ARM GAS  C:\usertemp\cca0PO6L.s 			page 127


1251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be unregistered
1252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         This parameter can be one of the following values:
1253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
1254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
1255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
1256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
1257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID  ADC group injected conversion complet
1258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID        ADC group injected context queue over
1259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
1260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
1261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
1262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
1263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
1264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status
1265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
1266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_UnRegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Cal
1267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
1268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
1269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
1271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     switch (CallbackID)
1273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
1275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->ConvCpltCallback = HAL_ADC_ConvCpltCallback;
1276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
1279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = HAL_ADC_ConvHalfCpltCallback;
1280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
1283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = HAL_ADC_LevelOutOfWindowCallback;
1284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
1287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->ErrorCallback = HAL_ADC_ErrorCallback;
1288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_INJ_CONVERSION_COMPLETE_CB_ID :
1291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->InjectedConvCpltCallback = HAL_ADCEx_InjectedConvCpltCallback;
1292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_INJ_QUEUE_OVEFLOW_CB_ID :
1295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->InjectedQueueOverflowCallback = HAL_ADCEx_InjectedQueueOverflowCallback;
1296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
1299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = HAL_ADCEx_LevelOutOfWindow2Callback;
1300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
1303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = HAL_ADCEx_LevelOutOfWindow3Callback;
1304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
1307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->EndOfSamplingCallback = HAL_ADCEx_EndOfSamplingCallback;
ARM GAS  C:\usertemp\cca0PO6L.s 			page 128


1308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit              */
1312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit            */
1316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       default :
1319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Update the error code */
1320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Return error status */
1323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         status =  HAL_ERROR;
1324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     switch (CallbackID)
1330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit;                   /* Legacy weak MspInit          
1333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit;               /* Legacy weak MspDeInit        
1337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       default :
1340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Update the error code */
1341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Return error status */
1344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         status =  HAL_ERROR;
1345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
1346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
1349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update the error code */
1351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Return error status */
1354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     status =  HAL_ERROR;
1355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return status;
1358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
1359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
1363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @}
1364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
ARM GAS  C:\usertemp\cca0PO6L.s 			page 129


1365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 ADC Input and Output operation functions
1367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief    ADC IO operation functions
1368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *
1369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** @verbatim
1370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****  ===============================================================================
1371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                       ##### IO operation functions #####
1372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****  ===============================================================================
1373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Start conversion of regular group.
1375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Stop conversion of regular group.
1376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Poll for conversion complete on regular group.
1377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Poll for conversion event.
1378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Get result of regular channel conversion.
1379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Start conversion of regular group and enable interruptions.
1380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Stop conversion of regular group and disable interruptions.
1381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Handle ADC interrupt request
1382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Start conversion of regular group and enable DMA transfer.
1383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Stop conversion of regular group and disable ADC DMA transfer.
1384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** @endverbatim
1385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @{
1386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
1387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
1389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group.
1390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Interruptions enabled in this function: None.
1391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
1392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *           if ADC is Slave, ADC is enabled but conversion is not started,
1393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *           if ADC is master, ADC is enabled and multimode conversion is started.
1394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
1395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status
1396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
1397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef *hadc)
1398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
1399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
1402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
1404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Process locked */
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_LOCK(hadc);
1411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Enable the ADC peripheral */
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state                                                        */
1419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
ARM GAS  C:\usertemp\cca0PO6L.s 			page 130


1422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
1426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         - if ADC instance is master or if multimode feature is not available
1427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          )
1431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC error code */
1436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Check if a conversion is on going on ADC group injected */
1437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
1438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Reset ADC error code fields related to regular conversions only */
1440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
1441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
1443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Reset all ADC error code fields */
1445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
1446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Process unlocked */
1453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* trigger event.                                                       */
1461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Case of multimode enabled (when multimode feature is available):     */
1462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*  - if ADC is slave and dual regular conversions are enabled, ADC is  */
1463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*    enabled only (conversion is not started),                         */
1464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
1468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
1469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          )
1470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* ADC instance is not a multimode slave instance with multimode regular conversions enable
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
1474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
1476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Start ADC group regular conversion */
1478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
ARM GAS  C:\usertemp\cca0PO6L.s 			page 131


1479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
1481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* ADC instance is a multimode slave instance with multimode regular conversions enabled */
1483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, update Slave State in setting
1485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            HAL_ADC_STATE_INJ_BUSY bit and in resetting HAL_ADC_STATE_INJ_EOC bit */
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
1487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
1488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
1489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
1491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
1495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Process unlocked */
1497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
1501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
1506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return tmp_hal_status;
1507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
1508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
1510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in
1511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC peripheral.
1512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
1513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
1514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
1516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status.
1517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
1518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef *hadc)
1519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
1520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
1523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process locked */
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_LOCK(hadc);
1527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC groups regular and injected */
1529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
1530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
ARM GAS  C:\usertemp\cca0PO6L.s 			page 132


1536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process unlocked */
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return tmp_hal_status;
1552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
1553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
1555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Wait for regular group conversion to be completed.
1556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
1557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         conversion) are cleared by this function, with an exception:
1558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         if low power feature "LowPowerAutoWait" is enabled, flags are
1559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         not cleared to not interfere with this feature until data register
1560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         is read using function HAL_ADC_GetValue().
1561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured
1562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
1563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
1564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
1565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still
1566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         be performed on the complete sequence (ADC init
1567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SEQ_CONV).
1568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
1569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status
1571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
1572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef *hadc, uint32_t Timeout)
1573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
 225              		.loc 1 1573 1 is_stmt 1 view -0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229              		.loc 1 1573 1 is_stmt 0 view .LVU33
 230 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 231              	.LCFI6:
 232              		.cfi_def_cfa_offset 24
 233              		.cfi_offset 4, -24
 234              		.cfi_offset 5, -20
 235              		.cfi_offset 6, -16
 236              		.cfi_offset 7, -12
 237              		.cfi_offset 8, -8
 238              		.cfi_offset 14, -4
 239 0004 0446     		mov	r4, r0
 240 0006 0E46     		mov	r6, r1
1574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart;
 241              		.loc 1 1574 3 is_stmt 1 view .LVU34
1575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_Flag_End;
ARM GAS  C:\usertemp\cca0PO6L.s 			page 133


 242              		.loc 1 1575 3 view .LVU35
1576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_cfgr;
 243              		.loc 1 1576 3 view .LVU36
1577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
 244              		.loc 1 1577 3 view .LVU37
1578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 245              		.loc 1 1578 3 view .LVU38
 246              		.loc 1 1578 55 is_stmt 0 view .LVU39
 247 0008 0368     		ldr	r3, [r0]
 248              		.loc 1 1578 35 view .LVU40
 249 000a 4649     		ldr	r1, .L37
 250              	.LVL17:
 251              		.loc 1 1578 35 view .LVU41
 252 000c 464A     		ldr	r2, .L37+4
 253 000e 9342     		cmp	r3, r2
 254 0010 18BF     		it	ne
 255 0012 8B42     		cmpne	r3, r1
 256 0014 33D1     		bne	.L26
 257              		.loc 1 1578 35 discriminator 1 view .LVU42
 258 0016 02F50072 		add	r2, r2, #512
 259              	.L12:
 260              	.LVL18:
 261              	.LBB272:
 262              	.LBI272:
5720:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5721:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5722:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
5723:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Usage of the returned channel number:
5724:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
5725:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
5726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
5727:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
5728:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5729:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
5730:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           as parameter for another function.
5731:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - To get the channel number in decimal format:
5732:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           process the returned value with the helper macro
5733:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5734:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
5735:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           one channel.
5736:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5737:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         instance:
5738:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5739:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5740:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5741:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5742:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC resolution configured).
5743:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5744:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5745:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5746:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5747:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             be selected. For example:
5748:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5749:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5750:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             groups regular and injected).
5751:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5752:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
ARM GAS  C:\usertemp\cca0PO6L.s 			page 134


5753:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5754:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5755:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5756:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             the 2 LSB are ignored.
5757:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5758:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
5759:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5760:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
5761:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
5762:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
5763:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
5764:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_GetAnalogWDMonitChannels\n
5765:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
5766:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
5767:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5768:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5769:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5770:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
5771:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
5772:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5773:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
5774:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
5775:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
5776:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             multiple channels are programmed simultaneously
5777:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             by bitfield.
5778:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5779:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5780:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5781:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
5782:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
5783:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5784:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
5785:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
5786:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5787:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
5788:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
5789:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5790:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
5791:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
5792:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5793:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
5794:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
5795:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5796:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
5797:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
5798:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5799:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5800:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5801:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5802:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5803:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5804:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5805:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5806:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5807:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5808:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5809:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
ARM GAS  C:\usertemp\cca0PO6L.s 			page 135


5810:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5811:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5812:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5813:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5814:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5815:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5817:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5819:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5820:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5821:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5822:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5823:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5824:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5825:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5826:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5827:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5828:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5830:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5831:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5832:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5833:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5834:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5835:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5836:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5837:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5838:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5839:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5840:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG          (0)
5841:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_INJ          (0)
5842:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_19_REG_INJ
5843:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
5844:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (0) On STM32H7, parameter available only on analog watchdog number: AWD1.
5845:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5846:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy)
5847:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5848:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)
5849:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                             + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MA
5850:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5851:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   uint32_t AnalogWDMonitChannels = (READ_BIT(*preg, AWDy) & AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK);
5852:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5853:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* If "AnalogWDMonitChannels" == 0, then the selected AWD is disabled       */
5854:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
5855:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
5856:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* or a single channel.                                                     */
5857:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (AnalogWDMonitChannels != 0UL)
5858:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
5859:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
5860:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
5861:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_CFGR_AWD1SGL) == 0UL)
5862:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       {
5863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5864:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         AnalogWDMonitChannels = ((AnalogWDMonitChannels
5865:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                   | (ADC_AWD_CR23_CHANNEL_MASK)
5866:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                  )
ARM GAS  C:\usertemp\cca0PO6L.s 			page 136


5867:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                  & (~(ADC_CFGR_AWD1CH))
5868:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                 );
5869:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       }
5870:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       else
5871:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       {
5872:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         /* AWD monitoring a single channel */
5873:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
5874:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                  | (ADC_AWD2CR_AWD2CH_0 << (AnalogWDMonitChannels >> ADC_CFGR_AWD1C
5875:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                 );
5876:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       }
5877:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
5878:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     else
5879:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     {
5880:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
5881:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       {
5882:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5883:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         AnalogWDMonitChannels = (ADC_AWD_CR23_CHANNEL_MASK
5884:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                  | ((ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN))
5885:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                 );
5886:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       }
5887:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       else
5888:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       {
5889:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         /* AWD monitoring a single channel */
5890:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5891:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
5892:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                  | (ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)
5893:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                  | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDMonitChannels) << ADC_CF
5894:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                 );
5895:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****       }
5896:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     }
5897:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
5898:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5899:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return AnalogWDMonitChannels;
5900:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5901:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5902:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5903:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
5904:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         high or low.
5905:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5906:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5907:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
5908:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5909:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         instance:
5910:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5911:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5912:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5913:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5914:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC resolution configured).
5915:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5916:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5917:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5918:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5919:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             be selected. For example:
5920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5921:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             groups regular and injected).
5923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 137


5924:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5925:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5927:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5928:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             the 2 LSB are ignored.
5929:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
5930:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done
5931:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on oversampling intermediate computation (after ratio, before shift
5932:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         application): intermediate register bitfield [32:7]
5933:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (26 most significant bits).
5934:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5935:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
5936:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5937:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either ADC groups regular or injected.
5938:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_SetAnalogWDThresholds\n
5939:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_SetAnalogWDThresholds\n
5940:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_SetAnalogWDThresholds\n
5941:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_SetAnalogWDThresholds\n
5942:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_SetAnalogWDThresholds\n
5943:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_SetAnalogWDThresholds
5944:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
5945:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5946:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5947:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5949:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
5950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
5951:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
5952:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
5953:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
5954:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
5955:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
5956:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
5957:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
5958:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
5959:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
5960:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Set bits with content of parameter "AWDThresholdValue" with bits         */
5961:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* position in register and register position depending on parameters       */
5962:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* "AWDThresholdsHighLow" and "AWDy".                                       */
5963:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
5964:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* containing other bits reserved for other purpose.                        */
5965:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->LTR1_TR1, ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK)
5966:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5967:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
5968:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                AWDThresholdsHighLow,
5969:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_
5970:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
5971:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
5972:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
5973:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Set bits with content of parameter "AWDThresholdValue" with bits         */
5974:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* position in register and register position depending on parameters       */
5975:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* "AWDThresholdsHighLow" and "AWDy".                                       */
5976:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
5977:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* containing other bits reserved for other purpose.                        */
5978:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->LTR1_TR1, (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK
5979:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                         + ((AWDy & ADC_AWD_TR12_REGOFFSETGAP_MASK) 
5980:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                         + (AWDThresholdsHighLow));
ARM GAS  C:\usertemp\cca0PO6L.s 			page 138


5981:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5982:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg, ADC_LTR_LT, AWDThresholdValue);
5983:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
5984:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
5985:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
5986:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
5987:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
5988:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
5989:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5990:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->LTR1, (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> A
5991:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_TR12_REGOFFSETGAP_MASK) * 
5992:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                       + (AWDThresholdsHighLow));
5993:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5994:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(*preg, ADC_LTR_LT, AWDThresholdValue);
5995:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif  /* ADC_VER_V5_V90 */
5996:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
5997:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
5998:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
5999:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
6000:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
6001:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         concatenated.
6002:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6003:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
6004:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
6005:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_GetAnalogWDThresholds\n
6006:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_GetAnalogWDThresholds\n
6007:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_GetAnalogWDThresholds\n
6008:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_GetAnalogWDThresholds\n
6009:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_GetAnalogWDThresholds\n
6010:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_GetAnalogWDThresholds
6011:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6013:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6014:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
6015:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
6016:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
6017:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
6018:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
6019:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FFFFFF
6020:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** */
6021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AW
6022:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6023:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
6024:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->LTR1_TR1, (((AWDy & ADC_AWD_TRX_REGOFFSET_
6025:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                             + ((AWDy & ADC_AWD_TR12_REGOFFSETGAP_MA
6026:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                             + (AWDThresholdsHighLow));
6027:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6028:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg, ADC_LTR_LT));
6029:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else
6030:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****    const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->LTR1, (((AWDy & ADC_AWD_TRX_REGOFFSET_MAS
6031:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                    + ((AWDy & ADC_AWD_TR12_REGOFFSE
6032:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                                    + (AWDThresholdsHighLow));
6033:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6034:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg, ADC_LTR_LT));
6035:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
6036:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6037:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 139


6038:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
6039:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6040:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
6042:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         high and low. Applicable for devices STM32H72xx and STM32H73xx.
6043:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
6044:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
6045:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
6046:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
6047:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
6048:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
6049:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         instance:
6050:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
6051:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
6052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
6053:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
6054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             ADC resolution configured).
6055:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
6056:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
6057:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
6058:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
6059:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             be selected. For example:
6060:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
6061:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
6062:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             groups regular and injected).
6063:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
6064:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
6065:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
6066:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
6067:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
6068:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *             the 2 LSB are ignored.
6069:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_ConfigAnalogWDThresholds\n
6070:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_ConfigAnalogWDThresholds\n
6071:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_ConfigAnalogWDThresholds\n
6072:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_ConfigAnalogWDThresholds\n
6073:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_ConfigAnalogWDThresholds\n
6074:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_ConfigAnalogWDThresholds
6075:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6076:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6077:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6078:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
6079:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
6080:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
6081:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
6082:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6083:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6084:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
6085:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6086:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
6087:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* position in register and register position depending on parameter        */
6088:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* "AWDy".                                                                  */
6089:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
6090:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
6091:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
6092:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6093:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     uint32_t __IO *preg = __ADC_PTR_REG_OFFSET(ADCx->LTR1_TR1, ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK)
6094:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 140


6095:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg,
6096:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC3_TR1_HT1 | ADC3_TR1_LT1,
6097:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                (AWDThresholdHighValue << ADC3_TR1_HT1_Pos) | AWDThresholdLowValue);
6098:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6099:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
6100:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6101:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->LTR1_TR1, (((AWDy & ADC_AWD_TRX_REGOFFSET_MASK
6102:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                         + ((AWDy & ADC_AWD_TR12_REGOFFSETGAP_MASK) 
6103:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                         + (LL_ADC_AWD_THRESHOLD_LOW));
6104:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     __IO uint32_t *preg2 = __ADC_PTR_REG_OFFSET(ADCx->LTR1_TR1, (((AWDy & ADC_AWD_TRX_REGOFFSET_MAS
6105:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                          + ((AWDy & ADC_AWD_TR12_REGOFFSETGAP_MASK)
6106:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                          + (LL_ADC_AWD_THRESHOLD_HIGH));
6107:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6108:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg, ADC_LTR_LT, AWDThresholdLowValue);
6109:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg2, ADC_HTR_HT, AWDThresholdHighValue);
6110:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6111:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6112:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6113:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6114:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6115:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC analog watchdog filtering configuration
6116:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6117:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6118:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6119:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
6120:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Applicable on ADC3 of devices STM32H72xx and STM32H73xx.
6121:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *  @note  On this STM32 series, this feature is only available on first
6122:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         analog watchdog (AWD1)
6123:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll TR1      AWDFILT        LL_ADC_SetAWDFilteringConfiguration
6124:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6125:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6126:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6127:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  FilteringConfig This parameter can be one of the following values:
6128:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_NONE
6129:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_2SAMPLES
6130:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_3SAMPLES
6131:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_4SAMPLES
6132:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_5SAMPLES
6133:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_6SAMPLES
6134:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_7SAMPLES
6135:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_8SAMPLES
6136:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6137:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6138:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAWDFilteringConfiguration(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t
6139:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6140:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
6141:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6142:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Prevent unused argument(s) compilation warning */
6143:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     (void)(AWDy);
6144:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->LTR1_TR1, ADC3_TR1_AWDFILT, FilteringConfig);
6145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6146:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6147:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6148:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6149:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC analog watchdog filtering configuration
6150:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *  @note  On this STM32 series, this feature is only available on first
6151:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         analog watchdog (AWD1)
ARM GAS  C:\usertemp\cca0PO6L.s 			page 141


6152:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Applicable on ADC3 of devices STM32H72xx and STM32H73xx.
6153:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll TR1      AWDFILT        LL_ADC_GetAWDFilteringConfiguration
6154:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6155:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
6156:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
6157:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be:
6158:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_NONE
6159:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_2SAMPLES
6160:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_3SAMPLES
6161:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_4SAMPLES
6162:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_5SAMPLES
6163:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_6SAMPLES
6164:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_7SAMPLES
6165:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_FILTERING_8SAMPLES
6166:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6167:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAWDFilteringConfiguration(ADC_TypeDef *ADCx, uint32_t AWDy)
6168:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6169:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx == ADC3)
6170:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6171:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Prevent unused argument(s) compilation warning */
6172:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     (void)(AWDy);
6173:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t)(READ_BIT(ADCx->LTR1_TR1, ADC3_TR1_AWDFILT));
6174:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6175:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else
6176:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6177:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     /* Function not available on this instance, return 0 */
6178:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return 0UL;
6179:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6180:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6181:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif /* ADC_VER_V5_V90 */
6182:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6183:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
6184:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6185:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6186:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
6187:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
6188:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6189:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6190:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6191:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC oversampling scope: ADC groups regular and-or injected
6192:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
6193:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
6194:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
6195:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
6196:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
6197:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
6198:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (oversampler buffer reset).
6199:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6200:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6201:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6202:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
6203:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_SetOverSamplingScope\n
6204:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_SetOverSamplingScope\n
6205:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_SetOverSamplingScope
6206:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6207:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
6208:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
ARM GAS  C:\usertemp\cca0PO6L.s 			page 142


6209:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
6210:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
6211:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
6212:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
6213:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6214:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6215:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
6216:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6217:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM, OvsScope);
6218:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6220:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6221:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC oversampling scope: ADC groups regular and-or injected
6222:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
6223:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
6224:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
6225:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
6226:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
6227:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
6228:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (oversampler buffer reset).
6229:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_GetOverSamplingScope\n
6230:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_GetOverSamplingScope\n
6231:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_GetOverSamplingScope
6232:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6233:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6234:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
6235:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
6236:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
6237:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
6238:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
6239:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6240:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(ADC_TypeDef *ADCx)
6241:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6242:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM));
6243:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6244:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6245:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6246:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
6247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on the selected ADC group.
6248:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
6249:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
6250:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           are done from 1 trigger)
6251:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
6252:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           needs a trigger)
6253:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6254:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6255:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6256:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on group regular.
6257:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, oversampling discontinuous mode
6258:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (triggered mode) can be used only when oversampling is
6259:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         set on group regular only and in resumed mode.
6260:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_SetOverSamplingDiscont
6261:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6262:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
6263:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
6264:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
6265:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
ARM GAS  C:\usertemp\cca0PO6L.s 			page 143


6266:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6267:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
6268:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6269:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TROVS, OverSamplingDiscont);
6270:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6271:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6272:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6273:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
6274:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on the selected ADC group.
6275:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
6276:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
6277:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           are done from 1 trigger)
6278:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
6279:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           needs a trigger)
6280:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_GetOverSamplingDiscont
6281:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6282:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6283:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
6284:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
6285:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6286:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(ADC_TypeDef *ADCx)
6287:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6288:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TROVS));
6289:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6290:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6291:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6292:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC oversampling
6293:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (impacting both ADC groups regular and injected)
6294:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
6295:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ratio
6296:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - shift
6297:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6298:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6299:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
6300:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
6301:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
6302:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
6303:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6304:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Ratio This parameter can be in the range from 1 to 1024.
6305:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
6306:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
6307:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
6308:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
6309:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
6310:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
6311:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
6312:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
6313:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
6314:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
6315:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_9
6316:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_10
6317:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_11
6318:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6319:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6320:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
6321:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6322:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | (((Ratio - 1UL) << ADC_CFGR2_
ARM GAS  C:\usertemp\cca0PO6L.s 			page 144


6323:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6324:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6325:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6326:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
6327:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
6328:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
6329:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6330:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Ratio This parameter can be in the from 1 to 1024.
6331:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** */
6332:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(ADC_TypeDef *ADCx)
6333:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6334:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (((uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR)) + (1UL << ADC_CFGR2_OVSR_Pos)) >> ADC_
6335:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6336:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6337:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6338:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC oversampling shift
6339:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
6340:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
6341:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6342:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
6343:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
6344:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
6345:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
6346:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
6347:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
6348:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
6349:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
6350:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
6351:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
6352:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_9
6353:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_10
6354:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_11
6355:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** */
6356:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(ADC_TypeDef *ADCx)
6357:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6358:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
6359:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6360:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6361:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6362:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
6363:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6364:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6365:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Multimode Configuration of ADC hierarchical scope: multim
6366:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
6367:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6368:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6369:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC boost mode.
6370:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6371:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC boost must be configured, without calibration on going, without conversion
6373:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on group regular.
6374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR  BOOST      LL_ADC_SetBoostMode
6375:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6376:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  BoostMode This parameter can be one of the following values:
6377:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOOST_MODE_6MHZ25
6378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOOST_MODE_12MHZ5
6379:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOOST_MODE_20MHZ
ARM GAS  C:\usertemp\cca0PO6L.s 			page 145


6380:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOOST_MODE_25MHZ
6381:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOOST_MODE_50MHZ
6382:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6383:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6384:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetBoostMode(ADC_TypeDef *ADCx, uint32_t BoostMode)
6385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6386:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
6387:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if (ADCx != ADC3)
6388:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CR, ADC_CR_BOOST, (BoostMode & ADC_CR_BOOST));
6390:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6391:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #else   /* ADC_VER_V5_V90 */
6392:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if ((DBGMCU->IDCODE & 0x30000000UL) == 0x10000000UL) /* Cut 1.x */
6393:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6394:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CR, ADC_CR_BOOST_0, (BoostMode >> 2UL));
6395:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6396:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else /* Cut 2.x */
6397:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6398:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(ADCx->CR, ADC_CR_BOOST, (BoostMode & ADC_CR_BOOST));
6399:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6400:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #endif
6401:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6402:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6403:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6404:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6405:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC boost mode.
6406:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6407:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6408:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC boost must be configured, without calibration on going, without conversion
6409:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on going on group regular.
6410:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR  BOOST      LL_ADC_GetBoostMode
6411:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6412:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: Boost disabled 1: Boost enabled
6413:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6414:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetBoostMode(ADC_TypeDef *ADCx)
6415:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6416:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   if ((DBGMCU->IDCODE & 0x30000000UL) == 0x10000000UL) /* Cut 1.x */
6417:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6418:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return (uint32_t)READ_BIT(ADCx->CR, ADC_CR_BOOST_0);
6419:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6420:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   else /* Cut 2.x */
6421:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   {
6422:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     return ((READ_BIT(ADCx->CR, ADC_CR_BOOST) == (ADC_CR_BOOST)) ? 1UL : 0UL);
6423:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
6424:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6425:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6426:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6427:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC multimode configuration to operate in independent mode
6428:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
6429:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
6430:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         either master or slave depending on hardware.
6431:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to reference manual.
6432:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6433:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6434:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
6435:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
6436:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instance or by using helper macro
ARM GAS  C:\usertemp\cca0PO6L.s 			page 146


6437:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
6438:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_SetMultimode
6439:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6440:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6441:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Multimode This parameter can be one of the following values:
6442:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
6443:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
6444:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
6445:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
6446:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
6447:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
6448:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
6449:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
6450:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6451:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6452:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultimode(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Multimode)
6453:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DUAL, Multimode);
6455:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6457:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC multimode configuration to operate in independent mode
6459:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
6460:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
6461:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         either master or slave depending on hardware.
6462:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to reference manual.
6463:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_GetMultimode
6464:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6465:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6466:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6467:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
6468:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
6469:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
6470:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
6471:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
6472:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
6473:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
6474:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
6475:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6476:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultimode(ADC_Common_TypeDef *ADCxy_COMMON)
 263              		.loc 2 6476 26 is_stmt 1 view .LVU43
 264              	.LBB273:
6477:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DUAL));
 265              		.loc 2 6478 3 view .LVU44
 266              		.loc 2 6478 21 is_stmt 0 view .LVU45
 267 001a 9768     		ldr	r7, [r2, #8]
 268              		.loc 2 6478 10 view .LVU46
 269 001c 07F01F07 		and	r7, r7, #31
 270              	.LVL19:
 271              		.loc 2 6478 10 view .LVU47
 272              	.LBE273:
 273              	.LBE272:
1579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
1581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 274              		.loc 1 1581 3 is_stmt 1 view .LVU48
ARM GAS  C:\usertemp\cca0PO6L.s 			page 147


1582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* If end of conversion selected to end of sequence conversions */
1584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 275              		.loc 1 1584 3 view .LVU49
 276              		.loc 1 1584 17 is_stmt 0 view .LVU50
 277 0020 2569     		ldr	r5, [r4, #16]
 278              		.loc 1 1584 6 view .LVU51
 279 0022 082D     		cmp	r5, #8
 280 0024 0CD0     		beq	.L13
1585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_Flag_End = ADC_FLAG_EOS;
1587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* If end of conversion selected to end of unitary conversion */
1589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else /* ADC_EOC_SINGLE_CONV */
1590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Verification that ADC configuration is compliant with polling for      */
1592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* each conversion:                                                       */
1593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
1594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* several ranks and polling for end of each conversion.                  */
1595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* For code simplicity sake, this particular case is generalized to       */
1596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* ADC configured in DMA mode and and polling for end of each conversion. */
1597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 281              		.loc 1 1597 5 is_stmt 1 view .LVU52
 282 0026 092F     		cmp	r7, #9
 283 0028 31D8     		bhi	.L14
 284 002a 40F22121 		movw	r1, #545
 285 002e F940     		lsrs	r1, r1, r7
 286 0030 11F0010F 		tst	r1, #1
 287 0034 2BD0     		beq	.L14
1598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
1599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
1600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        )
1601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Check DMNGT bit in handle ADC CFGR register */
1603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMNGT_0) != 0UL)
 288              		.loc 1 1603 7 view .LVU53
 289              		.loc 1 1603 11 is_stmt 0 view .LVU54
 290 0036 DB68     		ldr	r3, [r3, #12]
 291              		.loc 1 1603 10 view .LVU55
 292 0038 13F0010F 		tst	r3, #1
 293 003c 21D1     		bne	.L32
1604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         return HAL_ERROR;
1607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
1609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_Flag_End = (ADC_FLAG_EOC);
 294              		.loc 1 1610 22 view .LVU56
 295 003e 0425     		movs	r5, #4
 296              	.L13:
 297              	.LVL20:
1611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
1614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Check ADC DMA mode in multimode on ADC group regular */
ARM GAS  C:\usertemp\cca0PO6L.s 			page 148


1616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (LL_ADC_GetMultiDMATransfer(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) != LL_ADC_MULTI_REG_
1617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         return HAL_ERROR;
1620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
1622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_Flag_End = (ADC_FLAG_EOC);
1624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Get tick count */
1629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tickstart = HAL_GetTick();
 298              		.loc 1 1629 3 is_stmt 1 view .LVU57
 299              		.loc 1 1629 15 is_stmt 0 view .LVU58
 300 0040 FFF7FEFF 		bl	HAL_GetTick
 301              	.LVL21:
 302              		.loc 1 1629 15 view .LVU59
 303 0044 8046     		mov	r8, r0
 304              	.LVL22:
1630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Wait until End of unitary conversion or sequence conversions flag is raised */
1632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   while ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 305              		.loc 1 1632 3 is_stmt 1 view .LVU60
 306              	.L17:
 307              		.loc 1 1632 47 view .LVU61
 308              		.loc 1 1632 15 is_stmt 0 view .LVU62
 309 0046 2368     		ldr	r3, [r4]
 310              		.loc 1 1632 25 view .LVU63
 311 0048 1A68     		ldr	r2, [r3]
 312              		.loc 1 1632 47 view .LVU64
 313 004a 2A42     		tst	r2, r5
 314 004c 2BD1     		bne	.L33
1633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
 315              		.loc 1 1635 5 is_stmt 1 view .LVU65
 316              		.loc 1 1635 8 is_stmt 0 view .LVU66
 317 004e B6F1FF3F 		cmp	r6, #-1
 318 0052 F8D0     		beq	.L17
1636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 319              		.loc 1 1637 7 is_stmt 1 view .LVU67
 320              		.loc 1 1637 13 is_stmt 0 view .LVU68
 321 0054 FFF7FEFF 		bl	HAL_GetTick
 322              	.LVL23:
 323              		.loc 1 1637 27 discriminator 1 view .LVU69
 324 0058 A0EB0800 		sub	r0, r0, r8
 325              		.loc 1 1637 10 discriminator 1 view .LVU70
 326 005c B042     		cmp	r0, r6
 327 005e 01D8     		bhi	.L18
 328              		.loc 1 1637 51 discriminator 1 view .LVU71
 329 0060 002E     		cmp	r6, #0
 330 0062 F0D1     		bne	.L17
 331              	.L18:
1638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
ARM GAS  C:\usertemp\cca0PO6L.s 			page 149


1639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
1640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 332              		.loc 1 1640 9 is_stmt 1 view .LVU72
 333              		.loc 1 1640 17 is_stmt 0 view .LVU73
 334 0064 2368     		ldr	r3, [r4]
 335              		.loc 1 1640 27 view .LVU74
 336 0066 1B68     		ldr	r3, [r3]
 337              		.loc 1 1640 11 view .LVU75
 338 0068 2B42     		tst	r3, r5
 339 006a ECD1     		bne	.L17
1641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
1642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Update ADC state machine to timeout */
1643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 340              		.loc 1 1643 11 is_stmt 1 view .LVU76
 341 006c 636D     		ldr	r3, [r4, #84]
 342 006e 43F00403 		orr	r3, r3, #4
 343 0072 6365     		str	r3, [r4, #84]
1644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Process unlocked */
1646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 344              		.loc 1 1646 11 view .LVU77
 345              		.loc 1 1646 11 view .LVU78
 346 0074 0023     		movs	r3, #0
 347 0076 84F85030 		strb	r3, [r4, #80]
 348              		.loc 1 1646 11 view .LVU79
1647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           return HAL_TIMEOUT;
 349              		.loc 1 1648 11 view .LVU80
 350              		.loc 1 1648 18 is_stmt 0 view .LVU81
 351 007a 0320     		movs	r0, #3
 352 007c 4DE0     		b	.L15
 353              	.LVL24:
 354              	.L26:
1578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 355              		.loc 1 1578 35 discriminator 2 view .LVU82
 356 007e 2B4A     		ldr	r2, .L37+8
 357 0080 CBE7     		b	.L12
 358              	.LVL25:
 359              	.L32:
1605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         return HAL_ERROR;
 360              		.loc 1 1605 9 is_stmt 1 view .LVU83
 361 0082 636D     		ldr	r3, [r4, #84]
 362 0084 43F02003 		orr	r3, r3, #32
 363 0088 6365     		str	r3, [r4, #84]
1606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 364              		.loc 1 1606 9 view .LVU84
1606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 365              		.loc 1 1606 16 is_stmt 0 view .LVU85
 366 008a 0120     		movs	r0, #1
 367              	.LVL26:
1606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 368              		.loc 1 1606 16 view .LVU86
 369 008c 45E0     		b	.L15
 370              	.LVL27:
 371              	.L14:
1616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 372              		.loc 1 1616 7 is_stmt 1 view .LVU87
ARM GAS  C:\usertemp\cca0PO6L.s 			page 150


 373              	.LBB274:
 374              	.LBI274:
6479:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6480:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6481:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6482:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC multimode conversion data transfer: no transfer
6483:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or transfer by DMA.
6484:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
6485:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
6486:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         DMA transfer settings.
6487:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
6488:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
6489:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Specifies the DMA requests mode:
6490:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
6491:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           when number of DMA data transfers (number of
6492:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions) is reached.
6493:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
6494:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
6495:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
6496:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions).
6497:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
6498:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
6499:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         mode non-circular:
6500:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
6501:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
6502:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
6503:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
6504:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
6505:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
6506:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
6507:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
6508:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         A macro is available to get the conversion data of
6509:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6510:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6511:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6512:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6513:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled
6514:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or enabled without conversion on going on group regular.
6515:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      DAMDF          LL_ADC_GetMultiDMATransfer\n
6516:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6517:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6518:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  MultiDMATransfer This parameter can be one of the following values:
6519:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
6520:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_RES_32_10B
6521:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_RES_8B
6522:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6523:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6524:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t MultiDMA
6525:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6526:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DAMDF, MultiDMATransfer);
6527:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6528:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6529:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6530:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data transfer: no transfer
6531:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or transfer by DMA.
6532:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
6533:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
ARM GAS  C:\usertemp\cca0PO6L.s 			page 151


6534:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         DMA transfer settings.
6535:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
6536:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
6537:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Specifies the DMA requests mode:
6538:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
6539:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           when number of DMA data transfers (number of
6540:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions) is reached.
6541:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
6542:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
6543:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
6544:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           ADC conversions).
6545:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
6546:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
6547:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         mode non-circular:
6548:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
6549:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
6550:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
6551:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
6552:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
6553:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
6554:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
6555:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
6556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         A macro is available to get the conversion data of
6557:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6558:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6559:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      DAMDF          LL_ADC_GetMultiDMATransfer\n
6560:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6561:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6562:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6563:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
6564:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_RES_32_10B
6565:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_RES_8B
6566:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6567:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON)
 375              		.loc 2 6567 26 view .LVU88
 376              	.LBB275:
6568:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6569:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DAMDF));
 377              		.loc 2 6569 3 view .LVU89
 378              		.loc 2 6569 21 is_stmt 0 view .LVU90
 379 008e 9368     		ldr	r3, [r2, #8]
 380              	.LVL28:
 381              		.loc 2 6569 21 view .LVU91
 382              	.LBE275:
 383              	.LBE274:
1616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 384              		.loc 1 1616 10 discriminator 1 view .LVU92
 385 0090 13F4404F 		tst	r3, #49152
 386 0094 01D1     		bne	.L34
1623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 387              		.loc 1 1623 22 view .LVU93
 388 0096 0425     		movs	r5, #4
 389 0098 D2E7     		b	.L13
 390              	.L34:
1618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         return HAL_ERROR;
 391              		.loc 1 1618 9 is_stmt 1 view .LVU94
 392 009a 636D     		ldr	r3, [r4, #84]
ARM GAS  C:\usertemp\cca0PO6L.s 			page 152


 393 009c 43F02003 		orr	r3, r3, #32
 394 00a0 6365     		str	r3, [r4, #84]
1619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 395              		.loc 1 1619 9 view .LVU95
1619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 396              		.loc 1 1619 16 is_stmt 0 view .LVU96
 397 00a2 0120     		movs	r0, #1
 398              	.LVL29:
1619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 399              		.loc 1 1619 16 view .LVU97
 400 00a4 39E0     		b	.L15
 401              	.LVL30:
 402              	.L33:
1649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
1650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Update ADC state machine */
1655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 403              		.loc 1 1655 3 is_stmt 1 view .LVU98
 404 00a6 626D     		ldr	r2, [r4, #84]
 405 00a8 42F40072 		orr	r2, r2, #512
 406 00ac 6265     		str	r2, [r4, #84]
1656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
1658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
1659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if ((LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
 407              		.loc 1 1659 3 view .LVU99
 408              	.LVL31:
 409              	.LBB276:
 410              	.LBI276:
3861:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 411              		.loc 2 3861 26 view .LVU100
 412              	.LBB277:
3863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 413              		.loc 2 3863 3 view .LVU101
3863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 414              		.loc 2 3863 12 is_stmt 0 view .LVU102
 415 00ae DA68     		ldr	r2, [r3, #12]
3863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 416              		.loc 2 3863 103 view .LVU103
 417 00b0 12F4406F 		tst	r2, #3072
 418 00b4 11D1     		bne	.L20
 419              	.LVL32:
3863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 420              		.loc 2 3863 103 view .LVU104
 421              	.LBE277:
 422              	.LBE276:
1660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       && (hadc->Init.ContinuousConvMode == DISABLE)
 423              		.loc 1 1660 21 view .LVU105
 424 00b6 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
 425              		.loc 1 1660 7 view .LVU106
 426 00b8 7AB9     		cbnz	r2, .L20
1661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      )
1662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check whether end of sequence is reached */
ARM GAS  C:\usertemp\cca0PO6L.s 			page 153


1664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
 427              		.loc 1 1664 5 is_stmt 1 view .LVU107
 428              		.loc 1 1664 9 is_stmt 0 view .LVU108
 429 00ba 1A68     		ldr	r2, [r3]
 430              		.loc 1 1664 8 view .LVU109
 431 00bc 12F0080F 		tst	r2, #8
 432 00c0 0BD0     		beq	.L20
1665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
1667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 433              		.loc 1 1667 7 is_stmt 1 view .LVU110
 434 00c2 626D     		ldr	r2, [r4, #84]
 435 00c4 22F48072 		bic	r2, r2, #256
 436 00c8 6265     		str	r2, [r4, #84]
1668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 437              		.loc 1 1669 7 view .LVU111
 438              		.loc 1 1669 16 is_stmt 0 view .LVU112
 439 00ca 626D     		ldr	r2, [r4, #84]
 440              		.loc 1 1669 10 view .LVU113
 441 00cc 12F4805F 		tst	r2, #4096
 442 00d0 03D1     		bne	.L20
1670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 443              		.loc 1 1671 9 is_stmt 1 view .LVU114
 444 00d2 626D     		ldr	r2, [r4, #84]
 445 00d4 42F00102 		orr	r2, r2, #1
 446 00d8 6265     		str	r2, [r4, #84]
 447              	.L20:
1672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Get relevant register CFGR in ADC instance of ADC master or slave        */
1677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* in function of multimode state (for devices with multimode               */
1678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* available).                                                              */
1679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 448              		.loc 1 1679 3 view .LVU115
 449              		.loc 1 1679 8 is_stmt 0 view .LVU116
 450 00da 134A     		ldr	r2, .L37+4
 451 00dc 9342     		cmp	r3, r2
 452 00de 14D0     		beq	.L35
 453              		.loc 1 1679 8 discriminator 1 view .LVU117
 454 00e0 1A46     		mov	r2, r3
 455              	.L21:
 456              		.loc 1 1679 6 discriminator 4 view .LVU118
 457 00e2 9342     		cmp	r3, r2
 458 00e4 07D0     		beq	.L22
 459 00e6 092F     		cmp	r7, #9
 460 00e8 12D8     		bhi	.L23
 461 00ea 40F22121 		movw	r1, #545
 462 00ee F940     		lsrs	r1, r1, r7
 463 00f0 11F0010F 		tst	r1, #1
 464 00f4 0CD0     		beq	.L23
 465              	.L22:
1680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
ARM GAS  C:\usertemp\cca0PO6L.s 			page 154


1682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
1683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      )
1684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Retrieve handle ADC CFGR register */
1686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
 466              		.loc 1 1686 5 is_stmt 1 view .LVU119
 467              		.loc 1 1686 14 is_stmt 0 view .LVU120
 468 00f6 DA68     		ldr	r2, [r3, #12]
 469              	.LVL33:
 470              	.L24:
1687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
1689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Retrieve Master ADC CFGR register */
1691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
1692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
1693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Clear polled flag */
1696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (tmp_Flag_End == ADC_FLAG_EOS)
 471              		.loc 1 1696 3 is_stmt 1 view .LVU121
 472              		.loc 1 1696 6 is_stmt 0 view .LVU122
 473 00f8 082D     		cmp	r5, #8
 474 00fa 0BD0     		beq	.L36
1697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOS);
1699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
1701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear end of conversion EOC flag of regular group if low power feature */
1703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* "LowPowerAutoWait " is disabled, to not interfere with this feature    */
1704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* until data register is read using function HAL_ADC_GetValue().         */
1705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (READ_BIT(tmp_cfgr, ADC_CFGR_AUTDLY) == 0UL)
 475              		.loc 1 1705 5 is_stmt 1 view .LVU123
 476              		.loc 1 1705 8 is_stmt 0 view .LVU124
 477 00fc 12F4804F 		tst	r2, #16384
 478 0100 0DD1     		bne	.L30
1706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
 479              		.loc 1 1707 7 is_stmt 1 view .LVU125
 480 0102 0C22     		movs	r2, #12
 481              	.LVL34:
 482              		.loc 1 1707 7 is_stmt 0 view .LVU126
 483 0104 1A60     		str	r2, [r3]
1708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
1712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return HAL_OK;
 484              		.loc 1 1712 10 view .LVU127
 485 0106 0020     		movs	r0, #0
 486 0108 07E0     		b	.L15
 487              	.LVL35:
 488              	.L35:
1679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 489              		.loc 1 1679 8 discriminator 2 view .LVU128
 490 010a A2F58072 		sub	r2, r2, #256
ARM GAS  C:\usertemp\cca0PO6L.s 			page 155


 491 010e E8E7     		b	.L21
 492              	.L23:
1691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 493              		.loc 1 1691 5 is_stmt 1 view .LVU129
 494              	.LVL36:
1692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 495              		.loc 1 1692 5 view .LVU130
1692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 496              		.loc 1 1692 14 is_stmt 0 view .LVU131
 497 0110 D268     		ldr	r2, [r2, #12]
 498              	.LVL37:
1692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 499              		.loc 1 1692 14 view .LVU132
 500 0112 F1E7     		b	.L24
 501              	.LVL38:
 502              	.L36:
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 503              		.loc 1 1698 5 is_stmt 1 view .LVU133
 504 0114 0822     		movs	r2, #8
 505              	.LVL39:
1698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 506              		.loc 1 1698 5 is_stmt 0 view .LVU134
 507 0116 1A60     		str	r2, [r3]
 508              		.loc 1 1712 10 view .LVU135
 509 0118 0020     		movs	r0, #0
 510              	.LVL40:
 511              	.L15:
1713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 512              		.loc 1 1713 1 view .LVU136
 513 011a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 514              	.LVL41:
 515              	.L30:
1712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 516              		.loc 1 1712 10 view .LVU137
 517 011e 0020     		movs	r0, #0
 518 0120 FBE7     		b	.L15
 519              	.L38:
 520 0122 00BF     		.align	2
 521              	.L37:
 522 0124 00200240 		.word	1073881088
 523 0128 00210240 		.word	1073881344
 524 012c 00630258 		.word	1476551424
 525              		.cfi_endproc
 526              	.LFE339:
 528              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 529              		.align	1
 530              		.global	HAL_ADC_PollForEvent
 531              		.syntax unified
 532              		.thumb
 533              		.thumb_func
 535              	HAL_ADC_PollForEvent:
 536              	.LVL42:
 537              	.LFB340:
1714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
1716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Poll for ADC event.
1717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
ARM GAS  C:\usertemp\cca0PO6L.s 			page 156


1718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param EventType the ADC event type.
1719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          This parameter can be one of the following values:
1720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            @arg @ref ADC_EOSMP_EVENT  ADC End of Sampling event
1721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            @arg @ref ADC_AWD1_EVENT   ADC Analog watchdog 1 event (main analog watchdog, presen
1722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            @arg @ref ADC_AWD2_EVENT   ADC Analog watchdog 2 event (additional analog watchdog, 
1723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            @arg @ref ADC_AWD3_EVENT   ADC Analog watchdog 3 event (additional analog watchdog, 
1724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            @arg @ref ADC_OVR_EVENT    ADC Overrun event
1725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            @arg @ref ADC_JQOVF_EVENT  ADC Injected context queue overflow event
1726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   The relevant flag is cleared if found to be set, except for ADC_FLAG_OVR.
1728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         Indeed, the latter is reset only if hadc->Init.Overrun field is set
1729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         to ADC_OVR_DATA_OVERWRITTEN. Otherwise, data register may be potentially overwritten
1730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         by a new converted data as soon as OVR is cleared.
1731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         To reset OVR flag once the preserved data is retrieved, the user can resort
1732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         to macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status
1734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
1735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef *hadc, uint32_t EventType, uint32_t Timeou
1736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
 538              		.loc 1 1736 1 is_stmt 1 view -0
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 0
 541              		@ frame_needed = 0, uses_anonymous_args = 0
 542              		.loc 1 1736 1 is_stmt 0 view .LVU139
 543 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 544              	.LCFI7:
 545              		.cfi_def_cfa_offset 24
 546              		.cfi_offset 4, -24
 547              		.cfi_offset 5, -20
 548              		.cfi_offset 6, -16
 549              		.cfi_offset 7, -12
 550              		.cfi_offset 8, -8
 551              		.cfi_offset 14, -4
 552 0004 0646     		mov	r6, r0
 553 0006 0D46     		mov	r5, r1
 554 0008 1746     		mov	r7, r2
1737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart;
 555              		.loc 1 1737 3 is_stmt 1 view .LVU140
1738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
1740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 556              		.loc 1 1740 3 view .LVU141
1741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
 557              		.loc 1 1741 3 view .LVU142
1742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Get tick count */
1744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tickstart = HAL_GetTick();
 558              		.loc 1 1744 3 view .LVU143
 559              		.loc 1 1744 15 is_stmt 0 view .LVU144
 560 000a FFF7FEFF 		bl	HAL_GetTick
 561              	.LVL43:
 562              		.loc 1 1744 15 view .LVU145
 563 000e 8046     		mov	r8, r0
 564              	.LVL44:
1745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check selected event flag */
1747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   while (__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
ARM GAS  C:\usertemp\cca0PO6L.s 			page 157


 565              		.loc 1 1747 3 is_stmt 1 view .LVU146
 566              	.L41:
 567              		.loc 1 1747 46 view .LVU147
 568              		.loc 1 1747 10 is_stmt 0 view .LVU148
 569 0010 3468     		ldr	r4, [r6]
 570 0012 2368     		ldr	r3, [r4]
 571              		.loc 1 1747 46 view .LVU149
 572 0014 35EA0303 		bics	r3, r5, r3
 573 0018 18D0     		beq	.L54
1748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (Timeout != HAL_MAX_DELAY)
 574              		.loc 1 1750 5 is_stmt 1 view .LVU150
 575              		.loc 1 1750 8 is_stmt 0 view .LVU151
 576 001a B7F1FF3F 		cmp	r7, #-1
 577 001e F7D0     		beq	.L41
1751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 578              		.loc 1 1752 7 is_stmt 1 view .LVU152
 579              		.loc 1 1752 13 is_stmt 0 view .LVU153
 580 0020 FFF7FEFF 		bl	HAL_GetTick
 581              	.LVL45:
 582              		.loc 1 1752 27 discriminator 1 view .LVU154
 583 0024 A0EB0800 		sub	r0, r0, r8
 584              		.loc 1 1752 10 discriminator 1 view .LVU155
 585 0028 B842     		cmp	r0, r7
 586 002a 01D8     		bhi	.L42
 587              		.loc 1 1752 51 discriminator 1 view .LVU156
 588 002c 002F     		cmp	r7, #0
 589 002e EFD1     		bne	.L41
 590              	.L42:
1753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
1755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if(__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
 591              		.loc 1 1755 9 is_stmt 1 view .LVU157
 592              		.loc 1 1755 12 is_stmt 0 view .LVU158
 593 0030 3368     		ldr	r3, [r6]
 594 0032 1B68     		ldr	r3, [r3]
 595              		.loc 1 1755 11 view .LVU159
 596 0034 35EA0303 		bics	r3, r5, r3
 597 0038 EAD0     		beq	.L41
1756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
1757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Update ADC state machine to timeout */
1758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 598              		.loc 1 1758 11 is_stmt 1 view .LVU160
 599 003a 736D     		ldr	r3, [r6, #84]
 600 003c 43F00403 		orr	r3, r3, #4
 601 0040 7365     		str	r3, [r6, #84]
1759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Process unlocked */
1761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           __HAL_UNLOCK(hadc);
 602              		.loc 1 1761 11 view .LVU161
 603              		.loc 1 1761 11 view .LVU162
 604 0042 0023     		movs	r3, #0
 605 0044 86F85030 		strb	r3, [r6, #80]
 606              		.loc 1 1761 11 view .LVU163
1762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 158


1763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           return HAL_TIMEOUT;
 607              		.loc 1 1763 11 view .LVU164
 608              		.loc 1 1763 18 is_stmt 0 view .LVU165
 609 0048 0320     		movs	r0, #3
 610 004a 29E0     		b	.L43
 611              	.L54:
1764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
1765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
1767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   switch (EventType)
 612              		.loc 1 1769 3 is_stmt 1 view .LVU166
 613 004c B5F5807F 		cmp	r5, #256
 614 0050 28D0     		beq	.L45
 615 0052 12D9     		bls	.L55
 616 0054 B5F5007F 		cmp	r5, #512
 617 0058 2DD0     		beq	.L50
 618 005a B5F5806F 		cmp	r5, #1024
 619 005e 33D1     		bne	.L49
1770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* End Of Sampling event */
1772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     case ADC_EOSMP_EVENT:
1773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
1774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
1775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear the End Of Sampling flag */
1777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
1778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       break;
1780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Analog watchdog (level out of window) event */
1782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Note: In case of several analog watchdog enabled, if needed to know      */
1783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* which one triggered and on which ADCx, test ADC state of analog watchdog */
1784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* flags HAL_ADC_STATE_AWD1/2/3 using function "HAL_ADC_GetState()".        */
1785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* For example:                                                             */
1786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "          */
1787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD2) != 0UL) "          */
1788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD3) != 0UL) "          */
1789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check analog watchdog 1 flag */
1791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     case ADC_AWD_EVENT:
1792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
1793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
1794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
1797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       break;
1799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check analog watchdog 2 flag */
1801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     case ADC_AWD2_EVENT:
1802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
1803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
1804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
ARM GAS  C:\usertemp\cca0PO6L.s 			page 159


1807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       break;
1809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check analog watchdog 3 flag */
1811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     case ADC_AWD3_EVENT:
1812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
1813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
1814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear ADC analog watchdog flag */
1816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
1817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       break;
1819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Injected context queue overflow event */
1821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     case ADC_JQOVF_EVENT:
1822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
1823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
 620              		.loc 1 1823 7 view .LVU167
 621 0060 736D     		ldr	r3, [r6, #84]
 622 0062 43F48043 		orr	r3, r3, #16384
 623 0066 7365     		str	r3, [r6, #84]
1824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC error code to Injected context queue overflow */
1826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
 624              		.loc 1 1826 7 view .LVU168
 625 0068 B36D     		ldr	r3, [r6, #88]
 626 006a 43F00803 		orr	r3, r3, #8
 627 006e B365     		str	r3, [r6, #88]
1827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear ADC Injected context queue overflow flag */
1829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
 628              		.loc 1 1829 7 view .LVU169
 629 0070 4FF48063 		mov	r3, #1024
 630 0074 2360     		str	r3, [r4]
1830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       break;
 631              		.loc 1 1831 7 view .LVU170
1832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Overrun event */
1834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     default: /* Case ADC_OVR_EVENT */
1835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* If overrun is set to overwrite previous data, overrun event is not     */
1836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* considered as an error.                                                */
1837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* (cf ref manual "Managing conversions without using the DMA and without */
1838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* overrun ")                                                             */
1839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set ADC state */
1842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
1843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set ADC error code to overrun */
1845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
1846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
1848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Clear ADC Overrun flag only if Overrun is set to ADC_OVR_DATA_OVERWRITTEN
1850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            otherwise, data register is potentially overwritten by new converted data as soon
1851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            as OVR is cleared. */
ARM GAS  C:\usertemp\cca0PO6L.s 			page 160


1852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       break;
1855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
1856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
1858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return HAL_OK;
 632              		.loc 1 1858 10 is_stmt 0 view .LVU171
 633 0076 0020     		movs	r0, #0
1831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 634              		.loc 1 1831 7 view .LVU172
 635 0078 12E0     		b	.L43
 636              	.L55:
1769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 637              		.loc 1 1769 3 view .LVU173
 638 007a 022D     		cmp	r5, #2
 639 007c 09D0     		beq	.L47
 640 007e 802D     		cmp	r5, #128
 641 0080 22D1     		bne	.L49
1793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 642              		.loc 1 1793 7 is_stmt 1 view .LVU174
 643 0082 736D     		ldr	r3, [r6, #84]
 644 0084 43F48033 		orr	r3, r3, #65536
 645 0088 7365     		str	r3, [r6, #84]
1796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 646              		.loc 1 1796 7 view .LVU175
 647 008a 8023     		movs	r3, #128
 648 008c 2360     		str	r3, [r4]
1798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 649              		.loc 1 1798 7 view .LVU176
 650              		.loc 1 1858 10 is_stmt 0 view .LVU177
 651 008e 0020     		movs	r0, #0
1798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 652              		.loc 1 1798 7 view .LVU178
 653 0090 06E0     		b	.L43
 654              	.L47:
1774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 655              		.loc 1 1774 7 is_stmt 1 view .LVU179
 656 0092 736D     		ldr	r3, [r6, #84]
 657 0094 43F40063 		orr	r3, r3, #2048
 658 0098 7365     		str	r3, [r6, #84]
1777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 659              		.loc 1 1777 7 view .LVU180
 660 009a 0223     		movs	r3, #2
 661 009c 2360     		str	r3, [r4]
1779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 662              		.loc 1 1779 7 view .LVU181
 663              		.loc 1 1858 10 is_stmt 0 view .LVU182
 664 009e 0020     		movs	r0, #0
 665              	.L43:
1859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 666              		.loc 1 1859 1 view .LVU183
 667 00a0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 668              	.LVL46:
 669              	.L45:
1803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 670              		.loc 1 1803 7 is_stmt 1 view .LVU184
ARM GAS  C:\usertemp\cca0PO6L.s 			page 161


 671 00a4 736D     		ldr	r3, [r6, #84]
 672 00a6 43F40033 		orr	r3, r3, #131072
 673 00aa 7365     		str	r3, [r6, #84]
1806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 674              		.loc 1 1806 7 view .LVU185
 675 00ac 4FF48073 		mov	r3, #256
 676 00b0 2360     		str	r3, [r4]
1808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 677              		.loc 1 1808 7 view .LVU186
1858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 678              		.loc 1 1858 10 is_stmt 0 view .LVU187
 679 00b2 0020     		movs	r0, #0
1808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 680              		.loc 1 1808 7 view .LVU188
 681 00b4 F4E7     		b	.L43
 682              	.L50:
1813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 683              		.loc 1 1813 7 is_stmt 1 view .LVU189
 684 00b6 736D     		ldr	r3, [r6, #84]
 685 00b8 43F48023 		orr	r3, r3, #262144
 686 00bc 7365     		str	r3, [r6, #84]
1816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 687              		.loc 1 1816 7 view .LVU190
 688 00be 4FF40073 		mov	r3, #512
 689 00c2 2360     		str	r3, [r4]
1818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 690              		.loc 1 1818 7 view .LVU191
1858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 691              		.loc 1 1858 10 is_stmt 0 view .LVU192
 692 00c4 0020     		movs	r0, #0
1818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 693              		.loc 1 1818 7 view .LVU193
 694 00c6 EBE7     		b	.L43
 695              	.L49:
1839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 696              		.loc 1 1839 7 is_stmt 1 view .LVU194
1839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 697              		.loc 1 1839 21 is_stmt 0 view .LVU195
 698 00c8 336B     		ldr	r3, [r6, #48]
1839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 699              		.loc 1 1839 10 view .LVU196
 700 00ca 4BB9     		cbnz	r3, .L52
1842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 701              		.loc 1 1842 9 is_stmt 1 view .LVU197
 702 00cc 736D     		ldr	r3, [r6, #84]
 703 00ce 43F48063 		orr	r3, r3, #1024
 704 00d2 7365     		str	r3, [r6, #84]
1845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 705              		.loc 1 1845 9 view .LVU198
 706 00d4 B36D     		ldr	r3, [r6, #88]
 707 00d6 43F00203 		orr	r3, r3, #2
 708 00da B365     		str	r3, [r6, #88]
1858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 709              		.loc 1 1858 10 is_stmt 0 view .LVU199
 710 00dc 0020     		movs	r0, #0
 711 00de DFE7     		b	.L43
 712              	.L52:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 162


1852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 713              		.loc 1 1852 9 is_stmt 1 view .LVU200
 714 00e0 1023     		movs	r3, #16
 715 00e2 2360     		str	r3, [r4]
1858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 716              		.loc 1 1858 10 is_stmt 0 view .LVU201
 717 00e4 0020     		movs	r0, #0
 718 00e6 DBE7     		b	.L43
 719              		.cfi_endproc
 720              	.LFE340:
 722              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 723              		.align	1
 724              		.global	HAL_ADC_GetValue
 725              		.syntax unified
 726              		.thumb
 727              		.thumb_func
 729              	HAL_ADC_GetValue:
 730              	.LVL47:
 731              	.LFB345:
1860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
1862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group with interruption.
1863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Interruptions enabled in this function according to initialization
1864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         setting : EOC (end of conversion), EOS (end of sequence),
1865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         OVR overrun.
1866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
1868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         HAL_ADC_Start_IT() must be called for ADC Slave first, then for
1869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         ADC Master.
1870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         For ADC Slave, ADC is enabled only (conversion is not started).
1871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         For ADC Master, ADC is enabled and multimode conversion is started.
1872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   To guarantee a proper reset of all interruptions once all the needed
1873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         conversions are obtained, HAL_ADC_Stop_IT() must be called to ensure
1874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         a correct stop of the IT-based conversions.
1875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   By default, HAL_ADC_Start_IT() does not enable the End Of Sampling
1876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         interruption. If required (e.g. in case of oversampling with trigger
1877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         mode), the user must:
1878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          1. first clear the EOSMP flag if set with macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EO
1879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          2. then enable the EOSMP interrupt with macro __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOSMP)
1880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          before calling HAL_ADC_Start_IT().
1881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
1882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status
1883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
1884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef *hadc)
1885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
1886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
1888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
1889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
1891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
1896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Process locked */
1897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_LOCK(hadc);
ARM GAS  C:\usertemp\cca0PO6L.s 			page 163


1898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Enable the ADC peripheral */
1900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
1905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state                                                        */
1906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
1913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         - if ADC instance is master or if multimode feature is not available
1914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
1915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          )
1918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
1920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC error code */
1923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Check if a conversion is on going on ADC group injected */
1924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) != 0UL)
1925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Reset ADC error code fields related to regular conversions only */
1927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
1928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
1930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Reset all ADC error code fields */
1932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         ADC_CLEAR_ERRORCODE(hadc);
1933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Process unlocked */
1940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Disable all interruptions before enabling the desired ones */
1945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Enable ADC end of conversion interrupt */
1948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       switch (hadc->Init.EOCSelection)
1949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         case ADC_EOC_SEQ_CONV:
1951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOS);
1952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
1953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
1954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         default:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 164


1955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOC);
1956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
1957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Enable ADC overrun interrupt */
1960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* If hadc->Init.Overrun is set to ADC_OVR_DATA_PRESERVED, only then is
1961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          ADC_IT_OVR enabled; otherwise data overwrite is considered as normal
1962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          behavior and no CPU time is lost for a non-processed interruption */
1963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
1966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
1967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* trigger event.                                                       */
1972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Case of multimode enabled (when multimode feature is available):     */
1973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*  - if ADC is slave and dual regular conversions are enabled, ADC is  */
1974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*    enabled only (conversion is not started),                         */
1975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*  - if ADC is master, ADC is enabled and conversion is started.       */
1976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
1977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
1978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
1979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
1980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          )
1981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
1982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* ADC instance is not a multimode slave instance with multimode regular conversions enable
1983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO) != 0UL)
1984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
1985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
1986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
1987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Enable as well injected interruptions in case
1988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            HAL_ADCEx_InjectedStart_IT() has not been called beforehand. This
1989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            allows to start regular and injected conversions when JAUTO is
1990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            set with a single call to HAL_ADC_Start_IT() */
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           switch (hadc->Init.EOCSelection)
1992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
1993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             case ADC_EOC_SEQ_CONV:
1994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
1995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
1996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               break;
1997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
1998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             default:
1999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
2000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
2001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               break;
2002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
2003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Start ADC group regular conversion */
2006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
2007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
2009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* ADC instance is a multimode slave instance with multimode regular conversions enabled */
2011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
ARM GAS  C:\usertemp\cca0PO6L.s 			page 165


2012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, Slave injected interruptions
2013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            are enabled nevertheless (for same reason as above) */
2014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
2015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
2016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* First, update Slave State in setting HAL_ADC_STATE_INJ_BUSY bit
2018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              and in resetting HAL_ADC_STATE_INJ_EOC bit */
2019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
2020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Next, set Slave injected interruptions */
2021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           switch (hadc->Init.EOCSelection)
2022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
2023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             case ADC_EOC_SEQ_CONV:
2024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
2025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
2026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               break;
2027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
2028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             default:
2029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
2030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
2031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               break;
2032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
2033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
2037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Process unlocked */
2039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
2040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
2044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
2046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
2049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return tmp_hal_status;
2050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
2051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
2054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         case of auto_injection mode), disable interrution of
2055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         end-of-conversion, disable ADC peripheral.
2056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
2057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status.
2058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef *hadc)
2060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
2061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
2062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
2064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process locked */
2067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_LOCK(hadc);
2068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 166


2069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC groups regular and injected */
2070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
2071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
2073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
2074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Disable ADC end of conversion interrupt for regular group */
2076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
2077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
2078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
2080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
2081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
2083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
2084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
2086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
2087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
2088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
2089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process unlocked */
2093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
2096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return tmp_hal_status;
2097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
2098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group and transfer result through DMA.
2101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Interruptions enabled in this function:
2102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         overrun (if applicable), DMA half transfer, DMA transfer complete.
2103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
2104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available): HAL_ADC_Start_DMA()
2105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         is designed for single-ADC mode only. For multimode, the dedicated
2106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         HAL_ADCEx_MultiModeStart_DMA() function must be used.
2107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
2108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param pData Destination Buffer address.
2109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param Length Number of data to be transferred from ADC peripheral to memory
2110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status.
2111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t Length)
2113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
2114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
2115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
2116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
2118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
2121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Process locked */
2124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_LOCK(hadc);
2125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 167


2126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Ensure that multimode regular conversions are not enabled.   */
2127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Otherwise, dedicated API HAL_ADCEx_MultiModeStart_DMA() must be used.  */
2128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
2130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
2131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        )
2132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Enable the ADC peripheral */
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmp_hal_status = ADC_Enable(hadc);
2135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Start conversion if ADC is effectively enabled */
2137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (tmp_hal_status == HAL_OK)
2138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set ADC state                                                        */
2140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* - Clear state bitfield related to regular group conversion results   */
2141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* - Set state bitfield related to regular operation                    */
2142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State,
2143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
2144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                           HAL_ADC_STATE_REG_BUSY);
2145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
2147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           - if ADC instance is master or if multimode feature is not available
2148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           - if multimode setting is disabled (ADC instance slave in independent mode) */
2149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
2150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            )
2152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
2154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Check if a conversion is on going on ADC group injected */
2157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) != 0UL)
2158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Reset ADC error code fields related to regular conversions only */
2160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
2161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         else
2163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Reset all ADC error code fields */
2165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           ADC_CLEAR_ERRORCODE(hadc);
2166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set the DMA transfer complete callback */
2169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
2170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set the DMA half transfer complete callback */
2172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
2173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set the DMA error callback */
2175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
2176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Manage ADC and DMA start: ADC overrun interruption, DMA start,     */
2179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* ADC start (in case of SW start):                                   */
2180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Clear regular group conversion flag and overrun flag               */
2182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* (To ensure of no unknown state from potential previous ADC         */
ARM GAS  C:\usertemp\cca0PO6L.s 			page 168


2183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* operations)                                                        */
2184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
2185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Process unlocked */
2187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Unlock before starting ADC conversions: in case of potential         */
2188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* interruption, to let the process to ADC IRQ Handler.                 */
2189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
2190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* With DMA, overrun event is always considered as an error even if
2192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            hadc->Init.Overrun is set to ADC_OVR_DATA_OVERWRITTEN. Therefore,
2193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            ADC_IT_OVR is enabled. */
2194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
2195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Enable ADC DMA  mode*/
2197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
2198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (hadc->Instance == ADC3)
2199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_REG_SetDMATransferMode(hadc->Instance, ADC3_CFGR_DMACONTREQ((uint32_t)hadc->Init.D
2201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_EnableDMAReq(hadc->Instance);
2202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         else
2204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_REG_SetDataTransferMode(hadc->Instance, ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.C
2206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
2209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         LL_ADC_REG_SetDataTransferMode(hadc->Instance, (uint32_t)hadc->Init.ConversionDataManagemen
2210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
2211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Start the DMA channel */
2214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_hal_status = HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_
2215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Enable conversion of regular group.                                  */
2217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* If software start has been selected, conversion starts immediately.  */
2218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* If external trigger has been selected, conversion will start at next */
2219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* trigger event.                                                       */
2220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Start ADC group regular conversion */
2221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         LL_ADC_REG_StartConversion(hadc->Instance);
2222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
2224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Process unlocked */
2226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
2227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
2231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmp_hal_status = HAL_ERROR;
2233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Process unlocked */
2234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
2235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
2238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
ARM GAS  C:\usertemp\cca0PO6L.s 			page 169


2240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
2243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return tmp_hal_status;
2244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
2245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
2248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable
2249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         ADC peripheral.
2250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential
2251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         conversion on ADC group injected. If ADC group injected is under use, it
2252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
2253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Case of multimode enabled (when multimode feature is available):
2254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         HAL_ADC_Stop_DMA() function is dedicated to single-ADC mode only.
2255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         For multimode, the dedicated HAL_ADCEx_MultiModeStop_DMA() API must be used.
2256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
2257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status.
2258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef *hadc)
2260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
2261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
2262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
2264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process locked */
2267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_LOCK(hadc);
2268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* 1. Stop potential ADC group regular conversion on going */
2270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
2271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
2273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
2274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Disable ADC DMA (ADC DMA configuration of continuous requests is kept) */
2276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CFGR, ADC_CFGR_DMNGT_0 | ADC_CFGR_DMNGT_1, 0UL);
2277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
2279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* while DMA transfer is on going)                                        */
2280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->DMA_Handle->State == HAL_DMA_STATE_BUSY)
2281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
2283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Check if DMA channel effectively disabled */
2285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (tmp_hal_status != HAL_OK)
2286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Update ADC state machine to error */
2288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
2289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
2293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
2294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
2296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
ARM GAS  C:\usertemp\cca0PO6L.s 			page 170


2297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* to keep in memory a potential failing status.                          */
2298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
2299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmp_hal_status = ADC_Disable(hadc);
2301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
2303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (void)ADC_Disable(hadc);
2305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
2308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
2309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
2311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
2312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
2313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
2314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process unlocked */
2319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
2322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return tmp_hal_status;
2323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
2324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Get ADC regular group conversion result.
2327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Reading register DR automatically clears ADC flag EOC
2328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         (ADC group regular end of unitary conversion).
2329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   This function does not clear ADC flag EOS
2330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         (ADC group regular end of sequence conversion).
2331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         Occurrence of flag EOS rising:
2332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
2333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            to flag EOC.
2334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          - If sequencer is composed of several ranks, during the scan
2335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
2336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            both flags EOC and EOS are raised.
2337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         To clear this flag, either use function:
2338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
2339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         model polling: @ref HAL_ADC_PollForConversion()
2340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
2341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
2342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval ADC group regular conversion data
2343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef *hadc)
2345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
 732              		.loc 1 2345 1 is_stmt 1 view -0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 0
 735              		@ frame_needed = 0, uses_anonymous_args = 0
 736              		@ link register save eliminated.
2346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
2347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 737              		.loc 1 2347 3 view .LVU203
ARM GAS  C:\usertemp\cca0PO6L.s 			page 171


2348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
2350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /*       cleared by hardware when reading register DR.                      */
2351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return ADC converted value */
2353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return hadc->Instance->DR;
 738              		.loc 1 2353 3 view .LVU204
 739              		.loc 1 2353 14 is_stmt 0 view .LVU205
 740 0000 0368     		ldr	r3, [r0]
 741              		.loc 1 2353 24 view .LVU206
 742 0002 186C     		ldr	r0, [r3, #64]
 743              	.LVL48:
2354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 744              		.loc 1 2354 1 view .LVU207
 745 0004 7047     		bx	lr
 746              		.cfi_endproc
 747              	.LFE345:
 749              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 750              		.align	1
 751              		.weak	HAL_ADC_ConvCpltCallback
 752              		.syntax unified
 753              		.thumb
 754              		.thumb_func
 756              	HAL_ADC_ConvCpltCallback:
 757              	.LVL49:
 758              	.LFB347:
2355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Handle ADC interrupt request.
2358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
2359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None
2360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef *hadc)
2362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
2363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
2364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
2365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
2366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
2367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_trigger_source_sw_start;
2368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_cfgr;
2369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
2370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
2371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
2373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
2375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ========== Check End of Sampling flag for ADC group regular ========== */
2377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_EOSMP) == ADC_FLAG_EOSMP) && ((tmp_ier & ADC_IT_EOSMP) == ADC_IT_EOSMP))
2378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update state machine on end of sampling status if not in error state */
2380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
2383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
2384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 172


2386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* End Of Sampling callback */
2387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->EndOfSamplingCallback(hadc);
2389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
2390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     HAL_ADCEx_EndOfSamplingCallback(hadc);
2391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear regular group conversion flag */
2394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
2395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ====== Check ADC group regular end of unitary conversion sequence conversions ===== */
2398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if ((((tmp_isr & ADC_FLAG_EOC) == ADC_FLAG_EOC) && ((tmp_ier & ADC_IT_EOC) == ADC_IT_EOC)) ||
2399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
2400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
2402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
2405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
2406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
2409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
2410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* to disable interruption.                                               */
2411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
2412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Get relevant register CFGR in ADC instance of ADC master or slave    */
2414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* in function of multimode state (for devices with multimode           */
2415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* available).                                                          */
2416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
2417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
2419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_ALTERN)
2420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          )
2421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* check CONT bit directly in handle ADC CFGR register */
2423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
2426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* else need to check Master ADC CONT bit */
2428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
2429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
2430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Carry on if continuous mode is disabled */
2433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) != ADC_CFGR_CONT)
2434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* If End of Sequence is reached, disable interrupts */
2436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS))
2437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit         */
2439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* ADSTART==0 (no conversion on going)                              */
2440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
2442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* Disable ADC end of sequence conversion interrupt */
ARM GAS  C:\usertemp\cca0PO6L.s 			page 173


2443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* Note: Overrun interrupt was enabled with EOC interrupt in      */
2444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* HAL_Start_IT(), but is not disabled here because can be used   */
2445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* by overrun IRQ process below.                                  */
2446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
2447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* Set ADC state */
2449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
2450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
2452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
2453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_READY);
2454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
2455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
2456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           else
2457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
2458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* Change ADC state to error state */
2459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* Set ADC error code to ADC peripheral internal error */
2462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
2464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Conversion complete callback */
2469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Note: Into callback function "HAL_ADC_ConvCpltCallback()",             */
2470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*       to determine if conversion has been triggered from EOC or EOS,   */
2471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*       possibility to use:                                              */
2472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*        " if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_EOS)) "                */
2473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
2475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
2476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
2477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear regular group conversion flag */
2480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Note: in case of overrun set to ADC_OVR_DATA_PRESERVED, end of         */
2481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*       conversion flags clear induces the release of the preserved data.*/
2482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*       Therefore, if the preserved data value is needed, it must be     */
2483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*       read preliminarily into HAL_ADC_ConvCpltCallback().              */
2484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
2485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ====== Check ADC group injected end of unitary conversion sequence conversions ===== */
2488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if ((((tmp_isr & ADC_FLAG_JEOC) == ADC_FLAG_JEOC) && ((tmp_ier & ADC_IT_JEOC) == ADC_IT_JEOC)) ||
2489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
2490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
2492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
2493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC state */
2495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
2496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Retrieve ADC configuration */
2499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_adc_inj_is_trigger_source_sw_start = LL_ADC_INJ_IsTriggerSourceSWStart(hadc->Instance);
ARM GAS  C:\usertemp\cca0PO6L.s 			page 174


2500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
2501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Get relevant register CFGR in ADC instance of ADC master or slave  */
2502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* in function of multimode state (for devices with multimode         */
2503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* available).                                                        */
2504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
2505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
2506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
2507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
2508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        )
2509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmp_cfgr = READ_REG(hadc->Instance->CFGR);
2511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
2513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
2515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
2516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Disable interruption if no further conversion upcoming by injected     */
2519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* external trigger or by automatic injected conversion with regular      */
2520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* group having no further conversion upcoming (same conditions as        */
2521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* regular group interruption disabling above),                           */
2522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* and if injected scan sequence is completed.                            */
2523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (tmp_adc_inj_is_trigger_source_sw_start != 0UL)
2524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if ((READ_BIT(tmp_cfgr, ADC_CFGR_JAUTO) == 0UL) ||
2526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           ((tmp_adc_reg_is_trigger_source_sw_start != 0UL) &&
2527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL)))
2528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* If End of Sequence is reached, disable interrupts */
2530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS))
2531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Particular case if injected contexts queue is enabled:             */
2533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* when the last context has been fully processed, JSQR is reset      */
2534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* by the hardware. Even if no injected conversion is planned to come */
2535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* (queue empty, triggers are ignored), it can start again            */
2536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* immediately after setting a new context (JADSTART is still set).   */
2537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Therefore, state of HAL ADC injected group is kept to busy.        */
2538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (READ_BIT(tmp_cfgr, ADC_CFGR_JQM) == 0UL)
2539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
2540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* Allowed to modify bits ADC_IT_JEOC/ADC_IT_JEOS only if bit       */
2541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* JADSTART==0 (no conversion on going)                             */
2542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
2543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
2544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               /* Disable ADC end of sequence conversion interrupt  */
2545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC | ADC_IT_JEOS);
2546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               /* Set ADC state */
2548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
2549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               if ((hadc->State & HAL_ADC_STATE_REG_BUSY) == 0UL)
2551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               {
2552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 SET_BIT(hadc->State, HAL_ADC_STATE_READY);
2553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               }
2554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
2555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             else
2556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
ARM GAS  C:\usertemp\cca0PO6L.s 			page 175


2557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               /* Update ADC state machine to error */
2558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               /* Set ADC error code to ADC peripheral internal error */
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
2563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
2564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Injected Conversion complete callback */
2569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Note:  HAL_ADCEx_InjectedConvCpltCallback can resort to
2570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOS)) or
2571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_JEOC)) to determine whether
2572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               interruption has been triggered by end of conversion or end of
2573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               sequence.    */
2574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->InjectedConvCpltCallback(hadc);
2576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
2577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     HAL_ADCEx_InjectedConvCpltCallback(hadc);
2578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear injected group conversion flag */
2581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC | ADC_FLAG_JEOS);
2582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ========== Check Analog watchdog 1 flag ========== */
2585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD1) == ADC_FLAG_AWD1) && ((tmp_ier & ADC_IT_AWD1) == ADC_IT_AWD1))
2586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Set ADC state */
2588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
2589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Level out of window 1 callback */
2591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback(hadc);
2593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
2594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     HAL_ADC_LevelOutOfWindowCallback(hadc);
2595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
2599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ========== Check analog watchdog 2 flag ========== */
2602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD2) == ADC_FLAG_AWD2) && ((tmp_ier & ADC_IT_AWD2) == ADC_IT_AWD2))
2603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Set ADC state */
2605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
2606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Level out of window 2 callback */
2608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback(hadc);
2610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
2611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow2Callback(hadc);
2612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 176


2614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
2616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ========== Check analog watchdog 3 flag ========== */
2619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD3) == ADC_FLAG_AWD3) && ((tmp_ier & ADC_IT_AWD3) == ADC_IT_AWD3))
2620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Set ADC state */
2622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
2623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Level out of window 3 callback */
2625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback(hadc);
2627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
2628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow3Callback(hadc);
2629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
2632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
2633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ========== Check Overrun flag ========== */
2636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_OVR) == ADC_FLAG_OVR) && ((tmp_ier & ADC_IT_OVR) == ADC_IT_OVR))
2637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* If overrun is set to overwrite previous data (default setting),        */
2639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* overrun event is not considered as an error.                           */
2640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* (cf ref manual "Managing conversions without using the DMA and without */
2641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* overrun ")                                                             */
2642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Exception for usage with DMA overrun event always considered as an     */
2643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* error.                                                                 */
2644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
2645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       overrun_error = 1UL;
2647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
2649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Check DMA configuration */
2651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (tmp_multimode_config != LL_ADC_MULTI_INDEPENDENT)
2652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Multimode (when feature is available) is enabled,
2654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            Common Control Register MDMA bits must be checked. */
2655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (LL_ADC_GetMultiDMATransfer(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) != LL_ADC_MULTI_RE
2656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           overrun_error = 1UL;
2658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
2661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Multimode not set or feature not available or ADC independent */
2663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if ((hadc->Instance->CFGR & ADC_CFGR_DMNGT) != 0UL)
2664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           overrun_error = 1UL;
2666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (overrun_error == 1UL)
ARM GAS  C:\usertemp\cca0PO6L.s 			page 177


2671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Change ADC state to error state */
2673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
2674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC error code to overrun */
2676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
2677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Error callback */
2679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Note: In case of overrun, ADC conversion data is preserved until     */
2680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*       flag OVR is reset.                                             */
2681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*       Therefore, old ADC conversion data can be retrieved in         */
2682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*       function "HAL_ADC_ErrorCallback()".                            */
2683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
2685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
2686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
2687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear ADC overrun flag */
2691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
2692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ========== Check Injected context queue overflow flag ========== */
2695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_JQOVF) == ADC_FLAG_JQOVF) && ((tmp_ier & ADC_IT_JQOVF) == ADC_IT_JQOVF))
2696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Change ADC state to overrun state */
2698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
2699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Set ADC error code to Injected context queue overflow */
2701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
2702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Clear the Injected context queue overflow flag */
2704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JQOVF);
2705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Injected context queue overflow callback */
2707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->InjectedQueueOverflowCallback(hadc);
2709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
2710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     HAL_ADCEx_InjectedQueueOverflowCallback(hadc);
2711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
2715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Conversion complete callback in non-blocking mode.
2718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
2719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None
2720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
2722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
 759              		.loc 1 2722 1 is_stmt 1 view -0
 760              		.cfi_startproc
 761              		@ args = 0, pretend = 0, frame = 0
 762              		@ frame_needed = 0, uses_anonymous_args = 0
 763              		@ link register save eliminated.
ARM GAS  C:\usertemp\cca0PO6L.s 			page 178


2723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   UNUSED(hadc);
 764              		.loc 1 2724 3 view .LVU209
2725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             function HAL_ADC_ConvCpltCallback must be implemented in the user file.
2728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****    */
2729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 765              		.loc 1 2729 1 is_stmt 0 view .LVU210
 766 0000 7047     		bx	lr
 767              		.cfi_endproc
 768              	.LFE347:
 770              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 771              		.align	1
 772              		.weak	HAL_ADC_ConvHalfCpltCallback
 773              		.syntax unified
 774              		.thumb
 775              		.thumb_func
 777              	HAL_ADC_ConvHalfCpltCallback:
 778              	.LVL50:
 779              	.LFB348:
2730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Conversion DMA half-transfer callback in non-blocking mode.
2733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
2734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None
2735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc)
2737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
 780              		.loc 1 2737 1 is_stmt 1 view -0
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 0
 783              		@ frame_needed = 0, uses_anonymous_args = 0
 784              		@ link register save eliminated.
2738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   UNUSED(hadc);
 785              		.loc 1 2739 3 view .LVU212
2740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             function HAL_ADC_ConvHalfCpltCallback must be implemented in the user file.
2743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 786              		.loc 1 2744 1 is_stmt 0 view .LVU213
 787 0000 7047     		bx	lr
 788              		.cfi_endproc
 789              	.LFE348:
 791              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 792              		.align	1
 793              		.global	ADC_DMAHalfConvCplt
 794              		.syntax unified
 795              		.thumb
 796              		.thumb_func
 798              	ADC_DMAHalfConvCplt:
 799              	.LVL51:
 800              	.LFB359:
2745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
ARM GAS  C:\usertemp\cca0PO6L.s 			page 179


2747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Analog watchdog 1 callback in non-blocking mode.
2748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
2749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None
2750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef *hadc)
2752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
2753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   UNUSED(hadc);
2755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             function HAL_ADC_LevelOutOfWindowCallback must be implemented in the user file.
2758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
2760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  ADC error callback in non-blocking mode
2763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         (ADC conversion with interruption or transfer by DMA).
2764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   In case of error due to overrun when using ADC with DMA transfer
2765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         (HAL ADC handle parameter "ErrorCode" to state "HAL_ADC_ERROR_OVR"):
2766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         - Reinitialize the DMA using function "HAL_ADC_Stop_DMA()".
2767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         - If needed, restart a new ADC conversion using function
2768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *           "HAL_ADC_Start_DMA()"
2769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *           (this function is also clearing overrun flag)
2770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
2771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None
2772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
2774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
2775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   UNUSED(hadc);
2777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             function HAL_ADC_ErrorCallback must be implemented in the user file.
2780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
2782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @}
2785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
2788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief    Peripheral Control functions
2789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *
2790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** @verbatim
2791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****  ===============================================================================
2792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****              ##### Peripheral Control functions #####
2793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****  ===============================================================================
2794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     [..]  This section provides functions allowing to:
2795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Configure channels on regular group
2796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Configure the analog watchdog
2797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** @endverbatim
2799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @{
2800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
2803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Configure a channel to be assigned to ADC group regular.
ARM GAS  C:\usertemp\cca0PO6L.s 			page 180


2804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   In case of usage of internal measurement channels:
2805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         Vbat/VrefInt/TempSensor.
2806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         These internal paths can be disabled using function
2807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         HAL_ADC_DeInit().
2808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         This function initializes channel into ADC group regular,
2810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         following calls to this function can be used to reconfigure
2811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         some parameters of structure "ADC_ChannelConfTypeDef" on the fly,
2812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         without resetting the ADC.
2813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state:
2814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         Refer to comments of structure "ADC_ChannelConfTypeDef".
2815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
2816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param sConfig Structure of ADC channel assigned to ADC group regular.
2817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status
2818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
2819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, ADC_ChannelConfTypeDef *sConfig)
2820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
2821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
2823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
2824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0;
2825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
2826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
2827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
2829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
2831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
2832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfig->SingleDiff));
2833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfig->OffsetNumber));
2834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check offset range according to oversampling setting */
2835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (hadc->Init.OversamplingMode == ENABLE)
2836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset / (hadc->Init.Oversampling.
2838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
2840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
2842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Instance == ADC3)
2843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC3_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset));
2845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
2847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
2848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfig->Offset));
2850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* if ROVSE is set, the value of the OFFSETy_EN bit in ADCx_OFRy register is
2854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      ignored (considered as reset) */
2855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(!((sConfig->OffsetNumber != ADC_OFFSET_NONE) && (hadc->Init.OversamplingMode == ENAB
2856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Verification of channel number */
2858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (sConfig->SingleDiff != ADC_DIFFERENTIAL_ENDED)
2859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(sConfig->Channel));
ARM GAS  C:\usertemp\cca0PO6L.s 			page 181


2861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
2863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Instance == ADC1)
2865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC1_DIFF_CHANNEL(sConfig->Channel));
2867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Instance == ADC2)
2869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC2_DIFF_CHANNEL(sConfig->Channel));
2871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC3)
2873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* ADC3 is not available on some STM32H7 products */
2874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Instance == ADC3)
2875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC3_DIFF_CHANNEL(sConfig->Channel));
2877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
2879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
2880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process locked */
2882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_LOCK(hadc);
2883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* conversion on going on regular group:                                    */
2887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /*  - Channel number                                                        */
2888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /*  - Channel rank                                                          */
2889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
2891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
2893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Instance != ADC3)
2894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* ADC channels preselection */
2896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       hadc->Instance->PCSEL_RES0 |= (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Chan
2897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
2898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
2899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* ADC channels preselection */
2900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->Instance->PCSEL |= (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB((uint32_t)sConfig->Channel) & 
2901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
2902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Set ADC group regular sequence: channel on the selected scan sequence rank */
2904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     LL_ADC_REG_SetSequencerRanks(hadc->Instance, sConfig->Rank, sConfig->Channel);
2905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                              */
2907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Parameters that can be updated when ADC is disabled or enabled without   */
2908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* conversion on going on regular group:                                    */
2909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - Channel sampling time                                                 */
2910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - Channel offset                                                        */
2911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
2912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
2913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
2914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
2915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        )
2916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
2917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set sampling time of the selected ADC channel */
ARM GAS  C:\usertemp\cca0PO6L.s 			page 182


2918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, sConfig->SamplingTime);
2919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Configure the offset: offset enable/disable, channel, offset value */
2921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Shift the offset with respect to the selected ADC resolution. */
2923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Offset has to be left-aligned on bit 11, the LSB (right bits) are set to 0 */
2924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
2925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (hadc->Instance == ADC3)
2926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmpOffsetShifted = ADC3_OFFSET_SHIFT_RESOLUTION(hadc, (uint32_t)sConfig->Offset);
2928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
2930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
2931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, (uint32_t)sConfig->Offset);
2933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       
2935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (sConfig->OffsetNumber != ADC_OFFSET_NONE)
2936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set ADC selected offset number */
2938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         LL_ADC_SetOffset(hadc->Instance, sConfig->OffsetNumber, sConfig->Channel, tmpOffsetShifted)
2939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
2941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (hadc->Instance == ADC3)
2942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           assert_param(IS_ADC3_OFFSET_SIGN(sConfig->OffsetSign));
2944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           assert_param(IS_FUNCTIONAL_STATE(sConfig->OffsetSaturation));
2945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Set ADC selected offset sign & saturation */
2946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_SetOffsetSign(hadc->Instance, sConfig->OffsetNumber, sConfig->OffsetSign);
2947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_SetOffsetSaturation(hadc->Instance, sConfig->OffsetNumber, (sConfig->OffsetSaturat
2948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         else
2950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
2951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           assert_param(IS_FUNCTIONAL_STATE(sConfig->OffsetSignedSaturation));
2953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Set ADC selected offset signed saturation */
2954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_SetOffsetSignedSaturation(hadc->Instance, sConfig->OffsetNumber, (sConfig->OffsetS
2955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           assert_param(IS_FUNCTIONAL_STATE(sConfig->OffsetRightShift));
2957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Set ADC selected offset right shift */
2958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_SetDataRightShift(hadc->Instance, sConfig->OffsetNumber, (sConfig->OffsetRightShif
2959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
2961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
2962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
2963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
2964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Scan OFR1, OFR2, OFR3, OFR4 to check if the selected channel is enabled.
2965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           If this is the case, offset OFRx is disabled since
2966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           sConfig->OffsetNumber = ADC_OFFSET_NONE. */
2967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
2968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (hadc->Instance == ADC3)
2969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_
2971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
2972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_1, LL_ADC_OFFSET_DISABLE);
2973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
2974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_
ARM GAS  C:\usertemp\cca0PO6L.s 			page 183


2975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
2976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_2, LL_ADC_OFFSET_DISABLE);
2977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
2978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_
2979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
2980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_3, LL_ADC_OFFSET_DISABLE);
2981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
2982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_
2983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
2984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_4, LL_ADC_OFFSET_DISABLE);
2985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
2986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
2987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         else
2988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
2989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
2990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (((hadc->Instance->OFR1) & ADC_OFR1_OFFSET1_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
2991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
2992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             CLEAR_BIT(hadc->Instance->OFR1, ADC_OFR1_SSATE);
2993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
2994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (((hadc->Instance->OFR2) & ADC_OFR2_OFFSET2_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
2995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
2996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             CLEAR_BIT(hadc->Instance->OFR2, ADC_OFR2_SSATE);
2997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
2998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (((hadc->Instance->OFR3) & ADC_OFR3_OFFSET3_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
2999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
3000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             CLEAR_BIT(hadc->Instance->OFR3, ADC_OFR3_SSATE);
3001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
3002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (((hadc->Instance->OFR4) & ADC_OFR4_OFFSET4_CH) == ADC_OFR_CHANNEL(sConfig->Channel))
3003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
3004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             CLEAR_BIT(hadc->Instance->OFR4, ADC_OFR4_SSATE);
3005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
3006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         
3008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      }
3009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                              */
3012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:                */
3013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - Single or differential mode                                           */
3014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /*  - Internal measurement channels: Vbat/VrefInt/TempSensor                */
3015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
3016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set mode single-ended or differential input of the selected ADC channel */
3018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       LL_ADC_SetChannelSingleDiff(hadc->Instance, sConfig->Channel, sConfig->SingleDiff);
3019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Configuration of differential mode */
3021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (sConfig->SingleDiff == ADC_DIFFERENTIAL_ENDED)
3022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set sampling time of the selected ADC channel */
3024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Note: ADC channel number masked with value "0x1F" to ensure shift value within 32 bits r
3025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         LL_ADC_SetChannelSamplingTime(hadc->Instance,
3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
3027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       sConfig->SamplingTime);
3028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Management of internal measurement channels: Vbat/VrefInt/TempSensor.  */
3031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* If internal channel selected, enable dedicated internal buffers and    */
ARM GAS  C:\usertemp\cca0PO6L.s 			page 184


3032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* paths.                                                                 */
3033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Note: these internal measurement paths can be disabled using           */
3034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* HAL_ADC_DeInit().                                                      */
3035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (__LL_ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
3037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Configuration of common ADC parameters                                 */
3039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc-
3041:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3042:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Software is allowed to change common parameters only when all ADCs   */
3043:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* of the common group are disabled.                                    */
3044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0U
3045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3046:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* If the requested internal measurement path has already been enabled, */
3047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* bypass the configuration processing.                                 */
3048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) && ((tmp_config_internal_channel & LL_AD
3049:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
3050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
3051:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
3052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_
3053:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3054:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               /* Delay for temperature sensor stabilization time */
3055:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               /* Wait loop initialization and execution */
3056:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               /* Note: Variable divided by 2 to compensate partially              */
3057:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               /*       CPU processing cycles, scaling in us split to not          */
3058:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               /*       exceed 32 bits register capacity and handle low frequency. */
3059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * ((SystemCoreClock / (10
3060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               while (wait_loop_index != 0UL)
3061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               {
3062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                 wait_loop_index--;
3063:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               }
3064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
3065:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
3066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           else if ((sConfig->Channel == ADC_CHANNEL_VBAT) && ((tmp_config_internal_channel & LL_ADC
3067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
3068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
3069:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
3070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_
3071:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
3072:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
3073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           else if ((sConfig->Channel == ADC_CHANNEL_VREFINT) && ((tmp_config_internal_channel & LL_
3074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
3075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             if (ADC_VREFINT_INSTANCE(hadc))
3076:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
3077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_
3078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
3079:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
3080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           else
3081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
3082:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* nothing to do */
3083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
3084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3085:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* If the requested internal measurement path has already been          */
3086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* enabled and other ADC of the common group are enabled, internal      */
3087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* measurement paths cannot be enabled.                                 */
3088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         else
ARM GAS  C:\usertemp\cca0PO6L.s 			page 185


3089:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3090:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Update ADC state machine to error */
3091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
3092:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           tmp_hal_status = HAL_ERROR;
3094:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3095:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3098:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3099:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* If a conversion is on going on regular group, no update on regular       */
3100:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* channel could be done on neither of the channel configuration structure  */
3101:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* parameters.                                                              */
3102:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
3103:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3104:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update ADC state machine to error */
3105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
3106:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
3108:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3109:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3110:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process unlocked */
3111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
3112:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
3114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return tmp_hal_status;
3115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
3116:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3117:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
3118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Configure the analog watchdog.
3119:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
3120:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         This function initializes the selected analog watchdog, successive
3121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         calls to this function can be used to reconfigure some parameters
3122:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         of structure "ADC_AnalogWDGConfTypeDef" on the fly, without resetting
3123:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         the ADC.
3124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
3125:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         For parameters constraints, see comments of structure
3126:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         "ADC_AnalogWDGConfTypeDef".
3127:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   On this STM32 series, analog watchdog thresholds cannot be modified
3128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         while ADC conversion is on going.
3129:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
3130:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param AnalogWDGConfig Structure of ADC analog watchdog configuration
3131:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status
3132:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3133:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef *hadc, ADC_AnalogWDGConfTypeDef *Analog
3134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
3135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
3136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
3137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpAWDLowThresholdShifted;
3138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
3139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
3140:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3141:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
3142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(AnalogWDGConfig->WatchdogNumber));
3144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
3145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
ARM GAS  C:\usertemp\cca0PO6L.s 			page 186


3146:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if ((AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)     ||
3148:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
3149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REGINJEC))
3150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(AnalogWDGConfig->Channel));
3152:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3154:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
3155:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3156:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (hadc->Instance == ADC3)
3157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3158:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Verify thresholds range */
3159:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Init.OversamplingMode == ENABLE)
3160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3161:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Case of oversampling enabled: thresholds are compared to oversampling
3162:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          intermediate computation (after ratio, before shift application) */
3163:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC3_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->HighThreshold / (hadc->
3164:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC3_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold / (hadc->I
3165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3166:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
3167:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3168:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Verify if thresholds are within the selected ADC resolution */
3169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC3_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->HighThreshold));
3170:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC3_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
3171:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3173:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
3174:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
3175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3176:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Verify thresholds range */
3177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (hadc->Init.OversamplingMode == ENABLE)
3178:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3179:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Case of oversampling enabled: thresholds are compared to oversampling
3180:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          intermediate computation (after ratio, before shift application) */
3181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->HighThreshold / (hadc->I
3182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold / (hadc->In
3183:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
3185:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3186:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Verify if thresholds are within the selected ADC resolution */
3187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->HighThreshold));
3188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
3189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3190:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3191:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3192:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process locked */
3193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_LOCK(hadc);
3194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3195:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
3196:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
3197:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* conversion on going on ADC groups regular and injected:                  */
3198:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /*  - Analog watchdog channels                                              */
3199:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /*  - Analog watchdog thresholds                                            */
3200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
3201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
3202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
ARM GAS  C:\usertemp\cca0PO6L.s 			page 187


3203:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
3204:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      )
3205:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3206:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Analog watchdog configuration */
3207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
3208:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Configuration of analog watchdog:                                    */
3210:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*  - Set the analog watchdog enable mode: one or overall group of      */
3211:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /*    channels, on groups regular and-or injected.                      */
3212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       switch (AnalogWDGConfig->WatchdogMode)
3213:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
3215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
3216:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR));
3217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
3218:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3219:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_INJEC:
3220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
3221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                           LL_ADC_GROUP_INJECTED));
3222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
3223:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3224:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REGINJEC:
3225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
3226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR_INJECTED));
3227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
3228:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3229:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
3230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG)
3231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
3232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3233:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_INJEC:
3234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_INJ)
3235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
3236:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3237:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REGINJEC:
3238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG_
3239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
3240:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3241:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
3242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_DISABLE);
3243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
3244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3245:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3246:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Shift the offset in function of the selected ADC resolution:         */
3247:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Thresholds have to be left-aligned on bit 11, the LSB (right bits)   */
3248:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* are set to 0                                                         */
3249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDHighThresholdShifted = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighTh
3250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
3251:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3252:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set the high and low thresholds */
3253:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
3254:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (hadc->Instance == ADC3)
3255:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3256:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->LTR1_TR1,
3257:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    ADC3_TR1_AWDFILT,
3258:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    AnalogWDGConfig->FilteringConfig);
3259:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->LTR1_TR1,  ADC3_TR1_LT1, tmpAWDLowThresholdShifted);
ARM GAS  C:\usertemp\cca0PO6L.s 			page 188


3260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->LTR1_TR1,  ADC3_TR1_HT1, (tmpAWDHighThresholdShifted << ADC3_TR1
3261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3262:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
3263:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3265:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->LTR1_TR1,  ADC_LTR_LT, tmpAWDLowThresholdShifted);
3266:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->HTR1_TR2,  ADC_HTR_HT, tmpAWDHighThresholdShifted);
3267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3268:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
3269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->LTR1,  ADC_LTR_LT, tmpAWDLowThresholdShifted);
3270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->HTR1,  ADC_HTR_HT, tmpAWDHighThresholdShifted);
3271:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
3272:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Update state, clear previous result related to AWD1 */
3274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD1);
3275:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear flag ADC analog watchdog */
3277:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3278:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3279:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* (in case left enabled by previous ADC operations).                 */
3280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       LL_ADC_ClearFlag_AWD1(hadc->Instance);
3281:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Configure ADC analog watchdog interrupt */
3283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (AnalogWDGConfig->ITMode == ENABLE)
3284:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         LL_ADC_EnableIT_AWD1(hadc->Instance);
3286:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3287:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
3288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         LL_ADC_DisableIT_AWD1(hadc->Instance);
3290:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3291:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3292:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Case of ADC_ANALOGWATCHDOG_2 or ADC_ANALOGWATCHDOG_3 */
3293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
3294:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       switch (AnalogWDGConfig->WatchdogMode)
3296:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3297:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
3298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_INJEC:
3299:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REGINJEC:
3300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Update AWD by bitfield to keep the possibility to monitor        */
3301:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* several channels by successive calls of this function.           */
3302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
3303:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
3304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD2CR, (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDGConfig
3305:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
3306:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           else
3307:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
3308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD3CR, (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDGConfig
3309:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
3310:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
3311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3312:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
3313:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_INJEC:
3314:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REGINJEC:
3315:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3316:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
ARM GAS  C:\usertemp\cca0PO6L.s 			page 189


3317:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (hadc->Instance == ADC3)
3318:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
3319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3320:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, AnalogWDGConfig->WatchdogNumber, LL_ADC
3321:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
3323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           else
3324:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
3325:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif  /*ADC_VER_V5_V90*/
3326:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* Update AWD by bitfield to keep the possibility to monitor        */
3327:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* several channels by successive calls of this function.           */
3328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
3329:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
3330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               SET_BIT(hadc->Instance->AWD2CR, (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDGConf
3331:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
3332:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             else
3333:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
3334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               SET_BIT(hadc->Instance->AWD3CR, (1UL << (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDGConf
3335:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
3336:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
3337:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
3338:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif  /*ADC_VER_V5_V90*/
3339:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
3340:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3341:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
3342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, AnalogWDGConfig->WatchdogNumber, LL_ADC_A
3343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
3344:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3345:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3346:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Shift the thresholds in function of the selected ADC resolution      */
3347:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* have to be left-aligned on bit 15, the LSB (right bits) are set to 0 */
3348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDHighThresholdShifted = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighT
3349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
3350:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3351:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
3352:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (hadc->Instance == ADC3)
3353:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3354:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3355:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Analog watchdog thresholds configuration */
3356:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (AnalogWDGConfig->WatchdogNumber != ADC_ANALOGWATCHDOG_1)
3357:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3358:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Shift the offset with respect to the selected ADC resolution:        */
3359:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Thresholds have to be left-aligned on bit 7, the LSB (right bits)    */
3360:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* are set to 0.                                                        */
3361:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           tmpAWDHighThresholdShifted = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->H
3362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->L
3363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set ADC analog watchdog thresholds value of both thresholds high and low */
3366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         LL_ADC_ConfigAnalogWDThresholds(hadc->Instance, AnalogWDGConfig->WatchdogNumber, tmpAWDHigh
3367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
3371:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3372:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
ARM GAS  C:\usertemp\cca0PO6L.s 			page 190


3374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3375:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Set ADC analog watchdog thresholds value of both thresholds high and low */
3376:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           MODIFY_REG(hadc->Instance->LTR2_DIFSEL,  ADC_LTR_LT, tmpAWDLowThresholdShifted);
3377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           MODIFY_REG(hadc->Instance->HTR2_CALFACT,  ADC_HTR_HT, tmpAWDHighThresholdShifted);
3378:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3379:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         else
3380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3381:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Set ADC analog watchdog thresholds value of both thresholds high and low */
3382:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           MODIFY_REG(hadc->Instance->LTR3_RES10,  ADC_LTR_LT, tmpAWDLowThresholdShifted);
3383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           MODIFY_REG(hadc->Instance->HTR3_RES11,  ADC_HTR_HT, tmpAWDHighThresholdShifted);
3384:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3385:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3386:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
3387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
3388:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3389:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set ADC analog watchdog thresholds value of both thresholds high and low */
3390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->LTR2,  ADC_LTR_LT, tmpAWDLowThresholdShifted);
3391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->HTR2,  ADC_HTR_HT, tmpAWDHighThresholdShifted);
3392:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3393:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
3394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3395:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Set ADC analog watchdog thresholds value of both thresholds high and low */
3396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->LTR3,  ADC_LTR_LT, tmpAWDLowThresholdShifted);
3397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->HTR3,  ADC_HTR_HT, tmpAWDHighThresholdShifted);
3398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
3401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
3402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3403:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Update state, clear previous result related to AWD2 */
3404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD2);
3405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3406:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
3407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
3409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
3410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         LL_ADC_ClearFlag_AWD2(hadc->Instance);
3411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
3413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (AnalogWDGConfig->ITMode == ENABLE)
3414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_EnableIT_AWD2(hadc->Instance);
3416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         else
3418:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_DisableIT_AWD2(hadc->Instance);
3420:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3422:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_3) */
3423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       else
3424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Update state, clear previous result related to AWD3 */
3426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD3);
3427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
3429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
3430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
ARM GAS  C:\usertemp\cca0PO6L.s 			page 191


3431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
3432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         LL_ADC_ClearFlag_AWD3(hadc->Instance);
3433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
3435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (AnalogWDGConfig->ITMode == ENABLE)
3436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_EnableIT_AWD3(hadc->Instance);
3438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         else
3440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_DisableIT_AWD3(hadc->Instance);
3442:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3444:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3447:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* If a conversion is on going on ADC group regular or injected, no update  */
3448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* could be done on neither of the AWD configuration structure parameters.  */
3449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
3450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Update ADC state machine to error */
3452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
3453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
3455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3456:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Process unlocked */
3457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
3458:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return function status */
3460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return tmp_hal_status;
3461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
3462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3463:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3464:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
3465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @}
3466:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3467:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3468:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 Peripheral State functions
3469:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *  @brief    ADC Peripheral State functions
3470:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *
3471:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** @verbatim
3472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****  ===============================================================================
3473:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ##### Peripheral state and errors functions #####
3474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****  ===============================================================================
3475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     [..]
3476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     This subsection provides functions to get in run-time the status of the
3477:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     peripheral.
3478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Check the ADC state
3479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (+) Check the ADC error code
3480:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3481:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** @endverbatim
3482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @{
3483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3485:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
3486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Return the ADC handle state.
3487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   ADC state machine is managed by bitfields, ADC status must be
ARM GAS  C:\usertemp\cca0PO6L.s 			page 192


3488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         compared with states bits.
3489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         For example:
3490:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_REG_BUSY) != 0UL) "
3491:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "
3492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
3493:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval ADC handle state (bitfield on 32 bits)
3494:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef *hadc)
3496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
3497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
3498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return ADC handle state */
3501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return hadc->State;
3502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
3503:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
3505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Return the ADC error code.
3506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
3507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval ADC error code (bitfield on 32 bits)
3508:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3509:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
3510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
3511:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
3512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3513:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return hadc->ErrorCode;
3515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
3516:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
3518:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @}
3519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3521:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
3522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @}
3523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3524:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
3526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @{
3527:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3528:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
3530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Stop ADC conversion.
3531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
3532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param ConversionGroup ADC group regular and/or injected.
3533:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *          This parameter can be one of the following values:
3534:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            @arg @ref ADC_REGULAR_GROUP           ADC regular conversion type.
3535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            @arg @ref ADC_INJECTED_GROUP          ADC injected conversion type.
3536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *            @arg @ref ADC_REGULAR_INJECTED_GROUP  ADC regular and injected conversion type.
3537:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status.
3538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3539:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef ADC_ConversionStop(ADC_HandleTypeDef *hadc, uint32_t ConversionGroup)
3540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
3541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart;
3542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t Conversion_Timeout_CPU_cycles = 0UL;
3543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t conversion_group_reassigned = ConversionGroup;
3544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART;
ARM GAS  C:\usertemp\cca0PO6L.s 			page 193


3545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
3546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
3547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
3549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
3550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_CONVERSION_GROUP(ConversionGroup));
3551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Verification if ADC is not already stopped (on regular and injected      */
3553:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* groups) to bypass this function if not needed.                           */
3554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
3555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
3556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular != 0UL)
3557:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       || (tmp_adc_is_conversion_on_going_injected != 0UL)
3558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      )
3559:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3560:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Particular case of continuous auto-injection mode combined with        */
3561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* auto-delay mode.                                                       */
3562:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* In auto-injection mode, regular group stop ADC_CR_ADSTP is used (not   */
3563:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* injected group stop ADC_CR_JADSTP).                                    */
3564:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Procedure to be followed: Wait until JEOS=1, clear JEOS, set ADSTP=1   */
3565:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* (see reference manual).                                                */
3566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (((hadc->Instance->CFGR & ADC_CFGR_JAUTO) != 0UL)
3567:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
3568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         && (hadc->Init.LowPowerAutoWait == ENABLE)
3569:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        )
3570:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3571:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Use stop of regular group */
3572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       conversion_group_reassigned = ADC_REGULAR_GROUP;
3573:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3574:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Wait until JEOS=1 (maximum Timeout: 4 injected conversions) */
3575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS) == 0UL)
3576:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (Conversion_Timeout_CPU_cycles >= (ADC_CONVERSION_TIME_MAX_CPU_CYCLES * 4UL))
3578:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3579:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Update ADC state machine to error */
3580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3582:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3584:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           return HAL_ERROR;
3586:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         Conversion_Timeout_CPU_cycles ++;
3588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3589:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3590:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Clear JEOS */
3591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOS);
3592:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3593:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Stop potential conversion on going on ADC group regular */
3595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (conversion_group_reassigned != ADC_INJECTED_GROUP)
3596:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3597:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Software is allowed to set ADSTP only when ADSTART=1 and ADDIS=0 */
3598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
3599:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
3601:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
ARM GAS  C:\usertemp\cca0PO6L.s 			page 194


3602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Stop ADC group regular conversion */
3603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_REG_StopConversion(hadc->Instance);
3604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3606:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Stop potential conversion on going on ADC group injected */
3609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (conversion_group_reassigned != ADC_REGULAR_GROUP)
3610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Software is allowed to set JADSTP only when JADSTART=1 and ADDIS=0 */
3612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) != 0UL)
3613:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
3615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Stop ADC group injected conversion */
3617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_INJ_StopConversion(hadc->Instance);
3618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3620:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3621:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Selection of start and stop bits with respect to the regular or injected group */
3623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     switch (conversion_group_reassigned)
3624:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_REGULAR_INJECTED_GROUP:
3626:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = (ADC_CR_ADSTART | ADC_CR_JADSTART);
3627:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
3628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_INJECTED_GROUP:
3629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_JADSTART;
3630:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
3631:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Case ADC_REGULAR_GROUP only*/
3632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       default:
3633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_ADC_CR_ADSTART_JADSTART = ADC_CR_ADSTART;
3634:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
3635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3637:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Wait for conversion effectively stopped */
3638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tickstart = HAL_GetTick();
3639:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     while ((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != 0UL)
3641:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
3643:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
3645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if((hadc->Instance->CR & tmp_ADC_CR_ADSTART_JADSTART) != 0UL)
3646:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3647:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Update ADC state machine to error */
3648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3649:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3650:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3652:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           return HAL_ERROR;
3654:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3657:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3658:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
ARM GAS  C:\usertemp\cca0PO6L.s 			page 195


3659:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3660:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return HAL status */
3661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return HAL_OK;
3662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
3663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3664:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
3667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Enable the selected ADC.
3668:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC must be disabled
3669:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         and voltage regulator must be enabled (done into HAL_ADC_Init()).
3670:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
3671:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status.
3672:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef *hadc)
3674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
3675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart;
3676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3677:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
3678:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* enabling phase not yet completed: flag ADC ready not yet set).           */
3679:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
3680:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* causes: ADC clock not running, ...).                                     */
3681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
3682:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3683:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check if conditions to enable the ADC are fulfilled */
3684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JADSTART | ADC_
3685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Update ADC state machine to error */
3687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3688:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3689:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
3690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       return HAL_ERROR;
3693:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3694:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Enable the ADC peripheral */
3696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     LL_ADC_Enable(hadc->Instance);
3697:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Wait for ADC effectively enabled */
3699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tickstart = HAL_GetTick();
3700:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Poll for ADC ready flag raised except case of multimode enabled
3702:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        and ADC slave selected. */
3703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
3704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
3705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
3706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        )
3707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       while (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
3709:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*  If ADEN bit is set less than 4 ADC clock cycles after the ADCAL bit
3711:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             has been cleared (after a calibration), ADEN bit is reset by the
3712:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             calibration logic.
3713:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             The workaround is to continue setting ADEN until ADRDY is becomes 1.
3714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             Additionally, ADC_ENABLE_TIMEOUT is defined to encompass this
3715:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             4 ADC clock cycle duration */
ARM GAS  C:\usertemp\cca0PO6L.s 			page 196


3716:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Note: Test of ADC enabled required due to hardware constraint to     */
3717:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /*       not enable ADC if already enabled.                             */
3718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
3719:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           LL_ADC_Enable(hadc->Instance);
3721:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3722:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if ((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
3724:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3725:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* New check to avoid false timeout detection in case of preemption */
3726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
3727:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
3728:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* Update ADC state machine to error */
3729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3730:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3731:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* Set ADC error code to ADC peripheral internal error */
3732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3733:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             return HAL_ERROR;
3735:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
3736:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3737:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3738:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3739:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3740:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3741:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return HAL status */
3742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return HAL_OK;
3743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
3744:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3745:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
3746:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Disable the selected ADC.
3747:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
3748:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         stopped.
3749:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hadc ADC handle
3750:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval HAL status.
3751:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** HAL_StatusTypeDef ADC_Disable(ADC_HandleTypeDef *hadc)
3753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
3754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart;
3755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
3756:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3757:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Verification if ADC is not already disabled:                             */
3758:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Note: forbidden to disable ADC (set bit ADC_CR_ADDIS) if ADC is already  */
3759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /*       disabled.                                                          */
3760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if ((LL_ADC_IsEnabled(hadc->Instance) != 0UL)
3761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
3762:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      )
3763:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3764:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Check if conditions to disable the ADC are fulfilled */
3765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_JADSTART | ADC_CR_ADSTART | ADC_CR_ADEN)) == ADC_CR_ADEN)
3766:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3767:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Disable the ADC peripheral */
3768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       LL_ADC_Disable(hadc->Instance);
3769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
3770:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3771:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
3772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
ARM GAS  C:\usertemp\cca0PO6L.s 			page 197


3773:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Update ADC state machine to error */
3774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3775:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
3777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3778:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       return HAL_ERROR;
3780:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3782:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Wait for ADC effectively disabled */
3783:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Get tick count */
3784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tickstart = HAL_GetTick();
3785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     while ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
3787:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if ((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
3789:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3790:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* New check to avoid false timeout detection in case of preemption */
3791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if ((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
3792:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3793:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Update ADC state machine to error */
3794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
3795:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3796:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
3797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
3798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           return HAL_ERROR;
3800:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3802:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3803:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3804:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Return HAL status */
3806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   return HAL_OK;
3807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
3808:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3809:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
3810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  DMA transfer complete callback.
3811:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3812:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None
3813:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3814:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
3815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
3816:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
3818:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3819:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
3820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if ((hadc->State & (HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA)) == 0UL)
3821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Set ADC state */
3823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
3824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
3826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
3827:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* to disable interruption.                                               */
3828:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Is it the end of the regular sequence ? */
3829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((hadc->Instance->ISR & ADC_FLAG_EOS) != 0UL)
ARM GAS  C:\usertemp\cca0PO6L.s 			page 198


3830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Are conversions software-triggered ? */
3832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
3833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3834:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* Is CONT bit set ? */
3835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_CONT) == 0UL)
3836:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* CONT bit is not set, no more conversions expected */
3838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
3839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
3840:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
3841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3842:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
3843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3845:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3846:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
3847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3848:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* DMA End of Transfer interrupt was triggered but conversions sequence
3849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          is not over. If DMACFG is set to 0, conversions are stopped. */
3850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       if (READ_BIT(hadc->Instance->CFGR, ADC_CFGR_DMNGT) == 0UL)
3851:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
3852:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* DMACFG bit is not set, conversions are stopped. */
3853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
3854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
3855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
3856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
3857:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
3858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
3859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3860:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3861:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Conversion complete callback */
3862:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3863:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
3864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
3865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
3866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else /* DMA and-or internal error occurred */
3869:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
3871:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3872:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Call HAL ADC Error Callback function */
3873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
3875:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
3876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
3877:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3878:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
3880:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3881:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Call ADC DMA error callback */
3882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback(hdma);
3883:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3884:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
3886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 199


3887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
3888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  DMA half transfer complete callback.
3889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3890:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None
3891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3892:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)
3893:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
 801              		.loc 1 3893 1 is_stmt 1 view -0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 0
 804              		@ frame_needed = 0, uses_anonymous_args = 0
 805              		.loc 1 3893 1 is_stmt 0 view .LVU215
 806 0000 08B5     		push	{r3, lr}
 807              	.LCFI8:
 808              		.cfi_def_cfa_offset 8
 809              		.cfi_offset 3, -8
 810              		.cfi_offset 14, -4
3894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3895:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 811              		.loc 1 3895 3 is_stmt 1 view .LVU216
 812              	.LVL52:
3896:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Half conversion callback */
3898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3899:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   hadc->ConvHalfCpltCallback(hadc);
3900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
3901:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc);
 813              		.loc 1 3901 3 view .LVU217
 814 0002 806B     		ldr	r0, [r0, #56]
 815              	.LVL53:
 816              		.loc 1 3901 3 is_stmt 0 view .LVU218
 817 0004 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
 818              	.LVL54:
3902:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 819              		.loc 1 3903 1 view .LVU219
 820 0008 08BD     		pop	{r3, pc}
 821              		.cfi_endproc
 822              	.LFE359:
 824              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 825              		.align	1
 826              		.weak	HAL_ADC_LevelOutOfWindowCallback
 827              		.syntax unified
 828              		.thumb
 829              		.thumb_func
 831              	HAL_ADC_LevelOutOfWindowCallback:
 832              	.LVL55:
 833              	.LFB349:
2752:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 834              		.loc 1 2752 1 is_stmt 1 view -0
 835              		.cfi_startproc
 836              		@ args = 0, pretend = 0, frame = 0
 837              		@ frame_needed = 0, uses_anonymous_args = 0
 838              		@ link register save eliminated.
2754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 839              		.loc 1 2754 3 view .LVU221
2759:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 200


 840              		.loc 1 2759 1 is_stmt 0 view .LVU222
 841 0000 7047     		bx	lr
 842              		.cfi_endproc
 843              	.LFE349:
 845              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 846              		.align	1
 847              		.weak	HAL_ADC_ErrorCallback
 848              		.syntax unified
 849              		.thumb
 850              		.thumb_func
 852              	HAL_ADC_ErrorCallback:
 853              	.LVL56:
 854              	.LFB350:
2774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 855              		.loc 1 2774 1 is_stmt 1 view -0
 856              		.cfi_startproc
 857              		@ args = 0, pretend = 0, frame = 0
 858              		@ frame_needed = 0, uses_anonymous_args = 0
 859              		@ link register save eliminated.
2776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 860              		.loc 1 2776 3 view .LVU224
2781:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 861              		.loc 1 2781 1 is_stmt 0 view .LVU225
 862 0000 7047     		bx	lr
 863              		.cfi_endproc
 864              	.LFE350:
 866              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 867              		.align	1
 868              		.global	HAL_ADC_IRQHandler
 869              		.syntax unified
 870              		.thumb
 871              		.thumb_func
 873              	HAL_ADC_IRQHandler:
 874              	.LVL57:
 875              	.LFB346:
2362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 876              		.loc 1 2362 1 is_stmt 1 view -0
 877              		.cfi_startproc
 878              		@ args = 0, pretend = 0, frame = 0
 879              		@ frame_needed = 0, uses_anonymous_args = 0
2362:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 880              		.loc 1 2362 1 is_stmt 0 view .LVU227
 881 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 882              	.LCFI9:
 883              		.cfi_def_cfa_offset 24
 884              		.cfi_offset 3, -24
 885              		.cfi_offset 4, -20
 886              		.cfi_offset 5, -16
 887              		.cfi_offset 6, -12
 888              		.cfi_offset 7, -8
 889              		.cfi_offset 14, -4
 890 0002 0446     		mov	r4, r0
2363:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
 891              		.loc 1 2363 3 is_stmt 1 view .LVU228
 892              	.LVL58:
2364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 893              		.loc 1 2364 3 view .LVU229
ARM GAS  C:\usertemp\cca0PO6L.s 			page 201


2364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 894              		.loc 1 2364 26 is_stmt 0 view .LVU230
 895 0004 0368     		ldr	r3, [r0]
2364:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 896              		.loc 1 2364 12 view .LVU231
 897 0006 1D68     		ldr	r5, [r3]
 898              	.LVL59:
2365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
 899              		.loc 1 2365 3 is_stmt 1 view .LVU232
2365:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
 900              		.loc 1 2365 12 is_stmt 0 view .LVU233
 901 0008 5E68     		ldr	r6, [r3, #4]
 902              	.LVL60:
2366:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_trigger_source_sw_start;
 903              		.loc 1 2366 3 is_stmt 1 view .LVU234
2367:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_cfgr;
 904              		.loc 1 2367 3 view .LVU235
2368:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
 905              		.loc 1 2368 3 view .LVU236
2369:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 906              		.loc 1 2369 3 view .LVU237
2370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 907              		.loc 1 2370 3 view .LVU238
2370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 908              		.loc 1 2370 35 is_stmt 0 view .LVU239
 909 000a 9C49     		ldr	r1, .L114
 910 000c 9C4A     		ldr	r2, .L114+4
 911 000e 9342     		cmp	r3, r2
 912 0010 18BF     		it	ne
 913 0012 8B42     		cmpne	r3, r1
 914 0014 5BD1     		bne	.L101
2370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 915              		.loc 1 2370 35 discriminator 1 view .LVU240
 916 0016 9B4B     		ldr	r3, .L114+8
 917              	.L64:
 918              	.LVL61:
 919              	.LBB278:
 920              	.LBI278:
6476:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 921              		.loc 2 6476 26 is_stmt 1 view .LVU241
 922              	.LBB279:
6478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 923              		.loc 2 6478 3 view .LVU242
6478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 924              		.loc 2 6478 21 is_stmt 0 view .LVU243
 925 0018 9F68     		ldr	r7, [r3, #8]
6478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 926              		.loc 2 6478 10 view .LVU244
 927 001a 07F01F07 		and	r7, r7, #31
 928              	.LVL62:
6478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 929              		.loc 2 6478 10 view .LVU245
 930              	.LBE279:
 931              	.LBE278:
2373:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 932              		.loc 1 2373 3 is_stmt 1 view .LVU246
2374:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 202


 933              		.loc 1 2374 3 view .LVU247
2377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 934              		.loc 1 2377 3 view .LVU248
2377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 935              		.loc 1 2377 6 is_stmt 0 view .LVU249
 936 001e 15F0020F 		tst	r5, #2
 937 0022 10D0     		beq	.L65
2377:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 938              		.loc 1 2377 54 discriminator 1 view .LVU250
 939 0024 16F0020F 		tst	r6, #2
 940 0028 0DD0     		beq	.L65
2380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 941              		.loc 1 2380 5 is_stmt 1 view .LVU251
2380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 942              		.loc 1 2380 14 is_stmt 0 view .LVU252
 943 002a 636D     		ldr	r3, [r4, #84]
2380:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 944              		.loc 1 2380 8 view .LVU253
 945 002c 13F0100F 		tst	r3, #16
 946 0030 03D1     		bne	.L66
2383:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 947              		.loc 1 2383 7 is_stmt 1 view .LVU254
 948 0032 636D     		ldr	r3, [r4, #84]
 949 0034 43F40063 		orr	r3, r3, #2048
 950 0038 6365     		str	r3, [r4, #84]
 951              	.L66:
2390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 952              		.loc 1 2390 5 view .LVU255
 953 003a 2046     		mov	r0, r4
 954              	.LVL63:
2390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 955              		.loc 1 2390 5 is_stmt 0 view .LVU256
 956 003c FFF7FEFF 		bl	HAL_ADCEx_EndOfSamplingCallback
 957              	.LVL64:
2394:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 958              		.loc 1 2394 5 is_stmt 1 view .LVU257
 959 0040 2368     		ldr	r3, [r4]
 960 0042 0222     		movs	r2, #2
 961 0044 1A60     		str	r2, [r3]
 962              	.L65:
2398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 963              		.loc 1 2398 3 view .LVU258
2398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 964              		.loc 1 2398 6 is_stmt 0 view .LVU259
 965 0046 15F0040F 		tst	r5, #4
 966 004a 02D0     		beq	.L67
2398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 967              		.loc 1 2398 51 discriminator 1 view .LVU260
 968 004c 16F0040F 		tst	r6, #4
 969 0050 05D1     		bne	.L68
 970              	.L67:
2398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS)))
 971              		.loc 1 2398 94 discriminator 3 view .LVU261
 972 0052 15F0080F 		tst	r5, #8
 973 0056 4FD0     		beq	.L69
2399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 974              		.loc 1 2399 51 view .LVU262
ARM GAS  C:\usertemp\cca0PO6L.s 			page 203


 975 0058 16F0080F 		tst	r6, #8
 976 005c 4CD0     		beq	.L69
 977              	.L68:
2402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 978              		.loc 1 2402 5 is_stmt 1 view .LVU263
2402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 979              		.loc 1 2402 14 is_stmt 0 view .LVU264
 980 005e 636D     		ldr	r3, [r4, #84]
2402:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 981              		.loc 1 2402 8 view .LVU265
 982 0060 13F0100F 		tst	r3, #16
 983 0064 03D1     		bne	.L70
2405:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 984              		.loc 1 2405 7 is_stmt 1 view .LVU266
 985 0066 636D     		ldr	r3, [r4, #84]
 986 0068 43F40073 		orr	r3, r3, #512
 987 006c 6365     		str	r3, [r4, #84]
 988              	.L70:
2411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 989              		.loc 1 2411 5 view .LVU267
2411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 990              		.loc 1 2411 9 is_stmt 0 view .LVU268
 991 006e 2368     		ldr	r3, [r4]
 992              	.LVL65:
 993              	.LBB280:
 994              	.LBI280:
3861:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 995              		.loc 2 3861 26 is_stmt 1 view .LVU269
 996              	.LBB281:
3863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 997              		.loc 2 3863 3 view .LVU270
3863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 998              		.loc 2 3863 12 is_stmt 0 view .LVU271
 999 0070 DA68     		ldr	r2, [r3, #12]
3863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1000              		.loc 2 3863 103 view .LVU272
 1001 0072 12F4406F 		tst	r2, #3072
 1002 0076 39D1     		bne	.L71
 1003              	.LVL66:
3863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1004              		.loc 2 3863 103 view .LVU273
 1005              	.LBE281:
 1006              	.LBE280:
2416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1007              		.loc 1 2416 7 is_stmt 1 view .LVU274
2416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1008              		.loc 1 2416 12 is_stmt 0 view .LVU275
 1009 0078 814A     		ldr	r2, .L114+4
 1010 007a 9342     		cmp	r3, r2
 1011 007c 29D0     		beq	.L108
2416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1012              		.loc 1 2416 12 discriminator 1 view .LVU276
 1013 007e 1A46     		mov	r2, r3
 1014              	.L72:
2416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1015              		.loc 1 2416 10 discriminator 4 view .LVU277
 1016 0080 9342     		cmp	r3, r2
ARM GAS  C:\usertemp\cca0PO6L.s 			page 204


 1017 0082 07D0     		beq	.L73
 1018 0084 092F     		cmp	r7, #9
 1019 0086 27D8     		bhi	.L74
 1020 0088 40F22121 		movw	r1, #545
 1021 008c F940     		lsrs	r1, r1, r7
 1022 008e 11F0010F 		tst	r1, #1
 1023 0092 21D0     		beq	.L74
 1024              	.L73:
2423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1025              		.loc 1 2423 9 is_stmt 1 view .LVU278
2423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1026              		.loc 1 2423 18 is_stmt 0 view .LVU279
 1027 0094 DA68     		ldr	r2, [r3, #12]
 1028              	.LVL67:
 1029              	.L75:
2433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1030              		.loc 1 2433 7 is_stmt 1 view .LVU280
2433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1031              		.loc 1 2433 10 is_stmt 0 view .LVU281
 1032 0096 12F4005F 		tst	r2, #8192
 1033 009a 27D1     		bne	.L71
2436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1034              		.loc 1 2436 9 is_stmt 1 view .LVU282
2436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1035              		.loc 1 2436 13 is_stmt 0 view .LVU283
 1036 009c 1A68     		ldr	r2, [r3]
 1037              	.LVL68:
2436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1038              		.loc 1 2436 12 view .LVU284
 1039 009e 12F0080F 		tst	r2, #8
 1040 00a2 23D0     		beq	.L71
2440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 1041              		.loc 1 2440 11 is_stmt 1 view .LVU285
 1042              	.LVL69:
 1043              	.LBB282:
 1044              	.LBI282:
6570:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6571:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6572:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6573:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Set ADC multimode delay between 2 sampling phases.
6574:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   The sampling delay range depends on ADC resolution:
6575:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC resolution 12 bits can have maximum delay of 12 cycles.
6576:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC resolution 10 bits can have maximum delay of 10 cycles.
6577:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC resolution  8 bits can have maximum delay of  8 cycles.
6578:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - ADC resolution  6 bits can have maximum delay of  6 cycles.
6579:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6580:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6581:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
6582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
6583:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
6584:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
6585:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_SetMultiTwoSamplingDelay
6586:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6587:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6588:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  MultiTwoSamplingDelay This parameter can be one of the following values:
6589:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE_5
6590:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES_5
ARM GAS  C:\usertemp\cca0PO6L.s 			page 205


6591:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES_5
6592:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES_5 (1)
6593:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES_5_8_BITS
6594:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES_5 (2)
6595:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES_5_10_BITS
6596:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (3)
6597:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES_5 (4)
6598:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES_5_12_BITS
6599:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES_5 (5)
6600:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (6)
6601:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (7)
6602:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
6603:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 16, 14, 12 or 10 bits.
6604:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 16, 14 or 12  bits.
6605:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 10 or 8 bits.
6606:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (4) Parameter available only if ADC resolution is 16 or 14 bits.
6607:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (5) Parameter available only if ADC resolution is 16 bits.
6608:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (6) Parameter available only if ADC resolution is 12 bits.
6609:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (7) Parameter available only if ADC resolution is 16 or 14 bits.
6610:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6611:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6612:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Mul
6613:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6614:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DELAY, MultiTwoSamplingDelay);
6615:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6616:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6617:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6618:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC multimode delay between 2 sampling phases.
6619:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_GetMultiTwoSamplingDelay
6620:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6621:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6622:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
6623:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE_5
6624:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES_5
6625:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES_5
6626:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES_5 (1)
6627:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES_5_8_BITS
6628:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES_5 (2)
6629:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES_5_10_BITS
6630:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (3)
6631:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES_5 (4)
6632:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES_5_12_BITS
6633:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES_5 (5)
6634:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (6)
6635:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (7)
6636:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *
6637:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 16, 14, 12 or 10 bits.
6638:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 16, 14 or 12  bits.
6639:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 10 or 8 bits.
6640:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (4) Parameter available only if ADC resolution is 16 or 14 bits.
6641:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (5) Parameter available only if ADC resolution is 16 bits.
6642:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (6) Parameter available only if ADC resolution is 12 bits.
6643:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (7) Parameter available only if ADC resolution is 16 or 14 bits.
6644:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6645:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON)
6646:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6647:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DELAY));
ARM GAS  C:\usertemp\cca0PO6L.s 			page 206


6648:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6649:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6650:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6651:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
6652:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6653:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
6654:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
6655:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6656:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6657:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6658:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Put ADC instance in deep power down state.
6659:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
6660:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
6661:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
6662:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
6663:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6664:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6665:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be ADC disabled.
6666:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_EnableDeepPowerDown
6667:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6668:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6669:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6670:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableDeepPowerDown(ADC_TypeDef *ADCx)
6671:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6672:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6673:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6674:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6675:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6676:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6677:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_DEEPPWD);
6678:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6679:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6680:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6681:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable ADC deep power down mode.
6682:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
6683:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
6684:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
6685:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
6686:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6687:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6688:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be ADC disabled.
6689:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_DisableDeepPowerDown
6690:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6691:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6692:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6693:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableDeepPowerDown(ADC_TypeDef *ADCx)
6694:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6695:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6696:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6697:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6698:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_DEEPPWD | ADC_CR_BITS_PROPERTY_RS));
6699:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6700:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6701:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6702:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get the selected ADC instance deep power down state.
6703:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_IsDeepPowerDownEnabled
6704:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\usertemp\cca0PO6L.s 			page 207


6705:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: deep power down is disabled, 1: deep power down is enabled.
6706:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6707:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDeepPowerDownEnabled(ADC_TypeDef *ADCx)
6708:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6709:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_DEEPPWD) == (ADC_CR_DEEPPWD)) ? 1UL : 0UL);
6710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6711:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6712:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6713:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
6714:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, after ADC internal voltage regulator enable,
6715:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
6716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
6717:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet, parameter tADCVREG_STUP.
6718:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
6719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6720:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6721:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be ADC disabled.
6722:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
6723:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6724:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6725:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
6727:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6728:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6729:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6730:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6731:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6732:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6733:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_ADVREGEN);
6734:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6735:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6736:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6737:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
6738:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6739:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6740:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be ADC disabled.
6741:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
6742:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6743:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6744:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6745:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
6746:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6747:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
6748:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6749:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6750:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6751:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
6752:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
6753:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6754:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
6755:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6756:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(ADC_TypeDef *ADCx)
6757:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6758:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
6759:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6760:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6761:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
ARM GAS  C:\usertemp\cca0PO6L.s 			page 208


6762:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
6763:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, after ADC enable, a delay for
6764:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
6765:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC conversion start.
6766:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
6767:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6768:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6769:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6770:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6771:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6772:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
6773:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
6774:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6775:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6776:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6777:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
6778:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6779:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6780:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6781:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6782:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6783:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6784:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_ADEN);
6785:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6786:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6787:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6788:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
6789:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6790:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6791:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
6792:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         on either groups regular or injected.
6793:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
6794:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6795:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6796:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6797:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
6798:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6799:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6800:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6801:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6802:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6803:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6804:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_ADDIS);
6805:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6806:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6807:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6808:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
6809:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6810:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6811:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6812:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
6813:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6814:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
6815:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
6817:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
ARM GAS  C:\usertemp\cca0PO6L.s 			page 209


6819:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6820:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6821:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6822:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
6823:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
6824:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6825:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
6826:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6827:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(ADC_TypeDef *ADCx)
6828:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
6830:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6831:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6832:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6833:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
6834:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
6835:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
6836:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
6837:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
6838:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   Calibration duration:
6839:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Calibration of offset: 520 ADC clock cycles
6840:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - Calibration of linearity: 131072 ADC clock cycles
6841:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with differential mode available:
6842:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Calibration of offset is specific to each of
6843:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         single-ended and differential modes
6844:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (calibration run must be performed for each of these
6845:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
6846:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         requires their calibration).
6847:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         Calibration of linearity is common to both
6848:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         single-ended and differential modes
6849:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (calibration run can be performed only once).
6850:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6851:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6852:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be ADC disabled.
6853:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration\n
6854:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CR       ADCALDIF       LL_ADC_StartCalibration\n
6855:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CR       ADCALLIN       LL_ADC_StartCalibration
6856:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6857:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  CalibrationMode This parameter can be one of the following values:
6858:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_OFFSET
6859:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_CALIB_OFFSET_LINEARITY
6860:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
6861:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
6862:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
6863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6864:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6865:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx, uint32_t CalibrationMode, uint32_t 
6866:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6867:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6868:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6869:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6870:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6871:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_ADCALLIN | ADC_CR_ADCALDIF | ADC_CR_BITS_PROPERTY_RS,
6872:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_ADCAL | (CalibrationMode & ADC_CALIB_MODE_MASK) | (SingleDiff & ADC_SINGLEDIFF_
6873:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6874:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6875:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
ARM GAS  C:\usertemp\cca0PO6L.s 			page 210


6876:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC calibration state.
6877:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
6878:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6879:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
6880:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6881:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(ADC_TypeDef *ADCx)
6882:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6883:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
6884:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6885:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6886:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6887:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
6888:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6889:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6890:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
6891:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
6892:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6893:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6894:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6895:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
6896:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
6897:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
6898:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
6899:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           starts immediately.
6900:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
6901:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
6902:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           following the ADC start conversion command.
6903:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6904:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6905:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
6906:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
6907:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without ADC disable command on going.
6908:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
6909:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6910:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6911:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6912:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
6913:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6914:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6915:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6916:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6917:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6918:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6919:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_ADSTART);
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6921:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
6924:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6925:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
6926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
6927:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without ADC disable command on going.
6928:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
6929:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6930:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
6931:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6932:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
ARM GAS  C:\usertemp\cca0PO6L.s 			page 211


6933:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6934:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6935:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6936:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6937:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6938:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6939:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_ADSTP);
6940:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6941:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6942:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6943:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
6944:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
6945:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6946:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
6947:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
 1045              		.loc 2 6948 26 view .LVU286
 1046              	.LBB283:
6949:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 1047              		.loc 2 6950 3 view .LVU287
 1048              		.loc 2 6950 12 is_stmt 0 view .LVU288
 1049 00a4 9A68     		ldr	r2, [r3, #8]
 1050              		.loc 2 6950 74 view .LVU289
 1051 00a6 12F0040F 		tst	r2, #4
 1052 00aa 17D1     		bne	.L76
 1053              	.LVL70:
 1054              		.loc 2 6950 74 view .LVU290
 1055              	.LBE283:
 1056              	.LBE282:
2446:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1057              		.loc 1 2446 13 is_stmt 1 view .LVU291
 1058 00ac 5A68     		ldr	r2, [r3, #4]
 1059 00ae 22F00C02 		bic	r2, r2, #12
 1060 00b2 5A60     		str	r2, [r3, #4]
2449:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1061              		.loc 1 2449 13 view .LVU292
 1062 00b4 636D     		ldr	r3, [r4, #84]
 1063 00b6 23F48073 		bic	r3, r3, #256
 1064 00ba 6365     		str	r3, [r4, #84]
2451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 1065              		.loc 1 2451 13 view .LVU293
2451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 1066              		.loc 1 2451 22 is_stmt 0 view .LVU294
 1067 00bc 636D     		ldr	r3, [r4, #84]
2451:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 1068              		.loc 1 2451 16 view .LVU295
 1069 00be 13F4805F 		tst	r3, #4096
 1070 00c2 13D1     		bne	.L71
2453:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 1071              		.loc 1 2453 15 is_stmt 1 view .LVU296
 1072 00c4 636D     		ldr	r3, [r4, #84]
 1073 00c6 43F00103 		orr	r3, r3, #1
 1074 00ca 6365     		str	r3, [r4, #84]
 1075 00cc 0EE0     		b	.L71
 1076              	.LVL71:
 1077              	.L101:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 212


2370:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1078              		.loc 1 2370 35 is_stmt 0 discriminator 2 view .LVU297
 1079 00ce 6E4B     		ldr	r3, .L114+12
 1080 00d0 A2E7     		b	.L64
 1081              	.LVL72:
 1082              	.L108:
2416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1083              		.loc 1 2416 12 discriminator 2 view .LVU298
 1084 00d2 A2F58072 		sub	r2, r2, #256
 1085 00d6 D3E7     		b	.L72
 1086              	.L74:
2428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 1087              		.loc 1 2428 9 is_stmt 1 view .LVU299
 1088              	.LVL73:
2429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1089              		.loc 1 2429 9 view .LVU300
2429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1090              		.loc 1 2429 18 is_stmt 0 view .LVU301
 1091 00d8 D268     		ldr	r2, [r2, #12]
 1092              	.LVL74:
2429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 1093              		.loc 1 2429 18 view .LVU302
 1094 00da DCE7     		b	.L75
 1095              	.LVL75:
 1096              	.L76:
2459:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1097              		.loc 1 2459 13 is_stmt 1 view .LVU303
 1098 00dc 636D     		ldr	r3, [r4, #84]
 1099 00de 43F01003 		orr	r3, r3, #16
 1100 00e2 6365     		str	r3, [r4, #84]
2462:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 1101              		.loc 1 2462 13 view .LVU304
 1102 00e4 A36D     		ldr	r3, [r4, #88]
 1103 00e6 43F00103 		orr	r3, r3, #1
 1104 00ea A365     		str	r3, [r4, #88]
 1105              	.LVL76:
 1106              	.L71:
2476:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1107              		.loc 1 2476 5 view .LVU305
 1108 00ec 2046     		mov	r0, r4
 1109 00ee FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1110              	.LVL77:
2484:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 1111              		.loc 1 2484 5 view .LVU306
 1112 00f2 2368     		ldr	r3, [r4]
 1113 00f4 0C22     		movs	r2, #12
 1114 00f6 1A60     		str	r2, [r3]
 1115              	.L69:
2488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1116              		.loc 1 2488 3 view .LVU307
2488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1117              		.loc 1 2488 6 is_stmt 0 view .LVU308
 1118 00f8 15F0200F 		tst	r5, #32
 1119 00fc 02D0     		beq	.L78
2488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1120              		.loc 1 2488 53 discriminator 1 view .LVU309
 1121 00fe 16F0200F 		tst	r6, #32
ARM GAS  C:\usertemp\cca0PO6L.s 			page 213


 1122 0102 05D1     		bne	.L79
 1123              	.L78:
2488:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (((tmp_isr & ADC_FLAG_JEOS) == ADC_FLAG_JEOS) && ((tmp_ier & ADC_IT_JEOS) == ADC_IT_JEOS)))
 1124              		.loc 1 2488 98 discriminator 3 view .LVU310
 1125 0104 15F0400F 		tst	r5, #64
 1126 0108 63D0     		beq	.L80
2489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1127              		.loc 1 2489 53 view .LVU311
 1128 010a 16F0400F 		tst	r6, #64
 1129 010e 60D0     		beq	.L80
 1130              	.L79:
2492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1131              		.loc 1 2492 5 is_stmt 1 view .LVU312
2492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1132              		.loc 1 2492 14 is_stmt 0 view .LVU313
 1133 0110 636D     		ldr	r3, [r4, #84]
2492:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1134              		.loc 1 2492 8 view .LVU314
 1135 0112 13F0100F 		tst	r3, #16
 1136 0116 03D1     		bne	.L81
2495:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 1137              		.loc 1 2495 7 is_stmt 1 view .LVU315
 1138 0118 636D     		ldr	r3, [r4, #84]
 1139 011a 43F40053 		orr	r3, r3, #8192
 1140 011e 6365     		str	r3, [r4, #84]
 1141              	.L81:
2499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
 1142              		.loc 1 2499 5 view .LVU316
2499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
 1143              		.loc 1 2499 46 is_stmt 0 view .LVU317
 1144 0120 2368     		ldr	r3, [r4]
 1145              	.LVL78:
 1146              	.LBB284:
 1147              	.LBI284:
4648:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1148              		.loc 2 4648 26 is_stmt 1 view .LVU318
 1149              	.LBB285:
4650:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1150              		.loc 2 4650 3 view .LVU319
4650:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1151              		.loc 2 4650 12 is_stmt 0 view .LVU320
 1152 0122 DA6C     		ldr	r2, [r3, #76]
4650:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1153              		.loc 2 4650 105 view .LVU321
 1154 0124 12F4C07F 		tst	r2, #384
 1155 0128 19D1     		bne	.L103
4650:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1156              		.loc 2 4650 105 discriminator 1 view .LVU322
 1157 012a 0121     		movs	r1, #1
 1158              	.L82:
 1159              	.LVL79:
4650:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1160              		.loc 2 4650 105 discriminator 1 view .LVU323
 1161              	.LBE285:
 1162              	.LBE284:
2500:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     /* Get relevant register CFGR in ADC instance of ADC master or slave  */
 1163              		.loc 1 2500 5 is_stmt 1 view .LVU324
ARM GAS  C:\usertemp\cca0PO6L.s 			page 214


 1164              	.LBB287:
 1165              	.LBI287:
3861:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1166              		.loc 2 3861 26 view .LVU325
 1167              	.LBB288:
3863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1168              		.loc 2 3863 3 view .LVU326
3863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1169              		.loc 2 3863 12 is_stmt 0 view .LVU327
 1170 012c DA68     		ldr	r2, [r3, #12]
3863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1171              		.loc 2 3863 103 view .LVU328
 1172 012e 12F4406F 		tst	r2, #3072
 1173 0132 16D1     		bne	.L104
3863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1174              		.loc 2 3863 103 discriminator 1 view .LVU329
 1175 0134 0120     		movs	r0, #1
 1176              	.L83:
 1177              	.LVL80:
3863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1178              		.loc 2 3863 103 discriminator 1 view .LVU330
 1179              	.LBE288:
 1180              	.LBE287:
2504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1181              		.loc 1 2504 5 is_stmt 1 view .LVU331
2504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1182              		.loc 1 2504 10 is_stmt 0 view .LVU332
 1183 0136 524A     		ldr	r2, .L114+4
 1184 0138 9342     		cmp	r3, r2
 1185 013a 14D0     		beq	.L109
2504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1186              		.loc 1 2504 10 discriminator 1 view .LVU333
 1187 013c 1A46     		mov	r2, r3
 1188              	.L84:
2504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1189              		.loc 1 2504 8 discriminator 4 view .LVU334
 1190 013e 9342     		cmp	r3, r2
 1191 0140 14D0     		beq	.L85
2506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
 1192              		.loc 1 2506 34 view .LVU335
 1193 0142 062F     		cmp	r7, #6
 1194 0144 14BF     		ite	ne
 1195 0146 4FF0000C 		movne	ip, #0
 1196 014a 4FF0010C 		moveq	ip, #1
2506:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
 1197              		.loc 1 2506 9 view .LVU336
 1198 014e 6FB1     		cbz	r7, .L85
 1199 0150 BCF1000F 		cmp	ip, #0
 1200 0154 0AD1     		bne	.L85
2507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        )
 1201              		.loc 1 2507 9 view .LVU337
 1202 0156 072F     		cmp	r7, #7
 1203 0158 08D0     		beq	.L85
2514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 1204              		.loc 1 2514 7 is_stmt 1 view .LVU338
 1205              	.LVL81:
2515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
ARM GAS  C:\usertemp\cca0PO6L.s 			page 215


 1206              		.loc 1 2515 7 view .LVU339
2515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 1207              		.loc 1 2515 16 is_stmt 0 view .LVU340
 1208 015a D268     		ldr	r2, [r2, #12]
 1209              	.LVL82:
2515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 1210              		.loc 1 2515 16 view .LVU341
 1211 015c 07E0     		b	.L87
 1212              	.LVL83:
 1213              	.L103:
 1214              	.LBB290:
 1215              	.LBB286:
4650:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1216              		.loc 2 4650 105 discriminator 2 view .LVU342
 1217 015e 0021     		movs	r1, #0
 1218 0160 E4E7     		b	.L82
 1219              	.LVL84:
 1220              	.L104:
4650:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1221              		.loc 2 4650 105 discriminator 2 view .LVU343
 1222              	.LBE286:
 1223              	.LBE290:
 1224              	.LBB291:
 1225              	.LBB289:
3863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1226              		.loc 2 3863 103 discriminator 2 view .LVU344
 1227 0162 0020     		movs	r0, #0
 1228 0164 E7E7     		b	.L83
 1229              	.LVL85:
 1230              	.L109:
3863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1231              		.loc 2 3863 103 discriminator 2 view .LVU345
 1232              	.LBE289:
 1233              	.LBE291:
2504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 1234              		.loc 1 2504 10 discriminator 2 view .LVU346
 1235 0166 A2F58072 		sub	r2, r2, #256
 1236 016a E8E7     		b	.L84
 1237              	.L85:
2510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 1238              		.loc 1 2510 7 is_stmt 1 view .LVU347
2510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 1239              		.loc 1 2510 16 is_stmt 0 view .LVU348
 1240 016c DA68     		ldr	r2, [r3, #12]
 1241              	.LVL86:
 1242              	.L87:
2523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1243              		.loc 1 2523 5 is_stmt 1 view .LVU349
2523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1244              		.loc 1 2523 8 is_stmt 0 view .LVU350
 1245 016e 51B3     		cbz	r1, .L88
2525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           ((tmp_adc_reg_is_trigger_source_sw_start != 0UL) &&
 1246              		.loc 1 2525 7 is_stmt 1 view .LVU351
2525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           ((tmp_adc_reg_is_trigger_source_sw_start != 0UL) &&
 1247              		.loc 1 2525 10 is_stmt 0 view .LVU352
 1248 0170 12F0007F 		tst	r2, #33554432
 1249 0174 03D0     		beq	.L89
ARM GAS  C:\usertemp\cca0PO6L.s 			page 216


2525:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           ((tmp_adc_reg_is_trigger_source_sw_start != 0UL) &&
 1250              		.loc 1 2525 55 discriminator 1 view .LVU353
 1251 0176 30B3     		cbz	r0, .L88
2526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL)))
 1252              		.loc 1 2526 60 view .LVU354
 1253 0178 12F4005F 		tst	r2, #8192
 1254 017c 23D1     		bne	.L88
 1255              	.L89:
2530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1256              		.loc 1 2530 9 is_stmt 1 view .LVU355
2530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1257              		.loc 1 2530 13 is_stmt 0 view .LVU356
 1258 017e 1968     		ldr	r1, [r3]
 1259              	.LVL87:
2530:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1260              		.loc 1 2530 12 view .LVU357
 1261 0180 11F0400F 		tst	r1, #64
 1262 0184 1FD0     		beq	.L88
2538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 1263              		.loc 1 2538 11 is_stmt 1 view .LVU358
2538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 1264              		.loc 1 2538 14 is_stmt 0 view .LVU359
 1265 0186 12F4001F 		tst	r2, #2097152
 1266 018a 1CD1     		bne	.L88
2542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 1267              		.loc 1 2542 13 is_stmt 1 view .LVU360
 1268              	.LVL88:
 1269              	.LBB292:
 1270              	.LBI292:
6951:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6952:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6953:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6954:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
6955:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
6956:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6957:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
6958:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6959:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(ADC_TypeDef *ADCx)
6960:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6961:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP)) ? 1UL : 0UL);
6962:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6963:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6964:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6965:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6966:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
6967:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         all oversampling increased data width (for devices
6968:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         with feature oversampling).
6969:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData32
6970:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6971:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
6972:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6973:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(ADC_TypeDef *ADCx)
6974:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6975:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6976:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6977:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6978:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
ARM GAS  C:\usertemp\cca0PO6L.s 			page 217


6979:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6980:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC resolution 16 bits.
6981:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6982:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         can increase data width, function for extended range
6983:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6984:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData16
6985:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
6986:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFFFF
6987:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
6988:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData16(ADC_TypeDef *ADCx)
6989:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
6990:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6991:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
6992:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
6993:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
6994:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6995:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC resolution 14 bits.
6996:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6997:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         can increase data width, function for extended range
6998:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6999:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData14
7000:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7001:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3FF
7002:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7003:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData14(ADC_TypeDef *ADCx)
7004:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7005:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7006:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7007:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7008:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7009:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7010:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC resolution 12 bits.
7011:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         can increase data width, function for extended range
7013:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
7014:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData12
7015:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7016:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
7017:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7018:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(ADC_TypeDef *ADCx)
7019:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7020:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7022:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7023:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7024:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7025:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC resolution 10 bits.
7026:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7027:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         can increase data width, function for extended range
7028:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
7029:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData10
7030:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7031:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
7032:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7033:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(ADC_TypeDef *ADCx)
7034:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7035:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
ARM GAS  C:\usertemp\cca0PO6L.s 			page 218


7036:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7037:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7038:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7039:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
7040:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC resolution 8 bits.
7041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7042:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         can increase data width, function for extended range
7043:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
7044:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData8
7045:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7046:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
7047:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7048:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(ADC_TypeDef *ADCx)
7049:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7050:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
7051:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7053:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data of ADC master, ADC slave
7054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         or raw data with ADC master and slave concatenated.
7055:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   If raw data with ADC master and slave concatenated is retrieved,
7056:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         a macro is available to get the conversion data of
7057:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
7058:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
7059:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (however this macro is mainly intended for multimode
7060:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         transfer by DMA, because this function can do the same
7061:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         by getting multimode conversion data of ADC master or ADC slave
7062:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         separately).
7063:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CDR      RDATA_MST      LL_ADC_REG_ReadMultiConversionData32\n
7064:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_REG_ReadMultiConversionData32
7065:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7066:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7067:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ConversionData This parameter can be one of the following values:
7068:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
7069:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
7070:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER_SLAVE
7071:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
7072:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7073:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadMultiConversionData32(ADC_Common_TypeDef *ADCxy_COMMON, uin
7074:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7075:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CDR,
7076:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                              ConversionData)
7077:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                     >> (POSITION_VAL(ConversionData) & 0x1FUL)
7078:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    );
7079:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7080:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7081:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7082:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
7083:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7084:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7085:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Injected Operation on ADC hierarchical scope: group inj
7086:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
7087:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7088:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7089:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7090:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Start ADC group injected conversion.
7091:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
7092:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 219


7093:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
7094:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           starts immediately.
7095:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
7096:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
7097:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *           following the ADC start conversion command.
7098:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7099:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
7100:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group injected,
7101:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without conversion stop command on going on group injected,
7102:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without ADC disable command on going.
7103:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_StartConversion
7104:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7105:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7106:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7107:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StartConversion(ADC_TypeDef *ADCx)
7108:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7109:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7110:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7111:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7112:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
7113:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
7114:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_JADSTART);
7115:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7116:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7117:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7118:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Stop ADC group injected conversion.
7119:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
7120:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC state:
7121:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group injected,
7122:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         without ADC disable command on going.
7123:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_StopConversion
7124:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7125:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7126:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7127:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StopConversion(ADC_TypeDef *ADCx)
7128:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7129:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
7130:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
7131:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
7132:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
7133:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
7134:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_JADSTP);
7135:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7136:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7137:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7138:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion state.
7139:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_IsConversionOngoing
7140:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7141:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group injected.
7142:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7143:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsConversionOngoing(ADC_TypeDef *ADCx)
 1271              		.loc 2 7143 26 view .LVU361
 1272              	.LBB293:
7144:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
 1273              		.loc 2 7145 3 view .LVU362
 1274              		.loc 2 7145 12 is_stmt 0 view .LVU363
ARM GAS  C:\usertemp\cca0PO6L.s 			page 220


 1275 018c 9A68     		ldr	r2, [r3, #8]
 1276              	.LVL89:
 1277              		.loc 2 7145 76 view .LVU364
 1278 018e 12F0080F 		tst	r2, #8
 1279 0192 10D1     		bne	.L90
 1280              	.LVL90:
 1281              		.loc 2 7145 76 view .LVU365
 1282              	.LBE293:
 1283              	.LBE292:
2545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1284              		.loc 1 2545 15 is_stmt 1 view .LVU366
 1285 0194 5A68     		ldr	r2, [r3, #4]
 1286 0196 22F06002 		bic	r2, r2, #96
 1287 019a 5A60     		str	r2, [r3, #4]
2548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1288              		.loc 1 2548 15 view .LVU367
 1289 019c 636D     		ldr	r3, [r4, #84]
 1290 019e 23F48053 		bic	r3, r3, #4096
 1291 01a2 6365     		str	r3, [r4, #84]
2550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               {
 1292              		.loc 1 2550 15 view .LVU368
2550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               {
 1293              		.loc 1 2550 24 is_stmt 0 view .LVU369
 1294 01a4 636D     		ldr	r3, [r4, #84]
2550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               {
 1295              		.loc 1 2550 18 view .LVU370
 1296 01a6 13F4807F 		tst	r3, #256
 1297 01aa 0CD1     		bne	.L88
2552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               }
 1298              		.loc 1 2552 17 is_stmt 1 view .LVU371
 1299 01ac 636D     		ldr	r3, [r4, #84]
 1300 01ae 43F00103 		orr	r3, r3, #1
 1301 01b2 6365     		str	r3, [r4, #84]
 1302 01b4 07E0     		b	.L88
 1303              	.LVL91:
 1304              	.L90:
2558:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1305              		.loc 1 2558 15 view .LVU372
 1306 01b6 636D     		ldr	r3, [r4, #84]
 1307 01b8 43F01003 		orr	r3, r3, #16
 1308 01bc 6365     		str	r3, [r4, #84]
2561:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 1309              		.loc 1 2561 15 view .LVU373
 1310 01be A36D     		ldr	r3, [r4, #88]
 1311 01c0 43F00103 		orr	r3, r3, #1
 1312 01c4 A365     		str	r3, [r4, #88]
 1313              	.L88:
2577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1314              		.loc 1 2577 5 view .LVU374
 1315 01c6 2046     		mov	r0, r4
 1316              	.LVL92:
2577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1317              		.loc 1 2577 5 is_stmt 0 view .LVU375
 1318 01c8 FFF7FEFF 		bl	HAL_ADCEx_InjectedConvCpltCallback
 1319              	.LVL93:
2581:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 1320              		.loc 1 2581 5 is_stmt 1 view .LVU376
ARM GAS  C:\usertemp\cca0PO6L.s 			page 221


 1321 01cc 2368     		ldr	r3, [r4]
 1322 01ce 6022     		movs	r2, #96
 1323 01d0 1A60     		str	r2, [r3]
 1324              	.LVL94:
 1325              	.L80:
2585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1326              		.loc 1 2585 3 view .LVU377
2585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1327              		.loc 1 2585 6 is_stmt 0 view .LVU378
 1328 01d2 15F0800F 		tst	r5, #128
 1329 01d6 02D0     		beq	.L92
2585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1330              		.loc 1 2585 52 discriminator 1 view .LVU379
 1331 01d8 16F0800F 		tst	r6, #128
 1332 01dc 36D1     		bne	.L110
 1333              	.L92:
2602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1334              		.loc 1 2602 3 is_stmt 1 view .LVU380
2602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1335              		.loc 1 2602 6 is_stmt 0 view .LVU381
 1336 01de 15F4807F 		tst	r5, #256
 1337 01e2 02D0     		beq	.L93
2602:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1338              		.loc 1 2602 52 discriminator 1 view .LVU382
 1339 01e4 16F4807F 		tst	r6, #256
 1340 01e8 3BD1     		bne	.L111
 1341              	.L93:
2619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1342              		.loc 1 2619 3 is_stmt 1 view .LVU383
2619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1343              		.loc 1 2619 6 is_stmt 0 view .LVU384
 1344 01ea 15F4007F 		tst	r5, #512
 1345 01ee 02D0     		beq	.L94
2619:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1346              		.loc 1 2619 52 discriminator 1 view .LVU385
 1347 01f0 16F4007F 		tst	r6, #512
 1348 01f4 4AD1     		bne	.L112
 1349              	.L94:
2636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1350              		.loc 1 2636 3 is_stmt 1 view .LVU386
2636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1351              		.loc 1 2636 6 is_stmt 0 view .LVU387
 1352 01f6 15F0100F 		tst	r5, #16
 1353 01fa 20D0     		beq	.L95
2636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1354              		.loc 1 2636 50 discriminator 1 view .LVU388
 1355 01fc 16F0100F 		tst	r6, #16
 1356 0200 1DD0     		beq	.L95
2644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1357              		.loc 1 2644 5 is_stmt 1 view .LVU389
2644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1358              		.loc 1 2644 19 is_stmt 0 view .LVU390
 1359 0202 236B     		ldr	r3, [r4, #48]
2644:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1360              		.loc 1 2644 8 view .LVU391
 1361 0204 6BB1     		cbz	r3, .L96
2651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
ARM GAS  C:\usertemp\cca0PO6L.s 			page 222


 1362              		.loc 1 2651 7 is_stmt 1 view .LVU392
2651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1363              		.loc 1 2651 10 is_stmt 0 view .LVU393
 1364 0206 002F     		cmp	r7, #0
 1365 0208 4ED0     		beq	.L97
2655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1366              		.loc 1 2655 9 is_stmt 1 view .LVU394
2655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1367              		.loc 1 2655 40 is_stmt 0 view .LVU395
 1368 020a 2368     		ldr	r3, [r4]
2655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1369              		.loc 1 2655 13 view .LVU396
 1370 020c 1B49     		ldr	r1, .L114
 1371 020e 1C4A     		ldr	r2, .L114+4
 1372 0210 9342     		cmp	r3, r2
 1373 0212 18BF     		it	ne
 1374 0214 8B42     		cmpne	r3, r1
 1375 0216 45D1     		bne	.L106
2655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1376              		.loc 1 2655 13 discriminator 1 view .LVU397
 1377 0218 1A4B     		ldr	r3, .L114+8
 1378              	.L98:
 1379              	.LVL95:
 1380              	.LBB294:
 1381              	.LBI294:
6567:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1382              		.loc 2 6567 26 is_stmt 1 view .LVU398
 1383              	.LBB295:
6569:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1384              		.loc 2 6569 3 view .LVU399
6569:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1385              		.loc 2 6569 21 is_stmt 0 view .LVU400
 1386 021a 9B68     		ldr	r3, [r3, #8]
 1387              	.LVL96:
6569:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1388              		.loc 2 6569 21 view .LVU401
 1389              	.LBE295:
 1390              	.LBE294:
2655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1391              		.loc 1 2655 12 discriminator 1 view .LVU402
 1392 021c 13F4404F 		tst	r3, #49152
 1393 0220 0AD0     		beq	.L99
 1394              	.L96:
 1395              	.LVL97:
2673:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1396              		.loc 1 2673 7 is_stmt 1 view .LVU403
 1397 0222 636D     		ldr	r3, [r4, #84]
 1398 0224 43F48063 		orr	r3, r3, #1024
 1399 0228 6365     		str	r3, [r4, #84]
2676:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1400              		.loc 1 2676 7 view .LVU404
 1401 022a A36D     		ldr	r3, [r4, #88]
 1402 022c 43F00203 		orr	r3, r3, #2
 1403 0230 A365     		str	r3, [r4, #88]
2686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1404              		.loc 1 2686 7 view .LVU405
 1405 0232 2046     		mov	r0, r4
ARM GAS  C:\usertemp\cca0PO6L.s 			page 223


 1406 0234 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1407              	.LVL98:
 1408              	.L99:
2691:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 1409              		.loc 1 2691 5 view .LVU406
 1410 0238 2368     		ldr	r3, [r4]
 1411 023a 1022     		movs	r2, #16
 1412 023c 1A60     		str	r2, [r3]
 1413              	.L95:
2695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1414              		.loc 1 2695 3 view .LVU407
2695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1415              		.loc 1 2695 6 is_stmt 0 view .LVU408
 1416 023e 15F4806F 		tst	r5, #1024
 1417 0242 02D0     		beq	.L63
2695:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1418              		.loc 1 2695 54 discriminator 1 view .LVU409
 1419 0244 16F4806F 		tst	r6, #1024
 1420 0248 34D1     		bne	.L113
 1421              	.L63:
2714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1422              		.loc 1 2714 1 view .LVU410
 1423 024a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1424              	.LVL99:
 1425              	.L110:
2588:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1426              		.loc 1 2588 5 is_stmt 1 view .LVU411
 1427 024c 636D     		ldr	r3, [r4, #84]
 1428 024e 43F48033 		orr	r3, r3, #65536
 1429 0252 6365     		str	r3, [r4, #84]
2594:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1430              		.loc 1 2594 5 view .LVU412
 1431 0254 2046     		mov	r0, r4
 1432 0256 FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
 1433              	.LVL100:
2598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 1434              		.loc 1 2598 5 view .LVU413
 1435 025a 2368     		ldr	r3, [r4]
 1436 025c 8022     		movs	r2, #128
 1437 025e 1A60     		str	r2, [r3]
 1438 0260 BDE7     		b	.L92
 1439              	.L111:
2605:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1440              		.loc 1 2605 5 view .LVU414
 1441 0262 636D     		ldr	r3, [r4, #84]
 1442 0264 43F40033 		orr	r3, r3, #131072
 1443 0268 6365     		str	r3, [r4, #84]
2611:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1444              		.loc 1 2611 5 view .LVU415
 1445 026a 2046     		mov	r0, r4
 1446 026c FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow2Callback
 1447              	.LVL101:
2615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 1448              		.loc 1 2615 5 view .LVU416
 1449 0270 2368     		ldr	r3, [r4]
 1450 0272 4FF48072 		mov	r2, #256
 1451 0276 1A60     		str	r2, [r3]
ARM GAS  C:\usertemp\cca0PO6L.s 			page 224


 1452 0278 B7E7     		b	.L93
 1453              	.L115:
 1454 027a 00BF     		.align	2
 1455              	.L114:
 1456 027c 00200240 		.word	1073881088
 1457 0280 00210240 		.word	1073881344
 1458 0284 00230240 		.word	1073881856
 1459 0288 00630258 		.word	1476551424
 1460              	.L112:
2622:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1461              		.loc 1 2622 5 view .LVU417
 1462 028c 636D     		ldr	r3, [r4, #84]
 1463 028e 43F48023 		orr	r3, r3, #262144
 1464 0292 6365     		str	r3, [r4, #84]
2628:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1465              		.loc 1 2628 5 view .LVU418
 1466 0294 2046     		mov	r0, r4
 1467 0296 FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow3Callback
 1468              	.LVL102:
2632:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 1469              		.loc 1 2632 5 view .LVU419
 1470 029a 2368     		ldr	r3, [r4]
 1471 029c 4FF40072 		mov	r2, #512
 1472 02a0 1A60     		str	r2, [r3]
 1473 02a2 A8E7     		b	.L94
 1474              	.L106:
2655:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1475              		.loc 1 2655 13 is_stmt 0 discriminator 2 view .LVU420
 1476 02a4 0B4B     		ldr	r3, .L116
 1477 02a6 B8E7     		b	.L98
 1478              	.L97:
2663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1479              		.loc 1 2663 9 is_stmt 1 view .LVU421
2663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1480              		.loc 1 2663 18 is_stmt 0 view .LVU422
 1481 02a8 2368     		ldr	r3, [r4]
2663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1482              		.loc 1 2663 28 view .LVU423
 1483 02aa DB68     		ldr	r3, [r3, #12]
2663:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1484              		.loc 1 2663 12 view .LVU424
 1485 02ac 13F0030F 		tst	r3, #3
 1486 02b0 C2D0     		beq	.L99
 1487 02b2 B6E7     		b	.L96
 1488              	.LVL103:
 1489              	.L113:
2698:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1490              		.loc 1 2698 5 is_stmt 1 view .LVU425
 1491 02b4 636D     		ldr	r3, [r4, #84]
 1492 02b6 43F48043 		orr	r3, r3, #16384
 1493 02ba 6365     		str	r3, [r4, #84]
2701:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1494              		.loc 1 2701 5 view .LVU426
 1495 02bc A36D     		ldr	r3, [r4, #88]
 1496 02be 43F00803 		orr	r3, r3, #8
 1497 02c2 A365     		str	r3, [r4, #88]
2704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 225


 1498              		.loc 1 2704 5 view .LVU427
 1499 02c4 2368     		ldr	r3, [r4]
 1500 02c6 4FF48062 		mov	r2, #1024
 1501 02ca 1A60     		str	r2, [r3]
2710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1502              		.loc 1 2710 5 view .LVU428
 1503 02cc 2046     		mov	r0, r4
 1504 02ce FFF7FEFF 		bl	HAL_ADCEx_InjectedQueueOverflowCallback
 1505              	.LVL104:
2714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1506              		.loc 1 2714 1 is_stmt 0 view .LVU429
 1507 02d2 BAE7     		b	.L63
 1508              	.L117:
 1509              		.align	2
 1510              	.L116:
 1511 02d4 00630258 		.word	1476551424
 1512              		.cfi_endproc
 1513              	.LFE346:
 1515              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 1516              		.align	1
 1517              		.global	ADC_DMAConvCplt
 1518              		.syntax unified
 1519              		.thumb
 1520              		.thumb_func
 1522              	ADC_DMAConvCplt:
 1523              	.LVL105:
 1524              	.LFB358:
3815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1525              		.loc 1 3815 1 is_stmt 1 view -0
 1526              		.cfi_startproc
 1527              		@ args = 0, pretend = 0, frame = 0
 1528              		@ frame_needed = 0, uses_anonymous_args = 0
3815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1529              		.loc 1 3815 1 is_stmt 0 view .LVU431
 1530 0000 08B5     		push	{r3, lr}
 1531              	.LCFI10:
 1532              		.cfi_def_cfa_offset 8
 1533              		.cfi_offset 3, -8
 1534              		.cfi_offset 14, -4
 1535 0002 0346     		mov	r3, r0
3817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1536              		.loc 1 3817 3 is_stmt 1 view .LVU432
3817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1537              		.loc 1 3817 22 is_stmt 0 view .LVU433
 1538 0004 806B     		ldr	r0, [r0, #56]
 1539              	.LVL106:
3820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1540              		.loc 1 3820 3 is_stmt 1 view .LVU434
3820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1541              		.loc 1 3820 12 is_stmt 0 view .LVU435
 1542 0006 426D     		ldr	r2, [r0, #84]
3820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1543              		.loc 1 3820 6 view .LVU436
 1544 0008 12F0500F 		tst	r2, #80
 1545 000c 30D1     		bne	.L119
3823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1546              		.loc 1 3823 5 is_stmt 1 view .LVU437
ARM GAS  C:\usertemp\cca0PO6L.s 			page 226


 1547 000e 436D     		ldr	r3, [r0, #84]
 1548              	.LVL107:
3823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1549              		.loc 1 3823 5 is_stmt 0 view .LVU438
 1550 0010 43F40073 		orr	r3, r3, #512
 1551 0014 4365     		str	r3, [r0, #84]
3829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1552              		.loc 1 3829 5 is_stmt 1 view .LVU439
3829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1553              		.loc 1 3829 14 is_stmt 0 view .LVU440
 1554 0016 0368     		ldr	r3, [r0]
3829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1555              		.loc 1 3829 24 view .LVU441
 1556 0018 1A68     		ldr	r2, [r3]
3829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1557              		.loc 1 3829 8 view .LVU442
 1558 001a 12F0080F 		tst	r2, #8
 1559 001e 14D0     		beq	.L120
3832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1560              		.loc 1 3832 7 is_stmt 1 view .LVU443
 1561              	.LVL108:
 1562              	.LBB296:
 1563              	.LBI296:
3861:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1564              		.loc 2 3861 26 view .LVU444
 1565              	.LBB297:
3863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1566              		.loc 2 3863 3 view .LVU445
3863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1567              		.loc 2 3863 12 is_stmt 0 view .LVU446
 1568 0020 DA68     		ldr	r2, [r3, #12]
3863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1569              		.loc 2 3863 103 view .LVU447
 1570 0022 12F4406F 		tst	r2, #3072
 1571 0026 20D1     		bne	.L121
 1572              	.LVL109:
3863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1573              		.loc 2 3863 103 view .LVU448
 1574              	.LBE297:
 1575              	.LBE296:
3835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1576              		.loc 1 3835 9 is_stmt 1 view .LVU449
3835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1577              		.loc 1 3835 13 is_stmt 0 view .LVU450
 1578 0028 DB68     		ldr	r3, [r3, #12]
3835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1579              		.loc 1 3835 12 view .LVU451
 1580 002a 13F4005F 		tst	r3, #8192
 1581 002e 1CD1     		bne	.L121
3838:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 1582              		.loc 1 3838 11 is_stmt 1 view .LVU452
 1583 0030 436D     		ldr	r3, [r0, #84]
 1584 0032 23F48073 		bic	r3, r3, #256
 1585 0036 4365     		str	r3, [r0, #84]
3839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 1586              		.loc 1 3839 11 view .LVU453
3839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
ARM GAS  C:\usertemp\cca0PO6L.s 			page 227


 1587              		.loc 1 3839 20 is_stmt 0 view .LVU454
 1588 0038 436D     		ldr	r3, [r0, #84]
3839:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 1589              		.loc 1 3839 14 view .LVU455
 1590 003a 13F4805F 		tst	r3, #4096
 1591 003e 14D1     		bne	.L121
3841:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 1592              		.loc 1 3841 13 is_stmt 1 view .LVU456
 1593 0040 436D     		ldr	r3, [r0, #84]
 1594 0042 43F00103 		orr	r3, r3, #1
 1595 0046 4365     		str	r3, [r0, #84]
 1596 0048 0FE0     		b	.L121
 1597              	.L120:
3850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1598              		.loc 1 3850 7 view .LVU457
3850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1599              		.loc 1 3850 11 is_stmt 0 view .LVU458
 1600 004a DB68     		ldr	r3, [r3, #12]
3850:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1601              		.loc 1 3850 10 view .LVU459
 1602 004c 13F0030F 		tst	r3, #3
 1603 0050 0BD1     		bne	.L121
3853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if ((hadc->State & HAL_ADC_STATE_INJ_BUSY) == 0UL)
 1604              		.loc 1 3853 9 is_stmt 1 view .LVU460
 1605 0052 436D     		ldr	r3, [r0, #84]
 1606 0054 23F48073 		bic	r3, r3, #256
 1607 0058 4365     		str	r3, [r0, #84]
3854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1608              		.loc 1 3854 9 view .LVU461
3854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1609              		.loc 1 3854 18 is_stmt 0 view .LVU462
 1610 005a 436D     		ldr	r3, [r0, #84]
3854:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 1611              		.loc 1 3854 12 view .LVU463
 1612 005c 13F4805F 		tst	r3, #4096
 1613 0060 03D1     		bne	.L121
3856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 1614              		.loc 1 3856 11 is_stmt 1 view .LVU464
 1615 0062 436D     		ldr	r3, [r0, #84]
 1616 0064 43F00103 		orr	r3, r3, #1
 1617 0068 4365     		str	r3, [r0, #84]
 1618              	.L121:
3865:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1619              		.loc 1 3865 5 view .LVU465
 1620 006a FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1621              	.LVL110:
 1622              	.L118:
3885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1623              		.loc 1 3885 1 is_stmt 0 view .LVU466
 1624 006e 08BD     		pop	{r3, pc}
 1625              	.LVL111:
 1626              	.L119:
3870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1627              		.loc 1 3870 5 is_stmt 1 view .LVU467
3870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1628              		.loc 1 3870 14 is_stmt 0 view .LVU468
 1629 0070 426D     		ldr	r2, [r0, #84]
ARM GAS  C:\usertemp\cca0PO6L.s 			page 228


3870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1630              		.loc 1 3870 8 view .LVU469
 1631 0072 12F0100F 		tst	r2, #16
 1632 0076 04D1     		bne	.L125
3882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 1633              		.loc 1 3882 7 is_stmt 1 view .LVU470
3882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 1634              		.loc 1 3882 11 is_stmt 0 view .LVU471
 1635 0078 C26C     		ldr	r2, [r0, #76]
3882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 1636              		.loc 1 3882 23 view .LVU472
 1637 007a D26C     		ldr	r2, [r2, #76]
3882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 1638              		.loc 1 3882 7 view .LVU473
 1639 007c 1846     		mov	r0, r3
 1640              	.LVL112:
3882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 1641              		.loc 1 3882 7 view .LVU474
 1642 007e 9047     		blx	r2
 1643              	.LVL113:
3885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1644              		.loc 1 3885 1 view .LVU475
 1645 0080 F5E7     		b	.L118
 1646              	.LVL114:
 1647              	.L125:
3876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1648              		.loc 1 3876 7 is_stmt 1 view .LVU476
 1649 0082 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1650              	.LVL115:
3876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1651              		.loc 1 3876 7 is_stmt 0 view .LVU477
 1652 0086 F2E7     		b	.L118
 1653              		.cfi_endproc
 1654              	.LFE358:
 1656              		.section	.text.ADC_DMAError,"ax",%progbits
 1657              		.align	1
 1658              		.global	ADC_DMAError
 1659              		.syntax unified
 1660              		.thumb
 1661              		.thumb_func
 1663              	ADC_DMAError:
 1664              	.LVL116:
 1665              	.LFB360:
3904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3905:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
3906:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  DMA error callback.
3907:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
3908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None
3909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
3910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** void ADC_DMAError(DMA_HandleTypeDef *hdma)
3911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
 1666              		.loc 1 3911 1 is_stmt 1 view -0
 1667              		.cfi_startproc
 1668              		@ args = 0, pretend = 0, frame = 0
 1669              		@ frame_needed = 0, uses_anonymous_args = 0
 1670              		.loc 1 3911 1 is_stmt 0 view .LVU479
 1671 0000 08B5     		push	{r3, lr}
ARM GAS  C:\usertemp\cca0PO6L.s 			page 229


 1672              	.LCFI11:
 1673              		.cfi_def_cfa_offset 8
 1674              		.cfi_offset 3, -8
 1675              		.cfi_offset 14, -4
3912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
3913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 1676              		.loc 1 3913 3 is_stmt 1 view .LVU480
 1677              		.loc 1 3913 22 is_stmt 0 view .LVU481
 1678 0002 806B     		ldr	r0, [r0, #56]
 1679              	.LVL117:
3914:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Set ADC state */
3916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 1680              		.loc 1 3916 3 is_stmt 1 view .LVU482
 1681 0004 436D     		ldr	r3, [r0, #84]
 1682 0006 43F04003 		orr	r3, r3, #64
 1683 000a 4365     		str	r3, [r0, #84]
3917:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Set ADC error code to DMA error */
3919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
 1684              		.loc 1 3919 3 view .LVU483
 1685 000c 836D     		ldr	r3, [r0, #88]
 1686 000e 43F00403 		orr	r3, r3, #4
 1687 0012 8365     		str	r3, [r0, #88]
3920:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3921:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Error callback */
3922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
3923:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   hadc->ErrorCallback(hadc);
3924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
3925:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc);
 1688              		.loc 1 3925 3 view .LVU484
 1689 0014 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1690              	.LVL118:
3926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
3927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 1691              		.loc 1 3927 1 is_stmt 0 view .LVU485
 1692 0018 08BD     		pop	{r3, pc}
 1693              		.cfi_endproc
 1694              	.LFE360:
 1696              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 1697              		.align	1
 1698              		.global	HAL_ADC_ConfigChannel
 1699              		.syntax unified
 1700              		.thumb
 1701              		.thumb_func
 1703              	HAL_ADC_ConfigChannel:
 1704              	.LVL119:
 1705              	.LFB351:
2820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1706              		.loc 1 2820 1 is_stmt 1 view -0
 1707              		.cfi_startproc
 1708              		@ args = 0, pretend = 0, frame = 8
 1709              		@ frame_needed = 0, uses_anonymous_args = 0
2820:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1710              		.loc 1 2820 1 is_stmt 0 view .LVU487
 1711 0000 70B5     		push	{r4, r5, r6, lr}
 1712              	.LCFI12:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 230


 1713              		.cfi_def_cfa_offset 16
 1714              		.cfi_offset 4, -16
 1715              		.cfi_offset 5, -12
 1716              		.cfi_offset 6, -8
 1717              		.cfi_offset 14, -4
 1718 0002 82B0     		sub	sp, sp, #8
 1719              	.LCFI13:
 1720              		.cfi_def_cfa_offset 24
2821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 1721              		.loc 1 2821 3 is_stmt 1 view .LVU488
 1722              	.LVL120:
2822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 1723              		.loc 1 2822 3 view .LVU489
2823:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0;
 1724              		.loc 1 2823 3 view .LVU490
2824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 1725              		.loc 1 2824 3 view .LVU491
2824:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 1726              		.loc 1 2824 17 is_stmt 0 view .LVU492
 1727 0004 0023     		movs	r3, #0
 1728 0006 0193     		str	r3, [sp, #4]
2825:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 1729              		.loc 1 2825 3 is_stmt 1 view .LVU493
2826:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1730              		.loc 1 2826 3 view .LVU494
2829:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
 1731              		.loc 1 2829 3 view .LVU495
2830:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));
 1732              		.loc 1 2830 3 view .LVU496
2831:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfig->SingleDiff));
 1733              		.loc 1 2831 3 view .LVU497
2832:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfig->OffsetNumber));
 1734              		.loc 1 2832 3 view .LVU498
2833:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check offset range according to oversampling setting */
 1735              		.loc 1 2833 3 view .LVU499
2835:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1736              		.loc 1 2835 3 view .LVU500
2837:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 1737              		.loc 1 2837 5 view .LVU501
2849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 1738              		.loc 1 2849 7 view .LVU502
2855:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1739              		.loc 1 2855 3 view .LVU503
2858:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1740              		.loc 1 2858 3 view .LVU504
2864:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1741              		.loc 1 2864 5 view .LVU505
2866:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 1742              		.loc 1 2866 7 view .LVU506
2868:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1743              		.loc 1 2868 5 view .LVU507
2870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 1744              		.loc 1 2870 7 view .LVU508
2874:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1745              		.loc 1 2874 5 view .LVU509
2876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 1746              		.loc 1 2876 7 view .LVU510
ARM GAS  C:\usertemp\cca0PO6L.s 			page 231


2882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1747              		.loc 1 2882 3 view .LVU511
2882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1748              		.loc 1 2882 3 view .LVU512
 1749 0008 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 1750 000c 012B     		cmp	r3, #1
 1751 000e 00F02482 		beq	.L181
 1752 0012 0446     		mov	r4, r0
 1753 0014 0D46     		mov	r5, r1
2882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1754              		.loc 1 2882 3 discriminator 2 view .LVU513
 1755 0016 0123     		movs	r3, #1
 1756 0018 80F85030 		strb	r3, [r0, #80]
2882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1757              		.loc 1 2882 3 discriminator 2 view .LVU514
2889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1758              		.loc 1 2889 3 view .LVU515
2889:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 1759              		.loc 1 2889 7 is_stmt 0 view .LVU516
 1760 001c 0268     		ldr	r2, [r0]
 1761              	.LVL121:
 1762              	.LBB298:
 1763              	.LBI298:
6948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1764              		.loc 2 6948 26 is_stmt 1 view .LVU517
 1765              	.LBB299:
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1766              		.loc 2 6950 3 view .LVU518
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1767              		.loc 2 6950 12 is_stmt 0 view .LVU519
 1768 001e 9368     		ldr	r3, [r2, #8]
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1769              		.loc 2 6950 74 view .LVU520
 1770 0020 13F0040F 		tst	r3, #4
 1771 0024 09D0     		beq	.L130
 1772              	.LVL122:
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1773              		.loc 2 6950 74 view .LVU521
 1774              	.LBE299:
 1775              	.LBE298:
3105:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1776              		.loc 1 3105 5 is_stmt 1 view .LVU522
 1777 0026 436D     		ldr	r3, [r0, #84]
 1778 0028 43F02003 		orr	r3, r3, #32
 1779 002c 4365     		str	r3, [r0, #84]
3107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 1780              		.loc 1 3107 5 view .LVU523
 1781              	.LVL123:
3107:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 1782              		.loc 1 3107 20 is_stmt 0 view .LVU524
 1783 002e 0120     		movs	r0, #1
 1784              	.LVL124:
 1785              	.L131:
3111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1786              		.loc 1 3111 3 is_stmt 1 view .LVU525
3111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1787              		.loc 1 3111 3 view .LVU526
ARM GAS  C:\usertemp\cca0PO6L.s 			page 232


 1788 0030 0023     		movs	r3, #0
 1789 0032 84F85030 		strb	r3, [r4, #80]
3111:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1790              		.loc 1 3111 3 view .LVU527
3114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 1791              		.loc 1 3114 3 view .LVU528
 1792              	.LVL125:
 1793              	.L129:
3115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1794              		.loc 1 3115 1 is_stmt 0 view .LVU529
 1795 0036 02B0     		add	sp, sp, #8
 1796              	.LCFI14:
 1797              		.cfi_remember_state
 1798              		.cfi_def_cfa_offset 16
 1799              		@ sp needed
 1800 0038 70BD     		pop	{r4, r5, r6, pc}
 1801              	.LVL126:
 1802              	.L130:
 1803              	.LCFI15:
 1804              		.cfi_restore_state
2900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
 1805              		.loc 1 2900 5 is_stmt 1 view .LVU530
2900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
 1806              		.loc 1 2900 39 is_stmt 0 view .LVU531
 1807 003a 0B68     		ldr	r3, [r1]
 1808 003c C3F31301 		ubfx	r1, r3, #0, #20
 1809              	.LVL127:
2900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
 1810              		.loc 1 2900 35 view .LVU532
 1811 0040 0029     		cmp	r1, #0
 1812 0042 3CD1     		bne	.L132
2900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
 1813              		.loc 1 2900 39 discriminator 1 view .LVU533
 1814 0044 C3F38463 		ubfx	r3, r3, #26, #5
2900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
 1815              		.loc 1 2900 35 discriminator 1 view .LVU534
 1816 0048 0121     		movs	r1, #1
 1817 004a 9940     		lsls	r1, r1, r3
 1818              	.L133:
2900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
 1819              		.loc 1 2900 19 discriminator 4 view .LVU535
 1820 004c D369     		ldr	r3, [r2, #28]
2900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
 1821              		.loc 1 2900 27 discriminator 4 view .LVU536
 1822 004e 0B43     		orrs	r3, r3, r1
 1823 0050 D361     		str	r3, [r2, #28]
2904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1824              		.loc 1 2904 5 is_stmt 1 view .LVU537
 1825 0052 2A68     		ldr	r2, [r5]
 1826 0054 6968     		ldr	r1, [r5, #4]
 1827 0056 2068     		ldr	r0, [r4]
 1828              	.LVL128:
2904:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1829              		.loc 1 2904 5 is_stmt 0 view .LVU538
 1830 0058 FFF7FEFF 		bl	LL_ADC_REG_SetSequencerRanks
 1831              	.LVL129:
2911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
ARM GAS  C:\usertemp\cca0PO6L.s 			page 233


 1832              		.loc 1 2911 5 is_stmt 1 view .LVU539
2911:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 1833              		.loc 1 2911 46 is_stmt 0 view .LVU540
 1834 005c 2068     		ldr	r0, [r4]
 1835              	.LVL130:
 1836              	.LBB300:
 1837              	.LBI300:
6948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1838              		.loc 2 6948 26 is_stmt 1 view .LVU541
 1839              	.LBB301:
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1840              		.loc 2 6950 3 view .LVU542
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1841              		.loc 2 6950 12 is_stmt 0 view .LVU543
 1842 005e 8368     		ldr	r3, [r0, #8]
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1843              		.loc 2 6950 74 view .LVU544
 1844 0060 13F00403 		ands	r3, r3, #4
 1845 0064 00D0     		beq	.L135
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1846              		.loc 2 6950 74 discriminator 1 view .LVU545
 1847 0066 0123     		movs	r3, #1
 1848              	.L135:
 1849              	.LVL131:
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1850              		.loc 2 6950 74 discriminator 1 view .LVU546
 1851              	.LBE301:
 1852              	.LBE300:
2912:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 1853              		.loc 1 2912 5 is_stmt 1 view .LVU547
 1854              	.LBB302:
 1855              	.LBI302:
7143:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1856              		.loc 2 7143 26 view .LVU548
 1857              	.LBB303:
 1858              		.loc 2 7145 3 view .LVU549
 1859              		.loc 2 7145 12 is_stmt 0 view .LVU550
 1860 0068 8268     		ldr	r2, [r0, #8]
 1861              		.loc 2 7145 76 view .LVU551
 1862 006a 12F00802 		ands	r2, r2, #8
 1863 006e 00D0     		beq	.L136
 1864              		.loc 2 7145 76 discriminator 1 view .LVU552
 1865 0070 0122     		movs	r2, #1
 1866              	.L136:
 1867              	.LVL132:
 1868              		.loc 2 7145 76 discriminator 1 view .LVU553
 1869              	.LBE303:
 1870              	.LBE302:
2913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 1871              		.loc 1 2913 5 is_stmt 1 view .LVU554
2913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 1872              		.loc 1 2913 8 is_stmt 0 view .LVU555
 1873 0072 52EA0306 		orrs	r6, r2, r3
 1874 0076 2ED0     		beq	.L200
 1875              	.LVL133:
 1876              	.L137:
3015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
ARM GAS  C:\usertemp\cca0PO6L.s 			page 234


 1877              		.loc 1 3015 5 is_stmt 1 view .LVU556
3015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 1878              		.loc 1 3015 9 is_stmt 0 view .LVU557
 1879 0078 2268     		ldr	r2, [r4]
 1880              	.LVL134:
 1881              	.LBB304:
 1882              	.LBI304:
6816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1883              		.loc 2 6816 26 is_stmt 1 view .LVU558
 1884              	.LBB305:
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1885              		.loc 2 6818 3 view .LVU559
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1886              		.loc 2 6818 12 is_stmt 0 view .LVU560
 1887 007a 9368     		ldr	r3, [r2, #8]
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1888              		.loc 2 6818 68 view .LVU561
 1889 007c 13F0010F 		tst	r3, #1
 1890 0080 40F0E781 		bne	.L184
 1891              	.LVL135:
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 1892              		.loc 2 6818 68 view .LVU562
 1893              	.LBE305:
 1894              	.LBE304:
3018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1895              		.loc 1 3018 7 is_stmt 1 view .LVU563
 1896 0084 2B68     		ldr	r3, [r5]
 1897 0086 E868     		ldr	r0, [r5, #12]
 1898              	.LVL136:
 1899              	.LBB306:
 1900              	.LBI306:
5488:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 1901              		.loc 2 5488 22 view .LVU564
 1902              	.LBB307:
5510:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 1903              		.loc 2 5510 3 view .LVU565
 1904 0088 D2F8C010 		ldr	r1, [r2, #192]
 1905 008c C3F31306 		ubfx	r6, r3, #0, #20
 1906 0090 21EA0601 		bic	r1, r1, r6
 1907 0094 00F01806 		and	r6, r0, #24
 1908 0098 AE48     		ldr	r0, .L215
 1909              	.LVL137:
5510:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 1910              		.loc 2 5510 3 is_stmt 0 view .LVU566
 1911 009a F040     		lsrs	r0, r0, r6
 1912 009c 0340     		ands	r3, r3, r0
 1913              	.LVL138:
5510:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 1914              		.loc 2 5510 3 view .LVU567
 1915 009e C3F31303 		ubfx	r3, r3, #0, #20
 1916 00a2 0B43     		orrs	r3, r3, r1
 1917 00a4 C2F8C030 		str	r3, [r2, #192]
 1918              	.LVL139:
5510:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 1919              		.loc 2 5510 3 view .LVU568
 1920              	.LBE307:
 1921              	.LBE306:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 235


3021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1922              		.loc 1 3021 7 is_stmt 1 view .LVU569
3021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1923              		.loc 1 3021 18 is_stmt 0 view .LVU570
 1924 00a8 EA68     		ldr	r2, [r5, #12]
3021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1925              		.loc 1 3021 10 view .LVU571
 1926 00aa AB4B     		ldr	r3, .L215+4
 1927 00ac 9A42     		cmp	r2, r3
 1928 00ae 00F0A180 		beq	.L201
 1929              	.L147:
3036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1930              		.loc 1 3036 7 is_stmt 1 view .LVU572
3036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1931              		.loc 1 3036 11 is_stmt 0 view .LVU573
 1932 00b2 2B68     		ldr	r3, [r5]
3036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 1933              		.loc 1 3036 10 view .LVU574
 1934 00b4 002B     		cmp	r3, #0
 1935 00b6 C0F25381 		blt	.L202
2821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 1936              		.loc 1 2821 21 view .LVU575
 1937 00ba 0020     		movs	r0, #0
 1938 00bc B8E7     		b	.L131
 1939              	.LVL140:
 1940              	.L132:
 1941              	.LBB308:
 1942              	.LBI308:
 1943              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
ARM GAS  C:\usertemp\cca0PO6L.s 			page 236


  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\usertemp\cca0PO6L.s 			page 237


  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
ARM GAS  C:\usertemp\cca0PO6L.s 			page 238


 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\usertemp\cca0PO6L.s 			page 239


 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
ARM GAS  C:\usertemp\cca0PO6L.s 			page 240


 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\usertemp\cca0PO6L.s 			page 241


 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  C:\usertemp\cca0PO6L.s 			page 242


 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
ARM GAS  C:\usertemp\cca0PO6L.s 			page 243


 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 244


 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
ARM GAS  C:\usertemp\cca0PO6L.s 			page 245


 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
ARM GAS  C:\usertemp\cca0PO6L.s 			page 246


 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
ARM GAS  C:\usertemp\cca0PO6L.s 			page 247


 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\usertemp\cca0PO6L.s 			page 248


 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
ARM GAS  C:\usertemp\cca0PO6L.s 			page 249


 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 250


 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
ARM GAS  C:\usertemp\cca0PO6L.s 			page 251


 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
ARM GAS  C:\usertemp\cca0PO6L.s 			page 252


 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 948:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 959:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 967:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 969:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 972:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 976:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 977:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 979:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 980:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 981:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 985:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 992:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 993:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 994:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
ARM GAS  C:\usertemp\cca0PO6L.s 			page 253


 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1000:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1001:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
1007:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1010:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1015:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
1020:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1021:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
1027:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1028:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1032:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1041:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1042:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1047:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 1944              		.loc 3 1048 31 is_stmt 1 view .LVU576
 1945              	.LBB309:
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1050:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 1946              		.loc 3 1050 3 view .LVU577
1051:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 254


1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 1947              		.loc 3 1055 4 view .LVU578
 1948              		.syntax unified
 1949              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1950 00be 93FAA3F3 		rbit r3, r3
 1951              	@ 0 "" 2
 1952              	.LVL141:
1056:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1057:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1059:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1062:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1068:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 1953              		.loc 3 1068 3 view .LVU579
 1954              		.loc 3 1068 3 is_stmt 0 view .LVU580
 1955              		.thumb
 1956              		.syntax unified
 1957              	.LBE309:
 1958              	.LBE308:
 1959              	.LBB310:
 1960              	.LBI310:
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1070:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 1961              		.loc 3 1078 30 is_stmt 1 view .LVU581
 1962              	.LBB311:
1079:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
1086:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 1963              		.loc 3 1089 3 view .LVU582
 1964              		.loc 3 1089 6 is_stmt 0 view .LVU583
 1965 00c2 33B1     		cbz	r3, .L182
ARM GAS  C:\usertemp\cca0PO6L.s 			page 255


1090:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
1092:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1093:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 1966              		.loc 3 1093 3 is_stmt 1 view .LVU584
 1967              		.loc 3 1093 10 is_stmt 0 discriminator 1 view .LVU585
 1968 00c4 B3FA83F3 		clz	r3, r3
 1969              	.LVL142:
 1970              	.L134:
 1971              		.loc 3 1093 10 discriminator 1 view .LVU586
 1972              	.LBE311:
 1973              	.LBE310:
2900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
 1974              		.loc 1 2900 98 discriminator 2 view .LVU587
 1975 00c8 03F01F03 		and	r3, r3, #31
2900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
 1976              		.loc 1 2900 35 discriminator 2 view .LVU588
 1977 00cc 0121     		movs	r1, #1
 1978 00ce 9940     		lsls	r1, r1, r3
 1979 00d0 BCE7     		b	.L133
 1980              	.LVL143:
 1981              	.L182:
 1982              	.LBB313:
 1983              	.LBB312:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1984              		.loc 3 1091 12 view .LVU589
 1985 00d2 2023     		movs	r3, #32
 1986              	.LVL144:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1987              		.loc 3 1091 12 view .LVU590
 1988 00d4 F8E7     		b	.L134
 1989              	.LVL145:
 1990              	.L200:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 1991              		.loc 3 1091 12 view .LVU591
 1992              	.LBE312:
 1993              	.LBE313:
2918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1994              		.loc 1 2918 7 is_stmt 1 view .LVU592
 1995 00d6 AA68     		ldr	r2, [r5, #8]
 1996              	.LVL146:
2918:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 1997              		.loc 1 2918 7 is_stmt 0 view .LVU593
 1998 00d8 2968     		ldr	r1, [r5]
 1999 00da FFF7FEFF 		bl	LL_ADC_SetChannelSamplingTime
 2000              	.LVL147:
2932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 2001              		.loc 1 2932 9 is_stmt 1 view .LVU594
2932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 2002              		.loc 1 2932 28 is_stmt 0 view .LVU595
 2003 00de 9F4B     		ldr	r3, .L215+8
 2004 00e0 1B68     		ldr	r3, [r3]
 2005 00e2 03F07043 		and	r3, r3, #-268435456
 2006 00e6 B3F1805F 		cmp	r3, #268435456
 2007 00ea 0BD0     		beq	.L203
2932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 2008              		.loc 1 2932 28 discriminator 2 view .LVU596
ARM GAS  C:\usertemp\cca0PO6L.s 			page 256


 2009 00ec 2268     		ldr	r2, [r4]
 2010 00ee D368     		ldr	r3, [r2, #12]
 2011 00f0 13F0100F 		tst	r3, #16
 2012 00f4 3BD1     		bne	.L140
2932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 2013              		.loc 1 2932 28 discriminator 4 view .LVU597
 2014 00f6 6B69     		ldr	r3, [r5, #20]
 2015 00f8 D268     		ldr	r2, [r2, #12]
 2016 00fa C2F38202 		ubfx	r2, r2, #2, #3
 2017 00fe 5200     		lsls	r2, r2, #1
 2018 0100 9340     		lsls	r3, r3, r2
 2019 0102 06E0     		b	.L139
 2020              	.L203:
2932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 2021              		.loc 1 2932 28 discriminator 1 view .LVU598
 2022 0104 6B69     		ldr	r3, [r5, #20]
 2023 0106 2268     		ldr	r2, [r4]
 2024 0108 D268     		ldr	r2, [r2, #12]
 2025 010a C2F38202 		ubfx	r2, r2, #2, #3
 2026 010e 5200     		lsls	r2, r2, #1
 2027 0110 9340     		lsls	r3, r3, r2
 2028              	.L139:
 2029              	.LVL148:
2935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 2030              		.loc 1 2935 7 is_stmt 1 view .LVU599
2935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 2031              		.loc 1 2935 18 is_stmt 0 view .LVU600
 2032 0112 2969     		ldr	r1, [r5, #16]
2935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 2033              		.loc 1 2935 10 view .LVU601
 2034 0114 0429     		cmp	r1, #4
 2035 0116 38D0     		beq	.L141
2938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2036              		.loc 1 2938 9 is_stmt 1 view .LVU602
 2037 0118 2268     		ldr	r2, [r4]
 2038 011a 2868     		ldr	r0, [r5]
 2039              	.LVL149:
 2040              	.LBB314:
 2041              	.LBI314:
3312:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2042              		.loc 2 3312 22 view .LVU603
 2043              	.LBB315:
3314:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 2044              		.loc 2 3314 3 view .LVU604
3314:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** #if defined(ADC_VER_V5_V90)
 2045              		.loc 2 3314 25 is_stmt 0 view .LVU605
 2046 011c 02F1600C 		add	ip, r2, #96
 2047              	.LVL150:
3325:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2048              		.loc 2 3325 5 is_stmt 1 view .LVU606
 2049 0120 5CF82120 		ldr	r2, [ip, r1, lsl #2]
 2050              	.LVL151:
3325:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2051              		.loc 2 3325 5 is_stmt 0 view .LVU607
 2052 0124 02F00042 		and	r2, r2, #-2147483648
 2053 0128 00F0F840 		and	r0, r0, #2080374784
 2054              	.LVL152:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 257


3325:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2055              		.loc 2 3325 5 view .LVU608
 2056 012c 0343     		orrs	r3, r3, r0
 2057              	.LVL153:
3325:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2058              		.loc 2 3325 5 view .LVU609
 2059 012e 1343     		orrs	r3, r3, r2
 2060 0130 4CF82130 		str	r3, [ip, r1, lsl #2]
 2061              	.LVL154:
3325:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2062              		.loc 2 3325 5 view .LVU610
 2063              	.LBE315:
 2064              	.LBE314:
2952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Set ADC selected offset signed saturation */
 2065              		.loc 1 2952 11 is_stmt 1 view .LVU611
2954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2066              		.loc 1 2954 11 view .LVU612
 2067 0134 2368     		ldr	r3, [r4]
 2068 0136 2869     		ldr	r0, [r5, #16]
2954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2069              		.loc 1 2954 91 is_stmt 0 view .LVU613
 2070 0138 6A7E     		ldrb	r2, [r5, #25]	@ zero_extendqisi2
2954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2071              		.loc 1 2954 11 view .LVU614
 2072 013a 012A     		cmp	r2, #1
 2073 013c 1FD0     		beq	.L204
2954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2074              		.loc 1 2954 11 discriminator 2 view .LVU615
 2075 013e 3146     		mov	r1, r6
 2076              	.L142:
 2077              	.LVL155:
 2078              	.LBB316:
 2079              	.LBI316:
3485:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2080              		.loc 2 3485 22 is_stmt 1 view .LVU616
 2081              	.LBB317:
3495:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg, ADC_OFR1_SSATE, OffsetSignedSaturation);
 2082              		.loc 2 3495 5 view .LVU617
3495:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****     MODIFY_REG(*preg, ADC_OFR1_SSATE, OffsetSignedSaturation);
 2083              		.loc 2 3495 27 is_stmt 0 view .LVU618
 2084 0140 6033     		adds	r3, r3, #96
 2085              	.LVL156:
3496:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
 2086              		.loc 2 3496 5 is_stmt 1 view .LVU619
 2087 0142 53F82020 		ldr	r2, [r3, r0, lsl #2]
 2088 0146 22F00042 		bic	r2, r2, #-2147483648
 2089 014a 0A43     		orrs	r2, r2, r1
 2090 014c 43F82020 		str	r2, [r3, r0, lsl #2]
 2091              	.LVL157:
3496:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   }
 2092              		.loc 2 3496 5 is_stmt 0 view .LVU620
 2093              	.LBE317:
 2094              	.LBE316:
2956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Set ADC selected offset right shift */
 2095              		.loc 1 2956 11 is_stmt 1 view .LVU621
2958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 2096              		.loc 1 2958 11 view .LVU622
ARM GAS  C:\usertemp\cca0PO6L.s 			page 258


 2097 0150 2168     		ldr	r1, [r4]
 2098 0152 2A69     		ldr	r2, [r5, #16]
2958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 2099              		.loc 1 2958 83 is_stmt 0 view .LVU623
 2100 0154 2B7E     		ldrb	r3, [r5, #24]	@ zero_extendqisi2
2958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 2101              		.loc 1 2958 11 view .LVU624
 2102 0156 012B     		cmp	r3, #1
 2103 0158 14D0     		beq	.L205
 2104              	.L143:
 2105              	.LVL158:
 2106              	.LBB318:
 2107              	.LBI318:
3443:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2108              		.loc 2 3443 22 is_stmt 1 view .LVU625
 2109              	.LBB319:
3445:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2110              		.loc 2 3445 3 view .LVU626
 2111 015a 0B69     		ldr	r3, [r1, #16]
 2112 015c 23F4F043 		bic	r3, r3, #30720
 2113 0160 02F01F02 		and	r2, r2, #31
 2114              	.LVL159:
3445:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2115              		.loc 2 3445 3 is_stmt 0 view .LVU627
 2116 0164 06FA02F2 		lsl	r2, r6, r2
 2117 0168 1343     		orrs	r3, r3, r2
 2118 016a 0B61     		str	r3, [r1, #16]
 2119              	.LVL160:
3446:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2120              		.loc 2 3446 1 view .LVU628
 2121 016c 84E7     		b	.L137
 2122              	.LVL161:
 2123              	.L140:
3446:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2124              		.loc 2 3446 1 view .LVU629
 2125              	.LBE319:
 2126              	.LBE318:
2932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 2127              		.loc 1 2932 28 discriminator 5 view .LVU630
 2128 016e 6B69     		ldr	r3, [r5, #20]
 2129 0170 D268     		ldr	r2, [r2, #12]
 2130 0172 9208     		lsrs	r2, r2, #2
 2131 0174 02F00402 		and	r2, r2, #4
 2132 0178 5200     		lsls	r2, r2, #1
 2133 017a 9340     		lsls	r3, r3, r2
 2134 017c C9E7     		b	.L139
 2135              	.LVL162:
 2136              	.L204:
2954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2137              		.loc 1 2954 11 discriminator 1 view .LVU631
 2138 017e 4FF00041 		mov	r1, #-2147483648
 2139 0182 DDE7     		b	.L142
 2140              	.L205:
2958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 2141              		.loc 1 2958 11 discriminator 1 view .LVU632
 2142 0184 4FF40066 		mov	r6, #2048
 2143 0188 E7E7     		b	.L143
ARM GAS  C:\usertemp\cca0PO6L.s 			page 259


 2144              	.LVL163:
 2145              	.L141:
2990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2146              		.loc 1 2990 11 is_stmt 1 view .LVU633
2990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2147              		.loc 1 2990 21 is_stmt 0 view .LVU634
 2148 018a 2268     		ldr	r2, [r4]
2990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2149              		.loc 1 2990 31 view .LVU635
 2150 018c 136E     		ldr	r3, [r2, #96]
 2151              	.LVL164:
2990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2152              		.loc 1 2990 39 view .LVU636
 2153 018e 03F0F843 		and	r3, r3, #2080374784
2990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2154              		.loc 1 2990 65 view .LVU637
 2155 0192 2968     		ldr	r1, [r5]
2990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2156              		.loc 1 2990 14 view .LVU638
 2157 0194 B3EB816F 		cmp	r3, r1, lsl #26
 2158 0198 1DD0     		beq	.L206
 2159              	.L144:
2994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2160              		.loc 1 2994 11 is_stmt 1 view .LVU639
2994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2161              		.loc 1 2994 21 is_stmt 0 view .LVU640
 2162 019a 2268     		ldr	r2, [r4]
2994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2163              		.loc 1 2994 31 view .LVU641
 2164 019c 536E     		ldr	r3, [r2, #100]
2994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2165              		.loc 1 2994 39 view .LVU642
 2166 019e 03F0F843 		and	r3, r3, #2080374784
2994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2167              		.loc 1 2994 65 view .LVU643
 2168 01a2 2968     		ldr	r1, [r5]
2994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2169              		.loc 1 2994 14 view .LVU644
 2170 01a4 B3EB816F 		cmp	r3, r1, lsl #26
 2171 01a8 1AD0     		beq	.L207
 2172              	.L145:
2998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2173              		.loc 1 2998 11 is_stmt 1 view .LVU645
2998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2174              		.loc 1 2998 21 is_stmt 0 view .LVU646
 2175 01aa 2268     		ldr	r2, [r4]
2998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2176              		.loc 1 2998 31 view .LVU647
 2177 01ac 936E     		ldr	r3, [r2, #104]
2998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2178              		.loc 1 2998 39 view .LVU648
 2179 01ae 03F0F843 		and	r3, r3, #2080374784
2998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2180              		.loc 1 2998 65 view .LVU649
 2181 01b2 2968     		ldr	r1, [r5]
2998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2182              		.loc 1 2998 14 view .LVU650
ARM GAS  C:\usertemp\cca0PO6L.s 			page 260


 2183 01b4 B3EB816F 		cmp	r3, r1, lsl #26
 2184 01b8 17D0     		beq	.L208
 2185              	.L146:
3002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2186              		.loc 1 3002 11 is_stmt 1 view .LVU651
3002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2187              		.loc 1 3002 21 is_stmt 0 view .LVU652
 2188 01ba 2268     		ldr	r2, [r4]
3002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2189              		.loc 1 3002 31 view .LVU653
 2190 01bc D36E     		ldr	r3, [r2, #108]
3002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2191              		.loc 1 3002 39 view .LVU654
 2192 01be 03F0F843 		and	r3, r3, #2080374784
3002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2193              		.loc 1 3002 65 view .LVU655
 2194 01c2 2968     		ldr	r1, [r5]
3002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2195              		.loc 1 3002 14 view .LVU656
 2196 01c4 B3EB816F 		cmp	r3, r1, lsl #26
 2197 01c8 7FF456AF 		bne	.L137
3004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 2198              		.loc 1 3004 13 is_stmt 1 view .LVU657
 2199 01cc D36E     		ldr	r3, [r2, #108]
 2200 01ce 23F00043 		bic	r3, r3, #-2147483648
 2201 01d2 D366     		str	r3, [r2, #108]
 2202 01d4 50E7     		b	.L137
 2203              	.L206:
2992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 2204              		.loc 1 2992 13 view .LVU658
 2205 01d6 136E     		ldr	r3, [r2, #96]
 2206 01d8 23F00043 		bic	r3, r3, #-2147483648
 2207 01dc 1366     		str	r3, [r2, #96]
 2208 01de DCE7     		b	.L144
 2209              	.L207:
2996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 2210              		.loc 1 2996 13 view .LVU659
 2211 01e0 536E     		ldr	r3, [r2, #100]
 2212 01e2 23F00043 		bic	r3, r3, #-2147483648
 2213 01e6 5366     		str	r3, [r2, #100]
 2214 01e8 DFE7     		b	.L145
 2215              	.L208:
3000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 2216              		.loc 1 3000 13 view .LVU660
 2217 01ea 936E     		ldr	r3, [r2, #104]
 2218 01ec 23F00043 		bic	r3, r3, #-2147483648
 2219 01f0 9366     		str	r3, [r2, #104]
 2220 01f2 E2E7     		b	.L146
 2221              	.LVL165:
 2222              	.L201:
3025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2223              		.loc 1 3025 9 view .LVU661
 2224 01f4 2068     		ldr	r0, [r4]
3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2225              		.loc 1 3026 50 is_stmt 0 view .LVU662
 2226 01f6 2B68     		ldr	r3, [r5]
 2227 01f8 C3F31306 		ubfx	r6, r3, #0, #20
ARM GAS  C:\usertemp\cca0PO6L.s 			page 261


 2228 01fc 3EBB     		cbnz	r6, .L148
3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2229              		.loc 1 3026 50 discriminator 1 view .LVU663
 2230 01fe 9A0E     		lsrs	r2, r3, #26
 2231 0200 0132     		adds	r2, r2, #1
 2232 0202 02F01F02 		and	r2, r2, #31
 2233 0206 092A     		cmp	r2, #9
 2234 0208 8CBF     		ite	hi
 2235 020a 0022     		movhi	r2, #0
 2236 020c 0122     		movls	r2, #1
 2237              	.L149:
3025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2238              		.loc 1 3025 9 view .LVU664
 2239 020e 002A     		cmp	r2, #0
 2240 0210 55D0     		beq	.L151
3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2241              		.loc 1 3026 50 view .LVU665
 2242 0212 5EBB     		cbnz	r6, .L152
3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2243              		.loc 1 3026 50 discriminator 3 view .LVU666
 2244 0214 990E     		lsrs	r1, r3, #26
 2245 0216 0131     		adds	r1, r1, #1
 2246 0218 8906     		lsls	r1, r1, #26
 2247 021a 01F0F841 		and	r1, r1, #2080374784
 2248              	.L153:
3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2249              		.loc 1 3026 50 discriminator 6 view .LVU667
 2250 021e 8EBB     		cbnz	r6, .L155
3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2251              		.loc 1 3026 50 discriminator 7 view .LVU668
 2252 0220 4FEA936C 		lsr	ip, r3, #26
 2253 0224 0CF1010C 		add	ip, ip, #1
 2254 0228 0CF01F0C 		and	ip, ip, #31
 2255 022c 0122     		movs	r2, #1
 2256 022e 02FA0CF2 		lsl	r2, r2, ip
 2257              	.L156:
3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2258              		.loc 1 3026 50 discriminator 10 view .LVU669
 2259 0232 1143     		orrs	r1, r1, r2
 2260 0234 AEBB     		cbnz	r6, .L158
3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2261              		.loc 1 3026 50 discriminator 11 view .LVU670
 2262 0236 9B0E     		lsrs	r3, r3, #26
 2263 0238 0133     		adds	r3, r3, #1
 2264 023a 03F01F03 		and	r3, r3, #31
 2265 023e 03EB4303 		add	r3, r3, r3, lsl #1
 2266 0242 1B05     		lsls	r3, r3, #20
 2267              	.L159:
3025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2268              		.loc 1 3025 9 view .LVU671
 2269 0244 1943     		orrs	r1, r1, r3
 2270              	.L161:
3025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2271              		.loc 1 3025 9 discriminator 1 view .LVU672
 2272 0246 AA68     		ldr	r2, [r5, #8]
 2273 0248 FFF7FEFF 		bl	LL_ADC_SetChannelSamplingTime
 2274              	.LVL166:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 262


 2275 024c 31E7     		b	.L147
 2276              	.L148:
 2277              	.LVL167:
 2278              	.LBB320:
 2279              	.LBI320:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2280              		.loc 3 1048 31 is_stmt 1 view .LVU673
 2281              	.LBB321:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2282              		.loc 3 1050 3 view .LVU674
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2283              		.loc 3 1055 4 view .LVU675
 2284              		.syntax unified
 2285              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2286 024e 93FAA3F2 		rbit r2, r3
 2287              	@ 0 "" 2
 2288              	.LVL168:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2289              		.loc 3 1068 3 view .LVU676
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2290              		.loc 3 1068 3 is_stmt 0 view .LVU677
 2291              		.thumb
 2292              		.syntax unified
 2293              	.LBE321:
 2294              	.LBE320:
 2295              	.LBB322:
 2296              	.LBI322:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2297              		.loc 3 1078 30 is_stmt 1 view .LVU678
 2298              	.LBB323:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2299              		.loc 3 1089 3 view .LVU679
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2300              		.loc 3 1089 6 is_stmt 0 view .LVU680
 2301 0252 4AB1     		cbz	r2, .L185
 2302              		.loc 3 1093 3 is_stmt 1 view .LVU681
 2303              		.loc 3 1093 10 is_stmt 0 discriminator 1 view .LVU682
 2304 0254 B2FA82F2 		clz	r2, r2
 2305              	.LVL169:
 2306              	.L150:
 2307              		.loc 3 1093 10 discriminator 1 view .LVU683
 2308              	.LBE323:
 2309              	.LBE322:
3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2310              		.loc 1 3026 50 discriminator 2 view .LVU684
 2311 0258 0132     		adds	r2, r2, #1
 2312 025a 02F01F02 		and	r2, r2, #31
 2313 025e 092A     		cmp	r2, #9
 2314 0260 8CBF     		ite	hi
 2315 0262 0022     		movhi	r2, #0
 2316 0264 0122     		movls	r2, #1
 2317 0266 D2E7     		b	.L149
 2318              	.LVL170:
 2319              	.L185:
 2320              	.LBB325:
 2321              	.LBB324:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
ARM GAS  C:\usertemp\cca0PO6L.s 			page 263


 2322              		.loc 3 1091 12 view .LVU685
 2323 0268 2022     		movs	r2, #32
 2324              	.LVL171:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2325              		.loc 3 1091 12 view .LVU686
 2326 026a F5E7     		b	.L150
 2327              	.LVL172:
 2328              	.L152:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2329              		.loc 3 1091 12 view .LVU687
 2330              	.LBE324:
 2331              	.LBE325:
 2332              	.LBB326:
 2333              	.LBI326:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2334              		.loc 3 1048 31 is_stmt 1 view .LVU688
 2335              	.LBB327:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2336              		.loc 3 1050 3 view .LVU689
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2337              		.loc 3 1055 4 view .LVU690
 2338              		.syntax unified
 2339              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2340 026c 93FAA3F1 		rbit r1, r3
 2341              	@ 0 "" 2
 2342              	.LVL173:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2343              		.loc 3 1068 3 view .LVU691
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2344              		.loc 3 1068 3 is_stmt 0 view .LVU692
 2345              		.thumb
 2346              		.syntax unified
 2347              	.LBE327:
 2348              	.LBE326:
 2349              	.LBB328:
 2350              	.LBI328:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2351              		.loc 3 1078 30 is_stmt 1 view .LVU693
 2352              	.LBB329:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2353              		.loc 3 1089 3 view .LVU694
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2354              		.loc 3 1089 6 is_stmt 0 view .LVU695
 2355 0270 31B1     		cbz	r1, .L186
 2356              		.loc 3 1093 3 is_stmt 1 view .LVU696
 2357              		.loc 3 1093 10 is_stmt 0 discriminator 1 view .LVU697
 2358 0272 B1FA81F1 		clz	r1, r1
 2359              	.LVL174:
 2360              	.L154:
 2361              		.loc 3 1093 10 discriminator 1 view .LVU698
 2362              	.LBE329:
 2363              	.LBE328:
3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2364              		.loc 1 3026 50 discriminator 2 view .LVU699
 2365 0276 0131     		adds	r1, r1, #1
 2366 0278 8906     		lsls	r1, r1, #26
 2367 027a 01F0F841 		and	r1, r1, #2080374784
ARM GAS  C:\usertemp\cca0PO6L.s 			page 264


 2368 027e CEE7     		b	.L153
 2369              	.LVL175:
 2370              	.L186:
 2371              	.LBB331:
 2372              	.LBB330:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2373              		.loc 3 1091 12 view .LVU700
 2374 0280 2021     		movs	r1, #32
 2375              	.LVL176:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2376              		.loc 3 1091 12 view .LVU701
 2377 0282 F8E7     		b	.L154
 2378              	.LVL177:
 2379              	.L155:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2380              		.loc 3 1091 12 view .LVU702
 2381              	.LBE330:
 2382              	.LBE331:
 2383              	.LBB332:
 2384              	.LBI332:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2385              		.loc 3 1048 31 is_stmt 1 view .LVU703
 2386              	.LBB333:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2387              		.loc 3 1050 3 view .LVU704
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2388              		.loc 3 1055 4 view .LVU705
 2389              		.syntax unified
 2390              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2391 0284 93FAA3F2 		rbit r2, r3
 2392              	@ 0 "" 2
 2393              	.LVL178:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2394              		.loc 3 1068 3 view .LVU706
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2395              		.loc 3 1068 3 is_stmt 0 view .LVU707
 2396              		.thumb
 2397              		.syntax unified
 2398              	.LBE333:
 2399              	.LBE332:
 2400              	.LBB334:
 2401              	.LBI334:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2402              		.loc 3 1078 30 is_stmt 1 view .LVU708
 2403              	.LBB335:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2404              		.loc 3 1089 3 view .LVU709
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2405              		.loc 3 1089 6 is_stmt 0 view .LVU710
 2406 0288 4AB1     		cbz	r2, .L187
 2407              		.loc 3 1093 3 is_stmt 1 view .LVU711
 2408              		.loc 3 1093 10 is_stmt 0 discriminator 1 view .LVU712
 2409 028a B2FA82F2 		clz	r2, r2
 2410              	.LVL179:
 2411              	.L157:
 2412              		.loc 3 1093 10 discriminator 1 view .LVU713
 2413              	.LBE335:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 265


 2414              	.LBE334:
3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2415              		.loc 1 3026 50 discriminator 2 view .LVU714
 2416 028e 0132     		adds	r2, r2, #1
 2417 0290 02F01F02 		and	r2, r2, #31
 2418 0294 4FF0010C 		mov	ip, #1
 2419 0298 0CFA02F2 		lsl	r2, ip, r2
 2420 029c C9E7     		b	.L156
 2421              	.LVL180:
 2422              	.L187:
 2423              	.LBB337:
 2424              	.LBB336:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2425              		.loc 3 1091 12 view .LVU715
 2426 029e 2022     		movs	r2, #32
 2427              	.LVL181:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2428              		.loc 3 1091 12 view .LVU716
 2429 02a0 F5E7     		b	.L157
 2430              	.LVL182:
 2431              	.L158:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2432              		.loc 3 1091 12 view .LVU717
 2433              	.LBE336:
 2434              	.LBE337:
 2435              	.LBB338:
 2436              	.LBI338:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2437              		.loc 3 1048 31 is_stmt 1 view .LVU718
 2438              	.LBB339:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2439              		.loc 3 1050 3 view .LVU719
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2440              		.loc 3 1055 4 view .LVU720
 2441              		.syntax unified
 2442              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2443 02a2 93FAA3F3 		rbit r3, r3
 2444              	@ 0 "" 2
 2445              	.LVL183:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2446              		.loc 3 1068 3 view .LVU721
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2447              		.loc 3 1068 3 is_stmt 0 view .LVU722
 2448              		.thumb
 2449              		.syntax unified
 2450              	.LBE339:
 2451              	.LBE338:
 2452              	.LBB340:
 2453              	.LBI340:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2454              		.loc 3 1078 30 is_stmt 1 view .LVU723
 2455              	.LBB341:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2456              		.loc 3 1089 3 view .LVU724
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2457              		.loc 3 1089 6 is_stmt 0 view .LVU725
 2458 02a6 43B1     		cbz	r3, .L188
ARM GAS  C:\usertemp\cca0PO6L.s 			page 266


 2459              		.loc 3 1093 3 is_stmt 1 view .LVU726
 2460              		.loc 3 1093 10 is_stmt 0 discriminator 1 view .LVU727
 2461 02a8 B3FA83F3 		clz	r3, r3
 2462              	.LVL184:
 2463              	.L160:
 2464              		.loc 3 1093 10 discriminator 1 view .LVU728
 2465              	.LBE341:
 2466              	.LBE340:
3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2467              		.loc 1 3026 50 discriminator 2 view .LVU729
 2468 02ac 0133     		adds	r3, r3, #1
 2469 02ae 03F01F03 		and	r3, r3, #31
 2470 02b2 03EB4303 		add	r3, r3, r3, lsl #1
 2471 02b6 1B05     		lsls	r3, r3, #20
 2472 02b8 C4E7     		b	.L159
 2473              	.LVL185:
 2474              	.L188:
 2475              	.LBB343:
 2476              	.LBB342:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2477              		.loc 3 1091 12 view .LVU730
 2478 02ba 2023     		movs	r3, #32
 2479              	.LVL186:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2480              		.loc 3 1091 12 view .LVU731
 2481 02bc F6E7     		b	.L160
 2482              	.LVL187:
 2483              	.L151:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2484              		.loc 3 1091 12 view .LVU732
 2485              	.LBE342:
 2486              	.LBE343:
3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2487              		.loc 1 3026 50 view .LVU733
 2488 02be E6B9     		cbnz	r6, .L162
3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2489              		.loc 1 3026 50 discriminator 13 view .LVU734
 2490 02c0 990E     		lsrs	r1, r3, #26
 2491 02c2 0131     		adds	r1, r1, #1
 2492 02c4 8906     		lsls	r1, r1, #26
 2493 02c6 01F0F841 		and	r1, r1, #2080374784
 2494              	.L163:
3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2495              		.loc 1 3026 50 discriminator 16 view .LVU735
 2496 02ca 16BB     		cbnz	r6, .L165
3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2497              		.loc 1 3026 50 discriminator 17 view .LVU736
 2498 02cc 4FEA936C 		lsr	ip, r3, #26
 2499 02d0 0CF1010C 		add	ip, ip, #1
 2500 02d4 0CF01F0C 		and	ip, ip, #31
 2501 02d8 0122     		movs	r2, #1
 2502 02da 02FA0CF2 		lsl	r2, r2, ip
 2503              	.L166:
3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2504              		.loc 1 3026 50 discriminator 20 view .LVU737
 2505 02de 1143     		orrs	r1, r1, r2
 2506 02e0 36BB     		cbnz	r6, .L168
ARM GAS  C:\usertemp\cca0PO6L.s 			page 267


3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2507              		.loc 1 3026 50 discriminator 21 view .LVU738
 2508 02e2 9B0E     		lsrs	r3, r3, #26
 2509 02e4 0133     		adds	r3, r3, #1
 2510 02e6 03F01F03 		and	r3, r3, #31
 2511 02ea 03EB4303 		add	r3, r3, r3, lsl #1
 2512 02ee 1E3B     		subs	r3, r3, #30
 2513 02f0 1B05     		lsls	r3, r3, #20
 2514 02f2 43F00073 		orr	r3, r3, #33554432
 2515              	.L169:
3025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_T
 2516              		.loc 1 3025 9 discriminator 2 view .LVU739
 2517 02f6 1943     		orrs	r1, r1, r3
 2518 02f8 A5E7     		b	.L161
 2519              	.L162:
 2520              	.LVL188:
 2521              	.LBB344:
 2522              	.LBI344:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2523              		.loc 3 1048 31 is_stmt 1 view .LVU740
 2524              	.LBB345:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2525              		.loc 3 1050 3 view .LVU741
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2526              		.loc 3 1055 4 view .LVU742
 2527              		.syntax unified
 2528              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2529 02fa 93FAA3F1 		rbit r1, r3
 2530              	@ 0 "" 2
 2531              	.LVL189:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2532              		.loc 3 1068 3 view .LVU743
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2533              		.loc 3 1068 3 is_stmt 0 view .LVU744
 2534              		.thumb
 2535              		.syntax unified
 2536              	.LBE345:
 2537              	.LBE344:
 2538              	.LBB346:
 2539              	.LBI346:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2540              		.loc 3 1078 30 is_stmt 1 view .LVU745
 2541              	.LBB347:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2542              		.loc 3 1089 3 view .LVU746
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2543              		.loc 3 1089 6 is_stmt 0 view .LVU747
 2544 02fe 31B1     		cbz	r1, .L189
 2545              		.loc 3 1093 3 is_stmt 1 view .LVU748
 2546              		.loc 3 1093 10 is_stmt 0 discriminator 1 view .LVU749
 2547 0300 B1FA81F1 		clz	r1, r1
 2548              	.LVL190:
 2549              	.L164:
 2550              		.loc 3 1093 10 discriminator 1 view .LVU750
 2551              	.LBE347:
 2552              	.LBE346:
3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       sConfig->SamplingTime);
ARM GAS  C:\usertemp\cca0PO6L.s 			page 268


 2553              		.loc 1 3026 50 discriminator 2 view .LVU751
 2554 0304 0131     		adds	r1, r1, #1
 2555 0306 8906     		lsls	r1, r1, #26
 2556 0308 01F0F841 		and	r1, r1, #2080374784
 2557 030c DDE7     		b	.L163
 2558              	.LVL191:
 2559              	.L189:
 2560              	.LBB349:
 2561              	.LBB348:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2562              		.loc 3 1091 12 view .LVU752
 2563 030e 2021     		movs	r1, #32
 2564              	.LVL192:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2565              		.loc 3 1091 12 view .LVU753
 2566 0310 F8E7     		b	.L164
 2567              	.LVL193:
 2568              	.L165:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2569              		.loc 3 1091 12 view .LVU754
 2570              	.LBE348:
 2571              	.LBE349:
 2572              	.LBB350:
 2573              	.LBI350:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2574              		.loc 3 1048 31 is_stmt 1 view .LVU755
 2575              	.LBB351:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2576              		.loc 3 1050 3 view .LVU756
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2577              		.loc 3 1055 4 view .LVU757
 2578              		.syntax unified
 2579              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2580 0312 93FAA3F2 		rbit r2, r3
 2581              	@ 0 "" 2
 2582              	.LVL194:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2583              		.loc 3 1068 3 view .LVU758
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2584              		.loc 3 1068 3 is_stmt 0 view .LVU759
 2585              		.thumb
 2586              		.syntax unified
 2587              	.LBE351:
 2588              	.LBE350:
 2589              	.LBB352:
 2590              	.LBI352:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2591              		.loc 3 1078 30 is_stmt 1 view .LVU760
 2592              	.LBB353:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2593              		.loc 3 1089 3 view .LVU761
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2594              		.loc 3 1089 6 is_stmt 0 view .LVU762
 2595 0316 4AB1     		cbz	r2, .L190
 2596              		.loc 3 1093 3 is_stmt 1 view .LVU763
 2597              		.loc 3 1093 10 is_stmt 0 discriminator 1 view .LVU764
 2598 0318 B2FA82F2 		clz	r2, r2
ARM GAS  C:\usertemp\cca0PO6L.s 			page 269


 2599              	.LVL195:
 2600              	.L167:
 2601              		.loc 3 1093 10 discriminator 1 view .LVU765
 2602              	.LBE353:
 2603              	.LBE352:
3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2604              		.loc 1 3026 50 discriminator 2 view .LVU766
 2605 031c 0132     		adds	r2, r2, #1
 2606 031e 02F01F02 		and	r2, r2, #31
 2607 0322 4FF0010C 		mov	ip, #1
 2608 0326 0CFA02F2 		lsl	r2, ip, r2
 2609 032a D8E7     		b	.L166
 2610              	.LVL196:
 2611              	.L190:
 2612              	.LBB355:
 2613              	.LBB354:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2614              		.loc 3 1091 12 view .LVU767
 2615 032c 2022     		movs	r2, #32
 2616              	.LVL197:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2617              		.loc 3 1091 12 view .LVU768
 2618 032e F5E7     		b	.L167
 2619              	.LVL198:
 2620              	.L168:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2621              		.loc 3 1091 12 view .LVU769
 2622              	.LBE354:
 2623              	.LBE355:
 2624              	.LBB356:
 2625              	.LBI356:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2626              		.loc 3 1048 31 is_stmt 1 view .LVU770
 2627              	.LBB357:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2628              		.loc 3 1050 3 view .LVU771
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2629              		.loc 3 1055 4 view .LVU772
 2630              		.syntax unified
 2631              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2632 0330 93FAA3F3 		rbit r3, r3
 2633              	@ 0 "" 2
 2634              	.LVL199:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2635              		.loc 3 1068 3 view .LVU773
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2636              		.loc 3 1068 3 is_stmt 0 view .LVU774
 2637              		.thumb
 2638              		.syntax unified
 2639              	.LBE357:
 2640              	.LBE356:
 2641              	.LBB358:
 2642              	.LBI358:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2643              		.loc 3 1078 30 is_stmt 1 view .LVU775
 2644              	.LBB359:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
ARM GAS  C:\usertemp\cca0PO6L.s 			page 270


 2645              		.loc 3 1089 3 view .LVU776
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2646              		.loc 3 1089 6 is_stmt 0 view .LVU777
 2647 0334 5BB1     		cbz	r3, .L191
 2648              		.loc 3 1093 3 is_stmt 1 view .LVU778
 2649              		.loc 3 1093 10 is_stmt 0 discriminator 1 view .LVU779
 2650 0336 B3FA83F3 		clz	r3, r3
 2651              	.LVL200:
 2652              	.L170:
 2653              		.loc 3 1093 10 discriminator 1 view .LVU780
 2654              	.LBE359:
 2655              	.LBE358:
3026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                       sConfig->SamplingTime);
 2656              		.loc 1 3026 50 discriminator 2 view .LVU781
 2657 033a 0133     		adds	r3, r3, #1
 2658 033c 03F01F03 		and	r3, r3, #31
 2659 0340 03EB4303 		add	r3, r3, r3, lsl #1
 2660 0344 1E3B     		subs	r3, r3, #30
 2661 0346 1B05     		lsls	r3, r3, #20
 2662 0348 43F00073 		orr	r3, r3, #33554432
 2663 034c D3E7     		b	.L169
 2664              	.LVL201:
 2665              	.L191:
 2666              	.LBB361:
 2667              	.LBB360:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2668              		.loc 3 1091 12 view .LVU782
 2669 034e 2023     		movs	r3, #32
 2670              	.LVL202:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2671              		.loc 3 1091 12 view .LVU783
 2672 0350 F3E7     		b	.L170
 2673              	.L216:
 2674 0352 00BF     		.align	2
 2675              	.L215:
 2676 0354 FFFF0F00 		.word	1048575
 2677 0358 0000FF47 		.word	1207894016
 2678 035c 0010005C 		.word	1543507968
 2679              	.LVL203:
 2680              	.L202:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2681              		.loc 3 1091 12 view .LVU784
 2682              	.LBE360:
 2683              	.LBE361:
3040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2684              		.loc 1 3040 9 is_stmt 1 view .LVU785
3040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2685              		.loc 1 3040 70 is_stmt 0 view .LVU786
 2686 0360 2268     		ldr	r2, [r4]
 2687 0362 3F49     		ldr	r1, .L217
 2688 0364 3F48     		ldr	r0, .L217+4
3040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2689              		.loc 1 3040 39 view .LVU787
 2690 0366 8242     		cmp	r2, r0
 2691 0368 18BF     		it	ne
 2692 036a 8A42     		cmpne	r2, r1
 2693 036c 0CBF     		ite	eq
ARM GAS  C:\usertemp\cca0PO6L.s 			page 271


 2694 036e 0121     		moveq	r1, #1
 2695 0370 0021     		movne	r1, #0
 2696 0372 18D1     		bne	.L193
3040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2697              		.loc 1 3040 39 discriminator 1 view .LVU788
 2698 0374 3C4E     		ldr	r6, .L217+8
 2699              	.L171:
 2700              	.LVL204:
 2701              	.LBB362:
 2702              	.LBI362:
2737:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2703              		.loc 2 2737 26 is_stmt 1 view .LVU789
 2704              	.LBB363:
2739:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2705              		.loc 2 2739 3 view .LVU790
2739:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2706              		.loc 2 2739 21 is_stmt 0 view .LVU791
 2707 0376 B568     		ldr	r5, [r6, #8]
 2708              	.LVL205:
2739:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2709              		.loc 2 2739 10 view .LVU792
 2710 0378 05F0E07C 		and	ip, r5, #29360128
 2711              	.LVL206:
2739:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2712              		.loc 2 2739 10 view .LVU793
 2713              	.LBE363:
 2714              	.LBE362:
3044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 2715              		.loc 1 3044 9 is_stmt 1 view .LVU794
3044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 2716              		.loc 1 3044 95 is_stmt 0 view .LVU795
 2717 037c A9B1     		cbz	r1, .L172
 2718              	.LVL207:
 2719              	.LBB364:
 2720              	.LBI364:
6816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2721              		.loc 2 6816 26 is_stmt 1 view .LVU796
 2722              	.LBB365:
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2723              		.loc 2 6818 3 view .LVU797
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2724              		.loc 2 6818 12 is_stmt 0 view .LVU798
 2725 037e 3849     		ldr	r1, .L217
 2726 0380 8868     		ldr	r0, [r1, #8]
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2727              		.loc 2 6818 68 view .LVU799
 2728 0382 10F00100 		ands	r0, r0, #1
 2729 0386 00D0     		beq	.L173
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2730              		.loc 2 6818 68 discriminator 1 view .LVU800
 2731 0388 0120     		movs	r0, #1
 2732              	.L173:
 2733              	.LVL208:
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2734              		.loc 2 6818 68 discriminator 1 view .LVU801
 2735              	.LBE365:
 2736              	.LBE364:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 272


 2737              	.LBB366:
 2738              	.LBI366:
6816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2739              		.loc 2 6816 26 is_stmt 1 view .LVU802
 2740              	.LBB367:
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2741              		.loc 2 6818 3 view .LVU803
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2742              		.loc 2 6818 12 is_stmt 0 view .LVU804
 2743 038a 3649     		ldr	r1, .L217+4
 2744 038c 8968     		ldr	r1, [r1, #8]
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2745              		.loc 2 6818 68 view .LVU805
 2746 038e 11F00101 		ands	r1, r1, #1
 2747 0392 00D0     		beq	.L174
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2748              		.loc 2 6818 68 discriminator 1 view .LVU806
 2749 0394 0121     		movs	r1, #1
 2750              	.L174:
 2751              	.LVL209:
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2752              		.loc 2 6818 68 discriminator 1 view .LVU807
 2753              	.LBE367:
 2754              	.LBE366:
3044:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 2755              		.loc 1 3044 12 discriminator 4 view .LVU808
 2756 0396 0143     		orrs	r1, r1, r0
 2757 0398 0CD0     		beq	.L175
 2758              	.L176:
3091:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2759              		.loc 1 3091 11 is_stmt 1 view .LVU809
 2760 039a 636D     		ldr	r3, [r4, #84]
 2761 039c 43F02003 		orr	r3, r3, #32
 2762 03a0 6365     		str	r3, [r4, #84]
3093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 2763              		.loc 1 3093 11 view .LVU810
 2764              	.LVL210:
3093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 2765              		.loc 1 3093 26 is_stmt 0 view .LVU811
 2766 03a2 0120     		movs	r0, #1
 2767 03a4 44E6     		b	.L131
 2768              	.LVL211:
 2769              	.L193:
3040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2770              		.loc 1 3040 39 discriminator 2 view .LVU812
 2771 03a6 314E     		ldr	r6, .L217+12
 2772 03a8 E5E7     		b	.L171
 2773              	.LVL212:
 2774              	.L172:
 2775              	.LBB368:
 2776              	.LBI368:
6816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2777              		.loc 2 6816 26 is_stmt 1 view .LVU813
 2778              	.LBB369:
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2779              		.loc 2 6818 3 view .LVU814
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
ARM GAS  C:\usertemp\cca0PO6L.s 			page 273


 2780              		.loc 2 6818 12 is_stmt 0 view .LVU815
 2781 03aa 3149     		ldr	r1, .L217+16
 2782 03ac 8968     		ldr	r1, [r1, #8]
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2783              		.loc 2 6818 68 view .LVU816
 2784 03ae 11F0010F 		tst	r1, #1
 2785 03b2 F2D1     		bne	.L176
 2786              	.LVL213:
 2787              	.L175:
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2788              		.loc 2 6818 68 view .LVU817
 2789              	.LBE369:
 2790              	.LBE368:
3048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2791              		.loc 1 3048 11 is_stmt 1 view .LVU818
3048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2792              		.loc 1 3048 14 is_stmt 0 view .LVU819
 2793 03b4 2F49     		ldr	r1, .L217+20
 2794 03b6 8B42     		cmp	r3, r1
 2795 03b8 07D0     		beq	.L209
 2796              	.L177:
3066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2797              		.loc 1 3066 16 is_stmt 1 view .LVU820
3066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2798              		.loc 1 3066 19 is_stmt 0 view .LVU821
 2799 03ba 2F49     		ldr	r1, .L217+24
 2800 03bc 8B42     		cmp	r3, r1
 2801 03be 26D0     		beq	.L210
 2802              	.L180:
3073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2803              		.loc 1 3073 16 is_stmt 1 view .LVU822
3073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2804              		.loc 1 3073 19 is_stmt 0 view .LVU823
 2805 03c0 2E49     		ldr	r1, .L217+28
 2806 03c2 8B42     		cmp	r3, r1
 2807 03c4 34D0     		beq	.L211
2821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 2808              		.loc 1 2821 21 view .LVU824
 2809 03c6 0020     		movs	r0, #0
 2810 03c8 32E6     		b	.L131
 2811              	.L209:
3048:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2812              		.loc 1 3048 60 discriminator 1 view .LVU825
 2813 03ca 15F4000F 		tst	r5, #8388608
 2814 03ce F4D1     		bne	.L177
3050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 2815              		.loc 1 3050 13 is_stmt 1 view .LVU826
3050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 2816              		.loc 1 3050 16 is_stmt 0 view .LVU827
 2817 03d0 274B     		ldr	r3, .L217+16
 2818 03d2 9A42     		cmp	r2, r3
 2819 03d4 01D0     		beq	.L212
2821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 2820              		.loc 1 2821 21 view .LVU828
 2821 03d6 0020     		movs	r0, #0
 2822 03d8 2AE6     		b	.L131
 2823              	.L212:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 274


3052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2824              		.loc 1 3052 15 is_stmt 1 view .LVU829
3052:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2825              		.loc 1 3052 15 is_stmt 0 discriminator 4 view .LVU830
 2826 03da 4CF40003 		orr	r3, ip, #8388608
 2827              	.LVL214:
 2828              	.LBB370:
 2829              	.LBI370:
2715:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2830              		.loc 2 2715 22 is_stmt 1 view .LVU831
 2831              	.LBB371:
2717:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2832              		.loc 2 2717 3 view .LVU832
 2833 03de B268     		ldr	r2, [r6, #8]
 2834 03e0 22F0E072 		bic	r2, r2, #29360128
 2835 03e4 1343     		orrs	r3, r3, r2
 2836              	.LVL215:
2717:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2837              		.loc 2 2717 3 is_stmt 0 view .LVU833
 2838 03e6 B360     		str	r3, [r6, #8]
 2839              	.LVL216:
2717:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2840              		.loc 2 2717 3 view .LVU834
 2841              	.LBE371:
 2842              	.LBE370:
3059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               while (wait_loop_index != 0UL)
 2843              		.loc 1 3059 15 is_stmt 1 view .LVU835
3059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               while (wait_loop_index != 0UL)
 2844              		.loc 1 3059 95 is_stmt 0 view .LVU836
 2845 03e8 254B     		ldr	r3, .L217+32
 2846 03ea 1B68     		ldr	r3, [r3]
 2847 03ec 9B09     		lsrs	r3, r3, #6
 2848 03ee 254A     		ldr	r2, .L217+36
 2849 03f0 A2FB0323 		umull	r2, r3, r2, r3
 2850 03f4 9B09     		lsrs	r3, r3, #6
3059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               while (wait_loop_index != 0UL)
 2851              		.loc 1 3059 115 view .LVU837
 2852 03f6 0133     		adds	r3, r3, #1
3059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               while (wait_loop_index != 0UL)
 2853              		.loc 1 3059 75 view .LVU838
 2854 03f8 5B00     		lsls	r3, r3, #1
3059:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               while (wait_loop_index != 0UL)
 2855              		.loc 1 3059 31 view .LVU839
 2856 03fa 0193     		str	r3, [sp, #4]
3060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               {
 2857              		.loc 1 3060 15 is_stmt 1 view .LVU840
3060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               {
 2858              		.loc 1 3060 21 is_stmt 0 view .LVU841
 2859 03fc 02E0     		b	.L178
 2860              	.L179:
3062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               }
 2861              		.loc 1 3062 17 is_stmt 1 view .LVU842
3062:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               }
 2862              		.loc 1 3062 32 is_stmt 0 view .LVU843
 2863 03fe 019B     		ldr	r3, [sp, #4]
 2864 0400 013B     		subs	r3, r3, #1
 2865 0402 0193     		str	r3, [sp, #4]
ARM GAS  C:\usertemp\cca0PO6L.s 			page 275


 2866              	.L178:
3060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               {
 2867              		.loc 1 3060 38 is_stmt 1 view .LVU844
 2868 0404 019B     		ldr	r3, [sp, #4]
 2869 0406 002B     		cmp	r3, #0
 2870 0408 F9D1     		bne	.L179
2821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 2871              		.loc 1 2821 21 is_stmt 0 view .LVU845
 2872 040a 0020     		movs	r0, #0
 2873 040c 10E6     		b	.L131
 2874              	.L210:
3066:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2875              		.loc 1 3066 59 discriminator 1 view .LVU846
 2876 040e 15F0807F 		tst	r5, #16777216
 2877 0412 D5D1     		bne	.L180
3068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 2878              		.loc 1 3068 13 is_stmt 1 view .LVU847
3068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 2879              		.loc 1 3068 16 is_stmt 0 view .LVU848
 2880 0414 164B     		ldr	r3, .L217+16
 2881 0416 9A42     		cmp	r2, r3
 2882 0418 01D0     		beq	.L213
2821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 2883              		.loc 1 2821 21 view .LVU849
 2884 041a 0020     		movs	r0, #0
 2885 041c 08E6     		b	.L131
 2886              	.L213:
3070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 2887              		.loc 1 3070 15 is_stmt 1 view .LVU850
3070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 2888              		.loc 1 3070 15 is_stmt 0 discriminator 4 view .LVU851
 2889 041e 4CF08073 		orr	r3, ip, #16777216
 2890              	.LVL217:
 2891              	.LBB372:
 2892              	.LBI372:
2715:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2893              		.loc 2 2715 22 is_stmt 1 view .LVU852
 2894              	.LBB373:
2717:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2895              		.loc 2 2717 3 view .LVU853
 2896 0422 B268     		ldr	r2, [r6, #8]
 2897 0424 22F0E072 		bic	r2, r2, #29360128
 2898 0428 1343     		orrs	r3, r3, r2
 2899              	.LVL218:
2717:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2900              		.loc 2 2717 3 is_stmt 0 view .LVU854
 2901 042a B360     		str	r3, [r6, #8]
 2902              	.LVL219:
2717:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2903              		.loc 2 2717 3 view .LVU855
 2904              	.LBE373:
 2905              	.LBE372:
2821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 2906              		.loc 1 2821 21 view .LVU856
 2907 042c 0020     		movs	r0, #0
 2908              	.LBB375:
 2909              	.LBB374:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 276


2718:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2910              		.loc 2 2718 1 view .LVU857
 2911 042e FFE5     		b	.L131
 2912              	.L211:
2718:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2913              		.loc 2 2718 1 view .LVU858
 2914              	.LBE374:
 2915              	.LBE375:
3073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 2916              		.loc 1 3073 62 discriminator 1 view .LVU859
 2917 0430 15F4800F 		tst	r5, #4194304
 2918 0434 0FD1     		bne	.L197
3075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 2919              		.loc 1 3075 13 is_stmt 1 view .LVU860
3075:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 2920              		.loc 1 3075 16 is_stmt 0 view .LVU861
 2921 0436 0E4B     		ldr	r3, .L217+16
 2922 0438 9A42     		cmp	r2, r3
 2923 043a 01D0     		beq	.L214
2821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 2924              		.loc 1 2821 21 view .LVU862
 2925 043c 0020     		movs	r0, #0
 2926 043e F7E5     		b	.L131
 2927              	.L214:
3077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 2928              		.loc 1 3077 15 is_stmt 1 view .LVU863
3077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 2929              		.loc 1 3077 15 is_stmt 0 discriminator 4 view .LVU864
 2930 0440 4CF48003 		orr	r3, ip, #4194304
 2931              	.LVL220:
 2932              	.LBB376:
 2933              	.LBI376:
2715:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 2934              		.loc 2 2715 22 is_stmt 1 view .LVU865
 2935              	.LBB377:
2717:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2936              		.loc 2 2717 3 view .LVU866
 2937 0444 B268     		ldr	r2, [r6, #8]
 2938 0446 22F0E072 		bic	r2, r2, #29360128
 2939 044a 1343     		orrs	r3, r3, r2
 2940              	.LVL221:
2717:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2941              		.loc 2 2717 3 is_stmt 0 view .LVU867
 2942 044c B360     		str	r3, [r6, #8]
 2943              	.LVL222:
2717:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 2944              		.loc 2 2717 3 view .LVU868
 2945              	.LBE377:
 2946              	.LBE376:
2821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 2947              		.loc 1 2821 21 view .LVU869
 2948 044e 0020     		movs	r0, #0
 2949              	.LBB379:
 2950              	.LBB378:
2718:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2951              		.loc 2 2718 1 view .LVU870
 2952 0450 EEE5     		b	.L131
ARM GAS  C:\usertemp\cca0PO6L.s 			page 277


 2953              	.LVL223:
 2954              	.L184:
2718:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 2955              		.loc 2 2718 1 view .LVU871
 2956              	.LBE378:
 2957              	.LBE379:
2821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 2958              		.loc 1 2821 21 view .LVU872
 2959 0452 0020     		movs	r0, #0
 2960 0454 ECE5     		b	.L131
 2961              	.LVL224:
 2962              	.L197:
2821:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpOffsetShifted;
 2963              		.loc 1 2821 21 view .LVU873
 2964 0456 0020     		movs	r0, #0
 2965 0458 EAE5     		b	.L131
 2966              	.LVL225:
 2967              	.L181:
2882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2968              		.loc 1 2882 3 discriminator 1 view .LVU874
 2969 045a 0220     		movs	r0, #2
 2970              	.LVL226:
2882:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 2971              		.loc 1 2882 3 discriminator 1 view .LVU875
 2972 045c EBE5     		b	.L129
 2973              	.L218:
 2974 045e 00BF     		.align	2
 2975              	.L217:
 2976 0460 00200240 		.word	1073881088
 2977 0464 00210240 		.word	1073881344
 2978 0468 00230240 		.word	1073881856
 2979 046c 00630258 		.word	1476551424
 2980 0470 00600258 		.word	1476550656
 2981 0474 000084CB 		.word	-880541696
 2982 0478 000052C7 		.word	-950927360
 2983 047c 0000B8CF 		.word	-810024960
 2984 0480 00000000 		.word	SystemCoreClock
 2985 0484 632D3E05 		.word	87960931
 2986              		.cfi_endproc
 2987              	.LFE351:
 2989              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
 2990              		.align	1
 2991              		.global	HAL_ADC_AnalogWDGConfig
 2992              		.syntax unified
 2993              		.thumb
 2994              		.thumb_func
 2996              	HAL_ADC_AnalogWDGConfig:
 2997              	.LVL227:
 2998              	.LFB352:
3134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2999              		.loc 1 3134 1 is_stmt 1 view -0
 3000              		.cfi_startproc
 3001              		@ args = 0, pretend = 0, frame = 0
 3002              		@ frame_needed = 0, uses_anonymous_args = 0
3134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 3003              		.loc 1 3134 1 is_stmt 0 view .LVU877
 3004 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  C:\usertemp\cca0PO6L.s 			page 278


 3005              	.LCFI16:
 3006              		.cfi_def_cfa_offset 16
 3007              		.cfi_offset 3, -16
 3008              		.cfi_offset 4, -12
 3009              		.cfi_offset 5, -8
 3010              		.cfi_offset 14, -4
3135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 3011              		.loc 1 3135 3 is_stmt 1 view .LVU878
 3012              	.LVL228:
3136:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpAWDLowThresholdShifted;
 3013              		.loc 1 3136 3 view .LVU879
3137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 3014              		.loc 1 3137 3 view .LVU880
3138:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 3015              		.loc 1 3138 3 view .LVU881
3139:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3016              		.loc 1 3139 3 view .LVU882
3142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(AnalogWDGConfig->WatchdogNumber));
 3017              		.loc 1 3142 3 view .LVU883
3143:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
 3018              		.loc 1 3143 3 view .LVU884
3144:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
 3019              		.loc 1 3144 3 view .LVU885
3145:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3020              		.loc 1 3145 3 view .LVU886
3147:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       (AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_INJEC)   ||
 3021              		.loc 1 3147 3 view .LVU887
3151:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 3022              		.loc 1 3151 5 view .LVU888
3177:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 3023              		.loc 1 3177 5 view .LVU889
3181:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold / (hadc->In
 3024              		.loc 1 3181 7 view .LVU890
3182:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 3025              		.loc 1 3182 7 view .LVU891
3187:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
 3026              		.loc 1 3187 7 view .LVU892
3188:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 3027              		.loc 1 3188 7 view .LVU893
3193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3028              		.loc 1 3193 3 view .LVU894
3193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3029              		.loc 1 3193 3 view .LVU895
 3030 0002 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 3031 0006 012B     		cmp	r3, #1
 3032 0008 00F00C82 		beq	.L272
 3033 000c 0446     		mov	r4, r0
 3034 000e 0D46     		mov	r5, r1
3193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3035              		.loc 1 3193 3 discriminator 2 view .LVU896
 3036 0010 0123     		movs	r3, #1
 3037 0012 80F85030 		strb	r3, [r0, #80]
3193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3038              		.loc 1 3193 3 discriminator 2 view .LVU897
3200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 3039              		.loc 1 3200 3 view .LVU898
3200:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
ARM GAS  C:\usertemp\cca0PO6L.s 			page 279


 3040              		.loc 1 3200 44 is_stmt 0 view .LVU899
 3041 0016 0068     		ldr	r0, [r0]
 3042              	.LVL229:
 3043              	.LBB380:
 3044              	.LBI380:
6948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3045              		.loc 2 6948 26 is_stmt 1 view .LVU900
 3046              	.LBB381:
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3047              		.loc 2 6950 3 view .LVU901
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3048              		.loc 2 6950 12 is_stmt 0 view .LVU902
 3049 0018 8268     		ldr	r2, [r0, #8]
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3050              		.loc 2 6950 74 view .LVU903
 3051 001a 12F00402 		ands	r2, r2, #4
 3052 001e 00D0     		beq	.L221
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3053              		.loc 2 6950 74 discriminator 1 view .LVU904
 3054 0020 1A46     		mov	r2, r3
 3055              	.L221:
 3056              	.LVL230:
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3057              		.loc 2 6950 74 discriminator 1 view .LVU905
 3058              	.LBE381:
 3059              	.LBE380:
3201:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 3060              		.loc 1 3201 3 is_stmt 1 view .LVU906
 3061              	.LBB382:
 3062              	.LBI382:
7143:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3063              		.loc 2 7143 26 view .LVU907
 3064              	.LBB383:
 3065              		.loc 2 7145 3 view .LVU908
 3066              		.loc 2 7145 12 is_stmt 0 view .LVU909
 3067 0022 8368     		ldr	r3, [r0, #8]
 3068              		.loc 2 7145 76 view .LVU910
 3069 0024 13F00803 		ands	r3, r3, #8
 3070 0028 00D0     		beq	.L222
 3071              		.loc 2 7145 76 discriminator 1 view .LVU911
 3072 002a 0123     		movs	r3, #1
 3073              	.L222:
 3074              	.LVL231:
 3075              		.loc 2 7145 76 discriminator 1 view .LVU912
 3076              	.LBE383:
 3077              	.LBE382:
3202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 3078              		.loc 1 3202 3 is_stmt 1 view .LVU913
3202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 3079              		.loc 1 3202 6 is_stmt 0 view .LVU914
 3080 002c 1343     		orrs	r3, r3, r2
 3081              	.LVL232:
3202:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 3082              		.loc 1 3202 6 view .LVU915
 3083 002e 40F0F081 		bne	.L223
3207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 3084              		.loc 1 3207 5 is_stmt 1 view .LVU916
ARM GAS  C:\usertemp\cca0PO6L.s 			page 280


3207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 3085              		.loc 1 3207 24 is_stmt 0 view .LVU917
 3086 0032 2968     		ldr	r1, [r5]
 3087              	.LVL233:
3207:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 3088              		.loc 1 3207 8 view .LVU918
 3089 0034 A44B     		ldr	r3, .L290
 3090 0036 9942     		cmp	r1, r3
 3091 0038 20D0     		beq	.L278
3295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3092              		.loc 1 3295 7 is_stmt 1 view .LVU919
3295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3093              		.loc 1 3295 30 is_stmt 0 view .LVU920
 3094 003a 6B68     		ldr	r3, [r5, #4]
3295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3095              		.loc 1 3295 7 view .LVU921
 3096 003c B3F1A07F 		cmp	r3, #20971520
 3097 0040 00F0F080 		beq	.L242
 3098 0044 00F2D080 		bhi	.L243
 3099 0048 B3F5400F 		cmp	r3, #12582912
 3100 004c 00F0EA80 		beq	.L242
 3101 0050 B3F1807F 		cmp	r3, #16777216
 3102 0054 03D0     		beq	.L244
 3103 0056 B3F5000F 		cmp	r3, #8388608
 3104 005a 40F0CC80 		bne	.L245
 3105              	.L244:
3328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 3106              		.loc 1 3328 13 is_stmt 1 view .LVU922
3328:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             {
 3107              		.loc 1 3328 16 is_stmt 0 view .LVU923
 3108 005e 9B4B     		ldr	r3, .L290+4
 3109 0060 9942     		cmp	r1, r3
 3110 0062 00F01681 		beq	.L279
3334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 3111              		.loc 1 3334 15 is_stmt 1 view .LVU924
 3112 0066 AB68     		ldr	r3, [r5, #8]
 3113 0068 C3F31302 		ubfx	r2, r3, #0, #20
 3114              	.LVL234:
3334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 3115              		.loc 1 3334 15 is_stmt 0 view .LVU925
 3116 006c 002A     		cmp	r2, #0
 3117 006e 40F03381 		bne	.L258
3334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 3118              		.loc 1 3334 15 discriminator 1 view .LVU926
 3119 0072 C3F38463 		ubfx	r3, r3, #26, #5
 3120 0076 0122     		movs	r2, #1
 3121 0078 9A40     		lsls	r2, r2, r3
 3122 007a 36E1     		b	.L259
 3123              	.LVL235:
 3124              	.L278:
3212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3125              		.loc 1 3212 7 is_stmt 1 view .LVU927
3212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3126              		.loc 1 3212 30 is_stmt 0 view .LVU928
 3127 007c 6B68     		ldr	r3, [r5, #4]
3212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3128              		.loc 1 3212 7 view .LVU929
ARM GAS  C:\usertemp\cca0PO6L.s 			page 281


 3129 007e B3F1A07F 		cmp	r3, #20971520
 3130 0082 3ED0     		beq	.L225
 3131 0084 0FD8     		bhi	.L226
 3132 0086 B3F5400F 		cmp	r3, #12582912
 3133 008a 1DD0     		beq	.L227
 3134 008c B3F1807F 		cmp	r3, #16777216
 3135 0090 42D0     		beq	.L228
 3136 0092 B3F5000F 		cmp	r3, #8388608
 3137 0096 4DD1     		bne	.L230
3230:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
 3138              		.loc 1 3230 11 is_stmt 1 view .LVU930
 3139              	.LVL236:
 3140              	.LBB384:
 3141              	.LBI384:
5707:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3142              		.loc 2 5707 22 view .LVU931
 3143              	.LBB385:
5713:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3144              		.loc 2 5713 3 view .LVU932
5716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3145              		.loc 2 5716 3 view .LVU933
 3146 0098 C268     		ldr	r2, [r0, #12]
 3147              	.LVL237:
5716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3148              		.loc 2 5716 3 is_stmt 0 view .LVU934
 3149 009a 8D4B     		ldr	r3, .L290+8
 3150 009c 1340     		ands	r3, r3, r2
 3151 009e 43F40003 		orr	r3, r3, #8388608
 3152 00a2 C360     		str	r3, [r0, #12]
 3153              	.LVL238:
5716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3154              		.loc 2 5716 3 view .LVU935
 3155              	.LBE385:
 3156              	.LBE384:
3231:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3157              		.loc 1 3231 11 is_stmt 1 view .LVU936
 3158              	.LBB387:
 3159              	.LBB386:
5719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3160              		.loc 2 5719 1 is_stmt 0 view .LVU937
 3161 00a4 1AE0     		b	.L233
 3162              	.LVL239:
 3163              	.L226:
5719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3164              		.loc 2 5719 1 view .LVU938
 3165              	.LBE386:
 3166              	.LBE387:
3212:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3167              		.loc 1 3212 7 view .LVU939
 3168 00a6 B3F1C07F 		cmp	r3, #25165824
 3169 00aa 3CD0     		beq	.L231
 3170 00ac B3F1E07F 		cmp	r3, #29360128
 3171 00b0 40D1     		bne	.L230
3225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR_INJECTED));
 3172              		.loc 1 3225 11 is_stmt 1 view .LVU940
3225:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR_INJECTED));
 3173              		.loc 1 3225 72 is_stmt 0 view .LVU941
ARM GAS  C:\usertemp\cca0PO6L.s 			page 282


 3174 00b2 AA68     		ldr	r2, [r5, #8]
 3175              	.LVL240:
 3176              	.LBB388:
 3177              	.LBI388:
5707:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3178              		.loc 2 5707 22 is_stmt 1 view .LVU942
 3179              	.LBB389:
5713:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3180              		.loc 2 5713 3 view .LVU943
5716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3181              		.loc 2 5716 3 view .LVU944
 3182 00b4 C168     		ldr	r1, [r0, #12]
 3183 00b6 864B     		ldr	r3, .L290+8
 3184 00b8 0B40     		ands	r3, r3, r1
 3185 00ba 02F0F842 		and	r2, r2, #2080374784
 3186              	.LVL241:
5716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3187              		.loc 2 5716 3 is_stmt 0 view .LVU945
 3188 00be 42F0E072 		orr	r2, r2, #29360128
 3189 00c2 1343     		orrs	r3, r3, r2
 3190 00c4 C360     		str	r3, [r0, #12]
 3191              	.LVL242:
5716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3192              		.loc 2 5716 3 view .LVU946
 3193              	.LBE389:
 3194              	.LBE388:
3227:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3195              		.loc 1 3227 11 is_stmt 1 view .LVU947
 3196              	.LBB391:
 3197              	.LBB390:
5719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3198              		.loc 2 5719 1 is_stmt 0 view .LVU948
 3199 00c6 09E0     		b	.L233
 3200              	.LVL243:
 3201              	.L227:
5719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3202              		.loc 2 5719 1 view .LVU949
 3203              	.LBE390:
 3204              	.LBE391:
3215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR));
 3205              		.loc 1 3215 11 is_stmt 1 view .LVU950
3215:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                           LL_ADC_GROUP_REGULAR));
 3206              		.loc 1 3215 72 is_stmt 0 view .LVU951
 3207 00c8 AA68     		ldr	r2, [r5, #8]
 3208              	.LVL244:
 3209              	.LBB392:
 3210              	.LBI392:
5707:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3211              		.loc 2 5707 22 is_stmt 1 view .LVU952
 3212              	.LBB393:
5713:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3213              		.loc 2 5713 3 view .LVU953
5716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3214              		.loc 2 5716 3 view .LVU954
 3215 00ca C168     		ldr	r1, [r0, #12]
 3216 00cc 804B     		ldr	r3, .L290+8
 3217 00ce 0B40     		ands	r3, r3, r1
ARM GAS  C:\usertemp\cca0PO6L.s 			page 283


 3218 00d0 02F0F842 		and	r2, r2, #2080374784
 3219              	.LVL245:
5716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3220              		.loc 2 5716 3 is_stmt 0 view .LVU955
 3221 00d4 42F44002 		orr	r2, r2, #12582912
 3222 00d8 1343     		orrs	r3, r3, r2
 3223 00da C360     		str	r3, [r0, #12]
 3224              	.LVL246:
5716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3225              		.loc 2 5716 3 view .LVU956
 3226              	.LBE393:
 3227              	.LBE392:
3217:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3228              		.loc 1 3217 11 is_stmt 1 view .LVU957
 3229              	.L233:
3249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
 3230              		.loc 1 3249 7 view .LVU958
3249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
 3231              		.loc 1 3249 36 is_stmt 0 view .LVU959
 3232 00dc 7D4B     		ldr	r3, .L290+12
 3233 00de 1B68     		ldr	r3, [r3]
 3234 00e0 03F07043 		and	r3, r3, #-268435456
 3235 00e4 B3F1805F 		cmp	r3, #268435456
 3236 00e8 29D0     		beq	.L280
3249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
 3237              		.loc 1 3249 36 discriminator 2 view .LVU960
 3238 00ea 2368     		ldr	r3, [r4]
 3239 00ec DA68     		ldr	r2, [r3, #12]
 3240 00ee 12F0100F 		tst	r2, #16
 3241 00f2 3ED1     		bne	.L236
3249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
 3242              		.loc 1 3249 36 discriminator 4 view .LVU961
 3243 00f4 2A69     		ldr	r2, [r5, #16]
 3244 00f6 DB68     		ldr	r3, [r3, #12]
 3245 00f8 C3F38203 		ubfx	r3, r3, #2, #3
 3246 00fc 5B00     		lsls	r3, r3, #1
 3247 00fe 9A40     		lsls	r2, r2, r3
 3248 0100 24E0     		b	.L235
 3249              	.LVL247:
 3250              	.L225:
3220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                           LL_ADC_GROUP_INJECTED));
 3251              		.loc 1 3220 11 is_stmt 1 view .LVU962
3220:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                                           LL_ADC_GROUP_INJECTED));
 3252              		.loc 1 3220 72 is_stmt 0 view .LVU963
 3253 0102 AA68     		ldr	r2, [r5, #8]
 3254              	.LVL248:
 3255              	.LBB394:
 3256              	.LBI394:
5707:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3257              		.loc 2 5707 22 is_stmt 1 view .LVU964
 3258              	.LBB395:
5713:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3259              		.loc 2 5713 3 view .LVU965
5716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3260              		.loc 2 5716 3 view .LVU966
 3261 0104 C168     		ldr	r1, [r0, #12]
 3262 0106 724B     		ldr	r3, .L290+8
ARM GAS  C:\usertemp\cca0PO6L.s 			page 284


 3263 0108 0B40     		ands	r3, r3, r1
 3264 010a 02F0F842 		and	r2, r2, #2080374784
 3265              	.LVL249:
5716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3266              		.loc 2 5716 3 is_stmt 0 view .LVU967
 3267 010e 42F0A072 		orr	r2, r2, #20971520
 3268 0112 1343     		orrs	r3, r3, r2
 3269 0114 C360     		str	r3, [r0, #12]
 3270              	.LVL250:
5716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3271              		.loc 2 5716 3 view .LVU968
 3272              	.LBE395:
 3273              	.LBE394:
3222:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3274              		.loc 1 3222 11 is_stmt 1 view .LVU969
 3275              	.LBB397:
 3276              	.LBB396:
5719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3277              		.loc 2 5719 1 is_stmt 0 view .LVU970
 3278 0116 E1E7     		b	.L233
 3279              	.LVL251:
 3280              	.L228:
5719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3281              		.loc 2 5719 1 view .LVU971
 3282              	.LBE396:
 3283              	.LBE397:
3234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
 3284              		.loc 1 3234 11 is_stmt 1 view .LVU972
 3285              	.LBB398:
 3286              	.LBI398:
5707:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3287              		.loc 2 5707 22 view .LVU973
 3288              	.LBB399:
5713:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3289              		.loc 2 5713 3 view .LVU974
5716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3290              		.loc 2 5716 3 view .LVU975
 3291 0118 C268     		ldr	r2, [r0, #12]
 3292              	.LVL252:
5716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3293              		.loc 2 5716 3 is_stmt 0 view .LVU976
 3294 011a 6D4B     		ldr	r3, .L290+8
 3295 011c 1340     		ands	r3, r3, r2
 3296 011e 43F08073 		orr	r3, r3, #16777216
 3297 0122 C360     		str	r3, [r0, #12]
 3298              	.LVL253:
5716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3299              		.loc 2 5716 3 view .LVU977
 3300              	.LBE399:
 3301              	.LBE398:
3235:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3302              		.loc 1 3235 11 is_stmt 1 view .LVU978
 3303              	.LBB401:
 3304              	.LBB400:
5719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3305              		.loc 2 5719 1 is_stmt 0 view .LVU979
 3306 0124 DAE7     		b	.L233
ARM GAS  C:\usertemp\cca0PO6L.s 			page 285


 3307              	.LVL254:
 3308              	.L231:
5719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3309              		.loc 2 5719 1 view .LVU980
 3310              	.LBE400:
 3311              	.LBE401:
3238:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
 3312              		.loc 1 3238 11 is_stmt 1 view .LVU981
 3313              	.LBB402:
 3314              	.LBI402:
5707:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3315              		.loc 2 5707 22 view .LVU982
 3316              	.LBB403:
5713:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3317              		.loc 2 5713 3 view .LVU983
5716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3318              		.loc 2 5716 3 view .LVU984
 3319 0126 C268     		ldr	r2, [r0, #12]
 3320              	.LVL255:
5716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3321              		.loc 2 5716 3 is_stmt 0 view .LVU985
 3322 0128 694B     		ldr	r3, .L290+8
 3323 012a 1340     		ands	r3, r3, r2
 3324 012c 43F0C073 		orr	r3, r3, #25165824
 3325 0130 C360     		str	r3, [r0, #12]
 3326              	.LVL256:
5716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3327              		.loc 2 5716 3 view .LVU986
 3328              	.LBE403:
 3329              	.LBE402:
3239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3330              		.loc 1 3239 11 is_stmt 1 view .LVU987
 3331              	.LBB405:
 3332              	.LBB404:
5719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3333              		.loc 2 5719 1 is_stmt 0 view .LVU988
 3334 0132 D3E7     		b	.L233
 3335              	.LVL257:
 3336              	.L230:
5719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3337              		.loc 2 5719 1 view .LVU989
 3338              	.LBE404:
 3339              	.LBE405:
3242:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
 3340              		.loc 1 3242 11 is_stmt 1 view .LVU990
 3341              	.LBB406:
 3342              	.LBI406:
5707:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3343              		.loc 2 5707 22 view .LVU991
 3344              	.LBB407:
5713:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                                                       + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * 
 3345              		.loc 2 5713 3 view .LVU992
5716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3346              		.loc 2 5716 3 view .LVU993
 3347 0134 C268     		ldr	r2, [r0, #12]
 3348              	.LVL258:
5716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
ARM GAS  C:\usertemp\cca0PO6L.s 			page 286


 3349              		.loc 2 5716 3 is_stmt 0 view .LVU994
 3350 0136 664B     		ldr	r3, .L290+8
 3351 0138 1340     		ands	r3, r3, r2
 3352 013a C360     		str	r3, [r0, #12]
 3353              	.LVL259:
5716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 3354              		.loc 2 5716 3 view .LVU995
 3355              	.LBE407:
 3356              	.LBE406:
3243:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 3357              		.loc 1 3243 11 is_stmt 1 view .LVU996
 3358              	.LBB409:
 3359              	.LBB408:
5719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3360              		.loc 2 5719 1 is_stmt 0 view .LVU997
 3361 013c CEE7     		b	.L233
 3362              	.L280:
 3363              	.LBE408:
 3364              	.LBE409:
3249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
 3365              		.loc 1 3249 36 discriminator 1 view .LVU998
 3366 013e 2A69     		ldr	r2, [r5, #16]
 3367 0140 2368     		ldr	r3, [r4]
 3368 0142 DB68     		ldr	r3, [r3, #12]
 3369 0144 C3F38203 		ubfx	r3, r3, #2, #3
 3370 0148 5B00     		lsls	r3, r3, #1
 3371 014a 9A40     		lsls	r2, r2, r3
 3372              	.L235:
 3373              	.LVL260:
3250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3374              		.loc 1 3250 7 is_stmt 1 view .LVU999
3250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3375              		.loc 1 3250 36 is_stmt 0 view .LVU1000
 3376 014c 614B     		ldr	r3, .L290+12
 3377 014e 1B68     		ldr	r3, [r3]
 3378 0150 03F07043 		and	r3, r3, #-268435456
 3379 0154 B3F1805F 		cmp	r3, #268435456
 3380 0158 13D0     		beq	.L281
3250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3381              		.loc 1 3250 36 discriminator 2 view .LVU1001
 3382 015a 2368     		ldr	r3, [r4]
 3383 015c D968     		ldr	r1, [r3, #12]
 3384 015e 11F0100F 		tst	r1, #16
 3385 0162 32D1     		bne	.L239
3250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3386              		.loc 1 3250 36 discriminator 4 view .LVU1002
 3387 0164 6969     		ldr	r1, [r5, #20]
 3388 0166 DB68     		ldr	r3, [r3, #12]
 3389 0168 C3F38203 		ubfx	r3, r3, #2, #3
 3390 016c 5B00     		lsls	r3, r3, #1
 3391 016e 9940     		lsls	r1, r1, r3
 3392 0170 0EE0     		b	.L238
 3393              	.LVL261:
 3394              	.L236:
3249:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThr
 3395              		.loc 1 3249 36 discriminator 5 view .LVU1003
 3396 0172 2A69     		ldr	r2, [r5, #16]
ARM GAS  C:\usertemp\cca0PO6L.s 			page 287


 3397 0174 DB68     		ldr	r3, [r3, #12]
 3398 0176 9B08     		lsrs	r3, r3, #2
 3399 0178 03F00403 		and	r3, r3, #4
 3400 017c 5B00     		lsls	r3, r3, #1
 3401 017e 9A40     		lsls	r2, r2, r3
 3402 0180 E4E7     		b	.L235
 3403              	.LVL262:
 3404              	.L281:
3250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3405              		.loc 1 3250 36 discriminator 1 view .LVU1004
 3406 0182 6969     		ldr	r1, [r5, #20]
 3407 0184 2368     		ldr	r3, [r4]
 3408 0186 DB68     		ldr	r3, [r3, #12]
 3409 0188 C3F38203 		ubfx	r3, r3, #2, #3
 3410 018c 5B00     		lsls	r3, r3, #1
 3411 018e 9940     		lsls	r1, r1, r3
 3412              	.L238:
 3413              	.LVL263:
3269:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->HTR1,  ADC_HTR_HT, tmpAWDHighThresholdShifted);
 3414              		.loc 1 3269 7 is_stmt 1 view .LVU1005
 3415 0190 2068     		ldr	r0, [r4]
 3416 0192 036A     		ldr	r3, [r0, #32]
 3417 0194 03F07C43 		and	r3, r3, #-67108864
 3418 0198 0B43     		orrs	r3, r3, r1
 3419 019a 0362     		str	r3, [r0, #32]
3270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
 3420              		.loc 1 3270 7 view .LVU1006
 3421 019c 2168     		ldr	r1, [r4]
 3422              	.LVL264:
3270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
 3423              		.loc 1 3270 7 is_stmt 0 view .LVU1007
 3424 019e 4B6A     		ldr	r3, [r1, #36]
 3425 01a0 03F07C43 		and	r3, r3, #-67108864
 3426 01a4 1343     		orrs	r3, r3, r2
 3427 01a6 4B62     		str	r3, [r1, #36]
3274:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3428              		.loc 1 3274 7 is_stmt 1 view .LVU1008
 3429 01a8 636D     		ldr	r3, [r4, #84]
 3430 01aa 23F48033 		bic	r3, r3, #65536
 3431 01ae 6365     		str	r3, [r4, #84]
3280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3432              		.loc 1 3280 7 view .LVU1009
 3433 01b0 2368     		ldr	r3, [r4]
 3434              	.LVL265:
 3435              	.LBB410:
 3436              	.LBI410:
7146:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7147:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7148:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7149:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected command of conversion stop state
7150:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_IsStopConversionOngoing
7151:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7152:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group injected.
7153:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7154:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsStopConversionOngoing(ADC_TypeDef *ADCx)
7155:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7156:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTP) == (ADC_CR_JADSTP)) ? 1UL : 0UL);
ARM GAS  C:\usertemp\cca0PO6L.s 			page 288


7157:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7158:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7159:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7160:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7161:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
7162:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         all oversampling increased data width (for devices
7163:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         with feature oversampling).
7164:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData32\n
7165:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData32\n
7166:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData32\n
7167:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData32
7168:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7169:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7170:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7171:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7172:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7173:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7174:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
7175:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7176:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_ReadConversionData32(ADC_TypeDef *ADCx, uint32_t Rank)
7177:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7178:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7179:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7180:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
7181:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                              ADC_JDR1_JDATA)
7182:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    );
7183:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7184:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7185:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7186:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7187:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC resolution 16 bits.
7188:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7189:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         can increase data width, function for extended range
7190:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7191:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData16\n
7192:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData16\n
7193:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData16\n
7194:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData16
7195:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7196:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7197:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7198:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7199:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7200:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7201:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFFF
7202:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7203:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData16(ADC_TypeDef *ADCx, uint32_t Rank)
7204:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7205:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7206:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7207:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
7208:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                              ADC_JDR1_JDATA)
7209:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    );
7210:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7211:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7212:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7213:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
ARM GAS  C:\usertemp\cca0PO6L.s 			page 289


7214:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC resolution 14 bits.
7215:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7216:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         can increase data width, function for extended range
7217:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7218:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData14\n
7219:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData14\n
7220:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData14\n
7221:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData14
7222:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7223:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7224:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7225:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7226:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7227:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7228:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FFF
7229:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7230:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData14(ADC_TypeDef *ADCx, uint32_t Rank)
7231:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7232:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7233:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7234:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
7235:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                              ADC_JDR1_JDATA)
7236:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    );
7237:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7238:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7239:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7240:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7241:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC resolution 12 bits.
7242:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7243:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         can increase data width, function for extended range
7244:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7245:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData12\n
7246:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData12\n
7247:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData12\n
7248:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData12
7249:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7250:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7251:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7252:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7253:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7254:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7255:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
7256:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7257:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData12(ADC_TypeDef *ADCx, uint32_t Rank)
7258:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7259:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7260:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7261:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
7262:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                              ADC_JDR1_JDATA)
7263:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    );
7264:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7265:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7266:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7267:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7268:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC resolution 10 bits.
7269:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7270:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         can increase data width, function for extended range
ARM GAS  C:\usertemp\cca0PO6L.s 			page 290


7271:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7272:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData10\n
7273:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData10\n
7274:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData10\n
7275:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData10
7276:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7277:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7278:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7279:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7280:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7281:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7282:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
7283:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7284:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_INJ_ReadConversionData10(ADC_TypeDef *ADCx, uint32_t Rank)
7285:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7286:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7287:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7288:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint16_t)(READ_BIT(*preg,
7289:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                              ADC_JDR1_JDATA)
7290:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                    );
7291:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7292:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7293:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7294:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get ADC group injected conversion data, range fit for
7295:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         ADC resolution 8 bits.
7296:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
7297:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         can increase data width, function for extended range
7298:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_INJ_ReadConversionData32.
7299:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll JDR1     JDATA          LL_ADC_INJ_ReadConversionData8\n
7300:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR2     JDATA          LL_ADC_INJ_ReadConversionData8\n
7301:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR3     JDATA          LL_ADC_INJ_ReadConversionData8\n
7302:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         JDR4     JDATA          LL_ADC_INJ_ReadConversionData8
7303:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7304:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
7305:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
7306:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
7307:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
7308:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
7309:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
7310:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7311:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_INJ_ReadConversionData8(ADC_TypeDef *ADCx, uint32_t Rank)
7312:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7313:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->JDR1, ((Rank & ADC_INJ_JDRX_REGOFFSET_MASK
7314:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7315:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return (uint8_t)(READ_BIT(*preg,
7316:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                             ADC_JDR1_JDATA)
7317:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****                   );
7318:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7319:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7320:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7321:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
7322:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7323:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7324:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_FLAG_Management ADC flag management
7325:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
7326:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7327:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 291


7328:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7329:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag ADC ready.
7330:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
7331:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
7332:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
7333:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_IsActiveFlag_ADRDY
7334:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7335:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7336:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7337:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_ADRDY(ADC_TypeDef *ADCx)
7338:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7339:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_ADRDY) == (LL_ADC_FLAG_ADRDY)) ? 1UL : 0UL);
7340:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7341:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7342:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7343:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of unitary conversion.
7344:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_IsActiveFlag_EOC
7345:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7346:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7347:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7348:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOC(ADC_TypeDef *ADCx)
7349:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7350:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, ADC_ISR_EOC) == (ADC_ISR_EOC)) ? 1UL : 0UL);
7351:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7352:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7353:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7354:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sequence conversions.
7355:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_IsActiveFlag_EOS
7356:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7357:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7358:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7359:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOS(ADC_TypeDef *ADCx)
7360:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7361:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOS) == (LL_ADC_FLAG_EOS)) ? 1UL : 0UL);
7362:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7363:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7364:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7365:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag ADC group regular overrun.
7366:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_IsActiveFlag_OVR
7367:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7368:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7369:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7370:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_OVR(ADC_TypeDef *ADCx)
7371:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7372:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_OVR) == (LL_ADC_FLAG_OVR)) ? 1UL : 0UL);
7373:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7374:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7375:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7376:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sampling phase.
7377:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_IsActiveFlag_EOSMP
7378:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7379:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7380:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7381:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOSMP(ADC_TypeDef *ADCx)
7382:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7383:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOSMP) == (LL_ADC_FLAG_EOSMP)) ? 1UL : 0UL);
7384:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
ARM GAS  C:\usertemp\cca0PO6L.s 			page 292


7385:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7386:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7387:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag ADC group injected end of unitary conversion.
7388:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      JEOC           LL_ADC_IsActiveFlag_JEOC
7389:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7390:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7391:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7392:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JEOC(ADC_TypeDef *ADCx)
7393:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7394:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JEOC) == (LL_ADC_FLAG_JEOC)) ? 1UL : 0UL);
7395:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7396:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7397:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7398:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag ADC group injected end of sequence conversions.
7399:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      JEOS           LL_ADC_IsActiveFlag_JEOS
7400:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7401:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7402:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7403:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JEOS(ADC_TypeDef *ADCx)
7404:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7405:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JEOS) == (LL_ADC_FLAG_JEOS)) ? 1UL : 0UL);
7406:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7407:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7408:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7409:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag ADC group injected contexts queue overflow.
7410:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      JQOVF          LL_ADC_IsActiveFlag_JQOVF
7411:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7412:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7413:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7414:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_JQOVF(ADC_TypeDef *ADCx)
7415:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7416:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_JQOVF) == (LL_ADC_FLAG_JQOVF)) ? 1UL : 0UL);
7417:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7418:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7419:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7420:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 1 flag
7421:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_IsActiveFlag_AWD1
7422:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7423:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7424:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7425:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD1(ADC_TypeDef *ADCx)
7426:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7427:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD1) == (LL_ADC_FLAG_AWD1)) ? 1UL : 0UL);
7428:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7429:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7430:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7431:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 2.
7432:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_IsActiveFlag_AWD2
7433:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7434:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7435:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7436:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD2(ADC_TypeDef *ADCx)
7437:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7438:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD2) == (LL_ADC_FLAG_AWD2)) ? 1UL : 0UL);
7439:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7440:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7441:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
ARM GAS  C:\usertemp\cca0PO6L.s 			page 293


7442:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 3.
7443:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_IsActiveFlag_AWD3
7444:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7445:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7446:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7447:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD3(ADC_TypeDef *ADCx)
7448:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7449:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD3) == (LL_ADC_FLAG_AWD3)) ? 1UL : 0UL);
7450:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7451:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7452:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7453:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Clear flag ADC ready.
7454:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
7455:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
7456:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
7457:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_ClearFlag_ADRDY
7458:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7459:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7460:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7461:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_ADRDY(ADC_TypeDef *ADCx)
7462:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7463:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_ADRDY);
7464:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7465:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7466:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7467:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of unitary conversion.
7468:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_ClearFlag_EOC
7469:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7470:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7471:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7472:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOC(ADC_TypeDef *ADCx)
7473:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7474:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOC);
7475:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7476:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7477:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sequence conversions.
7479:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_ClearFlag_EOS
7480:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7481:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7482:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7483:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOS(ADC_TypeDef *ADCx)
7484:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7485:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOS);
7486:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7487:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7488:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7489:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Clear flag ADC group regular overrun.
7490:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_ClearFlag_OVR
7491:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7492:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7493:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7494:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_OVR(ADC_TypeDef *ADCx)
7495:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7496:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_OVR);
7497:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7498:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 294


7499:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7500:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sampling phase.
7501:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_ClearFlag_EOSMP
7502:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7503:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7504:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7505:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOSMP(ADC_TypeDef *ADCx)
7506:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7507:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOSMP);
7508:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7509:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7510:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7511:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Clear flag ADC group injected end of unitary conversion.
7512:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      JEOC           LL_ADC_ClearFlag_JEOC
7513:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7514:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7515:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7516:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JEOC(ADC_TypeDef *ADCx)
7517:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7518:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JEOC);
7519:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7520:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7521:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7522:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Clear flag ADC group injected end of sequence conversions.
7523:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      JEOS           LL_ADC_ClearFlag_JEOS
7524:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7525:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7526:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7527:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JEOS(ADC_TypeDef *ADCx)
7528:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7529:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JEOS);
7530:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7531:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7532:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7533:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Clear flag ADC group injected contexts queue overflow.
7534:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      JQOVF          LL_ADC_ClearFlag_JQOVF
7535:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7536:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7537:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7538:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_JQOVF(ADC_TypeDef *ADCx)
7539:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7540:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_JQOVF);
7541:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7542:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7543:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7544:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 1.
7545:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_ClearFlag_AWD1
7546:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7547:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7548:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7549:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD1(ADC_TypeDef *ADCx)
 3437              		.loc 2 7549 22 view .LVU1010
 3438              	.LBB411:
7550:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7551:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD1);
 3439              		.loc 2 7551 3 view .LVU1011
 3440 01b2 8022     		movs	r2, #128
ARM GAS  C:\usertemp\cca0PO6L.s 			page 295


 3441              	.LVL266:
 3442              		.loc 2 7551 3 is_stmt 0 view .LVU1012
 3443 01b4 1A60     		str	r2, [r3]
 3444              	.LVL267:
 3445              		.loc 2 7551 3 view .LVU1013
 3446              	.LBE411:
 3447              	.LBE410:
3283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3448              		.loc 1 3283 7 is_stmt 1 view .LVU1014
3283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3449              		.loc 1 3283 26 is_stmt 0 view .LVU1015
 3450 01b6 2B7B     		ldrb	r3, [r5, #12]	@ zero_extendqisi2
3283:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3451              		.loc 1 3283 10 view .LVU1016
 3452 01b8 012B     		cmp	r3, #1
 3453 01ba 0ED0     		beq	.L282
3289:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 3454              		.loc 1 3289 9 is_stmt 1 view .LVU1017
 3455 01bc 2268     		ldr	r2, [r4]
 3456              	.LVL268:
 3457              	.LBB412:
 3458              	.LBI412:
7552:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7553:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7554:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7555:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 2.
7556:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_ClearFlag_AWD2
7557:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7558:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7559:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7560:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD2(ADC_TypeDef *ADCx)
7561:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7562:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD2);
7563:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7564:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7565:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7566:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 3.
7567:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_ClearFlag_AWD3
7568:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7569:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7570:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7571:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD3(ADC_TypeDef *ADCx)
7572:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7573:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD3);
7574:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7575:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7576:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7577:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC ready of the ADC master.
7578:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      ADRDY_MST      LL_ADC_IsActiveFlag_MST_ADRDY
7579:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7580:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7581:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7582:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7583:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_ADRDY(ADC_Common_TypeDef *ADCxy_COMMON)
7584:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7585:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_ADRDY_MST) == (LL_ADC_FLAG_ADRDY_MST)) ? 1UL : 0
7586:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
ARM GAS  C:\usertemp\cca0PO6L.s 			page 296


7587:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7588:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7589:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC ready of the ADC slave.
7590:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      ADRDY_SLV      LL_ADC_IsActiveFlag_SLV_ADRDY
7591:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7592:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7593:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7594:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7595:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_ADRDY(ADC_Common_TypeDef *ADCxy_COMMON)
7596:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7597:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_ADRDY_SLV) == (LL_ADC_FLAG_ADRDY_SLV)) ? 1UL : 0
7598:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7599:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7600:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7601:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of unitary conversion of the ADC master.
7602:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      EOC_MST        LL_ADC_IsActiveFlag_MST_EOC
7603:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7604:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7605:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7606:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7607:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOC(ADC_Common_TypeDef *ADCxy_COMMON)
7608:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7609:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOC_SLV) == (LL_ADC_FLAG_EOC_SLV)) ? 1UL : 0UL);
7610:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7611:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7612:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7613:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of unitary conversion of the ADC slave.
7614:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      EOC_SLV        LL_ADC_IsActiveFlag_SLV_EOC
7615:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7616:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7617:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7618:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7619:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOC(ADC_Common_TypeDef *ADCxy_COMMON)
7620:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7621:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOC_SLV) == (LL_ADC_FLAG_EOC_SLV)) ? 1UL : 0UL);
7622:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7623:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7624:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7625:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sequence conversions of the ADC master.
7626:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      EOS_MST        LL_ADC_IsActiveFlag_MST_EOS
7627:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7628:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7629:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7630:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7631:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOS(ADC_Common_TypeDef *ADCxy_COMMON)
7632:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7633:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOS_MST) == (LL_ADC_FLAG_EOS_MST)) ? 1UL : 0UL);
7634:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7635:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7636:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7637:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sequence conversions of the ADC slave.
7638:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      EOS_SLV        LL_ADC_IsActiveFlag_SLV_EOS
7639:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7640:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7641:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7642:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7643:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOS(ADC_Common_TypeDef *ADCxy_COMMON)
ARM GAS  C:\usertemp\cca0PO6L.s 			page 297


7644:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7645:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOS_SLV) == (LL_ADC_FLAG_EOS_SLV)) ? 1UL : 0UL);
7646:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7647:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7648:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7649:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular overrun of the ADC master.
7650:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      OVR_MST        LL_ADC_IsActiveFlag_MST_OVR
7651:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7652:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7653:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7654:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7655:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_OVR(ADC_Common_TypeDef *ADCxy_COMMON)
7656:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7657:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_OVR_MST) == (LL_ADC_FLAG_OVR_MST)) ? 1UL : 0UL);
7658:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7659:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7660:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7661:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular overrun of the ADC slave.
7662:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      OVR_SLV        LL_ADC_IsActiveFlag_SLV_OVR
7663:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7664:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7665:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7666:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7667:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_OVR(ADC_Common_TypeDef *ADCxy_COMMON)
7668:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7669:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_OVR_SLV) == (LL_ADC_FLAG_OVR_SLV)) ? 1UL : 0UL);
7670:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7671:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7672:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7673:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sampling of the ADC master.
7674:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      EOSMP_MST      LL_ADC_IsActiveFlag_MST_EOSMP
7675:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7676:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7677:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7678:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7679:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_EOSMP(ADC_Common_TypeDef *ADCxy_COMMON)
7680:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7681:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOSMP_MST) == (LL_ADC_FLAG_EOSMP_MST)) ? 1UL : 0
7682:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7683:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7684:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7685:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC group regular end of sampling of the ADC slave.
7686:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      EOSMP_SLV      LL_ADC_IsActiveFlag_SLV_EOSMP
7687:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7688:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7689:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7690:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7691:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_EOSMP(ADC_Common_TypeDef *ADCxy_COMMON)
7692:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7693:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_EOSMP_SLV) == (LL_ADC_FLAG_EOSMP_SLV)) ? 1UL : 0
7694:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7695:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7696:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7697:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of unitary conversion of the ADC master.
7698:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      JEOC_MST       LL_ADC_IsActiveFlag_MST_JEOC
7699:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7700:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
ARM GAS  C:\usertemp\cca0PO6L.s 			page 298


7701:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7702:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7703:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JEOC(ADC_Common_TypeDef *ADCxy_COMMON)
7704:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7705:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOC_MST) == (LL_ADC_FLAG_JEOC_MST)) ? 1UL : 0UL
7706:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7707:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7708:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7709:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of unitary conversion of the ADC slave.
7710:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      JEOC_SLV       LL_ADC_IsActiveFlag_SLV_JEOC
7711:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7712:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7713:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7714:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7715:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JEOC(ADC_Common_TypeDef *ADCxy_COMMON)
7716:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7717:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOC_SLV) == (LL_ADC_FLAG_JEOC_SLV)) ? 1UL : 0UL
7718:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7719:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7720:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7721:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of sequence conversions of the ADC master.
7722:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      JEOS_MST       LL_ADC_IsActiveFlag_MST_JEOS
7723:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7724:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7725:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7727:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JEOS(ADC_Common_TypeDef *ADCxy_COMMON)
7728:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7729:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOS_MST) == (LL_ADC_FLAG_JEOS_MST)) ? 1UL : 0UL
7730:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7731:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7732:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7733:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected end of sequence conversions of the ADC slave.
7734:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      JEOS_SLV       LL_ADC_IsActiveFlag_SLV_JEOS
7735:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7736:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7737:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7738:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7739:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JEOS(ADC_Common_TypeDef *ADCxy_COMMON)
7740:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7741:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JEOS_SLV) == (LL_ADC_FLAG_JEOS_SLV)) ? 1UL : 0UL
7742:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7743:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7744:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7745:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected context queue overflow of the ADC master.
7746:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      JQOVF_MST      LL_ADC_IsActiveFlag_MST_JQOVF
7747:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7748:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7749:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7750:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7751:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_JQOVF(ADC_Common_TypeDef *ADCxy_COMMON)
7752:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7753:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JQOVF_MST) == (LL_ADC_FLAG_JQOVF_MST)) ? 1UL : 0
7754:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7755:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7756:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7757:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC group injected context queue overflow of the ADC slave.
ARM GAS  C:\usertemp\cca0PO6L.s 			page 299


7758:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      JQOVF_SLV      LL_ADC_IsActiveFlag_SLV_JQOVF
7759:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7760:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7761:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7762:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7763:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_JQOVF(ADC_Common_TypeDef *ADCxy_COMMON)
7764:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7765:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_JQOVF_SLV) == (LL_ADC_FLAG_JQOVF_SLV)) ? 1UL : 0
7766:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7767:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7768:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7769:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 1 of the ADC master.
7770:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      AWD1_MST       LL_ADC_IsActiveFlag_MST_AWD1
7771:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7772:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7773:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7774:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7775:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD1(ADC_Common_TypeDef *ADCxy_COMMON)
7776:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7777:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD1_MST) == (LL_ADC_FLAG_AWD1_MST)) ? 1UL : 0UL
7778:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7779:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7780:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7781:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode analog watchdog 1 of the ADC slave.
7782:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      AWD1_SLV       LL_ADC_IsActiveFlag_SLV_AWD1
7783:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7784:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7785:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7786:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7787:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD1(ADC_Common_TypeDef *ADCxy_COMMON)
7788:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7789:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD1_SLV) == (LL_ADC_FLAG_AWD1_SLV)) ? 1UL : 0UL
7790:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7791:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7792:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7793:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 2 of the ADC master.
7794:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      AWD2_MST       LL_ADC_IsActiveFlag_MST_AWD2
7795:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7796:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7797:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7798:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7799:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD2(ADC_Common_TypeDef *ADCxy_COMMON)
7800:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7801:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD2_MST) == (LL_ADC_FLAG_AWD2_MST)) ? 1UL : 0UL
7802:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7803:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7804:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7805:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 2 of the ADC slave.
7806:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      AWD2_SLV       LL_ADC_IsActiveFlag_SLV_AWD2
7807:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7808:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7809:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7810:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7811:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD2(ADC_Common_TypeDef *ADCxy_COMMON)
7812:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7813:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD2_SLV) == (LL_ADC_FLAG_AWD2_SLV)) ? 1UL : 0UL
7814:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
ARM GAS  C:\usertemp\cca0PO6L.s 			page 300


7815:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7817:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 3 of the ADC master.
7818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      AWD3_MST       LL_ADC_IsActiveFlag_MST_AWD3
7819:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7820:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7821:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7822:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7823:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_MST_AWD3(ADC_Common_TypeDef *ADCxy_COMMON)
7824:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7825:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD3_MST) == (LL_ADC_FLAG_AWD3_MST)) ? 1UL : 0UL
7826:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7827:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7828:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Get flag multimode ADC analog watchdog 3 of the ADC slave.
7830:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll CSR      AWD3_SLV       LL_ADC_IsActiveFlag_SLV_AWD3
7831:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
7832:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
7833:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval State of bit (1 or 0).
7834:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7835:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_SLV_AWD3(ADC_Common_TypeDef *ADCxy_COMMON)
7836:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7837:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   return ((READ_BIT(ADCxy_COMMON->CSR, LL_ADC_FLAG_AWD3_SLV) == (LL_ADC_FLAG_AWD3_SLV)) ? 1UL : 0UL
7838:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7839:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7840:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7841:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @}
7842:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7843:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7844:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /** @defgroup ADC_LL_EF_IT_Management ADC IT management
7845:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @{
7846:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7847:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7848:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7849:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable ADC ready.
7850:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_EnableIT_ADRDY
7851:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7852:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7853:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7854:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_ADRDY(ADC_TypeDef *ADCx)
7855:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7856:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
7857:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7858:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7859:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7860:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of unitary conversion.
7861:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_EnableIT_EOC
7862:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7863:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7864:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7865:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOC(ADC_TypeDef *ADCx)
7866:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7867:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOC);
7868:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7869:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7870:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7871:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sequence conversions.
ARM GAS  C:\usertemp\cca0PO6L.s 			page 301


7872:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_EnableIT_EOS
7873:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7874:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7875:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7876:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOS(ADC_TypeDef *ADCx)
7877:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7878:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOS);
7879:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7880:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7881:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7882:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable ADC group regular interruption overrun.
7883:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_EnableIT_OVR
7884:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7885:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7886:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7887:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_OVR(ADC_TypeDef *ADCx)
7888:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7889:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_OVR);
7890:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7891:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7892:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7893:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sampling.
7894:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_EnableIT_EOSMP
7895:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7896:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7897:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7898:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOSMP(ADC_TypeDef *ADCx)
7899:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7900:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
7901:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7902:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7903:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7904:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected end of unitary conversion.
7905:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      JEOCIE         LL_ADC_EnableIT_JEOC
7906:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7907:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7908:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7909:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JEOC(ADC_TypeDef *ADCx)
7910:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7911:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JEOC);
7912:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7913:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7914:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7915:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected end of sequence conversions.
7916:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      JEOSIE         LL_ADC_EnableIT_JEOS
7917:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7918:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7919:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JEOS(ADC_TypeDef *ADCx)
7921:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7922:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JEOS);
7923:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7924:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7925:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7926:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable interruption ADC group injected context queue overflow.
7927:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      JQOVFIE        LL_ADC_EnableIT_JQOVF
7928:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\usertemp\cca0PO6L.s 			page 302


7929:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7930:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7931:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_JQOVF(ADC_TypeDef *ADCx)
7932:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7933:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_JQOVF);
7934:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7935:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7936:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7937:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 1.
7938:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_EnableIT_AWD1
7939:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7940:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7941:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7942:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD1(ADC_TypeDef *ADCx)
7943:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7944:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD1);
7945:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7946:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7947:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 2.
7949:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_EnableIT_AWD2
7950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7951:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7952:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7953:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD2(ADC_TypeDef *ADCx)
7954:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7955:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD2);
7956:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7957:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7958:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7959:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 3.
7960:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_EnableIT_AWD3
7961:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7962:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7963:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7964:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD3(ADC_TypeDef *ADCx)
7965:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7966:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD3);
7967:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7968:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7969:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7970:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable interruption ADC ready.
7971:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_DisableIT_ADRDY
7972:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7973:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7974:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7975:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_ADRDY(ADC_TypeDef *ADCx)
7976:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7977:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
7978:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7979:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7980:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7981:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
7982:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_DisableIT_EOC
7983:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7984:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7985:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
ARM GAS  C:\usertemp\cca0PO6L.s 			page 303


7986:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOC(ADC_TypeDef *ADCx)
7987:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7988:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOC);
7989:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
7990:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
7991:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
7992:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sequence conversions.
7993:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_DisableIT_EOS
7994:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
7995:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
7996:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
7997:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOS(ADC_TypeDef *ADCx)
7998:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
7999:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOS);
8000:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
8001:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
8002:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
8003:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular overrun.
8004:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_DisableIT_OVR
8005:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
8006:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
8007:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
8008:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_OVR(ADC_TypeDef *ADCx)
8009:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
8010:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_OVR);
8011:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
8012:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
8013:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
8014:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sampling.
8015:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_DisableIT_EOSMP
8016:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
8017:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
8018:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
8019:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOSMP(ADC_TypeDef *ADCx)
8020:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
8021:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
8022:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
8023:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
8024:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
8025:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
8026:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      JEOCIE         LL_ADC_DisableIT_JEOC
8027:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
8028:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
8029:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
8030:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JEOC(ADC_TypeDef *ADCx)
8031:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
8032:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JEOC);
8033:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
8034:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
8035:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
8036:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable interruption ADC group injected end of sequence conversions.
8037:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      JEOSIE         LL_ADC_DisableIT_JEOS
8038:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
8039:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
8040:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
8041:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JEOS(ADC_TypeDef *ADCx)
8042:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
ARM GAS  C:\usertemp\cca0PO6L.s 			page 304


8043:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JEOS);
8044:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
8045:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
8046:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
8047:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable interruption ADC group injected context queue overflow.
8048:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      JQOVFIE        LL_ADC_DisableIT_JQOVF
8049:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
8050:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
8051:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
8052:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_JQOVF(ADC_TypeDef *ADCx)
8053:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
8054:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_JQOVF);
8055:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
8056:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
8057:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
8058:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 1.
8059:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_DisableIT_AWD1
8060:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
8061:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
8062:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
8063:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD1(ADC_TypeDef *ADCx)
 3459              		.loc 2 8063 22 view .LVU1018
 3460              	.LBB413:
8064:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
8065:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD1);
 3461              		.loc 2 8065 3 view .LVU1019
 3462 01be 5368     		ldr	r3, [r2, #4]
 3463 01c0 23F08003 		bic	r3, r3, #128
 3464 01c4 5360     		str	r3, [r2, #4]
 3465              	.LVL269:
 3466              		.loc 2 8065 3 is_stmt 0 view .LVU1020
 3467              	.LBE413:
 3468              	.LBE412:
3135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 3469              		.loc 1 3135 21 view .LVU1021
 3470 01c6 0020     		movs	r0, #0
 3471              	.LBB415:
 3472              	.LBB414:
8066:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3473              		.loc 2 8066 1 view .LVU1022
 3474 01c8 28E1     		b	.L241
 3475              	.LVL270:
 3476              	.L239:
 3477              		.loc 2 8066 1 view .LVU1023
 3478              	.LBE414:
 3479              	.LBE415:
3250:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3480              		.loc 1 3250 36 discriminator 5 view .LVU1024
 3481 01ca 6969     		ldr	r1, [r5, #20]
 3482 01cc DB68     		ldr	r3, [r3, #12]
 3483 01ce 9B08     		lsrs	r3, r3, #2
 3484 01d0 03F00403 		and	r3, r3, #4
 3485 01d4 5B00     		lsls	r3, r3, #1
 3486 01d6 9940     		lsls	r1, r1, r3
 3487 01d8 DAE7     		b	.L238
 3488              	.LVL271:
 3489              	.L282:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 305


3285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 3490              		.loc 1 3285 9 is_stmt 1 view .LVU1025
 3491 01da 2268     		ldr	r2, [r4]
 3492              	.LVL272:
 3493              	.LBB416:
 3494              	.LBI416:
7942:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3495              		.loc 2 7942 22 view .LVU1026
 3496              	.LBB417:
7944:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3497              		.loc 2 7944 3 view .LVU1027
 3498 01dc 5368     		ldr	r3, [r2, #4]
 3499 01de 43F08003 		orr	r3, r3, #128
 3500 01e2 5360     		str	r3, [r2, #4]
 3501              	.LVL273:
7944:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3502              		.loc 2 7944 3 is_stmt 0 view .LVU1028
 3503              	.LBE417:
 3504              	.LBE416:
3135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 3505              		.loc 1 3135 21 view .LVU1029
 3506 01e4 0020     		movs	r0, #0
 3507              	.LBB419:
 3508              	.LBB418:
7945:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3509              		.loc 2 7945 1 view .LVU1030
 3510 01e6 19E1     		b	.L241
 3511              	.LVL274:
 3512              	.L243:
7945:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 3513              		.loc 2 7945 1 view .LVU1031
 3514              	.LBE418:
 3515              	.LBE419:
3295:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3516              		.loc 1 3295 7 view .LVU1032
 3517 01e8 B3F1C07F 		cmp	r3, #25165824
 3518 01ec 3FF437AF 		beq	.L244
 3519 01f0 B3F1E07F 		cmp	r3, #29360128
 3520 01f4 16D0     		beq	.L242
 3521              	.L245:
3342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
 3522              		.loc 1 3342 11 is_stmt 1 view .LVU1033
 3523 01f6 0022     		movs	r2, #0
 3524              	.LVL275:
3342:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
 3525              		.loc 1 3342 11 is_stmt 0 view .LVU1034
 3526 01f8 FFF7FEFF 		bl	LL_ADC_SetAnalogWDMonitChannels
 3527              	.LVL276:
3343:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 3528              		.loc 1 3343 11 is_stmt 1 view .LVU1035
 3529              	.L250:
3348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 3530              		.loc 1 3348 7 view .LVU1036
3348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 3531              		.loc 1 3348 36 is_stmt 0 view .LVU1037
 3532 01fc 354B     		ldr	r3, .L290+12
 3533 01fe 1B68     		ldr	r3, [r3]
ARM GAS  C:\usertemp\cca0PO6L.s 			page 306


 3534 0200 03F07043 		and	r3, r3, #-268435456
 3535 0204 B3F1805F 		cmp	r3, #268435456
 3536 0208 77D0     		beq	.L283
3348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 3537              		.loc 1 3348 36 discriminator 2 view .LVU1038
 3538 020a 2268     		ldr	r2, [r4]
 3539 020c D368     		ldr	r3, [r2, #12]
 3540 020e 13F0100F 		tst	r3, #16
 3541 0212 40F08C80 		bne	.L263
3348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 3542              		.loc 1 3348 36 discriminator 4 view .LVU1039
 3543 0216 2B69     		ldr	r3, [r5, #16]
 3544 0218 D268     		ldr	r2, [r2, #12]
 3545 021a C2F38202 		ubfx	r2, r2, #2, #3
 3546 021e 5200     		lsls	r2, r2, #1
 3547 0220 9340     		lsls	r3, r3, r2
 3548 0222 71E0     		b	.L262
 3549              	.LVL277:
 3550              	.L242:
3302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 3551              		.loc 1 3302 11 is_stmt 1 view .LVU1040
3302:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 3552              		.loc 1 3302 14 is_stmt 0 view .LVU1041
 3553 0224 294B     		ldr	r3, .L290+4
 3554 0226 9942     		cmp	r1, r3
 3555 0228 08D0     		beq	.L284
3308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 3556              		.loc 1 3308 13 is_stmt 1 view .LVU1042
 3557 022a AB68     		ldr	r3, [r5, #8]
 3558 022c C3F31302 		ubfx	r2, r3, #0, #20
 3559              	.LVL278:
3308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 3560              		.loc 1 3308 13 is_stmt 0 view .LVU1043
 3561 0230 F2B9     		cbnz	r2, .L251
3308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 3562              		.loc 1 3308 13 discriminator 1 view .LVU1044
 3563 0232 C3F38463 		ubfx	r3, r3, #26, #5
 3564 0236 0122     		movs	r2, #1
 3565 0238 9A40     		lsls	r2, r2, r3
 3566 023a 22E0     		b	.L252
 3567              	.LVL279:
 3568              	.L284:
3304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 3569              		.loc 1 3304 13 is_stmt 1 view .LVU1045
 3570 023c AB68     		ldr	r3, [r5, #8]
 3571 023e C3F31302 		ubfx	r2, r3, #0, #20
 3572              	.LVL280:
3304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 3573              		.loc 1 3304 13 is_stmt 0 view .LVU1046
 3574 0242 4AB9     		cbnz	r2, .L247
3304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 3575              		.loc 1 3304 13 discriminator 1 view .LVU1047
 3576 0244 C3F38463 		ubfx	r3, r3, #26, #5
 3577 0248 0122     		movs	r2, #1
 3578 024a 9A40     		lsls	r2, r2, r3
 3579              	.L248:
3304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
ARM GAS  C:\usertemp\cca0PO6L.s 			page 307


 3580              		.loc 1 3304 13 discriminator 4 view .LVU1048
 3581 024c D0F8A030 		ldr	r3, [r0, #160]
 3582 0250 1343     		orrs	r3, r3, r2
 3583 0252 C0F8A030 		str	r3, [r0, #160]
 3584 0256 D1E7     		b	.L250
 3585              	.L247:
 3586              	.LVL281:
 3587              	.LBB420:
 3588              	.LBI420:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3589              		.loc 3 1048 31 is_stmt 1 view .LVU1049
 3590              	.LBB421:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3591              		.loc 3 1050 3 view .LVU1050
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3592              		.loc 3 1055 4 view .LVU1051
 3593              		.syntax unified
 3594              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3595 0258 93FAA3F3 		rbit r3, r3
 3596              	@ 0 "" 2
 3597              	.LVL282:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3598              		.loc 3 1068 3 view .LVU1052
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3599              		.loc 3 1068 3 is_stmt 0 view .LVU1053
 3600              		.thumb
 3601              		.syntax unified
 3602              	.LBE421:
 3603              	.LBE420:
 3604              	.LBB422:
 3605              	.LBI422:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3606              		.loc 3 1078 30 is_stmt 1 view .LVU1054
 3607              	.LBB423:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3608              		.loc 3 1089 3 view .LVU1055
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3609              		.loc 3 1089 6 is_stmt 0 view .LVU1056
 3610 025c 33B1     		cbz	r3, .L273
 3611              		.loc 3 1093 3 is_stmt 1 view .LVU1057
 3612              		.loc 3 1093 10 is_stmt 0 discriminator 1 view .LVU1058
 3613 025e B3FA83F3 		clz	r3, r3
 3614              	.LVL283:
 3615              	.L249:
 3616              		.loc 3 1093 10 discriminator 1 view .LVU1059
 3617              	.LBE423:
 3618              	.LBE422:
3304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 3619              		.loc 1 3304 13 discriminator 2 view .LVU1060
 3620 0262 03F01F03 		and	r3, r3, #31
 3621 0266 0122     		movs	r2, #1
 3622 0268 9A40     		lsls	r2, r2, r3
 3623 026a EFE7     		b	.L248
 3624              	.LVL284:
 3625              	.L273:
 3626              	.LBB425:
 3627              	.LBB424:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 308


1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3628              		.loc 3 1091 12 view .LVU1061
 3629 026c 2023     		movs	r3, #32
 3630              	.LVL285:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3631              		.loc 3 1091 12 view .LVU1062
 3632 026e F8E7     		b	.L249
 3633              	.LVL286:
 3634              	.L251:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3635              		.loc 3 1091 12 view .LVU1063
 3636              	.LBE424:
 3637              	.LBE425:
 3638              	.LBB426:
 3639              	.LBI426:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3640              		.loc 3 1048 31 is_stmt 1 view .LVU1064
 3641              	.LBB427:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3642              		.loc 3 1050 3 view .LVU1065
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3643              		.loc 3 1055 4 view .LVU1066
 3644              		.syntax unified
 3645              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3646 0270 93FAA3F3 		rbit r3, r3
 3647              	@ 0 "" 2
 3648              	.LVL287:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3649              		.loc 3 1068 3 view .LVU1067
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3650              		.loc 3 1068 3 is_stmt 0 view .LVU1068
 3651              		.thumb
 3652              		.syntax unified
 3653              	.LBE427:
 3654              	.LBE426:
 3655              	.LBB428:
 3656              	.LBI428:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3657              		.loc 3 1078 30 is_stmt 1 view .LVU1069
 3658              	.LBB429:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3659              		.loc 3 1089 3 view .LVU1070
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3660              		.loc 3 1089 6 is_stmt 0 view .LVU1071
 3661 0274 5BB1     		cbz	r3, .L274
 3662              		.loc 3 1093 3 is_stmt 1 view .LVU1072
 3663              		.loc 3 1093 10 is_stmt 0 discriminator 1 view .LVU1073
 3664 0276 B3FA83F3 		clz	r3, r3
 3665              	.LVL288:
 3666              	.L253:
 3667              		.loc 3 1093 10 discriminator 1 view .LVU1074
 3668              	.LBE429:
 3669              	.LBE428:
3308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 3670              		.loc 1 3308 13 discriminator 2 view .LVU1075
 3671 027a 03F01F03 		and	r3, r3, #31
 3672 027e 0122     		movs	r2, #1
ARM GAS  C:\usertemp\cca0PO6L.s 			page 309


 3673 0280 9A40     		lsls	r2, r2, r3
 3674              	.L252:
3308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 3675              		.loc 1 3308 13 discriminator 4 view .LVU1076
 3676 0282 D0F8A430 		ldr	r3, [r0, #164]
 3677 0286 1343     		orrs	r3, r3, r2
 3678 0288 C0F8A430 		str	r3, [r0, #164]
 3679 028c B6E7     		b	.L250
 3680              	.LVL289:
 3681              	.L274:
 3682              	.LBB431:
 3683              	.LBB430:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3684              		.loc 3 1091 12 view .LVU1077
 3685 028e 2023     		movs	r3, #32
 3686              	.LVL290:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3687              		.loc 3 1091 12 view .LVU1078
 3688 0290 F3E7     		b	.L253
 3689              	.LVL291:
 3690              	.L279:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3691              		.loc 3 1091 12 view .LVU1079
 3692              	.LBE430:
 3693              	.LBE431:
3330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 3694              		.loc 1 3330 15 is_stmt 1 view .LVU1080
 3695 0292 AB68     		ldr	r3, [r5, #8]
 3696 0294 C3F31302 		ubfx	r2, r3, #0, #20
 3697              	.LVL292:
3330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 3698              		.loc 1 3330 15 is_stmt 0 view .LVU1081
 3699 0298 4AB9     		cbnz	r2, .L255
3330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 3700              		.loc 1 3330 15 discriminator 1 view .LVU1082
 3701 029a C3F38463 		ubfx	r3, r3, #26, #5
 3702 029e 0122     		movs	r2, #1
 3703 02a0 9A40     		lsls	r2, r2, r3
 3704              	.L256:
3330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 3705              		.loc 1 3330 15 discriminator 4 view .LVU1083
 3706 02a2 D0F8A030 		ldr	r3, [r0, #160]
 3707 02a6 1343     		orrs	r3, r3, r2
 3708 02a8 C0F8A030 		str	r3, [r0, #160]
 3709 02ac A6E7     		b	.L250
 3710              	.L255:
 3711              	.LVL293:
 3712              	.LBB432:
 3713              	.LBI432:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3714              		.loc 3 1048 31 is_stmt 1 view .LVU1084
 3715              	.LBB433:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3716              		.loc 3 1050 3 view .LVU1085
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3717              		.loc 3 1055 4 view .LVU1086
 3718              		.syntax unified
ARM GAS  C:\usertemp\cca0PO6L.s 			page 310


 3719              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3720 02ae 93FAA3F3 		rbit r3, r3
 3721              	@ 0 "" 2
 3722              	.LVL294:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3723              		.loc 3 1068 3 view .LVU1087
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3724              		.loc 3 1068 3 is_stmt 0 view .LVU1088
 3725              		.thumb
 3726              		.syntax unified
 3727              	.LBE433:
 3728              	.LBE432:
 3729              	.LBB434:
 3730              	.LBI434:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3731              		.loc 3 1078 30 is_stmt 1 view .LVU1089
 3732              	.LBB435:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3733              		.loc 3 1089 3 view .LVU1090
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3734              		.loc 3 1089 6 is_stmt 0 view .LVU1091
 3735 02b2 33B1     		cbz	r3, .L275
 3736              		.loc 3 1093 3 is_stmt 1 view .LVU1092
 3737              		.loc 3 1093 10 is_stmt 0 discriminator 1 view .LVU1093
 3738 02b4 B3FA83F3 		clz	r3, r3
 3739              	.LVL295:
 3740              	.L257:
 3741              		.loc 3 1093 10 discriminator 1 view .LVU1094
 3742              	.LBE435:
 3743              	.LBE434:
3330:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 3744              		.loc 1 3330 15 discriminator 2 view .LVU1095
 3745 02b8 03F01F03 		and	r3, r3, #31
 3746 02bc 0122     		movs	r2, #1
 3747 02be 9A40     		lsls	r2, r2, r3
 3748 02c0 EFE7     		b	.L256
 3749              	.LVL296:
 3750              	.L275:
 3751              	.LBB437:
 3752              	.LBB436:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3753              		.loc 3 1091 12 view .LVU1096
 3754 02c2 2023     		movs	r3, #32
 3755              	.LVL297:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3756              		.loc 3 1091 12 view .LVU1097
 3757 02c4 F8E7     		b	.L257
 3758              	.L291:
 3759 02c6 00BF     		.align	2
 3760              	.L290:
 3761 02c8 0000C07D 		.word	2109734912
 3762 02cc FFFF1F00 		.word	2097151
 3763 02d0 FFFF3F82 		.word	-2109734913
 3764 02d4 0010005C 		.word	1543507968
 3765              	.LVL298:
 3766              	.L258:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
ARM GAS  C:\usertemp\cca0PO6L.s 			page 311


 3767              		.loc 3 1091 12 view .LVU1098
 3768              	.LBE436:
 3769              	.LBE437:
 3770              	.LBB438:
 3771              	.LBI438:
1048:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3772              		.loc 3 1048 31 is_stmt 1 view .LVU1099
 3773              	.LBB439:
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3774              		.loc 3 1050 3 view .LVU1100
1055:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3775              		.loc 3 1055 4 view .LVU1101
 3776              		.syntax unified
 3777              	@ 1055 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3778 02d8 93FAA3F3 		rbit r3, r3
 3779              	@ 0 "" 2
 3780              	.LVL299:
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3781              		.loc 3 1068 3 view .LVU1102
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3782              		.loc 3 1068 3 is_stmt 0 view .LVU1103
 3783              		.thumb
 3784              		.syntax unified
 3785              	.LBE439:
 3786              	.LBE438:
 3787              	.LBB440:
 3788              	.LBI440:
1078:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3789              		.loc 3 1078 30 is_stmt 1 view .LVU1104
 3790              	.LBB441:
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3791              		.loc 3 1089 3 view .LVU1105
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3792              		.loc 3 1089 6 is_stmt 0 view .LVU1106
 3793 02dc 5BB1     		cbz	r3, .L276
 3794              		.loc 3 1093 3 is_stmt 1 view .LVU1107
 3795              		.loc 3 1093 10 is_stmt 0 discriminator 1 view .LVU1108
 3796 02de B3FA83F3 		clz	r3, r3
 3797              	.LVL300:
 3798              	.L260:
 3799              		.loc 3 1093 10 discriminator 1 view .LVU1109
 3800              	.LBE441:
 3801              	.LBE440:
3334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 3802              		.loc 1 3334 15 discriminator 2 view .LVU1110
 3803 02e2 03F01F03 		and	r3, r3, #31
 3804 02e6 0122     		movs	r2, #1
 3805 02e8 9A40     		lsls	r2, r2, r3
 3806              	.L259:
3334:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             }
 3807              		.loc 1 3334 15 discriminator 4 view .LVU1111
 3808 02ea D0F8A430 		ldr	r3, [r0, #164]
 3809 02ee 1343     		orrs	r3, r3, r2
 3810 02f0 C0F8A430 		str	r3, [r0, #164]
 3811 02f4 82E7     		b	.L250
 3812              	.LVL301:
 3813              	.L276:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 312


 3814              	.LBB443:
 3815              	.LBB442:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3816              		.loc 3 1091 12 view .LVU1112
 3817 02f6 2023     		movs	r3, #32
 3818              	.LVL302:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3819              		.loc 3 1091 12 view .LVU1113
 3820 02f8 F3E7     		b	.L260
 3821              	.LVL303:
 3822              	.L283:
1091:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3823              		.loc 3 1091 12 view .LVU1114
 3824              	.LBE442:
 3825              	.LBE443:
3348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 3826              		.loc 1 3348 36 discriminator 1 view .LVU1115
 3827 02fa 2B69     		ldr	r3, [r5, #16]
 3828 02fc 2268     		ldr	r2, [r4]
 3829 02fe D268     		ldr	r2, [r2, #12]
 3830 0300 C2F38202 		ubfx	r2, r2, #2, #3
 3831 0304 5200     		lsls	r2, r2, #1
 3832 0306 9340     		lsls	r3, r3, r2
 3833              	.L262:
 3834              	.LVL304:
3349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3835              		.loc 1 3349 7 is_stmt 1 view .LVU1116
3349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3836              		.loc 1 3349 36 is_stmt 0 view .LVU1117
 3837 0308 474A     		ldr	r2, .L292
 3838 030a 1268     		ldr	r2, [r2]
 3839 030c 02F07042 		and	r2, r2, #-268435456
 3840 0310 B2F1805F 		cmp	r2, #268435456
 3841 0314 13D0     		beq	.L285
3349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3842              		.loc 1 3349 36 discriminator 2 view .LVU1118
 3843 0316 2168     		ldr	r1, [r4]
 3844 0318 CA68     		ldr	r2, [r1, #12]
 3845 031a 12F0100F 		tst	r2, #16
 3846 031e 3FD1     		bne	.L266
3349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3847              		.loc 1 3349 36 discriminator 4 view .LVU1119
 3848 0320 6A69     		ldr	r2, [r5, #20]
 3849 0322 C968     		ldr	r1, [r1, #12]
 3850 0324 C1F38201 		ubfx	r1, r1, #2, #3
 3851 0328 4900     		lsls	r1, r1, #1
 3852 032a 8A40     		lsls	r2, r2, r1
 3853 032c 0EE0     		b	.L265
 3854              	.LVL305:
 3855              	.L263:
3348:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       tmpAWDLowThresholdShifted  = ADC_AWD23THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowTh
 3856              		.loc 1 3348 36 discriminator 5 view .LVU1120
 3857 032e 2B69     		ldr	r3, [r5, #16]
 3858 0330 D268     		ldr	r2, [r2, #12]
 3859 0332 9208     		lsrs	r2, r2, #2
 3860 0334 02F00402 		and	r2, r2, #4
 3861 0338 5200     		lsls	r2, r2, #1
ARM GAS  C:\usertemp\cca0PO6L.s 			page 313


 3862 033a 9340     		lsls	r3, r3, r2
 3863 033c E4E7     		b	.L262
 3864              	.LVL306:
 3865              	.L285:
3349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3866              		.loc 1 3349 36 discriminator 1 view .LVU1121
 3867 033e 6A69     		ldr	r2, [r5, #20]
 3868 0340 2168     		ldr	r1, [r4]
 3869 0342 C968     		ldr	r1, [r1, #12]
 3870 0344 C1F38201 		ubfx	r1, r1, #2, #3
 3871 0348 4900     		lsls	r1, r1, #1
 3872 034a 8A40     		lsls	r2, r2, r1
 3873              	.L265:
 3874              	.LVL307:
3387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3875              		.loc 1 3387 7 is_stmt 1 view .LVU1122
3387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3876              		.loc 1 3387 26 is_stmt 0 view .LVU1123
 3877 034c 2868     		ldr	r0, [r5]
3387:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3878              		.loc 1 3387 10 view .LVU1124
 3879 034e 3749     		ldr	r1, .L292+4
 3880 0350 8842     		cmp	r0, r1
 3881 0352 2DD0     		beq	.L286
3396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->HTR3,  ADC_HTR_HT, tmpAWDHighThresholdShifted);
 3882              		.loc 1 3396 9 is_stmt 1 view .LVU1125
 3883 0354 2068     		ldr	r0, [r4]
 3884 0356 D0F8B810 		ldr	r1, [r0, #184]
 3885 035a 01F07C41 		and	r1, r1, #-67108864
 3886 035e 0A43     		orrs	r2, r2, r1
 3887              	.LVL308:
3396:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->HTR3,  ADC_HTR_HT, tmpAWDHighThresholdShifted);
 3888              		.loc 1 3396 9 is_stmt 0 view .LVU1126
 3889 0360 C0F8B820 		str	r2, [r0, #184]
3397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 3890              		.loc 1 3397 9 is_stmt 1 view .LVU1127
 3891 0364 2168     		ldr	r1, [r4]
 3892 0366 D1F8BC20 		ldr	r2, [r1, #188]
 3893 036a 02F07C42 		and	r2, r2, #-67108864
 3894 036e 1343     		orrs	r3, r3, r2
 3895              	.LVL309:
3397:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 3896              		.loc 1 3397 9 is_stmt 0 view .LVU1128
 3897 0370 C1F8BC30 		str	r3, [r1, #188]
 3898              	.L268:
3401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3899              		.loc 1 3401 7 is_stmt 1 view .LVU1129
3401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3900              		.loc 1 3401 26 is_stmt 0 view .LVU1130
 3901 0374 2A68     		ldr	r2, [r5]
3401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 3902              		.loc 1 3401 10 view .LVU1131
 3903 0376 2D4B     		ldr	r3, .L292+4
 3904 0378 9A42     		cmp	r2, r3
 3905 037a 2AD0     		beq	.L287
3426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3906              		.loc 1 3426 9 is_stmt 1 view .LVU1132
ARM GAS  C:\usertemp\cca0PO6L.s 			page 314


 3907 037c 636D     		ldr	r3, [r4, #84]
 3908 037e 23F48023 		bic	r3, r3, #262144
 3909 0382 6365     		str	r3, [r4, #84]
3432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3910              		.loc 1 3432 9 view .LVU1133
 3911 0384 2368     		ldr	r3, [r4]
 3912              	.LVL310:
 3913              	.LBB444:
 3914              	.LBI444:
7571:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3915              		.loc 2 7571 22 view .LVU1134
 3916              	.LBB445:
7573:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3917              		.loc 2 7573 3 view .LVU1135
 3918 0386 4FF40072 		mov	r2, #512
 3919 038a 1A60     		str	r2, [r3]
 3920              	.LVL311:
7573:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3921              		.loc 2 7573 3 is_stmt 0 view .LVU1136
 3922              	.LBE445:
 3923              	.LBE444:
3435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3924              		.loc 1 3435 9 is_stmt 1 view .LVU1137
3435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3925              		.loc 1 3435 28 is_stmt 0 view .LVU1138
 3926 038c 2B7B     		ldrb	r3, [r5, #12]	@ zero_extendqisi2
3435:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 3927              		.loc 1 3435 12 view .LVU1139
 3928 038e 012B     		cmp	r3, #1
 3929 0390 38D0     		beq	.L288
3441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 3930              		.loc 1 3441 11 is_stmt 1 view .LVU1140
 3931 0392 2268     		ldr	r2, [r4]
 3932              	.LVL312:
 3933              	.LBB446:
 3934              	.LBI446:
8067:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
8068:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
8069:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 2.
8070:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_DisableIT_AWD2
8071:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
8072:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
8073:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
8074:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD2(ADC_TypeDef *ADCx)
8075:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
8076:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD2);
8077:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
8078:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
8079:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** /**
8080:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 3.
8081:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_DisableIT_AWD3
8082:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @param  ADCx ADC instance
8083:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   * @retval None
8084:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   */
8085:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD3(ADC_TypeDef *ADCx)
 3935              		.loc 2 8085 22 view .LVU1141
 3936              	.LBB447:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 315


8086:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
8087:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD3);
 3937              		.loc 2 8087 3 view .LVU1142
 3938 0394 5368     		ldr	r3, [r2, #4]
 3939 0396 23F40073 		bic	r3, r3, #512
 3940 039a 5360     		str	r3, [r2, #4]
 3941              	.LVL313:
 3942              		.loc 2 8087 3 is_stmt 0 view .LVU1143
 3943              	.LBE447:
 3944              	.LBE446:
3135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 3945              		.loc 1 3135 21 view .LVU1144
 3946 039c 0020     		movs	r0, #0
 3947              	.LBB449:
 3948              	.LBB448:
8088:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3949              		.loc 2 8088 1 view .LVU1145
 3950 039e 3DE0     		b	.L241
 3951              	.LVL314:
 3952              	.L266:
 3953              		.loc 2 8088 1 view .LVU1146
 3954              	.LBE448:
 3955              	.LBE449:
3349:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3956              		.loc 1 3349 36 discriminator 5 view .LVU1147
 3957 03a0 6A69     		ldr	r2, [r5, #20]
 3958 03a2 C968     		ldr	r1, [r1, #12]
 3959 03a4 8908     		lsrs	r1, r1, #2
 3960 03a6 01F00401 		and	r1, r1, #4
 3961 03aa 4900     		lsls	r1, r1, #1
 3962 03ac 8A40     		lsls	r2, r2, r1
 3963 03ae CDE7     		b	.L265
 3964              	.LVL315:
 3965              	.L286:
3390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->HTR2,  ADC_HTR_HT, tmpAWDHighThresholdShifted);
 3966              		.loc 1 3390 9 is_stmt 1 view .LVU1148
 3967 03b0 2068     		ldr	r0, [r4]
 3968 03b2 D0F8B010 		ldr	r1, [r0, #176]
 3969 03b6 01F07C41 		and	r1, r1, #-67108864
 3970 03ba 0A43     		orrs	r2, r2, r1
 3971              	.LVL316:
3390:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->HTR2,  ADC_HTR_HT, tmpAWDHighThresholdShifted);
 3972              		.loc 1 3390 9 is_stmt 0 view .LVU1149
 3973 03bc C0F8B020 		str	r2, [r0, #176]
3391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 3974              		.loc 1 3391 9 is_stmt 1 view .LVU1150
 3975 03c0 2168     		ldr	r1, [r4]
 3976 03c2 D1F8B420 		ldr	r2, [r1, #180]
 3977 03c6 02F07C42 		and	r2, r2, #-67108864
 3978 03ca 1343     		orrs	r3, r3, r2
 3979              	.LVL317:
3391:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 3980              		.loc 1 3391 9 is_stmt 0 view .LVU1151
 3981 03cc C1F8B430 		str	r3, [r1, #180]
 3982 03d0 D0E7     		b	.L268
 3983              	.L287:
3404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 316


 3984              		.loc 1 3404 9 is_stmt 1 view .LVU1152
 3985 03d2 636D     		ldr	r3, [r4, #84]
 3986 03d4 23F40033 		bic	r3, r3, #131072
 3987 03d8 6365     		str	r3, [r4, #84]
3410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 3988              		.loc 1 3410 9 view .LVU1153
 3989 03da 2368     		ldr	r3, [r4]
 3990              	.LVL318:
 3991              	.LBB450:
 3992              	.LBI450:
7560:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 3993              		.loc 2 7560 22 view .LVU1154
 3994              	.LBB451:
7562:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3995              		.loc 2 7562 3 view .LVU1155
 3996 03dc 4FF48072 		mov	r2, #256
 3997 03e0 1A60     		str	r2, [r3]
 3998              	.LVL319:
7562:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 3999              		.loc 2 7562 3 is_stmt 0 view .LVU1156
 4000              	.LBE451:
 4001              	.LBE450:
3413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4002              		.loc 1 3413 9 is_stmt 1 view .LVU1157
3413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4003              		.loc 1 3413 28 is_stmt 0 view .LVU1158
 4004 03e2 2B7B     		ldrb	r3, [r5, #12]	@ zero_extendqisi2
3413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4005              		.loc 1 3413 12 view .LVU1159
 4006 03e4 012B     		cmp	r3, #1
 4007 03e6 06D0     		beq	.L289
3419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 4008              		.loc 1 3419 11 is_stmt 1 view .LVU1160
 4009 03e8 2268     		ldr	r2, [r4]
 4010              	.LVL320:
 4011              	.LBB452:
 4012              	.LBI452:
8074:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4013              		.loc 2 8074 22 view .LVU1161
 4014              	.LBB453:
8076:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4015              		.loc 2 8076 3 view .LVU1162
 4016 03ea 5368     		ldr	r3, [r2, #4]
 4017 03ec 23F48073 		bic	r3, r3, #256
 4018 03f0 5360     		str	r3, [r2, #4]
 4019              	.LVL321:
8076:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4020              		.loc 2 8076 3 is_stmt 0 view .LVU1163
 4021              	.LBE453:
 4022              	.LBE452:
3135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 4023              		.loc 1 3135 21 view .LVU1164
 4024 03f2 0020     		movs	r0, #0
 4025              	.LBB455:
 4026              	.LBB454:
8077:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4027              		.loc 2 8077 1 view .LVU1165
ARM GAS  C:\usertemp\cca0PO6L.s 			page 317


 4028 03f4 12E0     		b	.L241
 4029              	.L289:
 4030              	.LBE454:
 4031              	.LBE455:
3415:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 4032              		.loc 1 3415 11 is_stmt 1 view .LVU1166
 4033 03f6 2268     		ldr	r2, [r4]
 4034              	.LVL322:
 4035              	.LBB456:
 4036              	.LBI456:
7953:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4037              		.loc 2 7953 22 view .LVU1167
 4038              	.LBB457:
7955:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4039              		.loc 2 7955 3 view .LVU1168
 4040 03f8 5368     		ldr	r3, [r2, #4]
 4041 03fa 43F48073 		orr	r3, r3, #256
 4042 03fe 5360     		str	r3, [r2, #4]
 4043              	.LVL323:
7955:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4044              		.loc 2 7955 3 is_stmt 0 view .LVU1169
 4045              	.LBE457:
 4046              	.LBE456:
3135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 4047              		.loc 1 3135 21 view .LVU1170
 4048 0400 0020     		movs	r0, #0
 4049              	.LBB459:
 4050              	.LBB458:
7956:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4051              		.loc 2 7956 1 view .LVU1171
 4052 0402 0BE0     		b	.L241
 4053              	.L288:
7956:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4054              		.loc 2 7956 1 view .LVU1172
 4055              	.LBE458:
 4056              	.LBE459:
3437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 4057              		.loc 1 3437 11 is_stmt 1 view .LVU1173
 4058 0404 2268     		ldr	r2, [r4]
 4059              	.LVL324:
 4060              	.LBB460:
 4061              	.LBI460:
7964:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4062              		.loc 2 7964 22 view .LVU1174
 4063              	.LBB461:
7966:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4064              		.loc 2 7966 3 view .LVU1175
 4065 0406 5368     		ldr	r3, [r2, #4]
 4066 0408 43F40073 		orr	r3, r3, #512
 4067 040c 5360     		str	r3, [r2, #4]
 4068              	.LVL325:
7966:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4069              		.loc 2 7966 3 is_stmt 0 view .LVU1176
 4070              	.LBE461:
 4071              	.LBE460:
3135:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 4072              		.loc 1 3135 21 view .LVU1177
ARM GAS  C:\usertemp\cca0PO6L.s 			page 318


 4073 040e 0020     		movs	r0, #0
 4074              	.LBB463:
 4075              	.LBB462:
7967:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4076              		.loc 2 7967 1 view .LVU1178
 4077 0410 04E0     		b	.L241
 4078              	.LVL326:
 4079              	.L223:
7967:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4080              		.loc 2 7967 1 view .LVU1179
 4081              	.LBE462:
 4082              	.LBE463:
3452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4083              		.loc 1 3452 5 is_stmt 1 view .LVU1180
 4084 0412 636D     		ldr	r3, [r4, #84]
 4085 0414 43F02003 		orr	r3, r3, #32
 4086 0418 6365     		str	r3, [r4, #84]
3454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 4087              		.loc 1 3454 5 view .LVU1181
 4088              	.LVL327:
3454:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 4089              		.loc 1 3454 20 is_stmt 0 view .LVU1182
 4090 041a 0120     		movs	r0, #1
 4091              	.LVL328:
 4092              	.L241:
3457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4093              		.loc 1 3457 3 is_stmt 1 view .LVU1183
3457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4094              		.loc 1 3457 3 view .LVU1184
 4095 041c 0023     		movs	r3, #0
 4096 041e 84F85030 		strb	r3, [r4, #80]
3457:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4097              		.loc 1 3457 3 view .LVU1185
3460:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 4098              		.loc 1 3460 3 view .LVU1186
 4099              	.LVL329:
 4100              	.L220:
3461:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4101              		.loc 1 3461 1 is_stmt 0 view .LVU1187
 4102 0422 38BD     		pop	{r3, r4, r5, pc}
 4103              	.LVL330:
 4104              	.L272:
3193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4105              		.loc 1 3193 3 discriminator 1 view .LVU1188
 4106 0424 0220     		movs	r0, #2
 4107              	.LVL331:
3193:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4108              		.loc 1 3193 3 discriminator 1 view .LVU1189
 4109 0426 FCE7     		b	.L220
 4110              	.L293:
 4111              		.align	2
 4112              	.L292:
 4113 0428 0010005C 		.word	1543507968
 4114 042c FFFF1F00 		.word	2097151
 4115              		.cfi_endproc
 4116              	.LFE352:
 4118              		.section	.text.HAL_ADC_GetState,"ax",%progbits
ARM GAS  C:\usertemp\cca0PO6L.s 			page 319


 4119              		.align	1
 4120              		.global	HAL_ADC_GetState
 4121              		.syntax unified
 4122              		.thumb
 4123              		.thumb_func
 4125              	HAL_ADC_GetState:
 4126              	.LVL332:
 4127              	.LFB353:
3496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
 4128              		.loc 1 3496 1 is_stmt 1 view -0
 4129              		.cfi_startproc
 4130              		@ args = 0, pretend = 0, frame = 0
 4131              		@ frame_needed = 0, uses_anonymous_args = 0
 4132              		@ link register save eliminated.
3498:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4133              		.loc 1 3498 3 view .LVU1191
3501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 4134              		.loc 1 3501 3 view .LVU1192
3501:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 4135              		.loc 1 3501 14 is_stmt 0 view .LVU1193
 4136 0000 406D     		ldr	r0, [r0, #84]
 4137              	.LVL333:
3502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4138              		.loc 1 3502 1 view .LVU1194
 4139 0002 7047     		bx	lr
 4140              		.cfi_endproc
 4141              	.LFE353:
 4143              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 4144              		.align	1
 4145              		.global	HAL_ADC_GetError
 4146              		.syntax unified
 4147              		.thumb
 4148              		.thumb_func
 4150              	HAL_ADC_GetError:
 4151              	.LVL334:
 4152              	.LFB354:
3510:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Check the parameters */
 4153              		.loc 1 3510 1 is_stmt 1 view -0
 4154              		.cfi_startproc
 4155              		@ args = 0, pretend = 0, frame = 0
 4156              		@ frame_needed = 0, uses_anonymous_args = 0
 4157              		@ link register save eliminated.
3512:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4158              		.loc 1 3512 3 view .LVU1196
3514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 4159              		.loc 1 3514 3 view .LVU1197
3514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 4160              		.loc 1 3514 14 is_stmt 0 view .LVU1198
 4161 0000 806D     		ldr	r0, [r0, #88]
 4162              	.LVL335:
3515:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4163              		.loc 1 3515 1 view .LVU1199
 4164 0002 7047     		bx	lr
 4165              		.cfi_endproc
 4166              	.LFE354:
 4168              		.section	.text.ADC_ConversionStop,"ax",%progbits
 4169              		.align	1
ARM GAS  C:\usertemp\cca0PO6L.s 			page 320


 4170              		.global	ADC_ConversionStop
 4171              		.syntax unified
 4172              		.thumb
 4173              		.thumb_func
 4175              	ADC_ConversionStop:
 4176              	.LVL336:
 4177              	.LFB355:
3540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart;
 4178              		.loc 1 3540 1 is_stmt 1 view -0
 4179              		.cfi_startproc
 4180              		@ args = 0, pretend = 0, frame = 0
 4181              		@ frame_needed = 0, uses_anonymous_args = 0
3540:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart;
 4182              		.loc 1 3540 1 is_stmt 0 view .LVU1201
 4183 0000 70B5     		push	{r4, r5, r6, lr}
 4184              	.LCFI17:
 4185              		.cfi_def_cfa_offset 16
 4186              		.cfi_offset 4, -16
 4187              		.cfi_offset 5, -12
 4188              		.cfi_offset 6, -8
 4189              		.cfi_offset 14, -4
 4190 0002 0446     		mov	r4, r0
3541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t Conversion_Timeout_CPU_cycles = 0UL;
 4191              		.loc 1 3541 3 is_stmt 1 view .LVU1202
3542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t conversion_group_reassigned = ConversionGroup;
 4192              		.loc 1 3542 3 view .LVU1203
 4193              	.LVL337:
3543:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_ADC_CR_ADSTART_JADSTART;
 4194              		.loc 1 3543 3 view .LVU1204
3544:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 4195              		.loc 1 3544 3 view .LVU1205
3545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 4196              		.loc 1 3545 3 view .LVU1206
3546:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4197              		.loc 1 3546 3 view .LVU1207
3549:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_CONVERSION_GROUP(ConversionGroup));
 4198              		.loc 1 3549 3 view .LVU1208
3550:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4199              		.loc 1 3550 3 view .LVU1209
3554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 4200              		.loc 1 3554 3 view .LVU1210
3554:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 4201              		.loc 1 3554 44 is_stmt 0 view .LVU1211
 4202 0004 0068     		ldr	r0, [r0]
 4203              	.LVL338:
 4204              	.LBB464:
 4205              	.LBI464:
6948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4206              		.loc 2 6948 26 is_stmt 1 view .LVU1212
 4207              	.LBB465:
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4208              		.loc 2 6950 3 view .LVU1213
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4209              		.loc 2 6950 12 is_stmt 0 view .LVU1214
 4210 0006 8268     		ldr	r2, [r0, #8]
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4211              		.loc 2 6950 74 view .LVU1215
ARM GAS  C:\usertemp\cca0PO6L.s 			page 321


 4212 0008 12F00402 		ands	r2, r2, #4
 4213 000c 00D0     		beq	.L297
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4214              		.loc 2 6950 74 discriminator 1 view .LVU1216
 4215 000e 0122     		movs	r2, #1
 4216              	.L297:
 4217              	.LVL339:
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4218              		.loc 2 6950 74 discriminator 1 view .LVU1217
 4219              	.LBE465:
 4220              	.LBE464:
3555:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if ((tmp_adc_is_conversion_on_going_regular != 0UL)
 4221              		.loc 1 3555 3 is_stmt 1 view .LVU1218
 4222              	.LBB466:
 4223              	.LBI466:
7143:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4224              		.loc 2 7143 26 view .LVU1219
 4225              	.LBB467:
7145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4226              		.loc 2 7145 3 view .LVU1220
7145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4227              		.loc 2 7145 12 is_stmt 0 view .LVU1221
 4228 0010 8368     		ldr	r3, [r0, #8]
7145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4229              		.loc 2 7145 76 view .LVU1222
 4230 0012 13F00803 		ands	r3, r3, #8
 4231 0016 00D0     		beq	.L298
7145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4232              		.loc 2 7145 76 discriminator 1 view .LVU1223
 4233 0018 0123     		movs	r3, #1
 4234              	.L298:
 4235              	.LVL340:
7145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4236              		.loc 2 7145 76 discriminator 1 view .LVU1224
 4237              	.LBE467:
 4238              	.LBE466:
3556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       || (tmp_adc_is_conversion_on_going_injected != 0UL)
 4239              		.loc 1 3556 3 is_stmt 1 view .LVU1225
3556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       || (tmp_adc_is_conversion_on_going_injected != 0UL)
 4240              		.loc 1 3556 6 is_stmt 0 view .LVU1226
 4241 001a 1343     		orrs	r3, r3, r2
 4242              	.LVL341:
3556:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       || (tmp_adc_is_conversion_on_going_injected != 0UL)
 4243              		.loc 1 3556 6 view .LVU1227
 4244 001c 69D0     		beq	.L311
3566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
 4245              		.loc 1 3566 5 is_stmt 1 view .LVU1228
3566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
 4246              		.loc 1 3566 25 is_stmt 0 view .LVU1229
 4247 001e C368     		ldr	r3, [r0, #12]
3566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         && (hadc->Init.ContinuousConvMode == ENABLE)
 4248              		.loc 1 3566 8 view .LVU1230
 4249 0020 13F0007F 		tst	r3, #33554432
 4250 0024 04D0     		beq	.L300
3568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        )
 4251              		.loc 1 3568 9 view .LVU1231
 4252 0026 A28A     		ldrh	r2, [r4, #20]
ARM GAS  C:\usertemp\cca0PO6L.s 			page 322


 4253              	.LVL342:
3568:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        )
 4254              		.loc 1 3568 9 view .LVU1232
 4255 0028 40F20113 		movw	r3, #257
 4256 002c 9A42     		cmp	r2, r3
 4257 002e 4AD0     		beq	.L317
 4258              	.L300:
3595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4259              		.loc 1 3595 5 is_stmt 1 view .LVU1233
3595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4260              		.loc 1 3595 8 is_stmt 0 view .LVU1234
 4261 0030 0229     		cmp	r1, #2
 4262 0032 10D0     		beq	.L305
 4263              	.LVL343:
 4264              	.L304:
3598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4265              		.loc 1 3598 7 is_stmt 1 view .LVU1235
3598:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4266              		.loc 1 3598 11 is_stmt 0 view .LVU1236
 4267 0034 2368     		ldr	r3, [r4]
 4268              	.LVL344:
 4269              	.LBB468:
 4270              	.LBI468:
6948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4271              		.loc 2 6948 26 is_stmt 1 view .LVU1237
 4272              	.LBB469:
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4273              		.loc 2 6950 3 view .LVU1238
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4274              		.loc 2 6950 12 is_stmt 0 view .LVU1239
 4275 0036 9A68     		ldr	r2, [r3, #8]
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4276              		.loc 2 6950 74 view .LVU1240
 4277 0038 12F0040F 		tst	r2, #4
 4278 003c 09D0     		beq	.L306
 4279              	.LVL345:
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4280              		.loc 2 6950 74 view .LVU1241
 4281              	.LBE469:
 4282              	.LBE468:
3600:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4283              		.loc 1 3600 9 is_stmt 1 view .LVU1242
 4284              	.LBB470:
 4285              	.LBI470:
6827:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4286              		.loc 2 6827 26 view .LVU1243
 4287              	.LBB471:
6829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4288              		.loc 2 6829 3 view .LVU1244
6829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4289              		.loc 2 6829 12 is_stmt 0 view .LVU1245
 4290 003e 9A68     		ldr	r2, [r3, #8]
6829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4291              		.loc 2 6829 70 view .LVU1246
 4292 0040 12F0020F 		tst	r2, #2
 4293 0044 05D1     		bne	.L306
 4294              	.LVL346:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 323


6829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4295              		.loc 2 6829 70 view .LVU1247
 4296              	.LBE471:
 4297              	.LBE470:
3603:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 4298              		.loc 1 3603 11 is_stmt 1 view .LVU1248
 4299              	.LBB472:
 4300              	.LBI472:
6932:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4301              		.loc 2 6932 22 view .LVU1249
 4302              	.LBB473:
6937:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4303              		.loc 2 6937 3 view .LVU1250
 4304 0046 9868     		ldr	r0, [r3, #8]
 4305 0048 2B4A     		ldr	r2, .L321
 4306 004a 0240     		ands	r2, r2, r0
 4307 004c 42F01002 		orr	r2, r2, #16
 4308 0050 9A60     		str	r2, [r3, #8]
 4309              	.LVL347:
 4310              	.L306:
6937:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4311              		.loc 2 6937 3 is_stmt 0 view .LVU1251
 4312              	.LBE473:
 4313              	.LBE472:
3609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4314              		.loc 1 3609 5 is_stmt 1 view .LVU1252
3609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4315              		.loc 1 3609 8 is_stmt 0 view .LVU1253
 4316 0052 0129     		cmp	r1, #1
 4317 0054 45D0     		beq	.L313
 4318              	.L305:
3612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4319              		.loc 1 3612 7 is_stmt 1 view .LVU1254
3612:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4320              		.loc 1 3612 11 is_stmt 0 view .LVU1255
 4321 0056 2368     		ldr	r3, [r4]
 4322              	.LVL348:
 4323              	.LBB474:
 4324              	.LBI474:
7143:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4325              		.loc 2 7143 26 is_stmt 1 view .LVU1256
 4326              	.LBB475:
7145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4327              		.loc 2 7145 3 view .LVU1257
7145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4328              		.loc 2 7145 12 is_stmt 0 view .LVU1258
 4329 0058 9A68     		ldr	r2, [r3, #8]
7145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4330              		.loc 2 7145 76 view .LVU1259
 4331 005a 12F0080F 		tst	r2, #8
 4332 005e 09D0     		beq	.L308
 4333              	.LVL349:
7145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4334              		.loc 2 7145 76 view .LVU1260
 4335              	.LBE475:
 4336              	.LBE474:
3614:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
ARM GAS  C:\usertemp\cca0PO6L.s 			page 324


 4337              		.loc 1 3614 9 is_stmt 1 view .LVU1261
 4338              	.LBB476:
 4339              	.LBI476:
6827:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4340              		.loc 2 6827 26 view .LVU1262
 4341              	.LBB477:
6829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4342              		.loc 2 6829 3 view .LVU1263
6829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4343              		.loc 2 6829 12 is_stmt 0 view .LVU1264
 4344 0060 9A68     		ldr	r2, [r3, #8]
6829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4345              		.loc 2 6829 70 view .LVU1265
 4346 0062 12F0020F 		tst	r2, #2
 4347 0066 05D1     		bne	.L308
 4348              	.LVL350:
6829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4349              		.loc 2 6829 70 view .LVU1266
 4350              	.LBE477:
 4351              	.LBE476:
3617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 4352              		.loc 1 3617 11 is_stmt 1 view .LVU1267
 4353              	.LBB478:
 4354              	.LBI478:
7127:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4355              		.loc 2 7127 22 view .LVU1268
 4356              	.LBB479:
7132:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4357              		.loc 2 7132 3 view .LVU1269
 4358 0068 9868     		ldr	r0, [r3, #8]
 4359 006a 234A     		ldr	r2, .L321
 4360 006c 0240     		ands	r2, r2, r0
 4361 006e 42F02002 		orr	r2, r2, #32
 4362 0072 9A60     		str	r2, [r3, #8]
 4363              	.LVL351:
 4364              	.L308:
7132:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4365              		.loc 2 7132 3 is_stmt 0 view .LVU1270
 4366              	.LBE479:
 4367              	.LBE478:
3623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4368              		.loc 1 3623 5 is_stmt 1 view .LVU1271
 4369 0074 0229     		cmp	r1, #2
 4370 0076 36D0     		beq	.L314
 4371 0078 0329     		cmp	r1, #3
 4372 007a 36D1     		bne	.L315
 4373 007c 0C25     		movs	r5, #12
 4374              	.L307:
 4375              	.LVL352:
3638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4376              		.loc 1 3638 5 view .LVU1272
3638:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4377              		.loc 1 3638 17 is_stmt 0 view .LVU1273
 4378 007e FFF7FEFF 		bl	HAL_GetTick
 4379              	.LVL353:
 4380 0082 0646     		mov	r6, r0
 4381              	.LVL354:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 325


3640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4382              		.loc 1 3640 5 is_stmt 1 view .LVU1274
 4383              	.L309:
3640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4384              		.loc 1 3640 63 view .LVU1275
3640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4385              		.loc 1 3640 17 is_stmt 0 view .LVU1276
 4386 0084 2368     		ldr	r3, [r4]
3640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4387              		.loc 1 3640 27 view .LVU1277
 4388 0086 9B68     		ldr	r3, [r3, #8]
3640:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4389              		.loc 1 3640 63 view .LVU1278
 4390 0088 2B42     		tst	r3, r5
 4391 008a 30D0     		beq	.L318
3642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4392              		.loc 1 3642 7 is_stmt 1 view .LVU1279
3642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4393              		.loc 1 3642 12 is_stmt 0 view .LVU1280
 4394 008c FFF7FEFF 		bl	HAL_GetTick
 4395              	.LVL355:
3642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4396              		.loc 1 3642 26 discriminator 1 view .LVU1281
 4397 0090 831B     		subs	r3, r0, r6
3642:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4398              		.loc 1 3642 10 discriminator 1 view .LVU1282
 4399 0092 052B     		cmp	r3, #5
 4400 0094 F6D9     		bls	.L309
3645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4401              		.loc 1 3645 9 is_stmt 1 view .LVU1283
3645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4402              		.loc 1 3645 17 is_stmt 0 view .LVU1284
 4403 0096 2368     		ldr	r3, [r4]
3645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4404              		.loc 1 3645 27 view .LVU1285
 4405 0098 9B68     		ldr	r3, [r3, #8]
3645:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4406              		.loc 1 3645 11 view .LVU1286
 4407 009a 2B42     		tst	r3, r5
 4408 009c F2D0     		beq	.L309
3648:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4409              		.loc 1 3648 11 is_stmt 1 view .LVU1287
 4410 009e 636D     		ldr	r3, [r4, #84]
 4411 00a0 43F01003 		orr	r3, r3, #16
 4412 00a4 6365     		str	r3, [r4, #84]
3651:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4413              		.loc 1 3651 11 view .LVU1288
 4414 00a6 A36D     		ldr	r3, [r4, #88]
 4415 00a8 43F00103 		orr	r3, r3, #1
 4416 00ac A365     		str	r3, [r4, #88]
3653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 4417              		.loc 1 3653 11 view .LVU1289
3653:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 4418              		.loc 1 3653 18 is_stmt 0 view .LVU1290
 4419 00ae 0120     		movs	r0, #1
 4420 00b0 20E0     		b	.L299
 4421              	.LVL356:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 326


 4422              	.L320:
3580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4423              		.loc 1 3580 11 is_stmt 1 view .LVU1291
 4424 00b2 636D     		ldr	r3, [r4, #84]
 4425              	.LVL357:
3580:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4426              		.loc 1 3580 11 is_stmt 0 view .LVU1292
 4427 00b4 43F01003 		orr	r3, r3, #16
 4428 00b8 6365     		str	r3, [r4, #84]
3583:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4429              		.loc 1 3583 11 is_stmt 1 view .LVU1293
 4430 00ba A36D     		ldr	r3, [r4, #88]
 4431 00bc 43F00103 		orr	r3, r3, #1
 4432 00c0 A365     		str	r3, [r4, #88]
3585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 4433              		.loc 1 3585 11 view .LVU1294
3585:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 4434              		.loc 1 3585 18 is_stmt 0 view .LVU1295
 4435 00c2 0120     		movs	r0, #1
 4436 00c4 16E0     		b	.L299
 4437              	.LVL358:
 4438              	.L317:
3542:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t conversion_group_reassigned = ConversionGroup;
 4439              		.loc 1 3542 12 view .LVU1296
 4440 00c6 0023     		movs	r3, #0
 4441              	.LVL359:
 4442              	.L301:
3575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4443              		.loc 1 3575 54 is_stmt 1 view .LVU1297
3575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4444              		.loc 1 3575 14 is_stmt 0 view .LVU1298
 4445 00c8 0268     		ldr	r2, [r0]
3575:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4446              		.loc 1 3575 54 view .LVU1299
 4447 00ca 12F0400F 		tst	r2, #64
 4448 00ce 04D1     		bne	.L319
3577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4449              		.loc 1 3577 9 is_stmt 1 view .LVU1300
3577:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4450              		.loc 1 3577 12 is_stmt 0 view .LVU1301
 4451 00d0 0A4A     		ldr	r2, .L321+4
 4452 00d2 9342     		cmp	r3, r2
 4453 00d4 EDD8     		bhi	.L320
3587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 4454              		.loc 1 3587 9 is_stmt 1 view .LVU1302
3587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 4455              		.loc 1 3587 39 is_stmt 0 view .LVU1303
 4456 00d6 0133     		adds	r3, r3, #1
 4457              	.LVL360:
3587:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 4458              		.loc 1 3587 39 view .LVU1304
 4459 00d8 F6E7     		b	.L301
 4460              	.L319:
3591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 4461              		.loc 1 3591 7 is_stmt 1 view .LVU1305
 4462 00da 4023     		movs	r3, #64
 4463              	.LVL361:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 327


3591:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 4464              		.loc 1 3591 7 is_stmt 0 view .LVU1306
 4465 00dc 0360     		str	r3, [r0]
 4466              	.LVL362:
3595:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4467              		.loc 1 3595 5 is_stmt 1 view .LVU1307
3572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4468              		.loc 1 3572 35 is_stmt 0 view .LVU1308
 4469 00de 0121     		movs	r1, #1
 4470              	.LVL363:
3572:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4471              		.loc 1 3572 35 view .LVU1309
 4472 00e0 A8E7     		b	.L304
 4473              	.LVL364:
 4474              	.L313:
3633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 4475              		.loc 1 3633 37 view .LVU1310
 4476 00e2 0425     		movs	r5, #4
 4477 00e4 CBE7     		b	.L307
 4478              	.L314:
3629:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 4479              		.loc 1 3629 37 view .LVU1311
 4480 00e6 0825     		movs	r5, #8
 4481 00e8 C9E7     		b	.L307
 4482              	.L315:
3633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 4483              		.loc 1 3633 37 view .LVU1312
 4484 00ea 0425     		movs	r5, #4
 4485 00ec C7E7     		b	.L307
 4486              	.LVL365:
 4487              	.L318:
3661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 4488              		.loc 1 3661 10 view .LVU1313
 4489 00ee 0020     		movs	r0, #0
 4490 00f0 00E0     		b	.L299
 4491              	.LVL366:
 4492              	.L311:
3661:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 4493              		.loc 1 3661 10 view .LVU1314
 4494 00f2 0020     		movs	r0, #0
 4495              	.LVL367:
 4496              	.L299:
3662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4497              		.loc 1 3662 1 view .LVU1315
 4498 00f4 70BD     		pop	{r4, r5, r6, pc}
 4499              	.LVL368:
 4500              	.L322:
3662:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4501              		.loc 1 3662 1 view .LVU1316
 4502 00f6 00BF     		.align	2
 4503              	.L321:
 4504 00f8 C0FFFF7F 		.word	2147483584
 4505 00fc FFDB0C00 		.word	842751
 4506              		.cfi_endproc
 4507              	.LFE355:
 4509              		.section	.text.ADC_Enable,"ax",%progbits
 4510              		.align	1
ARM GAS  C:\usertemp\cca0PO6L.s 			page 328


 4511              		.global	ADC_Enable
 4512              		.syntax unified
 4513              		.thumb
 4514              		.thumb_func
 4516              	ADC_Enable:
 4517              	.LVL369:
 4518              	.LFB356:
3674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart;
 4519              		.loc 1 3674 1 is_stmt 1 view -0
 4520              		.cfi_startproc
 4521              		@ args = 0, pretend = 0, frame = 0
 4522              		@ frame_needed = 0, uses_anonymous_args = 0
3674:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart;
 4523              		.loc 1 3674 1 is_stmt 0 view .LVU1318
 4524 0000 38B5     		push	{r3, r4, r5, lr}
 4525              	.LCFI18:
 4526              		.cfi_def_cfa_offset 16
 4527              		.cfi_offset 3, -16
 4528              		.cfi_offset 4, -12
 4529              		.cfi_offset 5, -8
 4530              		.cfi_offset 14, -4
3675:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4531              		.loc 1 3675 3 is_stmt 1 view .LVU1319
3681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 4532              		.loc 1 3681 3 view .LVU1320
3681:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 4533              		.loc 1 3681 7 is_stmt 0 view .LVU1321
 4534 0002 0368     		ldr	r3, [r0]
 4535              	.LVL370:
 4536              	.LBB480:
 4537              	.LBI480:
6816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4538              		.loc 2 6816 26 is_stmt 1 view .LVU1322
 4539              	.LBB481:
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4540              		.loc 2 6818 3 view .LVU1323
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4541              		.loc 2 6818 12 is_stmt 0 view .LVU1324
 4542 0004 9A68     		ldr	r2, [r3, #8]
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4543              		.loc 2 6818 68 view .LVU1325
 4544 0006 12F0010F 		tst	r2, #1
 4545 000a 56D1     		bne	.L332
 4546 000c 0446     		mov	r4, r0
 4547              	.LVL371:
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4548              		.loc 2 6818 68 view .LVU1326
 4549              	.LBE481:
 4550              	.LBE480:
 4551              	.LBB482:
3684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4552              		.loc 1 3684 5 is_stmt 1 view .LVU1327
3684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4553              		.loc 1 3684 24 is_stmt 0 view .LVU1328
 4554 000e 9968     		ldr	r1, [r3, #8]
3684:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4555              		.loc 1 3684 8 view .LVU1329
ARM GAS  C:\usertemp\cca0PO6L.s 			page 329


 4556 0010 2B4A     		ldr	r2, .L338
 4557 0012 1142     		tst	r1, r2
 4558 0014 09D0     		beq	.L325
3687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4559              		.loc 1 3687 7 is_stmt 1 view .LVU1330
 4560 0016 436D     		ldr	r3, [r0, #84]
 4561 0018 43F01003 		orr	r3, r3, #16
 4562 001c 4365     		str	r3, [r0, #84]
3690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4563              		.loc 1 3690 7 view .LVU1331
 4564 001e 836D     		ldr	r3, [r0, #88]
 4565 0020 43F00103 		orr	r3, r3, #1
 4566 0024 8365     		str	r3, [r0, #88]
3692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 4567              		.loc 1 3692 7 view .LVU1332
3692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 4568              		.loc 1 3692 14 is_stmt 0 view .LVU1333
 4569 0026 0120     		movs	r0, #1
 4570              	.LVL372:
3692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 4571              		.loc 1 3692 14 view .LVU1334
 4572 0028 48E0     		b	.L324
 4573              	.LVL373:
 4574              	.L325:
3696:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4575              		.loc 1 3696 5 is_stmt 1 view .LVU1335
 4576              	.LBB483:
 4577              	.LBI483:
6777:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4578              		.loc 2 6777 22 view .LVU1336
 4579              	.LBB484:
6782:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4580              		.loc 2 6782 3 view .LVU1337
 4581 002a 9968     		ldr	r1, [r3, #8]
 4582 002c 254A     		ldr	r2, .L338+4
 4583 002e 0A40     		ands	r2, r2, r1
 4584 0030 42F00102 		orr	r2, r2, #1
 4585 0034 9A60     		str	r2, [r3, #8]
 4586              	.LVL374:
6782:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4587              		.loc 2 6782 3 is_stmt 0 view .LVU1338
 4588              	.LBE484:
 4589              	.LBE483:
3699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4590              		.loc 1 3699 5 is_stmt 1 view .LVU1339
3699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4591              		.loc 1 3699 17 is_stmt 0 view .LVU1340
 4592 0036 FFF7FEFF 		bl	HAL_GetTick
 4593              	.LVL375:
3699:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4594              		.loc 1 3699 17 view .LVU1341
 4595 003a 0546     		mov	r5, r0
 4596              	.LVL376:
3703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 4597              		.loc 1 3703 5 is_stmt 1 view .LVU1342
3703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 4598              		.loc 1 3703 57 is_stmt 0 view .LVU1343
ARM GAS  C:\usertemp\cca0PO6L.s 			page 330


 4599 003c 2368     		ldr	r3, [r4]
3703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 4600              		.loc 1 3703 37 view .LVU1344
 4601 003e 2249     		ldr	r1, .L338+8
 4602 0040 224A     		ldr	r2, .L338+12
 4603 0042 9342     		cmp	r3, r2
 4604 0044 18BF     		it	ne
 4605 0046 8B42     		cmpne	r3, r1
 4606 0048 0DD1     		bne	.L333
3703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 4607              		.loc 1 3703 37 discriminator 1 view .LVU1345
 4608 004a 02F50072 		add	r2, r2, #512
 4609              	.L326:
 4610              	.LVL377:
 4611              	.LBB485:
 4612              	.LBI485:
6476:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4613              		.loc 2 6476 26 is_stmt 1 view .LVU1346
 4614              	.LBB486:
6478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4615              		.loc 2 6478 3 view .LVU1347
6478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4616              		.loc 2 6478 21 is_stmt 0 view .LVU1348
 4617 004e 9268     		ldr	r2, [r2, #8]
 4618              	.LVL378:
6478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4619              		.loc 2 6478 10 view .LVU1349
 4620 0050 02F01F02 		and	r2, r2, #31
 4621              	.LVL379:
6478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4622              		.loc 2 6478 10 view .LVU1350
 4623              	.LBE486:
 4624              	.LBE485:
3704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4625              		.loc 1 3704 5 is_stmt 1 view .LVU1351
3704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4626              		.loc 1 3704 10 is_stmt 0 view .LVU1352
 4627 0054 1D49     		ldr	r1, .L338+12
 4628 0056 8B42     		cmp	r3, r1
 4629 0058 07D0     		beq	.L336
3704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4630              		.loc 1 3704 10 discriminator 1 view .LVU1353
 4631 005a 1946     		mov	r1, r3
 4632              	.L327:
3704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4633              		.loc 1 3704 8 discriminator 4 view .LVU1354
 4634 005c 9942     		cmp	r1, r3
 4635 005e 07D0     		beq	.L330
3705:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****        )
 4636              		.loc 1 3705 9 view .LVU1355
 4637 0060 32B1     		cbz	r2, .L330
 4638              	.LBE482:
3742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 4639              		.loc 1 3742 10 view .LVU1356
 4640 0062 0020     		movs	r0, #0
 4641              	.LVL380:
3742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
ARM GAS  C:\usertemp\cca0PO6L.s 			page 331


 4642              		.loc 1 3742 10 view .LVU1357
 4643 0064 2AE0     		b	.L324
 4644              	.LVL381:
 4645              	.L333:
 4646              	.LBB491:
3703:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 4647              		.loc 1 3703 37 discriminator 2 view .LVU1358
 4648 0066 1A4A     		ldr	r2, .L338+16
 4649 0068 F1E7     		b	.L326
 4650              	.LVL382:
 4651              	.L336:
3704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4652              		.loc 1 3704 10 discriminator 2 view .LVU1359
 4653 006a A1F58071 		sub	r1, r1, #256
 4654 006e F5E7     		b	.L327
 4655              	.LVL383:
 4656              	.L330:
3708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4657              		.loc 1 3708 53 is_stmt 1 view .LVU1360
3708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4658              		.loc 1 3708 14 is_stmt 0 view .LVU1361
 4659 0070 2368     		ldr	r3, [r4]
 4660 0072 1A68     		ldr	r2, [r3]
3708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4661              		.loc 1 3708 53 view .LVU1362
 4662 0074 12F0010F 		tst	r2, #1
 4663 0078 1DD1     		bne	.L337
3718:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4664              		.loc 1 3718 9 is_stmt 1 view .LVU1363
 4665              	.LVL384:
 4666              	.LBB487:
 4667              	.LBI487:
6816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4668              		.loc 2 6816 26 view .LVU1364
 4669              	.LBB488:
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4670              		.loc 2 6818 3 view .LVU1365
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4671              		.loc 2 6818 12 is_stmt 0 view .LVU1366
 4672 007a 9A68     		ldr	r2, [r3, #8]
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4673              		.loc 2 6818 68 view .LVU1367
 4674 007c 12F0010F 		tst	r2, #1
 4675 0080 05D1     		bne	.L329
 4676              	.LVL385:
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4677              		.loc 2 6818 68 view .LVU1368
 4678              	.LBE488:
 4679              	.LBE487:
3720:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 4680              		.loc 1 3720 11 is_stmt 1 view .LVU1369
 4681              	.LBB489:
 4682              	.LBI489:
6777:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4683              		.loc 2 6777 22 view .LVU1370
 4684              	.LBB490:
6782:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
ARM GAS  C:\usertemp\cca0PO6L.s 			page 332


 4685              		.loc 2 6782 3 view .LVU1371
 4686 0082 9968     		ldr	r1, [r3, #8]
 4687 0084 0F4A     		ldr	r2, .L338+4
 4688 0086 0A40     		ands	r2, r2, r1
 4689 0088 42F00102 		orr	r2, r2, #1
 4690 008c 9A60     		str	r2, [r3, #8]
 4691              	.LVL386:
 4692              	.L329:
6782:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4693              		.loc 2 6782 3 is_stmt 0 view .LVU1372
 4694              	.LBE490:
 4695              	.LBE489:
3723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4696              		.loc 1 3723 9 is_stmt 1 view .LVU1373
3723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4697              		.loc 1 3723 14 is_stmt 0 view .LVU1374
 4698 008e FFF7FEFF 		bl	HAL_GetTick
 4699              	.LVL387:
3723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4700              		.loc 1 3723 28 discriminator 1 view .LVU1375
 4701 0092 401B     		subs	r0, r0, r5
3723:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4702              		.loc 1 3723 12 discriminator 1 view .LVU1376
 4703 0094 0228     		cmp	r0, #2
 4704 0096 EBD9     		bls	.L330
3726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 4705              		.loc 1 3726 11 is_stmt 1 view .LVU1377
3726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 4706              		.loc 1 3726 15 is_stmt 0 view .LVU1378
 4707 0098 2368     		ldr	r3, [r4]
 4708 009a 1B68     		ldr	r3, [r3]
3726:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 4709              		.loc 1 3726 14 view .LVU1379
 4710 009c 13F0010F 		tst	r3, #1
 4711 00a0 E6D1     		bne	.L330
3729:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4712              		.loc 1 3729 13 is_stmt 1 view .LVU1380
 4713 00a2 636D     		ldr	r3, [r4, #84]
 4714 00a4 43F01003 		orr	r3, r3, #16
 4715 00a8 6365     		str	r3, [r4, #84]
3732:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4716              		.loc 1 3732 13 view .LVU1381
 4717 00aa A36D     		ldr	r3, [r4, #88]
 4718 00ac 43F00103 		orr	r3, r3, #1
 4719 00b0 A365     		str	r3, [r4, #88]
3734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 4720              		.loc 1 3734 13 view .LVU1382
3734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 4721              		.loc 1 3734 20 is_stmt 0 view .LVU1383
 4722 00b2 0120     		movs	r0, #1
 4723 00b4 02E0     		b	.L324
 4724              	.L337:
3734:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 4725              		.loc 1 3734 20 view .LVU1384
 4726              	.LBE491:
3742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 4727              		.loc 1 3742 10 view .LVU1385
ARM GAS  C:\usertemp\cca0PO6L.s 			page 333


 4728 00b6 0020     		movs	r0, #0
 4729              	.LBB492:
 4730 00b8 00E0     		b	.L324
 4731              	.LVL388:
 4732              	.L332:
3742:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 4733              		.loc 1 3742 10 view .LVU1386
 4734              	.LBE492:
 4735 00ba 0020     		movs	r0, #0
 4736              	.LVL389:
 4737              	.L324:
3743:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4738              		.loc 1 3743 1 view .LVU1387
 4739 00bc 38BD     		pop	{r3, r4, r5, pc}
 4740              	.L339:
 4741 00be 00BF     		.align	2
 4742              	.L338:
 4743 00c0 3F000080 		.word	-2147483585
 4744 00c4 C0FFFF7F 		.word	2147483584
 4745 00c8 00200240 		.word	1073881088
 4746 00cc 00210240 		.word	1073881344
 4747 00d0 00630258 		.word	1476551424
 4748              		.cfi_endproc
 4749              	.LFE356:
 4751              		.section	.text.HAL_ADC_Start,"ax",%progbits
 4752              		.align	1
 4753              		.global	HAL_ADC_Start
 4754              		.syntax unified
 4755              		.thumb
 4756              		.thumb_func
 4758              	HAL_ADC_Start:
 4759              	.LVL390:
 4760              	.LFB337:
1398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4761              		.loc 1 1398 1 is_stmt 1 view -0
 4762              		.cfi_startproc
 4763              		@ args = 0, pretend = 0, frame = 0
 4764              		@ frame_needed = 0, uses_anonymous_args = 0
1398:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4765              		.loc 1 1398 1 is_stmt 0 view .LVU1389
 4766 0000 38B5     		push	{r3, r4, r5, lr}
 4767              	.LCFI19:
 4768              		.cfi_def_cfa_offset 16
 4769              		.cfi_offset 3, -16
 4770              		.cfi_offset 4, -12
 4771              		.cfi_offset 5, -8
 4772              		.cfi_offset 14, -4
 4773 0002 0446     		mov	r4, r0
1399:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
 4774              		.loc 1 1399 3 is_stmt 1 view .LVU1390
1400:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 4775              		.loc 1 1400 3 view .LVU1391
1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4776              		.loc 1 1401 3 view .LVU1392
1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4777              		.loc 1 1401 55 is_stmt 0 view .LVU1393
 4778 0004 0368     		ldr	r3, [r0]
ARM GAS  C:\usertemp\cca0PO6L.s 			page 334


1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4779              		.loc 1 1401 35 view .LVU1394
 4780 0006 3E49     		ldr	r1, .L361
 4781 0008 3E4A     		ldr	r2, .L361+4
 4782 000a 9342     		cmp	r3, r2
 4783 000c 18BF     		it	ne
 4784 000e 8B42     		cmpne	r3, r1
 4785 0010 54D1     		bne	.L353
1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4786              		.loc 1 1401 35 discriminator 1 view .LVU1395
 4787 0012 02F50072 		add	r2, r2, #512
 4788              	.L341:
 4789              	.LVL391:
 4790              	.LBB493:
 4791              	.LBI493:
6476:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4792              		.loc 2 6476 26 is_stmt 1 view .LVU1396
 4793              	.LBB494:
6478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4794              		.loc 2 6478 3 view .LVU1397
6478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4795              		.loc 2 6478 21 is_stmt 0 view .LVU1398
 4796 0016 9568     		ldr	r5, [r2, #8]
6478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4797              		.loc 2 6478 10 view .LVU1399
 4798 0018 05F01F05 		and	r5, r5, #31
 4799              	.LVL392:
6478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4800              		.loc 2 6478 10 view .LVU1400
 4801              	.LBE494:
 4802              	.LBE493:
1404:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4803              		.loc 1 1404 3 is_stmt 1 view .LVU1401
1407:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 4804              		.loc 1 1407 3 view .LVU1402
 4805              	.LBB495:
 4806              	.LBI495:
6948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4807              		.loc 2 6948 26 view .LVU1403
 4808              	.LBB496:
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4809              		.loc 2 6950 3 view .LVU1404
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4810              		.loc 2 6950 12 is_stmt 0 view .LVU1405
 4811 001c 9B68     		ldr	r3, [r3, #8]
 4812              	.LVL393:
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4813              		.loc 2 6950 74 view .LVU1406
 4814 001e 13F0040F 		tst	r3, #4
 4815 0022 69D1     		bne	.L354
 4816              	.LVL394:
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 4817              		.loc 2 6950 74 view .LVU1407
 4818              	.LBE496:
 4819              	.LBE495:
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4820              		.loc 1 1410 5 is_stmt 1 view .LVU1408
ARM GAS  C:\usertemp\cca0PO6L.s 			page 335


1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4821              		.loc 1 1410 5 view .LVU1409
 4822 0024 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 4823 0028 012B     		cmp	r3, #1
 4824 002a 67D0     		beq	.L355
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4825              		.loc 1 1410 5 discriminator 2 view .LVU1410
 4826 002c 0123     		movs	r3, #1
 4827 002e 84F85030 		strb	r3, [r4, #80]
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4828              		.loc 1 1410 5 discriminator 2 view .LVU1411
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4829              		.loc 1 1413 5 view .LVU1412
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4830              		.loc 1 1413 22 is_stmt 0 view .LVU1413
 4831 0032 2046     		mov	r0, r4
 4832              	.LVL395:
1413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4833              		.loc 1 1413 22 view .LVU1414
 4834 0034 FFF7FEFF 		bl	ADC_Enable
 4835              	.LVL396:
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4836              		.loc 1 1416 5 is_stmt 1 view .LVU1415
1416:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 4837              		.loc 1 1416 8 is_stmt 0 view .LVU1416
 4838 0038 0028     		cmp	r0, #0
 4839 003a 59D1     		bne	.L343
1421:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 4840              		.loc 1 1421 7 is_stmt 1 view .LVU1417
 4841 003c 626D     		ldr	r2, [r4, #84]
 4842 003e A0F60273 		subw	r3, r0, #3842
 4843 0042 1340     		ands	r3, r3, r2
 4844 0044 43F48073 		orr	r3, r3, #256
 4845 0048 6365     		str	r3, [r4, #84]
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4846              		.loc 1 1428 7 view .LVU1418
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4847              		.loc 1 1428 12 is_stmt 0 view .LVU1419
 4848 004a 2368     		ldr	r3, [r4]
 4849 004c 2D4A     		ldr	r2, .L361+4
 4850 004e 9342     		cmp	r3, r2
 4851 0050 36D0     		beq	.L359
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4852              		.loc 1 1428 12 discriminator 1 view .LVU1420
 4853 0052 1A46     		mov	r2, r3
 4854              	.L344:
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4855              		.loc 1 1428 10 discriminator 4 view .LVU1421
 4856 0054 9342     		cmp	r3, r2
 4857 0056 00D0     		beq	.L345
1429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          )
 4858              		.loc 1 1429 11 view .LVU1422
 4859 0058 1DB9     		cbnz	r5, .L346
 4860              	.L345:
1432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 4861              		.loc 1 1432 9 is_stmt 1 view .LVU1423
 4862 005a 626D     		ldr	r2, [r4, #84]
ARM GAS  C:\usertemp\cca0PO6L.s 			page 336


 4863 005c 22F48012 		bic	r2, r2, #1048576
 4864 0060 6265     		str	r2, [r4, #84]
 4865              	.L346:
1437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4866              		.loc 1 1437 7 view .LVU1424
1437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4867              		.loc 1 1437 11 is_stmt 0 view .LVU1425
 4868 0062 626D     		ldr	r2, [r4, #84]
1437:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 4869              		.loc 1 1437 10 view .LVU1426
 4870 0064 12F4805F 		tst	r2, #4096
 4871 0068 2DD0     		beq	.L347
1440:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 4872              		.loc 1 1440 9 is_stmt 1 view .LVU1427
 4873 006a A26D     		ldr	r2, [r4, #88]
 4874 006c 22F00602 		bic	r2, r2, #6
 4875 0070 A265     		str	r2, [r4, #88]
 4876              	.L348:
1450:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4877              		.loc 1 1450 7 view .LVU1428
 4878 0072 1C22     		movs	r2, #28
 4879 0074 1A60     		str	r2, [r3]
1455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4880              		.loc 1 1455 7 view .LVU1429
1455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4881              		.loc 1 1455 7 view .LVU1430
 4882 0076 0023     		movs	r3, #0
 4883 0078 84F85030 		strb	r3, [r4, #80]
1455:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4884              		.loc 1 1455 7 view .LVU1431
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4885              		.loc 1 1465 7 view .LVU1432
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4886              		.loc 1 1465 12 is_stmt 0 view .LVU1433
 4887 007c 2368     		ldr	r3, [r4]
 4888 007e 214A     		ldr	r2, .L361+4
 4889 0080 9342     		cmp	r3, r2
 4890 0082 23D0     		beq	.L360
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4891              		.loc 1 1465 12 discriminator 1 view .LVU1434
 4892 0084 1A46     		mov	r2, r3
 4893              	.L349:
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4894              		.loc 1 1465 10 discriminator 4 view .LVU1435
 4895 0086 9342     		cmp	r3, r2
 4896 0088 07D0     		beq	.L350
 4897 008a 092D     		cmp	r5, #9
 4898 008c 21D8     		bhi	.L351
 4899 008e 40F22121 		movw	r1, #545
 4900 0092 E940     		lsrs	r1, r1, r5
 4901 0094 11F0010F 		tst	r1, #1
 4902 0098 1BD0     		beq	.L351
 4903              	.L350:
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4904              		.loc 1 1472 9 is_stmt 1 view .LVU1436
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4905              		.loc 1 1472 13 is_stmt 0 view .LVU1437
ARM GAS  C:\usertemp\cca0PO6L.s 			page 337


 4906 009a DA68     		ldr	r2, [r3, #12]
1472:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4907              		.loc 1 1472 12 view .LVU1438
 4908 009c 12F0007F 		tst	r2, #33554432
 4909 00a0 05D0     		beq	.L352
1474:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 4910              		.loc 1 1474 11 is_stmt 1 view .LVU1439
 4911 00a2 626D     		ldr	r2, [r4, #84]
 4912 00a4 22F44052 		bic	r2, r2, #12288
 4913 00a8 42F48052 		orr	r2, r2, #4096
 4914 00ac 6265     		str	r2, [r4, #84]
 4915              	.L352:
1478:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 4916              		.loc 1 1478 9 view .LVU1440
 4917              	.LVL397:
 4918              	.LBB497:
 4919              	.LBI497:
6912:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 4920              		.loc 2 6912 22 view .LVU1441
 4921              	.LBB498:
6917:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4922              		.loc 2 6917 3 view .LVU1442
 4923 00ae 9968     		ldr	r1, [r3, #8]
 4924 00b0 154A     		ldr	r2, .L361+8
 4925 00b2 0A40     		ands	r2, r2, r1
 4926 00b4 42F00402 		orr	r2, r2, #4
 4927 00b8 9A60     		str	r2, [r3, #8]
 4928              	.LVL398:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4929              		.loc 2 6920 1 is_stmt 0 view .LVU1443
 4930 00ba 1EE0     		b	.L342
 4931              	.LVL399:
 4932              	.L353:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 4933              		.loc 2 6920 1 view .LVU1444
 4934              	.LBE498:
 4935              	.LBE497:
1401:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4936              		.loc 1 1401 35 discriminator 2 view .LVU1445
 4937 00bc 134A     		ldr	r2, .L361+12
 4938 00be AAE7     		b	.L341
 4939              	.LVL400:
 4940              	.L359:
1428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4941              		.loc 1 1428 12 discriminator 2 view .LVU1446
 4942 00c0 A2F58072 		sub	r2, r2, #256
 4943 00c4 C6E7     		b	.L344
 4944              	.L347:
1445:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 4945              		.loc 1 1445 9 is_stmt 1 view .LVU1447
 4946 00c6 0022     		movs	r2, #0
 4947 00c8 A265     		str	r2, [r4, #88]
 4948 00ca D2E7     		b	.L348
 4949              	.L360:
1465:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 4950              		.loc 1 1465 12 is_stmt 0 discriminator 2 view .LVU1448
 4951 00cc A2F58072 		sub	r2, r2, #256
ARM GAS  C:\usertemp\cca0PO6L.s 			page 338


 4952 00d0 D9E7     		b	.L349
 4953              	.L351:
1483:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, update Slave State in setting
 4954              		.loc 1 1483 9 is_stmt 1 view .LVU1449
 4955 00d2 636D     		ldr	r3, [r4, #84]
 4956 00d4 43F48013 		orr	r3, r3, #1048576
 4957 00d8 6365     		str	r3, [r4, #84]
1486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
 4958              		.loc 1 1486 9 view .LVU1450
 4959              	.LVL401:
1487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4960              		.loc 1 1487 9 view .LVU1451
1487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4961              		.loc 1 1487 13 is_stmt 0 view .LVU1452
 4962 00da D368     		ldr	r3, [r2, #12]
1487:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 4963              		.loc 1 1487 12 view .LVU1453
 4964 00dc 13F0007F 		tst	r3, #33554432
 4965 00e0 0BD0     		beq	.L342
1489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 4966              		.loc 1 1489 11 is_stmt 1 view .LVU1454
 4967 00e2 636D     		ldr	r3, [r4, #84]
 4968 00e4 23F44053 		bic	r3, r3, #12288
 4969 00e8 43F48053 		orr	r3, r3, #4096
 4970 00ec 6365     		str	r3, [r4, #84]
 4971 00ee 04E0     		b	.L342
 4972              	.LVL402:
 4973              	.L343:
1497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 4974              		.loc 1 1497 7 view .LVU1455
1497:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 4975              		.loc 1 1497 7 view .LVU1456
 4976 00f0 0023     		movs	r3, #0
 4977 00f2 84F85030 		strb	r3, [r4, #80]
 4978 00f6 00E0     		b	.L342
 4979              	.LVL403:
 4980              	.L354:
1502:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 4981              		.loc 1 1502 20 is_stmt 0 view .LVU1457
 4982 00f8 0220     		movs	r0, #2
 4983              	.LVL404:
 4984              	.L342:
1507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4985              		.loc 1 1507 1 view .LVU1458
 4986 00fa 38BD     		pop	{r3, r4, r5, pc}
 4987              	.LVL405:
 4988              	.L355:
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4989              		.loc 1 1410 5 discriminator 1 view .LVU1459
 4990 00fc 0220     		movs	r0, #2
 4991              	.LVL406:
1410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 4992              		.loc 1 1410 5 discriminator 1 view .LVU1460
 4993 00fe FCE7     		b	.L342
 4994              	.L362:
 4995              		.align	2
 4996              	.L361:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 339


 4997 0100 00200240 		.word	1073881088
 4998 0104 00210240 		.word	1073881344
 4999 0108 C0FFFF7F 		.word	2147483584
 5000 010c 00630258 		.word	1476551424
 5001              		.cfi_endproc
 5002              	.LFE337:
 5004              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 5005              		.align	1
 5006              		.global	HAL_ADC_Start_IT
 5007              		.syntax unified
 5008              		.thumb
 5009              		.thumb_func
 5011              	HAL_ADC_Start_IT:
 5012              	.LVL407:
 5013              	.LFB341:
1885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5014              		.loc 1 1885 1 is_stmt 1 view -0
 5015              		.cfi_startproc
 5016              		@ args = 0, pretend = 0, frame = 0
 5017              		@ frame_needed = 0, uses_anonymous_args = 0
1885:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5018              		.loc 1 1885 1 is_stmt 0 view .LVU1462
 5019 0000 38B5     		push	{r3, r4, r5, lr}
 5020              	.LCFI20:
 5021              		.cfi_def_cfa_offset 16
 5022              		.cfi_offset 3, -16
 5023              		.cfi_offset 4, -12
 5024              		.cfi_offset 5, -8
 5025              		.cfi_offset 14, -4
 5026 0002 0446     		mov	r4, r0
1886:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   const ADC_TypeDef *tmpADC_Master;
 5027              		.loc 1 1886 3 is_stmt 1 view .LVU1463
1887:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 5028              		.loc 1 1887 3 view .LVU1464
1888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5029              		.loc 1 1888 3 view .LVU1465
1888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5030              		.loc 1 1888 55 is_stmt 0 view .LVU1466
 5031 0004 0368     		ldr	r3, [r0]
1888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5032              		.loc 1 1888 35 view .LVU1467
 5033 0006 6349     		ldr	r1, .L392
 5034 0008 634A     		ldr	r2, .L392+4
 5035 000a 9342     		cmp	r3, r2
 5036 000c 18BF     		it	ne
 5037 000e 8B42     		cmpne	r3, r1
 5038 0010 78D1     		bne	.L381
1888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5039              		.loc 1 1888 35 discriminator 1 view .LVU1468
 5040 0012 02F50072 		add	r2, r2, #512
 5041              	.L364:
 5042              	.LVL408:
 5043              	.LBB499:
 5044              	.LBI499:
6476:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5045              		.loc 2 6476 26 is_stmt 1 view .LVU1469
 5046              	.LBB500:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 340


6478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5047              		.loc 2 6478 3 view .LVU1470
6478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5048              		.loc 2 6478 21 is_stmt 0 view .LVU1471
 5049 0016 9568     		ldr	r5, [r2, #8]
6478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5050              		.loc 2 6478 10 view .LVU1472
 5051 0018 05F01F05 		and	r5, r5, #31
 5052              	.LVL409:
6478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5053              		.loc 2 6478 10 view .LVU1473
 5054              	.LBE500:
 5055              	.LBE499:
1891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5056              		.loc 1 1891 3 is_stmt 1 view .LVU1474
1894:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5057              		.loc 1 1894 3 view .LVU1475
 5058              	.LBB501:
 5059              	.LBI501:
6948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5060              		.loc 2 6948 26 view .LVU1476
 5061              	.LBB502:
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5062              		.loc 2 6950 3 view .LVU1477
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5063              		.loc 2 6950 12 is_stmt 0 view .LVU1478
 5064 001c 9B68     		ldr	r3, [r3, #8]
 5065              	.LVL410:
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5066              		.loc 2 6950 74 view .LVU1479
 5067 001e 13F0040F 		tst	r3, #4
 5068 0022 40F0B380 		bne	.L382
 5069              	.LVL411:
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5070              		.loc 2 6950 74 view .LVU1480
 5071              	.LBE502:
 5072              	.LBE501:
1897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5073              		.loc 1 1897 5 is_stmt 1 view .LVU1481
1897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5074              		.loc 1 1897 5 view .LVU1482
 5075 0026 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 5076 002a 012B     		cmp	r3, #1
 5077 002c 00F0B080 		beq	.L383
1897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5078              		.loc 1 1897 5 discriminator 2 view .LVU1483
 5079 0030 0123     		movs	r3, #1
 5080 0032 84F85030 		strb	r3, [r4, #80]
1897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5081              		.loc 1 1897 5 discriminator 2 view .LVU1484
1900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5082              		.loc 1 1900 5 view .LVU1485
1900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5083              		.loc 1 1900 22 is_stmt 0 view .LVU1486
 5084 0036 2046     		mov	r0, r4
 5085              	.LVL412:
1900:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 341


 5086              		.loc 1 1900 22 view .LVU1487
 5087 0038 FFF7FEFF 		bl	ADC_Enable
 5088              	.LVL413:
1903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5089              		.loc 1 1903 5 is_stmt 1 view .LVU1488
1903:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5090              		.loc 1 1903 8 is_stmt 0 view .LVU1489
 5091 003c 0028     		cmp	r0, #0
 5092 003e 40F0A180 		bne	.L366
1908:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 5093              		.loc 1 1908 7 is_stmt 1 view .LVU1490
 5094 0042 626D     		ldr	r2, [r4, #84]
 5095 0044 A0F60273 		subw	r3, r0, #3842
 5096 0048 1340     		ands	r3, r3, r2
 5097 004a 43F48073 		orr	r3, r3, #256
 5098 004e 6365     		str	r3, [r4, #84]
1915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5099              		.loc 1 1915 7 view .LVU1491
1915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5100              		.loc 1 1915 12 is_stmt 0 view .LVU1492
 5101 0050 2368     		ldr	r3, [r4]
 5102 0052 514A     		ldr	r2, .L392+4
 5103 0054 9342     		cmp	r3, r2
 5104 0056 57D0     		beq	.L387
1915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5105              		.loc 1 1915 12 discriminator 1 view .LVU1493
 5106 0058 1A46     		mov	r2, r3
 5107              	.L367:
1915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5108              		.loc 1 1915 10 discriminator 4 view .LVU1494
 5109 005a 9342     		cmp	r3, r2
 5110 005c 00D0     		beq	.L368
1916:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****          )
 5111              		.loc 1 1916 11 view .LVU1495
 5112 005e 1DB9     		cbnz	r5, .L369
 5113              	.L368:
1919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 5114              		.loc 1 1919 9 is_stmt 1 view .LVU1496
 5115 0060 626D     		ldr	r2, [r4, #84]
 5116 0062 22F48012 		bic	r2, r2, #1048576
 5117 0066 6265     		str	r2, [r4, #84]
 5118              	.L369:
1924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 5119              		.loc 1 1924 7 view .LVU1497
1924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 5120              		.loc 1 1924 16 is_stmt 0 view .LVU1498
 5121 0068 626D     		ldr	r2, [r4, #84]
1924:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 5122              		.loc 1 1924 10 view .LVU1499
 5123 006a 12F4805F 		tst	r2, #4096
 5124 006e 4ED0     		beq	.L370
1927:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 5125              		.loc 1 1927 9 is_stmt 1 view .LVU1500
 5126 0070 A26D     		ldr	r2, [r4, #88]
 5127 0072 22F00602 		bic	r2, r2, #6
 5128 0076 A265     		str	r2, [r4, #88]
 5129              	.L371:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 342


1937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5130              		.loc 1 1937 7 view .LVU1501
 5131 0078 1C22     		movs	r2, #28
 5132 007a 1A60     		str	r2, [r3]
1942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5133              		.loc 1 1942 7 view .LVU1502
1942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5134              		.loc 1 1942 7 view .LVU1503
 5135 007c 0023     		movs	r3, #0
 5136 007e 84F85030 		strb	r3, [r4, #80]
1942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5137              		.loc 1 1942 7 view .LVU1504
1945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5138              		.loc 1 1945 7 view .LVU1505
 5139 0082 2268     		ldr	r2, [r4]
 5140 0084 5368     		ldr	r3, [r2, #4]
 5141 0086 23F01C03 		bic	r3, r3, #28
 5142 008a 5360     		str	r3, [r2, #4]
1948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 5143              		.loc 1 1948 7 view .LVU1506
1948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 5144              		.loc 1 1948 25 is_stmt 0 view .LVU1507
 5145 008c 2369     		ldr	r3, [r4, #16]
1948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 5146              		.loc 1 1948 7 view .LVU1508
 5147 008e 082B     		cmp	r3, #8
 5148 0090 40D0     		beq	.L388
1955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
 5149              		.loc 1 1955 11 is_stmt 1 view .LVU1509
 5150 0092 2268     		ldr	r2, [r4]
 5151 0094 5368     		ldr	r3, [r2, #4]
 5152 0096 43F00403 		orr	r3, r3, #4
 5153 009a 5360     		str	r3, [r2, #4]
1956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 5154              		.loc 1 1956 11 view .LVU1510
 5155              	.L373:
1963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 5156              		.loc 1 1963 7 view .LVU1511
1963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 5157              		.loc 1 1963 21 is_stmt 0 view .LVU1512
 5158 009c 236B     		ldr	r3, [r4, #48]
1963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 5159              		.loc 1 1963 10 view .LVU1513
 5160 009e 23B9     		cbnz	r3, .L374
1965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 5161              		.loc 1 1965 9 is_stmt 1 view .LVU1514
 5162 00a0 2268     		ldr	r2, [r4]
 5163 00a2 5368     		ldr	r3, [r2, #4]
 5164 00a4 43F01003 		orr	r3, r3, #16
 5165 00a8 5360     		str	r3, [r2, #4]
 5166              	.L374:
1976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5167              		.loc 1 1976 7 view .LVU1515
1976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5168              		.loc 1 1976 12 is_stmt 0 view .LVU1516
 5169 00aa 2368     		ldr	r3, [r4]
 5170 00ac 3A4A     		ldr	r2, .L392+4
ARM GAS  C:\usertemp\cca0PO6L.s 			page 343


 5171 00ae 9342     		cmp	r3, r2
 5172 00b0 36D0     		beq	.L389
1976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5173              		.loc 1 1976 12 discriminator 1 view .LVU1517
 5174 00b2 1A46     		mov	r2, r3
 5175              	.L375:
1976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5176              		.loc 1 1976 10 discriminator 4 view .LVU1518
 5177 00b4 9342     		cmp	r3, r2
 5178 00b6 07D0     		beq	.L376
 5179 00b8 092D     		cmp	r5, #9
 5180 00ba 3ED8     		bhi	.L377
 5181 00bc 40F22121 		movw	r1, #545
 5182 00c0 E940     		lsrs	r1, r1, r5
 5183 00c2 11F0010F 		tst	r1, #1
 5184 00c6 38D0     		beq	.L377
 5185              	.L376:
1983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 5186              		.loc 1 1983 9 is_stmt 1 view .LVU1519
1983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 5187              		.loc 1 1983 13 is_stmt 0 view .LVU1520
 5188 00c8 DA68     		ldr	r2, [r3, #12]
1983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 5189              		.loc 1 1983 12 view .LVU1521
 5190 00ca 12F0007F 		tst	r2, #33554432
 5191 00ce 11D0     		beq	.L378
1985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5192              		.loc 1 1985 11 is_stmt 1 view .LVU1522
 5193 00d0 626D     		ldr	r2, [r4, #84]
 5194 00d2 22F44052 		bic	r2, r2, #12288
 5195 00d6 42F48052 		orr	r2, r2, #4096
 5196 00da 6265     		str	r2, [r4, #84]
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 5197              		.loc 1 1991 11 view .LVU1523
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 5198              		.loc 1 1991 29 is_stmt 0 view .LVU1524
 5199 00dc 2269     		ldr	r2, [r4, #16]
1991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 5200              		.loc 1 1991 11 view .LVU1525
 5201 00de 082A     		cmp	r2, #8
 5202 00e0 21D0     		beq	.L390
1999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 5203              		.loc 1 1999 15 is_stmt 1 view .LVU1526
 5204 00e2 5A68     		ldr	r2, [r3, #4]
 5205 00e4 22F04002 		bic	r2, r2, #64
 5206 00e8 5A60     		str	r2, [r3, #4]
2000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               break;
 5207              		.loc 1 2000 15 view .LVU1527
 5208 00ea 2268     		ldr	r2, [r4]
 5209 00ec 5368     		ldr	r3, [r2, #4]
 5210 00ee 43F02003 		orr	r3, r3, #32
 5211 00f2 5360     		str	r3, [r2, #4]
2001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 5212              		.loc 1 2001 15 view .LVU1528
 5213              	.L378:
2006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 5214              		.loc 1 2006 9 view .LVU1529
ARM GAS  C:\usertemp\cca0PO6L.s 			page 344


 5215 00f4 2268     		ldr	r2, [r4]
 5216              	.LVL414:
 5217              	.LBB503:
 5218              	.LBI503:
6912:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5219              		.loc 2 6912 22 view .LVU1530
 5220              	.LBB504:
6917:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5221              		.loc 2 6917 3 view .LVU1531
 5222 00f6 9168     		ldr	r1, [r2, #8]
 5223 00f8 284B     		ldr	r3, .L392+8
 5224 00fa 0B40     		ands	r3, r3, r1
 5225 00fc 43F00403 		orr	r3, r3, #4
 5226 0100 9360     		str	r3, [r2, #8]
 5227              	.LVL415:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 5228              		.loc 2 6920 1 is_stmt 0 view .LVU1532
 5229 0102 44E0     		b	.L365
 5230              	.LVL416:
 5231              	.L381:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 5232              		.loc 2 6920 1 view .LVU1533
 5233              	.LBE504:
 5234              	.LBE503:
1888:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5235              		.loc 1 1888 35 discriminator 2 view .LVU1534
 5236 0104 264A     		ldr	r2, .L392+12
 5237 0106 86E7     		b	.L364
 5238              	.LVL417:
 5239              	.L387:
1915:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5240              		.loc 1 1915 12 discriminator 2 view .LVU1535
 5241 0108 A2F58072 		sub	r2, r2, #256
 5242 010c A5E7     		b	.L367
 5243              	.L370:
1932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 5244              		.loc 1 1932 9 is_stmt 1 view .LVU1536
 5245 010e 0022     		movs	r2, #0
 5246 0110 A265     		str	r2, [r4, #88]
 5247 0112 B1E7     		b	.L371
 5248              	.L388:
1951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           break;
 5249              		.loc 1 1951 11 view .LVU1537
 5250 0114 2268     		ldr	r2, [r4]
 5251 0116 5368     		ldr	r3, [r2, #4]
 5252 0118 43F00803 		orr	r3, r3, #8
 5253 011c 5360     		str	r3, [r2, #4]
1952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
 5254              		.loc 1 1952 11 view .LVU1538
 5255 011e BDE7     		b	.L373
 5256              	.L389:
1976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5257              		.loc 1 1976 12 is_stmt 0 discriminator 2 view .LVU1539
 5258 0120 A2F58072 		sub	r2, r2, #256
 5259 0124 C6E7     		b	.L375
 5260              	.L390:
1994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
ARM GAS  C:\usertemp\cca0PO6L.s 			page 345


 5261              		.loc 1 1994 15 is_stmt 1 view .LVU1540
 5262 0126 5A68     		ldr	r2, [r3, #4]
 5263 0128 22F02002 		bic	r2, r2, #32
 5264 012c 5A60     		str	r2, [r3, #4]
1995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               break;
 5265              		.loc 1 1995 15 view .LVU1541
 5266 012e 2268     		ldr	r2, [r4]
 5267 0130 5368     		ldr	r3, [r2, #4]
 5268 0132 43F04003 		orr	r3, r3, #64
 5269 0136 5360     		str	r3, [r2, #4]
1996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
 5270              		.loc 1 1996 15 view .LVU1542
 5271 0138 DCE7     		b	.L378
 5272              	.L377:
2011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         /* if Master ADC JAUTO bit is set, Slave injected interruptions
 5273              		.loc 1 2011 9 view .LVU1543
 5274 013a 616D     		ldr	r1, [r4, #84]
 5275 013c 41F48011 		orr	r1, r1, #1048576
 5276 0140 6165     		str	r1, [r4, #84]
2014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         if (READ_BIT(tmpADC_Master->CFGR, ADC_CFGR_JAUTO) != 0UL)
 5277              		.loc 1 2014 9 view .LVU1544
 5278              	.LVL418:
2015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 5279              		.loc 1 2015 9 view .LVU1545
2015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 5280              		.loc 1 2015 13 is_stmt 0 view .LVU1546
 5281 0142 D268     		ldr	r2, [r2, #12]
 5282              	.LVL419:
2015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 5283              		.loc 1 2015 12 view .LVU1547
 5284 0144 12F0007F 		tst	r2, #33554432
 5285 0148 21D0     		beq	.L365
2019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           /* Next, set Slave injected interruptions */
 5286              		.loc 1 2019 11 is_stmt 1 view .LVU1548
 5287 014a 626D     		ldr	r2, [r4, #84]
 5288 014c 22F44052 		bic	r2, r2, #12288
 5289 0150 42F48052 		orr	r2, r2, #4096
 5290 0154 6265     		str	r2, [r4, #84]
2021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 5291              		.loc 1 2021 11 view .LVU1549
2021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 5292              		.loc 1 2021 29 is_stmt 0 view .LVU1550
 5293 0156 2269     		ldr	r2, [r4, #16]
2021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           {
 5294              		.loc 1 2021 11 view .LVU1551
 5295 0158 082A     		cmp	r2, #8
 5296 015a 09D0     		beq	.L391
2029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 5297              		.loc 1 2029 15 is_stmt 1 view .LVU1552
 5298 015c 5A68     		ldr	r2, [r3, #4]
 5299 015e 22F04002 		bic	r2, r2, #64
 5300 0162 5A60     		str	r2, [r3, #4]
2030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               break;
 5301              		.loc 1 2030 15 view .LVU1553
 5302 0164 2268     		ldr	r2, [r4]
 5303 0166 5368     		ldr	r3, [r2, #4]
 5304 0168 43F02003 		orr	r3, r3, #32
ARM GAS  C:\usertemp\cca0PO6L.s 			page 346


 5305 016c 5360     		str	r3, [r2, #4]
2031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****           }
 5306              		.loc 1 2031 15 view .LVU1554
 5307 016e 0EE0     		b	.L365
 5308              	.L391:
2024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 5309              		.loc 1 2024 15 view .LVU1555
 5310 0170 5A68     		ldr	r2, [r3, #4]
 5311 0172 22F02002 		bic	r2, r2, #32
 5312 0176 5A60     		str	r2, [r3, #4]
2025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****               break;
 5313              		.loc 1 2025 15 view .LVU1556
 5314 0178 2268     		ldr	r2, [r4]
 5315 017a 5368     		ldr	r3, [r2, #4]
 5316 017c 43F04003 		orr	r3, r3, #64
 5317 0180 5360     		str	r3, [r2, #4]
2026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             /* case ADC_EOC_SINGLE_CONV */
 5318              		.loc 1 2026 15 view .LVU1557
 5319 0182 04E0     		b	.L365
 5320              	.LVL420:
 5321              	.L366:
2039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5322              		.loc 1 2039 7 view .LVU1558
2039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5323              		.loc 1 2039 7 view .LVU1559
 5324 0184 0023     		movs	r3, #0
 5325 0186 84F85030 		strb	r3, [r4, #80]
 5326 018a 00E0     		b	.L365
 5327              	.LVL421:
 5328              	.L382:
2045:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 5329              		.loc 1 2045 20 is_stmt 0 view .LVU1560
 5330 018c 0220     		movs	r0, #2
 5331              	.LVL422:
 5332              	.L365:
2050:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5333              		.loc 1 2050 1 view .LVU1561
 5334 018e 38BD     		pop	{r3, r4, r5, pc}
 5335              	.LVL423:
 5336              	.L383:
1897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5337              		.loc 1 1897 5 discriminator 1 view .LVU1562
 5338 0190 0220     		movs	r0, #2
 5339              	.LVL424:
1897:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5340              		.loc 1 1897 5 discriminator 1 view .LVU1563
 5341 0192 FCE7     		b	.L365
 5342              	.L393:
 5343              		.align	2
 5344              	.L392:
 5345 0194 00200240 		.word	1073881088
 5346 0198 00210240 		.word	1073881344
 5347 019c C0FFFF7F 		.word	2147483584
 5348 01a0 00630258 		.word	1476551424
 5349              		.cfi_endproc
 5350              	.LFE341:
 5352              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
ARM GAS  C:\usertemp\cca0PO6L.s 			page 347


 5353              		.align	1
 5354              		.global	HAL_ADC_Start_DMA
 5355              		.syntax unified
 5356              		.thumb
 5357              		.thumb_func
 5359              	HAL_ADC_Start_DMA:
 5360              	.LVL425:
 5361              	.LFB343:
2113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5362              		.loc 1 2113 1 is_stmt 1 view -0
 5363              		.cfi_startproc
 5364              		@ args = 0, pretend = 0, frame = 0
 5365              		@ frame_needed = 0, uses_anonymous_args = 0
2113:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5366              		.loc 1 2113 1 is_stmt 0 view .LVU1565
 5367 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5368              	.LCFI21:
 5369              		.cfi_def_cfa_offset 24
 5370              		.cfi_offset 3, -24
 5371              		.cfi_offset 4, -20
 5372              		.cfi_offset 5, -16
 5373              		.cfi_offset 6, -12
 5374              		.cfi_offset 7, -8
 5375              		.cfi_offset 14, -4
 5376 0002 0446     		mov	r4, r0
 5377 0004 0E46     		mov	r6, r1
 5378 0006 1746     		mov	r7, r2
2114:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 5379              		.loc 1 2114 3 is_stmt 1 view .LVU1566
2115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5380              		.loc 1 2115 3 view .LVU1567
2115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5381              		.loc 1 2115 55 is_stmt 0 view .LVU1568
 5382 0008 0068     		ldr	r0, [r0]
 5383              	.LVL426:
2115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5384              		.loc 1 2115 35 view .LVU1569
 5385 000a 3E4A     		ldr	r2, .L411
 5386              	.LVL427:
2115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5387              		.loc 1 2115 35 view .LVU1570
 5388 000c 3E4B     		ldr	r3, .L411+4
 5389 000e 9842     		cmp	r0, r3
 5390 0010 18BF     		it	ne
 5391 0012 9042     		cmpne	r0, r2
 5392 0014 1CD1     		bne	.L404
2115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5393              		.loc 1 2115 35 discriminator 1 view .LVU1571
 5394 0016 03F50073 		add	r3, r3, #512
 5395              	.L395:
 5396              	.LVL428:
 5397              	.LBB505:
 5398              	.LBI505:
6476:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5399              		.loc 2 6476 26 is_stmt 1 view .LVU1572
 5400              	.LBB506:
6478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
ARM GAS  C:\usertemp\cca0PO6L.s 			page 348


 5401              		.loc 2 6478 3 view .LVU1573
6478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5402              		.loc 2 6478 21 is_stmt 0 view .LVU1574
 5403 001a 9D68     		ldr	r5, [r3, #8]
6478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5404              		.loc 2 6478 10 view .LVU1575
 5405 001c 05F01F05 		and	r5, r5, #31
 5406              	.LVL429:
6478:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5407              		.loc 2 6478 10 view .LVU1576
 5408              	.LBE506:
 5409              	.LBE505:
2118:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5410              		.loc 1 2118 3 is_stmt 1 view .LVU1577
2121:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5411              		.loc 1 2121 3 view .LVU1578
 5412              	.LBB507:
 5413              	.LBI507:
6948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5414              		.loc 2 6948 26 view .LVU1579
 5415              	.LBB508:
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5416              		.loc 2 6950 3 view .LVU1580
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5417              		.loc 2 6950 12 is_stmt 0 view .LVU1581
 5418 0020 8068     		ldr	r0, [r0, #8]
 5419              	.LVL430:
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5420              		.loc 2 6950 74 view .LVU1582
 5421 0022 10F0040F 		tst	r0, #4
 5422 0026 69D1     		bne	.L405
 5423              	.LVL431:
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5424              		.loc 2 6950 74 view .LVU1583
 5425              	.LBE508:
 5426              	.LBE507:
2124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5427              		.loc 1 2124 5 is_stmt 1 view .LVU1584
2124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5428              		.loc 1 2124 5 view .LVU1585
 5429 0028 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 5430 002c 012B     		cmp	r3, #1
 5431 002e 67D0     		beq	.L406
2124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5432              		.loc 1 2124 5 discriminator 2 view .LVU1586
 5433 0030 0123     		movs	r3, #1
 5434 0032 84F85030 		strb	r3, [r4, #80]
2124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5435              		.loc 1 2124 5 discriminator 2 view .LVU1587
2128:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         || (tmp_multimode_config == LL_ADC_MULTI_DUAL_INJ_SIMULT)
 5436              		.loc 1 2128 5 view .LVU1588
 5437 0036 092D     		cmp	r5, #9
 5438 0038 05D8     		bhi	.L397
 5439 003a 40F22123 		movw	r3, #545
 5440 003e EB40     		lsrs	r3, r3, r5
 5441 0040 13F0010F 		tst	r3, #1
 5442 0044 06D1     		bne	.L409
ARM GAS  C:\usertemp\cca0PO6L.s 			page 349


 5443              	.L397:
2232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Process unlocked */
 5444              		.loc 1 2232 7 view .LVU1589
 5445              	.LVL432:
2234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5446              		.loc 1 2234 7 view .LVU1590
2234:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5447              		.loc 1 2234 7 view .LVU1591
 5448 0046 0023     		movs	r3, #0
 5449 0048 84F85030 		strb	r3, [r4, #80]
2232:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       /* Process unlocked */
 5450              		.loc 1 2232 22 is_stmt 0 view .LVU1592
 5451 004c 0120     		movs	r0, #1
 5452 004e 56E0     		b	.L396
 5453              	.LVL433:
 5454              	.L404:
2115:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5455              		.loc 1 2115 35 discriminator 2 view .LVU1593
 5456 0050 2E4B     		ldr	r3, .L411+8
 5457 0052 E2E7     		b	.L395
 5458              	.LVL434:
 5459              	.L409:
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5460              		.loc 1 2134 7 is_stmt 1 view .LVU1594
2134:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5461              		.loc 1 2134 24 is_stmt 0 view .LVU1595
 5462 0054 2046     		mov	r0, r4
 5463 0056 FFF7FEFF 		bl	ADC_Enable
 5464              	.LVL435:
2137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 5465              		.loc 1 2137 7 is_stmt 1 view .LVU1596
2137:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 5466              		.loc 1 2137 10 is_stmt 0 view .LVU1597
 5467 005a 0028     		cmp	r0, #0
 5468 005c 4AD1     		bne	.L398
2142:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                           HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL
 5469              		.loc 1 2142 9 is_stmt 1 view .LVU1598
 5470 005e 626D     		ldr	r2, [r4, #84]
 5471 0060 A0F60273 		subw	r3, r0, #3842
 5472 0064 1340     		ands	r3, r3, r2
 5473 0066 43F48073 		orr	r3, r3, #256
 5474 006a 6365     		str	r3, [r4, #84]
2149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5475              		.loc 1 2149 9 view .LVU1599
2149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5476              		.loc 1 2149 14 is_stmt 0 view .LVU1600
 5477 006c 2368     		ldr	r3, [r4]
 5478 006e 264A     		ldr	r2, .L411+4
 5479 0070 9342     		cmp	r3, r2
 5480 0072 39D0     		beq	.L410
2149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5481              		.loc 1 2149 14 discriminator 1 view .LVU1601
 5482 0074 1A46     		mov	r2, r3
 5483              	.L399:
2149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5484              		.loc 1 2149 12 discriminator 4 view .LVU1602
 5485 0076 9342     		cmp	r3, r2
ARM GAS  C:\usertemp\cca0PO6L.s 			page 350


 5486 0078 00D0     		beq	.L400
2150:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****            )
 5487              		.loc 1 2150 13 view .LVU1603
 5488 007a 1DB9     		cbnz	r5, .L401
 5489              	.L400:
2153:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 5490              		.loc 1 2153 11 is_stmt 1 view .LVU1604
 5491 007c 636D     		ldr	r3, [r4, #84]
 5492 007e 23F48013 		bic	r3, r3, #1048576
 5493 0082 6365     		str	r3, [r4, #84]
 5494              	.L401:
2157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 5495              		.loc 1 2157 9 view .LVU1605
2157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 5496              		.loc 1 2157 18 is_stmt 0 view .LVU1606
 5497 0084 636D     		ldr	r3, [r4, #84]
2157:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 5498              		.loc 1 2157 12 view .LVU1607
 5499 0086 13F4805F 		tst	r3, #4096
 5500 008a 30D0     		beq	.L402
2160:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 5501              		.loc 1 2160 11 is_stmt 1 view .LVU1608
 5502 008c A36D     		ldr	r3, [r4, #88]
 5503 008e 23F00603 		bic	r3, r3, #6
 5504 0092 A365     		str	r3, [r4, #88]
 5505              	.L403:
2169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5506              		.loc 1 2169 9 view .LVU1609
2169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5507              		.loc 1 2169 13 is_stmt 0 view .LVU1610
 5508 0094 E36C     		ldr	r3, [r4, #76]
2169:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5509              		.loc 1 2169 44 view .LVU1611
 5510 0096 1E4A     		ldr	r2, .L411+12
 5511 0098 DA63     		str	r2, [r3, #60]
2172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5512              		.loc 1 2172 9 is_stmt 1 view .LVU1612
2172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5513              		.loc 1 2172 13 is_stmt 0 view .LVU1613
 5514 009a E36C     		ldr	r3, [r4, #76]
2172:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5515              		.loc 1 2172 48 view .LVU1614
 5516 009c 1D4A     		ldr	r2, .L411+16
 5517 009e 1A64     		str	r2, [r3, #64]
2175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5518              		.loc 1 2175 9 is_stmt 1 view .LVU1615
2175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5519              		.loc 1 2175 13 is_stmt 0 view .LVU1616
 5520 00a0 E36C     		ldr	r3, [r4, #76]
2175:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5521              		.loc 1 2175 45 view .LVU1617
 5522 00a2 1D4A     		ldr	r2, .L411+20
 5523 00a4 DA64     		str	r2, [r3, #76]
2184:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5524              		.loc 1 2184 9 is_stmt 1 view .LVU1618
 5525 00a6 2368     		ldr	r3, [r4]
 5526 00a8 1C22     		movs	r2, #28
ARM GAS  C:\usertemp\cca0PO6L.s 			page 351


 5527 00aa 1A60     		str	r2, [r3]
2189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5528              		.loc 1 2189 9 view .LVU1619
2189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5529              		.loc 1 2189 9 view .LVU1620
 5530 00ac 0023     		movs	r3, #0
 5531 00ae 84F85030 		strb	r3, [r4, #80]
2189:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5532              		.loc 1 2189 9 view .LVU1621
2194:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5533              		.loc 1 2194 9 view .LVU1622
 5534 00b2 2268     		ldr	r2, [r4]
 5535 00b4 5368     		ldr	r3, [r2, #4]
 5536 00b6 43F01003 		orr	r3, r3, #16
 5537 00ba 5360     		str	r3, [r2, #4]
2209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
 5538              		.loc 1 2209 9 view .LVU1623
 5539 00bc 2168     		ldr	r1, [r4]
2209:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
 5540              		.loc 1 2209 76 is_stmt 0 view .LVU1624
 5541 00be E36A     		ldr	r3, [r4, #44]
 5542              	.LVL436:
 5543              	.LBB509:
 5544              	.LBI509:
4352:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5545              		.loc 2 4352 22 is_stmt 1 view .LVU1625
 5546              	.LBB510:
4354:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5547              		.loc 2 4354 3 view .LVU1626
 5548 00c0 CA68     		ldr	r2, [r1, #12]
 5549 00c2 22F00302 		bic	r2, r2, #3
 5550 00c6 1343     		orrs	r3, r3, r2
 5551              	.LVL437:
4354:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5552              		.loc 2 4354 3 is_stmt 0 view .LVU1627
 5553 00c8 CB60     		str	r3, [r1, #12]
 5554              	.LVL438:
4354:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5555              		.loc 2 4354 3 view .LVU1628
 5556              	.LBE510:
 5557              	.LBE509:
2214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5558              		.loc 1 2214 9 is_stmt 1 view .LVU1629
2214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5559              		.loc 1 2214 76 is_stmt 0 view .LVU1630
 5560 00ca 2168     		ldr	r1, [r4]
2214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5561              		.loc 1 2214 26 view .LVU1631
 5562 00cc 3B46     		mov	r3, r7
 5563 00ce 3246     		mov	r2, r6
 5564 00d0 4031     		adds	r1, r1, #64
 5565 00d2 E06C     		ldr	r0, [r4, #76]
 5566              	.LVL439:
2214:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5567              		.loc 1 2214 26 view .LVU1632
 5568 00d4 FFF7FEFF 		bl	HAL_DMA_Start_IT
 5569              	.LVL440:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 352


2221:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 5570              		.loc 1 2221 9 is_stmt 1 view .LVU1633
 5571 00d8 2268     		ldr	r2, [r4]
 5572              	.LVL441:
 5573              	.LBB511:
 5574              	.LBI511:
6912:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5575              		.loc 2 6912 22 view .LVU1634
 5576              	.LBB512:
6917:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5577              		.loc 2 6917 3 view .LVU1635
 5578 00da 9168     		ldr	r1, [r2, #8]
 5579 00dc 0F4B     		ldr	r3, .L411+24
 5580 00de 0B40     		ands	r3, r3, r1
 5581 00e0 43F00403 		orr	r3, r3, #4
 5582 00e4 9360     		str	r3, [r2, #8]
 5583              	.LVL442:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 5584              		.loc 2 6920 1 is_stmt 0 view .LVU1636
 5585 00e6 0AE0     		b	.L396
 5586              	.L410:
6920:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** 
 5587              		.loc 2 6920 1 view .LVU1637
 5588              	.LBE512:
 5589              	.LBE511:
2149:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 5590              		.loc 1 2149 14 discriminator 2 view .LVU1638
 5591 00e8 A2F58072 		sub	r2, r2, #256
 5592 00ec C3E7     		b	.L399
 5593              	.L402:
2165:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 5594              		.loc 1 2165 11 is_stmt 1 view .LVU1639
 5595 00ee 0023     		movs	r3, #0
 5596 00f0 A365     		str	r3, [r4, #88]
 5597 00f2 CFE7     		b	.L403
 5598              	.L398:
2226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 5599              		.loc 1 2226 9 view .LVU1640
2226:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 5600              		.loc 1 2226 9 view .LVU1641
 5601 00f4 0023     		movs	r3, #0
 5602 00f6 84F85030 		strb	r3, [r4, #80]
 5603 00fa 00E0     		b	.L396
 5604              	.LVL443:
 5605              	.L405:
2239:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 5606              		.loc 1 2239 20 is_stmt 0 view .LVU1642
 5607 00fc 0220     		movs	r0, #2
 5608              	.LVL444:
 5609              	.L396:
2244:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5610              		.loc 1 2244 1 view .LVU1643
 5611 00fe F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5612              	.LVL445:
 5613              	.L406:
2124:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5614              		.loc 1 2124 5 discriminator 1 view .LVU1644
ARM GAS  C:\usertemp\cca0PO6L.s 			page 353


 5615 0100 0220     		movs	r0, #2
 5616 0102 FCE7     		b	.L396
 5617              	.L412:
 5618              		.align	2
 5619              	.L411:
 5620 0104 00200240 		.word	1073881088
 5621 0108 00210240 		.word	1073881344
 5622 010c 00630258 		.word	1476551424
 5623 0110 00000000 		.word	ADC_DMAConvCplt
 5624 0114 00000000 		.word	ADC_DMAHalfConvCplt
 5625 0118 00000000 		.word	ADC_DMAError
 5626 011c C0FFFF7F 		.word	2147483584
 5627              		.cfi_endproc
 5628              	.LFE343:
 5630              		.section	.text.ADC_Disable,"ax",%progbits
 5631              		.align	1
 5632              		.global	ADC_Disable
 5633              		.syntax unified
 5634              		.thumb
 5635              		.thumb_func
 5637              	ADC_Disable:
 5638              	.LVL446:
 5639              	.LFB357:
3753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart;
 5640              		.loc 1 3753 1 is_stmt 1 view -0
 5641              		.cfi_startproc
 5642              		@ args = 0, pretend = 0, frame = 0
 5643              		@ frame_needed = 0, uses_anonymous_args = 0
3753:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tickstart;
 5644              		.loc 1 3753 1 is_stmt 0 view .LVU1646
 5645 0000 38B5     		push	{r3, r4, r5, lr}
 5646              	.LCFI22:
 5647              		.cfi_def_cfa_offset 16
 5648              		.cfi_offset 3, -16
 5649              		.cfi_offset 4, -12
 5650              		.cfi_offset 5, -8
 5651              		.cfi_offset 14, -4
 5652 0002 0446     		mov	r4, r0
3754:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
 5653              		.loc 1 3754 3 is_stmt 1 view .LVU1647
3755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5654              		.loc 1 3755 3 view .LVU1648
3755:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5655              		.loc 1 3755 48 is_stmt 0 view .LVU1649
 5656 0004 0268     		ldr	r2, [r0]
 5657              	.LVL447:
 5658              	.LBB513:
 5659              	.LBI513:
6827:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5660              		.loc 2 6827 26 is_stmt 1 view .LVU1650
 5661              	.LBB514:
6829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5662              		.loc 2 6829 3 view .LVU1651
6829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5663              		.loc 2 6829 12 is_stmt 0 view .LVU1652
 5664 0006 9368     		ldr	r3, [r2, #8]
6829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
ARM GAS  C:\usertemp\cca0PO6L.s 			page 354


 5665              		.loc 2 6829 70 view .LVU1653
 5666 0008 13F00203 		ands	r3, r3, #2
 5667 000c 00D0     		beq	.L414
6829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5668              		.loc 2 6829 70 discriminator 1 view .LVU1654
 5669 000e 0123     		movs	r3, #1
 5670              	.L414:
 5671              	.LVL448:
6829:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5672              		.loc 2 6829 70 discriminator 1 view .LVU1655
 5673              	.LBE514:
 5674              	.LBE513:
3760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
 5675              		.loc 1 3760 3 is_stmt 1 view .LVU1656
 5676              	.LBB515:
 5677              	.LBI515:
6816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5678              		.loc 2 6816 26 view .LVU1657
 5679              	.LBB516:
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5680              		.loc 2 6818 3 view .LVU1658
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5681              		.loc 2 6818 12 is_stmt 0 view .LVU1659
 5682 0010 9168     		ldr	r1, [r2, #8]
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5683              		.loc 2 6818 68 view .LVU1660
 5684 0012 11F0010F 		tst	r1, #1
 5685 0016 37D0     		beq	.L419
 5686              	.LVL449:
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 5687              		.loc 2 6818 68 view .LVU1661
 5688              	.LBE516:
 5689              	.LBE515:
3761:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      )
 5690              		.loc 1 3761 7 view .LVU1662
 5691 0018 002B     		cmp	r3, #0
 5692 001a 37D1     		bne	.L420
3765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5693              		.loc 1 3765 5 is_stmt 1 view .LVU1663
3765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5694              		.loc 1 3765 24 is_stmt 0 view .LVU1664
 5695 001c 9368     		ldr	r3, [r2, #8]
 5696              	.LVL450:
3765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5697              		.loc 1 3765 29 view .LVU1665
 5698 001e 03F00D03 		and	r3, r3, #13
3765:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5699              		.loc 1 3765 8 view .LVU1666
 5700 0022 012B     		cmp	r3, #1
 5701 0024 09D0     		beq	.L422
3774:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5702              		.loc 1 3774 7 is_stmt 1 view .LVU1667
 5703 0026 636D     		ldr	r3, [r4, #84]
 5704 0028 43F01003 		orr	r3, r3, #16
 5705 002c 6365     		str	r3, [r4, #84]
3777:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5706              		.loc 1 3777 7 view .LVU1668
ARM GAS  C:\usertemp\cca0PO6L.s 			page 355


 5707 002e A36D     		ldr	r3, [r4, #88]
 5708 0030 43F00103 		orr	r3, r3, #1
 5709 0034 A365     		str	r3, [r4, #88]
3779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5710              		.loc 1 3779 7 view .LVU1669
3779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5711              		.loc 1 3779 14 is_stmt 0 view .LVU1670
 5712 0036 0120     		movs	r0, #1
 5713              	.LVL451:
3779:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5714              		.loc 1 3779 14 view .LVU1671
 5715 0038 27E0     		b	.L415
 5716              	.LVL452:
 5717              	.L422:
3768:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
 5718              		.loc 1 3768 7 is_stmt 1 view .LVU1672
 5719              	.LBB517:
 5720              	.LBI517:
6797:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 5721              		.loc 2 6797 22 view .LVU1673
 5722              	.LBB518:
6802:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5723              		.loc 2 6802 3 view .LVU1674
 5724 003a 9168     		ldr	r1, [r2, #8]
 5725 003c 144B     		ldr	r3, .L424
 5726 003e 0B40     		ands	r3, r3, r1
 5727 0040 43F00203 		orr	r3, r3, #2
 5728 0044 9360     		str	r3, [r2, #8]
 5729              	.LVL453:
6802:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 5730              		.loc 2 6802 3 is_stmt 0 view .LVU1675
 5731              	.LBE518:
 5732              	.LBE517:
3769:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 5733              		.loc 1 3769 7 is_stmt 1 view .LVU1676
 5734 0046 2368     		ldr	r3, [r4]
 5735 0048 0322     		movs	r2, #3
 5736 004a 1A60     		str	r2, [r3]
3784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5737              		.loc 1 3784 5 view .LVU1677
3784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5738              		.loc 1 3784 17 is_stmt 0 view .LVU1678
 5739 004c FFF7FEFF 		bl	HAL_GetTick
 5740              	.LVL454:
3784:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5741              		.loc 1 3784 17 view .LVU1679
 5742 0050 0546     		mov	r5, r0
 5743              	.LVL455:
3786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5744              		.loc 1 3786 5 is_stmt 1 view .LVU1680
 5745              	.L417:
3786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5746              		.loc 1 3786 47 view .LVU1681
3786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5747              		.loc 1 3786 17 is_stmt 0 view .LVU1682
 5748 0052 2368     		ldr	r3, [r4]
3786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
ARM GAS  C:\usertemp\cca0PO6L.s 			page 356


 5749              		.loc 1 3786 27 view .LVU1683
 5750 0054 9B68     		ldr	r3, [r3, #8]
3786:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 5751              		.loc 1 3786 47 view .LVU1684
 5752 0056 13F0010F 		tst	r3, #1
 5753 005a 13D0     		beq	.L423
3788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 5754              		.loc 1 3788 7 is_stmt 1 view .LVU1685
3788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 5755              		.loc 1 3788 12 is_stmt 0 view .LVU1686
 5756 005c FFF7FEFF 		bl	HAL_GetTick
 5757              	.LVL456:
3788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 5758              		.loc 1 3788 26 discriminator 1 view .LVU1687
 5759 0060 401B     		subs	r0, r0, r5
3788:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 5760              		.loc 1 3788 10 discriminator 1 view .LVU1688
 5761 0062 0228     		cmp	r0, #2
 5762 0064 F5D9     		bls	.L417
3791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 5763              		.loc 1 3791 9 is_stmt 1 view .LVU1689
3791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 5764              		.loc 1 3791 18 is_stmt 0 view .LVU1690
 5765 0066 2368     		ldr	r3, [r4]
3791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 5766              		.loc 1 3791 28 view .LVU1691
 5767 0068 9B68     		ldr	r3, [r3, #8]
3791:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         {
 5768              		.loc 1 3791 12 view .LVU1692
 5769 006a 13F0010F 		tst	r3, #1
 5770 006e F0D0     		beq	.L417
3794:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5771              		.loc 1 3794 11 is_stmt 1 view .LVU1693
 5772 0070 636D     		ldr	r3, [r4, #84]
 5773 0072 43F01003 		orr	r3, r3, #16
 5774 0076 6365     		str	r3, [r4, #84]
3797:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5775              		.loc 1 3797 11 view .LVU1694
 5776 0078 A36D     		ldr	r3, [r4, #88]
 5777 007a 43F00103 		orr	r3, r3, #1
 5778 007e A365     		str	r3, [r4, #88]
3799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 5779              		.loc 1 3799 11 view .LVU1695
3799:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 5780              		.loc 1 3799 18 is_stmt 0 view .LVU1696
 5781 0080 0120     		movs	r0, #1
 5782 0082 02E0     		b	.L415
 5783              	.L423:
3806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 5784              		.loc 1 3806 10 view .LVU1697
 5785 0084 0020     		movs	r0, #0
 5786 0086 00E0     		b	.L415
 5787              	.LVL457:
 5788              	.L419:
3806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 5789              		.loc 1 3806 10 view .LVU1698
 5790 0088 0020     		movs	r0, #0
ARM GAS  C:\usertemp\cca0PO6L.s 			page 357


 5791              	.LVL458:
 5792              	.L415:
3807:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5793              		.loc 1 3807 1 view .LVU1699
 5794 008a 38BD     		pop	{r3, r4, r5, pc}
 5795              	.LVL459:
 5796              	.L420:
3806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 5797              		.loc 1 3806 10 view .LVU1700
 5798 008c 0020     		movs	r0, #0
 5799              	.LVL460:
3806:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 5800              		.loc 1 3806 10 view .LVU1701
 5801 008e FCE7     		b	.L415
 5802              	.L425:
 5803              		.align	2
 5804              	.L424:
 5805 0090 C0FFFF7F 		.word	2147483584
 5806              		.cfi_endproc
 5807              	.LFE357:
 5809              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 5810              		.align	1
 5811              		.global	HAL_ADC_DeInit
 5812              		.syntax unified
 5813              		.thumb
 5814              		.thumb_func
 5816              	HAL_ADC_DeInit:
 5817              	.LVL461:
 5818              	.LFB334:
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5819              		.loc 1 843 1 is_stmt 1 view -0
 5820              		.cfi_startproc
 5821              		@ args = 0, pretend = 0, frame = 0
 5822              		@ frame_needed = 0, uses_anonymous_args = 0
 843:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 5823              		.loc 1 843 1 is_stmt 0 view .LVU1703
 5824 0000 38B5     		push	{r3, r4, r5, lr}
 5825              	.LCFI23:
 5826              		.cfi_def_cfa_offset 16
 5827              		.cfi_offset 3, -16
 5828              		.cfi_offset 4, -12
 5829              		.cfi_offset 5, -8
 5830              		.cfi_offset 14, -4
 844:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5831              		.loc 1 844 3 is_stmt 1 view .LVU1704
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5832              		.loc 1 847 3 view .LVU1705
 847:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5833              		.loc 1 847 6 is_stmt 0 view .LVU1706
 5834 0002 0028     		cmp	r0, #0
 5835 0004 00F0D880 		beq	.L435
 5836 0008 0446     		mov	r4, r0
 853:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5837              		.loc 1 853 3 is_stmt 1 view .LVU1707
 856:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5838              		.loc 1 856 3 view .LVU1708
 5839 000a 436D     		ldr	r3, [r0, #84]
ARM GAS  C:\usertemp\cca0PO6L.s 			page 358


 5840 000c 43F00203 		orr	r3, r3, #2
 5841 0010 4365     		str	r3, [r0, #84]
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5842              		.loc 1 859 3 view .LVU1709
 859:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5843              		.loc 1 859 20 is_stmt 0 view .LVU1710
 5844 0012 0321     		movs	r1, #3
 5845 0014 FFF7FEFF 		bl	ADC_ConversionStop
 5846              	.LVL462:
 867:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5847              		.loc 1 867 3 is_stmt 1 view .LVU1711
 5848 0018 2268     		ldr	r2, [r4]
 5849 001a D368     		ldr	r3, [r2, #12]
 5850 001c 43F40013 		orr	r3, r3, #2097152
 5851 0020 D360     		str	r3, [r2, #12]
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5852              		.loc 1 870 3 view .LVU1712
 870:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5853              		.loc 1 870 6 is_stmt 0 view .LVU1713
 5854 0022 0546     		mov	r5, r0
 5855 0024 0028     		cmp	r0, #0
 5856 0026 00F0B580 		beq	.L438
 5857              	.L428:
 5858              	.LVL463:
 891:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_IT_JQOVF | ADC_IT_OVR  |
 5859              		.loc 1 891 3 is_stmt 1 view .LVU1714
 5860 002a 2268     		ldr	r2, [r4]
 5861 002c 5368     		ldr	r3, [r2, #4]
 5862 002e 6FF30A03 		bfc	r3, #0, #11
 5863 0032 5360     		str	r3, [r2, #4]
 898:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                               ADC_FLAG_JQOVF | ADC_FLAG_OVR  |
 5864              		.loc 1 898 3 view .LVU1715
 5865 0034 2368     		ldr	r3, [r4]
 5866 0036 40F2FF72 		movw	r2, #2047
 5867 003a 1A60     		str	r2, [r3]
 909:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   SET_BIT(hadc->Instance->CR, ADC_CR_DEEPPWD);
 5868              		.loc 1 909 3 view .LVU1716
 5869 003c 2268     		ldr	r2, [r4]
 5870 003e 9368     		ldr	r3, [r2, #8]
 5871 0040 23F0A043 		bic	r3, r3, #1342177280
 5872 0044 9360     		str	r3, [r2, #8]
 910:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5873              		.loc 1 910 3 view .LVU1717
 5874 0046 2268     		ldr	r2, [r4]
 5875 0048 9368     		ldr	r3, [r2, #8]
 5876 004a 43F00053 		orr	r3, r3, #536870912
 5877 004e 9360     		str	r3, [r2, #8]
 913:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_CFGR_AWD1EN  | ADC_CFGR_AWD1SGL | ADC_CFGR_JQM     |
 5878              		.loc 1 913 3 view .LVU1718
 5879 0050 2268     		ldr	r2, [r4]
 5880 0052 D368     		ldr	r3, [r2, #12]
 5881 0054 03F08023 		and	r3, r3, #-2147450880
 5882 0058 D360     		str	r3, [r2, #12]
 919:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5883              		.loc 1 919 3 view .LVU1719
 5884 005a 2268     		ldr	r2, [r4]
 5885 005c D368     		ldr	r3, [r2, #12]
ARM GAS  C:\usertemp\cca0PO6L.s 			page 359


 5886 005e 43F00043 		orr	r3, r3, #-2147483648
 5887 0062 D360     		str	r3, [r2, #12]
 922:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_CFGR2_OVSR  | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE);
 5888              		.loc 1 922 3 view .LVU1720
 5889 0064 2268     		ldr	r2, [r4]
 5890 0066 1169     		ldr	r1, [r2, #16]
 5891 0068 544B     		ldr	r3, .L439
 5892 006a 0B40     		ands	r3, r3, r1
 5893 006c 1361     		str	r3, [r2, #16]
 926:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5894              		.loc 1 926 3 view .LVU1721
 5895 006e 2268     		ldr	r2, [r4]
 5896 0070 5369     		ldr	r3, [r2, #20]
 5897 0072 03F04043 		and	r3, r3, #-1073741824
 5898 0076 5361     		str	r3, [r2, #20]
 929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_SMPR2_SMP15 | ADC_SMPR2_SMP14 | ADC_SMPR2_SMP13 |
 5899              		.loc 1 929 3 view .LVU1722
 5900 0078 2268     		ldr	r2, [r4]
 5901 007a 9369     		ldr	r3, [r2, #24]
 5902 007c 03F07843 		and	r3, r3, #-134217728
 5903 0080 9361     		str	r3, [r2, #24]
 958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->HTR1, ADC_HTR_HT);
 5904              		.loc 1 958 3 view .LVU1723
 5905 0082 2268     		ldr	r2, [r4]
 5906 0084 136A     		ldr	r3, [r2, #32]
 5907 0086 03F07C43 		and	r3, r3, #-67108864
 5908 008a 1362     		str	r3, [r2, #32]
 959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5909              		.loc 1 959 3 view .LVU1724
 5910 008c 2268     		ldr	r2, [r4]
 5911 008e 536A     		ldr	r3, [r2, #36]
 5912 0090 03F07C43 		and	r3, r3, #-67108864
 5913 0094 5362     		str	r3, [r2, #36]
 962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->HTR2, ADC_HTR_HT);
 5914              		.loc 1 962 3 view .LVU1725
 5915 0096 2268     		ldr	r2, [r4]
 5916 0098 D2F8B030 		ldr	r3, [r2, #176]
 5917 009c 03F07C43 		and	r3, r3, #-67108864
 5918 00a0 C2F8B030 		str	r3, [r2, #176]
 963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5919              		.loc 1 963 3 view .LVU1726
 5920 00a4 2268     		ldr	r2, [r4]
 5921 00a6 D2F8B430 		ldr	r3, [r2, #180]
 5922 00aa 03F07C43 		and	r3, r3, #-67108864
 5923 00ae C2F8B430 		str	r3, [r2, #180]
 966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   CLEAR_BIT(hadc->Instance->HTR3, ADC_HTR_HT);
 5924              		.loc 1 966 3 view .LVU1727
 5925 00b2 2268     		ldr	r2, [r4]
 5926 00b4 D2F8B830 		ldr	r3, [r2, #184]
 5927 00b8 03F07C43 		and	r3, r3, #-67108864
 5928 00bc C2F8B830 		str	r3, [r2, #184]
 967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
 5929              		.loc 1 967 3 view .LVU1728
 5930 00c0 2268     		ldr	r2, [r4]
 5931 00c2 D2F8BC30 		ldr	r3, [r2, #188]
 5932 00c6 03F07C43 		and	r3, r3, #-67108864
 5933 00ca C2F8BC30 		str	r3, [r2, #188]
ARM GAS  C:\usertemp\cca0PO6L.s 			page 360


 972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_SQR1_SQ1 | ADC_SQR1_L);
 5934              		.loc 1 972 3 view .LVU1729
 5935 00ce 2268     		ldr	r2, [r4]
 5936 00d0 116B     		ldr	r1, [r2, #48]
 5937 00d2 3B4B     		ldr	r3, .L439+4
 5938 00d4 0B40     		ands	r3, r3, r1
 5939 00d6 1363     		str	r3, [r2, #48]
 976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_SQR2_SQ6 | ADC_SQR2_SQ5);
 5940              		.loc 1 976 3 view .LVU1730
 5941 00d8 2268     		ldr	r2, [r4]
 5942 00da 536B     		ldr	r3, [r2, #52]
 5943 00dc 3949     		ldr	r1, .L439+8
 5944 00de 0B40     		ands	r3, r3, r1
 5945 00e0 5363     		str	r3, [r2, #52]
 980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             ADC_SQR3_SQ11 | ADC_SQR3_SQ10);
 5946              		.loc 1 980 3 view .LVU1731
 5947 00e2 2268     		ldr	r2, [r4]
 5948 00e4 936B     		ldr	r3, [r2, #56]
 5949 00e6 0B40     		ands	r3, r3, r1
 5950 00e8 9363     		str	r3, [r2, #56]
 984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5951              		.loc 1 984 3 view .LVU1732
 5952 00ea 2268     		ldr	r2, [r4]
 5953 00ec D16B     		ldr	r1, [r2, #60]
 5954 00ee 364B     		ldr	r3, .L439+12
 5955 00f0 0B40     		ands	r3, r3, r1
 5956 00f2 D363     		str	r3, [r2, #60]
 992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register OFR2 */
 5957              		.loc 1 992 3 view .LVU1733
 5958 00f4 2268     		ldr	r2, [r4]
 5959 00f6 136E     		ldr	r3, [r2, #96]
 5960 00f8 0023     		movs	r3, #0
 5961 00fa 1366     		str	r3, [r2, #96]
 994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register OFR3 */
 5962              		.loc 1 994 3 view .LVU1734
 5963 00fc 2268     		ldr	r2, [r4]
 5964 00fe 516E     		ldr	r1, [r2, #100]
 5965 0100 5366     		str	r3, [r2, #100]
 996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   /* Reset register OFR4 */
 5966              		.loc 1 996 3 view .LVU1735
 5967 0102 2268     		ldr	r2, [r4]
 5968 0104 916E     		ldr	r1, [r2, #104]
 5969 0106 9366     		str	r3, [r2, #104]
 998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5970              		.loc 1 998 3 view .LVU1736
 5971 0108 2268     		ldr	r2, [r4]
 5972 010a D16E     		ldr	r1, [r2, #108]
 5973 010c D366     		str	r3, [r2, #108]
1004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5974              		.loc 1 1004 3 view .LVU1737
 5975 010e 2168     		ldr	r1, [r4]
 5976 0110 D1F8A030 		ldr	r3, [r1, #160]
 5977 0114 2D4A     		ldr	r2, .L439+16
 5978 0116 1340     		ands	r3, r3, r2
 5979 0118 C1F8A030 		str	r3, [r1, #160]
1007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5980              		.loc 1 1007 3 view .LVU1738
ARM GAS  C:\usertemp\cca0PO6L.s 			page 361


 5981 011c 2168     		ldr	r1, [r4]
 5982 011e D1F8A430 		ldr	r3, [r1, #164]
 5983 0122 1340     		ands	r3, r3, r2
 5984 0124 C1F8A430 		str	r3, [r1, #164]
1028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 5985              		.loc 1 1028 3 view .LVU1739
 5986 0128 2168     		ldr	r1, [r4]
 5987 012a D1F8C030 		ldr	r3, [r1, #192]
 5988 012e 1340     		ands	r3, r3, r2
 5989 0130 C1F8C030 		str	r3, [r1, #192]
1031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_V90 */
 5990              		.loc 1 1031 3 view .LVU1740
 5991 0134 2268     		ldr	r2, [r4]
 5992 0136 D2F8C430 		ldr	r3, [r2, #196]
 5993 013a 03F0F823 		and	r3, r3, #-134154240
 5994 013e C2F8C430 		str	r3, [r2, #196]
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5995              		.loc 1 1038 3 view .LVU1741
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 5996              		.loc 1 1038 7 is_stmt 0 view .LVU1742
 5997 0142 2368     		ldr	r3, [r4]
 5998 0144 2249     		ldr	r1, .L439+20
 5999 0146 234A     		ldr	r2, .L439+24
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6000              		.loc 1 1038 89 view .LVU1743
 6001 0148 9342     		cmp	r3, r2
 6002 014a 18BF     		it	ne
 6003 014c 8B42     		cmpne	r3, r1
 6004 014e 0CBF     		ite	eq
 6005 0150 0123     		moveq	r3, #1
 6006 0152 0023     		movne	r3, #0
 6007 0154 28D1     		bne	.L429
 6008              	.LVL464:
 6009              	.LBB519:
 6010              	.LBI519:
6816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6011              		.loc 2 6816 26 is_stmt 1 view .LVU1744
 6012              	.LBB520:
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6013              		.loc 2 6818 3 view .LVU1745
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6014              		.loc 2 6818 12 is_stmt 0 view .LVU1746
 6015 0156 8968     		ldr	r1, [r1, #8]
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6016              		.loc 2 6818 68 view .LVU1747
 6017 0158 11F00101 		ands	r1, r1, #1
 6018 015c 00D0     		beq	.L430
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6019              		.loc 2 6818 68 discriminator 1 view .LVU1748
 6020 015e 0121     		movs	r1, #1
 6021              	.L430:
 6022              	.LVL465:
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6023              		.loc 2 6818 68 discriminator 1 view .LVU1749
 6024              	.LBE520:
 6025              	.LBE519:
 6026              	.LBB521:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 362


 6027              	.LBI521:
6816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6028              		.loc 2 6816 26 is_stmt 1 view .LVU1750
 6029              	.LBB522:
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6030              		.loc 2 6818 3 view .LVU1751
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6031              		.loc 2 6818 12 is_stmt 0 view .LVU1752
 6032 0160 1C4A     		ldr	r2, .L439+24
 6033 0162 9268     		ldr	r2, [r2, #8]
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6034              		.loc 2 6818 68 view .LVU1753
 6035 0164 12F00102 		ands	r2, r2, #1
 6036 0168 00D0     		beq	.L431
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6037              		.loc 2 6818 68 discriminator 1 view .LVU1754
 6038 016a 0122     		movs	r2, #1
 6039              	.L431:
 6040              	.LVL466:
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6041              		.loc 2 6818 68 discriminator 1 view .LVU1755
 6042              	.LBE522:
 6043              	.LBE521:
1038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6044              		.loc 1 1038 6 discriminator 4 view .LVU1756
 6045 016c 0A43     		orrs	r2, r2, r1
 6046 016e 08D1     		bne	.L433
 6047              	.L432:
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6048              		.loc 1 1047 5 is_stmt 1 view .LVU1757
 6049 0170 03B3     		cbz	r3, .L436
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6050              		.loc 1 1047 5 is_stmt 0 discriminator 1 view .LVU1758
 6051 0172 194A     		ldr	r2, .L439+28
 6052              	.L434:
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6053              		.loc 1 1047 5 discriminator 4 view .LVU1759
 6054 0174 9168     		ldr	r1, [r2, #8]
 6055 0176 194B     		ldr	r3, .L439+32
 6056 0178 0B40     		ands	r3, r3, r1
 6057 017a 9360     		str	r3, [r2, #8]
1068:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 6058              		.loc 1 1068 5 is_stmt 1 view .LVU1760
 6059 017c 2046     		mov	r0, r4
 6060 017e FFF7FEFF 		bl	HAL_ADC_MspDeInit
 6061              	.LVL467:
 6062              	.L433:
1074:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6063              		.loc 1 1074 3 view .LVU1761
 6064 0182 0023     		movs	r3, #0
 6065 0184 A365     		str	r3, [r4, #88]
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
 6066              		.loc 1 1077 3 view .LVU1762
1077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   hadc->InjectionConfig.ChannelCount = 0;
 6067              		.loc 1 1077 38 is_stmt 0 view .LVU1763
 6068 0186 E365     		str	r3, [r4, #92]
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 363


 6069              		.loc 1 1078 3 is_stmt 1 view .LVU1764
1078:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6070              		.loc 1 1078 38 is_stmt 0 view .LVU1765
 6071 0188 2366     		str	r3, [r4, #96]
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6072              		.loc 1 1081 3 is_stmt 1 view .LVU1766
1081:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6073              		.loc 1 1081 15 is_stmt 0 view .LVU1767
 6074 018a 6365     		str	r3, [r4, #84]
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6075              		.loc 1 1084 3 is_stmt 1 view .LVU1768
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6076              		.loc 1 1084 3 view .LVU1769
 6077 018c 84F85030 		strb	r3, [r4, #80]
1084:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6078              		.loc 1 1084 3 view .LVU1770
1087:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 6079              		.loc 1 1087 3 view .LVU1771
 6080              	.LVL468:
 6081              	.L427:
1088:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6082              		.loc 1 1088 1 is_stmt 0 view .LVU1772
 6083 0190 2846     		mov	r0, r5
 6084 0192 38BD     		pop	{r3, r4, r5, pc}
 6085              	.LVL469:
 6086              	.L438:
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6087              		.loc 1 873 5 is_stmt 1 view .LVU1773
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6088              		.loc 1 873 22 is_stmt 0 view .LVU1774
 6089 0194 2046     		mov	r0, r4
 6090              	.LVL470:
 873:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6091              		.loc 1 873 22 view .LVU1775
 6092 0196 FFF7FEFF 		bl	ADC_Disable
 6093              	.LVL471:
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6094              		.loc 1 876 5 is_stmt 1 view .LVU1776
 876:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6095              		.loc 1 876 8 is_stmt 0 view .LVU1777
 6096 019a 0546     		mov	r5, r0
 6097 019c 0028     		cmp	r0, #0
 6098 019e 7FF444AF 		bne	.L428
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 6099              		.loc 1 879 7 is_stmt 1 view .LVU1778
 879:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 6100              		.loc 1 879 19 is_stmt 0 view .LVU1779
 6101 01a2 0123     		movs	r3, #1
 6102 01a4 6365     		str	r3, [r4, #84]
 6103 01a6 40E7     		b	.L428
 6104              	.LVL472:
 6105              	.L429:
 6106              	.LBB523:
 6107              	.LBI523:
6816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6108              		.loc 2 6816 26 is_stmt 1 view .LVU1780
 6109              	.LBB524:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 364


6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6110              		.loc 2 6818 3 view .LVU1781
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6111              		.loc 2 6818 12 is_stmt 0 view .LVU1782
 6112 01a8 0D4A     		ldr	r2, .L439+36
 6113 01aa 9268     		ldr	r2, [r2, #8]
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6114              		.loc 2 6818 68 view .LVU1783
 6115 01ac 12F0010F 		tst	r2, #1
 6116 01b0 E7D1     		bne	.L433
 6117 01b2 DDE7     		b	.L432
 6118              	.LVL473:
 6119              	.L436:
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6120              		.loc 2 6818 68 view .LVU1784
 6121              	.LBE524:
 6122              	.LBE523:
1047:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6123              		.loc 1 1047 5 discriminator 2 view .LVU1785
 6124 01b4 0B4A     		ldr	r2, .L439+40
 6125 01b6 DDE7     		b	.L434
 6126              	.LVL474:
 6127              	.L435:
 849:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 6128              		.loc 1 849 12 view .LVU1786
 6129 01b8 0125     		movs	r5, #1
 6130 01ba E9E7     		b	.L427
 6131              	.L440:
 6132              		.align	2
 6133              	.L439:
 6134 01bc 1CF800FC 		.word	-67045348
 6135 01c0 300882E0 		.word	-528349136
 6136 01c4 200882E0 		.word	-528349152
 6137 01c8 20F8FFFF 		.word	-2016
 6138 01cc 0000F0FF 		.word	-1048576
 6139 01d0 00200240 		.word	1073881088
 6140 01d4 00210240 		.word	1073881344
 6141 01d8 00230240 		.word	1073881856
 6142 01dc E03000FE 		.word	-33541920
 6143 01e0 00600258 		.word	1476550656
 6144 01e4 00630258 		.word	1476551424
 6145              		.cfi_endproc
 6146              	.LFE334:
 6148              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 6149              		.align	1
 6150              		.global	HAL_ADC_Stop
 6151              		.syntax unified
 6152              		.thumb
 6153              		.thumb_func
 6155              	HAL_ADC_Stop:
 6156              	.LVL475:
 6157              	.LFB338:
1519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 6158              		.loc 1 1519 1 is_stmt 1 view -0
 6159              		.cfi_startproc
 6160              		@ args = 0, pretend = 0, frame = 0
 6161              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\usertemp\cca0PO6L.s 			page 365


1520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6162              		.loc 1 1520 3 view .LVU1788
1523:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6163              		.loc 1 1523 3 view .LVU1789
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6164              		.loc 1 1526 3 view .LVU1790
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6165              		.loc 1 1526 3 view .LVU1791
 6166 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 6167 0004 012B     		cmp	r3, #1
 6168 0006 18D0     		beq	.L444
1519:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 6169              		.loc 1 1519 1 is_stmt 0 view .LVU1792
 6170 0008 10B5     		push	{r4, lr}
 6171              	.LCFI24:
 6172              		.cfi_def_cfa_offset 8
 6173              		.cfi_offset 4, -8
 6174              		.cfi_offset 14, -4
 6175 000a 0446     		mov	r4, r0
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6176              		.loc 1 1526 3 is_stmt 1 discriminator 2 view .LVU1793
 6177 000c 0123     		movs	r3, #1
 6178 000e 80F85030 		strb	r3, [r0, #80]
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6179              		.loc 1 1526 3 discriminator 2 view .LVU1794
1529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6180              		.loc 1 1529 3 view .LVU1795
1529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6181              		.loc 1 1529 20 is_stmt 0 view .LVU1796
 6182 0012 0321     		movs	r1, #3
 6183 0014 FFF7FEFF 		bl	ADC_ConversionStop
 6184              	.LVL476:
1532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6185              		.loc 1 1532 3 is_stmt 1 view .LVU1797
1532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6186              		.loc 1 1532 6 is_stmt 0 view .LVU1798
 6187 0018 18B1     		cbz	r0, .L449
 6188              	.L443:
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6189              		.loc 1 1548 3 is_stmt 1 view .LVU1799
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6190              		.loc 1 1548 3 view .LVU1800
 6191 001a 0023     		movs	r3, #0
 6192 001c 84F85030 		strb	r3, [r4, #80]
1548:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6193              		.loc 1 1548 3 view .LVU1801
1551:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 6194              		.loc 1 1551 3 view .LVU1802
1552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6195              		.loc 1 1552 1 is_stmt 0 view .LVU1803
 6196 0020 10BD     		pop	{r4, pc}
 6197              	.LVL477:
 6198              	.L449:
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6199              		.loc 1 1535 5 is_stmt 1 view .LVU1804
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6200              		.loc 1 1535 22 is_stmt 0 view .LVU1805
ARM GAS  C:\usertemp\cca0PO6L.s 			page 366


 6201 0022 2046     		mov	r0, r4
 6202              	.LVL478:
1535:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6203              		.loc 1 1535 22 view .LVU1806
 6204 0024 FFF7FEFF 		bl	ADC_Disable
 6205              	.LVL479:
1538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6206              		.loc 1 1538 5 is_stmt 1 view .LVU1807
1538:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6207              		.loc 1 1538 8 is_stmt 0 view .LVU1808
 6208 0028 0028     		cmp	r0, #0
 6209 002a F6D1     		bne	.L443
1541:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 6210              		.loc 1 1541 7 is_stmt 1 view .LVU1809
 6211 002c 626D     		ldr	r2, [r4, #84]
 6212 002e 044B     		ldr	r3, .L450
 6213 0030 1340     		ands	r3, r3, r2
 6214 0032 43F00103 		orr	r3, r3, #1
 6215 0036 6365     		str	r3, [r4, #84]
 6216 0038 EFE7     		b	.L443
 6217              	.LVL480:
 6218              	.L444:
 6219              	.LCFI25:
 6220              		.cfi_def_cfa_offset 0
 6221              		.cfi_restore 4
 6222              		.cfi_restore 14
1526:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6223              		.loc 1 1526 3 is_stmt 0 discriminator 1 view .LVU1810
 6224 003a 0220     		movs	r0, #2
 6225              	.LVL481:
1552:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6226              		.loc 1 1552 1 view .LVU1811
 6227 003c 7047     		bx	lr
 6228              	.L451:
 6229 003e 00BF     		.align	2
 6230              	.L450:
 6231 0040 FEEEFFFF 		.word	-4354
 6232              		.cfi_endproc
 6233              	.LFE338:
 6235              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 6236              		.align	1
 6237              		.global	HAL_ADC_Stop_IT
 6238              		.syntax unified
 6239              		.thumb
 6240              		.thumb_func
 6242              	HAL_ADC_Stop_IT:
 6243              	.LVL482:
 6244              	.LFB342:
2060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 6245              		.loc 1 2060 1 is_stmt 1 view -0
 6246              		.cfi_startproc
 6247              		@ args = 0, pretend = 0, frame = 0
 6248              		@ frame_needed = 0, uses_anonymous_args = 0
2061:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6249              		.loc 1 2061 3 view .LVU1813
2064:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6250              		.loc 1 2064 3 view .LVU1814
ARM GAS  C:\usertemp\cca0PO6L.s 			page 367


2067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6251              		.loc 1 2067 3 view .LVU1815
2067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6252              		.loc 1 2067 3 view .LVU1816
 6253 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 6254 0004 012B     		cmp	r3, #1
 6255 0006 1DD0     		beq	.L455
2060:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 6256              		.loc 1 2060 1 is_stmt 0 view .LVU1817
 6257 0008 10B5     		push	{r4, lr}
 6258              	.LCFI26:
 6259              		.cfi_def_cfa_offset 8
 6260              		.cfi_offset 4, -8
 6261              		.cfi_offset 14, -4
 6262 000a 0446     		mov	r4, r0
2067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6263              		.loc 1 2067 3 is_stmt 1 discriminator 2 view .LVU1818
 6264 000c 0123     		movs	r3, #1
 6265 000e 80F85030 		strb	r3, [r0, #80]
2067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6266              		.loc 1 2067 3 discriminator 2 view .LVU1819
2070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6267              		.loc 1 2070 3 view .LVU1820
2070:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6268              		.loc 1 2070 20 is_stmt 0 view .LVU1821
 6269 0012 0321     		movs	r1, #3
 6270 0014 FFF7FEFF 		bl	ADC_ConversionStop
 6271              	.LVL483:
2073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6272              		.loc 1 2073 3 is_stmt 1 view .LVU1822
2073:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6273              		.loc 1 2073 6 is_stmt 0 view .LVU1823
 6274 0018 18B1     		cbz	r0, .L460
 6275              	.L454:
2093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6276              		.loc 1 2093 3 is_stmt 1 view .LVU1824
2093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6277              		.loc 1 2093 3 view .LVU1825
 6278 001a 0023     		movs	r3, #0
 6279 001c 84F85030 		strb	r3, [r4, #80]
2093:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6280              		.loc 1 2093 3 view .LVU1826
2096:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 6281              		.loc 1 2096 3 view .LVU1827
2097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6282              		.loc 1 2097 1 is_stmt 0 view .LVU1828
 6283 0020 10BD     		pop	{r4, pc}
 6284              	.LVL484:
 6285              	.L460:
2077:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6286              		.loc 1 2077 5 is_stmt 1 view .LVU1829
 6287 0022 2268     		ldr	r2, [r4]
 6288 0024 5368     		ldr	r3, [r2, #4]
 6289 0026 23F01C03 		bic	r3, r3, #28
 6290 002a 5360     		str	r3, [r2, #4]
2080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6291              		.loc 1 2080 5 view .LVU1830
ARM GAS  C:\usertemp\cca0PO6L.s 			page 368


2080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6292              		.loc 1 2080 22 is_stmt 0 view .LVU1831
 6293 002c 2046     		mov	r0, r4
 6294              	.LVL485:
2080:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6295              		.loc 1 2080 22 view .LVU1832
 6296 002e FFF7FEFF 		bl	ADC_Disable
 6297              	.LVL486:
2083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6298              		.loc 1 2083 5 is_stmt 1 view .LVU1833
2083:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6299              		.loc 1 2083 8 is_stmt 0 view .LVU1834
 6300 0032 0028     		cmp	r0, #0
 6301 0034 F1D1     		bne	.L454
2086:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 6302              		.loc 1 2086 7 is_stmt 1 view .LVU1835
 6303 0036 626D     		ldr	r2, [r4, #84]
 6304 0038 034B     		ldr	r3, .L461
 6305 003a 1340     		ands	r3, r3, r2
 6306 003c 43F00103 		orr	r3, r3, #1
 6307 0040 6365     		str	r3, [r4, #84]
 6308 0042 EAE7     		b	.L454
 6309              	.LVL487:
 6310              	.L455:
 6311              	.LCFI27:
 6312              		.cfi_def_cfa_offset 0
 6313              		.cfi_restore 4
 6314              		.cfi_restore 14
2067:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6315              		.loc 1 2067 3 is_stmt 0 discriminator 1 view .LVU1836
 6316 0044 0220     		movs	r0, #2
 6317              	.LVL488:
2097:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6318              		.loc 1 2097 1 view .LVU1837
 6319 0046 7047     		bx	lr
 6320              	.L462:
 6321              		.align	2
 6322              	.L461:
 6323 0048 FEEEFFFF 		.word	-4354
 6324              		.cfi_endproc
 6325              	.LFE342:
 6327              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 6328              		.align	1
 6329              		.global	HAL_ADC_Stop_DMA
 6330              		.syntax unified
 6331              		.thumb
 6332              		.thumb_func
 6334              	HAL_ADC_Stop_DMA:
 6335              	.LVL489:
 6336              	.LFB344:
2260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 6337              		.loc 1 2260 1 is_stmt 1 view -0
 6338              		.cfi_startproc
 6339              		@ args = 0, pretend = 0, frame = 0
 6340              		@ frame_needed = 0, uses_anonymous_args = 0
2260:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 6341              		.loc 1 2260 1 is_stmt 0 view .LVU1839
ARM GAS  C:\usertemp\cca0PO6L.s 			page 369


 6342 0000 38B5     		push	{r3, r4, r5, lr}
 6343              	.LCFI28:
 6344              		.cfi_def_cfa_offset 16
 6345              		.cfi_offset 3, -16
 6346              		.cfi_offset 4, -12
 6347              		.cfi_offset 5, -8
 6348              		.cfi_offset 14, -4
2261:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6349              		.loc 1 2261 3 is_stmt 1 view .LVU1840
2264:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6350              		.loc 1 2264 3 view .LVU1841
2267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6351              		.loc 1 2267 3 view .LVU1842
2267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6352              		.loc 1 2267 3 view .LVU1843
 6353 0002 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 6354 0006 012B     		cmp	r3, #1
 6355 0008 37D0     		beq	.L469
 6356 000a 0446     		mov	r4, r0
2267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6357              		.loc 1 2267 3 discriminator 2 view .LVU1844
 6358 000c 0123     		movs	r3, #1
 6359 000e 80F85030 		strb	r3, [r0, #80]
2267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6360              		.loc 1 2267 3 discriminator 2 view .LVU1845
2270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6361              		.loc 1 2270 3 view .LVU1846
2270:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6362              		.loc 1 2270 20 is_stmt 0 view .LVU1847
 6363 0012 0321     		movs	r1, #3
 6364 0014 FFF7FEFF 		bl	ADC_ConversionStop
 6365              	.LVL490:
2273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6366              		.loc 1 2273 3 is_stmt 1 view .LVU1848
2273:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6367              		.loc 1 2273 6 is_stmt 0 view .LVU1849
 6368 0018 0546     		mov	r5, r0
 6369 001a D8B9     		cbnz	r0, .L465
2276:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6370              		.loc 1 2276 5 is_stmt 1 view .LVU1850
 6371 001c 2268     		ldr	r2, [r4]
 6372 001e D368     		ldr	r3, [r2, #12]
 6373 0020 23F00303 		bic	r3, r3, #3
 6374 0024 D360     		str	r3, [r2, #12]
2280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6375              		.loc 1 2280 5 view .LVU1851
2280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6376              		.loc 1 2280 13 is_stmt 0 view .LVU1852
 6377 0026 E06C     		ldr	r0, [r4, #76]
 6378              	.LVL491:
2280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6379              		.loc 1 2280 25 view .LVU1853
 6380 0028 90F83530 		ldrb	r3, [r0, #53]	@ zero_extendqisi2
 6381 002c DBB2     		uxtb	r3, r3
2280:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6382              		.loc 1 2280 8 view .LVU1854
 6383 002e 022B     		cmp	r3, #2
ARM GAS  C:\usertemp\cca0PO6L.s 			page 370


 6384 0030 15D0     		beq	.L471
 6385              	.LVL492:
 6386              	.L466:
2293:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6387              		.loc 1 2293 5 is_stmt 1 view .LVU1855
 6388 0032 2268     		ldr	r2, [r4]
 6389 0034 5368     		ldr	r3, [r2, #4]
 6390 0036 23F01003 		bic	r3, r3, #16
 6391 003a 5360     		str	r3, [r2, #4]
2298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6392              		.loc 1 2298 5 view .LVU1856
2298:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6393              		.loc 1 2298 8 is_stmt 0 view .LVU1857
 6394 003c CDB9     		cbnz	r5, .L467
2300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 6395              		.loc 1 2300 7 is_stmt 1 view .LVU1858
2300:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 6396              		.loc 1 2300 24 is_stmt 0 view .LVU1859
 6397 003e 2046     		mov	r0, r4
 6398 0040 FFF7FEFF 		bl	ADC_Disable
 6399              	.LVL493:
 6400 0044 0546     		mov	r5, r0
 6401              	.LVL494:
 6402              	.L468:
2308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6403              		.loc 1 2308 5 is_stmt 1 view .LVU1860
2308:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6404              		.loc 1 2308 8 is_stmt 0 view .LVU1861
 6405 0046 2DB9     		cbnz	r5, .L465
2311:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 6406              		.loc 1 2311 7 is_stmt 1 view .LVU1862
 6407 0048 626D     		ldr	r2, [r4, #84]
 6408 004a 0D4B     		ldr	r3, .L472
 6409 004c 1340     		ands	r3, r3, r2
 6410 004e 43F00103 		orr	r3, r3, #1
 6411 0052 6365     		str	r3, [r4, #84]
 6412              	.LVL495:
 6413              	.L465:
2319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6414              		.loc 1 2319 3 view .LVU1863
2319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6415              		.loc 1 2319 3 view .LVU1864
 6416 0054 0023     		movs	r3, #0
 6417 0056 84F85030 		strb	r3, [r4, #80]
2319:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6418              		.loc 1 2319 3 view .LVU1865
2322:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 6419              		.loc 1 2322 3 view .LVU1866
 6420              	.LVL496:
 6421              	.L464:
2323:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6422              		.loc 1 2323 1 is_stmt 0 view .LVU1867
 6423 005a 2846     		mov	r0, r5
 6424 005c 38BD     		pop	{r3, r4, r5, pc}
 6425              	.LVL497:
 6426              	.L471:
2282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
ARM GAS  C:\usertemp\cca0PO6L.s 			page 371


 6427              		.loc 1 2282 7 is_stmt 1 view .LVU1868
2282:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6428              		.loc 1 2282 24 is_stmt 0 view .LVU1869
 6429 005e FFF7FEFF 		bl	HAL_DMA_Abort
 6430              	.LVL498:
2285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 6431              		.loc 1 2285 7 is_stmt 1 view .LVU1870
2285:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 6432              		.loc 1 2285 10 is_stmt 0 view .LVU1871
 6433 0062 0546     		mov	r5, r0
 6434 0064 0028     		cmp	r0, #0
 6435 0066 E4D0     		beq	.L466
2288:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 6436              		.loc 1 2288 9 is_stmt 1 view .LVU1872
 6437 0068 636D     		ldr	r3, [r4, #84]
 6438 006a 43F04003 		orr	r3, r3, #64
 6439 006e 6365     		str	r3, [r4, #84]
 6440 0070 DFE7     		b	.L466
 6441              	.LVL499:
 6442              	.L467:
2304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 6443              		.loc 1 2304 7 view .LVU1873
2304:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 6444              		.loc 1 2304 13 is_stmt 0 view .LVU1874
 6445 0072 2046     		mov	r0, r4
 6446 0074 FFF7FEFF 		bl	ADC_Disable
 6447              	.LVL500:
 6448 0078 E5E7     		b	.L468
 6449              	.LVL501:
 6450              	.L469:
2267:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6451              		.loc 1 2267 3 discriminator 1 view .LVU1875
 6452 007a 0225     		movs	r5, #2
 6453 007c EDE7     		b	.L464
 6454              	.L473:
 6455 007e 00BF     		.align	2
 6456              	.L472:
 6457 0080 FEEEFFFF 		.word	-4354
 6458              		.cfi_endproc
 6459              	.LFE344:
 6461              		.section	.text.ADC_ConfigureBoostMode,"ax",%progbits
 6462              		.align	1
 6463              		.global	ADC_ConfigureBoostMode
 6464              		.syntax unified
 6465              		.thumb
 6466              		.thumb_func
 6468              	ADC_ConfigureBoostMode:
 6469              	.LVL502:
 6470              	.LFB361:
3928:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3929:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** /**
3930:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @brief  Configure boost mode of selected ADC.
3931:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
3932:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   *         stopped.
3933:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @param  hadc ADC handle
3934:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   * @retval None.
3935:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   */
ARM GAS  C:\usertemp\cca0PO6L.s 			page 372


3936:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** void ADC_ConfigureBoostMode(ADC_HandleTypeDef *hadc)
3937:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** {
 6471              		.loc 1 3937 1 is_stmt 1 view -0
 6472              		.cfi_startproc
 6473              		@ args = 0, pretend = 0, frame = 0
 6474              		@ frame_needed = 0, uses_anonymous_args = 0
 6475              		.loc 1 3937 1 is_stmt 0 view .LVU1877
 6476 0000 38B5     		push	{r3, r4, r5, lr}
 6477              	.LCFI29:
 6478              		.cfi_def_cfa_offset 16
 6479              		.cfi_offset 3, -16
 6480              		.cfi_offset 4, -12
 6481              		.cfi_offset 5, -8
 6482              		.cfi_offset 14, -4
 6483 0002 0446     		mov	r4, r0
3938:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t freq;
 6484              		.loc 1 3938 3 is_stmt 1 view .LVU1878
3939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (ADC_IS_SYNCHRONOUS_CLOCK_MODE(hadc))
 6485              		.loc 1 3939 3 view .LVU1879
 6486              		.loc 1 3939 7 is_stmt 0 view .LVU1880
 6487 0004 0368     		ldr	r3, [r0]
 6488 0006 4E49     		ldr	r1, .L498
 6489 0008 4E4A     		ldr	r2, .L498+4
 6490 000a 9342     		cmp	r3, r2
 6491 000c 18BF     		it	ne
 6492 000e 8B42     		cmpne	r3, r1
 6493 0010 26D1     		bne	.L475
 6494              		.loc 1 3939 7 discriminator 1 view .LVU1881
 6495 0012 4D4B     		ldr	r3, .L498+8
 6496 0014 9B68     		ldr	r3, [r3, #8]
 6497 0016 13F4403F 		tst	r3, #196608
 6498 001a 14BF     		ite	ne
 6499 001c 0123     		movne	r3, #1
 6500 001e 0023     		moveq	r3, #0
 6501              	.L476:
 6502              		.loc 1 3939 6 discriminator 4 view .LVU1882
 6503 0020 43B3     		cbz	r3, .L477
3940:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3941:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     freq = HAL_RCC_GetHCLKFreq();
 6504              		.loc 1 3941 5 is_stmt 1 view .LVU1883
 6505              		.loc 1 3941 12 is_stmt 0 view .LVU1884
 6506 0022 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 6507              	.LVL503:
 6508              		.loc 1 3941 12 view .LVU1885
 6509 0026 0546     		mov	r5, r0
 6510              	.LVL504:
3942:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     switch (hadc->Init.ClockPrescaler)
 6511              		.loc 1 3942 5 is_stmt 1 view .LVU1886
 6512              		.loc 1 3942 23 is_stmt 0 view .LVU1887
 6513 0028 6368     		ldr	r3, [r4, #4]
 6514              		.loc 1 3942 5 view .LVU1888
 6515 002a B3F5003F 		cmp	r3, #131072
 6516 002e 05D0     		beq	.L478
 6517 0030 B3F5403F 		cmp	r3, #196608
 6518 0034 1CD0     		beq	.L479
 6519 0036 B3F5803F 		cmp	r3, #65536
 6520 003a 02D1     		bne	.L480
ARM GAS  C:\usertemp\cca0PO6L.s 			page 373


 6521              	.L478:
3943:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3944:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_SYNC_PCLK_DIV1:
3945:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_SYNC_PCLK_DIV2:
3946:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         freq /= (hadc->Init.ClockPrescaler >> ADC_CCR_CKMODE_Pos);
 6522              		.loc 1 3946 9 is_stmt 1 view .LVU1889
 6523              		.loc 1 3946 44 is_stmt 0 view .LVU1890
 6524 003c 1B0C     		lsrs	r3, r3, #16
 6525              		.loc 1 3946 14 view .LVU1891
 6526 003e B5FBF3F5 		udiv	r5, r5, r3
 6527              	.LVL505:
3947:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6528              		.loc 1 3947 9 is_stmt 1 view .LVU1892
 6529              	.L480:
3948:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_SYNC_PCLK_DIV4:
3949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         freq /= 4UL;
3950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
3951:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       default:
3952:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
3953:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3954:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3955:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else
3956:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     freq = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_ADC);
3958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     switch (hadc->Init.ClockPrescaler)
3959:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
3960:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV2:
3961:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV4:
3962:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV6:
3963:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV8:
3964:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV10:
3965:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV12:
3966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         freq /= ((hadc->Init.ClockPrescaler >> ADC_CCR_PRESC_Pos) << 1UL);
3967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
3968:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV16:
3969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         freq /= 16UL;
3970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
3971:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV32:
3972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         freq /= 32UL;
3973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
3974:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV64:
3975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         freq /= 64UL;
3976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
3977:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV128:
3978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         freq /= 128UL;
3979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
3980:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV256:
3981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         freq /= 256UL;
3982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
3983:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       default:
3984:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
3985:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
3986:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3987:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
3988:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_3) || defined(ADC_VER_V5_V90)
3989:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   freq /= 2U;
3990:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (freq <= 6250000UL)
ARM GAS  C:\usertemp\cca0PO6L.s 			page 374


3991:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3992:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, 0UL);
3993:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3994:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else if (freq <= 12500000UL)
3995:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
3996:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_0);
3997:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
3998:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else if (freq <= 25000000UL)
3999:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
4000:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_1);
4001:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
4002:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else /* if(freq > 25000000UL) */
4003:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
4004:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_1 | ADC_CR_BOOST_0);
4005:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
4006:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #else
4007:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   if (HAL_GetREVID() <= REV_ID_Y) /* STM32H7 silicon Rev.Y */
 6530              		.loc 1 4007 3 view .LVU1893
 6531              		.loc 1 4007 7 is_stmt 0 view .LVU1894
 6532 0042 FFF7FEFF 		bl	HAL_GetREVID
 6533              	.LVL506:
 6534              		.loc 1 4007 6 discriminator 1 view .LVU1895
 6535 0046 41F20303 		movw	r3, #4099
 6536 004a 9842     		cmp	r0, r3
 6537 004c 52D8     		bhi	.L490
4008:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
4009:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (freq > 20000000UL)
 6538              		.loc 1 4009 5 is_stmt 1 view .LVU1896
 6539              		.loc 1 4009 8 is_stmt 0 view .LVU1897
 6540 004e 3F4B     		ldr	r3, .L498+12
 6541 0050 9D42     		cmp	r5, r3
 6542 0052 49D9     		bls	.L491
4010:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
4011:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       SET_BIT(hadc->Instance->CR, ADC_CR_BOOST_0);
 6543              		.loc 1 4011 7 is_stmt 1 view .LVU1898
 6544 0054 2268     		ldr	r2, [r4]
 6545 0056 9368     		ldr	r3, [r2, #8]
 6546 0058 43F48073 		orr	r3, r3, #256
 6547 005c 9360     		str	r3, [r2, #8]
 6548              	.LVL507:
 6549              	.L474:
4012:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
4013:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else
4014:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
4015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       CLEAR_BIT(hadc->Instance->CR, ADC_CR_BOOST_0);
4016:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
4017:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
4018:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   else /* STM32H7 silicon Rev.V */
4019:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
4020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     freq /= 2U; /* divider by 2 for Rev.V */
4021:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
4022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if (freq <= 6250000UL)
4023:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
4024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, 0UL);
4025:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
4026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else if (freq <= 12500000UL)
4027:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
ARM GAS  C:\usertemp\cca0PO6L.s 			page 375


4028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_0);
4029:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
4030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else if (freq <= 25000000UL)
4031:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
4032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_1);
4033:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
4034:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     else /* if(freq > 25000000UL) */
4035:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
4036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CR, ADC_CR_BOOST, ADC_CR_BOOST_1 | ADC_CR_BOOST_0);
4037:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
4038:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
4039:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* ADC_VER_V5_3 */
4040:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** }
 6550              		.loc 1 4040 1 is_stmt 0 view .LVU1899
 6551 005e 38BD     		pop	{r3, r4, r5, pc}
 6552              	.LVL508:
 6553              	.L475:
3939:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6554              		.loc 1 3939 7 discriminator 2 view .LVU1900
 6555 0060 3B4B     		ldr	r3, .L498+16
 6556 0062 9B68     		ldr	r3, [r3, #8]
 6557 0064 13F4403F 		tst	r3, #196608
 6558 0068 14BF     		ite	ne
 6559 006a 0123     		movne	r3, #1
 6560 006c 0023     		moveq	r3, #0
 6561 006e D7E7     		b	.L476
 6562              	.LVL509:
 6563              	.L479:
3949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6564              		.loc 1 3949 9 is_stmt 1 view .LVU1901
3949:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6565              		.loc 1 3949 14 is_stmt 0 view .LVU1902
 6566 0070 8508     		lsrs	r5, r0, #2
 6567              	.LVL510:
3950:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       default:
 6568              		.loc 1 3950 9 is_stmt 1 view .LVU1903
 6569 0072 E6E7     		b	.L480
 6570              	.LVL511:
 6571              	.L477:
3957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     switch (hadc->Init.ClockPrescaler)
 6572              		.loc 1 3957 5 view .LVU1904
3957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     switch (hadc->Init.ClockPrescaler)
 6573              		.loc 1 3957 12 is_stmt 0 view .LVU1905
 6574 0074 4FF40020 		mov	r0, #524288
 6575              	.LVL512:
3957:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     switch (hadc->Init.ClockPrescaler)
 6576              		.loc 1 3957 12 view .LVU1906
 6577 0078 FFF7FEFF 		bl	HAL_RCCEx_GetPeriphCLKFreq
 6578              	.LVL513:
 6579 007c 0546     		mov	r5, r0
 6580              	.LVL514:
3958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6581              		.loc 1 3958 5 is_stmt 1 view .LVU1907
3958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6582              		.loc 1 3958 23 is_stmt 0 view .LVU1908
 6583 007e 6368     		ldr	r3, [r4, #4]
3958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
ARM GAS  C:\usertemp\cca0PO6L.s 			page 376


 6584              		.loc 1 3958 5 view .LVU1909
 6585 0080 B3F5101F 		cmp	r3, #2359296
 6586 0084 2CD0     		beq	.L481
 6587 0086 21D8     		bhi	.L482
 6588 0088 B3F5E01F 		cmp	r3, #1835008
 6589 008c 26D0     		beq	.L483
 6590 008e 04D9     		bls	.L497
 6591 0090 B3F5001F 		cmp	r3, #2097152
 6592 0094 D5D1     		bne	.L480
3972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6593              		.loc 1 3972 9 is_stmt 1 view .LVU1910
3972:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6594              		.loc 1 3972 14 is_stmt 0 view .LVU1911
 6595 0096 4509     		lsrs	r5, r0, #5
 6596              	.LVL515:
3973:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV64:
 6597              		.loc 1 3973 9 is_stmt 1 view .LVU1912
 6598 0098 D3E7     		b	.L480
 6599              	.LVL516:
 6600              	.L497:
3958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6601              		.loc 1 3958 5 is_stmt 0 view .LVU1913
 6602 009a B3F5801F 		cmp	r3, #1048576
 6603 009e 10D0     		beq	.L485
 6604 00a0 09D8     		bhi	.L486
 6605 00a2 B3F5002F 		cmp	r3, #524288
 6606 00a6 0CD0     		beq	.L485
 6607 00a8 B3F5402F 		cmp	r3, #786432
 6608 00ac 09D0     		beq	.L485
 6609 00ae B3F5802F 		cmp	r3, #262144
 6610 00b2 06D0     		beq	.L485
 6611 00b4 C5E7     		b	.L480
 6612              	.L486:
 6613 00b6 B3F5A01F 		cmp	r3, #1310720
 6614 00ba 02D0     		beq	.L485
 6615 00bc B3F5C01F 		cmp	r3, #1572864
 6616 00c0 BFD1     		bne	.L480
 6617              	.L485:
3966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6618              		.loc 1 3966 9 is_stmt 1 view .LVU1914
3966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6619              		.loc 1 3966 45 is_stmt 0 view .LVU1915
 6620 00c2 9B0C     		lsrs	r3, r3, #18
3966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6621              		.loc 1 3966 67 view .LVU1916
 6622 00c4 5B00     		lsls	r3, r3, #1
3966:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6623              		.loc 1 3966 14 view .LVU1917
 6624 00c6 B5FBF3F5 		udiv	r5, r5, r3
 6625              	.LVL517:
3967:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV16:
 6626              		.loc 1 3967 9 is_stmt 1 view .LVU1918
 6627 00ca BAE7     		b	.L480
 6628              	.LVL518:
 6629              	.L482:
3958:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6630              		.loc 1 3958 5 is_stmt 0 view .LVU1919
ARM GAS  C:\usertemp\cca0PO6L.s 			page 377


 6631 00cc B3F5201F 		cmp	r3, #2621440
 6632 00d0 08D0     		beq	.L488
 6633 00d2 B3F5301F 		cmp	r3, #2883584
 6634 00d6 B4D1     		bne	.L480
3981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6635              		.loc 1 3981 9 is_stmt 1 view .LVU1920
3981:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6636              		.loc 1 3981 14 is_stmt 0 view .LVU1921
 6637 00d8 050A     		lsrs	r5, r0, #8
 6638              	.LVL519:
3982:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       default:
 6639              		.loc 1 3982 9 is_stmt 1 view .LVU1922
 6640 00da B2E7     		b	.L480
 6641              	.LVL520:
 6642              	.L483:
3969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6643              		.loc 1 3969 9 view .LVU1923
3969:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6644              		.loc 1 3969 14 is_stmt 0 view .LVU1924
 6645 00dc 0509     		lsrs	r5, r0, #4
 6646              	.LVL521:
3970:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV32:
 6647              		.loc 1 3970 9 is_stmt 1 view .LVU1925
 6648 00de B0E7     		b	.L480
 6649              	.LVL522:
 6650              	.L481:
3975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6651              		.loc 1 3975 9 view .LVU1926
3975:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6652              		.loc 1 3975 14 is_stmt 0 view .LVU1927
 6653 00e0 8509     		lsrs	r5, r0, #6
 6654              	.LVL523:
3976:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV128:
 6655              		.loc 1 3976 9 is_stmt 1 view .LVU1928
 6656 00e2 AEE7     		b	.L480
 6657              	.LVL524:
 6658              	.L488:
3978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6659              		.loc 1 3978 9 view .LVU1929
3978:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         break;
 6660              		.loc 1 3978 14 is_stmt 0 view .LVU1930
 6661 00e4 C509     		lsrs	r5, r0, #7
 6662              	.LVL525:
3979:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       case ADC_CLOCK_ASYNC_DIV256:
 6663              		.loc 1 3979 9 is_stmt 1 view .LVU1931
 6664 00e6 ACE7     		b	.L480
 6665              	.L491:
4015:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 6666              		.loc 1 4015 7 view .LVU1932
 6667 00e8 2268     		ldr	r2, [r4]
 6668 00ea 9368     		ldr	r3, [r2, #8]
 6669 00ec 23F48073 		bic	r3, r3, #256
 6670 00f0 9360     		str	r3, [r2, #8]
 6671 00f2 B4E7     		b	.L474
 6672              	.L490:
4020:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6673              		.loc 1 4020 5 view .LVU1933
ARM GAS  C:\usertemp\cca0PO6L.s 			page 378


 6674              	.LVL526:
4022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6675              		.loc 1 4022 5 view .LVU1934
4022:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6676              		.loc 1 4022 8 is_stmt 0 view .LVU1935
 6677 00f4 174B     		ldr	r3, .L498+20
 6678 00f6 9D42     		cmp	r5, r3
 6679 00f8 05D8     		bhi	.L493
4024:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 6680              		.loc 1 4024 7 is_stmt 1 view .LVU1936
 6681 00fa 2268     		ldr	r2, [r4]
 6682 00fc 9368     		ldr	r3, [r2, #8]
 6683 00fe 23F44073 		bic	r3, r3, #768
 6684 0102 9360     		str	r3, [r2, #8]
 6685 0104 ABE7     		b	.L474
 6686              	.L493:
4026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6687              		.loc 1 4026 10 view .LVU1937
4026:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6688              		.loc 1 4026 13 is_stmt 0 view .LVU1938
 6689 0106 144B     		ldr	r3, .L498+24
 6690 0108 9D42     		cmp	r5, r3
 6691 010a 07D8     		bhi	.L494
4028:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 6692              		.loc 1 4028 7 is_stmt 1 view .LVU1939
 6693 010c 2268     		ldr	r2, [r4]
 6694 010e 9368     		ldr	r3, [r2, #8]
 6695 0110 23F44073 		bic	r3, r3, #768
 6696 0114 43F48073 		orr	r3, r3, #256
 6697 0118 9360     		str	r3, [r2, #8]
 6698 011a A0E7     		b	.L474
 6699              	.L494:
4030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6700              		.loc 1 4030 10 view .LVU1940
4030:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6701              		.loc 1 4030 13 is_stmt 0 view .LVU1941
 6702 011c 0F4B     		ldr	r3, .L498+28
 6703 011e 9D42     		cmp	r5, r3
 6704 0120 07D8     		bhi	.L495
4032:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 6705              		.loc 1 4032 7 is_stmt 1 view .LVU1942
 6706 0122 2268     		ldr	r2, [r4]
 6707 0124 9368     		ldr	r3, [r2, #8]
 6708 0126 23F44073 		bic	r3, r3, #768
 6709 012a 43F40073 		orr	r3, r3, #512
 6710 012e 9360     		str	r3, [r2, #8]
 6711 0130 95E7     		b	.L474
 6712              	.L495:
4036:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 6713              		.loc 1 4036 7 view .LVU1943
 6714 0132 2268     		ldr	r2, [r4]
 6715 0134 9368     		ldr	r3, [r2, #8]
 6716 0136 43F44073 		orr	r3, r3, #768
 6717 013a 9360     		str	r3, [r2, #8]
 6718              		.loc 1 4040 1 is_stmt 0 view .LVU1944
 6719 013c 8FE7     		b	.L474
 6720              	.L499:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 379


 6721 013e 00BF     		.align	2
 6722              	.L498:
 6723 0140 00200240 		.word	1073881088
 6724 0144 00210240 		.word	1073881344
 6725 0148 00230240 		.word	1073881856
 6726 014c 002D3101 		.word	20000000
 6727 0150 00630258 		.word	1476551424
 6728 0154 21BCBE00 		.word	12500001
 6729 0158 41787D01 		.word	25000001
 6730 015c 81F0FA02 		.word	50000001
 6731              		.cfi_endproc
 6732              	.LFE361:
 6734              		.section	.text.HAL_ADC_Init,"ax",%progbits
 6735              		.align	1
 6736              		.global	HAL_ADC_Init
 6737              		.syntax unified
 6738              		.thumb
 6739              		.thumb_func
 6741              	HAL_ADC_Init:
 6742              	.LVL527:
 6743              	.LFB333:
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 6744              		.loc 1 408 1 is_stmt 1 view -0
 6745              		.cfi_startproc
 6746              		@ args = 0, pretend = 0, frame = 8
 6747              		@ frame_needed = 0, uses_anonymous_args = 0
 408:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 6748              		.loc 1 408 1 is_stmt 0 view .LVU1946
 6749 0000 30B5     		push	{r4, r5, lr}
 6750              	.LCFI30:
 6751              		.cfi_def_cfa_offset 12
 6752              		.cfi_offset 4, -12
 6753              		.cfi_offset 5, -8
 6754              		.cfi_offset 14, -4
 6755 0002 83B0     		sub	sp, sp, #12
 6756              	.LCFI31:
 6757              		.cfi_def_cfa_offset 24
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpCFGR;
 6758              		.loc 1 409 3 is_stmt 1 view .LVU1947
 6759              	.LVL528:
 410:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_conversion_on_going;
 6760              		.loc 1 410 3 view .LVU1948
 411:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 6761              		.loc 1 411 3 view .LVU1949
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 6762              		.loc 1 412 3 view .LVU1950
 412:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 6763              		.loc 1 412 17 is_stmt 0 view .LVU1951
 6764 0004 0023     		movs	r3, #0
 6765 0006 0193     		str	r3, [sp, #4]
 413:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 6766              		.loc 1 413 3 is_stmt 1 view .LVU1952
 414:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6767              		.loc 1 414 3 view .LVU1953
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6768              		.loc 1 417 3 view .LVU1954
 417:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
ARM GAS  C:\usertemp\cca0PO6L.s 			page 380


 6769              		.loc 1 417 6 is_stmt 0 view .LVU1955
 6770 0008 0028     		cmp	r0, #0
 6771 000a 00F00A81 		beq	.L527
 6772 000e 0446     		mov	r4, r0
 423:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 6773              		.loc 1 423 3 is_stmt 1 view .LVU1956
 424:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 6774              		.loc 1 424 3 view .LVU1957
 425:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 6775              		.loc 1 425 3 view .LVU1958
 426:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 6776              		.loc 1 426 3 view .LVU1959
 427:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 6777              		.loc 1 427 3 view .LVU1960
 428:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
 6778              		.loc 1 428 3 view .LVU1961
 429:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_CONVERSIONDATAMGT(hadc->Init.ConversionDataManagement));
 6779              		.loc 1 429 3 view .LVU1962
 430:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 6780              		.loc 1 430 3 view .LVU1963
 431:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 6781              		.loc 1 431 3 view .LVU1964
 432:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 6782              		.loc 1 432 3 view .LVU1965
 433:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
 6783              		.loc 1 433 3 view .LVU1966
 434:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6784              		.loc 1 434 3 view .LVU1967
 436:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6785              		.loc 1 436 3 view .LVU1968
 438:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 6786              		.loc 1 438 5 view .LVU1969
 439:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6787              		.loc 1 439 5 view .LVU1970
 441:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6788              		.loc 1 441 5 view .LVU1971
 443:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 6789              		.loc 1 443 7 view .LVU1972
 448:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6790              		.loc 1 448 3 view .LVU1973
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6791              		.loc 1 452 3 view .LVU1974
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6792              		.loc 1 452 11 is_stmt 0 view .LVU1975
 6793 0010 436D     		ldr	r3, [r0, #84]
 452:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6794              		.loc 1 452 6 view .LVU1976
 6795 0012 EBB1     		cbz	r3, .L531
 6796              	.LVL529:
 6797              	.L502:
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6798              		.loc 1 486 3 is_stmt 1 view .LVU1977
 486:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6799              		.loc 1 486 7 is_stmt 0 view .LVU1978
 6800 0014 2368     		ldr	r3, [r4]
 6801              	.LVL530:
 6802              	.LBB525:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 381


 6803              	.LBI525:
6707:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6804              		.loc 2 6707 26 is_stmt 1 view .LVU1979
 6805              	.LBB526:
6709:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6806              		.loc 2 6709 3 view .LVU1980
6709:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6807              		.loc 2 6709 12 is_stmt 0 view .LVU1981
 6808 0016 9A68     		ldr	r2, [r3, #8]
6709:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6809              		.loc 2 6709 74 view .LVU1982
 6810 0018 12F0005F 		tst	r2, #536870912
 6811 001c 03D0     		beq	.L503
 6812              	.LVL531:
6709:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6813              		.loc 2 6709 74 view .LVU1983
 6814              	.LBE526:
 6815              	.LBE525:
 489:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6816              		.loc 1 489 5 is_stmt 1 view .LVU1984
 6817              	.LBB527:
 6818              	.LBI527:
6693:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6819              		.loc 2 6693 22 view .LVU1985
 6820              	.LBB528:
6698:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6821              		.loc 2 6698 3 view .LVU1986
 6822 001e 9968     		ldr	r1, [r3, #8]
 6823 0020 814A     		ldr	r2, .L536
 6824 0022 0A40     		ands	r2, r2, r1
 6825 0024 9A60     		str	r2, [r3, #8]
 6826              	.LVL532:
 6827              	.L503:
6698:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6828              		.loc 2 6698 3 is_stmt 0 view .LVU1987
 6829              	.LBE528:
 6830              	.LBE527:
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6831              		.loc 1 496 3 is_stmt 1 view .LVU1988
 496:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6832              		.loc 1 496 7 is_stmt 0 view .LVU1989
 6833 0026 2368     		ldr	r3, [r4]
 6834              	.LVL533:
 6835              	.LBB529:
 6836              	.LBI529:
6756:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6837              		.loc 2 6756 26 is_stmt 1 view .LVU1990
 6838              	.LBB530:
6758:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6839              		.loc 2 6758 3 view .LVU1991
6758:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6840              		.loc 2 6758 12 is_stmt 0 view .LVU1992
 6841 0028 9A68     		ldr	r2, [r3, #8]
6758:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6842              		.loc 2 6758 76 view .LVU1993
 6843 002a 12F0805F 		tst	r2, #268435456
 6844 002e 1CD1     		bne	.L504
ARM GAS  C:\usertemp\cca0PO6L.s 			page 382


 6845              	.LVL534:
6758:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6846              		.loc 2 6758 76 view .LVU1994
 6847              	.LBE530:
 6848              	.LBE529:
 499:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6849              		.loc 1 499 5 is_stmt 1 view .LVU1995
 6850              	.LBB531:
 6851              	.LBI531:
6726:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6852              		.loc 2 6726 22 view .LVU1996
 6853              	.LBB532:
6731:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 6854              		.loc 2 6731 3 view .LVU1997
 6855 0030 9968     		ldr	r1, [r3, #8]
 6856 0032 7E4A     		ldr	r2, .L536+4
 6857 0034 0A40     		ands	r2, r2, r1
 6858 0036 42F08052 		orr	r2, r2, #268435456
 6859 003a 9A60     		str	r2, [r3, #8]
 6860              	.LVL535:
6731:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 6861              		.loc 2 6731 3 is_stmt 0 view .LVU1998
 6862              	.LBE532:
 6863              	.LBE531:
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 6864              		.loc 1 504 5 is_stmt 1 view .LVU1999
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 6865              		.loc 1 504 89 is_stmt 0 view .LVU2000
 6866 003c 7C4B     		ldr	r3, .L536+8
 6867 003e 1B68     		ldr	r3, [r3]
 6868 0040 9B09     		lsrs	r3, r3, #6
 6869 0042 7C4A     		ldr	r2, .L536+12
 6870 0044 A2FB0323 		umull	r2, r3, r2, r3
 6871 0048 9B09     		lsrs	r3, r3, #6
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 6872              		.loc 1 504 69 view .LVU2001
 6873 004a 0133     		adds	r3, r3, #1
 504:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     while (wait_loop_index != 0UL)
 6874              		.loc 1 504 21 view .LVU2002
 6875 004c 0193     		str	r3, [sp, #4]
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6876              		.loc 1 505 5 is_stmt 1 view .LVU2003
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6877              		.loc 1 505 11 is_stmt 0 view .LVU2004
 6878 004e 09E0     		b	.L505
 6879              	.LVL536:
 6880              	.L531:
 475:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 6881              		.loc 1 475 5 is_stmt 1 view .LVU2005
 6882 0050 FFF7FEFF 		bl	HAL_ADC_MspInit
 6883              	.LVL537:
 479:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6884              		.loc 1 479 5 view .LVU2006
 6885 0054 0023     		movs	r3, #0
 6886 0056 A365     		str	r3, [r4, #88]
 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 6887              		.loc 1 482 5 view .LVU2007
ARM GAS  C:\usertemp\cca0PO6L.s 			page 383


 482:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 6888              		.loc 1 482 16 is_stmt 0 view .LVU2008
 6889 0058 84F85030 		strb	r3, [r4, #80]
 6890 005c DAE7     		b	.L502
 6891              	.L506:
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 6892              		.loc 1 507 7 is_stmt 1 view .LVU2009
 507:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 6893              		.loc 1 507 22 is_stmt 0 view .LVU2010
 6894 005e 019B     		ldr	r3, [sp, #4]
 6895 0060 013B     		subs	r3, r3, #1
 6896 0062 0193     		str	r3, [sp, #4]
 6897              	.L505:
 505:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6898              		.loc 1 505 28 is_stmt 1 view .LVU2011
 6899 0064 019B     		ldr	r3, [sp, #4]
 6900 0066 002B     		cmp	r3, #0
 6901 0068 F9D1     		bne	.L506
 6902              	.L504:
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6903              		.loc 1 514 3 view .LVU2012
 514:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   {
 6904              		.loc 1 514 7 is_stmt 0 view .LVU2013
 6905 006a 2268     		ldr	r2, [r4]
 6906              	.LVL538:
 6907              	.LBB533:
 6908              	.LBI533:
6756:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6909              		.loc 2 6756 26 is_stmt 1 view .LVU2014
 6910              	.LBB534:
6758:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6911              		.loc 2 6758 3 view .LVU2015
6758:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6912              		.loc 2 6758 12 is_stmt 0 view .LVU2016
 6913 006c 9368     		ldr	r3, [r2, #8]
6758:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6914              		.loc 2 6758 76 view .LVU2017
 6915 006e 13F0805F 		tst	r3, #268435456
 6916 0072 40F09980 		bne	.L528
 6917              	.LVL539:
6758:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6918              		.loc 2 6758 76 view .LVU2018
 6919              	.LBE534:
 6920              	.LBE533:
 517:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6921              		.loc 1 517 5 is_stmt 1 view .LVU2019
 6922 0076 636D     		ldr	r3, [r4, #84]
 6923 0078 43F01003 		orr	r3, r3, #16
 6924 007c 6365     		str	r3, [r4, #84]
 520:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6925              		.loc 1 520 5 view .LVU2020
 6926 007e A36D     		ldr	r3, [r4, #88]
 6927 0080 43F00103 		orr	r3, r3, #1
 6928 0084 A365     		str	r3, [r4, #88]
 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 6929              		.loc 1 522 5 view .LVU2021
 6930              	.LVL540:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 384


 522:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 6931              		.loc 1 522 20 is_stmt 0 view .LVU2022
 6932 0086 0125     		movs	r5, #1
 6933              	.LVL541:
 6934              	.L507:
 529:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 6935              		.loc 1 529 3 is_stmt 1 view .LVU2023
 6936              	.LBB535:
 6937              	.LBI535:
6948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6938              		.loc 2 6948 26 view .LVU2024
 6939              	.LBB536:
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6940              		.loc 2 6950 3 view .LVU2025
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6941              		.loc 2 6950 12 is_stmt 0 view .LVU2026
 6942 0088 9368     		ldr	r3, [r2, #8]
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6943              		.loc 2 6950 74 view .LVU2027
 6944 008a 13F00403 		ands	r3, r3, #4
 6945 008e 00D0     		beq	.L508
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6946              		.loc 2 6950 74 discriminator 1 view .LVU2028
 6947 0090 0123     		movs	r3, #1
 6948              	.L508:
 6949              	.LVL542:
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6950              		.loc 2 6950 74 discriminator 1 view .LVU2029
 6951              	.LBE536:
 6952              	.LBE535:
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 6953              		.loc 1 531 3 is_stmt 1 view .LVU2030
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 6954              		.loc 1 531 13 is_stmt 0 view .LVU2031
 6955 0092 616D     		ldr	r1, [r4, #84]
 531:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       && (tmp_adc_reg_is_conversion_on_going == 0UL)
 6956              		.loc 1 531 6 view .LVU2032
 6957 0094 11F0100F 		tst	r1, #16
 6958 0098 40F0BB80 		bne	.L509
 532:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****      )
 6959              		.loc 1 532 7 view .LVU2033
 6960 009c 002B     		cmp	r3, #0
 6961 009e 40F0B880 		bne	.L509
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 6962              		.loc 1 536 5 is_stmt 1 view .LVU2034
 6963 00a2 636D     		ldr	r3, [r4, #84]
 6964              	.LVL543:
 536:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 6965              		.loc 1 536 5 is_stmt 0 view .LVU2035
 6966 00a4 23F48173 		bic	r3, r3, #258
 6967 00a8 43F00203 		orr	r3, r3, #2
 6968 00ac 6365     		str	r3, [r4, #84]
 545:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 6969              		.loc 1 545 5 is_stmt 1 view .LVU2036
 6970              	.LVL544:
 6971              	.LBB537:
 6972              	.LBI537:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 385


6816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 6973              		.loc 2 6816 26 view .LVU2037
 6974              	.LBB538:
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6975              		.loc 2 6818 3 view .LVU2038
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6976              		.loc 2 6818 12 is_stmt 0 view .LVU2039
 6977 00ae 9368     		ldr	r3, [r2, #8]
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6978              		.loc 2 6818 68 view .LVU2040
 6979 00b0 13F0010F 		tst	r3, #1
 6980 00b4 1ED1     		bne	.L510
 6981              	.LVL545:
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 6982              		.loc 2 6818 68 view .LVU2041
 6983              	.LBE538:
 6984              	.LBE537:
 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 6985              		.loc 1 547 7 is_stmt 1 view .LVU2042
 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 6986              		.loc 1 547 11 is_stmt 0 view .LVU2043
 6987 00b6 6049     		ldr	r1, .L536+16
 6988 00b8 604B     		ldr	r3, .L536+20
 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 6989              		.loc 1 547 93 view .LVU2044
 6990 00ba 9A42     		cmp	r2, r3
 6991 00bc 18BF     		it	ne
 6992 00be 8A42     		cmpne	r2, r1
 6993 00c0 0CBF     		ite	eq
 6994 00c2 0122     		moveq	r2, #1
 6995 00c4 0022     		movne	r2, #0
 6996 00c6 71D1     		bne	.L511
 6997              	.LVL546:
 6998              	.LBB539:
 6999              	.LBI539:
6816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 7000              		.loc 2 6816 26 is_stmt 1 view .LVU2045
 7001              	.LBB540:
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7002              		.loc 2 6818 3 view .LVU2046
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7003              		.loc 2 6818 12 is_stmt 0 view .LVU2047
 7004 00c8 8968     		ldr	r1, [r1, #8]
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7005              		.loc 2 6818 68 view .LVU2048
 7006 00ca 11F00101 		ands	r1, r1, #1
 7007 00ce 00D0     		beq	.L512
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7008              		.loc 2 6818 68 discriminator 1 view .LVU2049
 7009 00d0 0121     		movs	r1, #1
 7010              	.L512:
 7011              	.LVL547:
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7012              		.loc 2 6818 68 discriminator 1 view .LVU2050
 7013              	.LBE540:
 7014              	.LBE539:
 7015              	.LBB541:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 386


 7016              	.LBI541:
6816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 7017              		.loc 2 6816 26 is_stmt 1 view .LVU2051
 7018              	.LBB542:
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7019              		.loc 2 6818 3 view .LVU2052
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7020              		.loc 2 6818 12 is_stmt 0 view .LVU2053
 7021 00d2 5A4B     		ldr	r3, .L536+20
 7022 00d4 9B68     		ldr	r3, [r3, #8]
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7023              		.loc 2 6818 68 view .LVU2054
 7024 00d6 13F00103 		ands	r3, r3, #1
 7025 00da 00D0     		beq	.L513
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7026              		.loc 2 6818 68 discriminator 1 view .LVU2055
 7027 00dc 0123     		movs	r3, #1
 7028              	.L513:
 7029              	.LVL548:
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7030              		.loc 2 6818 68 discriminator 1 view .LVU2056
 7031              	.LBE542:
 7032              	.LBE541:
 547:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 7033              		.loc 1 547 10 discriminator 4 view .LVU2057
 7034 00de 0B43     		orrs	r3, r3, r1
 7035 00e0 08D1     		bne	.L510
 7036              	.L514:
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 7037              		.loc 1 566 9 is_stmt 1 view .LVU2058
 7038 00e2 002A     		cmp	r2, #0
 7039 00e4 68D0     		beq	.L529
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 7040              		.loc 1 566 9 is_stmt 0 discriminator 1 view .LVU2059
 7041 00e6 5649     		ldr	r1, .L536+24
 7042              	.L515:
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 7043              		.loc 1 566 9 discriminator 4 view .LVU2060
 7044 00e8 6368     		ldr	r3, [r4, #4]
 7045              	.LVL549:
 7046              	.LBB543:
 7047              	.LBI543:
2647:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 7048              		.loc 2 2647 22 is_stmt 1 view .LVU2061
 7049              	.LBB544:
2649:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7050              		.loc 2 2649 3 view .LVU2062
 7051 00ea 8A68     		ldr	r2, [r1, #8]
 7052 00ec 22F47C12 		bic	r2, r2, #4128768
 7053 00f0 1343     		orrs	r3, r3, r2
 7054              	.LVL550:
2649:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7055              		.loc 2 2649 3 is_stmt 0 view .LVU2063
 7056 00f2 8B60     		str	r3, [r1, #8]
 7057              	.LVL551:
 7058              	.L510:
2649:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
ARM GAS  C:\usertemp\cca0PO6L.s 			page 387


 7059              		.loc 2 2649 3 view .LVU2064
 7060              	.LBE544:
 7061              	.LBE543:
 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 7062              		.loc 1 604 5 is_stmt 1 view .LVU2065
 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 7063              		.loc 1 604 10 is_stmt 0 view .LVU2066
 7064 00f4 FFF7FEFF 		bl	HAL_GetREVID
 7065              	.LVL552:
 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 7066              		.loc 1 604 8 discriminator 1 view .LVU2067
 7067 00f8 41F20303 		movw	r3, #4099
 7068 00fc 9842     		cmp	r0, r3
 7069 00fe 02D9     		bls	.L516
 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 7070              		.loc 1 604 72 discriminator 1 view .LVU2068
 7071 0100 A368     		ldr	r3, [r4, #8]
 604:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 7072              		.loc 1 604 37 discriminator 1 view .LVU2069
 7073 0102 102B     		cmp	r3, #16
 7074 0104 5AD0     		beq	.L532
 7075              	.L516:
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Overrun                                                    |
 7076              		.loc 1 615 7 is_stmt 1 view .LVU2070
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Overrun                                                    |
 7077              		.loc 1 615 19 is_stmt 0 view .LVU2071
 7078 0106 627D     		ldrb	r2, [r4, #21]	@ zero_extendqisi2
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Resolution                                                 |
 7079              		.loc 1 616 29 view .LVU2072
 7080 0108 236B     		ldr	r3, [r4, #48]
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Overrun                                                    |
 7081              		.loc 1 615 89 view .LVU2073
 7082 010a 43EA4233 		orr	r3, r3, r2, lsl #13
 617:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 7083              		.loc 1 617 29 view .LVU2074
 7084 010e A268     		ldr	r2, [r4, #8]
 616:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Resolution                                                 |
 7085              		.loc 1 616 89 view .LVU2075
 7086 0110 1343     		orrs	r3, r3, r2
 618:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 7087              		.loc 1 618 19 view .LVU2076
 7088 0112 227F     		ldrb	r2, [r4, #28]	@ zero_extendqisi2
 615:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Overrun                                                    |
 7089              		.loc 1 615 16 view .LVU2077
 7090 0114 43EA0243 		orr	r3, r3, r2, lsl #16
 7091              	.LVL553:
 7092              	.L517:
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 7093              		.loc 1 623 5 is_stmt 1 view .LVU2078
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 7094              		.loc 1 623 19 is_stmt 0 view .LVU2079
 7095 0118 227F     		ldrb	r2, [r4, #28]	@ zero_extendqisi2
 623:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 7096              		.loc 1 623 8 view .LVU2080
 7097 011a 012A     		cmp	r2, #1
 7098 011c 59D0     		beq	.L533
 7099              	.L518:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 388


 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 7100              		.loc 1 633 5 is_stmt 1 view .LVU2081
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 7101              		.loc 1 633 19 is_stmt 0 view .LVU2082
 7102 011e 626A     		ldr	r2, [r4, #36]
 633:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 7103              		.loc 1 633 8 view .LVU2083
 7104 0120 22B1     		cbz	r2, .L519
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 7105              		.loc 1 635 7 is_stmt 1 view .LVU2084
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 7106              		.loc 1 635 48 is_stmt 0 view .LVU2085
 7107 0122 02F47872 		and	r2, r2, #992
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                  );
 7108              		.loc 1 636 31 view .LVU2086
 7109 0126 A16A     		ldr	r1, [r4, #40]
 636:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                  );
 7110              		.loc 1 636 19 view .LVU2087
 7111 0128 0A43     		orrs	r2, r2, r1
 635:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   | hadc->Init.ExternalTrigConvEdge
 7112              		.loc 1 635 15 view .LVU2088
 7113 012a 1343     		orrs	r3, r3, r2
 7114              	.LVL554:
 7115              	.L519:
 656:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
 7116              		.loc 1 656 5 is_stmt 1 view .LVU2089
 7117 012c 2168     		ldr	r1, [r4]
 7118 012e C868     		ldr	r0, [r1, #12]
 7119 0130 444A     		ldr	r2, .L536+28
 7120 0132 0240     		ands	r2, r2, r0
 7121 0134 1A43     		orrs	r2, r2, r3
 7122 0136 CA60     		str	r2, [r1, #12]
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 7123              		.loc 1 665 5 view .LVU2090
 665:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 7124              		.loc 1 665 46 is_stmt 0 view .LVU2091
 7125 0138 2168     		ldr	r1, [r4]
 7126              	.LVL555:
 7127              	.LBB545:
 7128              	.LBI545:
6948:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 7129              		.loc 2 6948 26 is_stmt 1 view .LVU2092
 7130              	.LBB546:
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7131              		.loc 2 6950 3 view .LVU2093
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7132              		.loc 2 6950 12 is_stmt 0 view .LVU2094
 7133 013a 8A68     		ldr	r2, [r1, #8]
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7134              		.loc 2 6950 74 view .LVU2095
 7135 013c 12F00402 		ands	r2, r2, #4
 7136 0140 00D0     		beq	.L520
6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7137              		.loc 2 6950 74 discriminator 1 view .LVU2096
 7138 0142 0122     		movs	r2, #1
 7139              	.L520:
 7140              	.LVL556:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 389


6950:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7141              		.loc 2 6950 74 discriminator 1 view .LVU2097
 7142              	.LBE546:
 7143              	.LBE545:
 666:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 7144              		.loc 1 666 5 is_stmt 1 view .LVU2098
 7145              	.LBB547:
 7146              	.LBI547:
7143:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 7147              		.loc 2 7143 26 view .LVU2099
 7148              	.LBB548:
7145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7149              		.loc 2 7145 3 view .LVU2100
7145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7150              		.loc 2 7145 12 is_stmt 0 view .LVU2101
 7151 0144 8B68     		ldr	r3, [r1, #8]
 7152              	.LVL557:
7145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7153              		.loc 2 7145 76 view .LVU2102
 7154 0146 13F00803 		ands	r3, r3, #8
 7155 014a 00D0     		beq	.L521
7145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7156              		.loc 2 7145 76 discriminator 1 view .LVU2103
 7157 014c 0123     		movs	r3, #1
 7158              	.L521:
 7159              	.LVL558:
7145:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7160              		.loc 2 7145 76 discriminator 1 view .LVU2104
 7161              	.LBE548:
 7162              	.LBE547:
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 7163              		.loc 1 667 5 is_stmt 1 view .LVU2105
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 7164              		.loc 1 667 8 is_stmt 0 view .LVU2106
 7165 014e 1343     		orrs	r3, r3, r2
 7166              	.LVL559:
 667:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         && (tmp_adc_is_conversion_on_going_injected == 0UL)
 7167              		.loc 1 667 8 view .LVU2107
 7168 0150 1BD1     		bne	.L522
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 7169              		.loc 1 685 7 is_stmt 1 view .LVU2108
 686:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_CFGR_DMACONTREQ((uint32_t)hadc->Init.ConversionDataManagement));
 7170              		.loc 1 686 19 is_stmt 0 view .LVU2109
 7171 0152 227D     		ldrb	r2, [r4, #20]	@ zero_extendqisi2
 7172              	.LVL560:
 687:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
 7173              		.loc 1 687 19 view .LVU2110
 7174 0154 E36A     		ldr	r3, [r4, #44]
 685:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_CFGR_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 7175              		.loc 1 685 15 view .LVU2111
 7176 0156 43EA8232 		orr	r2, r3, r2, lsl #14
 7177              	.LVL561:
 690:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 7178              		.loc 1 690 7 is_stmt 1 view .LVU2112
 7179 015a C868     		ldr	r0, [r1, #12]
 7180 015c 3A4B     		ldr	r3, .L536+32
 7181 015e 0340     		ands	r3, r3, r0
ARM GAS  C:\usertemp\cca0PO6L.s 			page 390


 7182 0160 1343     		orrs	r3, r3, r2
 7183 0162 CB60     		str	r3, [r1, #12]
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 7184              		.loc 1 692 7 view .LVU2113
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 7185              		.loc 1 692 21 is_stmt 0 view .LVU2114
 7186 0164 94F83830 		ldrb	r3, [r4, #56]	@ zero_extendqisi2
 692:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       {
 7187              		.loc 1 692 10 view .LVU2115
 7188 0168 012B     		cmp	r3, #1
 7189 016a 37D0     		beq	.L534
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 7190              		.loc 1 772 9 is_stmt 1 view .LVU2116
 7191 016c 2268     		ldr	r2, [r4]
 7192              	.LVL562:
 772:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 7193              		.loc 1 772 9 is_stmt 0 view .LVU2117
 7194 016e 1369     		ldr	r3, [r2, #16]
 7195 0170 23F00103 		bic	r3, r3, #1
 7196 0174 1361     		str	r3, [r2, #16]
 7197              	.L524:
 776:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #if defined(ADC_VER_V5_V90)
 7198              		.loc 1 776 7 is_stmt 1 view .LVU2118
 7199 0176 2268     		ldr	r2, [r4]
 7200 0178 1369     		ldr	r3, [r2, #16]
 7201 017a 23F07043 		bic	r3, r3, #-268435456
 7202 017e 616B     		ldr	r1, [r4, #52]
 7203 0180 0B43     		orrs	r3, r3, r1
 7204 0182 1361     		str	r3, [r2, #16]
 785:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
 7205              		.loc 1 785 7 view .LVU2119
 7206 0184 2046     		mov	r0, r4
 7207 0186 FFF7FEFF 		bl	ADC_ConfigureBoostMode
 7208              	.LVL563:
 7209              	.L522:
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 7210              		.loc 1 798 5 view .LVU2120
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 7211              		.loc 1 798 19 is_stmt 0 view .LVU2121
 7212 018a E368     		ldr	r3, [r4, #12]
 798:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     {
 7213              		.loc 1 798 8 view .LVU2122
 7214 018c 012B     		cmp	r3, #1
 7215 018e 37D0     		beq	.L535
 805:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 7216              		.loc 1 805 7 is_stmt 1 view .LVU2123
 7217 0190 2268     		ldr	r2, [r4]
 7218 0192 136B     		ldr	r3, [r2, #48]
 7219 0194 23F00F03 		bic	r3, r3, #15
 7220 0198 1363     		str	r3, [r2, #48]
 7221              	.L526:
 810:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 7222              		.loc 1 810 5 view .LVU2124
 7223 019a 636D     		ldr	r3, [r4, #84]
 7224 019c 23F00303 		bic	r3, r3, #3
 7225 01a0 43F00103 		orr	r3, r3, #1
 7226 01a4 6365     		str	r3, [r4, #84]
ARM GAS  C:\usertemp\cca0PO6L.s 			page 391


 7227 01a6 39E0     		b	.L501
 7228              	.LVL564:
 7229              	.L528:
 409:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   uint32_t tmpCFGR;
 7230              		.loc 1 409 21 is_stmt 0 view .LVU2125
 7231 01a8 0025     		movs	r5, #0
 7232 01aa 6DE7     		b	.L507
 7233              	.LVL565:
 7234              	.L511:
 7235              	.LBB549:
 7236              	.LBI549:
6816:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** {
 7237              		.loc 2 6816 26 is_stmt 1 view .LVU2126
 7238              	.LBB550:
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7239              		.loc 2 6818 3 view .LVU2127
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7240              		.loc 2 6818 12 is_stmt 0 view .LVU2128
 7241 01ac 274B     		ldr	r3, .L536+36
 7242 01ae 9B68     		ldr	r3, [r3, #8]
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7243              		.loc 2 6818 68 view .LVU2129
 7244 01b0 13F0010F 		tst	r3, #1
 7245 01b4 9ED1     		bne	.L510
 7246 01b6 94E7     		b	.L514
 7247              	.LVL566:
 7248              	.L529:
6818:Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_adc.h **** }
 7249              		.loc 2 6818 68 view .LVU2130
 7250              	.LBE550:
 7251              	.LBE549:
 566:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****       }
 7252              		.loc 1 566 9 discriminator 2 view .LVU2131
 7253 01b8 2549     		ldr	r1, .L536+40
 7254 01ba 95E7     		b	.L515
 7255              	.L532:
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Overrun                                                    |
 7256              		.loc 1 607 7 is_stmt 1 view .LVU2132
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Overrun                                                    |
 7257              		.loc 1 607 19 is_stmt 0 view .LVU2133
 7258 01bc 617D     		ldrb	r1, [r4, #21]	@ zero_extendqisi2
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Resolution | (ADC_CFGR_RES_1 | ADC_CFGR_RES_0)                |
 7259              		.loc 1 608 29 view .LVU2134
 7260 01be 226B     		ldr	r2, [r4, #48]
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Overrun                                                    |
 7261              		.loc 1 607 89 view .LVU2135
 7262 01c0 42EA4132 		orr	r2, r2, r1, lsl #13
 608:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Resolution | (ADC_CFGR_RES_1 | ADC_CFGR_RES_0)                |
 7263              		.loc 1 608 89 view .LVU2136
 7264 01c4 1343     		orrs	r3, r3, r2
 610:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 7265              		.loc 1 610 19 view .LVU2137
 7266 01c6 227F     		ldrb	r2, [r4, #28]	@ zero_extendqisi2
 609:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   ADC_CFGR_REG_DISCONTINUOUS((uint32_t)hadc->Init.DiscontinuousConvMode));
 7267              		.loc 1 609 92 view .LVU2138
 7268 01c8 43EA0243 		orr	r3, r3, r2, lsl #16
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Overrun                                                    |
ARM GAS  C:\usertemp\cca0PO6L.s 			page 392


 7269              		.loc 1 607 16 view .LVU2139
 7270 01cc 43F00C03 		orr	r3, r3, #12
 7271              	.LVL567:
 607:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                   hadc->Init.Overrun                                                    |
 7272              		.loc 1 607 16 view .LVU2140
 7273 01d0 A2E7     		b	.L517
 7274              	.L533:
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 7275              		.loc 1 625 7 is_stmt 1 view .LVU2141
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 7276              		.loc 1 625 18 is_stmt 0 view .LVU2142
 7277 01d2 226A     		ldr	r2, [r4, #32]
 7278 01d4 013A     		subs	r2, r2, #1
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 7279              		.loc 1 625 15 view .LVU2143
 7280 01d6 43EA4243 		orr	r3, r3, r2, lsl #17
 7281              	.LVL568:
 625:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 7282              		.loc 1 625 15 view .LVU2144
 7283 01da A0E7     		b	.L518
 7284              	.LVL569:
 7285              	.L534:
 704:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** #endif
 7286              		.loc 1 704 9 is_stmt 1 view .LVU2145
 706:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         assert_param(IS_ADC_TRIGGERED_OVERSAMPLING_MODE(hadc->Init.Oversampling.TriggeredMode));
 7287              		.loc 1 706 9 view .LVU2146
 707:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         assert_param(IS_ADC_REGOVERSAMPLING_MODE(hadc->Init.Oversampling.OversamplingStopReset));
 7288              		.loc 1 707 9 view .LVU2147
 708:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 7289              		.loc 1 708 9 view .LVU2148
 710:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****             || (hadc->Init.ExternalTrigConvEdge == ADC_EXTERNALTRIGCONVEDGE_NONE))
 7290              		.loc 1 710 9 view .LVU2149
 714:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****         }
 7291              		.loc 1 714 11 view .LVU2150
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    ADC_CFGR2_ROVSE                       |
 7292              		.loc 1 760 9 view .LVU2151
 7293 01dc 2068     		ldr	r0, [r4]
 7294 01de 0269     		ldr	r2, [r0, #16]
 7295              	.LVL570:
 760:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****                    ADC_CFGR2_ROVSE                       |
 7296              		.loc 1 760 9 is_stmt 0 view .LVU2152
 7297 01e0 1C4B     		ldr	r3, .L536+44
 7298 01e2 1340     		ands	r3, r3, r2
 7299 01e4 E26B     		ldr	r2, [r4, #60]
 7300 01e6 511E     		subs	r1, r2, #1
 7301 01e8 226C     		ldr	r2, [r4, #64]
 7302 01ea 42EA0142 		orr	r2, r2, r1, lsl #16
 7303 01ee 616C     		ldr	r1, [r4, #68]
 7304 01f0 0A43     		orrs	r2, r2, r1
 7305 01f2 A16C     		ldr	r1, [r4, #72]
 7306 01f4 0A43     		orrs	r2, r2, r1
 7307 01f6 1343     		orrs	r3, r3, r2
 7308 01f8 43F00103 		orr	r3, r3, #1
 7309 01fc 0361     		str	r3, [r0, #16]
 7310 01fe BAE7     		b	.L524
 7311              	.LVL571:
 7312              	.L535:
ARM GAS  C:\usertemp\cca0PO6L.s 			page 393


 801:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****     }
 7313              		.loc 1 801 7 is_stmt 1 view .LVU2153
 7314 0200 2168     		ldr	r1, [r4]
 7315 0202 0B6B     		ldr	r3, [r1, #48]
 7316 0204 23F00F03 		bic	r3, r3, #15
 7317 0208 A269     		ldr	r2, [r4, #24]
 7318 020a 013A     		subs	r2, r2, #1
 7319 020c 1343     		orrs	r3, r3, r2
 7320 020e 0B63     		str	r3, [r1, #48]
 7321 0210 C3E7     		b	.L526
 7322              	.LVL572:
 7323              	.L509:
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 7324              		.loc 1 815 5 view .LVU2154
 7325 0212 636D     		ldr	r3, [r4, #84]
 7326              	.LVL573:
 815:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 7327              		.loc 1 815 5 is_stmt 0 view .LVU2155
 7328 0214 43F01003 		orr	r3, r3, #16
 7329 0218 6365     		str	r3, [r4, #84]
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 7330              		.loc 1 817 5 is_stmt 1 view .LVU2156
 7331              	.LVL574:
 817:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 7332              		.loc 1 817 20 is_stmt 0 view .LVU2157
 7333 021a 0125     		movs	r5, #1
 7334              	.LVL575:
 7335              	.L501:
 822:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c **** 
 7336              		.loc 1 822 1 view .LVU2158
 7337 021c 2846     		mov	r0, r5
 7338 021e 03B0     		add	sp, sp, #12
 7339              	.LCFI32:
 7340              		.cfi_remember_state
 7341              		.cfi_def_cfa_offset 12
 7342              		@ sp needed
 7343 0220 30BD     		pop	{r4, r5, pc}
 7344              	.LVL576:
 7345              	.L527:
 7346              	.LCFI33:
 7347              		.cfi_restore_state
 419:Drivers/STM32H7xx_HAL_Driver/Src/stm32h7xx_hal_adc.c ****   }
 7348              		.loc 1 419 12 view .LVU2159
 7349 0222 0125     		movs	r5, #1
 7350 0224 FAE7     		b	.L501
 7351              	.L537:
 7352 0226 00BF     		.align	2
 7353              	.L536:
 7354 0228 C0FFFF5F 		.word	1610612672
 7355 022c C0FFFF6F 		.word	1879048128
 7356 0230 00000000 		.word	SystemCoreClock
 7357 0234 632D3E05 		.word	87960931
 7358 0238 00200240 		.word	1073881088
 7359 023c 00210240 		.word	1073881344
 7360 0240 00230240 		.word	1073881856
 7361 0244 03C0F0FF 		.word	-999421
 7362 0248 FCBFFFFF 		.word	-16388
ARM GAS  C:\usertemp\cca0PO6L.s 			page 394


 7363 024c 00600258 		.word	1476550656
 7364 0250 00630258 		.word	1476551424
 7365 0254 1EF800FC 		.word	-67045346
 7366              		.cfi_endproc
 7367              	.LFE333:
 7369              		.text
 7370              	.Letext0:
 7371              		.file 4 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 7372              		.file 5 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 7373              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 7374              		.file 7 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 7375              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 7376              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 7377              		.file 10 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc.h"
 7378              		.file 11 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_adc_ex.h"
 7379              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc_ex.h"
 7380              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 7381              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 7382              		.file 15 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
ARM GAS  C:\usertemp\cca0PO6L.s 			page 395


DEFINED SYMBOLS
                            *ABS*:00000000 stm32h7xx_hal_adc.c
C:\usertemp\cca0PO6L.s:20     .text.LL_ADC_REG_SetSequencerRanks:00000000 $t
C:\usertemp\cca0PO6L.s:25     .text.LL_ADC_REG_SetSequencerRanks:00000000 LL_ADC_REG_SetSequencerRanks
C:\usertemp\cca0PO6L.s:72     .text.LL_ADC_SetChannelSamplingTime:00000000 $t
C:\usertemp\cca0PO6L.s:77     .text.LL_ADC_SetChannelSamplingTime:00000000 LL_ADC_SetChannelSamplingTime
C:\usertemp\cca0PO6L.s:122    .text.LL_ADC_SetAnalogWDMonitChannels:00000000 $t
C:\usertemp\cca0PO6L.s:127    .text.LL_ADC_SetAnalogWDMonitChannels:00000000 LL_ADC_SetAnalogWDMonitChannels
C:\usertemp\cca0PO6L.s:169    .text.LL_ADC_SetAnalogWDMonitChannels:00000030 $d
C:\usertemp\cca0PO6L.s:174    .text.HAL_ADC_MspInit:00000000 $t
C:\usertemp\cca0PO6L.s:180    .text.HAL_ADC_MspInit:00000000 HAL_ADC_MspInit
C:\usertemp\cca0PO6L.s:195    .text.HAL_ADC_MspDeInit:00000000 $t
C:\usertemp\cca0PO6L.s:201    .text.HAL_ADC_MspDeInit:00000000 HAL_ADC_MspDeInit
C:\usertemp\cca0PO6L.s:216    .text.HAL_ADC_PollForConversion:00000000 $t
C:\usertemp\cca0PO6L.s:222    .text.HAL_ADC_PollForConversion:00000000 HAL_ADC_PollForConversion
C:\usertemp\cca0PO6L.s:522    .text.HAL_ADC_PollForConversion:00000124 $d
C:\usertemp\cca0PO6L.s:529    .text.HAL_ADC_PollForEvent:00000000 $t
C:\usertemp\cca0PO6L.s:535    .text.HAL_ADC_PollForEvent:00000000 HAL_ADC_PollForEvent
C:\usertemp\cca0PO6L.s:723    .text.HAL_ADC_GetValue:00000000 $t
C:\usertemp\cca0PO6L.s:729    .text.HAL_ADC_GetValue:00000000 HAL_ADC_GetValue
C:\usertemp\cca0PO6L.s:750    .text.HAL_ADC_ConvCpltCallback:00000000 $t
C:\usertemp\cca0PO6L.s:756    .text.HAL_ADC_ConvCpltCallback:00000000 HAL_ADC_ConvCpltCallback
C:\usertemp\cca0PO6L.s:771    .text.HAL_ADC_ConvHalfCpltCallback:00000000 $t
C:\usertemp\cca0PO6L.s:777    .text.HAL_ADC_ConvHalfCpltCallback:00000000 HAL_ADC_ConvHalfCpltCallback
C:\usertemp\cca0PO6L.s:792    .text.ADC_DMAHalfConvCplt:00000000 $t
C:\usertemp\cca0PO6L.s:798    .text.ADC_DMAHalfConvCplt:00000000 ADC_DMAHalfConvCplt
C:\usertemp\cca0PO6L.s:825    .text.HAL_ADC_LevelOutOfWindowCallback:00000000 $t
C:\usertemp\cca0PO6L.s:831    .text.HAL_ADC_LevelOutOfWindowCallback:00000000 HAL_ADC_LevelOutOfWindowCallback
C:\usertemp\cca0PO6L.s:846    .text.HAL_ADC_ErrorCallback:00000000 $t
C:\usertemp\cca0PO6L.s:852    .text.HAL_ADC_ErrorCallback:00000000 HAL_ADC_ErrorCallback
C:\usertemp\cca0PO6L.s:867    .text.HAL_ADC_IRQHandler:00000000 $t
C:\usertemp\cca0PO6L.s:873    .text.HAL_ADC_IRQHandler:00000000 HAL_ADC_IRQHandler
C:\usertemp\cca0PO6L.s:1456   .text.HAL_ADC_IRQHandler:0000027c $d
C:\usertemp\cca0PO6L.s:1462   .text.HAL_ADC_IRQHandler:0000028c $t
C:\usertemp\cca0PO6L.s:1511   .text.HAL_ADC_IRQHandler:000002d4 $d
C:\usertemp\cca0PO6L.s:1516   .text.ADC_DMAConvCplt:00000000 $t
C:\usertemp\cca0PO6L.s:1522   .text.ADC_DMAConvCplt:00000000 ADC_DMAConvCplt
C:\usertemp\cca0PO6L.s:1657   .text.ADC_DMAError:00000000 $t
C:\usertemp\cca0PO6L.s:1663   .text.ADC_DMAError:00000000 ADC_DMAError
C:\usertemp\cca0PO6L.s:1697   .text.HAL_ADC_ConfigChannel:00000000 $t
C:\usertemp\cca0PO6L.s:1703   .text.HAL_ADC_ConfigChannel:00000000 HAL_ADC_ConfigChannel
C:\usertemp\cca0PO6L.s:2676   .text.HAL_ADC_ConfigChannel:00000354 $d
C:\usertemp\cca0PO6L.s:2686   .text.HAL_ADC_ConfigChannel:00000360 $t
C:\usertemp\cca0PO6L.s:2976   .text.HAL_ADC_ConfigChannel:00000460 $d
C:\usertemp\cca0PO6L.s:2990   .text.HAL_ADC_AnalogWDGConfig:00000000 $t
C:\usertemp\cca0PO6L.s:2996   .text.HAL_ADC_AnalogWDGConfig:00000000 HAL_ADC_AnalogWDGConfig
C:\usertemp\cca0PO6L.s:3761   .text.HAL_ADC_AnalogWDGConfig:000002c8 $d
C:\usertemp\cca0PO6L.s:3778   .text.HAL_ADC_AnalogWDGConfig:000002d8 $t
C:\usertemp\cca0PO6L.s:4113   .text.HAL_ADC_AnalogWDGConfig:00000428 $d
C:\usertemp\cca0PO6L.s:4119   .text.HAL_ADC_GetState:00000000 $t
C:\usertemp\cca0PO6L.s:4125   .text.HAL_ADC_GetState:00000000 HAL_ADC_GetState
C:\usertemp\cca0PO6L.s:4144   .text.HAL_ADC_GetError:00000000 $t
C:\usertemp\cca0PO6L.s:4150   .text.HAL_ADC_GetError:00000000 HAL_ADC_GetError
C:\usertemp\cca0PO6L.s:4169   .text.ADC_ConversionStop:00000000 $t
C:\usertemp\cca0PO6L.s:4175   .text.ADC_ConversionStop:00000000 ADC_ConversionStop
C:\usertemp\cca0PO6L.s:4504   .text.ADC_ConversionStop:000000f8 $d
C:\usertemp\cca0PO6L.s:4510   .text.ADC_Enable:00000000 $t
ARM GAS  C:\usertemp\cca0PO6L.s 			page 396


C:\usertemp\cca0PO6L.s:4516   .text.ADC_Enable:00000000 ADC_Enable
C:\usertemp\cca0PO6L.s:4743   .text.ADC_Enable:000000c0 $d
C:\usertemp\cca0PO6L.s:4752   .text.HAL_ADC_Start:00000000 $t
C:\usertemp\cca0PO6L.s:4758   .text.HAL_ADC_Start:00000000 HAL_ADC_Start
C:\usertemp\cca0PO6L.s:4997   .text.HAL_ADC_Start:00000100 $d
C:\usertemp\cca0PO6L.s:5005   .text.HAL_ADC_Start_IT:00000000 $t
C:\usertemp\cca0PO6L.s:5011   .text.HAL_ADC_Start_IT:00000000 HAL_ADC_Start_IT
C:\usertemp\cca0PO6L.s:5345   .text.HAL_ADC_Start_IT:00000194 $d
C:\usertemp\cca0PO6L.s:5353   .text.HAL_ADC_Start_DMA:00000000 $t
C:\usertemp\cca0PO6L.s:5359   .text.HAL_ADC_Start_DMA:00000000 HAL_ADC_Start_DMA
C:\usertemp\cca0PO6L.s:5620   .text.HAL_ADC_Start_DMA:00000104 $d
C:\usertemp\cca0PO6L.s:5631   .text.ADC_Disable:00000000 $t
C:\usertemp\cca0PO6L.s:5637   .text.ADC_Disable:00000000 ADC_Disable
C:\usertemp\cca0PO6L.s:5805   .text.ADC_Disable:00000090 $d
C:\usertemp\cca0PO6L.s:5810   .text.HAL_ADC_DeInit:00000000 $t
C:\usertemp\cca0PO6L.s:5816   .text.HAL_ADC_DeInit:00000000 HAL_ADC_DeInit
C:\usertemp\cca0PO6L.s:6134   .text.HAL_ADC_DeInit:000001bc $d
C:\usertemp\cca0PO6L.s:6149   .text.HAL_ADC_Stop:00000000 $t
C:\usertemp\cca0PO6L.s:6155   .text.HAL_ADC_Stop:00000000 HAL_ADC_Stop
C:\usertemp\cca0PO6L.s:6231   .text.HAL_ADC_Stop:00000040 $d
C:\usertemp\cca0PO6L.s:6236   .text.HAL_ADC_Stop_IT:00000000 $t
C:\usertemp\cca0PO6L.s:6242   .text.HAL_ADC_Stop_IT:00000000 HAL_ADC_Stop_IT
C:\usertemp\cca0PO6L.s:6323   .text.HAL_ADC_Stop_IT:00000048 $d
C:\usertemp\cca0PO6L.s:6328   .text.HAL_ADC_Stop_DMA:00000000 $t
C:\usertemp\cca0PO6L.s:6334   .text.HAL_ADC_Stop_DMA:00000000 HAL_ADC_Stop_DMA
C:\usertemp\cca0PO6L.s:6457   .text.HAL_ADC_Stop_DMA:00000080 $d
C:\usertemp\cca0PO6L.s:6462   .text.ADC_ConfigureBoostMode:00000000 $t
C:\usertemp\cca0PO6L.s:6468   .text.ADC_ConfigureBoostMode:00000000 ADC_ConfigureBoostMode
C:\usertemp\cca0PO6L.s:6723   .text.ADC_ConfigureBoostMode:00000140 $d
C:\usertemp\cca0PO6L.s:6735   .text.HAL_ADC_Init:00000000 $t
C:\usertemp\cca0PO6L.s:6741   .text.HAL_ADC_Init:00000000 HAL_ADC_Init
C:\usertemp\cca0PO6L.s:7354   .text.HAL_ADC_Init:00000228 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_ADCEx_EndOfSamplingCallback
HAL_ADCEx_InjectedConvCpltCallback
HAL_ADCEx_LevelOutOfWindow2Callback
HAL_ADCEx_LevelOutOfWindow3Callback
HAL_ADCEx_InjectedQueueOverflowCallback
SystemCoreClock
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_RCC_GetHCLKFreq
HAL_GetREVID
HAL_RCCEx_GetPeriphCLKFreq
