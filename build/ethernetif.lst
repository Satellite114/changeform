ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"ethernetif.c"
  15              		.section	.rodata.str1.4,"aMS",%progbits,1
  16              		.align	2
  17              	.LC0:
  18 0000 45746849 		.ascii	"EthIf\000"
  18      6600
  19              		.text
  20              	.Ltext0:
  21              		.cfi_sections	.debug_frame
  22              		.section	.text.ETH_PHY_IO_DeInit,"ax",%progbits
  23              		.align	1
  24              		.global	ETH_PHY_IO_DeInit
  25              		.syntax unified
  26              		.thumb
  27              		.thumb_func
  29              	ETH_PHY_IO_DeInit:
  30              	.LFB376:
  31              		.file 1 "LWIP/Target/ethernetif.c"
   1:LWIP/Target/ethernetif.c **** /**
   2:LWIP/Target/ethernetif.c ****   ******************************************************************************
   3:LWIP/Target/ethernetif.c ****   * File Name          : ethernetif.c
   4:LWIP/Target/ethernetif.c ****   * Description        : This file provides code for the configuration
   5:LWIP/Target/ethernetif.c ****   *                      of the ethernetif.c MiddleWare.
   6:LWIP/Target/ethernetif.c ****   ******************************************************************************
   7:LWIP/Target/ethernetif.c ****   * @attention
   8:LWIP/Target/ethernetif.c ****   *
   9:LWIP/Target/ethernetif.c ****   * <h2><center>&copy; Copyright (c) 2024 STMicroelectronics.
  10:LWIP/Target/ethernetif.c ****   * All rights reserved.</center></h2>
  11:LWIP/Target/ethernetif.c ****   *
  12:LWIP/Target/ethernetif.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:LWIP/Target/ethernetif.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:LWIP/Target/ethernetif.c ****   * the License. You may obtain a copy of the License at:
  15:LWIP/Target/ethernetif.c ****   *                             www.st.com/SLA0044
  16:LWIP/Target/ethernetif.c ****   *
  17:LWIP/Target/ethernetif.c ****   ******************************************************************************
  18:LWIP/Target/ethernetif.c ****   */
  19:LWIP/Target/ethernetif.c **** 
  20:LWIP/Target/ethernetif.c **** /* Includes ------------------------------------------------------------------*/
  21:LWIP/Target/ethernetif.c **** #include "main.h"
  22:LWIP/Target/ethernetif.c **** #include "lwip/opt.h"
  23:LWIP/Target/ethernetif.c **** #include "lwip/timeouts.h"
  24:LWIP/Target/ethernetif.c **** #include "netif/ethernet.h"
  25:LWIP/Target/ethernetif.c **** #include "netif/etharp.h"
  26:LWIP/Target/ethernetif.c **** #include "lwip/ethip6.h"
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 2


  27:LWIP/Target/ethernetif.c **** #include "ethernetif.h"
  28:LWIP/Target/ethernetif.c **** #include "lan8742.h"
  29:LWIP/Target/ethernetif.c **** #include <string.h>
  30:LWIP/Target/ethernetif.c **** #include "cmsis_os.h"
  31:LWIP/Target/ethernetif.c **** #include "lwip/tcpip.h"
  32:LWIP/Target/ethernetif.c **** 
  33:LWIP/Target/ethernetif.c **** /* Within 'USER CODE' section, code will be kept by default at each generation */
  34:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN 0 */
  35:LWIP/Target/ethernetif.c **** 
  36:LWIP/Target/ethernetif.c **** /* USER CODE END 0 */
  37:LWIP/Target/ethernetif.c **** 
  38:LWIP/Target/ethernetif.c **** /* Private define ------------------------------------------------------------*/
  39:LWIP/Target/ethernetif.c **** /* The time to block waiting for input. */
  40:LWIP/Target/ethernetif.c **** #define TIME_WAITING_FOR_INPUT ( portMAX_DELAY )
  41:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN OS_THREAD_STACK_SIZE_WITH_RTOS */
  42:LWIP/Target/ethernetif.c **** /* Stack size of the interface thread */
  43:LWIP/Target/ethernetif.c **** #define INTERFACE_THREAD_STACK_SIZE ( 350 )
  44:LWIP/Target/ethernetif.c **** /* USER CODE END OS_THREAD_STACK_SIZE_WITH_RTOS */
  45:LWIP/Target/ethernetif.c **** /* Network interface name */
  46:LWIP/Target/ethernetif.c **** #define IFNAME0 's'
  47:LWIP/Target/ethernetif.c **** #define IFNAME1 't'
  48:LWIP/Target/ethernetif.c **** 
  49:LWIP/Target/ethernetif.c **** /* ETH Setting  */
  50:LWIP/Target/ethernetif.c **** #define ETH_DMA_TRANSMIT_TIMEOUT               ( 20U )
  51:LWIP/Target/ethernetif.c **** /* ETH_RX_BUFFER_SIZE parameter is defined in lwipopts.h */
  52:LWIP/Target/ethernetif.c **** 
  53:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN 1 */
  54:LWIP/Target/ethernetif.c **** 
  55:LWIP/Target/ethernetif.c **** /* USER CODE END 1 */
  56:LWIP/Target/ethernetif.c **** 
  57:LWIP/Target/ethernetif.c **** /* Private variables ---------------------------------------------------------*/
  58:LWIP/Target/ethernetif.c **** /*
  59:LWIP/Target/ethernetif.c **** @Note: This interface is implemented to operate in zero-copy mode only:
  60:LWIP/Target/ethernetif.c ****         - Rx buffers are allocated statically and passed directly to the LwIP stack
  61:LWIP/Target/ethernetif.c ****           they will return back to ETH DMA after been processed by the stack.
  62:LWIP/Target/ethernetif.c ****         - Tx Buffers will be allocated from LwIP stack memory heap,
  63:LWIP/Target/ethernetif.c ****           then passed to ETH HAL driver.
  64:LWIP/Target/ethernetif.c **** 
  65:LWIP/Target/ethernetif.c **** @Notes:
  66:LWIP/Target/ethernetif.c ****   1.a. ETH DMA Rx descriptors must be contiguous, the default count is 4,
  67:LWIP/Target/ethernetif.c ****        to customize it please redefine ETH_RX_DESC_CNT in ETH GUI (Rx Descriptor Length)
  68:LWIP/Target/ethernetif.c ****        so that updated value will be generated in stm32xxxx_hal_conf.h
  69:LWIP/Target/ethernetif.c ****   1.b. ETH DMA Tx descriptors must be contiguous, the default count is 4,
  70:LWIP/Target/ethernetif.c ****        to customize it please redefine ETH_TX_DESC_CNT in ETH GUI (Tx Descriptor Length)
  71:LWIP/Target/ethernetif.c ****        so that updated value will be generated in stm32xxxx_hal_conf.h
  72:LWIP/Target/ethernetif.c **** 
  73:LWIP/Target/ethernetif.c ****   2.a. Rx Buffers number must be between ETH_RX_DESC_CNT and 2*ETH_RX_DESC_CNT
  74:LWIP/Target/ethernetif.c ****   2.b. Rx Buffers must have the same size: ETH_RX_BUFFER_SIZE, this value must
  75:LWIP/Target/ethernetif.c ****        passed to ETH DMA in the init field (heth.Init.RxBuffLen)
  76:LWIP/Target/ethernetif.c ****   2.c  The RX Ruffers addresses and sizes must be properly defined to be aligned
  77:LWIP/Target/ethernetif.c ****        to L1-CACHE line size (32 bytes).
  78:LWIP/Target/ethernetif.c **** */
  79:LWIP/Target/ethernetif.c **** 
  80:LWIP/Target/ethernetif.c **** #if defined ( __ICCARM__ ) /*!< IAR Compiler */
  81:LWIP/Target/ethernetif.c **** 
  82:LWIP/Target/ethernetif.c **** #pragma location=0x30040000
  83:LWIP/Target/ethernetif.c **** ETH_DMADescTypeDef  DMARxDscrTab[ETH_RX_DESC_CNT]; /* Ethernet Rx DMA Descriptors */
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 3


  84:LWIP/Target/ethernetif.c **** #pragma location=0x30040060
  85:LWIP/Target/ethernetif.c **** ETH_DMADescTypeDef  DMATxDscrTab[ETH_TX_DESC_CNT]; /* Ethernet Tx DMA Descriptors */
  86:LWIP/Target/ethernetif.c **** #pragma location=0x30040200
  87:LWIP/Target/ethernetif.c **** uint8_t Rx_Buff[ETH_RX_DESC_CNT][ETH_RX_BUFFER_SIZE]; /* Ethernet Receive Buffers */
  88:LWIP/Target/ethernetif.c **** 
  89:LWIP/Target/ethernetif.c **** #elif defined ( __CC_ARM )  /* MDK ARM Compiler */
  90:LWIP/Target/ethernetif.c **** 
  91:LWIP/Target/ethernetif.c **** __attribute__((at(0x30040000))) ETH_DMADescTypeDef  DMARxDscrTab[ETH_RX_DESC_CNT]; /* Ethernet Rx D
  92:LWIP/Target/ethernetif.c **** __attribute__((at(0x30040060))) ETH_DMADescTypeDef  DMATxDscrTab[ETH_TX_DESC_CNT]; /* Ethernet Tx D
  93:LWIP/Target/ethernetif.c **** __attribute__((at(0x30040200))) uint8_t Rx_Buff[ETH_RX_DESC_CNT][ETH_RX_BUFFER_SIZE]; /* Ethernet R
  94:LWIP/Target/ethernetif.c **** 
  95:LWIP/Target/ethernetif.c **** #elif defined ( __GNUC__ ) /* GNU Compiler */
  96:LWIP/Target/ethernetif.c **** 
  97:LWIP/Target/ethernetif.c **** ETH_DMADescTypeDef DMARxDscrTab[ETH_RX_DESC_CNT] __attribute__((section(".RxDecripSection"))); /* E
  98:LWIP/Target/ethernetif.c **** ETH_DMADescTypeDef DMATxDscrTab[ETH_TX_DESC_CNT] __attribute__((section(".TxDecripSection")));   /*
  99:LWIP/Target/ethernetif.c **** uint8_t Rx_Buff[ETH_RX_DESC_CNT][ETH_RX_BUFFER_SIZE] __attribute__((section(".RxArraySection"))); /
 100:LWIP/Target/ethernetif.c **** 
 101:LWIP/Target/ethernetif.c **** #endif
 102:LWIP/Target/ethernetif.c **** 
 103:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN 2 */
 104:LWIP/Target/ethernetif.c **** 
 105:LWIP/Target/ethernetif.c **** /* USER CODE END 2 */
 106:LWIP/Target/ethernetif.c **** 
 107:LWIP/Target/ethernetif.c **** osSemaphoreId RxPktSemaphore = NULL; /* Semaphore to signal incoming packets */
 108:LWIP/Target/ethernetif.c **** 
 109:LWIP/Target/ethernetif.c **** /* Global Ethernet handle */
 110:LWIP/Target/ethernetif.c **** ETH_HandleTypeDef heth;
 111:LWIP/Target/ethernetif.c **** ETH_TxPacketConfig TxConfig;
 112:LWIP/Target/ethernetif.c **** 
 113:LWIP/Target/ethernetif.c **** /* Memory Pool Declaration */
 114:LWIP/Target/ethernetif.c **** LWIP_MEMPOOL_DECLARE(RX_POOL, 10, sizeof(struct pbuf_custom), "Zero-copy RX PBUF pool");
 115:LWIP/Target/ethernetif.c **** 
 116:LWIP/Target/ethernetif.c **** /* Private function prototypes -----------------------------------------------*/
 117:LWIP/Target/ethernetif.c **** int32_t ETH_PHY_IO_Init(void);
 118:LWIP/Target/ethernetif.c **** int32_t ETH_PHY_IO_DeInit (void);
 119:LWIP/Target/ethernetif.c **** int32_t ETH_PHY_IO_ReadReg(uint32_t DevAddr, uint32_t RegAddr, uint32_t *pRegVal);
 120:LWIP/Target/ethernetif.c **** int32_t ETH_PHY_IO_WriteReg(uint32_t DevAddr, uint32_t RegAddr, uint32_t RegVal);
 121:LWIP/Target/ethernetif.c **** int32_t ETH_PHY_IO_GetTick(void);
 122:LWIP/Target/ethernetif.c **** 
 123:LWIP/Target/ethernetif.c **** lan8742_Object_t LAN8742;
 124:LWIP/Target/ethernetif.c **** lan8742_IOCtx_t  LAN8742_IOCtx = {ETH_PHY_IO_Init,
 125:LWIP/Target/ethernetif.c ****                                   ETH_PHY_IO_DeInit,
 126:LWIP/Target/ethernetif.c ****                                   ETH_PHY_IO_WriteReg,
 127:LWIP/Target/ethernetif.c ****                                   ETH_PHY_IO_ReadReg,
 128:LWIP/Target/ethernetif.c ****                                   ETH_PHY_IO_GetTick};
 129:LWIP/Target/ethernetif.c **** 
 130:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN 3 */
 131:LWIP/Target/ethernetif.c **** 
 132:LWIP/Target/ethernetif.c **** /* USER CODE END 3 */
 133:LWIP/Target/ethernetif.c **** 
 134:LWIP/Target/ethernetif.c **** /* Private functions ---------------------------------------------------------*/
 135:LWIP/Target/ethernetif.c **** void pbuf_free_custom(struct pbuf *p);
 136:LWIP/Target/ethernetif.c **** void Error_Handler(void);
 137:LWIP/Target/ethernetif.c **** 
 138:LWIP/Target/ethernetif.c **** void HAL_ETH_MspInit(ETH_HandleTypeDef* ethHandle)
 139:LWIP/Target/ethernetif.c **** {
 140:LWIP/Target/ethernetif.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 4


 141:LWIP/Target/ethernetif.c ****   if(ethHandle->Instance==ETH)
 142:LWIP/Target/ethernetif.c ****   {
 143:LWIP/Target/ethernetif.c ****   /* USER CODE BEGIN ETH_MspInit 0 */
 144:LWIP/Target/ethernetif.c **** 
 145:LWIP/Target/ethernetif.c ****   /* USER CODE END ETH_MspInit 0 */
 146:LWIP/Target/ethernetif.c ****     /* Enable Peripheral clock */
 147:LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1MAC_CLK_ENABLE();
 148:LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1TX_CLK_ENABLE();
 149:LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1RX_CLK_ENABLE();
 150:LWIP/Target/ethernetif.c **** 
 151:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 152:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 153:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 154:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOG_CLK_ENABLE();
 155:LWIP/Target/ethernetif.c ****     /**ETH GPIO Configuration
 156:LWIP/Target/ethernetif.c ****     PC1     ------> ETH_MDC
 157:LWIP/Target/ethernetif.c ****     PA1     ------> ETH_REF_CLK
 158:LWIP/Target/ethernetif.c ****     PA2     ------> ETH_MDIO
 159:LWIP/Target/ethernetif.c ****     PA7     ------> ETH_CRS_DV
 160:LWIP/Target/ethernetif.c ****     PC4     ------> ETH_RXD0
 161:LWIP/Target/ethernetif.c ****     PC5     ------> ETH_RXD1
 162:LWIP/Target/ethernetif.c ****     PB12     ------> ETH_TXD0
 163:LWIP/Target/ethernetif.c ****     PB13     ------> ETH_TXD1
 164:LWIP/Target/ethernetif.c ****     PG11     ------> ETH_TX_EN
 165:LWIP/Target/ethernetif.c ****     */
 166:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5;
 167:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 168:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 169:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 170:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 171:LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 172:LWIP/Target/ethernetif.c **** 
 173:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_7;
 174:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 175:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 176:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 177:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 178:LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 179:LWIP/Target/ethernetif.c **** 
 180:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 181:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 182:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 183:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 184:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 185:LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 186:LWIP/Target/ethernetif.c **** 
 187:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pin = GPIO_PIN_11;
 188:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 189:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 190:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 191:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 192:LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 193:LWIP/Target/ethernetif.c **** 
 194:LWIP/Target/ethernetif.c ****     /* Peripheral interrupt init */
 195:LWIP/Target/ethernetif.c ****     HAL_NVIC_SetPriority(ETH_IRQn, 5, 0);
 196:LWIP/Target/ethernetif.c ****     HAL_NVIC_EnableIRQ(ETH_IRQn);
 197:LWIP/Target/ethernetif.c ****   /* USER CODE BEGIN ETH_MspInit 1 */
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 5


 198:LWIP/Target/ethernetif.c ****     HAL_GPIO_WritePin(ETH_RST_GPIO_Port, ETH_RST_Pin,GPIO_PIN_RESET);
 199:LWIP/Target/ethernetif.c ****     HAL_Delay(50);
 200:LWIP/Target/ethernetif.c ****     HAL_GPIO_WritePin(ETH_RST_GPIO_Port, ETH_RST_Pin,GPIO_PIN_SET);
 201:LWIP/Target/ethernetif.c ****     HAL_Delay(50);
 202:LWIP/Target/ethernetif.c ****   /* USER CODE END ETH_MspInit 1 */
 203:LWIP/Target/ethernetif.c ****   }
 204:LWIP/Target/ethernetif.c **** }
 205:LWIP/Target/ethernetif.c **** 
 206:LWIP/Target/ethernetif.c **** void HAL_ETH_MspDeInit(ETH_HandleTypeDef* ethHandle)
 207:LWIP/Target/ethernetif.c **** {
 208:LWIP/Target/ethernetif.c ****   if(ethHandle->Instance==ETH)
 209:LWIP/Target/ethernetif.c ****   {
 210:LWIP/Target/ethernetif.c ****   /* USER CODE BEGIN ETH_MspDeInit 0 */
 211:LWIP/Target/ethernetif.c **** 
 212:LWIP/Target/ethernetif.c ****   /* USER CODE END ETH_MspDeInit 0 */
 213:LWIP/Target/ethernetif.c ****     /* Disable Peripheral clock */
 214:LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1MAC_CLK_DISABLE();
 215:LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1TX_CLK_DISABLE();
 216:LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1RX_CLK_DISABLE();
 217:LWIP/Target/ethernetif.c **** 
 218:LWIP/Target/ethernetif.c ****     /**ETH GPIO Configuration
 219:LWIP/Target/ethernetif.c ****     PC1     ------> ETH_MDC
 220:LWIP/Target/ethernetif.c ****     PA1     ------> ETH_REF_CLK
 221:LWIP/Target/ethernetif.c ****     PA2     ------> ETH_MDIO
 222:LWIP/Target/ethernetif.c ****     PA7     ------> ETH_CRS_DV
 223:LWIP/Target/ethernetif.c ****     PC4     ------> ETH_RXD0
 224:LWIP/Target/ethernetif.c ****     PC5     ------> ETH_RXD1
 225:LWIP/Target/ethernetif.c ****     PB12     ------> ETH_TXD0
 226:LWIP/Target/ethernetif.c ****     PB13     ------> ETH_TXD1
 227:LWIP/Target/ethernetif.c ****     PG11     ------> ETH_TX_EN
 228:LWIP/Target/ethernetif.c ****     */
 229:LWIP/Target/ethernetif.c ****     HAL_GPIO_DeInit(GPIOC, GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5);
 230:LWIP/Target/ethernetif.c **** 
 231:LWIP/Target/ethernetif.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_7);
 232:LWIP/Target/ethernetif.c **** 
 233:LWIP/Target/ethernetif.c ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_12|GPIO_PIN_13);
 234:LWIP/Target/ethernetif.c **** 
 235:LWIP/Target/ethernetif.c ****     HAL_GPIO_DeInit(GPIOG, GPIO_PIN_11);
 236:LWIP/Target/ethernetif.c **** 
 237:LWIP/Target/ethernetif.c ****     /* Peripheral interrupt Deinit*/
 238:LWIP/Target/ethernetif.c ****     HAL_NVIC_DisableIRQ(ETH_IRQn);
 239:LWIP/Target/ethernetif.c **** 
 240:LWIP/Target/ethernetif.c ****   /* USER CODE BEGIN ETH_MspDeInit 1 */
 241:LWIP/Target/ethernetif.c **** 
 242:LWIP/Target/ethernetif.c ****   /* USER CODE END ETH_MspDeInit 1 */
 243:LWIP/Target/ethernetif.c ****   }
 244:LWIP/Target/ethernetif.c **** }
 245:LWIP/Target/ethernetif.c **** 
 246:LWIP/Target/ethernetif.c **** /**
 247:LWIP/Target/ethernetif.c ****   * @brief  Ethernet Rx Transfer completed callback
 248:LWIP/Target/ethernetif.c ****   * @param  heth: ETH handle
 249:LWIP/Target/ethernetif.c ****   * @retval None
 250:LWIP/Target/ethernetif.c ****   */
 251:LWIP/Target/ethernetif.c **** void HAL_ETH_RxCpltCallback(ETH_HandleTypeDef *heth)
 252:LWIP/Target/ethernetif.c **** {
 253:LWIP/Target/ethernetif.c ****   osSemaphoreRelease(RxPktSemaphore);
 254:LWIP/Target/ethernetif.c **** }
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 6


 255:LWIP/Target/ethernetif.c **** 
 256:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN 4 */
 257:LWIP/Target/ethernetif.c **** 
 258:LWIP/Target/ethernetif.c **** /* USER CODE END 4 */
 259:LWIP/Target/ethernetif.c **** 
 260:LWIP/Target/ethernetif.c **** /*******************************************************************************
 261:LWIP/Target/ethernetif.c ****                        LL Driver Interface ( LwIP stack --> ETH)
 262:LWIP/Target/ethernetif.c **** *******************************************************************************/
 263:LWIP/Target/ethernetif.c **** /**
 264:LWIP/Target/ethernetif.c ****  * @brief In this function, the hardware should be initialized.
 265:LWIP/Target/ethernetif.c ****  * Called from ethernetif_init().
 266:LWIP/Target/ethernetif.c ****  *
 267:LWIP/Target/ethernetif.c ****  * @param netif the already initialized lwip network interface structure
 268:LWIP/Target/ethernetif.c ****  *        for this ethernetif
 269:LWIP/Target/ethernetif.c ****  */
 270:LWIP/Target/ethernetif.c **** static void low_level_init(struct netif *netif)
 271:LWIP/Target/ethernetif.c **** {
 272:LWIP/Target/ethernetif.c ****   HAL_StatusTypeDef hal_eth_init_status = HAL_OK;
 273:LWIP/Target/ethernetif.c ****   uint32_t idx = 0;
 274:LWIP/Target/ethernetif.c ****   ETH_MACConfigTypeDef MACConf;
 275:LWIP/Target/ethernetif.c ****   int32_t PHYLinkState;
 276:LWIP/Target/ethernetif.c ****   uint32_t duplex, speed = 0;
 277:LWIP/Target/ethernetif.c ****   /* Start ETH HAL Init */
 278:LWIP/Target/ethernetif.c **** 
 279:LWIP/Target/ethernetif.c ****    uint8_t MACAddr[6] ;
 280:LWIP/Target/ethernetif.c ****   heth.Instance = ETH;
 281:LWIP/Target/ethernetif.c ****   MACAddr[0] = 0x00;
 282:LWIP/Target/ethernetif.c ****   MACAddr[1] = 0x80;
 283:LWIP/Target/ethernetif.c ****   MACAddr[2] = 0xE1;
 284:LWIP/Target/ethernetif.c ****   MACAddr[3] = 0x00;
 285:LWIP/Target/ethernetif.c ****   MACAddr[4] = 0x00;
 286:LWIP/Target/ethernetif.c ****   MACAddr[5] = 0x00;
 287:LWIP/Target/ethernetif.c ****   heth.Init.MACAddr = &MACAddr[0];
 288:LWIP/Target/ethernetif.c ****   heth.Init.MediaInterface = HAL_ETH_RMII_MODE;
 289:LWIP/Target/ethernetif.c ****   heth.Init.TxDesc = DMATxDscrTab;
 290:LWIP/Target/ethernetif.c ****   heth.Init.RxDesc = DMARxDscrTab;
 291:LWIP/Target/ethernetif.c ****   heth.Init.RxBuffLen = 1524;
 292:LWIP/Target/ethernetif.c **** 
 293:LWIP/Target/ethernetif.c ****   /* USER CODE BEGIN MACADDRESS */
 294:LWIP/Target/ethernetif.c **** 
 295:LWIP/Target/ethernetif.c ****   /* USER CODE END MACADDRESS */
 296:LWIP/Target/ethernetif.c **** 
 297:LWIP/Target/ethernetif.c ****   hal_eth_init_status = HAL_ETH_Init(&heth);
 298:LWIP/Target/ethernetif.c **** 
 299:LWIP/Target/ethernetif.c ****   memset(&TxConfig, 0 , sizeof(ETH_TxPacketConfig));
 300:LWIP/Target/ethernetif.c ****   TxConfig.Attributes = ETH_TX_PACKETS_FEATURES_CSUM | ETH_TX_PACKETS_FEATURES_CRCPAD;
 301:LWIP/Target/ethernetif.c ****   TxConfig.ChecksumCtrl = ETH_CHECKSUM_IPHDR_PAYLOAD_INSERT_PHDR_CALC;
 302:LWIP/Target/ethernetif.c ****   TxConfig.CRCPadCtrl = ETH_CRC_PAD_INSERT;
 303:LWIP/Target/ethernetif.c **** 
 304:LWIP/Target/ethernetif.c ****   /* End ETH HAL Init */
 305:LWIP/Target/ethernetif.c **** 
 306:LWIP/Target/ethernetif.c ****   /* Initialize the RX POOL */
 307:LWIP/Target/ethernetif.c ****   LWIP_MEMPOOL_INIT(RX_POOL);
 308:LWIP/Target/ethernetif.c **** 
 309:LWIP/Target/ethernetif.c **** #if LWIP_ARP || LWIP_ETHERNET
 310:LWIP/Target/ethernetif.c **** 
 311:LWIP/Target/ethernetif.c ****   /* set MAC hardware address length */
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 7


 312:LWIP/Target/ethernetif.c ****   netif->hwaddr_len = ETH_HWADDR_LEN;
 313:LWIP/Target/ethernetif.c **** 
 314:LWIP/Target/ethernetif.c ****   /* set MAC hardware address */
 315:LWIP/Target/ethernetif.c ****   netif->hwaddr[0] =  heth.Init.MACAddr[0];
 316:LWIP/Target/ethernetif.c ****   netif->hwaddr[1] =  heth.Init.MACAddr[1];
 317:LWIP/Target/ethernetif.c ****   netif->hwaddr[2] =  heth.Init.MACAddr[2];
 318:LWIP/Target/ethernetif.c ****   netif->hwaddr[3] =  heth.Init.MACAddr[3];
 319:LWIP/Target/ethernetif.c ****   netif->hwaddr[4] =  heth.Init.MACAddr[4];
 320:LWIP/Target/ethernetif.c ****   netif->hwaddr[5] =  heth.Init.MACAddr[5];
 321:LWIP/Target/ethernetif.c **** 
 322:LWIP/Target/ethernetif.c ****   /* maximum transfer unit */
 323:LWIP/Target/ethernetif.c ****   netif->mtu = ETH_MAX_PAYLOAD;
 324:LWIP/Target/ethernetif.c **** 
 325:LWIP/Target/ethernetif.c ****   /* Accept broadcast address and ARP traffic */
 326:LWIP/Target/ethernetif.c ****   /* don't set NETIF_FLAG_ETHARP if this device is not an ethernet one */
 327:LWIP/Target/ethernetif.c ****   #if LWIP_ARP
 328:LWIP/Target/ethernetif.c ****     netif->flags |= NETIF_FLAG_BROADCAST | NETIF_FLAG_ETHARP;
 329:LWIP/Target/ethernetif.c ****   #else
 330:LWIP/Target/ethernetif.c ****     netif->flags |= NETIF_FLAG_BROADCAST;
 331:LWIP/Target/ethernetif.c ****   #endif /* LWIP_ARP */
 332:LWIP/Target/ethernetif.c **** 
 333:LWIP/Target/ethernetif.c ****   for(idx = 0; idx < ETH_RX_DESC_CNT; idx ++)
 334:LWIP/Target/ethernetif.c ****   {
 335:LWIP/Target/ethernetif.c ****     HAL_ETH_DescAssignMemory(&heth, idx, Rx_Buff[idx], NULL);
 336:LWIP/Target/ethernetif.c ****   }
 337:LWIP/Target/ethernetif.c **** 
 338:LWIP/Target/ethernetif.c ****   /* create a binary semaphore used for informing ethernetif of frame reception */
 339:LWIP/Target/ethernetif.c ****   osSemaphoreDef(SEM);
 340:LWIP/Target/ethernetif.c ****   RxPktSemaphore = osSemaphoreCreate(osSemaphore(SEM) , 1 );
 341:LWIP/Target/ethernetif.c **** 
 342:LWIP/Target/ethernetif.c ****   /* create the task that handles the ETH_MAC */
 343:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN OS_THREAD_DEF_CREATE_CMSIS_RTOS_V1 */
 344:LWIP/Target/ethernetif.c ****   osThreadDef(EthIf, ethernetif_input, osPriorityRealtime, 0, INTERFACE_THREAD_STACK_SIZE);
 345:LWIP/Target/ethernetif.c ****   osThreadCreate (osThread(EthIf), netif);
 346:LWIP/Target/ethernetif.c **** /* USER CODE END OS_THREAD_DEF_CREATE_CMSIS_RTOS_V1 */
 347:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN PHY_PRE_CONFIG */
 348:LWIP/Target/ethernetif.c **** 
 349:LWIP/Target/ethernetif.c **** /* USER CODE END PHY_PRE_CONFIG */
 350:LWIP/Target/ethernetif.c ****   /* Set PHY IO functions */
 351:LWIP/Target/ethernetif.c ****   LAN8742_RegisterBusIO(&LAN8742, &LAN8742_IOCtx);
 352:LWIP/Target/ethernetif.c **** 
 353:LWIP/Target/ethernetif.c ****   /* Initialize the LAN8742 ETH PHY */
 354:LWIP/Target/ethernetif.c ****   LAN8742_Init(&LAN8742);
 355:LWIP/Target/ethernetif.c **** 
 356:LWIP/Target/ethernetif.c ****   if (hal_eth_init_status == HAL_OK)
 357:LWIP/Target/ethernetif.c ****   {
 358:LWIP/Target/ethernetif.c ****     PHYLinkState = LAN8742_GetLinkState(&LAN8742);
 359:LWIP/Target/ethernetif.c **** 
 360:LWIP/Target/ethernetif.c ****     /* Get link state */
 361:LWIP/Target/ethernetif.c ****     if(PHYLinkState <= LAN8742_STATUS_LINK_DOWN)
 362:LWIP/Target/ethernetif.c ****     {
 363:LWIP/Target/ethernetif.c ****       netif_set_link_down(netif);
 364:LWIP/Target/ethernetif.c ****       netif_set_down(netif);
 365:LWIP/Target/ethernetif.c ****     }
 366:LWIP/Target/ethernetif.c ****     else
 367:LWIP/Target/ethernetif.c ****     {
 368:LWIP/Target/ethernetif.c ****       switch (PHYLinkState)
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 8


 369:LWIP/Target/ethernetif.c ****       {
 370:LWIP/Target/ethernetif.c ****       case LAN8742_STATUS_100MBITS_FULLDUPLEX:
 371:LWIP/Target/ethernetif.c ****         duplex = ETH_FULLDUPLEX_MODE;
 372:LWIP/Target/ethernetif.c ****         speed = ETH_SPEED_100M;
 373:LWIP/Target/ethernetif.c ****         break;
 374:LWIP/Target/ethernetif.c ****       case LAN8742_STATUS_100MBITS_HALFDUPLEX:
 375:LWIP/Target/ethernetif.c ****         duplex = ETH_HALFDUPLEX_MODE;
 376:LWIP/Target/ethernetif.c ****         speed = ETH_SPEED_100M;
 377:LWIP/Target/ethernetif.c ****         break;
 378:LWIP/Target/ethernetif.c ****       case LAN8742_STATUS_10MBITS_FULLDUPLEX:
 379:LWIP/Target/ethernetif.c ****         duplex = ETH_FULLDUPLEX_MODE;
 380:LWIP/Target/ethernetif.c ****         speed = ETH_SPEED_10M;
 381:LWIP/Target/ethernetif.c ****         break;
 382:LWIP/Target/ethernetif.c ****       case LAN8742_STATUS_10MBITS_HALFDUPLEX:
 383:LWIP/Target/ethernetif.c ****         duplex = ETH_HALFDUPLEX_MODE;
 384:LWIP/Target/ethernetif.c ****         speed = ETH_SPEED_10M;
 385:LWIP/Target/ethernetif.c ****         break;
 386:LWIP/Target/ethernetif.c ****       default:
 387:LWIP/Target/ethernetif.c ****         duplex = ETH_FULLDUPLEX_MODE;
 388:LWIP/Target/ethernetif.c ****         speed = ETH_SPEED_100M;
 389:LWIP/Target/ethernetif.c ****         break;
 390:LWIP/Target/ethernetif.c ****       }
 391:LWIP/Target/ethernetif.c **** 
 392:LWIP/Target/ethernetif.c ****     /* Get MAC Config MAC */
 393:LWIP/Target/ethernetif.c ****     HAL_ETH_GetMACConfig(&heth, &MACConf);
 394:LWIP/Target/ethernetif.c ****     MACConf.DuplexMode = duplex;
 395:LWIP/Target/ethernetif.c ****     MACConf.Speed = speed;
 396:LWIP/Target/ethernetif.c ****     HAL_ETH_SetMACConfig(&heth, &MACConf);
 397:LWIP/Target/ethernetif.c **** 
 398:LWIP/Target/ethernetif.c ****     HAL_ETH_Start_IT(&heth);
 399:LWIP/Target/ethernetif.c ****     netif_set_up(netif);
 400:LWIP/Target/ethernetif.c ****     netif_set_link_up(netif);
 401:LWIP/Target/ethernetif.c **** 
 402:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN PHY_POST_CONFIG */
 403:LWIP/Target/ethernetif.c **** 
 404:LWIP/Target/ethernetif.c **** /* USER CODE END PHY_POST_CONFIG */
 405:LWIP/Target/ethernetif.c ****     }
 406:LWIP/Target/ethernetif.c **** 
 407:LWIP/Target/ethernetif.c ****   }
 408:LWIP/Target/ethernetif.c ****   else
 409:LWIP/Target/ethernetif.c ****   {
 410:LWIP/Target/ethernetif.c ****     Error_Handler();
 411:LWIP/Target/ethernetif.c ****   }
 412:LWIP/Target/ethernetif.c **** #endif /* LWIP_ARP || LWIP_ETHERNET */
 413:LWIP/Target/ethernetif.c **** 
 414:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN LOW_LEVEL_INIT */
 415:LWIP/Target/ethernetif.c **** 
 416:LWIP/Target/ethernetif.c **** /* USER CODE END LOW_LEVEL_INIT */
 417:LWIP/Target/ethernetif.c **** }
 418:LWIP/Target/ethernetif.c **** 
 419:LWIP/Target/ethernetif.c **** /**
 420:LWIP/Target/ethernetif.c ****  * This function should do the actual transmission of the packet. The packet is
 421:LWIP/Target/ethernetif.c ****  * contained in the pbuf that is passed to the function. This pbuf
 422:LWIP/Target/ethernetif.c ****  * might be chained.
 423:LWIP/Target/ethernetif.c ****  *
 424:LWIP/Target/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 425:LWIP/Target/ethernetif.c ****  * @param p the MAC packet to send (e.g. IP packet including MAC addresses and type)
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 9


 426:LWIP/Target/ethernetif.c ****  * @return ERR_OK if the packet could be sent
 427:LWIP/Target/ethernetif.c ****  *         an err_t value if the packet couldn't be sent
 428:LWIP/Target/ethernetif.c ****  *
 429:LWIP/Target/ethernetif.c ****  * @note Returning ERR_MEM here if a DMA queue of your MAC is full can lead to
 430:LWIP/Target/ethernetif.c ****  *       strange results. You might consider waiting for space in the DMA queue
 431:LWIP/Target/ethernetif.c ****  *       to become available since the stack doesn't retry to send a packet
 432:LWIP/Target/ethernetif.c ****  *       dropped because of memory failure (except for the TCP timers).
 433:LWIP/Target/ethernetif.c ****  */
 434:LWIP/Target/ethernetif.c **** 
 435:LWIP/Target/ethernetif.c **** static err_t low_level_output(struct netif *netif, struct pbuf *p)
 436:LWIP/Target/ethernetif.c **** {
 437:LWIP/Target/ethernetif.c ****   uint32_t i=0;
 438:LWIP/Target/ethernetif.c ****   struct pbuf *q;
 439:LWIP/Target/ethernetif.c ****   err_t errval = ERR_OK;
 440:LWIP/Target/ethernetif.c ****   ETH_BufferTypeDef Txbuffer[ETH_TX_DESC_CNT];
 441:LWIP/Target/ethernetif.c **** 
 442:LWIP/Target/ethernetif.c ****   memset(Txbuffer, 0 , ETH_TX_DESC_CNT*sizeof(ETH_BufferTypeDef));
 443:LWIP/Target/ethernetif.c **** 
 444:LWIP/Target/ethernetif.c ****   for(q = p; q != NULL; q = q->next)
 445:LWIP/Target/ethernetif.c ****   {
 446:LWIP/Target/ethernetif.c ****     if(i >= ETH_TX_DESC_CNT)
 447:LWIP/Target/ethernetif.c ****       return ERR_IF;
 448:LWIP/Target/ethernetif.c **** 
 449:LWIP/Target/ethernetif.c ****     Txbuffer[i].buffer = q->payload;
 450:LWIP/Target/ethernetif.c ****     Txbuffer[i].len = q->len;
 451:LWIP/Target/ethernetif.c **** 
 452:LWIP/Target/ethernetif.c ****     if(i>0)
 453:LWIP/Target/ethernetif.c ****     {
 454:LWIP/Target/ethernetif.c ****       Txbuffer[i-1].next = &Txbuffer[i];
 455:LWIP/Target/ethernetif.c ****     }
 456:LWIP/Target/ethernetif.c **** 
 457:LWIP/Target/ethernetif.c ****     if(q->next == NULL)
 458:LWIP/Target/ethernetif.c ****     {
 459:LWIP/Target/ethernetif.c ****       Txbuffer[i].next = NULL;
 460:LWIP/Target/ethernetif.c ****     }
 461:LWIP/Target/ethernetif.c **** 
 462:LWIP/Target/ethernetif.c ****     i++;
 463:LWIP/Target/ethernetif.c ****   }
 464:LWIP/Target/ethernetif.c **** 
 465:LWIP/Target/ethernetif.c ****   TxConfig.Length =  p->tot_len;
 466:LWIP/Target/ethernetif.c ****   TxConfig.TxBuffer = Txbuffer;
 467:LWIP/Target/ethernetif.c **** 
 468:LWIP/Target/ethernetif.c ****   HAL_ETH_Transmit(&heth, &TxConfig, ETH_DMA_TRANSMIT_TIMEOUT);
 469:LWIP/Target/ethernetif.c **** 
 470:LWIP/Target/ethernetif.c ****   return errval;
 471:LWIP/Target/ethernetif.c **** }
 472:LWIP/Target/ethernetif.c **** 
 473:LWIP/Target/ethernetif.c **** /**
 474:LWIP/Target/ethernetif.c ****  * Should allocate a pbuf and transfer the bytes of the incoming
 475:LWIP/Target/ethernetif.c ****  * packet from the interface into the pbuf.
 476:LWIP/Target/ethernetif.c ****  *
 477:LWIP/Target/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 478:LWIP/Target/ethernetif.c ****  * @return a pbuf filled with the received packet (including MAC header)
 479:LWIP/Target/ethernetif.c ****  *         NULL on memory error
 480:LWIP/Target/ethernetif.c ****    */
 481:LWIP/Target/ethernetif.c **** static struct pbuf * low_level_input(struct netif *netif)
 482:LWIP/Target/ethernetif.c **** {
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 10


 483:LWIP/Target/ethernetif.c ****   struct pbuf *p = NULL;
 484:LWIP/Target/ethernetif.c ****   ETH_BufferTypeDef RxBuff[ETH_RX_DESC_CNT];
 485:LWIP/Target/ethernetif.c ****   uint32_t framelength = 0, i = 0;
 486:LWIP/Target/ethernetif.c ****   struct pbuf_custom* custom_pbuf;
 487:LWIP/Target/ethernetif.c **** 
 488:LWIP/Target/ethernetif.c ****   memset(RxBuff, 0 , ETH_RX_DESC_CNT*sizeof(ETH_BufferTypeDef));
 489:LWIP/Target/ethernetif.c **** 
 490:LWIP/Target/ethernetif.c ****   for(i = 0; i < ETH_RX_DESC_CNT -1; i++)
 491:LWIP/Target/ethernetif.c ****   {
 492:LWIP/Target/ethernetif.c ****     RxBuff[i].next=&RxBuff[i+1];
 493:LWIP/Target/ethernetif.c ****   }
 494:LWIP/Target/ethernetif.c **** 
 495:LWIP/Target/ethernetif.c ****   if (HAL_ETH_GetRxDataBuffer(&heth, RxBuff) == HAL_OK)
 496:LWIP/Target/ethernetif.c ****   {
 497:LWIP/Target/ethernetif.c ****     HAL_ETH_GetRxDataLength(&heth, &framelength);
 498:LWIP/Target/ethernetif.c **** 
 499:LWIP/Target/ethernetif.c ****     /* Build Rx descriptor to be ready for next data reception */
 500:LWIP/Target/ethernetif.c ****     HAL_ETH_BuildRxDescriptors(&heth);
 501:LWIP/Target/ethernetif.c **** 
 502:LWIP/Target/ethernetif.c **** #if !defined(DUAL_CORE) || defined(CORE_CM7)
 503:LWIP/Target/ethernetif.c ****     /* Invalidate data cache for ETH Rx Buffers */
 504:LWIP/Target/ethernetif.c ****     SCB_InvalidateDCache_by_Addr((uint32_t *)RxBuff->buffer, framelength);
 505:LWIP/Target/ethernetif.c **** #endif
 506:LWIP/Target/ethernetif.c **** 
 507:LWIP/Target/ethernetif.c ****     custom_pbuf  = (struct pbuf_custom*)LWIP_MEMPOOL_ALLOC(RX_POOL);
 508:LWIP/Target/ethernetif.c ****     if(custom_pbuf != NULL)
 509:LWIP/Target/ethernetif.c ****     {
 510:LWIP/Target/ethernetif.c ****       custom_pbuf->custom_free_function = pbuf_free_custom;
 511:LWIP/Target/ethernetif.c ****       p = pbuf_alloced_custom(PBUF_RAW, framelength, PBUF_REF, custom_pbuf, RxBuff->buffer, framele
 512:LWIP/Target/ethernetif.c ****     }
 513:LWIP/Target/ethernetif.c ****   }
 514:LWIP/Target/ethernetif.c **** 
 515:LWIP/Target/ethernetif.c ****   return p;
 516:LWIP/Target/ethernetif.c **** }
 517:LWIP/Target/ethernetif.c **** 
 518:LWIP/Target/ethernetif.c **** /**
 519:LWIP/Target/ethernetif.c ****  * This function should be called when a packet is ready to be read
 520:LWIP/Target/ethernetif.c ****  * from the interface. It uses the function low_level_input() that
 521:LWIP/Target/ethernetif.c ****  * should handle the actual reception of bytes from the network
 522:LWIP/Target/ethernetif.c ****  * interface. Then the type of the received packet is determined and
 523:LWIP/Target/ethernetif.c ****  * the appropriate input function is called.
 524:LWIP/Target/ethernetif.c ****  *
 525:LWIP/Target/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 526:LWIP/Target/ethernetif.c ****  */
 527:LWIP/Target/ethernetif.c **** void ethernetif_input(void const * argument)
 528:LWIP/Target/ethernetif.c **** {
 529:LWIP/Target/ethernetif.c ****   struct pbuf *p;
 530:LWIP/Target/ethernetif.c ****   struct netif *netif = (struct netif *) argument;
 531:LWIP/Target/ethernetif.c **** 
 532:LWIP/Target/ethernetif.c ****   for( ;; )
 533:LWIP/Target/ethernetif.c ****   {
 534:LWIP/Target/ethernetif.c ****     if (osSemaphoreWait(RxPktSemaphore, TIME_WAITING_FOR_INPUT) == osOK)
 535:LWIP/Target/ethernetif.c ****     {
 536:LWIP/Target/ethernetif.c ****       do
 537:LWIP/Target/ethernetif.c ****       {
 538:LWIP/Target/ethernetif.c ****         p = low_level_input( netif );
 539:LWIP/Target/ethernetif.c ****         if (p != NULL)
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 11


 540:LWIP/Target/ethernetif.c ****         {
 541:LWIP/Target/ethernetif.c ****           if (netif->input( p, netif) != ERR_OK )
 542:LWIP/Target/ethernetif.c ****           {
 543:LWIP/Target/ethernetif.c ****             pbuf_free(p);
 544:LWIP/Target/ethernetif.c ****           }
 545:LWIP/Target/ethernetif.c ****         }
 546:LWIP/Target/ethernetif.c ****       } while(p!=NULL);
 547:LWIP/Target/ethernetif.c ****     }
 548:LWIP/Target/ethernetif.c ****   }
 549:LWIP/Target/ethernetif.c **** 
 550:LWIP/Target/ethernetif.c **** }
 551:LWIP/Target/ethernetif.c **** 
 552:LWIP/Target/ethernetif.c **** #if !LWIP_ARP
 553:LWIP/Target/ethernetif.c **** /**
 554:LWIP/Target/ethernetif.c ****  * This function has to be completed by user in case of ARP OFF.
 555:LWIP/Target/ethernetif.c ****  *
 556:LWIP/Target/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 557:LWIP/Target/ethernetif.c ****  * @return ERR_OK if ...
 558:LWIP/Target/ethernetif.c ****  */
 559:LWIP/Target/ethernetif.c **** static err_t low_level_output_arp_off(struct netif *netif, struct pbuf *q, const ip4_addr_t *ipaddr
 560:LWIP/Target/ethernetif.c **** {
 561:LWIP/Target/ethernetif.c ****   err_t errval;
 562:LWIP/Target/ethernetif.c ****   errval = ERR_OK;
 563:LWIP/Target/ethernetif.c **** 
 564:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN 5 */
 565:LWIP/Target/ethernetif.c **** 
 566:LWIP/Target/ethernetif.c **** /* USER CODE END 5 */
 567:LWIP/Target/ethernetif.c **** 
 568:LWIP/Target/ethernetif.c ****   return errval;
 569:LWIP/Target/ethernetif.c **** 
 570:LWIP/Target/ethernetif.c **** }
 571:LWIP/Target/ethernetif.c **** #endif /* LWIP_ARP */
 572:LWIP/Target/ethernetif.c **** 
 573:LWIP/Target/ethernetif.c **** /**
 574:LWIP/Target/ethernetif.c ****  * Should be called at the beginning of the program to set up the
 575:LWIP/Target/ethernetif.c ****  * network interface. It calls the function low_level_init() to do the
 576:LWIP/Target/ethernetif.c ****  * actual setup of the hardware.
 577:LWIP/Target/ethernetif.c ****  *
 578:LWIP/Target/ethernetif.c ****  * This function should be passed as a parameter to netif_add().
 579:LWIP/Target/ethernetif.c ****  *
 580:LWIP/Target/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 581:LWIP/Target/ethernetif.c ****  * @return ERR_OK if the loopif is initialized
 582:LWIP/Target/ethernetif.c ****  *         ERR_MEM if private data couldn't be allocated
 583:LWIP/Target/ethernetif.c ****  *         any other err_t on error
 584:LWIP/Target/ethernetif.c ****  */
 585:LWIP/Target/ethernetif.c **** err_t ethernetif_init(struct netif *netif)
 586:LWIP/Target/ethernetif.c **** {
 587:LWIP/Target/ethernetif.c ****   LWIP_ASSERT("netif != NULL", (netif != NULL));
 588:LWIP/Target/ethernetif.c **** 
 589:LWIP/Target/ethernetif.c **** #if LWIP_NETIF_HOSTNAME
 590:LWIP/Target/ethernetif.c ****   /* Initialize interface hostname */
 591:LWIP/Target/ethernetif.c ****   netif->hostname = "lwip";
 592:LWIP/Target/ethernetif.c **** #endif /* LWIP_NETIF_HOSTNAME */
 593:LWIP/Target/ethernetif.c **** 
 594:LWIP/Target/ethernetif.c ****   netif->name[0] = IFNAME0;
 595:LWIP/Target/ethernetif.c ****   netif->name[1] = IFNAME1;
 596:LWIP/Target/ethernetif.c ****   /* We directly use etharp_output() here to save a function call.
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 12


 597:LWIP/Target/ethernetif.c ****    * You can instead declare your own function an call etharp_output()
 598:LWIP/Target/ethernetif.c ****    * from it if you have to do some checks before sending (e.g. if link
 599:LWIP/Target/ethernetif.c ****    * is available...) */
 600:LWIP/Target/ethernetif.c **** 
 601:LWIP/Target/ethernetif.c **** #if LWIP_IPV4
 602:LWIP/Target/ethernetif.c **** #if LWIP_ARP || LWIP_ETHERNET
 603:LWIP/Target/ethernetif.c **** #if LWIP_ARP
 604:LWIP/Target/ethernetif.c ****   netif->output = etharp_output;
 605:LWIP/Target/ethernetif.c **** #else
 606:LWIP/Target/ethernetif.c ****   /* The user should write its own code in low_level_output_arp_off function */
 607:LWIP/Target/ethernetif.c ****   netif->output = low_level_output_arp_off;
 608:LWIP/Target/ethernetif.c **** #endif /* LWIP_ARP */
 609:LWIP/Target/ethernetif.c **** #endif /* LWIP_ARP || LWIP_ETHERNET */
 610:LWIP/Target/ethernetif.c **** #endif /* LWIP_IPV4 */
 611:LWIP/Target/ethernetif.c **** 
 612:LWIP/Target/ethernetif.c **** #if LWIP_IPV6
 613:LWIP/Target/ethernetif.c ****   netif->output_ip6 = ethip6_output;
 614:LWIP/Target/ethernetif.c **** #endif /* LWIP_IPV6 */
 615:LWIP/Target/ethernetif.c **** 
 616:LWIP/Target/ethernetif.c ****   netif->linkoutput = low_level_output;
 617:LWIP/Target/ethernetif.c **** 
 618:LWIP/Target/ethernetif.c ****   /* initialize the hardware */
 619:LWIP/Target/ethernetif.c ****   low_level_init(netif);
 620:LWIP/Target/ethernetif.c **** 
 621:LWIP/Target/ethernetif.c ****   return ERR_OK;
 622:LWIP/Target/ethernetif.c **** }
 623:LWIP/Target/ethernetif.c **** 
 624:LWIP/Target/ethernetif.c **** /**
 625:LWIP/Target/ethernetif.c ****   * @brief  Custom Rx pbuf free callback
 626:LWIP/Target/ethernetif.c ****   * @param  pbuf: pbuf to be freed
 627:LWIP/Target/ethernetif.c ****   * @retval None
 628:LWIP/Target/ethernetif.c ****   */
 629:LWIP/Target/ethernetif.c **** void pbuf_free_custom(struct pbuf *p)
 630:LWIP/Target/ethernetif.c **** {
 631:LWIP/Target/ethernetif.c ****   struct pbuf_custom* custom_pbuf = (struct pbuf_custom*)p;
 632:LWIP/Target/ethernetif.c **** 
 633:LWIP/Target/ethernetif.c ****   LWIP_MEMPOOL_FREE(RX_POOL, custom_pbuf);
 634:LWIP/Target/ethernetif.c **** }
 635:LWIP/Target/ethernetif.c **** 
 636:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN 6 */
 637:LWIP/Target/ethernetif.c **** 
 638:LWIP/Target/ethernetif.c **** /**
 639:LWIP/Target/ethernetif.c **** * @brief  Returns the current time in milliseconds
 640:LWIP/Target/ethernetif.c **** *         when LWIP_TIMERS == 1 and NO_SYS == 1
 641:LWIP/Target/ethernetif.c **** * @param  None
 642:LWIP/Target/ethernetif.c **** * @retval Current Time value
 643:LWIP/Target/ethernetif.c **** */
 644:LWIP/Target/ethernetif.c **** u32_t sys_jiffies(void)
 645:LWIP/Target/ethernetif.c **** {
 646:LWIP/Target/ethernetif.c ****   return HAL_GetTick();
 647:LWIP/Target/ethernetif.c **** }
 648:LWIP/Target/ethernetif.c **** 
 649:LWIP/Target/ethernetif.c **** /**
 650:LWIP/Target/ethernetif.c **** * @brief  Returns the current time in milliseconds
 651:LWIP/Target/ethernetif.c **** *         when LWIP_TIMERS == 1 and NO_SYS == 1
 652:LWIP/Target/ethernetif.c **** * @param  None
 653:LWIP/Target/ethernetif.c **** * @retval Current Time value
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 13


 654:LWIP/Target/ethernetif.c **** */
 655:LWIP/Target/ethernetif.c **** u32_t sys_now(void)
 656:LWIP/Target/ethernetif.c **** {
 657:LWIP/Target/ethernetif.c ****   return HAL_GetTick();
 658:LWIP/Target/ethernetif.c **** }
 659:LWIP/Target/ethernetif.c **** 
 660:LWIP/Target/ethernetif.c **** /* USER CODE END 6 */
 661:LWIP/Target/ethernetif.c **** 
 662:LWIP/Target/ethernetif.c **** /*******************************************************************************
 663:LWIP/Target/ethernetif.c ****                        PHI IO Functions
 664:LWIP/Target/ethernetif.c **** *******************************************************************************/
 665:LWIP/Target/ethernetif.c **** /**
 666:LWIP/Target/ethernetif.c ****   * @brief  Initializes the MDIO interface GPIO and clocks.
 667:LWIP/Target/ethernetif.c ****   * @param  None
 668:LWIP/Target/ethernetif.c ****   * @retval 0 if OK, -1 if ERROR
 669:LWIP/Target/ethernetif.c ****   */
 670:LWIP/Target/ethernetif.c **** int32_t ETH_PHY_IO_Init(void)
 671:LWIP/Target/ethernetif.c **** {
 672:LWIP/Target/ethernetif.c ****   /* We assume that MDIO GPIO configuration is already done
 673:LWIP/Target/ethernetif.c ****      in the ETH_MspInit() else it should be done here
 674:LWIP/Target/ethernetif.c ****   */
 675:LWIP/Target/ethernetif.c **** 
 676:LWIP/Target/ethernetif.c ****   /* Configure the MDIO Clock */
 677:LWIP/Target/ethernetif.c ****   HAL_ETH_SetMDIOClockRange(&heth);
 678:LWIP/Target/ethernetif.c **** 
 679:LWIP/Target/ethernetif.c ****   return 0;
 680:LWIP/Target/ethernetif.c **** }
 681:LWIP/Target/ethernetif.c **** 
 682:LWIP/Target/ethernetif.c **** /**
 683:LWIP/Target/ethernetif.c ****   * @brief  De-Initializes the MDIO interface .
 684:LWIP/Target/ethernetif.c ****   * @param  None
 685:LWIP/Target/ethernetif.c ****   * @retval 0 if OK, -1 if ERROR
 686:LWIP/Target/ethernetif.c ****   */
 687:LWIP/Target/ethernetif.c **** int32_t ETH_PHY_IO_DeInit (void)
 688:LWIP/Target/ethernetif.c **** {
  32              		.loc 1 688 1 view -0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 0, uses_anonymous_args = 0
  36              		@ link register save eliminated.
 689:LWIP/Target/ethernetif.c ****   return 0;
  37              		.loc 1 689 3 view .LVU1
 690:LWIP/Target/ethernetif.c **** }
  38              		.loc 1 690 1 is_stmt 0 view .LVU2
  39 0000 0020     		movs	r0, #0
  40 0002 7047     		bx	lr
  41              		.cfi_endproc
  42              	.LFE376:
  44              		.section	.text.low_level_input,"ax",%progbits
  45              		.align	1
  46              		.syntax unified
  47              		.thumb
  48              		.thumb_func
  50              	low_level_input:
  51              	.LVL0:
  52              	.LFB369:
 482:LWIP/Target/ethernetif.c ****   struct pbuf *p = NULL;
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 14


  53              		.loc 1 482 1 is_stmt 1 view -0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 56
  56              		@ frame_needed = 0, uses_anonymous_args = 0
 482:LWIP/Target/ethernetif.c ****   struct pbuf *p = NULL;
  57              		.loc 1 482 1 is_stmt 0 view .LVU4
  58 0000 10B5     		push	{r4, lr}
  59              	.LCFI0:
  60              		.cfi_def_cfa_offset 8
  61              		.cfi_offset 4, -8
  62              		.cfi_offset 14, -4
  63 0002 90B0     		sub	sp, sp, #64
  64              	.LCFI1:
  65              		.cfi_def_cfa_offset 72
 483:LWIP/Target/ethernetif.c ****   ETH_BufferTypeDef RxBuff[ETH_RX_DESC_CNT];
  66              		.loc 1 483 3 is_stmt 1 view .LVU5
  67              	.LVL1:
 484:LWIP/Target/ethernetif.c ****   uint32_t framelength = 0, i = 0;
  68              		.loc 1 484 3 view .LVU6
 485:LWIP/Target/ethernetif.c ****   struct pbuf_custom* custom_pbuf;
  69              		.loc 1 485 3 view .LVU7
 485:LWIP/Target/ethernetif.c ****   struct pbuf_custom* custom_pbuf;
  70              		.loc 1 485 12 is_stmt 0 view .LVU8
  71 0004 0024     		movs	r4, #0
  72 0006 0394     		str	r4, [sp, #12]
  73              	.LVL2:
 486:LWIP/Target/ethernetif.c **** 
  74              		.loc 1 486 3 is_stmt 1 view .LVU9
 488:LWIP/Target/ethernetif.c **** 
  75              		.loc 1 488 3 view .LVU10
  76 0008 3022     		movs	r2, #48
  77 000a 2146     		mov	r1, r4
  78 000c 04A8     		add	r0, sp, #16
  79              	.LVL3:
 488:LWIP/Target/ethernetif.c **** 
  80              		.loc 1 488 3 is_stmt 0 view .LVU11
  81 000e FFF7FEFF 		bl	memset
  82              	.LVL4:
 490:LWIP/Target/ethernetif.c ****   {
  83              		.loc 1 490 3 is_stmt 1 view .LVU12
 490:LWIP/Target/ethernetif.c ****   {
  84              		.loc 1 490 9 is_stmt 0 view .LVU13
  85 0012 2146     		mov	r1, r4
 490:LWIP/Target/ethernetif.c ****   {
  86              		.loc 1 490 3 view .LVU14
  87 0014 0DE0     		b	.L3
  88              	.LVL5:
  89              	.L4:
 492:LWIP/Target/ethernetif.c ****   }
  90              		.loc 1 492 5 is_stmt 1 discriminator 3 view .LVU15
 492:LWIP/Target/ethernetif.c ****   }
  91              		.loc 1 492 29 is_stmt 0 discriminator 3 view .LVU16
  92 0016 4B1C     		adds	r3, r1, #1
 492:LWIP/Target/ethernetif.c ****   }
  93              		.loc 1 492 20 discriminator 3 view .LVU17
  94 0018 03EB4302 		add	r2, r3, r3, lsl #1
  95 001c 04A8     		add	r0, sp, #16
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 15


  96 001e 00EB8202 		add	r2, r0, r2, lsl #2
 492:LWIP/Target/ethernetif.c ****   }
  97              		.loc 1 492 19 discriminator 3 view .LVU18
  98 0022 01EB4101 		add	r1, r1, r1, lsl #1
  99              	.LVL6:
 492:LWIP/Target/ethernetif.c ****   }
 100              		.loc 1 492 19 discriminator 3 view .LVU19
 101 0026 10A8     		add	r0, sp, #64
 102 0028 00EB8101 		add	r1, r0, r1, lsl #2
 103 002c 41F8282C 		str	r2, [r1, #-40]
 490:LWIP/Target/ethernetif.c ****   {
 104              		.loc 1 490 38 is_stmt 1 discriminator 3 view .LVU20
 105              	.LVL7:
 490:LWIP/Target/ethernetif.c ****   {
 106              		.loc 1 490 39 is_stmt 0 discriminator 3 view .LVU21
 107 0030 1946     		mov	r1, r3
 108              	.LVL8:
 109              	.L3:
 490:LWIP/Target/ethernetif.c ****   {
 110              		.loc 1 490 14 is_stmt 1 discriminator 1 view .LVU22
 490:LWIP/Target/ethernetif.c ****   {
 111              		.loc 1 490 3 is_stmt 0 discriminator 1 view .LVU23
 112 0032 0229     		cmp	r1, #2
 113 0034 EFD9     		bls	.L4
 495:LWIP/Target/ethernetif.c ****   {
 114              		.loc 1 495 3 is_stmt 1 view .LVU24
 495:LWIP/Target/ethernetif.c ****   {
 115              		.loc 1 495 7 is_stmt 0 view .LVU25
 116 0036 04A9     		add	r1, sp, #16
 117              	.LVL9:
 495:LWIP/Target/ethernetif.c ****   {
 118              		.loc 1 495 7 view .LVU26
 119 0038 1A48     		ldr	r0, .L10
 120 003a FFF7FEFF 		bl	HAL_ETH_GetRxDataBuffer
 121              	.LVL10:
 495:LWIP/Target/ethernetif.c ****   {
 122              		.loc 1 495 6 view .LVU27
 123 003e 68BB     		cbnz	r0, .L8
 497:LWIP/Target/ethernetif.c **** 
 124              		.loc 1 497 5 is_stmt 1 view .LVU28
 125 0040 184C     		ldr	r4, .L10
 126 0042 03A9     		add	r1, sp, #12
 127 0044 2046     		mov	r0, r4
 128 0046 FFF7FEFF 		bl	HAL_ETH_GetRxDataLength
 129              	.LVL11:
 500:LWIP/Target/ethernetif.c **** 
 130              		.loc 1 500 5 view .LVU29
 131 004a 2046     		mov	r0, r4
 132 004c FFF7FEFF 		bl	HAL_ETH_BuildRxDescriptors
 133              	.LVL12:
 504:LWIP/Target/ethernetif.c **** #endif
 134              		.loc 1 504 5 view .LVU30
 504:LWIP/Target/ethernetif.c **** #endif
 135              		.loc 1 504 52 is_stmt 0 view .LVU31
 136 0050 0499     		ldr	r1, [sp, #16]
 504:LWIP/Target/ethernetif.c **** #endif
 137              		.loc 1 504 5 view .LVU32
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 16


 138 0052 039B     		ldr	r3, [sp, #12]
 139              	.LVL13:
 140              	.LBB18:
 141              	.LBI18:
 142              		.file 2 "Drivers/CMSIS/Include/core_cm7.h"
   1:Drivers/CMSIS/Include/core_cm7.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm7.h ****  * @file     core_cm7.h
   3:Drivers/CMSIS/Include/core_cm7.h ****  * @brief    CMSIS Cortex-M7 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm7.h ****  * @version  V5.1.1
   5:Drivers/CMSIS/Include/core_cm7.h ****  * @date     28. March 2019
   6:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm7.h **** /*
   8:Drivers/CMSIS/Include/core_cm7.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm7.h ****  *
  10:Drivers/CMSIS/Include/core_cm7.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm7.h ****  *
  12:Drivers/CMSIS/Include/core_cm7.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm7.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm7.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm7.h ****  *
  16:Drivers/CMSIS/Include/core_cm7.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm7.h ****  *
  18:Drivers/CMSIS/Include/core_cm7.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm7.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm7.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm7.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm7.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm7.h ****  */
  24:Drivers/CMSIS/Include/core_cm7.h **** 
  25:Drivers/CMSIS/Include/core_cm7.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm7.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm7.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm7.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm7.h **** #endif
  30:Drivers/CMSIS/Include/core_cm7.h **** 
  31:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm7.h **** 
  34:Drivers/CMSIS/Include/core_cm7.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm7.h **** 
  36:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm7.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm7.h **** #endif
  39:Drivers/CMSIS/Include/core_cm7.h **** 
  40:Drivers/CMSIS/Include/core_cm7.h **** /**
  41:Drivers/CMSIS/Include/core_cm7.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm7.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm7.h **** 
  44:Drivers/CMSIS/Include/core_cm7.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm7.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm7.h **** 
  47:Drivers/CMSIS/Include/core_cm7.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm7.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm7.h **** 
  50:Drivers/CMSIS/Include/core_cm7.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm7.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm7.h ****  */
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 17


  53:Drivers/CMSIS/Include/core_cm7.h **** 
  54:Drivers/CMSIS/Include/core_cm7.h **** 
  55:Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm7.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm7.h **** /**
  59:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup Cortex_M7
  60:Drivers/CMSIS/Include/core_cm7.h ****   @{
  61:Drivers/CMSIS/Include/core_cm7.h ****  */
  62:Drivers/CMSIS/Include/core_cm7.h **** 
  63:Drivers/CMSIS/Include/core_cm7.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm7.h **** 
  65:Drivers/CMSIS/Include/core_cm7.h **** /* CMSIS CM7 definitions */
  66:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)                  /*!< \deprecated [31:1
  67:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION_SUB   ( __CM_CMSIS_VERSION_SUB)                  /*!< \deprecated [15:0
  68:Drivers/CMSIS/Include/core_cm7.h **** #define __CM7_CMSIS_VERSION       ((__CM7_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm7.h ****                                     __CM7_CMSIS_VERSION_SUB           )      /*!< \deprecated CMSIS
  70:Drivers/CMSIS/Include/core_cm7.h **** 
  71:Drivers/CMSIS/Include/core_cm7.h **** #define __CORTEX_M                (7U)                                       /*!< Cortex-M Core */
  72:Drivers/CMSIS/Include/core_cm7.h **** 
  73:Drivers/CMSIS/Include/core_cm7.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm7.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:Drivers/CMSIS/Include/core_cm7.h **** */
  76:Drivers/CMSIS/Include/core_cm7.h **** #if defined ( __CC_ARM )
  77:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __TARGET_FPU_VFP
  78:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
  80:Drivers/CMSIS/Include/core_cm7.h ****     #else
  81:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
  83:Drivers/CMSIS/Include/core_cm7.h ****     #endif
  84:Drivers/CMSIS/Include/core_cm7.h ****   #else
  85:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
  86:Drivers/CMSIS/Include/core_cm7.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm7.h **** 
  88:Drivers/CMSIS/Include/core_cm7.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __ARM_FP
  90:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
  92:Drivers/CMSIS/Include/core_cm7.h ****     #else
  93:Drivers/CMSIS/Include/core_cm7.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
  95:Drivers/CMSIS/Include/core_cm7.h ****     #endif
  96:Drivers/CMSIS/Include/core_cm7.h ****   #else
  97:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
  98:Drivers/CMSIS/Include/core_cm7.h ****   #endif
  99:Drivers/CMSIS/Include/core_cm7.h **** 
 100:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __GNUC__ )
 101:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 104:Drivers/CMSIS/Include/core_cm7.h ****     #else
 105:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 107:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 108:Drivers/CMSIS/Include/core_cm7.h ****   #else
 109:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 18


 110:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 111:Drivers/CMSIS/Include/core_cm7.h **** 
 112:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __ICCARM__ )
 113:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __ARMVFP__
 114:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 116:Drivers/CMSIS/Include/core_cm7.h ****     #else
 117:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 119:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 120:Drivers/CMSIS/Include/core_cm7.h ****   #else
 121:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 122:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 123:Drivers/CMSIS/Include/core_cm7.h **** 
 124:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TI_ARM__ )
 125:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __TI_VFP_SUPPORT__
 126:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 128:Drivers/CMSIS/Include/core_cm7.h ****     #else
 129:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 131:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 132:Drivers/CMSIS/Include/core_cm7.h ****   #else
 133:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 134:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm7.h **** 
 136:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __TASKING__ )
 137:Drivers/CMSIS/Include/core_cm7.h ****   #if defined __FPU_VFP__
 138:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 140:Drivers/CMSIS/Include/core_cm7.h ****     #else
 141:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 143:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 144:Drivers/CMSIS/Include/core_cm7.h ****   #else
 145:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 146:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 147:Drivers/CMSIS/Include/core_cm7.h **** 
 148:Drivers/CMSIS/Include/core_cm7.h **** #elif defined ( __CSMC__ )
 149:Drivers/CMSIS/Include/core_cm7.h ****   #if ( __CSMC__ & 0x400U)
 150:Drivers/CMSIS/Include/core_cm7.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       1U
 152:Drivers/CMSIS/Include/core_cm7.h ****     #else
 153:Drivers/CMSIS/Include/core_cm7.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:Drivers/CMSIS/Include/core_cm7.h ****       #define __FPU_USED       0U
 155:Drivers/CMSIS/Include/core_cm7.h ****     #endif
 156:Drivers/CMSIS/Include/core_cm7.h ****   #else
 157:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_USED         0U
 158:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 159:Drivers/CMSIS/Include/core_cm7.h **** 
 160:Drivers/CMSIS/Include/core_cm7.h **** #endif
 161:Drivers/CMSIS/Include/core_cm7.h **** 
 162:Drivers/CMSIS/Include/core_cm7.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:Drivers/CMSIS/Include/core_cm7.h **** 
 164:Drivers/CMSIS/Include/core_cm7.h **** 
 165:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 166:Drivers/CMSIS/Include/core_cm7.h **** }
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 19


 167:Drivers/CMSIS/Include/core_cm7.h **** #endif
 168:Drivers/CMSIS/Include/core_cm7.h **** 
 169:Drivers/CMSIS/Include/core_cm7.h **** #endif /* __CORE_CM7_H_GENERIC */
 170:Drivers/CMSIS/Include/core_cm7.h **** 
 171:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CMSIS_GENERIC
 172:Drivers/CMSIS/Include/core_cm7.h **** 
 173:Drivers/CMSIS/Include/core_cm7.h **** #ifndef __CORE_CM7_H_DEPENDANT
 174:Drivers/CMSIS/Include/core_cm7.h **** #define __CORE_CM7_H_DEPENDANT
 175:Drivers/CMSIS/Include/core_cm7.h **** 
 176:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 177:Drivers/CMSIS/Include/core_cm7.h ****  extern "C" {
 178:Drivers/CMSIS/Include/core_cm7.h **** #endif
 179:Drivers/CMSIS/Include/core_cm7.h **** 
 180:Drivers/CMSIS/Include/core_cm7.h **** /* check device defines and use defaults */
 181:Drivers/CMSIS/Include/core_cm7.h **** #if defined __CHECK_DEVICE_DEFINES
 182:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __CM7_REV
 183:Drivers/CMSIS/Include/core_cm7.h ****     #define __CM7_REV               0x0000U
 184:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__CM7_REV not defined in device header file; using default!"
 185:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 186:Drivers/CMSIS/Include/core_cm7.h **** 
 187:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __FPU_PRESENT
 188:Drivers/CMSIS/Include/core_cm7.h ****     #define __FPU_PRESENT             0U
 189:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 191:Drivers/CMSIS/Include/core_cm7.h **** 
 192:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __MPU_PRESENT
 193:Drivers/CMSIS/Include/core_cm7.h ****     #define __MPU_PRESENT             0U
 194:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 196:Drivers/CMSIS/Include/core_cm7.h **** 
 197:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __ICACHE_PRESENT
 198:Drivers/CMSIS/Include/core_cm7.h ****     #define __ICACHE_PRESENT          0U
 199:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__ICACHE_PRESENT not defined in device header file; using default!"
 200:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 201:Drivers/CMSIS/Include/core_cm7.h **** 
 202:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __DCACHE_PRESENT
 203:Drivers/CMSIS/Include/core_cm7.h ****     #define __DCACHE_PRESENT          0U
 204:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__DCACHE_PRESENT not defined in device header file; using default!"
 205:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 206:Drivers/CMSIS/Include/core_cm7.h **** 
 207:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __DTCM_PRESENT
 208:Drivers/CMSIS/Include/core_cm7.h ****     #define __DTCM_PRESENT            0U
 209:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__DTCM_PRESENT        not defined in device header file; using default!"
 210:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 211:Drivers/CMSIS/Include/core_cm7.h **** 
 212:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __NVIC_PRIO_BITS
 213:Drivers/CMSIS/Include/core_cm7.h ****     #define __NVIC_PRIO_BITS          3U
 214:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 215:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 216:Drivers/CMSIS/Include/core_cm7.h **** 
 217:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef __Vendor_SysTickConfig
 218:Drivers/CMSIS/Include/core_cm7.h ****     #define __Vendor_SysTickConfig    0U
 219:Drivers/CMSIS/Include/core_cm7.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 220:Drivers/CMSIS/Include/core_cm7.h ****   #endif
 221:Drivers/CMSIS/Include/core_cm7.h **** #endif
 222:Drivers/CMSIS/Include/core_cm7.h **** 
 223:Drivers/CMSIS/Include/core_cm7.h **** /* IO definitions (access restrictions to peripheral registers) */
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 20


 224:Drivers/CMSIS/Include/core_cm7.h **** /**
 225:Drivers/CMSIS/Include/core_cm7.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 226:Drivers/CMSIS/Include/core_cm7.h **** 
 227:Drivers/CMSIS/Include/core_cm7.h ****     <strong>IO Type Qualifiers</strong> are used
 228:Drivers/CMSIS/Include/core_cm7.h ****     \li to specify the access to peripheral variables.
 229:Drivers/CMSIS/Include/core_cm7.h ****     \li for automatic generation of peripheral register debug information.
 230:Drivers/CMSIS/Include/core_cm7.h **** */
 231:Drivers/CMSIS/Include/core_cm7.h **** #ifdef __cplusplus
 232:Drivers/CMSIS/Include/core_cm7.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 233:Drivers/CMSIS/Include/core_cm7.h **** #else
 234:Drivers/CMSIS/Include/core_cm7.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 235:Drivers/CMSIS/Include/core_cm7.h **** #endif
 236:Drivers/CMSIS/Include/core_cm7.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 237:Drivers/CMSIS/Include/core_cm7.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 238:Drivers/CMSIS/Include/core_cm7.h **** 
 239:Drivers/CMSIS/Include/core_cm7.h **** /* following defines should be used for structure members */
 240:Drivers/CMSIS/Include/core_cm7.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 241:Drivers/CMSIS/Include/core_cm7.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 242:Drivers/CMSIS/Include/core_cm7.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 243:Drivers/CMSIS/Include/core_cm7.h **** 
 244:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group Cortex_M7 */
 245:Drivers/CMSIS/Include/core_cm7.h **** 
 246:Drivers/CMSIS/Include/core_cm7.h **** 
 247:Drivers/CMSIS/Include/core_cm7.h **** 
 248:Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
 249:Drivers/CMSIS/Include/core_cm7.h ****  *                 Register Abstraction
 250:Drivers/CMSIS/Include/core_cm7.h ****   Core Register contain:
 251:Drivers/CMSIS/Include/core_cm7.h ****   - Core Register
 252:Drivers/CMSIS/Include/core_cm7.h ****   - Core NVIC Register
 253:Drivers/CMSIS/Include/core_cm7.h ****   - Core SCB Register
 254:Drivers/CMSIS/Include/core_cm7.h ****   - Core SysTick Register
 255:Drivers/CMSIS/Include/core_cm7.h ****   - Core Debug Register
 256:Drivers/CMSIS/Include/core_cm7.h ****   - Core MPU Register
 257:Drivers/CMSIS/Include/core_cm7.h ****   - Core FPU Register
 258:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
 259:Drivers/CMSIS/Include/core_cm7.h **** /**
 260:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 261:Drivers/CMSIS/Include/core_cm7.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 262:Drivers/CMSIS/Include/core_cm7.h **** */
 263:Drivers/CMSIS/Include/core_cm7.h **** 
 264:Drivers/CMSIS/Include/core_cm7.h **** /**
 265:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 266:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 267:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Core Register type definitions.
 268:Drivers/CMSIS/Include/core_cm7.h ****   @{
 269:Drivers/CMSIS/Include/core_cm7.h ****  */
 270:Drivers/CMSIS/Include/core_cm7.h **** 
 271:Drivers/CMSIS/Include/core_cm7.h **** /**
 272:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 273:Drivers/CMSIS/Include/core_cm7.h ****  */
 274:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 275:Drivers/CMSIS/Include/core_cm7.h **** {
 276:Drivers/CMSIS/Include/core_cm7.h ****   struct
 277:Drivers/CMSIS/Include/core_cm7.h ****   {
 278:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 279:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 280:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 21


 281:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 282:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 283:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 284:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 285:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 286:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 287:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 288:Drivers/CMSIS/Include/core_cm7.h **** } APSR_Type;
 289:Drivers/CMSIS/Include/core_cm7.h **** 
 290:Drivers/CMSIS/Include/core_cm7.h **** /* APSR Register Definitions */
 291:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 292:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 293:Drivers/CMSIS/Include/core_cm7.h **** 
 294:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 295:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 296:Drivers/CMSIS/Include/core_cm7.h **** 
 297:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 298:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 299:Drivers/CMSIS/Include/core_cm7.h **** 
 300:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 301:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 302:Drivers/CMSIS/Include/core_cm7.h **** 
 303:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 304:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 305:Drivers/CMSIS/Include/core_cm7.h **** 
 306:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 307:Drivers/CMSIS/Include/core_cm7.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 308:Drivers/CMSIS/Include/core_cm7.h **** 
 309:Drivers/CMSIS/Include/core_cm7.h **** 
 310:Drivers/CMSIS/Include/core_cm7.h **** /**
 311:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 312:Drivers/CMSIS/Include/core_cm7.h ****  */
 313:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 314:Drivers/CMSIS/Include/core_cm7.h **** {
 315:Drivers/CMSIS/Include/core_cm7.h ****   struct
 316:Drivers/CMSIS/Include/core_cm7.h ****   {
 317:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 318:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 319:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 320:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 321:Drivers/CMSIS/Include/core_cm7.h **** } IPSR_Type;
 322:Drivers/CMSIS/Include/core_cm7.h **** 
 323:Drivers/CMSIS/Include/core_cm7.h **** /* IPSR Register Definitions */
 324:Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 325:Drivers/CMSIS/Include/core_cm7.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 326:Drivers/CMSIS/Include/core_cm7.h **** 
 327:Drivers/CMSIS/Include/core_cm7.h **** 
 328:Drivers/CMSIS/Include/core_cm7.h **** /**
 329:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 330:Drivers/CMSIS/Include/core_cm7.h ****  */
 331:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 332:Drivers/CMSIS/Include/core_cm7.h **** {
 333:Drivers/CMSIS/Include/core_cm7.h ****   struct
 334:Drivers/CMSIS/Include/core_cm7.h ****   {
 335:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 336:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 337:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 22


 338:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 339:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 340:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 341:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 342:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 343:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 344:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 345:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 346:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 347:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
 348:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 349:Drivers/CMSIS/Include/core_cm7.h **** } xPSR_Type;
 350:Drivers/CMSIS/Include/core_cm7.h **** 
 351:Drivers/CMSIS/Include/core_cm7.h **** /* xPSR Register Definitions */
 352:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 353:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 354:Drivers/CMSIS/Include/core_cm7.h **** 
 355:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 356:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 357:Drivers/CMSIS/Include/core_cm7.h **** 
 358:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 359:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 360:Drivers/CMSIS/Include/core_cm7.h **** 
 361:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 362:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 363:Drivers/CMSIS/Include/core_cm7.h **** 
 364:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 365:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 366:Drivers/CMSIS/Include/core_cm7.h **** 
 367:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 368:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 369:Drivers/CMSIS/Include/core_cm7.h **** 
 370:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 371:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 372:Drivers/CMSIS/Include/core_cm7.h **** 
 373:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 374:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 375:Drivers/CMSIS/Include/core_cm7.h **** 
 376:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 377:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 378:Drivers/CMSIS/Include/core_cm7.h **** 
 379:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 380:Drivers/CMSIS/Include/core_cm7.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 381:Drivers/CMSIS/Include/core_cm7.h **** 
 382:Drivers/CMSIS/Include/core_cm7.h **** 
 383:Drivers/CMSIS/Include/core_cm7.h **** /**
 384:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Union type to access the Control Registers (CONTROL).
 385:Drivers/CMSIS/Include/core_cm7.h ****  */
 386:Drivers/CMSIS/Include/core_cm7.h **** typedef union
 387:Drivers/CMSIS/Include/core_cm7.h **** {
 388:Drivers/CMSIS/Include/core_cm7.h ****   struct
 389:Drivers/CMSIS/Include/core_cm7.h ****   {
 390:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 391:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 392:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 393:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 394:Drivers/CMSIS/Include/core_cm7.h ****   } b;                                   /*!< Structure used for bit  access */
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 23


 395:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t w;                            /*!< Type      used for word access */
 396:Drivers/CMSIS/Include/core_cm7.h **** } CONTROL_Type;
 397:Drivers/CMSIS/Include/core_cm7.h **** 
 398:Drivers/CMSIS/Include/core_cm7.h **** /* CONTROL Register Definitions */
 399:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 400:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 401:Drivers/CMSIS/Include/core_cm7.h **** 
 402:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 403:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 404:Drivers/CMSIS/Include/core_cm7.h **** 
 405:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 406:Drivers/CMSIS/Include/core_cm7.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 407:Drivers/CMSIS/Include/core_cm7.h **** 
 408:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CORE */
 409:Drivers/CMSIS/Include/core_cm7.h **** 
 410:Drivers/CMSIS/Include/core_cm7.h **** 
 411:Drivers/CMSIS/Include/core_cm7.h **** /**
 412:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
 413:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 414:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Type definitions for the NVIC Registers
 415:Drivers/CMSIS/Include/core_cm7.h ****   @{
 416:Drivers/CMSIS/Include/core_cm7.h ****  */
 417:Drivers/CMSIS/Include/core_cm7.h **** 
 418:Drivers/CMSIS/Include/core_cm7.h **** /**
 419:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 420:Drivers/CMSIS/Include/core_cm7.h ****  */
 421:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 422:Drivers/CMSIS/Include/core_cm7.h **** {
 423:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 424:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[24U];
 425:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 426:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[24U];
 427:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 428:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[24U];
 429:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 430:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[24U];
 431:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 432:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[56U];
 433:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 434:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[644U];
 435:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 436:Drivers/CMSIS/Include/core_cm7.h **** }  NVIC_Type;
 437:Drivers/CMSIS/Include/core_cm7.h **** 
 438:Drivers/CMSIS/Include/core_cm7.h **** /* Software Triggered Interrupt Register Definitions */
 439:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 440:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 441:Drivers/CMSIS/Include/core_cm7.h **** 
 442:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_NVIC */
 443:Drivers/CMSIS/Include/core_cm7.h **** 
 444:Drivers/CMSIS/Include/core_cm7.h **** 
 445:Drivers/CMSIS/Include/core_cm7.h **** /**
 446:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 447:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 448:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control Block Registers
 449:Drivers/CMSIS/Include/core_cm7.h ****   @{
 450:Drivers/CMSIS/Include/core_cm7.h ****  */
 451:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 24


 452:Drivers/CMSIS/Include/core_cm7.h **** /**
 453:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control Block (SCB).
 454:Drivers/CMSIS/Include/core_cm7.h ****  */
 455:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 456:Drivers/CMSIS/Include/core_cm7.h **** {
 457:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 458:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 459:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 460:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 461:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 462:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 463:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint8_t  SHPR[12U];              /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 464:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 465:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 466:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 467:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 468:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 469:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 470:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 471:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_PFR[2U];             /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 472:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_DFR;                 /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 473:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_AFR;                 /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 474:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_MFR[4U];             /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 475:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ID_ISAR[5U];            /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 476:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 477:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CLIDR;                  /*!< Offset: 0x078 (R/ )  Cache Level ID register */
 478:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CTR;                    /*!< Offset: 0x07C (R/ )  Cache Type register */
 479:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CCSIDR;                 /*!< Offset: 0x080 (R/ )  Cache Size ID Register */
 480:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSSELR;                 /*!< Offset: 0x084 (R/W)  Cache Size Selection Register */
 481:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 482:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[93U];
 483:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0x200 ( /W)  Software Triggered Interrupt Reg
 484:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[15U];
 485:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x240 (R/ )  Media and VFP Feature Register 0
 486:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x244 (R/ )  Media and VFP Feature Register 1
 487:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x248 (R/ )  Media and VFP Feature Register 2
 488:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[1U];
 489:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIALLU;                /*!< Offset: 0x250 ( /W)  I-Cache Invalidate All to PoU */
 490:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED6[1U];
 491:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t ICIMVAU;                /*!< Offset: 0x258 ( /W)  I-Cache Invalidate by MVA to PoU
 492:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCIMVAC;                /*!< Offset: 0x25C ( /W)  D-Cache Invalidate by MVA to PoC
 493:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCISW;                  /*!< Offset: 0x260 ( /W)  D-Cache Invalidate by Set-way */
 494:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAU;                /*!< Offset: 0x264 ( /W)  D-Cache Clean by MVA to PoU */
 495:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCMVAC;                /*!< Offset: 0x268 ( /W)  D-Cache Clean by MVA to PoC */
 496:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCSW;                  /*!< Offset: 0x26C ( /W)  D-Cache Clean by Set-way */
 497:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCIMVAC;               /*!< Offset: 0x270 ( /W)  D-Cache Clean and Invalidate by 
 498:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCCISW;                 /*!< Offset: 0x274 ( /W)  D-Cache Clean and Invalidate by 
 499:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[6U];
 500:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCMCR;                 /*!< Offset: 0x290 (R/W)  Instruction Tightly-Coupled Memo
 501:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DTCMCR;                 /*!< Offset: 0x294 (R/W)  Data Tightly-Coupled Memory Cont
 502:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBPCR;                 /*!< Offset: 0x298 (R/W)  AHBP Control Register */
 503:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CACR;                   /*!< Offset: 0x29C (R/W)  L1 Cache Control Register */
 504:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t AHBSCR;                 /*!< Offset: 0x2A0 (R/W)  AHB Slave Control Register */
 505:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED8[1U];
 506:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ABFSR;                  /*!< Offset: 0x2A8 (R/W)  Auxiliary Bus Fault Status Regis
 507:Drivers/CMSIS/Include/core_cm7.h **** } SCB_Type;
 508:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 25


 509:Drivers/CMSIS/Include/core_cm7.h **** /* SCB CPUID Register Definitions */
 510:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 511:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 512:Drivers/CMSIS/Include/core_cm7.h **** 
 513:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 514:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm7.h **** 
 516:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 517:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 518:Drivers/CMSIS/Include/core_cm7.h **** 
 519:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 520:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 521:Drivers/CMSIS/Include/core_cm7.h **** 
 522:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 523:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 524:Drivers/CMSIS/Include/core_cm7.h **** 
 525:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Interrupt Control State Register Definitions */
 526:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 527:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 528:Drivers/CMSIS/Include/core_cm7.h **** 
 529:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 530:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 531:Drivers/CMSIS/Include/core_cm7.h **** 
 532:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 533:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 534:Drivers/CMSIS/Include/core_cm7.h **** 
 535:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 536:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 537:Drivers/CMSIS/Include/core_cm7.h **** 
 538:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 539:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 540:Drivers/CMSIS/Include/core_cm7.h **** 
 541:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 542:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 543:Drivers/CMSIS/Include/core_cm7.h **** 
 544:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 545:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 546:Drivers/CMSIS/Include/core_cm7.h **** 
 547:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 548:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 549:Drivers/CMSIS/Include/core_cm7.h **** 
 550:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 551:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 552:Drivers/CMSIS/Include/core_cm7.h **** 
 553:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 554:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 555:Drivers/CMSIS/Include/core_cm7.h **** 
 556:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Vector Table Offset Register Definitions */
 557:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 558:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 559:Drivers/CMSIS/Include/core_cm7.h **** 
 560:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 561:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 562:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 563:Drivers/CMSIS/Include/core_cm7.h **** 
 564:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 565:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 26


 566:Drivers/CMSIS/Include/core_cm7.h **** 
 567:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 568:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 569:Drivers/CMSIS/Include/core_cm7.h **** 
 570:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 571:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 572:Drivers/CMSIS/Include/core_cm7.h **** 
 573:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 574:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 575:Drivers/CMSIS/Include/core_cm7.h **** 
 576:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 577:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 578:Drivers/CMSIS/Include/core_cm7.h **** 
 579:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 580:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm7.h **** 
 582:Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Control Register Definitions */
 583:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 584:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 585:Drivers/CMSIS/Include/core_cm7.h **** 
 586:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 587:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 588:Drivers/CMSIS/Include/core_cm7.h **** 
 589:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 590:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 591:Drivers/CMSIS/Include/core_cm7.h **** 
 592:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configuration Control Register Definitions */
 593:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Pos                      18U                                           /*!< SCB 
 594:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BP_Msk                     (1UL << SCB_CCR_BP_Pos)                        /*!< SCB 
 595:Drivers/CMSIS/Include/core_cm7.h **** 
 596:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Pos                      17U                                           /*!< SCB 
 597:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_IC_Msk                     (1UL << SCB_CCR_IC_Pos)                        /*!< SCB 
 598:Drivers/CMSIS/Include/core_cm7.h **** 
 599:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Pos                      16U                                           /*!< SCB 
 600:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DC_Msk                     (1UL << SCB_CCR_DC_Pos)                        /*!< SCB 
 601:Drivers/CMSIS/Include/core_cm7.h **** 
 602:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 603:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 604:Drivers/CMSIS/Include/core_cm7.h **** 
 605:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 606:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 607:Drivers/CMSIS/Include/core_cm7.h **** 
 608:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 609:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 610:Drivers/CMSIS/Include/core_cm7.h **** 
 611:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 612:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 613:Drivers/CMSIS/Include/core_cm7.h **** 
 614:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 615:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 616:Drivers/CMSIS/Include/core_cm7.h **** 
 617:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 619:Drivers/CMSIS/Include/core_cm7.h **** 
 620:Drivers/CMSIS/Include/core_cm7.h **** /* SCB System Handler Control and State Register Definitions */
 621:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 622:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 27


 623:Drivers/CMSIS/Include/core_cm7.h **** 
 624:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 625:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 626:Drivers/CMSIS/Include/core_cm7.h **** 
 627:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 628:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 629:Drivers/CMSIS/Include/core_cm7.h **** 
 630:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 631:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 632:Drivers/CMSIS/Include/core_cm7.h **** 
 633:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 634:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 635:Drivers/CMSIS/Include/core_cm7.h **** 
 636:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 637:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 638:Drivers/CMSIS/Include/core_cm7.h **** 
 639:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 640:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 641:Drivers/CMSIS/Include/core_cm7.h **** 
 642:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 643:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 644:Drivers/CMSIS/Include/core_cm7.h **** 
 645:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 646:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 647:Drivers/CMSIS/Include/core_cm7.h **** 
 648:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 649:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 650:Drivers/CMSIS/Include/core_cm7.h **** 
 651:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 652:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 653:Drivers/CMSIS/Include/core_cm7.h **** 
 654:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 655:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 656:Drivers/CMSIS/Include/core_cm7.h **** 
 657:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 658:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 659:Drivers/CMSIS/Include/core_cm7.h **** 
 660:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 661:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 662:Drivers/CMSIS/Include/core_cm7.h **** 
 663:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Configurable Fault Status Register Definitions */
 664:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 665:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 666:Drivers/CMSIS/Include/core_cm7.h **** 
 667:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 668:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 669:Drivers/CMSIS/Include/core_cm7.h **** 
 670:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 671:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 672:Drivers/CMSIS/Include/core_cm7.h **** 
 673:Drivers/CMSIS/Include/core_cm7.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 674:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 675:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 676:Drivers/CMSIS/Include/core_cm7.h **** 
 677:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 678:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 679:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 28


 680:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 681:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 682:Drivers/CMSIS/Include/core_cm7.h **** 
 683:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 684:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 685:Drivers/CMSIS/Include/core_cm7.h **** 
 686:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 687:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 688:Drivers/CMSIS/Include/core_cm7.h **** 
 689:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 690:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 691:Drivers/CMSIS/Include/core_cm7.h **** 
 692:Drivers/CMSIS/Include/core_cm7.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 693:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 694:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 695:Drivers/CMSIS/Include/core_cm7.h **** 
 696:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 697:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 698:Drivers/CMSIS/Include/core_cm7.h **** 
 699:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 700:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 701:Drivers/CMSIS/Include/core_cm7.h **** 
 702:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 703:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 704:Drivers/CMSIS/Include/core_cm7.h **** 
 705:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 706:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 707:Drivers/CMSIS/Include/core_cm7.h **** 
 708:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 709:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 710:Drivers/CMSIS/Include/core_cm7.h **** 
 711:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 712:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 713:Drivers/CMSIS/Include/core_cm7.h **** 
 714:Drivers/CMSIS/Include/core_cm7.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 715:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 716:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 717:Drivers/CMSIS/Include/core_cm7.h **** 
 718:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 719:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 720:Drivers/CMSIS/Include/core_cm7.h **** 
 721:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 722:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 723:Drivers/CMSIS/Include/core_cm7.h **** 
 724:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 725:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 726:Drivers/CMSIS/Include/core_cm7.h **** 
 727:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 728:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 729:Drivers/CMSIS/Include/core_cm7.h **** 
 730:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 731:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 732:Drivers/CMSIS/Include/core_cm7.h **** 
 733:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Hard Fault Status Register Definitions */
 734:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 735:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 736:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 29


 737:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 738:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 739:Drivers/CMSIS/Include/core_cm7.h **** 
 740:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 741:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 742:Drivers/CMSIS/Include/core_cm7.h **** 
 743:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Debug Fault Status Register Definitions */
 744:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 745:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 746:Drivers/CMSIS/Include/core_cm7.h **** 
 747:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 748:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 749:Drivers/CMSIS/Include/core_cm7.h **** 
 750:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 751:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 752:Drivers/CMSIS/Include/core_cm7.h **** 
 753:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 754:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 755:Drivers/CMSIS/Include/core_cm7.h **** 
 756:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 757:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 758:Drivers/CMSIS/Include/core_cm7.h **** 
 759:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Level ID Register Definitions */
 760:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Pos                 27U                                            /*!< SCB 
 761:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOUU_Msk                 (7UL << SCB_CLIDR_LOUU_Pos)                    /*!< SCB 
 762:Drivers/CMSIS/Include/core_cm7.h **** 
 763:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Pos                  24U                                            /*!< SCB 
 764:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CLIDR_LOC_Msk                  (7UL << SCB_CLIDR_LOC_Pos)                     /*!< SCB 
 765:Drivers/CMSIS/Include/core_cm7.h **** 
 766:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Type Register Definitions */
 767:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Pos                 29U                                            /*!< SCB 
 768:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_FORMAT_Msk                 (7UL << SCB_CTR_FORMAT_Pos)                    /*!< SCB 
 769:Drivers/CMSIS/Include/core_cm7.h **** 
 770:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Pos                    24U                                            /*!< SCB 
 771:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_CWG_Msk                    (0xFUL << SCB_CTR_CWG_Pos)                     /*!< SCB 
 772:Drivers/CMSIS/Include/core_cm7.h **** 
 773:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Pos                    20U                                            /*!< SCB 
 774:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_ERG_Msk                    (0xFUL << SCB_CTR_ERG_Pos)                     /*!< SCB 
 775:Drivers/CMSIS/Include/core_cm7.h **** 
 776:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Pos               16U                                            /*!< SCB 
 777:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_DMINLINE_Msk               (0xFUL << SCB_CTR_DMINLINE_Pos)                /*!< SCB 
 778:Drivers/CMSIS/Include/core_cm7.h **** 
 779:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Pos                0U                                            /*!< SCB 
 780:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CTR_IMINLINE_Msk               (0xFUL /*<< SCB_CTR_IMINLINE_Pos*/)            /*!< SCB 
 781:Drivers/CMSIS/Include/core_cm7.h **** 
 782:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size ID Register Definitions */
 783:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Pos                  31U                                            /*!< SCB 
 784:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WT_Msk                  (1UL << SCB_CCSIDR_WT_Pos)                     /*!< SCB 
 785:Drivers/CMSIS/Include/core_cm7.h **** 
 786:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Pos                  30U                                            /*!< SCB 
 787:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WB_Msk                  (1UL << SCB_CCSIDR_WB_Pos)                     /*!< SCB 
 788:Drivers/CMSIS/Include/core_cm7.h **** 
 789:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Pos                  29U                                            /*!< SCB 
 790:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_RA_Msk                  (1UL << SCB_CCSIDR_RA_Pos)                     /*!< SCB 
 791:Drivers/CMSIS/Include/core_cm7.h **** 
 792:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Pos                  28U                                            /*!< SCB 
 793:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_WA_Msk                  (1UL << SCB_CCSIDR_WA_Pos)                     /*!< SCB 
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 30


 794:Drivers/CMSIS/Include/core_cm7.h **** 
 795:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Pos             13U                                            /*!< SCB 
 796:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_NUMSETS_Msk             (0x7FFFUL << SCB_CCSIDR_NUMSETS_Pos)           /*!< SCB 
 797:Drivers/CMSIS/Include/core_cm7.h **** 
 798:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Pos        3U                                            /*!< SCB 
 799:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_ASSOCIATIVITY_Msk       (0x3FFUL << SCB_CCSIDR_ASSOCIATIVITY_Pos)      /*!< SCB 
 800:Drivers/CMSIS/Include/core_cm7.h **** 
 801:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Pos             0U                                            /*!< SCB 
 802:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CCSIDR_LINESIZE_Msk            (7UL /*<< SCB_CCSIDR_LINESIZE_Pos*/)           /*!< SCB 
 803:Drivers/CMSIS/Include/core_cm7.h **** 
 804:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Cache Size Selection Register Definitions */
 805:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Pos                1U                                            /*!< SCB 
 806:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_LEVEL_Msk               (7UL << SCB_CSSELR_LEVEL_Pos)                  /*!< SCB 
 807:Drivers/CMSIS/Include/core_cm7.h **** 
 808:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Pos                  0U                                            /*!< SCB 
 809:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CSSELR_IND_Msk                 (1UL /*<< SCB_CSSELR_IND_Pos*/)                /*!< SCB 
 810:Drivers/CMSIS/Include/core_cm7.h **** 
 811:Drivers/CMSIS/Include/core_cm7.h **** /* SCB Software Triggered Interrupt Register Definitions */
 812:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Pos                  0U                                            /*!< SCB 
 813:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_STIR_INTID_Msk                 (0x1FFUL /*<< SCB_STIR_INTID_Pos*/)            /*!< SCB 
 814:Drivers/CMSIS/Include/core_cm7.h **** 
 815:Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Invalidate by Set-way Register Definitions */
 816:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Pos                  30U                                            /*!< SCB 
 817:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_WAY_Msk                  (3UL << SCB_DCISW_WAY_Pos)                     /*!< SCB 
 818:Drivers/CMSIS/Include/core_cm7.h **** 
 819:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Pos                   5U                                            /*!< SCB 
 820:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCISW_SET_Msk                  (0x1FFUL << SCB_DCISW_SET_Pos)                 /*!< SCB 
 821:Drivers/CMSIS/Include/core_cm7.h **** 
 822:Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean by Set-way Register Definitions */
 823:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Pos                  30U                                            /*!< SCB 
 824:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_WAY_Msk                  (3UL << SCB_DCCSW_WAY_Pos)                     /*!< SCB 
 825:Drivers/CMSIS/Include/core_cm7.h **** 
 826:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Pos                   5U                                            /*!< SCB 
 827:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCSW_SET_Msk                  (0x1FFUL << SCB_DCCSW_SET_Pos)                 /*!< SCB 
 828:Drivers/CMSIS/Include/core_cm7.h **** 
 829:Drivers/CMSIS/Include/core_cm7.h **** /* SCB D-Cache Clean and Invalidate by Set-way Register Definitions */
 830:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Pos                 30U                                            /*!< SCB 
 831:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_WAY_Msk                 (3UL << SCB_DCCISW_WAY_Pos)                    /*!< SCB 
 832:Drivers/CMSIS/Include/core_cm7.h **** 
 833:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Pos                  5U                                            /*!< SCB 
 834:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DCCISW_SET_Msk                 (0x1FFUL << SCB_DCCISW_SET_Pos)                /*!< SCB 
 835:Drivers/CMSIS/Include/core_cm7.h **** 
 836:Drivers/CMSIS/Include/core_cm7.h **** /* Instruction Tightly-Coupled Memory Control Register Definitions */
 837:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Pos                   3U                                            /*!< SCB 
 838:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_SZ_Msk                  (0xFUL << SCB_ITCMCR_SZ_Pos)                   /*!< SCB 
 839:Drivers/CMSIS/Include/core_cm7.h **** 
 840:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Pos                2U                                            /*!< SCB 
 841:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RETEN_Msk               (1UL << SCB_ITCMCR_RETEN_Pos)                  /*!< SCB 
 842:Drivers/CMSIS/Include/core_cm7.h **** 
 843:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Pos                  1U                                            /*!< SCB 
 844:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_RMW_Msk                 (1UL << SCB_ITCMCR_RMW_Pos)                    /*!< SCB 
 845:Drivers/CMSIS/Include/core_cm7.h **** 
 846:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Pos                   0U                                            /*!< SCB 
 847:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ITCMCR_EN_Msk                  (1UL /*<< SCB_ITCMCR_EN_Pos*/)                 /*!< SCB 
 848:Drivers/CMSIS/Include/core_cm7.h **** 
 849:Drivers/CMSIS/Include/core_cm7.h **** /* Data Tightly-Coupled Memory Control Register Definitions */
 850:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Pos                   3U                                            /*!< SCB 
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 31


 851:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_SZ_Msk                  (0xFUL << SCB_DTCMCR_SZ_Pos)                   /*!< SCB 
 852:Drivers/CMSIS/Include/core_cm7.h **** 
 853:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Pos                2U                                            /*!< SCB 
 854:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RETEN_Msk               (1UL << SCB_DTCMCR_RETEN_Pos)                   /*!< SCB
 855:Drivers/CMSIS/Include/core_cm7.h **** 
 856:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Pos                  1U                                            /*!< SCB 
 857:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_RMW_Msk                 (1UL << SCB_DTCMCR_RMW_Pos)                    /*!< SCB 
 858:Drivers/CMSIS/Include/core_cm7.h **** 
 859:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Pos                   0U                                            /*!< SCB 
 860:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_DTCMCR_EN_Msk                  (1UL /*<< SCB_DTCMCR_EN_Pos*/)                 /*!< SCB 
 861:Drivers/CMSIS/Include/core_cm7.h **** 
 862:Drivers/CMSIS/Include/core_cm7.h **** /* AHBP Control Register Definitions */
 863:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Pos                   1U                                            /*!< SCB 
 864:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_SZ_Msk                  (7UL << SCB_AHBPCR_SZ_Pos)                     /*!< SCB 
 865:Drivers/CMSIS/Include/core_cm7.h **** 
 866:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Pos                   0U                                            /*!< SCB 
 867:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBPCR_EN_Msk                  (1UL /*<< SCB_AHBPCR_EN_Pos*/)                 /*!< SCB 
 868:Drivers/CMSIS/Include/core_cm7.h **** 
 869:Drivers/CMSIS/Include/core_cm7.h **** /* L1 Cache Control Register Definitions */
 870:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Pos                2U                                            /*!< SCB 
 871:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_FORCEWT_Msk               (1UL << SCB_CACR_FORCEWT_Pos)                  /*!< SCB 
 872:Drivers/CMSIS/Include/core_cm7.h **** 
 873:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Pos                  1U                                            /*!< SCB 
 874:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_ECCEN_Msk                 (1UL << SCB_CACR_ECCEN_Pos)                    /*!< SCB 
 875:Drivers/CMSIS/Include/core_cm7.h **** 
 876:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Pos                   0U                                            /*!< SCB 
 877:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_CACR_SIWT_Msk                  (1UL /*<< SCB_CACR_SIWT_Pos*/)                 /*!< SCB 
 878:Drivers/CMSIS/Include/core_cm7.h **** 
 879:Drivers/CMSIS/Include/core_cm7.h **** /* AHBS Control Register Definitions */
 880:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Pos           11U                                            /*!< SCB 
 881:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_INITCOUNT_Msk           (0x1FUL << SCB_AHBPCR_INITCOUNT_Pos)           /*!< SCB 
 882:Drivers/CMSIS/Include/core_cm7.h **** 
 883:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Pos                 2U                                            /*!< SCB 
 884:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_TPRI_Msk                (0x1FFUL << SCB_AHBPCR_TPRI_Pos)               /*!< SCB 
 885:Drivers/CMSIS/Include/core_cm7.h **** 
 886:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Pos                  0U                                            /*!< SCB 
 887:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_AHBSCR_CTL_Msk                 (3UL /*<< SCB_AHBPCR_CTL_Pos*/)                /*!< SCB 
 888:Drivers/CMSIS/Include/core_cm7.h **** 
 889:Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Bus Fault Status Register Definitions */
 890:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Pos              8U                                            /*!< SCB 
 891:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIMTYPE_Msk             (3UL << SCB_ABFSR_AXIMTYPE_Pos)                /*!< SCB 
 892:Drivers/CMSIS/Include/core_cm7.h **** 
 893:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Pos                  4U                                            /*!< SCB 
 894:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_EPPB_Msk                 (1UL << SCB_ABFSR_EPPB_Pos)                    /*!< SCB 
 895:Drivers/CMSIS/Include/core_cm7.h **** 
 896:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Pos                  3U                                            /*!< SCB 
 897:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AXIM_Msk                 (1UL << SCB_ABFSR_AXIM_Pos)                    /*!< SCB 
 898:Drivers/CMSIS/Include/core_cm7.h **** 
 899:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Pos                  2U                                            /*!< SCB 
 900:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_AHBP_Msk                 (1UL << SCB_ABFSR_AHBP_Pos)                    /*!< SCB 
 901:Drivers/CMSIS/Include/core_cm7.h **** 
 902:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Pos                  1U                                            /*!< SCB 
 903:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_DTCM_Msk                 (1UL << SCB_ABFSR_DTCM_Pos)                    /*!< SCB 
 904:Drivers/CMSIS/Include/core_cm7.h **** 
 905:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Pos                  0U                                            /*!< SCB 
 906:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_ABFSR_ITCM_Msk                 (1UL /*<< SCB_ABFSR_ITCM_Pos*/)                /*!< SCB 
 907:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 32


 908:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCB */
 909:Drivers/CMSIS/Include/core_cm7.h **** 
 910:Drivers/CMSIS/Include/core_cm7.h **** 
 911:Drivers/CMSIS/Include/core_cm7.h **** /**
 912:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 913:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 914:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 915:Drivers/CMSIS/Include/core_cm7.h ****   @{
 916:Drivers/CMSIS/Include/core_cm7.h ****  */
 917:Drivers/CMSIS/Include/core_cm7.h **** 
 918:Drivers/CMSIS/Include/core_cm7.h **** /**
 919:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 920:Drivers/CMSIS/Include/core_cm7.h ****  */
 921:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 922:Drivers/CMSIS/Include/core_cm7.h **** {
 923:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
 924:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 925:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 926:Drivers/CMSIS/Include/core_cm7.h **** } SCnSCB_Type;
 927:Drivers/CMSIS/Include/core_cm7.h **** 
 928:Drivers/CMSIS/Include/core_cm7.h **** /* Interrupt Controller Type Register Definitions */
 929:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 930:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 931:Drivers/CMSIS/Include/core_cm7.h **** 
 932:Drivers/CMSIS/Include/core_cm7.h **** /* Auxiliary Control Register Definitions */
 933:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDYNADD_Pos         26U                                         /*!< ACTLR: 
 934:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDYNADD_Msk         (1UL << SCnSCB_ACTLR_DISDYNADD_Pos)         /*!< ACTLR: 
 935:Drivers/CMSIS/Include/core_cm7.h **** 
 936:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISISSCH1_Pos         21U                                         /*!< ACTLR: 
 937:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISISSCH1_Msk         (0x1FUL << SCnSCB_ACTLR_DISISSCH1_Pos)      /*!< ACTLR: 
 938:Drivers/CMSIS/Include/core_cm7.h **** 
 939:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDI_Pos             16U                                         /*!< ACTLR: 
 940:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISDI_Msk             (0x1FUL << SCnSCB_ACTLR_DISDI_Pos)          /*!< ACTLR: 
 941:Drivers/CMSIS/Include/core_cm7.h **** 
 942:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISCRITAXIRUR_Pos     15U                                         /*!< ACTLR: 
 943:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISCRITAXIRUR_Msk     (1UL << SCnSCB_ACTLR_DISCRITAXIRUR_Pos)     /*!< ACTLR: 
 944:Drivers/CMSIS/Include/core_cm7.h **** 
 945:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACALLOC_Pos      14U                                         /*!< ACTLR: 
 946:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACALLOC_Msk      (1UL << SCnSCB_ACTLR_DISBTACALLOC_Pos)      /*!< ACTLR: 
 947:Drivers/CMSIS/Include/core_cm7.h **** 
 948:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACREAD_Pos       13U                                         /*!< ACTLR: 
 949:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISBTACREAD_Msk       (1UL << SCnSCB_ACTLR_DISBTACREAD_Pos)       /*!< ACTLR: 
 950:Drivers/CMSIS/Include/core_cm7.h **** 
 951:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Pos    12U                                         /*!< ACTLR: 
 952:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISITMATBFLUSH_Msk    (1UL << SCnSCB_ACTLR_DISITMATBFLUSH_Pos)    /*!< ACTLR: 
 953:Drivers/CMSIS/Include/core_cm7.h **** 
 954:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Pos         11U                                         /*!< ACTLR: 
 955:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISRAMODE_Msk         (1UL << SCnSCB_ACTLR_DISRAMODE_Pos)         /*!< ACTLR: 
 956:Drivers/CMSIS/Include/core_cm7.h **** 
 957:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Pos         10U                                         /*!< ACTLR: 
 958:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_FPEXCODIS_Msk         (1UL << SCnSCB_ACTLR_FPEXCODIS_Pos)         /*!< ACTLR: 
 959:Drivers/CMSIS/Include/core_cm7.h **** 
 960:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 961:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 962:Drivers/CMSIS/Include/core_cm7.h **** 
 963:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 964:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 33


 965:Drivers/CMSIS/Include/core_cm7.h **** 
 966:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SCnotSCB */
 967:Drivers/CMSIS/Include/core_cm7.h **** 
 968:Drivers/CMSIS/Include/core_cm7.h **** 
 969:Drivers/CMSIS/Include/core_cm7.h **** /**
 970:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
 971:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 972:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the System Timer Registers.
 973:Drivers/CMSIS/Include/core_cm7.h ****   @{
 974:Drivers/CMSIS/Include/core_cm7.h ****  */
 975:Drivers/CMSIS/Include/core_cm7.h **** 
 976:Drivers/CMSIS/Include/core_cm7.h **** /**
 977:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the System Timer (SysTick).
 978:Drivers/CMSIS/Include/core_cm7.h ****  */
 979:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
 980:Drivers/CMSIS/Include/core_cm7.h **** {
 981:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 982:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 983:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 984:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 985:Drivers/CMSIS/Include/core_cm7.h **** } SysTick_Type;
 986:Drivers/CMSIS/Include/core_cm7.h **** 
 987:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Control / Status Register Definitions */
 988:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 989:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 990:Drivers/CMSIS/Include/core_cm7.h **** 
 991:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 992:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 993:Drivers/CMSIS/Include/core_cm7.h **** 
 994:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 995:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 996:Drivers/CMSIS/Include/core_cm7.h **** 
 997:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 998:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 999:Drivers/CMSIS/Include/core_cm7.h **** 
1000:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Reload Register Definitions */
1001:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
1002:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
1003:Drivers/CMSIS/Include/core_cm7.h **** 
1004:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Current Register Definitions */
1005:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
1006:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
1007:Drivers/CMSIS/Include/core_cm7.h **** 
1008:Drivers/CMSIS/Include/core_cm7.h **** /* SysTick Calibration Register Definitions */
1009:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
1010:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
1011:Drivers/CMSIS/Include/core_cm7.h **** 
1012:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
1013:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
1014:Drivers/CMSIS/Include/core_cm7.h **** 
1015:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
1016:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
1017:Drivers/CMSIS/Include/core_cm7.h **** 
1018:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_SysTick */
1019:Drivers/CMSIS/Include/core_cm7.h **** 
1020:Drivers/CMSIS/Include/core_cm7.h **** 
1021:Drivers/CMSIS/Include/core_cm7.h **** /**
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 34


1022:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1023:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
1024:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
1025:Drivers/CMSIS/Include/core_cm7.h ****   @{
1026:Drivers/CMSIS/Include/core_cm7.h ****  */
1027:Drivers/CMSIS/Include/core_cm7.h **** 
1028:Drivers/CMSIS/Include/core_cm7.h **** /**
1029:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
1030:Drivers/CMSIS/Include/core_cm7.h ****  */
1031:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1032:Drivers/CMSIS/Include/core_cm7.h **** {
1033:Drivers/CMSIS/Include/core_cm7.h ****   __OM  union
1034:Drivers/CMSIS/Include/core_cm7.h ****   {
1035:Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
1036:Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
1037:Drivers/CMSIS/Include/core_cm7.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
1038:Drivers/CMSIS/Include/core_cm7.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
1039:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[864U];
1040:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
1041:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[15U];
1042:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
1043:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[15U];
1044:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
1045:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[32U];
1046:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[43U];
1047:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
1048:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
1049:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[6U];
1050:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
1051:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
1052:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
1053:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
1054:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
1055:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
1056:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
1057:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
1058:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
1059:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
1060:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
1061:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
1062:Drivers/CMSIS/Include/core_cm7.h **** } ITM_Type;
1063:Drivers/CMSIS/Include/core_cm7.h **** 
1064:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Privilege Register Definitions */
1065:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
1066:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
1067:Drivers/CMSIS/Include/core_cm7.h **** 
1068:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Trace Control Register Definitions */
1069:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
1070:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
1071:Drivers/CMSIS/Include/core_cm7.h **** 
1072:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
1073:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
1074:Drivers/CMSIS/Include/core_cm7.h **** 
1075:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
1076:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
1077:Drivers/CMSIS/Include/core_cm7.h **** 
1078:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 35


1079:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
1080:Drivers/CMSIS/Include/core_cm7.h **** 
1081:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
1082:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
1083:Drivers/CMSIS/Include/core_cm7.h **** 
1084:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
1085:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
1086:Drivers/CMSIS/Include/core_cm7.h **** 
1087:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
1088:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
1089:Drivers/CMSIS/Include/core_cm7.h **** 
1090:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
1091:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
1092:Drivers/CMSIS/Include/core_cm7.h **** 
1093:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
1094:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
1095:Drivers/CMSIS/Include/core_cm7.h **** 
1096:Drivers/CMSIS/Include/core_cm7.h **** /* ITM Lock Status Register Definitions */
1097:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
1098:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
1099:Drivers/CMSIS/Include/core_cm7.h **** 
1100:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
1101:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
1102:Drivers/CMSIS/Include/core_cm7.h **** 
1103:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
1104:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
1105:Drivers/CMSIS/Include/core_cm7.h **** 
1106:Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_ITM */
1107:Drivers/CMSIS/Include/core_cm7.h **** 
1108:Drivers/CMSIS/Include/core_cm7.h **** 
1109:Drivers/CMSIS/Include/core_cm7.h **** /**
1110:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1111:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
1112:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
1113:Drivers/CMSIS/Include/core_cm7.h ****   @{
1114:Drivers/CMSIS/Include/core_cm7.h ****  */
1115:Drivers/CMSIS/Include/core_cm7.h **** 
1116:Drivers/CMSIS/Include/core_cm7.h **** /**
1117:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
1118:Drivers/CMSIS/Include/core_cm7.h ****  */
1119:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1120:Drivers/CMSIS/Include/core_cm7.h **** {
1121:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
1122:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
1123:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
1124:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
1125:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
1126:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
1127:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
1128:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
1129:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
1130:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
1131:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
1132:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1133:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
1134:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
1135:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 36


1136:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[1U];
1137:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
1138:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
1139:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
1140:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[1U];
1141:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
1142:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
1143:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
1144:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[981U];
1145:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 (  W)  Lock Access Register */
1146:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R  )  Lock Status Register */
1147:Drivers/CMSIS/Include/core_cm7.h **** } DWT_Type;
1148:Drivers/CMSIS/Include/core_cm7.h **** 
1149:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Control Register Definitions */
1150:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
1151:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
1152:Drivers/CMSIS/Include/core_cm7.h **** 
1153:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
1154:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
1155:Drivers/CMSIS/Include/core_cm7.h **** 
1156:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
1157:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
1158:Drivers/CMSIS/Include/core_cm7.h **** 
1159:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
1160:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
1161:Drivers/CMSIS/Include/core_cm7.h **** 
1162:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
1163:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
1164:Drivers/CMSIS/Include/core_cm7.h **** 
1165:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
1166:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
1167:Drivers/CMSIS/Include/core_cm7.h **** 
1168:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
1169:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
1170:Drivers/CMSIS/Include/core_cm7.h **** 
1171:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
1172:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
1173:Drivers/CMSIS/Include/core_cm7.h **** 
1174:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
1175:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
1176:Drivers/CMSIS/Include/core_cm7.h **** 
1177:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
1178:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
1179:Drivers/CMSIS/Include/core_cm7.h **** 
1180:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
1181:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
1182:Drivers/CMSIS/Include/core_cm7.h **** 
1183:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
1184:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
1185:Drivers/CMSIS/Include/core_cm7.h **** 
1186:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
1187:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
1188:Drivers/CMSIS/Include/core_cm7.h **** 
1189:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
1190:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
1191:Drivers/CMSIS/Include/core_cm7.h **** 
1192:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 37


1193:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
1194:Drivers/CMSIS/Include/core_cm7.h **** 
1195:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
1196:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
1197:Drivers/CMSIS/Include/core_cm7.h **** 
1198:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
1199:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
1200:Drivers/CMSIS/Include/core_cm7.h **** 
1201:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
1202:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
1203:Drivers/CMSIS/Include/core_cm7.h **** 
1204:Drivers/CMSIS/Include/core_cm7.h **** /* DWT CPI Count Register Definitions */
1205:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
1206:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
1207:Drivers/CMSIS/Include/core_cm7.h **** 
1208:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Exception Overhead Count Register Definitions */
1209:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1210:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1211:Drivers/CMSIS/Include/core_cm7.h **** 
1212:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Sleep Count Register Definitions */
1213:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1214:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1215:Drivers/CMSIS/Include/core_cm7.h **** 
1216:Drivers/CMSIS/Include/core_cm7.h **** /* DWT LSU Count Register Definitions */
1217:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1218:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1219:Drivers/CMSIS/Include/core_cm7.h **** 
1220:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Folded-instruction Count Register Definitions */
1221:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1222:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1223:Drivers/CMSIS/Include/core_cm7.h **** 
1224:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Mask Register Definitions */
1225:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1226:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1227:Drivers/CMSIS/Include/core_cm7.h **** 
1228:Drivers/CMSIS/Include/core_cm7.h **** /* DWT Comparator Function Register Definitions */
1229:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1230:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1231:Drivers/CMSIS/Include/core_cm7.h **** 
1232:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1233:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1234:Drivers/CMSIS/Include/core_cm7.h **** 
1235:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1236:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1237:Drivers/CMSIS/Include/core_cm7.h **** 
1238:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1239:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1240:Drivers/CMSIS/Include/core_cm7.h **** 
1241:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1242:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1243:Drivers/CMSIS/Include/core_cm7.h **** 
1244:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1245:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1246:Drivers/CMSIS/Include/core_cm7.h **** 
1247:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1248:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1249:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 38


1250:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1251:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1252:Drivers/CMSIS/Include/core_cm7.h **** 
1253:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1254:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1255:Drivers/CMSIS/Include/core_cm7.h **** 
1256:Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_DWT */
1257:Drivers/CMSIS/Include/core_cm7.h **** 
1258:Drivers/CMSIS/Include/core_cm7.h **** 
1259:Drivers/CMSIS/Include/core_cm7.h **** /**
1260:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1261:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1262:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1263:Drivers/CMSIS/Include/core_cm7.h ****   @{
1264:Drivers/CMSIS/Include/core_cm7.h ****  */
1265:Drivers/CMSIS/Include/core_cm7.h **** 
1266:Drivers/CMSIS/Include/core_cm7.h **** /**
1267:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1268:Drivers/CMSIS/Include/core_cm7.h ****  */
1269:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1270:Drivers/CMSIS/Include/core_cm7.h **** {
1271:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1272:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1273:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[2U];
1274:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1275:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED1[55U];
1276:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1277:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED2[131U];
1278:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1279:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1280:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1281:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED3[759U];
1282:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1283:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1284:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1285:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED4[1U];
1286:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1287:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1288:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1289:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED5[39U];
1290:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1291:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1292:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED7[8U];
1293:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1294:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1295:Drivers/CMSIS/Include/core_cm7.h **** } TPI_Type;
1296:Drivers/CMSIS/Include/core_cm7.h **** 
1297:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1298:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1299:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1300:Drivers/CMSIS/Include/core_cm7.h **** 
1301:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Selected Pin Protocol Register Definitions */
1302:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1303:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1304:Drivers/CMSIS/Include/core_cm7.h **** 
1305:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Status Register Definitions */
1306:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 39


1307:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1308:Drivers/CMSIS/Include/core_cm7.h **** 
1309:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1310:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1311:Drivers/CMSIS/Include/core_cm7.h **** 
1312:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1313:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1314:Drivers/CMSIS/Include/core_cm7.h **** 
1315:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1316:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1317:Drivers/CMSIS/Include/core_cm7.h **** 
1318:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Formatter and Flush Control Register Definitions */
1319:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1320:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1321:Drivers/CMSIS/Include/core_cm7.h **** 
1322:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1323:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1324:Drivers/CMSIS/Include/core_cm7.h **** 
1325:Drivers/CMSIS/Include/core_cm7.h **** /* TPI TRIGGER Register Definitions */
1326:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1327:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1328:Drivers/CMSIS/Include/core_cm7.h **** 
1329:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1330:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1331:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1332:Drivers/CMSIS/Include/core_cm7.h **** 
1333:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1334:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1335:Drivers/CMSIS/Include/core_cm7.h **** 
1336:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1337:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1338:Drivers/CMSIS/Include/core_cm7.h **** 
1339:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1340:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1341:Drivers/CMSIS/Include/core_cm7.h **** 
1342:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1343:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1344:Drivers/CMSIS/Include/core_cm7.h **** 
1345:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1346:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1347:Drivers/CMSIS/Include/core_cm7.h **** 
1348:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1349:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1350:Drivers/CMSIS/Include/core_cm7.h **** 
1351:Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR2 Register Definitions */
1352:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1353:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1354:Drivers/CMSIS/Include/core_cm7.h **** 
1355:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1356:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1357:Drivers/CMSIS/Include/core_cm7.h **** 
1358:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1359:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1360:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1361:Drivers/CMSIS/Include/core_cm7.h **** 
1362:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1363:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 40


1364:Drivers/CMSIS/Include/core_cm7.h **** 
1365:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1366:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1367:Drivers/CMSIS/Include/core_cm7.h **** 
1368:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1369:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1370:Drivers/CMSIS/Include/core_cm7.h **** 
1371:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1372:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1373:Drivers/CMSIS/Include/core_cm7.h **** 
1374:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1375:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1376:Drivers/CMSIS/Include/core_cm7.h **** 
1377:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1378:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1379:Drivers/CMSIS/Include/core_cm7.h **** 
1380:Drivers/CMSIS/Include/core_cm7.h **** /* TPI ITATBCTR0 Register Definitions */
1381:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1382:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1383:Drivers/CMSIS/Include/core_cm7.h **** 
1384:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1385:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1386:Drivers/CMSIS/Include/core_cm7.h **** 
1387:Drivers/CMSIS/Include/core_cm7.h **** /* TPI Integration Mode Control Register Definitions */
1388:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1389:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1390:Drivers/CMSIS/Include/core_cm7.h **** 
1391:Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVID Register Definitions */
1392:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1393:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1394:Drivers/CMSIS/Include/core_cm7.h **** 
1395:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1396:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1397:Drivers/CMSIS/Include/core_cm7.h **** 
1398:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1399:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1400:Drivers/CMSIS/Include/core_cm7.h **** 
1401:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1402:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1403:Drivers/CMSIS/Include/core_cm7.h **** 
1404:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1405:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1406:Drivers/CMSIS/Include/core_cm7.h **** 
1407:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1408:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1409:Drivers/CMSIS/Include/core_cm7.h **** 
1410:Drivers/CMSIS/Include/core_cm7.h **** /* TPI DEVTYPE Register Definitions */
1411:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1412:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1413:Drivers/CMSIS/Include/core_cm7.h **** 
1414:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1415:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1416:Drivers/CMSIS/Include/core_cm7.h **** 
1417:Drivers/CMSIS/Include/core_cm7.h **** /*@}*/ /* end of group CMSIS_TPI */
1418:Drivers/CMSIS/Include/core_cm7.h **** 
1419:Drivers/CMSIS/Include/core_cm7.h **** 
1420:Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 41


1421:Drivers/CMSIS/Include/core_cm7.h **** /**
1422:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1423:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1424:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1425:Drivers/CMSIS/Include/core_cm7.h ****   @{
1426:Drivers/CMSIS/Include/core_cm7.h ****  */
1427:Drivers/CMSIS/Include/core_cm7.h **** 
1428:Drivers/CMSIS/Include/core_cm7.h **** /**
1429:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1430:Drivers/CMSIS/Include/core_cm7.h ****  */
1431:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1432:Drivers/CMSIS/Include/core_cm7.h **** {
1433:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1434:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1435:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1436:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1437:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1438:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1439:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1440:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1441:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1442:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1443:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1444:Drivers/CMSIS/Include/core_cm7.h **** } MPU_Type;
1445:Drivers/CMSIS/Include/core_cm7.h **** 
1446:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_RALIASES                  4U
1447:Drivers/CMSIS/Include/core_cm7.h **** 
1448:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Type Register Definitions */
1449:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1450:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1451:Drivers/CMSIS/Include/core_cm7.h **** 
1452:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1453:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1454:Drivers/CMSIS/Include/core_cm7.h **** 
1455:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1456:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1457:Drivers/CMSIS/Include/core_cm7.h **** 
1458:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Control Register Definitions */
1459:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1460:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1461:Drivers/CMSIS/Include/core_cm7.h **** 
1462:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1463:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1464:Drivers/CMSIS/Include/core_cm7.h **** 
1465:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1466:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1467:Drivers/CMSIS/Include/core_cm7.h **** 
1468:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Number Register Definitions */
1469:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1470:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1471:Drivers/CMSIS/Include/core_cm7.h **** 
1472:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Base Address Register Definitions */
1473:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1474:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1475:Drivers/CMSIS/Include/core_cm7.h **** 
1476:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1477:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 42


1478:Drivers/CMSIS/Include/core_cm7.h **** 
1479:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1480:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1481:Drivers/CMSIS/Include/core_cm7.h **** 
1482:Drivers/CMSIS/Include/core_cm7.h **** /* MPU Region Attribute and Size Register Definitions */
1483:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1484:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1485:Drivers/CMSIS/Include/core_cm7.h **** 
1486:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1487:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1488:Drivers/CMSIS/Include/core_cm7.h **** 
1489:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1490:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1491:Drivers/CMSIS/Include/core_cm7.h **** 
1492:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1493:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1494:Drivers/CMSIS/Include/core_cm7.h **** 
1495:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1496:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1497:Drivers/CMSIS/Include/core_cm7.h **** 
1498:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1499:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1500:Drivers/CMSIS/Include/core_cm7.h **** 
1501:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1502:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1503:Drivers/CMSIS/Include/core_cm7.h **** 
1504:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1505:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1506:Drivers/CMSIS/Include/core_cm7.h **** 
1507:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1508:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1509:Drivers/CMSIS/Include/core_cm7.h **** 
1510:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1511:Drivers/CMSIS/Include/core_cm7.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1512:Drivers/CMSIS/Include/core_cm7.h **** 
1513:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_MPU */
1514:Drivers/CMSIS/Include/core_cm7.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1515:Drivers/CMSIS/Include/core_cm7.h **** 
1516:Drivers/CMSIS/Include/core_cm7.h **** 
1517:Drivers/CMSIS/Include/core_cm7.h **** /**
1518:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1519:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1520:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1521:Drivers/CMSIS/Include/core_cm7.h ****   @{
1522:Drivers/CMSIS/Include/core_cm7.h ****  */
1523:Drivers/CMSIS/Include/core_cm7.h **** 
1524:Drivers/CMSIS/Include/core_cm7.h **** /**
1525:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1526:Drivers/CMSIS/Include/core_cm7.h ****  */
1527:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1528:Drivers/CMSIS/Include/core_cm7.h **** {
1529:Drivers/CMSIS/Include/core_cm7.h ****         uint32_t RESERVED0[1U];
1530:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1531:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1532:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1533:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1534:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 43


1535:Drivers/CMSIS/Include/core_cm7.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1536:Drivers/CMSIS/Include/core_cm7.h **** } FPU_Type;
1537:Drivers/CMSIS/Include/core_cm7.h **** 
1538:Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Control Register Definitions */
1539:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1540:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1541:Drivers/CMSIS/Include/core_cm7.h **** 
1542:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1543:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1544:Drivers/CMSIS/Include/core_cm7.h **** 
1545:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1546:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1547:Drivers/CMSIS/Include/core_cm7.h **** 
1548:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1549:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1550:Drivers/CMSIS/Include/core_cm7.h **** 
1551:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1552:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1553:Drivers/CMSIS/Include/core_cm7.h **** 
1554:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1555:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1556:Drivers/CMSIS/Include/core_cm7.h **** 
1557:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1558:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1559:Drivers/CMSIS/Include/core_cm7.h **** 
1560:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1561:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1562:Drivers/CMSIS/Include/core_cm7.h **** 
1563:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1564:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1565:Drivers/CMSIS/Include/core_cm7.h **** 
1566:Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Context Address Register Definitions */
1567:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1568:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1569:Drivers/CMSIS/Include/core_cm7.h **** 
1570:Drivers/CMSIS/Include/core_cm7.h **** /* Floating-Point Default Status Control Register Definitions */
1571:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1572:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1573:Drivers/CMSIS/Include/core_cm7.h **** 
1574:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1575:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1576:Drivers/CMSIS/Include/core_cm7.h **** 
1577:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1578:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1579:Drivers/CMSIS/Include/core_cm7.h **** 
1580:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1581:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1582:Drivers/CMSIS/Include/core_cm7.h **** 
1583:Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 0 Definitions */
1584:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1585:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1586:Drivers/CMSIS/Include/core_cm7.h **** 
1587:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1588:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1589:Drivers/CMSIS/Include/core_cm7.h **** 
1590:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1591:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 44


1592:Drivers/CMSIS/Include/core_cm7.h **** 
1593:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1594:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1595:Drivers/CMSIS/Include/core_cm7.h **** 
1596:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1597:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1598:Drivers/CMSIS/Include/core_cm7.h **** 
1599:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1600:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1601:Drivers/CMSIS/Include/core_cm7.h **** 
1602:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1603:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1604:Drivers/CMSIS/Include/core_cm7.h **** 
1605:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1606:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1607:Drivers/CMSIS/Include/core_cm7.h **** 
1608:Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 1 Definitions */
1609:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1610:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1611:Drivers/CMSIS/Include/core_cm7.h **** 
1612:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1613:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1614:Drivers/CMSIS/Include/core_cm7.h **** 
1615:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1616:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1617:Drivers/CMSIS/Include/core_cm7.h **** 
1618:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1619:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1620:Drivers/CMSIS/Include/core_cm7.h **** 
1621:Drivers/CMSIS/Include/core_cm7.h **** /* Media and FP Feature Register 2 Definitions */
1622:Drivers/CMSIS/Include/core_cm7.h **** 
1623:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1624:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1625:Drivers/CMSIS/Include/core_cm7.h **** 
1626:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_FPU */
1627:Drivers/CMSIS/Include/core_cm7.h **** 
1628:Drivers/CMSIS/Include/core_cm7.h **** 
1629:Drivers/CMSIS/Include/core_cm7.h **** /**
1630:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_core_register
1631:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1632:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Type definitions for the Core Debug Registers
1633:Drivers/CMSIS/Include/core_cm7.h ****   @{
1634:Drivers/CMSIS/Include/core_cm7.h ****  */
1635:Drivers/CMSIS/Include/core_cm7.h **** 
1636:Drivers/CMSIS/Include/core_cm7.h **** /**
1637:Drivers/CMSIS/Include/core_cm7.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1638:Drivers/CMSIS/Include/core_cm7.h ****  */
1639:Drivers/CMSIS/Include/core_cm7.h **** typedef struct
1640:Drivers/CMSIS/Include/core_cm7.h **** {
1641:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1642:Drivers/CMSIS/Include/core_cm7.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1643:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1644:Drivers/CMSIS/Include/core_cm7.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1645:Drivers/CMSIS/Include/core_cm7.h **** } CoreDebug_Type;
1646:Drivers/CMSIS/Include/core_cm7.h **** 
1647:Drivers/CMSIS/Include/core_cm7.h **** /* Debug Halting Control and Status Register Definitions */
1648:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 45


1649:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1650:Drivers/CMSIS/Include/core_cm7.h **** 
1651:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1652:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1653:Drivers/CMSIS/Include/core_cm7.h **** 
1654:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1655:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1656:Drivers/CMSIS/Include/core_cm7.h **** 
1657:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1658:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1659:Drivers/CMSIS/Include/core_cm7.h **** 
1660:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1661:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1662:Drivers/CMSIS/Include/core_cm7.h **** 
1663:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1664:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1665:Drivers/CMSIS/Include/core_cm7.h **** 
1666:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1667:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1668:Drivers/CMSIS/Include/core_cm7.h **** 
1669:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1670:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1671:Drivers/CMSIS/Include/core_cm7.h **** 
1672:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1673:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1674:Drivers/CMSIS/Include/core_cm7.h **** 
1675:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1676:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1677:Drivers/CMSIS/Include/core_cm7.h **** 
1678:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1679:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1680:Drivers/CMSIS/Include/core_cm7.h **** 
1681:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1682:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1683:Drivers/CMSIS/Include/core_cm7.h **** 
1684:Drivers/CMSIS/Include/core_cm7.h **** /* Debug Core Register Selector Register Definitions */
1685:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1686:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1687:Drivers/CMSIS/Include/core_cm7.h **** 
1688:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1689:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1690:Drivers/CMSIS/Include/core_cm7.h **** 
1691:Drivers/CMSIS/Include/core_cm7.h **** /* Debug Exception and Monitor Control Register Definitions */
1692:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1693:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1694:Drivers/CMSIS/Include/core_cm7.h **** 
1695:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1696:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1697:Drivers/CMSIS/Include/core_cm7.h **** 
1698:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1699:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1700:Drivers/CMSIS/Include/core_cm7.h **** 
1701:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1702:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1703:Drivers/CMSIS/Include/core_cm7.h **** 
1704:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1705:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 46


1706:Drivers/CMSIS/Include/core_cm7.h **** 
1707:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1708:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1709:Drivers/CMSIS/Include/core_cm7.h **** 
1710:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1711:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1712:Drivers/CMSIS/Include/core_cm7.h **** 
1713:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1714:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1715:Drivers/CMSIS/Include/core_cm7.h **** 
1716:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1717:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1718:Drivers/CMSIS/Include/core_cm7.h **** 
1719:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1720:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1721:Drivers/CMSIS/Include/core_cm7.h **** 
1722:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1723:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1724:Drivers/CMSIS/Include/core_cm7.h **** 
1725:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1726:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1727:Drivers/CMSIS/Include/core_cm7.h **** 
1728:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1729:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1730:Drivers/CMSIS/Include/core_cm7.h **** 
1731:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_CoreDebug */
1732:Drivers/CMSIS/Include/core_cm7.h **** 
1733:Drivers/CMSIS/Include/core_cm7.h **** 
1734:Drivers/CMSIS/Include/core_cm7.h **** /**
1735:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1736:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1737:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1738:Drivers/CMSIS/Include/core_cm7.h ****   @{
1739:Drivers/CMSIS/Include/core_cm7.h ****  */
1740:Drivers/CMSIS/Include/core_cm7.h **** 
1741:Drivers/CMSIS/Include/core_cm7.h **** /**
1742:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1743:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1744:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1745:Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted value.
1746:Drivers/CMSIS/Include/core_cm7.h **** */
1747:Drivers/CMSIS/Include/core_cm7.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1748:Drivers/CMSIS/Include/core_cm7.h **** 
1749:Drivers/CMSIS/Include/core_cm7.h **** /**
1750:Drivers/CMSIS/Include/core_cm7.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1751:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] field  Name of the register bit field.
1752:Drivers/CMSIS/Include/core_cm7.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1753:Drivers/CMSIS/Include/core_cm7.h ****   \return           Masked and shifted bit field value.
1754:Drivers/CMSIS/Include/core_cm7.h **** */
1755:Drivers/CMSIS/Include/core_cm7.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1756:Drivers/CMSIS/Include/core_cm7.h **** 
1757:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of group CMSIS_core_bitfield */
1758:Drivers/CMSIS/Include/core_cm7.h **** 
1759:Drivers/CMSIS/Include/core_cm7.h **** 
1760:Drivers/CMSIS/Include/core_cm7.h **** /**
1761:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup    CMSIS_core_register
1762:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup   CMSIS_core_base     Core Definitions
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 47


1763:Drivers/CMSIS/Include/core_cm7.h ****   \brief      Definitions for base addresses, unions, and structures.
1764:Drivers/CMSIS/Include/core_cm7.h ****   @{
1765:Drivers/CMSIS/Include/core_cm7.h ****  */
1766:Drivers/CMSIS/Include/core_cm7.h **** 
1767:Drivers/CMSIS/Include/core_cm7.h **** /* Memory mapping of Core Hardware */
1768:Drivers/CMSIS/Include/core_cm7.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1769:Drivers/CMSIS/Include/core_cm7.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1770:Drivers/CMSIS/Include/core_cm7.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1771:Drivers/CMSIS/Include/core_cm7.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1772:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1773:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1774:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1775:Drivers/CMSIS/Include/core_cm7.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1776:Drivers/CMSIS/Include/core_cm7.h **** 
1777:Drivers/CMSIS/Include/core_cm7.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1778:Drivers/CMSIS/Include/core_cm7.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1779:Drivers/CMSIS/Include/core_cm7.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1780:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1781:Drivers/CMSIS/Include/core_cm7.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1782:Drivers/CMSIS/Include/core_cm7.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1783:Drivers/CMSIS/Include/core_cm7.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1784:Drivers/CMSIS/Include/core_cm7.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1785:Drivers/CMSIS/Include/core_cm7.h **** 
1786:Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1787:Drivers/CMSIS/Include/core_cm7.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1788:Drivers/CMSIS/Include/core_cm7.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1789:Drivers/CMSIS/Include/core_cm7.h **** #endif
1790:Drivers/CMSIS/Include/core_cm7.h **** 
1791:Drivers/CMSIS/Include/core_cm7.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1792:Drivers/CMSIS/Include/core_cm7.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1793:Drivers/CMSIS/Include/core_cm7.h **** 
1794:Drivers/CMSIS/Include/core_cm7.h **** /*@} */
1795:Drivers/CMSIS/Include/core_cm7.h **** 
1796:Drivers/CMSIS/Include/core_cm7.h **** 
1797:Drivers/CMSIS/Include/core_cm7.h **** 
1798:Drivers/CMSIS/Include/core_cm7.h **** /*******************************************************************************
1799:Drivers/CMSIS/Include/core_cm7.h ****  *                Hardware Abstraction Layer
1800:Drivers/CMSIS/Include/core_cm7.h ****   Core Function Interface contains:
1801:Drivers/CMSIS/Include/core_cm7.h ****   - Core NVIC Functions
1802:Drivers/CMSIS/Include/core_cm7.h ****   - Core SysTick Functions
1803:Drivers/CMSIS/Include/core_cm7.h ****   - Core Debug Functions
1804:Drivers/CMSIS/Include/core_cm7.h ****   - Core Register Access Functions
1805:Drivers/CMSIS/Include/core_cm7.h ****  ******************************************************************************/
1806:Drivers/CMSIS/Include/core_cm7.h **** /**
1807:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1808:Drivers/CMSIS/Include/core_cm7.h **** */
1809:Drivers/CMSIS/Include/core_cm7.h **** 
1810:Drivers/CMSIS/Include/core_cm7.h **** 
1811:Drivers/CMSIS/Include/core_cm7.h **** 
1812:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################   NVIC functions  #################################### */
1813:Drivers/CMSIS/Include/core_cm7.h **** /**
1814:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
1815:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1816:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1817:Drivers/CMSIS/Include/core_cm7.h ****   @{
1818:Drivers/CMSIS/Include/core_cm7.h ****  */
1819:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 48


1820:Drivers/CMSIS/Include/core_cm7.h **** #ifdef CMSIS_NVIC_VIRTUAL
1821:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1822:Drivers/CMSIS/Include/core_cm7.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1823:Drivers/CMSIS/Include/core_cm7.h ****   #endif
1824:Drivers/CMSIS/Include/core_cm7.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1825:Drivers/CMSIS/Include/core_cm7.h **** #else
1826:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1827:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1828:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1829:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1830:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1831:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1832:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1833:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1834:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetActive              __NVIC_GetActive
1835:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1836:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1837:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1838:Drivers/CMSIS/Include/core_cm7.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1839:Drivers/CMSIS/Include/core_cm7.h **** 
1840:Drivers/CMSIS/Include/core_cm7.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1841:Drivers/CMSIS/Include/core_cm7.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1842:Drivers/CMSIS/Include/core_cm7.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1843:Drivers/CMSIS/Include/core_cm7.h ****   #endif
1844:Drivers/CMSIS/Include/core_cm7.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1845:Drivers/CMSIS/Include/core_cm7.h **** #else
1846:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_SetVector              __NVIC_SetVector
1847:Drivers/CMSIS/Include/core_cm7.h ****   #define NVIC_GetVector              __NVIC_GetVector
1848:Drivers/CMSIS/Include/core_cm7.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1849:Drivers/CMSIS/Include/core_cm7.h **** 
1850:Drivers/CMSIS/Include/core_cm7.h **** #define NVIC_USER_IRQ_OFFSET          16
1851:Drivers/CMSIS/Include/core_cm7.h **** 
1852:Drivers/CMSIS/Include/core_cm7.h **** 
1853:Drivers/CMSIS/Include/core_cm7.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1854:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1855:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1856:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1857:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1858:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1859:Drivers/CMSIS/Include/core_cm7.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1860:Drivers/CMSIS/Include/core_cm7.h **** 
1861:Drivers/CMSIS/Include/core_cm7.h **** 
1862:Drivers/CMSIS/Include/core_cm7.h **** /**
1863:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Priority Grouping
1864:Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the priority grouping field using the required unlock sequence.
1865:Drivers/CMSIS/Include/core_cm7.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1866:Drivers/CMSIS/Include/core_cm7.h ****            Only values from 0..7 are used.
1867:Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
1868:Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1869:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      PriorityGroup  Priority grouping field.
1870:Drivers/CMSIS/Include/core_cm7.h ****  */
1871:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1872:Drivers/CMSIS/Include/core_cm7.h **** {
1873:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t reg_value;
1874:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1875:Drivers/CMSIS/Include/core_cm7.h **** 
1876:Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 49


1877:Drivers/CMSIS/Include/core_cm7.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1878:Drivers/CMSIS/Include/core_cm7.h ****   reg_value  =  (reg_value                                   |
1879:Drivers/CMSIS/Include/core_cm7.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1880:Drivers/CMSIS/Include/core_cm7.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1881:Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR =  reg_value;
1882:Drivers/CMSIS/Include/core_cm7.h **** }
1883:Drivers/CMSIS/Include/core_cm7.h **** 
1884:Drivers/CMSIS/Include/core_cm7.h **** 
1885:Drivers/CMSIS/Include/core_cm7.h **** /**
1886:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Priority Grouping
1887:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1888:Drivers/CMSIS/Include/core_cm7.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1889:Drivers/CMSIS/Include/core_cm7.h ****  */
1890:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1891:Drivers/CMSIS/Include/core_cm7.h **** {
1892:Drivers/CMSIS/Include/core_cm7.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1893:Drivers/CMSIS/Include/core_cm7.h **** }
1894:Drivers/CMSIS/Include/core_cm7.h **** 
1895:Drivers/CMSIS/Include/core_cm7.h **** 
1896:Drivers/CMSIS/Include/core_cm7.h **** /**
1897:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable Interrupt
1898:Drivers/CMSIS/Include/core_cm7.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1899:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1900:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1901:Drivers/CMSIS/Include/core_cm7.h ****  */
1902:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1903:Drivers/CMSIS/Include/core_cm7.h **** {
1904:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1905:Drivers/CMSIS/Include/core_cm7.h ****   {
1906:Drivers/CMSIS/Include/core_cm7.h ****     __COMPILER_BARRIER();
1907:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1908:Drivers/CMSIS/Include/core_cm7.h ****     __COMPILER_BARRIER();
1909:Drivers/CMSIS/Include/core_cm7.h ****   }
1910:Drivers/CMSIS/Include/core_cm7.h **** }
1911:Drivers/CMSIS/Include/core_cm7.h **** 
1912:Drivers/CMSIS/Include/core_cm7.h **** 
1913:Drivers/CMSIS/Include/core_cm7.h **** /**
1914:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Enable status
1915:Drivers/CMSIS/Include/core_cm7.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1916:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1917:Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt is not enabled.
1918:Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt is enabled.
1919:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1920:Drivers/CMSIS/Include/core_cm7.h ****  */
1921:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1922:Drivers/CMSIS/Include/core_cm7.h **** {
1923:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1924:Drivers/CMSIS/Include/core_cm7.h ****   {
1925:Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1926:Drivers/CMSIS/Include/core_cm7.h ****   }
1927:Drivers/CMSIS/Include/core_cm7.h ****   else
1928:Drivers/CMSIS/Include/core_cm7.h ****   {
1929:Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
1930:Drivers/CMSIS/Include/core_cm7.h ****   }
1931:Drivers/CMSIS/Include/core_cm7.h **** }
1932:Drivers/CMSIS/Include/core_cm7.h **** 
1933:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 50


1934:Drivers/CMSIS/Include/core_cm7.h **** /**
1935:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable Interrupt
1936:Drivers/CMSIS/Include/core_cm7.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1937:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1938:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1939:Drivers/CMSIS/Include/core_cm7.h ****  */
1940:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1941:Drivers/CMSIS/Include/core_cm7.h **** {
1942:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1943:Drivers/CMSIS/Include/core_cm7.h ****   {
1944:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1945:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
1946:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
1947:Drivers/CMSIS/Include/core_cm7.h ****   }
1948:Drivers/CMSIS/Include/core_cm7.h **** }
1949:Drivers/CMSIS/Include/core_cm7.h **** 
1950:Drivers/CMSIS/Include/core_cm7.h **** 
1951:Drivers/CMSIS/Include/core_cm7.h **** /**
1952:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Pending Interrupt
1953:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1954:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1955:Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not pending.
1956:Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is pending.
1957:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1958:Drivers/CMSIS/Include/core_cm7.h ****  */
1959:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1960:Drivers/CMSIS/Include/core_cm7.h **** {
1961:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1962:Drivers/CMSIS/Include/core_cm7.h ****   {
1963:Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1964:Drivers/CMSIS/Include/core_cm7.h ****   }
1965:Drivers/CMSIS/Include/core_cm7.h ****   else
1966:Drivers/CMSIS/Include/core_cm7.h ****   {
1967:Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
1968:Drivers/CMSIS/Include/core_cm7.h ****   }
1969:Drivers/CMSIS/Include/core_cm7.h **** }
1970:Drivers/CMSIS/Include/core_cm7.h **** 
1971:Drivers/CMSIS/Include/core_cm7.h **** 
1972:Drivers/CMSIS/Include/core_cm7.h **** /**
1973:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Pending Interrupt
1974:Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1975:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
1976:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1977:Drivers/CMSIS/Include/core_cm7.h ****  */
1978:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1979:Drivers/CMSIS/Include/core_cm7.h **** {
1980:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1981:Drivers/CMSIS/Include/core_cm7.h ****   {
1982:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1983:Drivers/CMSIS/Include/core_cm7.h ****   }
1984:Drivers/CMSIS/Include/core_cm7.h **** }
1985:Drivers/CMSIS/Include/core_cm7.h **** 
1986:Drivers/CMSIS/Include/core_cm7.h **** 
1987:Drivers/CMSIS/Include/core_cm7.h **** /**
1988:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clear Pending Interrupt
1989:Drivers/CMSIS/Include/core_cm7.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1990:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 51


1991:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
1992:Drivers/CMSIS/Include/core_cm7.h ****  */
1993:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1994:Drivers/CMSIS/Include/core_cm7.h **** {
1995:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
1996:Drivers/CMSIS/Include/core_cm7.h ****   {
1997:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1998:Drivers/CMSIS/Include/core_cm7.h ****   }
1999:Drivers/CMSIS/Include/core_cm7.h **** }
2000:Drivers/CMSIS/Include/core_cm7.h **** 
2001:Drivers/CMSIS/Include/core_cm7.h **** 
2002:Drivers/CMSIS/Include/core_cm7.h **** /**
2003:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Active Interrupt
2004:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
2005:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Device specific interrupt number.
2006:Drivers/CMSIS/Include/core_cm7.h ****   \return             0  Interrupt status is not active.
2007:Drivers/CMSIS/Include/core_cm7.h ****   \return             1  Interrupt status is active.
2008:Drivers/CMSIS/Include/core_cm7.h ****   \note    IRQn must not be negative.
2009:Drivers/CMSIS/Include/core_cm7.h ****  */
2010:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
2011:Drivers/CMSIS/Include/core_cm7.h **** {
2012:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2013:Drivers/CMSIS/Include/core_cm7.h ****   {
2014:Drivers/CMSIS/Include/core_cm7.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
2015:Drivers/CMSIS/Include/core_cm7.h ****   }
2016:Drivers/CMSIS/Include/core_cm7.h ****   else
2017:Drivers/CMSIS/Include/core_cm7.h ****   {
2018:Drivers/CMSIS/Include/core_cm7.h ****     return(0U);
2019:Drivers/CMSIS/Include/core_cm7.h ****   }
2020:Drivers/CMSIS/Include/core_cm7.h **** }
2021:Drivers/CMSIS/Include/core_cm7.h **** 
2022:Drivers/CMSIS/Include/core_cm7.h **** 
2023:Drivers/CMSIS/Include/core_cm7.h **** /**
2024:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Priority
2025:Drivers/CMSIS/Include/core_cm7.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
2026:Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2027:Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2028:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]      IRQn  Interrupt number.
2029:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]  priority  Priority to set.
2030:Drivers/CMSIS/Include/core_cm7.h ****   \note    The priority cannot be set for every processor exception.
2031:Drivers/CMSIS/Include/core_cm7.h ****  */
2032:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
2033:Drivers/CMSIS/Include/core_cm7.h **** {
2034:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2035:Drivers/CMSIS/Include/core_cm7.h ****   {
2036:Drivers/CMSIS/Include/core_cm7.h ****     NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
2037:Drivers/CMSIS/Include/core_cm7.h ****   }
2038:Drivers/CMSIS/Include/core_cm7.h ****   else
2039:Drivers/CMSIS/Include/core_cm7.h ****   {
2040:Drivers/CMSIS/Include/core_cm7.h ****     SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (
2041:Drivers/CMSIS/Include/core_cm7.h ****   }
2042:Drivers/CMSIS/Include/core_cm7.h **** }
2043:Drivers/CMSIS/Include/core_cm7.h **** 
2044:Drivers/CMSIS/Include/core_cm7.h **** 
2045:Drivers/CMSIS/Include/core_cm7.h **** /**
2046:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Priority
2047:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 52


2048:Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2049:Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2050:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn  Interrupt number.
2051:Drivers/CMSIS/Include/core_cm7.h ****   \return             Interrupt Priority.
2052:Drivers/CMSIS/Include/core_cm7.h ****                       Value is aligned automatically to the implemented priority bits of the microc
2053:Drivers/CMSIS/Include/core_cm7.h ****  */
2054:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
2055:Drivers/CMSIS/Include/core_cm7.h **** {
2056:Drivers/CMSIS/Include/core_cm7.h **** 
2057:Drivers/CMSIS/Include/core_cm7.h ****   if ((int32_t)(IRQn) >= 0)
2058:Drivers/CMSIS/Include/core_cm7.h ****   {
2059:Drivers/CMSIS/Include/core_cm7.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]                >> (8U - __NVIC_PRIO_BITS)));
2060:Drivers/CMSIS/Include/core_cm7.h ****   }
2061:Drivers/CMSIS/Include/core_cm7.h ****   else
2062:Drivers/CMSIS/Include/core_cm7.h ****   {
2063:Drivers/CMSIS/Include/core_cm7.h ****     return(((uint32_t)SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
2064:Drivers/CMSIS/Include/core_cm7.h ****   }
2065:Drivers/CMSIS/Include/core_cm7.h **** }
2066:Drivers/CMSIS/Include/core_cm7.h **** 
2067:Drivers/CMSIS/Include/core_cm7.h **** 
2068:Drivers/CMSIS/Include/core_cm7.h **** /**
2069:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Encode Priority
2070:Drivers/CMSIS/Include/core_cm7.h ****   \details Encodes the priority for an interrupt with the given priority group,
2071:Drivers/CMSIS/Include/core_cm7.h ****            preemptive priority value, and subpriority value.
2072:Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2073:Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
2074:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2075:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
2076:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
2077:Drivers/CMSIS/Include/core_cm7.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
2078:Drivers/CMSIS/Include/core_cm7.h ****  */
2079:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
2080:Drivers/CMSIS/Include/core_cm7.h **** {
2081:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2082:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2083:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2084:Drivers/CMSIS/Include/core_cm7.h **** 
2085:Drivers/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2086:Drivers/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2087:Drivers/CMSIS/Include/core_cm7.h **** 
2088:Drivers/CMSIS/Include/core_cm7.h ****   return (
2089:Drivers/CMSIS/Include/core_cm7.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
2090:Drivers/CMSIS/Include/core_cm7.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
2091:Drivers/CMSIS/Include/core_cm7.h ****          );
2092:Drivers/CMSIS/Include/core_cm7.h **** }
2093:Drivers/CMSIS/Include/core_cm7.h **** 
2094:Drivers/CMSIS/Include/core_cm7.h **** 
2095:Drivers/CMSIS/Include/core_cm7.h **** /**
2096:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Decode Priority
2097:Drivers/CMSIS/Include/core_cm7.h ****   \details Decodes an interrupt priority value with a given priority group to
2098:Drivers/CMSIS/Include/core_cm7.h ****            preemptive priority value and subpriority value.
2099:Drivers/CMSIS/Include/core_cm7.h ****            In case of a conflict between priority grouping and available
2100:Drivers/CMSIS/Include/core_cm7.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
2101:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
2102:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]     PriorityGroup  Used priority group.
2103:Drivers/CMSIS/Include/core_cm7.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
2104:Drivers/CMSIS/Include/core_cm7.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 53


2105:Drivers/CMSIS/Include/core_cm7.h ****  */
2106:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
2107:Drivers/CMSIS/Include/core_cm7.h **** {
2108:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
2109:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t PreemptPriorityBits;
2110:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t SubPriorityBits;
2111:Drivers/CMSIS/Include/core_cm7.h **** 
2112:Drivers/CMSIS/Include/core_cm7.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
2113:Drivers/CMSIS/Include/core_cm7.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
2114:Drivers/CMSIS/Include/core_cm7.h **** 
2115:Drivers/CMSIS/Include/core_cm7.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
2116:Drivers/CMSIS/Include/core_cm7.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
2117:Drivers/CMSIS/Include/core_cm7.h **** }
2118:Drivers/CMSIS/Include/core_cm7.h **** 
2119:Drivers/CMSIS/Include/core_cm7.h **** 
2120:Drivers/CMSIS/Include/core_cm7.h **** /**
2121:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Set Interrupt Vector
2122:Drivers/CMSIS/Include/core_cm7.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
2123:Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2124:Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2125:Drivers/CMSIS/Include/core_cm7.h ****            VTOR must been relocated to SRAM before.
2126:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number
2127:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   vector    Address of interrupt handler function
2128:Drivers/CMSIS/Include/core_cm7.h ****  */
2129:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
2130:Drivers/CMSIS/Include/core_cm7.h **** {
2131:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
2132:Drivers/CMSIS/Include/core_cm7.h ****   (* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4)) = vector;
2133:Drivers/CMSIS/Include/core_cm7.h ****   __DSB();
2134:Drivers/CMSIS/Include/core_cm7.h **** }
2135:Drivers/CMSIS/Include/core_cm7.h **** 
2136:Drivers/CMSIS/Include/core_cm7.h **** 
2137:Drivers/CMSIS/Include/core_cm7.h **** /**
2138:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Get Interrupt Vector
2139:Drivers/CMSIS/Include/core_cm7.h ****   \details Reads an interrupt vector from interrupt vector table.
2140:Drivers/CMSIS/Include/core_cm7.h ****            The interrupt number can be positive to specify a device specific interrupt,
2141:Drivers/CMSIS/Include/core_cm7.h ****            or negative to specify a processor exception.
2142:Drivers/CMSIS/Include/core_cm7.h ****   \param [in]   IRQn      Interrupt number.
2143:Drivers/CMSIS/Include/core_cm7.h ****   \return                 Address of interrupt handler function
2144:Drivers/CMSIS/Include/core_cm7.h ****  */
2145:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
2146:Drivers/CMSIS/Include/core_cm7.h **** {
2147:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
2148:Drivers/CMSIS/Include/core_cm7.h ****   return (uint32_t)(* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4));
2149:Drivers/CMSIS/Include/core_cm7.h **** }
2150:Drivers/CMSIS/Include/core_cm7.h **** 
2151:Drivers/CMSIS/Include/core_cm7.h **** 
2152:Drivers/CMSIS/Include/core_cm7.h **** /**
2153:Drivers/CMSIS/Include/core_cm7.h ****   \brief   System Reset
2154:Drivers/CMSIS/Include/core_cm7.h ****   \details Initiates a system reset request to reset the MCU.
2155:Drivers/CMSIS/Include/core_cm7.h ****  */
2156:Drivers/CMSIS/Include/core_cm7.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
2157:Drivers/CMSIS/Include/core_cm7.h **** {
2158:Drivers/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure all outstanding memor
2159:Drivers/CMSIS/Include/core_cm7.h ****                                                                        buffered write are completed
2160:Drivers/CMSIS/Include/core_cm7.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
2161:Drivers/CMSIS/Include/core_cm7.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 54


2162:Drivers/CMSIS/Include/core_cm7.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
2163:Drivers/CMSIS/Include/core_cm7.h ****   __DSB();                                                          /* Ensure completion of memory 
2164:Drivers/CMSIS/Include/core_cm7.h **** 
2165:Drivers/CMSIS/Include/core_cm7.h ****   for(;;)                                                           /* wait until reset */
2166:Drivers/CMSIS/Include/core_cm7.h ****   {
2167:Drivers/CMSIS/Include/core_cm7.h ****     __NOP();
2168:Drivers/CMSIS/Include/core_cm7.h ****   }
2169:Drivers/CMSIS/Include/core_cm7.h **** }
2170:Drivers/CMSIS/Include/core_cm7.h **** 
2171:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_NVICFunctions */
2172:Drivers/CMSIS/Include/core_cm7.h **** 
2173:Drivers/CMSIS/Include/core_cm7.h **** 
2174:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  MPU functions  #################################### */
2175:Drivers/CMSIS/Include/core_cm7.h **** 
2176:Drivers/CMSIS/Include/core_cm7.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
2177:Drivers/CMSIS/Include/core_cm7.h **** 
2178:Drivers/CMSIS/Include/core_cm7.h **** #include "mpu_armv7.h"
2179:Drivers/CMSIS/Include/core_cm7.h **** 
2180:Drivers/CMSIS/Include/core_cm7.h **** #endif
2181:Drivers/CMSIS/Include/core_cm7.h **** 
2182:Drivers/CMSIS/Include/core_cm7.h **** 
2183:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  FPU functions  #################################### */
2184:Drivers/CMSIS/Include/core_cm7.h **** /**
2185:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2186:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
2187:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Function that provides FPU type.
2188:Drivers/CMSIS/Include/core_cm7.h ****   @{
2189:Drivers/CMSIS/Include/core_cm7.h ****  */
2190:Drivers/CMSIS/Include/core_cm7.h **** 
2191:Drivers/CMSIS/Include/core_cm7.h **** /**
2192:Drivers/CMSIS/Include/core_cm7.h ****   \brief   get FPU type
2193:Drivers/CMSIS/Include/core_cm7.h ****   \details returns the FPU type
2194:Drivers/CMSIS/Include/core_cm7.h ****   \returns
2195:Drivers/CMSIS/Include/core_cm7.h ****    - \b  0: No FPU
2196:Drivers/CMSIS/Include/core_cm7.h ****    - \b  1: Single precision FPU
2197:Drivers/CMSIS/Include/core_cm7.h ****    - \b  2: Double + Single precision FPU
2198:Drivers/CMSIS/Include/core_cm7.h ****  */
2199:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
2200:Drivers/CMSIS/Include/core_cm7.h **** {
2201:Drivers/CMSIS/Include/core_cm7.h ****   uint32_t mvfr0;
2202:Drivers/CMSIS/Include/core_cm7.h **** 
2203:Drivers/CMSIS/Include/core_cm7.h ****   mvfr0 = SCB->MVFR0;
2204:Drivers/CMSIS/Include/core_cm7.h ****   if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x220U)
2205:Drivers/CMSIS/Include/core_cm7.h ****   {
2206:Drivers/CMSIS/Include/core_cm7.h ****     return 2U;           /* Double + Single precision FPU */
2207:Drivers/CMSIS/Include/core_cm7.h ****   }
2208:Drivers/CMSIS/Include/core_cm7.h ****   else if ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
2209:Drivers/CMSIS/Include/core_cm7.h ****   {
2210:Drivers/CMSIS/Include/core_cm7.h ****     return 1U;           /* Single precision FPU */
2211:Drivers/CMSIS/Include/core_cm7.h ****   }
2212:Drivers/CMSIS/Include/core_cm7.h ****   else
2213:Drivers/CMSIS/Include/core_cm7.h ****   {
2214:Drivers/CMSIS/Include/core_cm7.h ****     return 0U;           /* No FPU */
2215:Drivers/CMSIS/Include/core_cm7.h ****   }
2216:Drivers/CMSIS/Include/core_cm7.h **** }
2217:Drivers/CMSIS/Include/core_cm7.h **** 
2218:Drivers/CMSIS/Include/core_cm7.h **** /*@} end of CMSIS_Core_FpuFunctions */
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 55


2219:Drivers/CMSIS/Include/core_cm7.h **** 
2220:Drivers/CMSIS/Include/core_cm7.h **** 
2221:Drivers/CMSIS/Include/core_cm7.h **** 
2222:Drivers/CMSIS/Include/core_cm7.h **** /* ##########################  Cache functions  #################################### */
2223:Drivers/CMSIS/Include/core_cm7.h **** /**
2224:Drivers/CMSIS/Include/core_cm7.h ****   \ingroup  CMSIS_Core_FunctionInterface
2225:Drivers/CMSIS/Include/core_cm7.h ****   \defgroup CMSIS_Core_CacheFunctions Cache Functions
2226:Drivers/CMSIS/Include/core_cm7.h ****   \brief    Functions that configure Instruction and Data cache.
2227:Drivers/CMSIS/Include/core_cm7.h ****   @{
2228:Drivers/CMSIS/Include/core_cm7.h ****  */
2229:Drivers/CMSIS/Include/core_cm7.h **** 
2230:Drivers/CMSIS/Include/core_cm7.h **** /* Cache Size ID Register Macros */
2231:Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_WAYS(x)         (((x) & SCB_CCSIDR_ASSOCIATIVITY_Msk) >> SCB_CCSIDR_ASSOCIATIVITY_Po
2232:Drivers/CMSIS/Include/core_cm7.h **** #define CCSIDR_SETS(x)         (((x) & SCB_CCSIDR_NUMSETS_Msk      ) >> SCB_CCSIDR_NUMSETS_Pos     
2233:Drivers/CMSIS/Include/core_cm7.h **** 
2234:Drivers/CMSIS/Include/core_cm7.h **** #define __SCB_DCACHE_LINE_SIZE  32U /*!< Cortex-M7 cache line size is fixed to 32 bytes (8 words). 
2235:Drivers/CMSIS/Include/core_cm7.h **** #define __SCB_ICACHE_LINE_SIZE  32U /*!< Cortex-M7 cache line size is fixed to 32 bytes (8 words). 
2236:Drivers/CMSIS/Include/core_cm7.h **** 
2237:Drivers/CMSIS/Include/core_cm7.h **** /**
2238:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable I-Cache
2239:Drivers/CMSIS/Include/core_cm7.h ****   \details Turns on I-Cache
2240:Drivers/CMSIS/Include/core_cm7.h ****   */
2241:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_EnableICache (void)
2242:Drivers/CMSIS/Include/core_cm7.h **** {
2243:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2244:Drivers/CMSIS/Include/core_cm7.h ****     if (SCB->CCR & SCB_CCR_IC_Msk) return;  /* return if ICache is already enabled */
2245:Drivers/CMSIS/Include/core_cm7.h **** 
2246:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2247:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2248:Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2249:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2250:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2251:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_IC_Msk;  /* enable I-Cache */
2252:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2253:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2254:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2255:Drivers/CMSIS/Include/core_cm7.h **** }
2256:Drivers/CMSIS/Include/core_cm7.h **** 
2257:Drivers/CMSIS/Include/core_cm7.h **** 
2258:Drivers/CMSIS/Include/core_cm7.h **** /**
2259:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable I-Cache
2260:Drivers/CMSIS/Include/core_cm7.h ****   \details Turns off I-Cache
2261:Drivers/CMSIS/Include/core_cm7.h ****   */
2262:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_DisableICache (void)
2263:Drivers/CMSIS/Include/core_cm7.h **** {
2264:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2265:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2266:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2267:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_IC_Msk;  /* disable I-Cache */
2268:Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;                     /* invalidate I-Cache */
2269:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2270:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2271:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2272:Drivers/CMSIS/Include/core_cm7.h **** }
2273:Drivers/CMSIS/Include/core_cm7.h **** 
2274:Drivers/CMSIS/Include/core_cm7.h **** 
2275:Drivers/CMSIS/Include/core_cm7.h **** /**
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 56


2276:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Invalidate I-Cache
2277:Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates I-Cache
2278:Drivers/CMSIS/Include/core_cm7.h ****   */
2279:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_InvalidateICache (void)
2280:Drivers/CMSIS/Include/core_cm7.h **** {
2281:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2282:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2283:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2284:Drivers/CMSIS/Include/core_cm7.h ****     SCB->ICIALLU = 0UL;
2285:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2286:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2287:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2288:Drivers/CMSIS/Include/core_cm7.h **** }
2289:Drivers/CMSIS/Include/core_cm7.h **** 
2290:Drivers/CMSIS/Include/core_cm7.h **** 
2291:Drivers/CMSIS/Include/core_cm7.h **** /**
2292:Drivers/CMSIS/Include/core_cm7.h ****   \brief   I-Cache Invalidate by address
2293:Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates I-Cache for the given address.
2294:Drivers/CMSIS/Include/core_cm7.h ****            I-Cache is invalidated starting from a 32 byte aligned address in 32 byte granularity.
2295:Drivers/CMSIS/Include/core_cm7.h ****            I-Cache memory blocks which are part of given address + given size are invalidated.
2296:Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address
2297:Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   isize   size of memory block (in number of bytes)
2298:Drivers/CMSIS/Include/core_cm7.h **** */
2299:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_InvalidateICache_by_Addr (void *addr, int32_t isize)
2300:Drivers/CMSIS/Include/core_cm7.h **** {
2301:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__ICACHE_PRESENT) && (__ICACHE_PRESENT == 1U)
2302:Drivers/CMSIS/Include/core_cm7.h ****     if ( isize > 0 ) {
2303:Drivers/CMSIS/Include/core_cm7.h ****        int32_t op_size = isize + (((uint32_t)addr) & (__SCB_ICACHE_LINE_SIZE - 1U));
2304:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_ICACHE_LINE_SIZE - 1U) */;
2305:Drivers/CMSIS/Include/core_cm7.h **** 
2306:Drivers/CMSIS/Include/core_cm7.h ****       __DSB();
2307:Drivers/CMSIS/Include/core_cm7.h **** 
2308:Drivers/CMSIS/Include/core_cm7.h ****       do {
2309:Drivers/CMSIS/Include/core_cm7.h ****         SCB->ICIMVAU = op_addr;             /* register accepts only 32byte aligned values, only bi
2310:Drivers/CMSIS/Include/core_cm7.h ****         op_addr += __SCB_ICACHE_LINE_SIZE;
2311:Drivers/CMSIS/Include/core_cm7.h ****         op_size -= __SCB_ICACHE_LINE_SIZE;
2312:Drivers/CMSIS/Include/core_cm7.h ****       } while ( op_size > 0 );
2313:Drivers/CMSIS/Include/core_cm7.h **** 
2314:Drivers/CMSIS/Include/core_cm7.h ****       __DSB();
2315:Drivers/CMSIS/Include/core_cm7.h ****       __ISB();
2316:Drivers/CMSIS/Include/core_cm7.h ****     }
2317:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2318:Drivers/CMSIS/Include/core_cm7.h **** }
2319:Drivers/CMSIS/Include/core_cm7.h **** 
2320:Drivers/CMSIS/Include/core_cm7.h **** 
2321:Drivers/CMSIS/Include/core_cm7.h **** /**
2322:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Enable D-Cache
2323:Drivers/CMSIS/Include/core_cm7.h ****   \details Turns on D-Cache
2324:Drivers/CMSIS/Include/core_cm7.h ****   */
2325:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_EnableDCache (void)
2326:Drivers/CMSIS/Include/core_cm7.h **** {
2327:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2328:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2329:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2330:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2331:Drivers/CMSIS/Include/core_cm7.h **** 
2332:Drivers/CMSIS/Include/core_cm7.h ****     if (SCB->CCR & SCB_CCR_DC_Msk) return;  /* return if DCache is already enabled */
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 57


2333:Drivers/CMSIS/Include/core_cm7.h **** 
2334:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
2335:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2336:Drivers/CMSIS/Include/core_cm7.h **** 
2337:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2338:Drivers/CMSIS/Include/core_cm7.h **** 
2339:Drivers/CMSIS/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2340:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2341:Drivers/CMSIS/Include/core_cm7.h ****     do {
2342:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2343:Drivers/CMSIS/Include/core_cm7.h ****       do {
2344:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
2345:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
2346:Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2347:Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2348:Drivers/CMSIS/Include/core_cm7.h ****         #endif
2349:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2350:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2351:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2352:Drivers/CMSIS/Include/core_cm7.h **** 
2353:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR |=  (uint32_t)SCB_CCR_DC_Msk;  /* enable D-Cache */
2354:Drivers/CMSIS/Include/core_cm7.h **** 
2355:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2356:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2357:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2358:Drivers/CMSIS/Include/core_cm7.h **** }
2359:Drivers/CMSIS/Include/core_cm7.h **** 
2360:Drivers/CMSIS/Include/core_cm7.h **** 
2361:Drivers/CMSIS/Include/core_cm7.h **** /**
2362:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Disable D-Cache
2363:Drivers/CMSIS/Include/core_cm7.h ****   \details Turns off D-Cache
2364:Drivers/CMSIS/Include/core_cm7.h ****   */
2365:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_DisableDCache (void)
2366:Drivers/CMSIS/Include/core_cm7.h **** {
2367:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2368:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2369:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2370:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2371:Drivers/CMSIS/Include/core_cm7.h **** 
2372:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
2373:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2374:Drivers/CMSIS/Include/core_cm7.h **** 
2375:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CCR &= ~(uint32_t)SCB_CCR_DC_Msk;  /* disable D-Cache */
2376:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2377:Drivers/CMSIS/Include/core_cm7.h **** 
2378:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2379:Drivers/CMSIS/Include/core_cm7.h **** 
2380:Drivers/CMSIS/Include/core_cm7.h ****                                             /* clean & invalidate D-Cache */
2381:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2382:Drivers/CMSIS/Include/core_cm7.h ****     do {
2383:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2384:Drivers/CMSIS/Include/core_cm7.h ****       do {
2385:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
2386:Drivers/CMSIS/Include/core_cm7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
2387:Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2388:Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2389:Drivers/CMSIS/Include/core_cm7.h ****         #endif
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 58


2390:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2391:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2392:Drivers/CMSIS/Include/core_cm7.h **** 
2393:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2394:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2395:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2396:Drivers/CMSIS/Include/core_cm7.h **** }
2397:Drivers/CMSIS/Include/core_cm7.h **** 
2398:Drivers/CMSIS/Include/core_cm7.h **** 
2399:Drivers/CMSIS/Include/core_cm7.h **** /**
2400:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Invalidate D-Cache
2401:Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates D-Cache
2402:Drivers/CMSIS/Include/core_cm7.h ****   */
2403:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_InvalidateDCache (void)
2404:Drivers/CMSIS/Include/core_cm7.h **** {
2405:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2406:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2407:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2408:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2409:Drivers/CMSIS/Include/core_cm7.h **** 
2410:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
2411:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2412:Drivers/CMSIS/Include/core_cm7.h **** 
2413:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2414:Drivers/CMSIS/Include/core_cm7.h **** 
2415:Drivers/CMSIS/Include/core_cm7.h ****                                             /* invalidate D-Cache */
2416:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2417:Drivers/CMSIS/Include/core_cm7.h ****     do {
2418:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2419:Drivers/CMSIS/Include/core_cm7.h ****       do {
2420:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCISW = (((sets << SCB_DCISW_SET_Pos) & SCB_DCISW_SET_Msk) |
2421:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCISW_WAY_Pos) & SCB_DCISW_WAY_Msk)  );
2422:Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2423:Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2424:Drivers/CMSIS/Include/core_cm7.h ****         #endif
2425:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2426:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2427:Drivers/CMSIS/Include/core_cm7.h **** 
2428:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2429:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2430:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2431:Drivers/CMSIS/Include/core_cm7.h **** }
2432:Drivers/CMSIS/Include/core_cm7.h **** 
2433:Drivers/CMSIS/Include/core_cm7.h **** 
2434:Drivers/CMSIS/Include/core_cm7.h **** /**
2435:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clean D-Cache
2436:Drivers/CMSIS/Include/core_cm7.h ****   \details Cleans D-Cache
2437:Drivers/CMSIS/Include/core_cm7.h ****   */
2438:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_CleanDCache (void)
2439:Drivers/CMSIS/Include/core_cm7.h **** {
2440:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2441:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2442:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2443:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2444:Drivers/CMSIS/Include/core_cm7.h **** 
2445:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
2446:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 59


2447:Drivers/CMSIS/Include/core_cm7.h **** 
2448:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2449:Drivers/CMSIS/Include/core_cm7.h **** 
2450:Drivers/CMSIS/Include/core_cm7.h ****                                             /* clean D-Cache */
2451:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2452:Drivers/CMSIS/Include/core_cm7.h ****     do {
2453:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2454:Drivers/CMSIS/Include/core_cm7.h ****       do {
2455:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCSW = (((sets << SCB_DCCSW_SET_Pos) & SCB_DCCSW_SET_Msk) |
2456:Drivers/CMSIS/Include/core_cm7.h ****                       ((ways << SCB_DCCSW_WAY_Pos) & SCB_DCCSW_WAY_Msk)  );
2457:Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2458:Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2459:Drivers/CMSIS/Include/core_cm7.h ****         #endif
2460:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2461:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2462:Drivers/CMSIS/Include/core_cm7.h **** 
2463:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2464:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2465:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2466:Drivers/CMSIS/Include/core_cm7.h **** }
2467:Drivers/CMSIS/Include/core_cm7.h **** 
2468:Drivers/CMSIS/Include/core_cm7.h **** 
2469:Drivers/CMSIS/Include/core_cm7.h **** /**
2470:Drivers/CMSIS/Include/core_cm7.h ****   \brief   Clean & Invalidate D-Cache
2471:Drivers/CMSIS/Include/core_cm7.h ****   \details Cleans and Invalidates D-Cache
2472:Drivers/CMSIS/Include/core_cm7.h ****   */
2473:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_CleanInvalidateDCache (void)
2474:Drivers/CMSIS/Include/core_cm7.h **** {
2475:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2476:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ccsidr;
2477:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t sets;
2478:Drivers/CMSIS/Include/core_cm7.h ****     uint32_t ways;
2479:Drivers/CMSIS/Include/core_cm7.h **** 
2480:Drivers/CMSIS/Include/core_cm7.h ****     SCB->CSSELR = 0U;                       /* select Level 1 data cache */
2481:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2482:Drivers/CMSIS/Include/core_cm7.h **** 
2483:Drivers/CMSIS/Include/core_cm7.h ****     ccsidr = SCB->CCSIDR;
2484:Drivers/CMSIS/Include/core_cm7.h **** 
2485:Drivers/CMSIS/Include/core_cm7.h ****                                             /* clean & invalidate D-Cache */
2486:Drivers/CMSIS/Include/core_cm7.h ****     sets = (uint32_t)(CCSIDR_SETS(ccsidr));
2487:Drivers/CMSIS/Include/core_cm7.h ****     do {
2488:Drivers/CMSIS/Include/core_cm7.h ****       ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
2489:Drivers/CMSIS/Include/core_cm7.h ****       do {
2490:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
2491:Drivers/CMSIS/Include/core_cm7.h ****                        ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
2492:Drivers/CMSIS/Include/core_cm7.h ****         #if defined ( __CC_ARM )
2493:Drivers/CMSIS/Include/core_cm7.h ****           __schedule_barrier();
2494:Drivers/CMSIS/Include/core_cm7.h ****         #endif
2495:Drivers/CMSIS/Include/core_cm7.h ****       } while (ways-- != 0U);
2496:Drivers/CMSIS/Include/core_cm7.h ****     } while(sets-- != 0U);
2497:Drivers/CMSIS/Include/core_cm7.h **** 
2498:Drivers/CMSIS/Include/core_cm7.h ****     __DSB();
2499:Drivers/CMSIS/Include/core_cm7.h ****     __ISB();
2500:Drivers/CMSIS/Include/core_cm7.h ****   #endif
2501:Drivers/CMSIS/Include/core_cm7.h **** }
2502:Drivers/CMSIS/Include/core_cm7.h **** 
2503:Drivers/CMSIS/Include/core_cm7.h **** 
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 60


2504:Drivers/CMSIS/Include/core_cm7.h **** /**
2505:Drivers/CMSIS/Include/core_cm7.h ****   \brief   D-Cache Invalidate by address
2506:Drivers/CMSIS/Include/core_cm7.h ****   \details Invalidates D-Cache for the given address.
2507:Drivers/CMSIS/Include/core_cm7.h ****            D-Cache is invalidated starting from a 32 byte aligned address in 32 byte granularity.
2508:Drivers/CMSIS/Include/core_cm7.h ****            D-Cache memory blocks which are part of given address + given size are invalidated.
2509:Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   addr    address
2510:Drivers/CMSIS/Include/core_cm7.h ****   \param[in]   dsize   size of memory block (in number of bytes)
2511:Drivers/CMSIS/Include/core_cm7.h **** */
2512:Drivers/CMSIS/Include/core_cm7.h **** __STATIC_FORCEINLINE void SCB_InvalidateDCache_by_Addr (void *addr, int32_t dsize)
 143              		.loc 2 2512 27 is_stmt 1 view .LVU33
 144              	.LBB19:
2513:Drivers/CMSIS/Include/core_cm7.h **** {
2514:Drivers/CMSIS/Include/core_cm7.h ****   #if defined (__DCACHE_PRESENT) && (__DCACHE_PRESENT == 1U)
2515:Drivers/CMSIS/Include/core_cm7.h ****     if ( dsize > 0 ) { 
 145              		.loc 2 2515 5 view .LVU34
 146              		.loc 2 2515 8 is_stmt 0 view .LVU35
 147 0054 002B     		cmp	r3, #0
 148 0056 10DD     		ble	.L6
 149              	.LBB20:
2516:Drivers/CMSIS/Include/core_cm7.h ****        int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 150              		.loc 2 2516 8 is_stmt 1 view .LVU36
 151              		.loc 2 2516 36 is_stmt 0 view .LVU37
 152 0058 0A46     		mov	r2, r1
 153              		.loc 2 2516 52 view .LVU38
 154 005a 01F01F01 		and	r1, r1, #31
 155              	.LVL14:
 156              		.loc 2 2516 32 view .LVU39
 157 005e 0B44     		add	r3, r3, r1
 158              	.LVL15:
2517:Drivers/CMSIS/Include/core_cm7.h ****       uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 159              		.loc 2 2517 7 is_stmt 1 view .LVU40
2518:Drivers/CMSIS/Include/core_cm7.h ****     
2519:Drivers/CMSIS/Include/core_cm7.h ****       __DSB();
 160              		.loc 2 2519 7 view .LVU41
 161              	.LBB21:
 162              	.LBI21:
 163              		.file 3 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 61


  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 62


  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 63


 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 64


 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 65


 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 66


 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 67


 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 68


 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 69


 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 70


 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 71


 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 72


 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 73


 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 74


 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 75


 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 76


 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 77


 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 164              		.loc 3 944 27 view .LVU42
 165              	.LBB22:
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 166              		.loc 3 946 3 view .LVU43
 167              		.syntax unified
 168              	@ 946 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 169 0060 BFF34F8F 		dsb 0xF
 170              	@ 0 "" 2
 171              	.LVL16:
 172              		.thumb
 173              		.syntax unified
 174              	.L7:
 175              		.loc 3 946 3 is_stmt 0 view .LVU44
 176              	.LBE22:
 177              	.LBE21:
2520:Drivers/CMSIS/Include/core_cm7.h **** 
2521:Drivers/CMSIS/Include/core_cm7.h ****       do {
 178              		.loc 2 2521 7 is_stmt 1 view .LVU45
2522:Drivers/CMSIS/Include/core_cm7.h ****         SCB->DCIMVAC = op_addr;             /* register accepts only 32byte aligned values, only bi
 179              		.loc 2 2522 9 view .LVU46
 180              		.loc 2 2522 22 is_stmt 0 view .LVU47
 181 0064 1049     		ldr	r1, .L10+4
 182 0066 C1F85C22 		str	r2, [r1, #604]
2523:Drivers/CMSIS/Include/core_cm7.h ****         op_addr += __SCB_DCACHE_LINE_SIZE;
 183              		.loc 2 2523 9 is_stmt 1 view .LVU48
 184              		.loc 2 2523 17 is_stmt 0 view .LVU49
 185 006a 2032     		adds	r2, r2, #32
 186              	.LVL17:
2524:Drivers/CMSIS/Include/core_cm7.h ****         op_size -= __SCB_DCACHE_LINE_SIZE;
 187              		.loc 2 2524 9 is_stmt 1 view .LVU50
 188              		.loc 2 2524 17 is_stmt 0 view .LVU51
 189 006c 203B     		subs	r3, r3, #32
 190              	.LVL18:
2525:Drivers/CMSIS/Include/core_cm7.h ****       } while ( op_size > 0 );
 191              		.loc 2 2525 15 is_stmt 1 view .LVU52
 192              		.loc 2 2525 7 is_stmt 0 view .LVU53
 193 006e 002B     		cmp	r3, #0
 194 0070 F8DC     		bgt	.L7
2526:Drivers/CMSIS/Include/core_cm7.h **** 
2527:Drivers/CMSIS/Include/core_cm7.h ****       __DSB();
 195              		.loc 2 2527 7 is_stmt 1 view .LVU54
 196              	.LBB23:
 197              	.LBI23:
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 78


 198              		.loc 3 944 27 view .LVU55
 199              	.LBB24:
 200              		.loc 3 946 3 view .LVU56
 201              		.syntax unified
 202              	@ 946 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 203 0072 BFF34F8F 		dsb 0xF
 204              	@ 0 "" 2
 205              		.thumb
 206              		.syntax unified
 207              	.LBE24:
 208              	.LBE23:
2528:Drivers/CMSIS/Include/core_cm7.h ****       __ISB();
 209              		.loc 2 2528 7 view .LVU57
 210              	.LBB25:
 211              	.LBI25:
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 212              		.loc 3 933 27 view .LVU58
 213              	.LBB26:
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 214              		.loc 3 935 3 view .LVU59
 215              		.syntax unified
 216              	@ 935 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 217 0076 BFF36F8F 		isb 0xF
 218              	@ 0 "" 2
 219              	.LVL19:
 220              		.thumb
 221              		.syntax unified
 222              	.L6:
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 223              		.loc 3 935 3 is_stmt 0 view .LVU60
 224              	.LBE26:
 225              	.LBE25:
 226              	.LBE20:
 227              	.LBE19:
 228              	.LBE18:
 507:LWIP/Target/ethernetif.c ****     if(custom_pbuf != NULL)
 229              		.loc 1 507 5 is_stmt 1 view .LVU61
 507:LWIP/Target/ethernetif.c ****     if(custom_pbuf != NULL)
 230              		.loc 1 507 41 is_stmt 0 view .LVU62
 231 007a 0C48     		ldr	r0, .L10+8
 232 007c FFF7FEFF 		bl	memp_malloc_pool
 233              	.LVL20:
 508:LWIP/Target/ethernetif.c ****     {
 234              		.loc 1 508 5 is_stmt 1 view .LVU63
 508:LWIP/Target/ethernetif.c ****     {
 235              		.loc 1 508 7 is_stmt 0 view .LVU64
 236 0080 68B1     		cbz	r0, .L2
 510:LWIP/Target/ethernetif.c ****       p = pbuf_alloced_custom(PBUF_RAW, framelength, PBUF_REF, custom_pbuf, RxBuff->buffer, framele
 237              		.loc 1 510 7 is_stmt 1 view .LVU65
 510:LWIP/Target/ethernetif.c ****       p = pbuf_alloced_custom(PBUF_RAW, framelength, PBUF_REF, custom_pbuf, RxBuff->buffer, framele
 238              		.loc 1 510 41 is_stmt 0 view .LVU66
 239 0082 0B4B     		ldr	r3, .L10+12
 240 0084 0361     		str	r3, [r0, #16]
 511:LWIP/Target/ethernetif.c ****     }
 241              		.loc 1 511 7 is_stmt 1 view .LVU67
 511:LWIP/Target/ethernetif.c ****     }
 242              		.loc 1 511 11 is_stmt 0 view .LVU68
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 79


 243 0086 BDF80C10 		ldrh	r1, [sp, #12]
 244 008a 0191     		str	r1, [sp, #4]
 245 008c 049B     		ldr	r3, [sp, #16]
 246 008e 0093     		str	r3, [sp]
 247 0090 0346     		mov	r3, r0
 248 0092 4122     		movs	r2, #65
 249 0094 0020     		movs	r0, #0
 250              	.LVL21:
 511:LWIP/Target/ethernetif.c ****     }
 251              		.loc 1 511 11 view .LVU69
 252 0096 FFF7FEFF 		bl	pbuf_alloced_custom
 253              	.LVL22:
 511:LWIP/Target/ethernetif.c ****     }
 254              		.loc 1 511 11 view .LVU70
 255 009a 00E0     		b	.L2
 256              	.LVL23:
 257              	.L8:
 483:LWIP/Target/ethernetif.c ****   ETH_BufferTypeDef RxBuff[ETH_RX_DESC_CNT];
 258              		.loc 1 483 16 view .LVU71
 259 009c 0020     		movs	r0, #0
 515:LWIP/Target/ethernetif.c **** }
 260              		.loc 1 515 3 is_stmt 1 view .LVU72
 261              	.LVL24:
 262              	.L2:
 516:LWIP/Target/ethernetif.c **** 
 263              		.loc 1 516 1 is_stmt 0 view .LVU73
 264 009e 10B0     		add	sp, sp, #64
 265              	.LCFI2:
 266              		.cfi_def_cfa_offset 8
 267              		@ sp needed
 268 00a0 10BD     		pop	{r4, pc}
 269              	.L11:
 270 00a2 00BF     		.align	2
 271              	.L10:
 272 00a4 00000000 		.word	.LANCHOR0
 273 00a8 00ED00E0 		.word	-536810240
 274 00ac 00000000 		.word	.LANCHOR1
 275 00b0 00000000 		.word	pbuf_free_custom
 276              		.cfi_endproc
 277              	.LFE369:
 279              		.section	.text.ethernetif_input,"ax",%progbits
 280              		.align	1
 281              		.global	ethernetif_input
 282              		.syntax unified
 283              		.thumb
 284              		.thumb_func
 286              	ethernetif_input:
 287              	.LVL25:
 288              	.LFB370:
 528:LWIP/Target/ethernetif.c ****   struct pbuf *p;
 289              		.loc 1 528 1 is_stmt 1 view -0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 528:LWIP/Target/ethernetif.c ****   struct pbuf *p;
 293              		.loc 1 528 1 is_stmt 0 view .LVU75
 294 0000 38B5     		push	{r3, r4, r5, lr}
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 80


 295              	.LCFI3:
 296              		.cfi_def_cfa_offset 16
 297              		.cfi_offset 3, -16
 298              		.cfi_offset 4, -12
 299              		.cfi_offset 5, -8
 300              		.cfi_offset 14, -4
 301 0002 0546     		mov	r5, r0
 529:LWIP/Target/ethernetif.c ****   struct netif *netif = (struct netif *) argument;
 302              		.loc 1 529 3 is_stmt 1 view .LVU76
 530:LWIP/Target/ethernetif.c **** 
 303              		.loc 1 530 3 view .LVU77
 304              	.LVL26:
 305              	.L13:
 532:LWIP/Target/ethernetif.c ****   {
 306              		.loc 1 532 3 view .LVU78
 534:LWIP/Target/ethernetif.c ****     {
 307              		.loc 1 534 5 view .LVU79
 534:LWIP/Target/ethernetif.c ****     {
 308              		.loc 1 534 9 is_stmt 0 view .LVU80
 309 0004 4FF0FF31 		mov	r1, #-1
 310 0008 0B4B     		ldr	r3, .L18
 311 000a 1868     		ldr	r0, [r3]
 312 000c FFF7FEFF 		bl	osSemaphoreWait
 313              	.LVL27:
 534:LWIP/Target/ethernetif.c ****     {
 314              		.loc 1 534 8 view .LVU81
 315 0010 0028     		cmp	r0, #0
 316 0012 F7D1     		bne	.L13
 317 0014 01E0     		b	.L15
 318              	.LVL28:
 319              	.L14:
 546:LWIP/Target/ethernetif.c ****     }
 320              		.loc 1 546 14 is_stmt 1 view .LVU82
 546:LWIP/Target/ethernetif.c ****     }
 321              		.loc 1 546 7 is_stmt 0 view .LVU83
 322 0016 002C     		cmp	r4, #0
 323 0018 F4D0     		beq	.L13
 324              	.LVL29:
 325              	.L15:
 536:LWIP/Target/ethernetif.c ****       {
 326              		.loc 1 536 7 is_stmt 1 view .LVU84
 538:LWIP/Target/ethernetif.c ****         if (p != NULL)
 327              		.loc 1 538 9 view .LVU85
 538:LWIP/Target/ethernetif.c ****         if (p != NULL)
 328              		.loc 1 538 13 is_stmt 0 view .LVU86
 329 001a 2846     		mov	r0, r5
 330 001c FFF7FEFF 		bl	low_level_input
 331              	.LVL30:
 539:LWIP/Target/ethernetif.c ****         {
 332              		.loc 1 539 9 is_stmt 1 view .LVU87
 539:LWIP/Target/ethernetif.c ****         {
 333              		.loc 1 539 12 is_stmt 0 view .LVU88
 334 0020 0446     		mov	r4, r0
 335 0022 0028     		cmp	r0, #0
 336 0024 F7D0     		beq	.L14
 541:LWIP/Target/ethernetif.c ****           {
 337              		.loc 1 541 11 is_stmt 1 view .LVU89
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 81


 541:LWIP/Target/ethernetif.c ****           {
 338              		.loc 1 541 20 is_stmt 0 view .LVU90
 339 0026 2B69     		ldr	r3, [r5, #16]
 541:LWIP/Target/ethernetif.c ****           {
 340              		.loc 1 541 15 view .LVU91
 341 0028 2946     		mov	r1, r5
 342 002a 9847     		blx	r3
 343              	.LVL31:
 541:LWIP/Target/ethernetif.c ****           {
 344              		.loc 1 541 14 view .LVU92
 345 002c 0028     		cmp	r0, #0
 346 002e F2D0     		beq	.L14
 543:LWIP/Target/ethernetif.c ****           }
 347              		.loc 1 543 13 is_stmt 1 view .LVU93
 348 0030 2046     		mov	r0, r4
 349 0032 FFF7FEFF 		bl	pbuf_free
 350              	.LVL32:
 351 0036 EEE7     		b	.L14
 352              	.L19:
 353              		.align	2
 354              	.L18:
 355 0038 00000000 		.word	.LANCHOR2
 356              		.cfi_endproc
 357              	.LFE370:
 359              		.section	.text.low_level_output,"ax",%progbits
 360              		.align	1
 361              		.syntax unified
 362              		.thumb
 363              		.thumb_func
 365              	low_level_output:
 366              	.LVL33:
 367              	.LFB368:
 436:LWIP/Target/ethernetif.c ****   uint32_t i=0;
 368              		.loc 1 436 1 view -0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 48
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 436:LWIP/Target/ethernetif.c ****   uint32_t i=0;
 372              		.loc 1 436 1 is_stmt 0 view .LVU95
 373 0000 10B5     		push	{r4, lr}
 374              	.LCFI4:
 375              		.cfi_def_cfa_offset 8
 376              		.cfi_offset 4, -8
 377              		.cfi_offset 14, -4
 378 0002 8CB0     		sub	sp, sp, #48
 379              	.LCFI5:
 380              		.cfi_def_cfa_offset 56
 381 0004 0C46     		mov	r4, r1
 437:LWIP/Target/ethernetif.c ****   struct pbuf *q;
 382              		.loc 1 437 3 is_stmt 1 view .LVU96
 383              	.LVL34:
 438:LWIP/Target/ethernetif.c ****   err_t errval = ERR_OK;
 384              		.loc 1 438 3 view .LVU97
 439:LWIP/Target/ethernetif.c ****   ETH_BufferTypeDef Txbuffer[ETH_TX_DESC_CNT];
 385              		.loc 1 439 3 view .LVU98
 440:LWIP/Target/ethernetif.c **** 
 386              		.loc 1 440 3 view .LVU99
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 82


 442:LWIP/Target/ethernetif.c **** 
 387              		.loc 1 442 3 view .LVU100
 388 0006 3022     		movs	r2, #48
 389 0008 0021     		movs	r1, #0
 390              	.LVL35:
 442:LWIP/Target/ethernetif.c **** 
 391              		.loc 1 442 3 is_stmt 0 view .LVU101
 392 000a 6846     		mov	r0, sp
 393              	.LVL36:
 442:LWIP/Target/ethernetif.c **** 
 394              		.loc 1 442 3 view .LVU102
 395 000c FFF7FEFF 		bl	memset
 396              	.LVL37:
 444:LWIP/Target/ethernetif.c ****   {
 397              		.loc 1 444 3 is_stmt 1 view .LVU103
 444:LWIP/Target/ethernetif.c ****   {
 398              		.loc 1 444 9 is_stmt 0 view .LVU104
 399 0010 2246     		mov	r2, r4
 437:LWIP/Target/ethernetif.c ****   struct pbuf *q;
 400              		.loc 1 437 12 view .LVU105
 401 0012 0023     		movs	r3, #0
 444:LWIP/Target/ethernetif.c ****   {
 402              		.loc 1 444 3 view .LVU106
 403 0014 03E0     		b	.L21
 404              	.LVL38:
 405              	.L23:
 457:LWIP/Target/ethernetif.c ****     {
 406              		.loc 1 457 5 is_stmt 1 view .LVU107
 457:LWIP/Target/ethernetif.c ****     {
 407              		.loc 1 457 9 is_stmt 0 view .LVU108
 408 0016 1168     		ldr	r1, [r2]
 457:LWIP/Target/ethernetif.c ****     {
 409              		.loc 1 457 7 view .LVU109
 410 0018 F1B1     		cbz	r1, .L28
 411              	.L24:
 462:LWIP/Target/ethernetif.c ****   }
 412              		.loc 1 462 5 is_stmt 1 discriminator 2 view .LVU110
 462:LWIP/Target/ethernetif.c ****   }
 413              		.loc 1 462 6 is_stmt 0 discriminator 2 view .LVU111
 414 001a 0133     		adds	r3, r3, #1
 415              	.LVL39:
 444:LWIP/Target/ethernetif.c ****   {
 416              		.loc 1 444 25 is_stmt 1 discriminator 2 view .LVU112
 444:LWIP/Target/ethernetif.c ****   {
 417              		.loc 1 444 27 is_stmt 0 discriminator 2 view .LVU113
 418 001c 1268     		ldr	r2, [r2]
 419              	.LVL40:
 420              	.L21:
 444:LWIP/Target/ethernetif.c ****   {
 421              		.loc 1 444 14 is_stmt 1 discriminator 1 view .LVU114
 444:LWIP/Target/ethernetif.c ****   {
 422              		.loc 1 444 3 is_stmt 0 discriminator 1 view .LVU115
 423 001e 22B3     		cbz	r2, .L29
 446:LWIP/Target/ethernetif.c ****       return ERR_IF;
 424              		.loc 1 446 5 is_stmt 1 view .LVU116
 446:LWIP/Target/ethernetif.c ****       return ERR_IF;
 425              		.loc 1 446 7 is_stmt 0 view .LVU117
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 83


 426 0020 032B     		cmp	r3, #3
 427 0022 2DD8     		bhi	.L26
 449:LWIP/Target/ethernetif.c ****     Txbuffer[i].len = q->len;
 428              		.loc 1 449 5 is_stmt 1 view .LVU118
 449:LWIP/Target/ethernetif.c ****     Txbuffer[i].len = q->len;
 429              		.loc 1 449 27 is_stmt 0 view .LVU119
 430 0024 5168     		ldr	r1, [r2, #4]
 449:LWIP/Target/ethernetif.c ****     Txbuffer[i].len = q->len;
 431              		.loc 1 449 24 view .LVU120
 432 0026 03EB4300 		add	r0, r3, r3, lsl #1
 433 002a 0DF1300C 		add	ip, sp, #48
 434 002e 0CEB8000 		add	r0, ip, r0, lsl #2
 435 0032 40F8301C 		str	r1, [r0, #-48]
 450:LWIP/Target/ethernetif.c **** 
 436              		.loc 1 450 5 is_stmt 1 view .LVU121
 450:LWIP/Target/ethernetif.c **** 
 437              		.loc 1 450 24 is_stmt 0 view .LVU122
 438 0036 5189     		ldrh	r1, [r2, #10]
 450:LWIP/Target/ethernetif.c **** 
 439              		.loc 1 450 21 view .LVU123
 440 0038 40F82C1C 		str	r1, [r0, #-44]
 452:LWIP/Target/ethernetif.c ****     {
 441              		.loc 1 452 5 is_stmt 1 view .LVU124
 452:LWIP/Target/ethernetif.c ****     {
 442              		.loc 1 452 7 is_stmt 0 view .LVU125
 443 003c 002B     		cmp	r3, #0
 444 003e EAD0     		beq	.L23
 454:LWIP/Target/ethernetif.c ****     }
 445              		.loc 1 454 7 is_stmt 1 view .LVU126
 454:LWIP/Target/ethernetif.c ****     }
 446              		.loc 1 454 17 is_stmt 0 view .LVU127
 447 0040 581E     		subs	r0, r3, #1
 454:LWIP/Target/ethernetif.c ****     }
 448              		.loc 1 454 28 view .LVU128
 449 0042 03EB4301 		add	r1, r3, r3, lsl #1
 450 0046 0DEB8101 		add	r1, sp, r1, lsl #2
 454:LWIP/Target/ethernetif.c ****     }
 451              		.loc 1 454 26 view .LVU129
 452 004a 00EB4000 		add	r0, r0, r0, lsl #1
 453 004e 0CEB8000 		add	r0, ip, r0, lsl #2
 454 0052 40F8281C 		str	r1, [r0, #-40]
 455 0056 DEE7     		b	.L23
 456              	.L28:
 459:LWIP/Target/ethernetif.c ****     }
 457              		.loc 1 459 7 is_stmt 1 view .LVU130
 459:LWIP/Target/ethernetif.c ****     }
 458              		.loc 1 459 24 is_stmt 0 view .LVU131
 459 0058 03EB4301 		add	r1, r3, r3, lsl #1
 460 005c 0CA8     		add	r0, sp, #48
 461 005e 00EB8101 		add	r1, r0, r1, lsl #2
 462 0062 0020     		movs	r0, #0
 463 0064 41F8280C 		str	r0, [r1, #-40]
 464 0068 D7E7     		b	.L24
 465              	.L29:
 465:LWIP/Target/ethernetif.c ****   TxConfig.TxBuffer = Txbuffer;
 466              		.loc 1 465 3 is_stmt 1 view .LVU132
 465:LWIP/Target/ethernetif.c ****   TxConfig.TxBuffer = Txbuffer;
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 84


 467              		.loc 1 465 23 is_stmt 0 view .LVU133
 468 006a 2389     		ldrh	r3, [r4, #8]
 469              	.LVL41:
 465:LWIP/Target/ethernetif.c ****   TxConfig.TxBuffer = Txbuffer;
 470              		.loc 1 465 19 view .LVU134
 471 006c 0649     		ldr	r1, .L30
 472 006e 4B60     		str	r3, [r1, #4]
 466:LWIP/Target/ethernetif.c **** 
 473              		.loc 1 466 3 is_stmt 1 view .LVU135
 466:LWIP/Target/ethernetif.c **** 
 474              		.loc 1 466 21 is_stmt 0 view .LVU136
 475 0070 C1F808D0 		str	sp, [r1, #8]
 468:LWIP/Target/ethernetif.c **** 
 476              		.loc 1 468 3 is_stmt 1 view .LVU137
 477 0074 1422     		movs	r2, #20
 478              	.LVL42:
 468:LWIP/Target/ethernetif.c **** 
 479              		.loc 1 468 3 is_stmt 0 view .LVU138
 480 0076 0548     		ldr	r0, .L30+4
 481 0078 FFF7FEFF 		bl	HAL_ETH_Transmit
 482              	.LVL43:
 470:LWIP/Target/ethernetif.c **** }
 483              		.loc 1 470 3 is_stmt 1 view .LVU139
 470:LWIP/Target/ethernetif.c **** }
 484              		.loc 1 470 10 is_stmt 0 view .LVU140
 485 007c 0020     		movs	r0, #0
 486 007e 01E0     		b	.L22
 487              	.LVL44:
 488              	.L26:
 447:LWIP/Target/ethernetif.c **** 
 489              		.loc 1 447 14 view .LVU141
 490 0080 6FF00B00 		mvn	r0, #11
 491              	.LVL45:
 492              	.L22:
 471:LWIP/Target/ethernetif.c **** 
 493              		.loc 1 471 1 view .LVU142
 494 0084 0CB0     		add	sp, sp, #48
 495              	.LCFI6:
 496              		.cfi_def_cfa_offset 8
 497              		@ sp needed
 498 0086 10BD     		pop	{r4, pc}
 499              	.LVL46:
 500              	.L31:
 471:LWIP/Target/ethernetif.c **** 
 501              		.loc 1 471 1 view .LVU143
 502              		.align	2
 503              	.L30:
 504 0088 00000000 		.word	.LANCHOR3
 505 008c 00000000 		.word	.LANCHOR0
 506              		.cfi_endproc
 507              	.LFE368:
 509              		.section	.text.low_level_init,"ax",%progbits
 510              		.align	1
 511              		.syntax unified
 512              		.thumb
 513              		.thumb_func
 515              	low_level_init:
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 85


 516              	.LVL47:
 517              	.LFB367:
 271:LWIP/Target/ethernetif.c ****   HAL_StatusTypeDef hal_eth_init_status = HAL_OK;
 518              		.loc 1 271 1 is_stmt 1 view -0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 144
 521              		@ frame_needed = 0, uses_anonymous_args = 0
 271:LWIP/Target/ethernetif.c ****   HAL_StatusTypeDef hal_eth_init_status = HAL_OK;
 522              		.loc 1 271 1 is_stmt 0 view .LVU145
 523 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 524              	.LCFI7:
 525              		.cfi_def_cfa_offset 24
 526              		.cfi_offset 4, -24
 527              		.cfi_offset 5, -20
 528              		.cfi_offset 6, -16
 529              		.cfi_offset 7, -12
 530              		.cfi_offset 8, -8
 531              		.cfi_offset 14, -4
 532 0004 A4B0     		sub	sp, sp, #144
 533              	.LCFI8:
 534              		.cfi_def_cfa_offset 168
 535 0006 0546     		mov	r5, r0
 272:LWIP/Target/ethernetif.c ****   uint32_t idx = 0;
 536              		.loc 1 272 3 is_stmt 1 view .LVU146
 537              	.LVL48:
 273:LWIP/Target/ethernetif.c ****   ETH_MACConfigTypeDef MACConf;
 538              		.loc 1 273 3 view .LVU147
 274:LWIP/Target/ethernetif.c ****   int32_t PHYLinkState;
 539              		.loc 1 274 3 view .LVU148
 275:LWIP/Target/ethernetif.c ****   uint32_t duplex, speed = 0;
 540              		.loc 1 275 3 view .LVU149
 276:LWIP/Target/ethernetif.c ****   /* Start ETH HAL Init */
 541              		.loc 1 276 3 view .LVU150
 279:LWIP/Target/ethernetif.c ****   heth.Instance = ETH;
 542              		.loc 1 279 4 view .LVU151
 280:LWIP/Target/ethernetif.c ****   MACAddr[0] = 0x00;
 543              		.loc 1 280 3 view .LVU152
 280:LWIP/Target/ethernetif.c ****   MACAddr[0] = 0x00;
 544              		.loc 1 280 17 is_stmt 0 view .LVU153
 545 0008 5B4E     		ldr	r6, .L45
 546 000a 5C4B     		ldr	r3, .L45+4
 547 000c 3360     		str	r3, [r6]
 281:LWIP/Target/ethernetif.c ****   MACAddr[1] = 0x80;
 548              		.loc 1 281 3 is_stmt 1 view .LVU154
 281:LWIP/Target/ethernetif.c ****   MACAddr[1] = 0x80;
 549              		.loc 1 281 14 is_stmt 0 view .LVU155
 550 000e 0024     		movs	r4, #0
 551 0010 8DF82440 		strb	r4, [sp, #36]
 282:LWIP/Target/ethernetif.c ****   MACAddr[2] = 0xE1;
 552              		.loc 1 282 3 is_stmt 1 view .LVU156
 282:LWIP/Target/ethernetif.c ****   MACAddr[2] = 0xE1;
 553              		.loc 1 282 14 is_stmt 0 view .LVU157
 554 0014 8023     		movs	r3, #128
 555 0016 8DF82530 		strb	r3, [sp, #37]
 283:LWIP/Target/ethernetif.c ****   MACAddr[3] = 0x00;
 556              		.loc 1 283 3 is_stmt 1 view .LVU158
 283:LWIP/Target/ethernetif.c ****   MACAddr[3] = 0x00;
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 86


 557              		.loc 1 283 14 is_stmt 0 view .LVU159
 558 001a E123     		movs	r3, #225
 559 001c 8DF82630 		strb	r3, [sp, #38]
 284:LWIP/Target/ethernetif.c ****   MACAddr[4] = 0x00;
 560              		.loc 1 284 3 is_stmt 1 view .LVU160
 284:LWIP/Target/ethernetif.c ****   MACAddr[4] = 0x00;
 561              		.loc 1 284 14 is_stmt 0 view .LVU161
 562 0020 8DF82740 		strb	r4, [sp, #39]
 285:LWIP/Target/ethernetif.c ****   MACAddr[5] = 0x00;
 563              		.loc 1 285 3 is_stmt 1 view .LVU162
 285:LWIP/Target/ethernetif.c ****   MACAddr[5] = 0x00;
 564              		.loc 1 285 14 is_stmt 0 view .LVU163
 565 0024 8DF82840 		strb	r4, [sp, #40]
 286:LWIP/Target/ethernetif.c ****   heth.Init.MACAddr = &MACAddr[0];
 566              		.loc 1 286 3 is_stmt 1 view .LVU164
 286:LWIP/Target/ethernetif.c ****   heth.Init.MACAddr = &MACAddr[0];
 567              		.loc 1 286 14 is_stmt 0 view .LVU165
 568 0028 8DF82940 		strb	r4, [sp, #41]
 287:LWIP/Target/ethernetif.c ****   heth.Init.MediaInterface = HAL_ETH_RMII_MODE;
 569              		.loc 1 287 3 is_stmt 1 view .LVU166
 287:LWIP/Target/ethernetif.c ****   heth.Init.MediaInterface = HAL_ETH_RMII_MODE;
 570              		.loc 1 287 21 is_stmt 0 view .LVU167
 571 002c 09AB     		add	r3, sp, #36
 572 002e 7360     		str	r3, [r6, #4]
 288:LWIP/Target/ethernetif.c ****   heth.Init.TxDesc = DMATxDscrTab;
 573              		.loc 1 288 3 is_stmt 1 view .LVU168
 288:LWIP/Target/ethernetif.c ****   heth.Init.TxDesc = DMATxDscrTab;
 574              		.loc 1 288 28 is_stmt 0 view .LVU169
 575 0030 0123     		movs	r3, #1
 576 0032 3372     		strb	r3, [r6, #8]
 289:LWIP/Target/ethernetif.c ****   heth.Init.RxDesc = DMARxDscrTab;
 577              		.loc 1 289 3 is_stmt 1 view .LVU170
 289:LWIP/Target/ethernetif.c ****   heth.Init.RxDesc = DMARxDscrTab;
 578              		.loc 1 289 20 is_stmt 0 view .LVU171
 579 0034 524B     		ldr	r3, .L45+8
 580 0036 F360     		str	r3, [r6, #12]
 290:LWIP/Target/ethernetif.c ****   heth.Init.RxBuffLen = 1524;
 581              		.loc 1 290 3 is_stmt 1 view .LVU172
 290:LWIP/Target/ethernetif.c ****   heth.Init.RxBuffLen = 1524;
 582              		.loc 1 290 20 is_stmt 0 view .LVU173
 583 0038 524B     		ldr	r3, .L45+12
 584 003a 3361     		str	r3, [r6, #16]
 291:LWIP/Target/ethernetif.c **** 
 585              		.loc 1 291 3 is_stmt 1 view .LVU174
 291:LWIP/Target/ethernetif.c **** 
 586              		.loc 1 291 23 is_stmt 0 view .LVU175
 587 003c 40F2F453 		movw	r3, #1524
 588 0040 7361     		str	r3, [r6, #20]
 297:LWIP/Target/ethernetif.c **** 
 589              		.loc 1 297 3 is_stmt 1 view .LVU176
 297:LWIP/Target/ethernetif.c **** 
 590              		.loc 1 297 25 is_stmt 0 view .LVU177
 591 0042 3046     		mov	r0, r6
 592              	.LVL49:
 297:LWIP/Target/ethernetif.c **** 
 593              		.loc 1 297 25 view .LVU178
 594 0044 FFF7FEFF 		bl	HAL_ETH_Init
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 87


 595              	.LVL50:
 596 0048 0746     		mov	r7, r0
 597              	.LVL51:
 299:LWIP/Target/ethernetif.c ****   TxConfig.Attributes = ETH_TX_PACKETS_FEATURES_CSUM | ETH_TX_PACKETS_FEATURES_CRCPAD;
 598              		.loc 1 299 3 is_stmt 1 view .LVU179
 599 004a DFF85481 		ldr	r8, .L45+40
 600 004e 3422     		movs	r2, #52
 601 0050 2146     		mov	r1, r4
 602 0052 4046     		mov	r0, r8
 603 0054 FFF7FEFF 		bl	memset
 604              	.LVL52:
 300:LWIP/Target/ethernetif.c ****   TxConfig.ChecksumCtrl = ETH_CHECKSUM_IPHDR_PAYLOAD_INSERT_PHDR_CALC;
 605              		.loc 1 300 3 view .LVU180
 300:LWIP/Target/ethernetif.c ****   TxConfig.ChecksumCtrl = ETH_CHECKSUM_IPHDR_PAYLOAD_INSERT_PHDR_CALC;
 606              		.loc 1 300 23 is_stmt 0 view .LVU181
 607 0058 2123     		movs	r3, #33
 608 005a C8F80030 		str	r3, [r8]
 301:LWIP/Target/ethernetif.c ****   TxConfig.CRCPadCtrl = ETH_CRC_PAD_INSERT;
 609              		.loc 1 301 3 is_stmt 1 view .LVU182
 301:LWIP/Target/ethernetif.c ****   TxConfig.CRCPadCtrl = ETH_CRC_PAD_INSERT;
 610              		.loc 1 301 25 is_stmt 0 view .LVU183
 611 005e 4FF44033 		mov	r3, #196608
 612 0062 C8F81430 		str	r3, [r8, #20]
 302:LWIP/Target/ethernetif.c **** 
 613              		.loc 1 302 3 is_stmt 1 view .LVU184
 307:LWIP/Target/ethernetif.c **** 
 614              		.loc 1 307 3 view .LVU185
 615 0066 4848     		ldr	r0, .L45+16
 616 0068 FFF7FEFF 		bl	memp_init_pool
 617              	.LVL53:
 312:LWIP/Target/ethernetif.c **** 
 618              		.loc 1 312 3 view .LVU186
 312:LWIP/Target/ethernetif.c **** 
 619              		.loc 1 312 21 is_stmt 0 view .LVU187
 620 006c 0623     		movs	r3, #6
 621 006e 85F82C30 		strb	r3, [r5, #44]
 315:LWIP/Target/ethernetif.c ****   netif->hwaddr[1] =  heth.Init.MACAddr[1];
 622              		.loc 1 315 3 is_stmt 1 view .LVU188
 315:LWIP/Target/ethernetif.c ****   netif->hwaddr[1] =  heth.Init.MACAddr[1];
 623              		.loc 1 315 32 is_stmt 0 view .LVU189
 624 0072 7368     		ldr	r3, [r6, #4]
 315:LWIP/Target/ethernetif.c ****   netif->hwaddr[1] =  heth.Init.MACAddr[1];
 625              		.loc 1 315 40 view .LVU190
 626 0074 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 315:LWIP/Target/ethernetif.c ****   netif->hwaddr[1] =  heth.Init.MACAddr[1];
 627              		.loc 1 315 20 view .LVU191
 628 0076 85F82620 		strb	r2, [r5, #38]
 316:LWIP/Target/ethernetif.c ****   netif->hwaddr[2] =  heth.Init.MACAddr[2];
 629              		.loc 1 316 3 is_stmt 1 view .LVU192
 316:LWIP/Target/ethernetif.c ****   netif->hwaddr[2] =  heth.Init.MACAddr[2];
 630              		.loc 1 316 20 is_stmt 0 view .LVU193
 631 007a 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 632 007c 85F82720 		strb	r2, [r5, #39]
 317:LWIP/Target/ethernetif.c ****   netif->hwaddr[3] =  heth.Init.MACAddr[3];
 633              		.loc 1 317 3 is_stmt 1 view .LVU194
 317:LWIP/Target/ethernetif.c ****   netif->hwaddr[3] =  heth.Init.MACAddr[3];
 634              		.loc 1 317 20 is_stmt 0 view .LVU195
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 88


 635 0080 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 636 0082 85F82820 		strb	r2, [r5, #40]
 318:LWIP/Target/ethernetif.c ****   netif->hwaddr[4] =  heth.Init.MACAddr[4];
 637              		.loc 1 318 3 is_stmt 1 view .LVU196
 318:LWIP/Target/ethernetif.c ****   netif->hwaddr[4] =  heth.Init.MACAddr[4];
 638              		.loc 1 318 20 is_stmt 0 view .LVU197
 639 0086 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 640 0088 85F82920 		strb	r2, [r5, #41]
 319:LWIP/Target/ethernetif.c ****   netif->hwaddr[5] =  heth.Init.MACAddr[5];
 641              		.loc 1 319 3 is_stmt 1 view .LVU198
 319:LWIP/Target/ethernetif.c ****   netif->hwaddr[5] =  heth.Init.MACAddr[5];
 642              		.loc 1 319 20 is_stmt 0 view .LVU199
 643 008c 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 644 008e 85F82A20 		strb	r2, [r5, #42]
 320:LWIP/Target/ethernetif.c **** 
 645              		.loc 1 320 3 is_stmt 1 view .LVU200
 320:LWIP/Target/ethernetif.c **** 
 646              		.loc 1 320 20 is_stmt 0 view .LVU201
 647 0092 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 648 0094 85F82B30 		strb	r3, [r5, #43]
 323:LWIP/Target/ethernetif.c **** 
 649              		.loc 1 323 3 is_stmt 1 view .LVU202
 323:LWIP/Target/ethernetif.c **** 
 650              		.loc 1 323 14 is_stmt 0 view .LVU203
 651 0098 40F2DC53 		movw	r3, #1500
 652 009c AB84     		strh	r3, [r5, #36]	@ movhi
 328:LWIP/Target/ethernetif.c ****   #else
 653              		.loc 1 328 5 is_stmt 1 view .LVU204
 328:LWIP/Target/ethernetif.c ****   #else
 654              		.loc 1 328 18 is_stmt 0 view .LVU205
 655 009e 95F82D30 		ldrb	r3, [r5, #45]	@ zero_extendqisi2
 656 00a2 43F00A03 		orr	r3, r3, #10
 657 00a6 85F82D30 		strb	r3, [r5, #45]
 333:LWIP/Target/ethernetif.c ****   {
 658              		.loc 1 333 3 is_stmt 1 view .LVU206
 333:LWIP/Target/ethernetif.c ****   {
 659              		.loc 1 333 3 is_stmt 0 view .LVU207
 660 00aa 0AE0     		b	.L33
 661              	.LVL54:
 662              	.L34:
 335:LWIP/Target/ethernetif.c ****   }
 663              		.loc 1 335 5 is_stmt 1 discriminator 3 view .LVU208
 664 00ac 0023     		movs	r3, #0
 665 00ae 40F2F451 		movw	r1, #1524
 666 00b2 364A     		ldr	r2, .L45+20
 667 00b4 01FB0422 		mla	r2, r1, r4, r2
 668 00b8 2146     		mov	r1, r4
 669 00ba 2F48     		ldr	r0, .L45
 670 00bc FFF7FEFF 		bl	HAL_ETH_DescAssignMemory
 671              	.LVL55:
 333:LWIP/Target/ethernetif.c ****   {
 672              		.loc 1 333 39 discriminator 3 view .LVU209
 333:LWIP/Target/ethernetif.c ****   {
 673              		.loc 1 333 43 is_stmt 0 discriminator 3 view .LVU210
 674 00c0 0134     		adds	r4, r4, #1
 675              	.LVL56:
 676              	.L33:
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 89


 333:LWIP/Target/ethernetif.c ****   {
 677              		.loc 1 333 16 is_stmt 1 discriminator 1 view .LVU211
 333:LWIP/Target/ethernetif.c ****   {
 678              		.loc 1 333 3 is_stmt 0 discriminator 1 view .LVU212
 679 00c2 032C     		cmp	r4, #3
 680 00c4 F2D9     		bls	.L34
 339:LWIP/Target/ethernetif.c ****   RxPktSemaphore = osSemaphoreCreate(osSemaphore(SEM) , 1 );
 681              		.loc 1 339 3 is_stmt 1 view .LVU213
 682 00c6 0023     		movs	r3, #0
 683 00c8 0793     		str	r3, [sp, #28]
 684 00ca 0893     		str	r3, [sp, #32]
 340:LWIP/Target/ethernetif.c **** 
 685              		.loc 1 340 3 view .LVU214
 340:LWIP/Target/ethernetif.c **** 
 686              		.loc 1 340 20 is_stmt 0 view .LVU215
 687 00cc 0121     		movs	r1, #1
 688 00ce 07A8     		add	r0, sp, #28
 689 00d0 FFF7FEFF 		bl	osSemaphoreCreate
 690              	.LVL57:
 340:LWIP/Target/ethernetif.c **** 
 691              		.loc 1 340 18 view .LVU216
 692 00d4 2E4B     		ldr	r3, .L45+24
 693 00d6 1860     		str	r0, [r3]
 344:LWIP/Target/ethernetif.c ****   osThreadCreate (osThread(EthIf), netif);
 694              		.loc 1 344 3 is_stmt 1 view .LVU217
 695 00d8 6C46     		mov	r4, sp
 696              	.LVL58:
 344:LWIP/Target/ethernetif.c ****   osThreadCreate (osThread(EthIf), netif);
 697              		.loc 1 344 3 is_stmt 0 view .LVU218
 698 00da 2E4E     		ldr	r6, .L45+28
 699 00dc 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 700 00de 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 701 00e0 96E80700 		ldm	r6, {r0, r1, r2}
 702 00e4 84E80700 		stm	r4, {r0, r1, r2}
 345:LWIP/Target/ethernetif.c **** /* USER CODE END OS_THREAD_DEF_CREATE_CMSIS_RTOS_V1 */
 703              		.loc 1 345 3 is_stmt 1 view .LVU219
 704 00e8 2946     		mov	r1, r5
 705 00ea 6846     		mov	r0, sp
 706 00ec FFF7FEFF 		bl	osThreadCreate
 707              	.LVL59:
 351:LWIP/Target/ethernetif.c **** 
 708              		.loc 1 351 3 view .LVU220
 709 00f0 294C     		ldr	r4, .L45+32
 710 00f2 2A49     		ldr	r1, .L45+36
 711 00f4 2046     		mov	r0, r4
 712 00f6 FFF7FEFF 		bl	LAN8742_RegisterBusIO
 713              	.LVL60:
 354:LWIP/Target/ethernetif.c **** 
 714              		.loc 1 354 3 view .LVU221
 715 00fa 2046     		mov	r0, r4
 716 00fc FFF7FEFF 		bl	LAN8742_Init
 717              	.LVL61:
 356:LWIP/Target/ethernetif.c ****   {
 718              		.loc 1 356 3 view .LVU222
 356:LWIP/Target/ethernetif.c ****   {
 719              		.loc 1 356 6 is_stmt 0 view .LVU223
 720 0100 AFBB     		cbnz	r7, .L35
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 90


 358:LWIP/Target/ethernetif.c **** 
 721              		.loc 1 358 5 is_stmt 1 view .LVU224
 358:LWIP/Target/ethernetif.c **** 
 722              		.loc 1 358 20 is_stmt 0 view .LVU225
 723 0102 2046     		mov	r0, r4
 724 0104 FFF7FEFF 		bl	LAN8742_GetLinkState
 725              	.LVL62:
 361:LWIP/Target/ethernetif.c ****     {
 726              		.loc 1 361 5 is_stmt 1 view .LVU226
 361:LWIP/Target/ethernetif.c ****     {
 727              		.loc 1 361 7 is_stmt 0 view .LVU227
 728 0108 0128     		cmp	r0, #1
 729 010a 1EDD     		ble	.L43
 368:LWIP/Target/ethernetif.c ****       {
 730              		.loc 1 368 7 is_stmt 1 view .LVU228
 731 010c 0428     		cmp	r0, #4
 732 010e 27D0     		beq	.L39
 733 0110 0528     		cmp	r0, #5
 734 0112 29D0     		beq	.L40
 735 0114 0328     		cmp	r0, #3
 736 0116 1FD0     		beq	.L44
 737 0118 4FF48046 		mov	r6, #16384
 738 011c 4FF40057 		mov	r7, #8192
 739              	.LVL63:
 740              	.L38:
 393:LWIP/Target/ethernetif.c ****     MACConf.DuplexMode = duplex;
 741              		.loc 1 393 5 view .LVU229
 742 0120 154C     		ldr	r4, .L45
 743 0122 0BA9     		add	r1, sp, #44
 744 0124 2046     		mov	r0, r4
 745              	.LVL64:
 393:LWIP/Target/ethernetif.c ****     MACConf.DuplexMode = duplex;
 746              		.loc 1 393 5 is_stmt 0 view .LVU230
 747 0126 FFF7FEFF 		bl	HAL_ETH_GetMACConfig
 748              	.LVL65:
 394:LWIP/Target/ethernetif.c ****     MACConf.Speed = speed;
 749              		.loc 1 394 5 is_stmt 1 view .LVU231
 394:LWIP/Target/ethernetif.c ****     MACConf.Speed = speed;
 750              		.loc 1 394 24 is_stmt 0 view .LVU232
 751 012a 1197     		str	r7, [sp, #68]
 395:LWIP/Target/ethernetif.c ****     HAL_ETH_SetMACConfig(&heth, &MACConf);
 752              		.loc 1 395 5 is_stmt 1 view .LVU233
 395:LWIP/Target/ethernetif.c ****     HAL_ETH_SetMACConfig(&heth, &MACConf);
 753              		.loc 1 395 19 is_stmt 0 view .LVU234
 754 012c 1096     		str	r6, [sp, #64]
 396:LWIP/Target/ethernetif.c **** 
 755              		.loc 1 396 5 is_stmt 1 view .LVU235
 756 012e 0BA9     		add	r1, sp, #44
 757 0130 2046     		mov	r0, r4
 758 0132 FFF7FEFF 		bl	HAL_ETH_SetMACConfig
 759              	.LVL66:
 398:LWIP/Target/ethernetif.c ****     netif_set_up(netif);
 760              		.loc 1 398 5 view .LVU236
 761 0136 2046     		mov	r0, r4
 762 0138 FFF7FEFF 		bl	HAL_ETH_Start_IT
 763              	.LVL67:
 399:LWIP/Target/ethernetif.c ****     netif_set_link_up(netif);
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 91


 764              		.loc 1 399 5 view .LVU237
 765 013c 2846     		mov	r0, r5
 766 013e FFF7FEFF 		bl	netif_set_up
 767              	.LVL68:
 400:LWIP/Target/ethernetif.c **** 
 768              		.loc 1 400 5 view .LVU238
 769 0142 2846     		mov	r0, r5
 770 0144 FFF7FEFF 		bl	netif_set_link_up
 771              	.LVL69:
 772 0148 13E0     		b	.L32
 773              	.LVL70:
 774              	.L43:
 363:LWIP/Target/ethernetif.c ****       netif_set_down(netif);
 775              		.loc 1 363 7 view .LVU239
 776 014a 2846     		mov	r0, r5
 777              	.LVL71:
 363:LWIP/Target/ethernetif.c ****       netif_set_down(netif);
 778              		.loc 1 363 7 is_stmt 0 view .LVU240
 779 014c FFF7FEFF 		bl	netif_set_link_down
 780              	.LVL72:
 364:LWIP/Target/ethernetif.c ****     }
 781              		.loc 1 364 7 is_stmt 1 view .LVU241
 782 0150 2846     		mov	r0, r5
 783 0152 FFF7FEFF 		bl	netif_set_down
 784              	.LVL73:
 785 0156 0CE0     		b	.L32
 786              	.LVL74:
 787              	.L44:
 376:LWIP/Target/ethernetif.c ****         break;
 788              		.loc 1 376 15 is_stmt 0 view .LVU242
 789 0158 4FF48046 		mov	r6, #16384
 375:LWIP/Target/ethernetif.c ****         speed = ETH_SPEED_100M;
 790              		.loc 1 375 16 view .LVU243
 791 015c 0027     		movs	r7, #0
 792              	.LVL75:
 375:LWIP/Target/ethernetif.c ****         speed = ETH_SPEED_100M;
 793              		.loc 1 375 16 view .LVU244
 794 015e DFE7     		b	.L38
 795              	.LVL76:
 796              	.L39:
 380:LWIP/Target/ethernetif.c ****         break;
 797              		.loc 1 380 15 view .LVU245
 798 0160 0026     		movs	r6, #0
 379:LWIP/Target/ethernetif.c ****         speed = ETH_SPEED_10M;
 799              		.loc 1 379 16 view .LVU246
 800 0162 4FF40057 		mov	r7, #8192
 801              	.LVL77:
 379:LWIP/Target/ethernetif.c ****         speed = ETH_SPEED_10M;
 802              		.loc 1 379 16 view .LVU247
 803 0166 DBE7     		b	.L38
 804              	.LVL78:
 805              	.L40:
 384:LWIP/Target/ethernetif.c ****         break;
 806              		.loc 1 384 15 view .LVU248
 807 0168 0026     		movs	r6, #0
 383:LWIP/Target/ethernetif.c ****         speed = ETH_SPEED_10M;
 808              		.loc 1 383 16 view .LVU249
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 92


 809 016a 3746     		mov	r7, r6
 810              	.LVL79:
 383:LWIP/Target/ethernetif.c ****         speed = ETH_SPEED_10M;
 811              		.loc 1 383 16 view .LVU250
 812 016c D8E7     		b	.L38
 813              	.LVL80:
 814              	.L35:
 410:LWIP/Target/ethernetif.c ****   }
 815              		.loc 1 410 5 is_stmt 1 view .LVU251
 816 016e FFF7FEFF 		bl	Error_Handler
 817              	.LVL81:
 818              	.L32:
 417:LWIP/Target/ethernetif.c **** 
 819              		.loc 1 417 1 is_stmt 0 view .LVU252
 820 0172 24B0     		add	sp, sp, #144
 821              	.LCFI9:
 822              		.cfi_def_cfa_offset 24
 823              		@ sp needed
 824 0174 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 825              	.LVL82:
 826              	.L46:
 417:LWIP/Target/ethernetif.c **** 
 827              		.loc 1 417 1 view .LVU253
 828              		.align	2
 829              	.L45:
 830 0178 00000000 		.word	.LANCHOR0
 831 017c 00800240 		.word	1073905664
 832 0180 00000000 		.word	.LANCHOR4
 833 0184 00000000 		.word	.LANCHOR5
 834 0188 00000000 		.word	.LANCHOR1
 835 018c 00000000 		.word	Rx_Buff
 836 0190 00000000 		.word	.LANCHOR2
 837 0194 00000000 		.word	.LANCHOR6
 838 0198 00000000 		.word	.LANCHOR8
 839 019c 00000000 		.word	.LANCHOR7
 840 01a0 00000000 		.word	.LANCHOR3
 841              		.cfi_endproc
 842              	.LFE367:
 844              		.section	.text.pbuf_free_custom,"ax",%progbits
 845              		.align	1
 846              		.global	pbuf_free_custom
 847              		.syntax unified
 848              		.thumb
 849              		.thumb_func
 851              	pbuf_free_custom:
 852              	.LVL83:
 853              	.LFB372:
 630:LWIP/Target/ethernetif.c ****   struct pbuf_custom* custom_pbuf = (struct pbuf_custom*)p;
 854              		.loc 1 630 1 is_stmt 1 view -0
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 0
 857              		@ frame_needed = 0, uses_anonymous_args = 0
 630:LWIP/Target/ethernetif.c ****   struct pbuf_custom* custom_pbuf = (struct pbuf_custom*)p;
 858              		.loc 1 630 1 is_stmt 0 view .LVU255
 859 0000 08B5     		push	{r3, lr}
 860              	.LCFI10:
 861              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 93


 862              		.cfi_offset 3, -8
 863              		.cfi_offset 14, -4
 864 0002 0146     		mov	r1, r0
 631:LWIP/Target/ethernetif.c **** 
 865              		.loc 1 631 3 is_stmt 1 view .LVU256
 866              	.LVL84:
 633:LWIP/Target/ethernetif.c **** }
 867              		.loc 1 633 3 view .LVU257
 868 0004 0148     		ldr	r0, .L49
 869              	.LVL85:
 633:LWIP/Target/ethernetif.c **** }
 870              		.loc 1 633 3 is_stmt 0 view .LVU258
 871 0006 FFF7FEFF 		bl	memp_free_pool
 872              	.LVL86:
 634:LWIP/Target/ethernetif.c **** 
 873              		.loc 1 634 1 view .LVU259
 874 000a 08BD     		pop	{r3, pc}
 875              	.L50:
 876              		.align	2
 877              	.L49:
 878 000c 00000000 		.word	.LANCHOR1
 879              		.cfi_endproc
 880              	.LFE372:
 882              		.section	.text.ETH_PHY_IO_GetTick,"ax",%progbits
 883              		.align	1
 884              		.global	ETH_PHY_IO_GetTick
 885              		.syntax unified
 886              		.thumb
 887              		.thumb_func
 889              	ETH_PHY_IO_GetTick:
 890              	.LFB379:
 691:LWIP/Target/ethernetif.c **** 
 692:LWIP/Target/ethernetif.c **** /**
 693:LWIP/Target/ethernetif.c ****   * @brief  Read a PHY register through the MDIO interface.
 694:LWIP/Target/ethernetif.c ****   * @param  DevAddr: PHY port address
 695:LWIP/Target/ethernetif.c ****   * @param  RegAddr: PHY register address
 696:LWIP/Target/ethernetif.c ****   * @param  pRegVal: pointer to hold the register value
 697:LWIP/Target/ethernetif.c ****   * @retval 0 if OK -1 if Error
 698:LWIP/Target/ethernetif.c ****   */
 699:LWIP/Target/ethernetif.c **** int32_t ETH_PHY_IO_ReadReg(uint32_t DevAddr, uint32_t RegAddr, uint32_t *pRegVal)
 700:LWIP/Target/ethernetif.c **** {
 701:LWIP/Target/ethernetif.c ****   if(HAL_ETH_ReadPHYRegister(&heth, DevAddr, RegAddr, pRegVal) != HAL_OK)
 702:LWIP/Target/ethernetif.c ****   {
 703:LWIP/Target/ethernetif.c ****     return -1;
 704:LWIP/Target/ethernetif.c ****   }
 705:LWIP/Target/ethernetif.c **** 
 706:LWIP/Target/ethernetif.c ****   return 0;
 707:LWIP/Target/ethernetif.c **** }
 708:LWIP/Target/ethernetif.c **** 
 709:LWIP/Target/ethernetif.c **** /**
 710:LWIP/Target/ethernetif.c ****   * @brief  Write a value to a PHY register through the MDIO interface.
 711:LWIP/Target/ethernetif.c ****   * @param  DevAddr: PHY port address
 712:LWIP/Target/ethernetif.c ****   * @param  RegAddr: PHY register address
 713:LWIP/Target/ethernetif.c ****   * @param  RegVal: Value to be written
 714:LWIP/Target/ethernetif.c ****   * @retval 0 if OK -1 if Error
 715:LWIP/Target/ethernetif.c ****   */
 716:LWIP/Target/ethernetif.c **** int32_t ETH_PHY_IO_WriteReg(uint32_t DevAddr, uint32_t RegAddr, uint32_t RegVal)
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 94


 717:LWIP/Target/ethernetif.c **** {
 718:LWIP/Target/ethernetif.c ****   if(HAL_ETH_WritePHYRegister(&heth, DevAddr, RegAddr, RegVal) != HAL_OK)
 719:LWIP/Target/ethernetif.c ****   {
 720:LWIP/Target/ethernetif.c ****     return -1;
 721:LWIP/Target/ethernetif.c ****   }
 722:LWIP/Target/ethernetif.c **** 
 723:LWIP/Target/ethernetif.c ****   return 0;
 724:LWIP/Target/ethernetif.c **** }
 725:LWIP/Target/ethernetif.c **** 
 726:LWIP/Target/ethernetif.c **** /**
 727:LWIP/Target/ethernetif.c ****   * @brief  Get the time in millisecons used for internal PHY driver process.
 728:LWIP/Target/ethernetif.c ****   * @retval Time value
 729:LWIP/Target/ethernetif.c ****   */
 730:LWIP/Target/ethernetif.c **** int32_t ETH_PHY_IO_GetTick(void)
 731:LWIP/Target/ethernetif.c **** {
 891              		.loc 1 731 1 is_stmt 1 view -0
 892              		.cfi_startproc
 893              		@ args = 0, pretend = 0, frame = 0
 894              		@ frame_needed = 0, uses_anonymous_args = 0
 895 0000 08B5     		push	{r3, lr}
 896              	.LCFI11:
 897              		.cfi_def_cfa_offset 8
 898              		.cfi_offset 3, -8
 899              		.cfi_offset 14, -4
 732:LWIP/Target/ethernetif.c ****   return HAL_GetTick();
 900              		.loc 1 732 3 view .LVU261
 901              		.loc 1 732 10 is_stmt 0 view .LVU262
 902 0002 FFF7FEFF 		bl	HAL_GetTick
 903              	.LVL87:
 733:LWIP/Target/ethernetif.c **** }
 904              		.loc 1 733 1 view .LVU263
 905 0006 08BD     		pop	{r3, pc}
 906              		.cfi_endproc
 907              	.LFE379:
 909              		.section	.text.ETH_PHY_IO_Init,"ax",%progbits
 910              		.align	1
 911              		.global	ETH_PHY_IO_Init
 912              		.syntax unified
 913              		.thumb
 914              		.thumb_func
 916              	ETH_PHY_IO_Init:
 917              	.LFB375:
 671:LWIP/Target/ethernetif.c ****   /* We assume that MDIO GPIO configuration is already done
 918              		.loc 1 671 1 is_stmt 1 view -0
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 0
 921              		@ frame_needed = 0, uses_anonymous_args = 0
 922 0000 08B5     		push	{r3, lr}
 923              	.LCFI12:
 924              		.cfi_def_cfa_offset 8
 925              		.cfi_offset 3, -8
 926              		.cfi_offset 14, -4
 677:LWIP/Target/ethernetif.c **** 
 927              		.loc 1 677 3 view .LVU265
 928 0002 0248     		ldr	r0, .L55
 929 0004 FFF7FEFF 		bl	HAL_ETH_SetMDIOClockRange
 930              	.LVL88:
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 95


 679:LWIP/Target/ethernetif.c **** }
 931              		.loc 1 679 3 view .LVU266
 680:LWIP/Target/ethernetif.c **** 
 932              		.loc 1 680 1 is_stmt 0 view .LVU267
 933 0008 0020     		movs	r0, #0
 934 000a 08BD     		pop	{r3, pc}
 935              	.L56:
 936              		.align	2
 937              	.L55:
 938 000c 00000000 		.word	.LANCHOR0
 939              		.cfi_endproc
 940              	.LFE375:
 942              		.section	.text.ETH_PHY_IO_ReadReg,"ax",%progbits
 943              		.align	1
 944              		.global	ETH_PHY_IO_ReadReg
 945              		.syntax unified
 946              		.thumb
 947              		.thumb_func
 949              	ETH_PHY_IO_ReadReg:
 950              	.LVL89:
 951              	.LFB377:
 700:LWIP/Target/ethernetif.c ****   if(HAL_ETH_ReadPHYRegister(&heth, DevAddr, RegAddr, pRegVal) != HAL_OK)
 952              		.loc 1 700 1 is_stmt 1 view -0
 953              		.cfi_startproc
 954              		@ args = 0, pretend = 0, frame = 0
 955              		@ frame_needed = 0, uses_anonymous_args = 0
 700:LWIP/Target/ethernetif.c ****   if(HAL_ETH_ReadPHYRegister(&heth, DevAddr, RegAddr, pRegVal) != HAL_OK)
 956              		.loc 1 700 1 is_stmt 0 view .LVU269
 957 0000 08B5     		push	{r3, lr}
 958              	.LCFI13:
 959              		.cfi_def_cfa_offset 8
 960              		.cfi_offset 3, -8
 961              		.cfi_offset 14, -4
 962 0002 1346     		mov	r3, r2
 701:LWIP/Target/ethernetif.c ****   {
 963              		.loc 1 701 3 is_stmt 1 view .LVU270
 701:LWIP/Target/ethernetif.c ****   {
 964              		.loc 1 701 6 is_stmt 0 view .LVU271
 965 0004 0A46     		mov	r2, r1
 966              	.LVL90:
 701:LWIP/Target/ethernetif.c ****   {
 967              		.loc 1 701 6 view .LVU272
 968 0006 0146     		mov	r1, r0
 969              	.LVL91:
 701:LWIP/Target/ethernetif.c ****   {
 970              		.loc 1 701 6 view .LVU273
 971 0008 0348     		ldr	r0, .L62
 972              	.LVL92:
 701:LWIP/Target/ethernetif.c ****   {
 973              		.loc 1 701 6 view .LVU274
 974 000a FFF7FEFF 		bl	HAL_ETH_ReadPHYRegister
 975              	.LVL93:
 701:LWIP/Target/ethernetif.c ****   {
 976              		.loc 1 701 5 view .LVU275
 977 000e 00B9     		cbnz	r0, .L61
 978              	.L57:
 707:LWIP/Target/ethernetif.c **** 
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 96


 979              		.loc 1 707 1 view .LVU276
 980 0010 08BD     		pop	{r3, pc}
 981              	.L61:
 703:LWIP/Target/ethernetif.c ****   }
 982              		.loc 1 703 12 view .LVU277
 983 0012 4FF0FF30 		mov	r0, #-1
 984 0016 FBE7     		b	.L57
 985              	.L63:
 986              		.align	2
 987              	.L62:
 988 0018 00000000 		.word	.LANCHOR0
 989              		.cfi_endproc
 990              	.LFE377:
 992              		.section	.text.ETH_PHY_IO_WriteReg,"ax",%progbits
 993              		.align	1
 994              		.global	ETH_PHY_IO_WriteReg
 995              		.syntax unified
 996              		.thumb
 997              		.thumb_func
 999              	ETH_PHY_IO_WriteReg:
 1000              	.LVL94:
 1001              	.LFB378:
 717:LWIP/Target/ethernetif.c ****   if(HAL_ETH_WritePHYRegister(&heth, DevAddr, RegAddr, RegVal) != HAL_OK)
 1002              		.loc 1 717 1 is_stmt 1 view -0
 1003              		.cfi_startproc
 1004              		@ args = 0, pretend = 0, frame = 0
 1005              		@ frame_needed = 0, uses_anonymous_args = 0
 717:LWIP/Target/ethernetif.c ****   if(HAL_ETH_WritePHYRegister(&heth, DevAddr, RegAddr, RegVal) != HAL_OK)
 1006              		.loc 1 717 1 is_stmt 0 view .LVU279
 1007 0000 08B5     		push	{r3, lr}
 1008              	.LCFI14:
 1009              		.cfi_def_cfa_offset 8
 1010              		.cfi_offset 3, -8
 1011              		.cfi_offset 14, -4
 1012 0002 1346     		mov	r3, r2
 718:LWIP/Target/ethernetif.c ****   {
 1013              		.loc 1 718 3 is_stmt 1 view .LVU280
 718:LWIP/Target/ethernetif.c ****   {
 1014              		.loc 1 718 6 is_stmt 0 view .LVU281
 1015 0004 0A46     		mov	r2, r1
 1016              	.LVL95:
 718:LWIP/Target/ethernetif.c ****   {
 1017              		.loc 1 718 6 view .LVU282
 1018 0006 0146     		mov	r1, r0
 1019              	.LVL96:
 718:LWIP/Target/ethernetif.c ****   {
 1020              		.loc 1 718 6 view .LVU283
 1021 0008 0348     		ldr	r0, .L69
 1022              	.LVL97:
 718:LWIP/Target/ethernetif.c ****   {
 1023              		.loc 1 718 6 view .LVU284
 1024 000a FFF7FEFF 		bl	HAL_ETH_WritePHYRegister
 1025              	.LVL98:
 718:LWIP/Target/ethernetif.c ****   {
 1026              		.loc 1 718 5 view .LVU285
 1027 000e 00B9     		cbnz	r0, .L68
 1028              	.L64:
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 97


 724:LWIP/Target/ethernetif.c **** 
 1029              		.loc 1 724 1 view .LVU286
 1030 0010 08BD     		pop	{r3, pc}
 1031              	.L68:
 720:LWIP/Target/ethernetif.c ****   }
 1032              		.loc 1 720 12 view .LVU287
 1033 0012 4FF0FF30 		mov	r0, #-1
 1034 0016 FBE7     		b	.L64
 1035              	.L70:
 1036              		.align	2
 1037              	.L69:
 1038 0018 00000000 		.word	.LANCHOR0
 1039              		.cfi_endproc
 1040              	.LFE378:
 1042              		.section	.text.HAL_ETH_MspInit,"ax",%progbits
 1043              		.align	1
 1044              		.global	HAL_ETH_MspInit
 1045              		.syntax unified
 1046              		.thumb
 1047              		.thumb_func
 1049              	HAL_ETH_MspInit:
 1050              	.LVL99:
 1051              	.LFB364:
 139:LWIP/Target/ethernetif.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 1052              		.loc 1 139 1 is_stmt 1 view -0
 1053              		.cfi_startproc
 1054              		@ args = 0, pretend = 0, frame = 48
 1055              		@ frame_needed = 0, uses_anonymous_args = 0
 139:LWIP/Target/ethernetif.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 1056              		.loc 1 139 1 is_stmt 0 view .LVU289
 1057 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1058              	.LCFI15:
 1059              		.cfi_def_cfa_offset 28
 1060              		.cfi_offset 4, -28
 1061              		.cfi_offset 5, -24
 1062              		.cfi_offset 6, -20
 1063              		.cfi_offset 7, -16
 1064              		.cfi_offset 8, -12
 1065              		.cfi_offset 9, -8
 1066              		.cfi_offset 14, -4
 1067 0004 8DB0     		sub	sp, sp, #52
 1068              	.LCFI16:
 1069              		.cfi_def_cfa_offset 80
 140:LWIP/Target/ethernetif.c ****   if(ethHandle->Instance==ETH)
 1070              		.loc 1 140 3 is_stmt 1 view .LVU290
 140:LWIP/Target/ethernetif.c ****   if(ethHandle->Instance==ETH)
 1071              		.loc 1 140 20 is_stmt 0 view .LVU291
 1072 0006 0023     		movs	r3, #0
 1073 0008 0793     		str	r3, [sp, #28]
 1074 000a 0893     		str	r3, [sp, #32]
 1075 000c 0993     		str	r3, [sp, #36]
 1076 000e 0A93     		str	r3, [sp, #40]
 1077 0010 0B93     		str	r3, [sp, #44]
 141:LWIP/Target/ethernetif.c ****   {
 1078              		.loc 1 141 3 is_stmt 1 view .LVU292
 141:LWIP/Target/ethernetif.c ****   {
 1079              		.loc 1 141 15 is_stmt 0 view .LVU293
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 98


 1080 0012 0268     		ldr	r2, [r0]
 141:LWIP/Target/ethernetif.c ****   {
 1081              		.loc 1 141 5 view .LVU294
 1082 0014 524B     		ldr	r3, .L75
 1083 0016 9A42     		cmp	r2, r3
 1084 0018 02D0     		beq	.L74
 1085              	.LVL100:
 1086              	.L71:
 204:LWIP/Target/ethernetif.c **** 
 1087              		.loc 1 204 1 view .LVU295
 1088 001a 0DB0     		add	sp, sp, #52
 1089              	.LCFI17:
 1090              		.cfi_remember_state
 1091              		.cfi_def_cfa_offset 28
 1092              		@ sp needed
 1093 001c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1094              	.LVL101:
 1095              	.L74:
 1096              	.LCFI18:
 1097              		.cfi_restore_state
 147:LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1TX_CLK_ENABLE();
 1098              		.loc 1 147 5 is_stmt 1 view .LVU296
 1099              	.LBB27:
 147:LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1TX_CLK_ENABLE();
 1100              		.loc 1 147 5 view .LVU297
 147:LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1TX_CLK_ENABLE();
 1101              		.loc 1 147 5 view .LVU298
 1102 0020 504B     		ldr	r3, .L75+4
 1103 0022 D3F8D820 		ldr	r2, [r3, #216]
 1104 0026 42F40042 		orr	r2, r2, #32768
 1105 002a C3F8D820 		str	r2, [r3, #216]
 147:LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1TX_CLK_ENABLE();
 1106              		.loc 1 147 5 view .LVU299
 1107 002e D3F8D820 		ldr	r2, [r3, #216]
 1108 0032 02F40042 		and	r2, r2, #32768
 1109 0036 0092     		str	r2, [sp]
 147:LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1TX_CLK_ENABLE();
 1110              		.loc 1 147 5 view .LVU300
 1111 0038 009A     		ldr	r2, [sp]
 1112              	.LBE27:
 147:LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1TX_CLK_ENABLE();
 1113              		.loc 1 147 5 view .LVU301
 148:LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1RX_CLK_ENABLE();
 1114              		.loc 1 148 5 view .LVU302
 1115              	.LBB28:
 148:LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1RX_CLK_ENABLE();
 1116              		.loc 1 148 5 view .LVU303
 148:LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1RX_CLK_ENABLE();
 1117              		.loc 1 148 5 view .LVU304
 1118 003a D3F8D820 		ldr	r2, [r3, #216]
 1119 003e 42F48032 		orr	r2, r2, #65536
 1120 0042 C3F8D820 		str	r2, [r3, #216]
 148:LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1RX_CLK_ENABLE();
 1121              		.loc 1 148 5 view .LVU305
 1122 0046 D3F8D820 		ldr	r2, [r3, #216]
 1123 004a 02F48032 		and	r2, r2, #65536
 1124 004e 0192     		str	r2, [sp, #4]
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 99


 148:LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1RX_CLK_ENABLE();
 1125              		.loc 1 148 5 view .LVU306
 1126 0050 019A     		ldr	r2, [sp, #4]
 1127              	.LBE28:
 148:LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1RX_CLK_ENABLE();
 1128              		.loc 1 148 5 view .LVU307
 149:LWIP/Target/ethernetif.c **** 
 1129              		.loc 1 149 5 view .LVU308
 1130              	.LBB29:
 149:LWIP/Target/ethernetif.c **** 
 1131              		.loc 1 149 5 view .LVU309
 149:LWIP/Target/ethernetif.c **** 
 1132              		.loc 1 149 5 view .LVU310
 1133 0052 D3F8D820 		ldr	r2, [r3, #216]
 1134 0056 42F40032 		orr	r2, r2, #131072
 1135 005a C3F8D820 		str	r2, [r3, #216]
 149:LWIP/Target/ethernetif.c **** 
 1136              		.loc 1 149 5 view .LVU311
 1137 005e D3F8D820 		ldr	r2, [r3, #216]
 1138 0062 02F40032 		and	r2, r2, #131072
 1139 0066 0292     		str	r2, [sp, #8]
 149:LWIP/Target/ethernetif.c **** 
 1140              		.loc 1 149 5 view .LVU312
 1141 0068 029A     		ldr	r2, [sp, #8]
 1142              	.LBE29:
 149:LWIP/Target/ethernetif.c **** 
 1143              		.loc 1 149 5 view .LVU313
 151:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 1144              		.loc 1 151 5 view .LVU314
 1145              	.LBB30:
 151:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 1146              		.loc 1 151 5 view .LVU315
 151:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 1147              		.loc 1 151 5 view .LVU316
 1148 006a D3F8E020 		ldr	r2, [r3, #224]
 1149 006e 42F00402 		orr	r2, r2, #4
 1150 0072 C3F8E020 		str	r2, [r3, #224]
 151:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 1151              		.loc 1 151 5 view .LVU317
 1152 0076 D3F8E020 		ldr	r2, [r3, #224]
 1153 007a 02F00402 		and	r2, r2, #4
 1154 007e 0392     		str	r2, [sp, #12]
 151:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 1155              		.loc 1 151 5 view .LVU318
 1156 0080 039A     		ldr	r2, [sp, #12]
 1157              	.LBE30:
 151:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 1158              		.loc 1 151 5 view .LVU319
 152:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 1159              		.loc 1 152 5 view .LVU320
 1160              	.LBB31:
 152:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 1161              		.loc 1 152 5 view .LVU321
 152:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 1162              		.loc 1 152 5 view .LVU322
 1163 0082 D3F8E020 		ldr	r2, [r3, #224]
 1164 0086 42F00102 		orr	r2, r2, #1
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 100


 1165 008a C3F8E020 		str	r2, [r3, #224]
 152:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 1166              		.loc 1 152 5 view .LVU323
 1167 008e D3F8E020 		ldr	r2, [r3, #224]
 1168 0092 02F00102 		and	r2, r2, #1
 1169 0096 0492     		str	r2, [sp, #16]
 152:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 1170              		.loc 1 152 5 view .LVU324
 1171 0098 049A     		ldr	r2, [sp, #16]
 1172              	.LBE31:
 152:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 1173              		.loc 1 152 5 view .LVU325
 153:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOG_CLK_ENABLE();
 1174              		.loc 1 153 5 view .LVU326
 1175              	.LBB32:
 153:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOG_CLK_ENABLE();
 1176              		.loc 1 153 5 view .LVU327
 153:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOG_CLK_ENABLE();
 1177              		.loc 1 153 5 view .LVU328
 1178 009a D3F8E020 		ldr	r2, [r3, #224]
 1179 009e 42F00202 		orr	r2, r2, #2
 1180 00a2 C3F8E020 		str	r2, [r3, #224]
 153:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOG_CLK_ENABLE();
 1181              		.loc 1 153 5 view .LVU329
 1182 00a6 D3F8E020 		ldr	r2, [r3, #224]
 1183 00aa 02F00202 		and	r2, r2, #2
 1184 00ae 0592     		str	r2, [sp, #20]
 153:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOG_CLK_ENABLE();
 1185              		.loc 1 153 5 view .LVU330
 1186 00b0 059A     		ldr	r2, [sp, #20]
 1187              	.LBE32:
 153:LWIP/Target/ethernetif.c ****     __HAL_RCC_GPIOG_CLK_ENABLE();
 1188              		.loc 1 153 5 view .LVU331
 154:LWIP/Target/ethernetif.c ****     /**ETH GPIO Configuration
 1189              		.loc 1 154 5 view .LVU332
 1190              	.LBB33:
 154:LWIP/Target/ethernetif.c ****     /**ETH GPIO Configuration
 1191              		.loc 1 154 5 view .LVU333
 154:LWIP/Target/ethernetif.c ****     /**ETH GPIO Configuration
 1192              		.loc 1 154 5 view .LVU334
 1193 00b2 D3F8E020 		ldr	r2, [r3, #224]
 1194 00b6 42F04002 		orr	r2, r2, #64
 1195 00ba C3F8E020 		str	r2, [r3, #224]
 154:LWIP/Target/ethernetif.c ****     /**ETH GPIO Configuration
 1196              		.loc 1 154 5 view .LVU335
 1197 00be D3F8E030 		ldr	r3, [r3, #224]
 1198 00c2 03F04003 		and	r3, r3, #64
 1199 00c6 0693     		str	r3, [sp, #24]
 154:LWIP/Target/ethernetif.c ****     /**ETH GPIO Configuration
 1200              		.loc 1 154 5 view .LVU336
 1201 00c8 069B     		ldr	r3, [sp, #24]
 1202              	.LBE33:
 154:LWIP/Target/ethernetif.c ****     /**ETH GPIO Configuration
 1203              		.loc 1 154 5 view .LVU337
 166:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1204              		.loc 1 166 5 view .LVU338
 166:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 101


 1205              		.loc 1 166 25 is_stmt 0 view .LVU339
 1206 00ca 4FF03208 		mov	r8, #50
 1207 00ce CDF81C80 		str	r8, [sp, #28]
 167:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1208              		.loc 1 167 5 is_stmt 1 view .LVU340
 167:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1209              		.loc 1 167 26 is_stmt 0 view .LVU341
 1210 00d2 0227     		movs	r7, #2
 1211 00d4 0897     		str	r7, [sp, #32]
 168:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1212              		.loc 1 168 5 is_stmt 1 view .LVU342
 169:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 1213              		.loc 1 169 5 view .LVU343
 169:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 1214              		.loc 1 169 27 is_stmt 0 view .LVU344
 1215 00d6 0326     		movs	r6, #3
 1216 00d8 0A96     		str	r6, [sp, #40]
 170:LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 1217              		.loc 1 170 5 is_stmt 1 view .LVU345
 170:LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 1218              		.loc 1 170 31 is_stmt 0 view .LVU346
 1219 00da 0B25     		movs	r5, #11
 1220 00dc 0B95     		str	r5, [sp, #44]
 171:LWIP/Target/ethernetif.c **** 
 1221              		.loc 1 171 5 is_stmt 1 view .LVU347
 1222 00de 07A9     		add	r1, sp, #28
 1223 00e0 2148     		ldr	r0, .L75+8
 1224              	.LVL102:
 171:LWIP/Target/ethernetif.c **** 
 1225              		.loc 1 171 5 is_stmt 0 view .LVU348
 1226 00e2 FFF7FEFF 		bl	HAL_GPIO_Init
 1227              	.LVL103:
 173:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1228              		.loc 1 173 5 is_stmt 1 view .LVU349
 173:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1229              		.loc 1 173 25 is_stmt 0 view .LVU350
 1230 00e6 8623     		movs	r3, #134
 1231 00e8 0793     		str	r3, [sp, #28]
 174:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1232              		.loc 1 174 5 is_stmt 1 view .LVU351
 174:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1233              		.loc 1 174 26 is_stmt 0 view .LVU352
 1234 00ea 0897     		str	r7, [sp, #32]
 175:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1235              		.loc 1 175 5 is_stmt 1 view .LVU353
 175:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1236              		.loc 1 175 26 is_stmt 0 view .LVU354
 1237 00ec 0024     		movs	r4, #0
 1238 00ee 0994     		str	r4, [sp, #36]
 176:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 1239              		.loc 1 176 5 is_stmt 1 view .LVU355
 176:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 1240              		.loc 1 176 27 is_stmt 0 view .LVU356
 1241 00f0 0A96     		str	r6, [sp, #40]
 177:LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 1242              		.loc 1 177 5 is_stmt 1 view .LVU357
 177:LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 102


 1243              		.loc 1 177 31 is_stmt 0 view .LVU358
 1244 00f2 0B95     		str	r5, [sp, #44]
 178:LWIP/Target/ethernetif.c **** 
 1245              		.loc 1 178 5 is_stmt 1 view .LVU359
 1246 00f4 07A9     		add	r1, sp, #28
 1247 00f6 1D48     		ldr	r0, .L75+12
 1248 00f8 FFF7FEFF 		bl	HAL_GPIO_Init
 1249              	.LVL104:
 180:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1250              		.loc 1 180 5 view .LVU360
 180:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1251              		.loc 1 180 25 is_stmt 0 view .LVU361
 1252 00fc 4FF44053 		mov	r3, #12288
 1253 0100 0793     		str	r3, [sp, #28]
 181:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1254              		.loc 1 181 5 is_stmt 1 view .LVU362
 181:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1255              		.loc 1 181 26 is_stmt 0 view .LVU363
 1256 0102 0897     		str	r7, [sp, #32]
 182:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1257              		.loc 1 182 5 is_stmt 1 view .LVU364
 182:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1258              		.loc 1 182 26 is_stmt 0 view .LVU365
 1259 0104 0994     		str	r4, [sp, #36]
 183:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 1260              		.loc 1 183 5 is_stmt 1 view .LVU366
 183:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 1261              		.loc 1 183 27 is_stmt 0 view .LVU367
 1262 0106 0A96     		str	r6, [sp, #40]
 184:LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 1263              		.loc 1 184 5 is_stmt 1 view .LVU368
 184:LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 1264              		.loc 1 184 31 is_stmt 0 view .LVU369
 1265 0108 0B95     		str	r5, [sp, #44]
 185:LWIP/Target/ethernetif.c **** 
 1266              		.loc 1 185 5 is_stmt 1 view .LVU370
 1267 010a DFF86890 		ldr	r9, .L75+20
 1268 010e 07A9     		add	r1, sp, #28
 1269 0110 4846     		mov	r0, r9
 1270 0112 FFF7FEFF 		bl	HAL_GPIO_Init
 1271              	.LVL105:
 187:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1272              		.loc 1 187 5 view .LVU371
 187:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 1273              		.loc 1 187 25 is_stmt 0 view .LVU372
 1274 0116 4FF40063 		mov	r3, #2048
 1275 011a 0793     		str	r3, [sp, #28]
 188:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1276              		.loc 1 188 5 is_stmt 1 view .LVU373
 188:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 1277              		.loc 1 188 26 is_stmt 0 view .LVU374
 1278 011c 0897     		str	r7, [sp, #32]
 189:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1279              		.loc 1 189 5 is_stmt 1 view .LVU375
 189:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 1280              		.loc 1 189 26 is_stmt 0 view .LVU376
 1281 011e 0994     		str	r4, [sp, #36]
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 103


 190:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 1282              		.loc 1 190 5 is_stmt 1 view .LVU377
 190:LWIP/Target/ethernetif.c ****     GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 1283              		.loc 1 190 27 is_stmt 0 view .LVU378
 1284 0120 0A96     		str	r6, [sp, #40]
 191:LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 1285              		.loc 1 191 5 is_stmt 1 view .LVU379
 191:LWIP/Target/ethernetif.c ****     HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 1286              		.loc 1 191 31 is_stmt 0 view .LVU380
 1287 0122 0B95     		str	r5, [sp, #44]
 192:LWIP/Target/ethernetif.c **** 
 1288              		.loc 1 192 5 is_stmt 1 view .LVU381
 1289 0124 07A9     		add	r1, sp, #28
 1290 0126 1248     		ldr	r0, .L75+16
 1291 0128 FFF7FEFF 		bl	HAL_GPIO_Init
 1292              	.LVL106:
 195:LWIP/Target/ethernetif.c ****     HAL_NVIC_EnableIRQ(ETH_IRQn);
 1293              		.loc 1 195 5 view .LVU382
 1294 012c 2246     		mov	r2, r4
 1295 012e 0521     		movs	r1, #5
 1296 0130 3D20     		movs	r0, #61
 1297 0132 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 1298              	.LVL107:
 196:LWIP/Target/ethernetif.c ****   /* USER CODE BEGIN ETH_MspInit 1 */
 1299              		.loc 1 196 5 view .LVU383
 1300 0136 3D20     		movs	r0, #61
 1301 0138 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 1302              	.LVL108:
 198:LWIP/Target/ethernetif.c ****     HAL_Delay(50);
 1303              		.loc 1 198 5 view .LVU384
 1304 013c 2246     		mov	r2, r4
 1305 013e 0421     		movs	r1, #4
 1306 0140 4846     		mov	r0, r9
 1307 0142 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1308              	.LVL109:
 199:LWIP/Target/ethernetif.c ****     HAL_GPIO_WritePin(ETH_RST_GPIO_Port, ETH_RST_Pin,GPIO_PIN_SET);
 1309              		.loc 1 199 5 view .LVU385
 1310 0146 4046     		mov	r0, r8
 1311 0148 FFF7FEFF 		bl	HAL_Delay
 1312              	.LVL110:
 200:LWIP/Target/ethernetif.c ****     HAL_Delay(50);
 1313              		.loc 1 200 5 view .LVU386
 1314 014c 0122     		movs	r2, #1
 1315 014e 0421     		movs	r1, #4
 1316 0150 4846     		mov	r0, r9
 1317 0152 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1318              	.LVL111:
 201:LWIP/Target/ethernetif.c ****   /* USER CODE END ETH_MspInit 1 */
 1319              		.loc 1 201 5 view .LVU387
 1320 0156 4046     		mov	r0, r8
 1321 0158 FFF7FEFF 		bl	HAL_Delay
 1322              	.LVL112:
 204:LWIP/Target/ethernetif.c **** 
 1323              		.loc 1 204 1 is_stmt 0 view .LVU388
 1324 015c 5DE7     		b	.L71
 1325              	.L76:
 1326 015e 00BF     		.align	2
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 104


 1327              	.L75:
 1328 0160 00800240 		.word	1073905664
 1329 0164 00440258 		.word	1476543488
 1330 0168 00080258 		.word	1476528128
 1331 016c 00000258 		.word	1476526080
 1332 0170 00180258 		.word	1476532224
 1333 0174 00040258 		.word	1476527104
 1334              		.cfi_endproc
 1335              	.LFE364:
 1337              		.section	.text.HAL_ETH_MspDeInit,"ax",%progbits
 1338              		.align	1
 1339              		.global	HAL_ETH_MspDeInit
 1340              		.syntax unified
 1341              		.thumb
 1342              		.thumb_func
 1344              	HAL_ETH_MspDeInit:
 1345              	.LVL113:
 1346              	.LFB365:
 207:LWIP/Target/ethernetif.c ****   if(ethHandle->Instance==ETH)
 1347              		.loc 1 207 1 is_stmt 1 view -0
 1348              		.cfi_startproc
 1349              		@ args = 0, pretend = 0, frame = 0
 1350              		@ frame_needed = 0, uses_anonymous_args = 0
 207:LWIP/Target/ethernetif.c ****   if(ethHandle->Instance==ETH)
 1351              		.loc 1 207 1 is_stmt 0 view .LVU390
 1352 0000 08B5     		push	{r3, lr}
 1353              	.LCFI19:
 1354              		.cfi_def_cfa_offset 8
 1355              		.cfi_offset 3, -8
 1356              		.cfi_offset 14, -4
 208:LWIP/Target/ethernetif.c ****   {
 1357              		.loc 1 208 3 is_stmt 1 view .LVU391
 208:LWIP/Target/ethernetif.c ****   {
 1358              		.loc 1 208 15 is_stmt 0 view .LVU392
 1359 0002 0268     		ldr	r2, [r0]
 208:LWIP/Target/ethernetif.c ****   {
 1360              		.loc 1 208 5 view .LVU393
 1361 0004 164B     		ldr	r3, .L81
 1362 0006 9A42     		cmp	r2, r3
 1363 0008 00D0     		beq	.L80
 1364              	.LVL114:
 1365              	.L77:
 244:LWIP/Target/ethernetif.c **** 
 1366              		.loc 1 244 1 view .LVU394
 1367 000a 08BD     		pop	{r3, pc}
 1368              	.LVL115:
 1369              	.L80:
 214:LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1TX_CLK_DISABLE();
 1370              		.loc 1 214 5 is_stmt 1 view .LVU395
 1371 000c 154B     		ldr	r3, .L81+4
 1372 000e D3F8D820 		ldr	r2, [r3, #216]
 1373 0012 22F40042 		bic	r2, r2, #32768
 1374 0016 C3F8D820 		str	r2, [r3, #216]
 215:LWIP/Target/ethernetif.c ****     __HAL_RCC_ETH1RX_CLK_DISABLE();
 1375              		.loc 1 215 5 view .LVU396
 1376 001a D3F8D820 		ldr	r2, [r3, #216]
 1377 001e 22F48032 		bic	r2, r2, #65536
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 105


 1378 0022 C3F8D820 		str	r2, [r3, #216]
 216:LWIP/Target/ethernetif.c **** 
 1379              		.loc 1 216 5 view .LVU397
 1380 0026 D3F8D820 		ldr	r2, [r3, #216]
 1381 002a 22F40032 		bic	r2, r2, #131072
 1382 002e C3F8D820 		str	r2, [r3, #216]
 229:LWIP/Target/ethernetif.c **** 
 1383              		.loc 1 229 5 view .LVU398
 1384 0032 3221     		movs	r1, #50
 1385 0034 0C48     		ldr	r0, .L81+8
 1386              	.LVL116:
 229:LWIP/Target/ethernetif.c **** 
 1387              		.loc 1 229 5 is_stmt 0 view .LVU399
 1388 0036 FFF7FEFF 		bl	HAL_GPIO_DeInit
 1389              	.LVL117:
 231:LWIP/Target/ethernetif.c **** 
 1390              		.loc 1 231 5 is_stmt 1 view .LVU400
 1391 003a 8621     		movs	r1, #134
 1392 003c 0B48     		ldr	r0, .L81+12
 1393 003e FFF7FEFF 		bl	HAL_GPIO_DeInit
 1394              	.LVL118:
 233:LWIP/Target/ethernetif.c **** 
 1395              		.loc 1 233 5 view .LVU401
 1396 0042 4FF44051 		mov	r1, #12288
 1397 0046 0A48     		ldr	r0, .L81+16
 1398 0048 FFF7FEFF 		bl	HAL_GPIO_DeInit
 1399              	.LVL119:
 235:LWIP/Target/ethernetif.c **** 
 1400              		.loc 1 235 5 view .LVU402
 1401 004c 4FF40061 		mov	r1, #2048
 1402 0050 0848     		ldr	r0, .L81+20
 1403 0052 FFF7FEFF 		bl	HAL_GPIO_DeInit
 1404              	.LVL120:
 238:LWIP/Target/ethernetif.c **** 
 1405              		.loc 1 238 5 view .LVU403
 1406 0056 3D20     		movs	r0, #61
 1407 0058 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1408              	.LVL121:
 244:LWIP/Target/ethernetif.c **** 
 1409              		.loc 1 244 1 is_stmt 0 view .LVU404
 1410 005c D5E7     		b	.L77
 1411              	.L82:
 1412 005e 00BF     		.align	2
 1413              	.L81:
 1414 0060 00800240 		.word	1073905664
 1415 0064 00440258 		.word	1476543488
 1416 0068 00080258 		.word	1476528128
 1417 006c 00000258 		.word	1476526080
 1418 0070 00040258 		.word	1476527104
 1419 0074 00180258 		.word	1476532224
 1420              		.cfi_endproc
 1421              	.LFE365:
 1423              		.section	.text.HAL_ETH_RxCpltCallback,"ax",%progbits
 1424              		.align	1
 1425              		.global	HAL_ETH_RxCpltCallback
 1426              		.syntax unified
 1427              		.thumb
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 106


 1428              		.thumb_func
 1430              	HAL_ETH_RxCpltCallback:
 1431              	.LVL122:
 1432              	.LFB366:
 252:LWIP/Target/ethernetif.c ****   osSemaphoreRelease(RxPktSemaphore);
 1433              		.loc 1 252 1 is_stmt 1 view -0
 1434              		.cfi_startproc
 1435              		@ args = 0, pretend = 0, frame = 0
 1436              		@ frame_needed = 0, uses_anonymous_args = 0
 252:LWIP/Target/ethernetif.c ****   osSemaphoreRelease(RxPktSemaphore);
 1437              		.loc 1 252 1 is_stmt 0 view .LVU406
 1438 0000 08B5     		push	{r3, lr}
 1439              	.LCFI20:
 1440              		.cfi_def_cfa_offset 8
 1441              		.cfi_offset 3, -8
 1442              		.cfi_offset 14, -4
 253:LWIP/Target/ethernetif.c **** }
 1443              		.loc 1 253 3 is_stmt 1 view .LVU407
 1444 0002 024B     		ldr	r3, .L85
 1445 0004 1868     		ldr	r0, [r3]
 1446              	.LVL123:
 253:LWIP/Target/ethernetif.c **** }
 1447              		.loc 1 253 3 is_stmt 0 view .LVU408
 1448 0006 FFF7FEFF 		bl	osSemaphoreRelease
 1449              	.LVL124:
 254:LWIP/Target/ethernetif.c **** 
 1450              		.loc 1 254 1 view .LVU409
 1451 000a 08BD     		pop	{r3, pc}
 1452              	.L86:
 1453              		.align	2
 1454              	.L85:
 1455 000c 00000000 		.word	.LANCHOR2
 1456              		.cfi_endproc
 1457              	.LFE366:
 1459              		.section	.rodata.ethernetif_init.str1.4,"aMS",%progbits,1
 1460              		.align	2
 1461              	.LC3:
 1462 0000 4C574950 		.ascii	"LWIP/Target/ethernetif.c\000"
 1462      2F546172 
 1462      6765742F 
 1462      65746865 
 1462      726E6574 
 1463 0019 000000   		.align	2
 1464              	.LC4:
 1465 001c 6E657469 		.ascii	"netif != NULL\000"
 1465      6620213D 
 1465      204E554C 
 1465      4C00
 1466 002a 0000     		.align	2
 1467              	.LC5:
 1468 002c 41737365 		.ascii	"Assertion \"%s\" failed at line %d in %s\012\000"
 1468      7274696F 
 1468      6E202225 
 1468      73222066 
 1468      61696C65 
 1469              		.section	.text.ethernetif_init,"ax",%progbits
 1470              		.align	1
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 107


 1471              		.global	ethernetif_init
 1472              		.syntax unified
 1473              		.thumb
 1474              		.thumb_func
 1476              	ethernetif_init:
 1477              	.LVL125:
 1478              	.LFB371:
 586:LWIP/Target/ethernetif.c ****   LWIP_ASSERT("netif != NULL", (netif != NULL));
 1479              		.loc 1 586 1 is_stmt 1 view -0
 1480              		.cfi_startproc
 1481              		@ args = 0, pretend = 0, frame = 0
 1482              		@ frame_needed = 0, uses_anonymous_args = 0
 586:LWIP/Target/ethernetif.c ****   LWIP_ASSERT("netif != NULL", (netif != NULL));
 1483              		.loc 1 586 1 is_stmt 0 view .LVU411
 1484 0000 10B5     		push	{r4, lr}
 1485              	.LCFI21:
 1486              		.cfi_def_cfa_offset 8
 1487              		.cfi_offset 4, -8
 1488              		.cfi_offset 14, -4
 587:LWIP/Target/ethernetif.c **** 
 1489              		.loc 1 587 3 is_stmt 1 view .LVU412
 587:LWIP/Target/ethernetif.c **** 
 1490              		.loc 1 587 3 view .LVU413
 1491 0002 0446     		mov	r4, r0
 1492 0004 70B1     		cbz	r0, .L90
 1493              	.LVL126:
 1494              	.L88:
 587:LWIP/Target/ethernetif.c **** 
 1495              		.loc 1 587 3 discriminator 3 view .LVU414
 587:LWIP/Target/ethernetif.c **** 
 1496              		.loc 1 587 3 discriminator 3 view .LVU415
 594:LWIP/Target/ethernetif.c ****   netif->name[1] = IFNAME1;
 1497              		.loc 1 594 3 discriminator 3 view .LVU416
 594:LWIP/Target/ethernetif.c ****   netif->name[1] = IFNAME1;
 1498              		.loc 1 594 18 is_stmt 0 discriminator 3 view .LVU417
 1499 0006 7323     		movs	r3, #115
 1500 0008 84F82E30 		strb	r3, [r4, #46]
 595:LWIP/Target/ethernetif.c ****   /* We directly use etharp_output() here to save a function call.
 1501              		.loc 1 595 3 is_stmt 1 discriminator 3 view .LVU418
 595:LWIP/Target/ethernetif.c ****   /* We directly use etharp_output() here to save a function call.
 1502              		.loc 1 595 18 is_stmt 0 discriminator 3 view .LVU419
 1503 000c 7423     		movs	r3, #116
 1504 000e 84F82F30 		strb	r3, [r4, #47]
 604:LWIP/Target/ethernetif.c **** #else
 1505              		.loc 1 604 3 is_stmt 1 discriminator 3 view .LVU420
 604:LWIP/Target/ethernetif.c **** #else
 1506              		.loc 1 604 17 is_stmt 0 discriminator 3 view .LVU421
 1507 0012 084B     		ldr	r3, .L91
 1508 0014 6361     		str	r3, [r4, #20]
 616:LWIP/Target/ethernetif.c **** 
 1509              		.loc 1 616 3 is_stmt 1 discriminator 3 view .LVU422
 616:LWIP/Target/ethernetif.c **** 
 1510              		.loc 1 616 21 is_stmt 0 discriminator 3 view .LVU423
 1511 0016 084B     		ldr	r3, .L91+4
 1512 0018 A361     		str	r3, [r4, #24]
 619:LWIP/Target/ethernetif.c **** 
 1513              		.loc 1 619 3 is_stmt 1 discriminator 3 view .LVU424
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 108


 1514 001a 2046     		mov	r0, r4
 1515 001c FFF7FEFF 		bl	low_level_init
 1516              	.LVL127:
 621:LWIP/Target/ethernetif.c **** }
 1517              		.loc 1 621 3 discriminator 3 view .LVU425
 622:LWIP/Target/ethernetif.c **** 
 1518              		.loc 1 622 1 is_stmt 0 discriminator 3 view .LVU426
 1519 0020 0020     		movs	r0, #0
 1520 0022 10BD     		pop	{r4, pc}
 1521              	.LVL128:
 1522              	.L90:
 587:LWIP/Target/ethernetif.c **** 
 1523              		.loc 1 587 3 is_stmt 1 discriminator 1 view .LVU427
 587:LWIP/Target/ethernetif.c **** 
 1524              		.loc 1 587 3 discriminator 1 view .LVU428
 1525 0024 054B     		ldr	r3, .L91+8
 1526 0026 40F24B22 		movw	r2, #587
 1527 002a 0549     		ldr	r1, .L91+12
 1528 002c 0548     		ldr	r0, .L91+16
 1529              	.LVL129:
 587:LWIP/Target/ethernetif.c **** 
 1530              		.loc 1 587 3 is_stmt 0 discriminator 1 view .LVU429
 1531 002e FFF7FEFF 		bl	printf
 1532              	.LVL130:
 1533 0032 E8E7     		b	.L88
 1534              	.L92:
 1535              		.align	2
 1536              	.L91:
 1537 0034 00000000 		.word	etharp_output
 1538 0038 00000000 		.word	low_level_output
 1539 003c 00000000 		.word	.LC3
 1540 0040 1C000000 		.word	.LC4
 1541 0044 2C000000 		.word	.LC5
 1542              		.cfi_endproc
 1543              	.LFE371:
 1545              		.section	.text.sys_jiffies,"ax",%progbits
 1546              		.align	1
 1547              		.global	sys_jiffies
 1548              		.syntax unified
 1549              		.thumb
 1550              		.thumb_func
 1552              	sys_jiffies:
 1553              	.LFB373:
 645:LWIP/Target/ethernetif.c ****   return HAL_GetTick();
 1554              		.loc 1 645 1 is_stmt 1 view -0
 1555              		.cfi_startproc
 1556              		@ args = 0, pretend = 0, frame = 0
 1557              		@ frame_needed = 0, uses_anonymous_args = 0
 1558 0000 08B5     		push	{r3, lr}
 1559              	.LCFI22:
 1560              		.cfi_def_cfa_offset 8
 1561              		.cfi_offset 3, -8
 1562              		.cfi_offset 14, -4
 646:LWIP/Target/ethernetif.c **** }
 1563              		.loc 1 646 3 view .LVU431
 646:LWIP/Target/ethernetif.c **** }
 1564              		.loc 1 646 10 is_stmt 0 view .LVU432
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 109


 1565 0002 FFF7FEFF 		bl	HAL_GetTick
 1566              	.LVL131:
 647:LWIP/Target/ethernetif.c **** 
 1567              		.loc 1 647 1 view .LVU433
 1568 0006 08BD     		pop	{r3, pc}
 1569              		.cfi_endproc
 1570              	.LFE373:
 1572              		.section	.text.sys_now,"ax",%progbits
 1573              		.align	1
 1574              		.global	sys_now
 1575              		.syntax unified
 1576              		.thumb
 1577              		.thumb_func
 1579              	sys_now:
 1580              	.LFB374:
 656:LWIP/Target/ethernetif.c ****   return HAL_GetTick();
 1581              		.loc 1 656 1 is_stmt 1 view -0
 1582              		.cfi_startproc
 1583              		@ args = 0, pretend = 0, frame = 0
 1584              		@ frame_needed = 0, uses_anonymous_args = 0
 1585 0000 08B5     		push	{r3, lr}
 1586              	.LCFI23:
 1587              		.cfi_def_cfa_offset 8
 1588              		.cfi_offset 3, -8
 1589              		.cfi_offset 14, -4
 657:LWIP/Target/ethernetif.c **** }
 1590              		.loc 1 657 3 view .LVU435
 657:LWIP/Target/ethernetif.c **** }
 1591              		.loc 1 657 10 is_stmt 0 view .LVU436
 1592 0002 FFF7FEFF 		bl	HAL_GetTick
 1593              	.LVL132:
 658:LWIP/Target/ethernetif.c **** 
 1594              		.loc 1 658 1 view .LVU437
 1595 0006 08BD     		pop	{r3, pc}
 1596              		.cfi_endproc
 1597              	.LFE374:
 1599              		.section	.text.ethernet_link_thread,"ax",%progbits
 1600              		.align	1
 1601              		.global	ethernet_link_thread
 1602              		.syntax unified
 1603              		.thumb
 1604              		.thumb_func
 1606              	ethernet_link_thread:
 1607              	.LVL133:
 1608              	.LFB380:
 734:LWIP/Target/ethernetif.c **** 
 735:LWIP/Target/ethernetif.c **** /**
 736:LWIP/Target/ethernetif.c ****   * @brief  Check the ETH link state then update ETH driver and netif link accordingly.
 737:LWIP/Target/ethernetif.c ****   * @param  argument: netif
 738:LWIP/Target/ethernetif.c ****   * @retval None
 739:LWIP/Target/ethernetif.c ****   */
 740:LWIP/Target/ethernetif.c **** 
 741:LWIP/Target/ethernetif.c **** void ethernet_link_thread(void const * argument)
 742:LWIP/Target/ethernetif.c **** {
 1609              		.loc 1 742 1 is_stmt 1 view -0
 1610              		.cfi_startproc
 1611              		@ args = 0, pretend = 0, frame = 104
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 110


 1612              		@ frame_needed = 0, uses_anonymous_args = 0
 1613              		.loc 1 742 1 is_stmt 0 view .LVU439
 1614 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1615              	.LCFI24:
 1616              		.cfi_def_cfa_offset 24
 1617              		.cfi_offset 4, -24
 1618              		.cfi_offset 5, -20
 1619              		.cfi_offset 6, -16
 1620              		.cfi_offset 7, -12
 1621              		.cfi_offset 8, -8
 1622              		.cfi_offset 14, -4
 1623 0004 9AB0     		sub	sp, sp, #104
 1624              	.LCFI25:
 1625              		.cfi_def_cfa_offset 128
 1626 0006 0446     		mov	r4, r0
 743:LWIP/Target/ethernetif.c ****   ETH_MACConfigTypeDef MACConf;
 1627              		.loc 1 743 3 is_stmt 1 view .LVU440
 744:LWIP/Target/ethernetif.c ****   int32_t PHYLinkState;
 1628              		.loc 1 744 3 view .LVU441
 745:LWIP/Target/ethernetif.c ****   uint32_t linkchanged = 0, speed = 0, duplex =0;
 1629              		.loc 1 745 3 view .LVU442
 1630              	.LVL134:
 746:LWIP/Target/ethernetif.c **** 
 747:LWIP/Target/ethernetif.c ****   struct netif *netif = (struct netif *) argument;
 1631              		.loc 1 747 3 view .LVU443
 745:LWIP/Target/ethernetif.c ****   uint32_t linkchanged = 0, speed = 0, duplex =0;
 1632              		.loc 1 745 40 is_stmt 0 view .LVU444
 1633 0008 0026     		movs	r6, #0
 745:LWIP/Target/ethernetif.c ****   uint32_t linkchanged = 0, speed = 0, duplex =0;
 1634              		.loc 1 745 29 view .LVU445
 1635 000a 3746     		mov	r7, r6
 745:LWIP/Target/ethernetif.c ****   uint32_t linkchanged = 0, speed = 0, duplex =0;
 1636              		.loc 1 745 12 view .LVU446
 1637 000c 3546     		mov	r5, r6
 1638 000e 0BE0     		b	.L106
 1639              	.LVL135:
 1640              	.L109:
 748:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN ETH link init */
 749:LWIP/Target/ethernetif.c **** 
 750:LWIP/Target/ethernetif.c **** /* USER CODE END ETH link init */
 751:LWIP/Target/ethernetif.c **** 
 752:LWIP/Target/ethernetif.c ****   for(;;)
 753:LWIP/Target/ethernetif.c ****   {
 754:LWIP/Target/ethernetif.c ****   PHYLinkState = LAN8742_GetLinkState(&LAN8742);
 755:LWIP/Target/ethernetif.c **** 
 756:LWIP/Target/ethernetif.c ****   if(netif_is_link_up(netif) && (PHYLinkState <= LAN8742_STATUS_LINK_DOWN))
 757:LWIP/Target/ethernetif.c ****   {
 758:LWIP/Target/ethernetif.c ****     HAL_ETH_Stop_IT(&heth);
 1641              		.loc 1 758 5 is_stmt 1 view .LVU447
 1642 0010 2648     		ldr	r0, .L110
 1643              	.LVL136:
 1644              		.loc 1 758 5 is_stmt 0 view .LVU448
 1645 0012 FFF7FEFF 		bl	HAL_ETH_Stop_IT
 1646              	.LVL137:
 759:LWIP/Target/ethernetif.c ****     netif_set_down(netif);
 1647              		.loc 1 759 5 is_stmt 1 view .LVU449
 1648 0016 2046     		mov	r0, r4
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 111


 1649 0018 FFF7FEFF 		bl	netif_set_down
 1650              	.LVL138:
 760:LWIP/Target/ethernetif.c ****     netif_set_link_down(netif);
 1651              		.loc 1 760 5 view .LVU450
 1652 001c 2046     		mov	r0, r4
 1653 001e FFF7FEFF 		bl	netif_set_link_down
 1654              	.LVL139:
 1655              	.L99:
 761:LWIP/Target/ethernetif.c ****   }
 762:LWIP/Target/ethernetif.c ****   else if(!netif_is_link_up(netif) && (PHYLinkState > LAN8742_STATUS_LINK_DOWN))
 763:LWIP/Target/ethernetif.c ****   {
 764:LWIP/Target/ethernetif.c ****     switch (PHYLinkState)
 765:LWIP/Target/ethernetif.c ****     {
 766:LWIP/Target/ethernetif.c ****     case LAN8742_STATUS_100MBITS_FULLDUPLEX:
 767:LWIP/Target/ethernetif.c ****       duplex = ETH_FULLDUPLEX_MODE;
 768:LWIP/Target/ethernetif.c ****       speed = ETH_SPEED_100M;
 769:LWIP/Target/ethernetif.c ****       linkchanged = 1;
 770:LWIP/Target/ethernetif.c ****       break;
 771:LWIP/Target/ethernetif.c ****     case LAN8742_STATUS_100MBITS_HALFDUPLEX:
 772:LWIP/Target/ethernetif.c ****       duplex = ETH_HALFDUPLEX_MODE;
 773:LWIP/Target/ethernetif.c ****       speed = ETH_SPEED_100M;
 774:LWIP/Target/ethernetif.c ****       linkchanged = 1;
 775:LWIP/Target/ethernetif.c ****       break;
 776:LWIP/Target/ethernetif.c ****     case LAN8742_STATUS_10MBITS_FULLDUPLEX:
 777:LWIP/Target/ethernetif.c ****       duplex = ETH_FULLDUPLEX_MODE;
 778:LWIP/Target/ethernetif.c ****       speed = ETH_SPEED_10M;
 779:LWIP/Target/ethernetif.c ****       linkchanged = 1;
 780:LWIP/Target/ethernetif.c ****       break;
 781:LWIP/Target/ethernetif.c ****     case LAN8742_STATUS_10MBITS_HALFDUPLEX:
 782:LWIP/Target/ethernetif.c ****       duplex = ETH_HALFDUPLEX_MODE;
 783:LWIP/Target/ethernetif.c ****       speed = ETH_SPEED_10M;
 784:LWIP/Target/ethernetif.c ****       linkchanged = 1;
 785:LWIP/Target/ethernetif.c ****       break;
 786:LWIP/Target/ethernetif.c ****     default:
 787:LWIP/Target/ethernetif.c ****       break;
 788:LWIP/Target/ethernetif.c ****     }
 789:LWIP/Target/ethernetif.c **** 
 790:LWIP/Target/ethernetif.c ****     if(linkchanged)
 791:LWIP/Target/ethernetif.c ****     {
 792:LWIP/Target/ethernetif.c ****       /* Get MAC Config MAC */
 793:LWIP/Target/ethernetif.c ****       HAL_ETH_GetMACConfig(&heth, &MACConf);
 794:LWIP/Target/ethernetif.c ****       MACConf.DuplexMode = duplex;
 795:LWIP/Target/ethernetif.c ****       MACConf.Speed = speed;
 796:LWIP/Target/ethernetif.c ****       HAL_ETH_SetMACConfig(&heth, &MACConf);
 797:LWIP/Target/ethernetif.c **** 
 798:LWIP/Target/ethernetif.c ****       HAL_ETH_Start_IT(&heth);
 799:LWIP/Target/ethernetif.c ****       netif_set_up(netif);
 800:LWIP/Target/ethernetif.c ****       netif_set_link_up(netif);
 801:LWIP/Target/ethernetif.c ****     }
 802:LWIP/Target/ethernetif.c ****   }
 803:LWIP/Target/ethernetif.c **** 
 804:LWIP/Target/ethernetif.c **** /* USER CODE BEGIN ETH link Thread core code for User BSP */
 805:LWIP/Target/ethernetif.c **** 
 806:LWIP/Target/ethernetif.c **** /* USER CODE END ETH link Thread core code for User BSP */
 807:LWIP/Target/ethernetif.c **** 
 808:LWIP/Target/ethernetif.c ****     osDelay(100);
 1656              		.loc 1 808 5 view .LVU451
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 112


 1657 0022 6420     		movs	r0, #100
 1658 0024 FFF7FEFF 		bl	osDelay
 1659              	.LVL140:
 752:LWIP/Target/ethernetif.c ****   {
 1660              		.loc 1 752 8 view .LVU452
 1661              	.L106:
 752:LWIP/Target/ethernetif.c ****   {
 1662              		.loc 1 752 3 view .LVU453
 754:LWIP/Target/ethernetif.c **** 
 1663              		.loc 1 754 3 view .LVU454
 754:LWIP/Target/ethernetif.c **** 
 1664              		.loc 1 754 18 is_stmt 0 view .LVU455
 1665 0028 2148     		ldr	r0, .L110+4
 1666 002a FFF7FEFF 		bl	LAN8742_GetLinkState
 1667              	.LVL141:
 756:LWIP/Target/ethernetif.c ****   {
 1668              		.loc 1 756 3 is_stmt 1 view .LVU456
 756:LWIP/Target/ethernetif.c ****   {
 1669              		.loc 1 756 6 is_stmt 0 view .LVU457
 1670 002e 94F82D30 		ldrb	r3, [r4, #45]	@ zero_extendqisi2
 756:LWIP/Target/ethernetif.c ****   {
 1671              		.loc 1 756 5 view .LVU458
 1672 0032 13F0040F 		tst	r3, #4
 1673 0036 01D0     		beq	.L98
 756:LWIP/Target/ethernetif.c ****   {
 1674              		.loc 1 756 30 discriminator 1 view .LVU459
 1675 0038 0128     		cmp	r0, #1
 1676 003a E9DD     		ble	.L109
 1677              	.L98:
 762:LWIP/Target/ethernetif.c ****   {
 1678              		.loc 1 762 8 is_stmt 1 view .LVU460
 762:LWIP/Target/ethernetif.c ****   {
 1679              		.loc 1 762 10 is_stmt 0 view .LVU461
 1680 003c 13F0040F 		tst	r3, #4
 1681 0040 EFD1     		bne	.L99
 762:LWIP/Target/ethernetif.c ****   {
 1682              		.loc 1 762 36 discriminator 1 view .LVU462
 1683 0042 0128     		cmp	r0, #1
 1684 0044 EDDD     		ble	.L99
 764:LWIP/Target/ethernetif.c ****     {
 1685              		.loc 1 764 5 is_stmt 1 view .LVU463
 1686 0046 0238     		subs	r0, r0, #2
 1687              	.LVL142:
 764:LWIP/Target/ethernetif.c ****     {
 1688              		.loc 1 764 5 is_stmt 0 view .LVU464
 1689 0048 0328     		cmp	r0, #3
 1690 004a 16D8     		bhi	.L105
 1691 004c DFE800F0 		tbb	[pc, r0]
 1692              	.L102:
 1693 0050 10       		.byte	(.L107-.L102)/2
 1694 0051 02       		.byte	(.L104-.L102)/2
 1695 0052 07       		.byte	(.L103-.L102)/2
 1696 0053 0C       		.byte	(.L101-.L102)/2
 1697              		.p2align 1
 1698              	.L104:
 772:LWIP/Target/ethernetif.c ****       speed = ETH_SPEED_100M;
 1699              		.loc 1 772 7 is_stmt 1 view .LVU465
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 113


 1700              	.LVL143:
 773:LWIP/Target/ethernetif.c ****       linkchanged = 1;
 1701              		.loc 1 773 7 view .LVU466
 774:LWIP/Target/ethernetif.c ****       break;
 1702              		.loc 1 774 7 view .LVU467
 775:LWIP/Target/ethernetif.c ****     case LAN8742_STATUS_10MBITS_FULLDUPLEX:
 1703              		.loc 1 775 7 view .LVU468
 772:LWIP/Target/ethernetif.c ****       speed = ETH_SPEED_100M;
 1704              		.loc 1 772 14 is_stmt 0 view .LVU469
 1705 0054 0026     		movs	r6, #0
 773:LWIP/Target/ethernetif.c ****       linkchanged = 1;
 1706              		.loc 1 773 13 view .LVU470
 1707 0056 4FF48047 		mov	r7, #16384
 774:LWIP/Target/ethernetif.c ****       break;
 1708              		.loc 1 774 19 view .LVU471
 1709 005a 0125     		movs	r5, #1
 775:LWIP/Target/ethernetif.c ****     case LAN8742_STATUS_10MBITS_FULLDUPLEX:
 1710              		.loc 1 775 7 view .LVU472
 1711 005c 0DE0     		b	.L105
 1712              	.LVL144:
 1713              	.L103:
 777:LWIP/Target/ethernetif.c ****       speed = ETH_SPEED_10M;
 1714              		.loc 1 777 7 is_stmt 1 view .LVU473
 778:LWIP/Target/ethernetif.c ****       linkchanged = 1;
 1715              		.loc 1 778 7 view .LVU474
 779:LWIP/Target/ethernetif.c ****       break;
 1716              		.loc 1 779 7 view .LVU475
 780:LWIP/Target/ethernetif.c ****     case LAN8742_STATUS_10MBITS_HALFDUPLEX:
 1717              		.loc 1 780 7 view .LVU476
 777:LWIP/Target/ethernetif.c ****       speed = ETH_SPEED_10M;
 1718              		.loc 1 777 14 is_stmt 0 view .LVU477
 1719 005e 4FF40056 		mov	r6, #8192
 778:LWIP/Target/ethernetif.c ****       linkchanged = 1;
 1720              		.loc 1 778 13 view .LVU478
 1721 0062 0027     		movs	r7, #0
 779:LWIP/Target/ethernetif.c ****       break;
 1722              		.loc 1 779 19 view .LVU479
 1723 0064 0125     		movs	r5, #1
 780:LWIP/Target/ethernetif.c ****     case LAN8742_STATUS_10MBITS_HALFDUPLEX:
 1724              		.loc 1 780 7 view .LVU480
 1725 0066 08E0     		b	.L105
 1726              	.LVL145:
 1727              	.L101:
 782:LWIP/Target/ethernetif.c ****       speed = ETH_SPEED_10M;
 1728              		.loc 1 782 7 is_stmt 1 view .LVU481
 783:LWIP/Target/ethernetif.c ****       linkchanged = 1;
 1729              		.loc 1 783 7 view .LVU482
 784:LWIP/Target/ethernetif.c ****       break;
 1730              		.loc 1 784 7 view .LVU483
 785:LWIP/Target/ethernetif.c ****     default:
 1731              		.loc 1 785 7 view .LVU484
 782:LWIP/Target/ethernetif.c ****       speed = ETH_SPEED_10M;
 1732              		.loc 1 782 14 is_stmt 0 view .LVU485
 1733 0068 0026     		movs	r6, #0
 783:LWIP/Target/ethernetif.c ****       linkchanged = 1;
 1734              		.loc 1 783 13 view .LVU486
 1735 006a 3746     		mov	r7, r6
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 114


 784:LWIP/Target/ethernetif.c ****       break;
 1736              		.loc 1 784 19 view .LVU487
 1737 006c 0125     		movs	r5, #1
 785:LWIP/Target/ethernetif.c ****     default:
 1738              		.loc 1 785 7 view .LVU488
 1739 006e 04E0     		b	.L105
 1740              	.LVL146:
 1741              	.L107:
 767:LWIP/Target/ethernetif.c ****       speed = ETH_SPEED_100M;
 1742              		.loc 1 767 14 view .LVU489
 1743 0070 4FF40056 		mov	r6, #8192
 1744              	.LVL147:
 768:LWIP/Target/ethernetif.c ****       linkchanged = 1;
 1745              		.loc 1 768 13 view .LVU490
 1746 0074 4FF48047 		mov	r7, #16384
 1747              	.LVL148:
 769:LWIP/Target/ethernetif.c ****       break;
 1748              		.loc 1 769 19 view .LVU491
 1749 0078 0125     		movs	r5, #1
 1750              	.LVL149:
 1751              	.L105:
 790:LWIP/Target/ethernetif.c ****     {
 1752              		.loc 1 790 5 is_stmt 1 view .LVU492
 790:LWIP/Target/ethernetif.c ****     {
 1753              		.loc 1 790 7 is_stmt 0 view .LVU493
 1754 007a 002D     		cmp	r5, #0
 1755 007c D1D0     		beq	.L99
 793:LWIP/Target/ethernetif.c ****       MACConf.DuplexMode = duplex;
 1756              		.loc 1 793 7 is_stmt 1 view .LVU494
 1757 007e DFF82C80 		ldr	r8, .L110
 1758 0082 01A9     		add	r1, sp, #4
 1759 0084 4046     		mov	r0, r8
 1760              	.LVL150:
 793:LWIP/Target/ethernetif.c ****       MACConf.DuplexMode = duplex;
 1761              		.loc 1 793 7 is_stmt 0 view .LVU495
 1762 0086 FFF7FEFF 		bl	HAL_ETH_GetMACConfig
 1763              	.LVL151:
 794:LWIP/Target/ethernetif.c ****       MACConf.Speed = speed;
 1764              		.loc 1 794 7 is_stmt 1 view .LVU496
 794:LWIP/Target/ethernetif.c ****       MACConf.Speed = speed;
 1765              		.loc 1 794 26 is_stmt 0 view .LVU497
 1766 008a 0796     		str	r6, [sp, #28]
 795:LWIP/Target/ethernetif.c ****       HAL_ETH_SetMACConfig(&heth, &MACConf);
 1767              		.loc 1 795 7 is_stmt 1 view .LVU498
 795:LWIP/Target/ethernetif.c ****       HAL_ETH_SetMACConfig(&heth, &MACConf);
 1768              		.loc 1 795 21 is_stmt 0 view .LVU499
 1769 008c 0697     		str	r7, [sp, #24]
 796:LWIP/Target/ethernetif.c **** 
 1770              		.loc 1 796 7 is_stmt 1 view .LVU500
 1771 008e 01A9     		add	r1, sp, #4
 1772 0090 4046     		mov	r0, r8
 1773 0092 FFF7FEFF 		bl	HAL_ETH_SetMACConfig
 1774              	.LVL152:
 798:LWIP/Target/ethernetif.c ****       netif_set_up(netif);
 1775              		.loc 1 798 7 view .LVU501
 1776 0096 4046     		mov	r0, r8
 1777 0098 FFF7FEFF 		bl	HAL_ETH_Start_IT
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 115


 1778              	.LVL153:
 799:LWIP/Target/ethernetif.c ****       netif_set_link_up(netif);
 1779              		.loc 1 799 7 view .LVU502
 1780 009c 2046     		mov	r0, r4
 1781 009e FFF7FEFF 		bl	netif_set_up
 1782              	.LVL154:
 800:LWIP/Target/ethernetif.c ****     }
 1783              		.loc 1 800 7 view .LVU503
 1784 00a2 2046     		mov	r0, r4
 1785 00a4 FFF7FEFF 		bl	netif_set_link_up
 1786              	.LVL155:
 1787 00a8 BBE7     		b	.L99
 1788              	.L111:
 1789 00aa 00BF     		.align	2
 1790              	.L110:
 1791 00ac 00000000 		.word	.LANCHOR0
 1792 00b0 00000000 		.word	.LANCHOR8
 1793              		.cfi_endproc
 1794              	.LFE380:
 1796              		.global	LAN8742_IOCtx
 1797              		.global	LAN8742
 1798              		.global	memp_RX_POOL
 1799              		.global	memp_memory_RX_POOL_base
 1800              		.global	TxConfig
 1801              		.global	heth
 1802              		.global	RxPktSemaphore
 1803              		.global	Rx_Buff
 1804              		.global	DMATxDscrTab
 1805              		.global	DMARxDscrTab
 1806              		.section	.rodata
 1807              		.align	2
 1808              		.set	.LANCHOR6,. + 0
 1809              	.LC2:
 1810 0000 00000000 		.word	.LC0
 1811 0004 00000000 		.word	ethernetif_input
 1812 0008 0300     		.short	3
 1813 000a 0000     		.space	2
 1814 000c 00000000 		.word	0
 1815 0010 5E010000 		.word	350
 1816 0014 00000000 		.word	0
 1817 0018 00000000 		.word	0
 1818              		.section	.RxArraySection,"aw"
 1819              		.align	2
 1822              	Rx_Buff:
 1823 0000 00000000 		.space	6096
 1823      00000000 
 1823      00000000 
 1823      00000000 
 1823      00000000 
 1824              		.section	.RxDecripSection,"aw"
 1825              		.align	2
 1826              		.set	.LANCHOR5,. + 0
 1829              	DMARxDscrTab:
 1830 0000 00000000 		.space	96
 1830      00000000 
 1830      00000000 
 1830      00000000 
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 116


 1830      00000000 
 1831              		.section	.TxDecripSection,"aw"
 1832              		.align	2
 1833              		.set	.LANCHOR4,. + 0
 1836              	DMATxDscrTab:
 1837 0000 00000000 		.space	96
 1837      00000000 
 1837      00000000 
 1837      00000000 
 1837      00000000 
 1838              		.section	.bss.LAN8742,"aw",%nobits
 1839              		.align	2
 1840              		.set	.LANCHOR8,. + 0
 1843              	LAN8742:
 1844 0000 00000000 		.space	32
 1844      00000000 
 1844      00000000 
 1844      00000000 
 1844      00000000 
 1845              		.section	.bss.RxPktSemaphore,"aw",%nobits
 1846              		.align	2
 1847              		.set	.LANCHOR2,. + 0
 1850              	RxPktSemaphore:
 1851 0000 00000000 		.space	4
 1852              		.section	.bss.TxConfig,"aw",%nobits
 1853              		.align	2
 1854              		.set	.LANCHOR3,. + 0
 1857              	TxConfig:
 1858 0000 00000000 		.space	52
 1858      00000000 
 1858      00000000 
 1858      00000000 
 1858      00000000 
 1859              		.section	.bss.heth,"aw",%nobits
 1860              		.align	2
 1861              		.set	.LANCHOR0,. + 0
 1864              	heth:
 1865 0000 00000000 		.space	136
 1865      00000000 
 1865      00000000 
 1865      00000000 
 1865      00000000 
 1866              		.section	.bss.memp_memory_RX_POOL_base,"aw",%nobits
 1867              		.align	2
 1870              	memp_memory_RX_POOL_base:
 1871 0000 00000000 		.space	203
 1871      00000000 
 1871      00000000 
 1871      00000000 
 1871      00000000 
 1872              		.section	.bss.memp_tab_RX_POOL,"aw",%nobits
 1873              		.align	2
 1876              	memp_tab_RX_POOL:
 1877 0000 00000000 		.space	4
 1878              		.section	.data.LAN8742_IOCtx,"aw"
 1879              		.align	2
 1880              		.set	.LANCHOR7,. + 0
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 117


 1883              	LAN8742_IOCtx:
 1884 0000 00000000 		.word	ETH_PHY_IO_Init
 1885 0004 00000000 		.word	ETH_PHY_IO_DeInit
 1886 0008 00000000 		.word	ETH_PHY_IO_WriteReg
 1887 000c 00000000 		.word	ETH_PHY_IO_ReadReg
 1888 0010 00000000 		.word	ETH_PHY_IO_GetTick
 1889              		.section	.rodata.memp_RX_POOL,"a"
 1890              		.align	2
 1891              		.set	.LANCHOR1,. + 0
 1894              	memp_RX_POOL:
 1895 0000 1400     		.short	20
 1896 0002 0A00     		.short	10
 1897 0004 00000000 		.word	memp_memory_RX_POOL_base
 1898 0008 00000000 		.word	memp_tab_RX_POOL
 1899              		.text
 1900              	.Letext0:
 1901              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1902              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1903              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 1904              		.file 7 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 1905              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 1906              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 1907              		.file 10 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_eth.h"
 1908              		.file 11 "Middlewares/Third_Party/LwIP/src/include/lwip/arch.h"
 1909              		.file 12 "Middlewares/Third_Party/LwIP/src/include/lwip/err.h"
 1910              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 1911              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 1912              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 1913              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 1914              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 1915              		.file 18 "Middlewares/Third_Party/LwIP/src/include/lwip/pbuf.h"
 1916              		.file 19 "Middlewares/Third_Party/LwIP/src/include/lwip/ip4_addr.h"
 1917              		.file 20 "Middlewares/Third_Party/LwIP/src/include/lwip/ip_addr.h"
 1918              		.file 21 "Middlewares/Third_Party/LwIP/src/include/lwip/memp.h"
 1919              		.file 22 "Middlewares/Third_Party/LwIP/src/include/lwip/priv/memp_priv.h"
 1920              		.file 23 "Middlewares/Third_Party/LwIP/src/include/lwip/netif.h"
 1921              		.file 24 "Drivers/BSP/Components/lan8742/lan8742.h"
 1922              		.file 25 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 1923              		.file 26 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\
 1924              		.file 27 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_cortex.h"
 1925              		.file 28 "<built-in>"
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 118


DEFINED SYMBOLS
                            *ABS*:00000000 ethernetif.c
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:16     .rodata.str1.4:00000000 $d
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:23     .text.ETH_PHY_IO_DeInit:00000000 $t
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:29     .text.ETH_PHY_IO_DeInit:00000000 ETH_PHY_IO_DeInit
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:45     .text.low_level_input:00000000 $t
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:50     .text.low_level_input:00000000 low_level_input
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:272    .text.low_level_input:000000a4 $d
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:851    .text.pbuf_free_custom:00000000 pbuf_free_custom
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:280    .text.ethernetif_input:00000000 $t
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:286    .text.ethernetif_input:00000000 ethernetif_input
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:355    .text.ethernetif_input:00000038 $d
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:360    .text.low_level_output:00000000 $t
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:365    .text.low_level_output:00000000 low_level_output
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:504    .text.low_level_output:00000088 $d
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:510    .text.low_level_init:00000000 $t
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:515    .text.low_level_init:00000000 low_level_init
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:830    .text.low_level_init:00000178 $d
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1822   .RxArraySection:00000000 Rx_Buff
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:845    .text.pbuf_free_custom:00000000 $t
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:878    .text.pbuf_free_custom:0000000c $d
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:883    .text.ETH_PHY_IO_GetTick:00000000 $t
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:889    .text.ETH_PHY_IO_GetTick:00000000 ETH_PHY_IO_GetTick
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:910    .text.ETH_PHY_IO_Init:00000000 $t
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:916    .text.ETH_PHY_IO_Init:00000000 ETH_PHY_IO_Init
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:938    .text.ETH_PHY_IO_Init:0000000c $d
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:943    .text.ETH_PHY_IO_ReadReg:00000000 $t
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:949    .text.ETH_PHY_IO_ReadReg:00000000 ETH_PHY_IO_ReadReg
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:988    .text.ETH_PHY_IO_ReadReg:00000018 $d
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:993    .text.ETH_PHY_IO_WriteReg:00000000 $t
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:999    .text.ETH_PHY_IO_WriteReg:00000000 ETH_PHY_IO_WriteReg
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1038   .text.ETH_PHY_IO_WriteReg:00000018 $d
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1043   .text.HAL_ETH_MspInit:00000000 $t
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1049   .text.HAL_ETH_MspInit:00000000 HAL_ETH_MspInit
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1328   .text.HAL_ETH_MspInit:00000160 $d
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1338   .text.HAL_ETH_MspDeInit:00000000 $t
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1344   .text.HAL_ETH_MspDeInit:00000000 HAL_ETH_MspDeInit
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1414   .text.HAL_ETH_MspDeInit:00000060 $d
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1424   .text.HAL_ETH_RxCpltCallback:00000000 $t
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1430   .text.HAL_ETH_RxCpltCallback:00000000 HAL_ETH_RxCpltCallback
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1455   .text.HAL_ETH_RxCpltCallback:0000000c $d
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1460   .rodata.ethernetif_init.str1.4:00000000 $d
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1470   .text.ethernetif_init:00000000 $t
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1476   .text.ethernetif_init:00000000 ethernetif_init
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1537   .text.ethernetif_init:00000034 $d
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1546   .text.sys_jiffies:00000000 $t
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1552   .text.sys_jiffies:00000000 sys_jiffies
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1573   .text.sys_now:00000000 $t
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1579   .text.sys_now:00000000 sys_now
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1600   .text.ethernet_link_thread:00000000 $t
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1606   .text.ethernet_link_thread:00000000 ethernet_link_thread
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1693   .text.ethernet_link_thread:00000050 $d
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1697   .text.ethernet_link_thread:00000054 $t
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1791   .text.ethernet_link_thread:000000ac $d
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1883   .data.LAN8742_IOCtx:00000000 LAN8742_IOCtx
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1843   .bss.LAN8742:00000000 LAN8742
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1894   .rodata.memp_RX_POOL:00000000 memp_RX_POOL
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 119


C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1870   .bss.memp_memory_RX_POOL_base:00000000 memp_memory_RX_POOL_base
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1857   .bss.TxConfig:00000000 TxConfig
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1864   .bss.heth:00000000 heth
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1850   .bss.RxPktSemaphore:00000000 RxPktSemaphore
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1836   .TxDecripSection:00000000 DMATxDscrTab
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1829   .RxDecripSection:00000000 DMARxDscrTab
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1807   .rodata:00000000 $d
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1819   .RxArraySection:00000000 $d
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1825   .RxDecripSection:00000000 $d
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1832   .TxDecripSection:00000000 $d
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1839   .bss.LAN8742:00000000 $d
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1846   .bss.RxPktSemaphore:00000000 $d
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1853   .bss.TxConfig:00000000 $d
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1860   .bss.heth:00000000 $d
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1867   .bss.memp_memory_RX_POOL_base:00000000 $d
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1873   .bss.memp_tab_RX_POOL:00000000 $d
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1876   .bss.memp_tab_RX_POOL:00000000 memp_tab_RX_POOL
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1879   .data.LAN8742_IOCtx:00000000 $d
C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s:1890   .rodata.memp_RX_POOL:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_ETH_GetRxDataBuffer
HAL_ETH_GetRxDataLength
HAL_ETH_BuildRxDescriptors
memp_malloc_pool
pbuf_alloced_custom
osSemaphoreWait
pbuf_free
HAL_ETH_Transmit
HAL_ETH_Init
memp_init_pool
HAL_ETH_DescAssignMemory
osSemaphoreCreate
osThreadCreate
LAN8742_RegisterBusIO
LAN8742_Init
LAN8742_GetLinkState
HAL_ETH_GetMACConfig
HAL_ETH_SetMACConfig
HAL_ETH_Start_IT
netif_set_up
netif_set_link_up
netif_set_link_down
netif_set_down
Error_Handler
memp_free_pool
HAL_GetTick
HAL_ETH_SetMDIOClockRange
HAL_ETH_ReadPHYRegister
HAL_ETH_WritePHYRegister
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_WritePin
HAL_Delay
HAL_GPIO_DeInit
ARM GAS  C:\Users\zdy\AppData\Local\Temp\ccmU41eV.s 			page 120


HAL_NVIC_DisableIRQ
osSemaphoreRelease
printf
etharp_output
HAL_ETH_Stop_IT
osDelay
