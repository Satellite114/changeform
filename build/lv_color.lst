ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_color.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "lvgl/src/misc/lv_color.c"
  19              		.section	.text.lv_color_to32,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	lv_color_to32:
  26              	.LVL0:
  27              	.LFB5:
  28              		.file 2 "lvgl/src/misc/lv_color.h"
   1:lvgl/src/misc/lv_color.h **** /**
   2:lvgl/src/misc/lv_color.h ****  * @file lv_color.h
   3:lvgl/src/misc/lv_color.h ****  *
   4:lvgl/src/misc/lv_color.h ****  */
   5:lvgl/src/misc/lv_color.h **** 
   6:lvgl/src/misc/lv_color.h **** #ifndef LV_COLOR_H
   7:lvgl/src/misc/lv_color.h **** #define LV_COLOR_H
   8:lvgl/src/misc/lv_color.h **** 
   9:lvgl/src/misc/lv_color.h **** #ifdef __cplusplus
  10:lvgl/src/misc/lv_color.h **** extern "C" {
  11:lvgl/src/misc/lv_color.h **** #endif
  12:lvgl/src/misc/lv_color.h **** 
  13:lvgl/src/misc/lv_color.h **** /*********************
  14:lvgl/src/misc/lv_color.h ****  *      INCLUDES
  15:lvgl/src/misc/lv_color.h ****  *********************/
  16:lvgl/src/misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/misc/lv_color.h **** #include "lv_assert.h"
  18:lvgl/src/misc/lv_color.h **** #include "lv_math.h"
  19:lvgl/src/misc/lv_color.h **** #include "lv_types.h"
  20:lvgl/src/misc/lv_color.h **** 
  21:lvgl/src/misc/lv_color.h **** /*Error checking*/
  22:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  23:lvgl/src/misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  24:lvgl/src/misc/lv_color.h **** #endif
  25:lvgl/src/misc/lv_color.h **** 
  26:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH != 32 && LV_COLOR_SCREEN_TRANSP != 0
  27:lvgl/src/misc/lv_color.h **** #error "LV_COLOR_SCREEN_TRANSP requires LV_COLOR_DEPTH == 32. Set it in lv_conf.h"
  28:lvgl/src/misc/lv_color.h **** #endif
  29:lvgl/src/misc/lv_color.h **** 
  30:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 2


  31:lvgl/src/misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  32:lvgl/src/misc/lv_color.h **** #endif
  33:lvgl/src/misc/lv_color.h **** 
  34:lvgl/src/misc/lv_color.h **** #include <stdint.h>
  35:lvgl/src/misc/lv_color.h **** 
  36:lvgl/src/misc/lv_color.h **** /*********************
  37:lvgl/src/misc/lv_color.h ****  *      DEFINES
  38:lvgl/src/misc/lv_color.h ****  *********************/
  39:lvgl/src/misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_DEPTH);
  40:lvgl/src/misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_16_SWAP);
  41:lvgl/src/misc/lv_color.h **** 
  42:lvgl/src/misc/lv_color.h **** /**
  43:lvgl/src/misc/lv_color.h ****  * Opacity percentages.
  44:lvgl/src/misc/lv_color.h ****  */
  45:lvgl/src/misc/lv_color.h **** enum {
  46:lvgl/src/misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  47:lvgl/src/misc/lv_color.h ****     LV_OPA_0      = 0,
  48:lvgl/src/misc/lv_color.h ****     LV_OPA_10     = 25,
  49:lvgl/src/misc/lv_color.h ****     LV_OPA_20     = 51,
  50:lvgl/src/misc/lv_color.h ****     LV_OPA_30     = 76,
  51:lvgl/src/misc/lv_color.h ****     LV_OPA_40     = 102,
  52:lvgl/src/misc/lv_color.h ****     LV_OPA_50     = 127,
  53:lvgl/src/misc/lv_color.h ****     LV_OPA_60     = 153,
  54:lvgl/src/misc/lv_color.h ****     LV_OPA_70     = 178,
  55:lvgl/src/misc/lv_color.h ****     LV_OPA_80     = 204,
  56:lvgl/src/misc/lv_color.h ****     LV_OPA_90     = 229,
  57:lvgl/src/misc/lv_color.h ****     LV_OPA_100    = 255,
  58:lvgl/src/misc/lv_color.h ****     LV_OPA_COVER  = 255,
  59:lvgl/src/misc/lv_color.h **** };
  60:lvgl/src/misc/lv_color.h **** 
  61:lvgl/src/misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  62:lvgl/src/misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  63:lvgl/src/misc/lv_color.h **** 
  64:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  65:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SIZE 8
  66:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  67:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SIZE 8
  68:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  69:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SIZE 16
  70:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
  71:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SIZE 32
  72:lvgl/src/misc/lv_color.h **** #else
  73:lvgl/src/misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  74:lvgl/src/misc/lv_color.h **** #endif
  75:lvgl/src/misc/lv_color.h **** 
  76:lvgl/src/misc/lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  77:lvgl/src/misc/lv_color.h **** /**
  78:lvgl/src/misc/lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  79:lvgl/src/misc/lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  80:lvgl/src/misc/lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  81:lvgl/src/misc/lv_color.h **** */
  82:lvgl/src/misc/lv_color.h **** #ifdef _MSC_VER
  83:lvgl/src/misc/lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  84:lvgl/src/misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  85:lvgl/src/misc/lv_color.h **** #endif
  86:lvgl/src/misc/lv_color.h **** #else
  87:lvgl/src/misc/lv_color.h **** #if __cplusplus >= 201103L
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 3


  88:lvgl/src/misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  89:lvgl/src/misc/lv_color.h **** #endif
  90:lvgl/src/misc/lv_color.h **** #endif
  91:lvgl/src/misc/lv_color.h **** #endif /*__cplusplus*/
  92:lvgl/src/misc/lv_color.h **** 
  93:lvgl/src/misc/lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
  94:lvgl/src/misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
  95:lvgl/src/misc/lv_color.h **** #endif
  96:lvgl/src/misc/lv_color.h **** 
  97:lvgl/src/misc/lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
  98:lvgl/src/misc/lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
  99:lvgl/src/misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
 100:lvgl/src/misc/lv_color.h **** #else
 101:lvgl/src/misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
 102:lvgl/src/misc/lv_color.h **** #endif
 103:lvgl/src/misc/lv_color.h **** 
 104:lvgl/src/misc/lv_color.h **** /*---------------------------------------
 105:lvgl/src/misc/lv_color.h ****  * Macros for all existing color depths
 106:lvgl/src/misc/lv_color.h ****  * to set/get values of the color channels
 107:lvgl/src/misc/lv_color.h ****  *------------------------------------------*/
 108:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 109:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 110:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 111:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 112:lvgl/src/misc/lv_color.h **** 
 113:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 114:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 115:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 116:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 117:lvgl/src/misc/lv_color.h **** 
 118:lvgl/src/misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 119:lvgl/src/misc/lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 120:lvgl/src/misc/lv_color.h **** 
 121:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 122:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 123:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 124:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 125:lvgl/src/misc/lv_color.h **** 
 126:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 127:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 128:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 129:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 130:lvgl/src/misc/lv_color.h **** 
 131:lvgl/src/misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 132:lvgl/src/misc/lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 133:lvgl/src/misc/lv_color.h **** 
 134:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 135:lvgl/src/misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 136:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 137:lvgl/src/misc/lv_color.h **** #else
 138:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 139:lvgl/src/misc/lv_color.h **** #endif
 140:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 141:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 142:lvgl/src/misc/lv_color.h **** 
 143:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 144:lvgl/src/misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 4


 145:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 146:lvgl/src/misc/lv_color.h **** #else
 147:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 148:lvgl/src/misc/lv_color.h **** #endif
 149:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 150:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 151:lvgl/src/misc/lv_color.h **** 
 152:lvgl/src/misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 153:lvgl/src/misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 154:lvgl/src/misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 155:lvgl/src/misc/lv_color.h **** #else
 156:lvgl/src/misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 157:lvgl/src/misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 158:lvgl/src/misc/lv_color.h **** #endif
 159:lvgl/src/misc/lv_color.h **** 
 160:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 161:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 162:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 163:lvgl/src/misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 164:lvgl/src/misc/lv_color.h **** 
 165:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 166:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 167:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 168:lvgl/src/misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 169:lvgl/src/misc/lv_color.h **** 
 170:lvgl/src/misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 171:lvgl/src/misc/lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 172:lvgl/src/misc/lv_color.h **** 
 173:lvgl/src/misc/lv_color.h **** /*---------------------------------------
 174:lvgl/src/misc/lv_color.h ****  * Macros for the current color depth
 175:lvgl/src/misc/lv_color.h ****  * to set/get values of the color channels
 176:lvgl/src/misc/lv_color.h ****  *------------------------------------------*/
 177:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 178:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 179:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 180:lvgl/src/misc/lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 181:lvgl/src/misc/lv_color.h **** 
 182:lvgl/src/misc/lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 183:lvgl/src/misc/lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 184:lvgl/src/misc/lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 185:lvgl/src/misc/lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 186:lvgl/src/misc/lv_color.h **** 
 187:lvgl/src/misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 188:lvgl/src/misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 189:lvgl/src/misc/lv_color.h **** 
 190:lvgl/src/misc/lv_color.h **** /**********************
 191:lvgl/src/misc/lv_color.h ****  *      TYPEDEFS
 192:lvgl/src/misc/lv_color.h ****  **********************/
 193:lvgl/src/misc/lv_color.h **** 
 194:lvgl/src/misc/lv_color.h **** typedef union {
 195:lvgl/src/misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 196:lvgl/src/misc/lv_color.h ****     union {
 197:lvgl/src/misc/lv_color.h ****         uint8_t blue : 1;
 198:lvgl/src/misc/lv_color.h ****         uint8_t green : 1;
 199:lvgl/src/misc/lv_color.h ****         uint8_t red : 1;
 200:lvgl/src/misc/lv_color.h ****     } ch;
 201:lvgl/src/misc/lv_color.h **** } lv_color1_t;
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 5


 202:lvgl/src/misc/lv_color.h **** 
 203:lvgl/src/misc/lv_color.h **** typedef union {
 204:lvgl/src/misc/lv_color.h ****     struct {
 205:lvgl/src/misc/lv_color.h ****         uint8_t blue : 2;
 206:lvgl/src/misc/lv_color.h ****         uint8_t green : 3;
 207:lvgl/src/misc/lv_color.h ****         uint8_t red : 3;
 208:lvgl/src/misc/lv_color.h ****     } ch;
 209:lvgl/src/misc/lv_color.h ****     uint8_t full;
 210:lvgl/src/misc/lv_color.h **** } lv_color8_t;
 211:lvgl/src/misc/lv_color.h **** 
 212:lvgl/src/misc/lv_color.h **** typedef union {
 213:lvgl/src/misc/lv_color.h ****     struct {
 214:lvgl/src/misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 215:lvgl/src/misc/lv_color.h ****         uint16_t blue : 5;
 216:lvgl/src/misc/lv_color.h ****         uint16_t green : 6;
 217:lvgl/src/misc/lv_color.h ****         uint16_t red : 5;
 218:lvgl/src/misc/lv_color.h **** #else
 219:lvgl/src/misc/lv_color.h ****         uint16_t green_h : 3;
 220:lvgl/src/misc/lv_color.h ****         uint16_t red : 5;
 221:lvgl/src/misc/lv_color.h ****         uint16_t blue : 5;
 222:lvgl/src/misc/lv_color.h ****         uint16_t green_l : 3;
 223:lvgl/src/misc/lv_color.h **** #endif
 224:lvgl/src/misc/lv_color.h ****     } ch;
 225:lvgl/src/misc/lv_color.h ****     uint16_t full;
 226:lvgl/src/misc/lv_color.h **** } lv_color16_t;
 227:lvgl/src/misc/lv_color.h **** 
 228:lvgl/src/misc/lv_color.h **** typedef union {
 229:lvgl/src/misc/lv_color.h ****     struct {
 230:lvgl/src/misc/lv_color.h ****         uint8_t blue;
 231:lvgl/src/misc/lv_color.h ****         uint8_t green;
 232:lvgl/src/misc/lv_color.h ****         uint8_t red;
 233:lvgl/src/misc/lv_color.h ****         uint8_t alpha;
 234:lvgl/src/misc/lv_color.h ****     } ch;
 235:lvgl/src/misc/lv_color.h ****     uint32_t full;
 236:lvgl/src/misc/lv_color.h **** } lv_color32_t;
 237:lvgl/src/misc/lv_color.h **** 
 238:lvgl/src/misc/lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 239:lvgl/src/misc/lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 240:lvgl/src/misc/lv_color.h **** 
 241:lvgl/src/misc/lv_color.h **** typedef struct {
 242:lvgl/src/misc/lv_color.h ****     uint16_t h;
 243:lvgl/src/misc/lv_color.h ****     uint8_t s;
 244:lvgl/src/misc/lv_color.h ****     uint8_t v;
 245:lvgl/src/misc/lv_color.h **** } lv_color_hsv_t;
 246:lvgl/src/misc/lv_color.h **** 
 247:lvgl/src/misc/lv_color.h **** //! @cond Doxygen_Suppress
 248:lvgl/src/misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 249:lvgl/src/misc/lv_color.h **** typedef uint8_t lv_opa_t;
 250:lvgl/src/misc/lv_color.h **** //! @endcond
 251:lvgl/src/misc/lv_color.h **** 
 252:lvgl/src/misc/lv_color.h **** struct _lv_color_filter_dsc_t;
 253:lvgl/src/misc/lv_color.h **** 
 254:lvgl/src/misc/lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 255:lvgl/src/misc/lv_color.h **** 
 256:lvgl/src/misc/lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 257:lvgl/src/misc/lv_color.h ****     lv_color_filter_cb_t filter_cb;
 258:lvgl/src/misc/lv_color.h ****     void * user_data;
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 6


 259:lvgl/src/misc/lv_color.h **** } lv_color_filter_dsc_t;
 260:lvgl/src/misc/lv_color.h **** 
 261:lvgl/src/misc/lv_color.h **** 
 262:lvgl/src/misc/lv_color.h **** typedef enum {
 263:lvgl/src/misc/lv_color.h ****     LV_PALETTE_RED,
 264:lvgl/src/misc/lv_color.h ****     LV_PALETTE_PINK,
 265:lvgl/src/misc/lv_color.h ****     LV_PALETTE_PURPLE,
 266:lvgl/src/misc/lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 267:lvgl/src/misc/lv_color.h ****     LV_PALETTE_INDIGO,
 268:lvgl/src/misc/lv_color.h ****     LV_PALETTE_BLUE,
 269:lvgl/src/misc/lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 270:lvgl/src/misc/lv_color.h ****     LV_PALETTE_CYAN,
 271:lvgl/src/misc/lv_color.h ****     LV_PALETTE_TEAL,
 272:lvgl/src/misc/lv_color.h ****     LV_PALETTE_GREEN,
 273:lvgl/src/misc/lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 274:lvgl/src/misc/lv_color.h ****     LV_PALETTE_LIME,
 275:lvgl/src/misc/lv_color.h ****     LV_PALETTE_YELLOW,
 276:lvgl/src/misc/lv_color.h ****     LV_PALETTE_AMBER,
 277:lvgl/src/misc/lv_color.h ****     LV_PALETTE_ORANGE,
 278:lvgl/src/misc/lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 279:lvgl/src/misc/lv_color.h ****     LV_PALETTE_BROWN,
 280:lvgl/src/misc/lv_color.h ****     LV_PALETTE_BLUE_GREY,
 281:lvgl/src/misc/lv_color.h ****     LV_PALETTE_GREY,
 282:lvgl/src/misc/lv_color.h ****     _LV_PALETTE_LAST,
 283:lvgl/src/misc/lv_color.h ****     LV_PALETTE_NONE = 0xff,
 284:lvgl/src/misc/lv_color.h **** } lv_palette_t;
 285:lvgl/src/misc/lv_color.h **** 
 286:lvgl/src/misc/lv_color.h **** /**********************
 287:lvgl/src/misc/lv_color.h ****  * GLOBAL PROTOTYPES
 288:lvgl/src/misc/lv_color.h ****  **********************/
 289:lvgl/src/misc/lv_color.h **** 
 290:lvgl/src/misc/lv_color.h **** /*In color conversations:
 291:lvgl/src/misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 292:lvgl/src/misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 293:lvgl/src/misc/lv_color.h ****  *         8 bit Red has 3 bits
 294:lvgl/src/misc/lv_color.h ****  *        ----------------------
 295:lvgl/src/misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 296:lvgl/src/misc/lv_color.h ****  *
 297:lvgl/src/misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 298:lvgl/src/misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 299:lvgl/src/misc/lv_color.h ****  *        16 bit Red has 5 bits
 300:lvgl/src/misc/lv_color.h ****  *        ----------------------
 301:lvgl/src/misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 302:lvgl/src/misc/lv_color.h ****  */
 303:lvgl/src/misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 304:lvgl/src/misc/lv_color.h **** {
 305:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 306:lvgl/src/misc/lv_color.h ****     return color.full;
 307:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 308:lvgl/src/misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 309:lvgl/src/misc/lv_color.h ****         return 1;
 310:lvgl/src/misc/lv_color.h ****     }
 311:lvgl/src/misc/lv_color.h ****     else {
 312:lvgl/src/misc/lv_color.h ****         return 0;
 313:lvgl/src/misc/lv_color.h ****     }
 314:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 315:lvgl/src/misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 7


 316:lvgl/src/misc/lv_color.h ****         return 1;
 317:lvgl/src/misc/lv_color.h ****     }
 318:lvgl/src/misc/lv_color.h ****     else {
 319:lvgl/src/misc/lv_color.h ****         return 0;
 320:lvgl/src/misc/lv_color.h ****     }
 321:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 322:lvgl/src/misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 323:lvgl/src/misc/lv_color.h ****         return 1;
 324:lvgl/src/misc/lv_color.h ****     }
 325:lvgl/src/misc/lv_color.h ****     else {
 326:lvgl/src/misc/lv_color.h ****         return 0;
 327:lvgl/src/misc/lv_color.h ****     }
 328:lvgl/src/misc/lv_color.h **** #endif
 329:lvgl/src/misc/lv_color.h **** }
 330:lvgl/src/misc/lv_color.h **** 
 331:lvgl/src/misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 332:lvgl/src/misc/lv_color.h **** {
 333:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 334:lvgl/src/misc/lv_color.h ****     if(color.full == 0)
 335:lvgl/src/misc/lv_color.h ****         return 0;
 336:lvgl/src/misc/lv_color.h ****     else
 337:lvgl/src/misc/lv_color.h ****         return 0xFF;
 338:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 339:lvgl/src/misc/lv_color.h ****     return color.full;
 340:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 341:lvgl/src/misc/lv_color.h ****     lv_color8_t ret;
 342:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 343:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 344:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 345:lvgl/src/misc/lv_color.h ****     return ret.full;
 346:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 347:lvgl/src/misc/lv_color.h ****     lv_color8_t ret;
 348:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 349:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 350:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 351:lvgl/src/misc/lv_color.h ****     return ret.full;
 352:lvgl/src/misc/lv_color.h **** #endif
 353:lvgl/src/misc/lv_color.h **** }
 354:lvgl/src/misc/lv_color.h **** 
 355:lvgl/src/misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 356:lvgl/src/misc/lv_color.h **** {
 357:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 358:lvgl/src/misc/lv_color.h ****     if(color.full == 0)
 359:lvgl/src/misc/lv_color.h ****         return 0;
 360:lvgl/src/misc/lv_color.h ****     else
 361:lvgl/src/misc/lv_color.h ****         return 0xFFFF;
 362:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 363:lvgl/src/misc/lv_color.h ****     lv_color16_t ret;
 364:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 365:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 366:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 367:lvgl/src/misc/lv_color.h ****     return ret.full;
 368:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 369:lvgl/src/misc/lv_color.h ****     return color.full;
 370:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 371:lvgl/src/misc/lv_color.h ****     lv_color16_t ret;
 372:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 8


 373:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 374:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 375:lvgl/src/misc/lv_color.h ****     return ret.full;
 376:lvgl/src/misc/lv_color.h **** #endif
 377:lvgl/src/misc/lv_color.h **** }
 378:lvgl/src/misc/lv_color.h **** 
 379:lvgl/src/misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 380:lvgl/src/misc/lv_color.h **** {
  29              		.loc 2 380 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 381:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 382:lvgl/src/misc/lv_color.h ****     if(color.full == 0)
 383:lvgl/src/misc/lv_color.h ****         return 0xFF000000;
 384:lvgl/src/misc/lv_color.h ****     else
 385:lvgl/src/misc/lv_color.h ****         return 0xFFFFFFFF;
 386:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 387:lvgl/src/misc/lv_color.h ****     lv_color32_t ret;
 388:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 389:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 390:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 391:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 392:lvgl/src/misc/lv_color.h ****     return ret.full;
 393:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 394:lvgl/src/misc/lv_color.h ****     /**
 395:lvgl/src/misc/lv_color.h ****      * The floating point math for conversion is:
 396:lvgl/src/misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 397:lvgl/src/misc/lv_color.h ****      * The faster integer math for conversion is:
 398:lvgl/src/misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 399:lvgl/src/misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 400:lvgl/src/misc/lv_color.h ****      *
 401:lvgl/src/misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 402:lvgl/src/misc/lv_color.h ****      *
 403:lvgl/src/misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 404:lvgl/src/misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 405:lvgl/src/misc/lv_color.h ****      *       0           8      7        7       255
 406:lvgl/src/misc/lv_color.h ****      *       1          16     14        7       255
 407:lvgl/src/misc/lv_color.h ****      *       2          32     28        7       255
 408:lvgl/src/misc/lv_color.h ****      *       3          65     25        3       255
 409:lvgl/src/misc/lv_color.h ****      *       4         131     19        1       255
 410:lvgl/src/misc/lv_color.h ****      *       5         263      7        0       255
 411:lvgl/src/misc/lv_color.h ****      *
 412:lvgl/src/misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 413:lvgl/src/misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 414:lvgl/src/misc/lv_color.h ****      *       0           4      3        3       255
 415:lvgl/src/misc/lv_color.h ****      *       1           8      6        3       255
 416:lvgl/src/misc/lv_color.h ****      *       2          16     12        3       255
 417:lvgl/src/misc/lv_color.h ****      *       3          32     24        3       255
 418:lvgl/src/misc/lv_color.h ****      *       4          64     48        3       255
 419:lvgl/src/misc/lv_color.h ****      *       5         129     33        1       255
 420:lvgl/src/misc/lv_color.h ****      *       6         259      3        0       255
 421:lvgl/src/misc/lv_color.h ****      */
 422:lvgl/src/misc/lv_color.h **** 
 423:lvgl/src/misc/lv_color.h ****     lv_color32_t ret;
  34              		.loc 2 423 5 view .LVU1
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 9


 424:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
  35              		.loc 2 424 5 view .LVU2
  36 0000 C0F3C423 		ubfx	r3, r0, #11, #5
  37 0004 03EB4312 		add	r2, r3, r3, lsl #5
  38 0008 C3EBC203 		rsb	r3, r3, r2, lsl #3
  39 000c 0733     		adds	r3, r3, #7
  40 000e C3F34713 		ubfx	r3, r3, #5, #8
  41 0012 0022     		movs	r2, #0
  42              	.LVL1:
  43              		.loc 2 424 5 is_stmt 0 view .LVU3
  44 0014 63F31742 		bfi	r2, r3, #16, #8
  45              	.LVL2:
 425:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
  46              		.loc 2 425 5 is_stmt 1 view .LVU4
  47 0018 C0F34513 		ubfx	r3, r0, #5, #6
  48 001c 03EBC311 		add	r1, r3, r3, lsl #7
  49 0020 03EB4103 		add	r3, r3, r1, lsl #1
  50 0024 0333     		adds	r3, r3, #3
  51 0026 C3F38713 		ubfx	r3, r3, #6, #8
  52 002a 63F30F22 		bfi	r2, r3, #8, #8
 426:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
  53              		.loc 2 426 5 view .LVU5
  54 002e 00F01F03 		and	r3, r0, #31
  55 0032 03EB4311 		add	r1, r3, r3, lsl #5
  56 0036 C3EBC103 		rsb	r3, r3, r1, lsl #3
  57 003a 0733     		adds	r3, r3, #7
  58 003c C3F34713 		ubfx	r3, r3, #5, #8
  59 0040 63F30702 		bfi	r2, r3, #0, #8
 427:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
  60              		.loc 2 427 5 view .LVU6
 428:lvgl/src/misc/lv_color.h ****     return ret.full;
  61              		.loc 2 428 5 view .LVU7
 429:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 430:lvgl/src/misc/lv_color.h ****     return color.full;
 431:lvgl/src/misc/lv_color.h **** #endif
 432:lvgl/src/misc/lv_color.h **** }
  62              		.loc 2 432 1 is_stmt 0 view .LVU8
  63 0044 42F07F40 		orr	r0, r2, #-16777216
  64              	.LVL3:
  65              		.loc 2 432 1 view .LVU9
  66 0048 7047     		bx	lr
  67              		.cfi_endproc
  68              	.LFE5:
  70              		.section	.text.lv_color_mix,"ax",%progbits
  71              		.align	1
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  76              	lv_color_mix:
  77              	.LVL4:
  78              	.LFB6:
 433:lvgl/src/misc/lv_color.h **** 
 434:lvgl/src/misc/lv_color.h **** //! @cond Doxygen_Suppress
 435:lvgl/src/misc/lv_color.h **** 
 436:lvgl/src/misc/lv_color.h **** /**
 437:lvgl/src/misc/lv_color.h ****  * Mix two colors with a given ratio.
 438:lvgl/src/misc/lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 10


 439:lvgl/src/misc/lv_color.h ****  * @param c2 the second color to mix (usually the background)
 440:lvgl/src/misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 441:lvgl/src/misc/lv_color.h ****  * @return the mixed color
 442:lvgl/src/misc/lv_color.h ****  */
 443:lvgl/src/misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 444:lvgl/src/misc/lv_color.h **** {
  79              		.loc 2 444 1 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
 445:lvgl/src/misc/lv_color.h ****     lv_color_t ret;
  84              		.loc 2 445 5 view .LVU11
 446:lvgl/src/misc/lv_color.h **** 
 447:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_16_SWAP == 0
 448:lvgl/src/misc/lv_color.h ****     /*Source: https://stackoverflow.com/a/50012418/1999969*/
 449:lvgl/src/misc/lv_color.h ****     mix = (mix + 4) >> 3;
  85              		.loc 2 449 5 view .LVU12
  86              		.loc 2 449 16 is_stmt 0 view .LVU13
  87 0000 0432     		adds	r2, r2, #4
  88              	.LVL5:
 450:lvgl/src/misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
  89              		.loc 2 450 5 is_stmt 1 view .LVU14
  90              		.loc 2 450 19 is_stmt 0 view .LVU15
  91 0002 0B04     		lsls	r3, r1, #16
  92 0004 13FA81F1 		uxtah	r1, r3, r1
  93              	.LVL6:
  94              		.loc 2 450 14 view .LVU16
  95 0008 084B     		ldr	r3, .L3
  96 000a 1940     		ands	r1, r1, r3
  97              	.LVL7:
 451:lvgl/src/misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 452:lvgl/src/misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | ((uint32_t)c1.full << 16)) & 0x7E0F81F;
  98              		.loc 2 452 5 is_stmt 1 view .LVU17
  99              		.loc 2 452 19 is_stmt 0 view .LVU18
 100 000c 4FEA004C 		lsl	ip, r0, #16
 101 0010 1CFA80F0 		uxtah	r0, ip, r0
 102              	.LVL8:
 103              		.loc 2 452 14 view .LVU19
 104 0014 1840     		ands	r0, r0, r3
 105              	.LVL9:
 453:lvgl/src/misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 106              		.loc 2 453 5 is_stmt 1 view .LVU20
 107              		.loc 2 453 30 is_stmt 0 view .LVU21
 108 0016 401A     		subs	r0, r0, r1
 109              	.LVL10:
 110              		.loc 2 453 36 view .LVU22
 111 0018 D208     		lsrs	r2, r2, #3
 112              	.LVL11:
 113              		.loc 2 453 36 view .LVU23
 114 001a 00FB02F2 		mul	r2, r0, r2
 115              		.loc 2 453 49 view .LVU24
 116 001e 01EB5211 		add	r1, r1, r2, lsr #5
 117              	.LVL12:
 118              		.loc 2 453 14 view .LVU25
 119 0022 01EA0300 		and	r0, r1, r3
 120              	.LVL13:
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 11


 454:lvgl/src/misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 121              		.loc 2 454 5 is_stmt 1 view .LVU26
 455:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 456:lvgl/src/misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 457:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 458:lvgl/src/misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 459:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 460:lvgl/src/misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 461:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 462:lvgl/src/misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 463:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 464:lvgl/src/misc/lv_color.h **** #else
 465:lvgl/src/misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 466:lvgl/src/misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 467:lvgl/src/misc/lv_color.h **** #endif
 468:lvgl/src/misc/lv_color.h **** 
 469:lvgl/src/misc/lv_color.h ****     return ret;
 122              		.loc 2 469 5 view .LVU27
 470:lvgl/src/misc/lv_color.h **** }
 123              		.loc 2 470 1 is_stmt 0 view .LVU28
 124 0026 40EA1040 		orr	r0, r0, r0, lsr #16
 125              	.LVL14:
 126              		.loc 2 470 1 view .LVU29
 127 002a 7047     		bx	lr
 128              	.L4:
 129              		.align	2
 130              	.L3:
 131 002c 1FF8E007 		.word	132184095
 132              		.cfi_endproc
 133              	.LFE6:
 135              		.section	.text.lv_color_fill,"ax",%progbits
 136              		.align	1
 137              		.global	lv_color_fill
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 142              	lv_color_fill:
 143              	.LVL15:
 144              	.LFB18:
   1:lvgl/src/misc/lv_color.c **** /**
   2:lvgl/src/misc/lv_color.c ****  * @file lv_color.c
   3:lvgl/src/misc/lv_color.c ****  *
   4:lvgl/src/misc/lv_color.c ****  */
   5:lvgl/src/misc/lv_color.c **** 
   6:lvgl/src/misc/lv_color.c **** /*********************
   7:lvgl/src/misc/lv_color.c ****  *      INCLUDES
   8:lvgl/src/misc/lv_color.c ****  *********************/
   9:lvgl/src/misc/lv_color.c **** #include "lv_color.h"
  10:lvgl/src/misc/lv_color.c **** #include "lv_log.h"
  11:lvgl/src/misc/lv_color.c **** 
  12:lvgl/src/misc/lv_color.c **** /*********************
  13:lvgl/src/misc/lv_color.c ****  *      DEFINES
  14:lvgl/src/misc/lv_color.c ****  *********************/
  15:lvgl/src/misc/lv_color.c **** 
  16:lvgl/src/misc/lv_color.c **** /**********************
  17:lvgl/src/misc/lv_color.c ****  *      TYPEDEFS
  18:lvgl/src/misc/lv_color.c ****  **********************/
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 12


  19:lvgl/src/misc/lv_color.c **** 
  20:lvgl/src/misc/lv_color.c **** /**********************
  21:lvgl/src/misc/lv_color.c ****  *  STATIC PROTOTYPES
  22:lvgl/src/misc/lv_color.c ****  **********************/
  23:lvgl/src/misc/lv_color.c **** 
  24:lvgl/src/misc/lv_color.c **** /**********************
  25:lvgl/src/misc/lv_color.c ****  *  STATIC VARIABLES
  26:lvgl/src/misc/lv_color.c ****  **********************/
  27:lvgl/src/misc/lv_color.c **** 
  28:lvgl/src/misc/lv_color.c **** /**********************
  29:lvgl/src/misc/lv_color.c ****  *      MACROS
  30:lvgl/src/misc/lv_color.c ****  **********************/
  31:lvgl/src/misc/lv_color.c **** 
  32:lvgl/src/misc/lv_color.c **** /**********************
  33:lvgl/src/misc/lv_color.c ****  *   GLOBAL FUNCTIONS
  34:lvgl/src/misc/lv_color.c ****  **********************/
  35:lvgl/src/misc/lv_color.c **** 
  36:lvgl/src/misc/lv_color.c **** LV_ATTRIBUTE_FAST_MEM void lv_color_fill(lv_color_t * buf, lv_color_t color, uint32_t px_num)
  37:lvgl/src/misc/lv_color.c **** {
 145              		.loc 1 37 1 is_stmt 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149              		@ link register save eliminated.
  38:lvgl/src/misc/lv_color.c **** #if LV_COLOR_DEPTH == 16
  39:lvgl/src/misc/lv_color.c ****     uintptr_t buf_int = (uintptr_t)buf;
 150              		.loc 1 39 5 view .LVU31
  40:lvgl/src/misc/lv_color.c ****     if(buf_int & 0x3) {
 151              		.loc 1 40 5 view .LVU32
 152              		.loc 1 40 7 is_stmt 0 view .LVU33
 153 0000 10F0030F 		tst	r0, #3
 154 0004 02D0     		beq	.L6
  41:lvgl/src/misc/lv_color.c ****         *buf = color;
 155              		.loc 1 41 9 is_stmt 1 view .LVU34
 156              		.loc 1 41 14 is_stmt 0 view .LVU35
 157 0006 20F8021B 		strh	r1, [r0], #2	@ movhi
 158              	.LVL16:
  42:lvgl/src/misc/lv_color.c ****         buf++;
 159              		.loc 1 42 9 is_stmt 1 view .LVU36
  43:lvgl/src/misc/lv_color.c ****         px_num--;
 160              		.loc 1 43 9 view .LVU37
 161              		.loc 1 43 15 is_stmt 0 view .LVU38
 162 000a 013A     		subs	r2, r2, #1
 163              	.LVL17:
 164              	.L6:
  44:lvgl/src/misc/lv_color.c ****     }
  45:lvgl/src/misc/lv_color.c **** 
  46:lvgl/src/misc/lv_color.c ****     uint32_t c32 = (uint32_t)color.full + ((uint32_t)color.full << 16);
 165              		.loc 1 46 5 is_stmt 1 view .LVU39
 166              		.loc 1 46 65 is_stmt 0 view .LVU40
 167 000c 0B04     		lsls	r3, r1, #16
 168              		.loc 1 46 14 view .LVU41
 169 000e 13FA81F3 		uxtah	r3, r3, r1
 170              	.LVL18:
  47:lvgl/src/misc/lv_color.c ****     uint32_t * buf32 = (uint32_t *)buf;
 171              		.loc 1 47 5 is_stmt 1 view .LVU42
  48:lvgl/src/misc/lv_color.c **** 
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 13


  49:lvgl/src/misc/lv_color.c ****     while(px_num > 16) {
 172              		.loc 1 49 5 view .LVU43
 173              		.loc 1 49 10 is_stmt 0 view .LVU44
 174 0012 09E0     		b	.L7
 175              	.LVL19:
 176              	.L8:
  50:lvgl/src/misc/lv_color.c ****         *buf32 = c32;
 177              		.loc 1 50 9 is_stmt 1 view .LVU45
 178              		.loc 1 50 16 is_stmt 0 view .LVU46
 179 0014 0360     		str	r3, [r0]
  51:lvgl/src/misc/lv_color.c ****         buf32++;
 180              		.loc 1 51 9 is_stmt 1 view .LVU47
 181              	.LVL20:
  52:lvgl/src/misc/lv_color.c ****         *buf32 = c32;
 182              		.loc 1 52 9 view .LVU48
 183              		.loc 1 52 16 is_stmt 0 view .LVU49
 184 0016 4360     		str	r3, [r0, #4]
  53:lvgl/src/misc/lv_color.c ****         buf32++;
 185              		.loc 1 53 9 is_stmt 1 view .LVU50
 186              	.LVL21:
  54:lvgl/src/misc/lv_color.c ****         *buf32 = c32;
 187              		.loc 1 54 9 view .LVU51
 188              		.loc 1 54 16 is_stmt 0 view .LVU52
 189 0018 8360     		str	r3, [r0, #8]
  55:lvgl/src/misc/lv_color.c ****         buf32++;
 190              		.loc 1 55 9 is_stmt 1 view .LVU53
 191              	.LVL22:
  56:lvgl/src/misc/lv_color.c ****         *buf32 = c32;
 192              		.loc 1 56 9 view .LVU54
 193              		.loc 1 56 16 is_stmt 0 view .LVU55
 194 001a C360     		str	r3, [r0, #12]
  57:lvgl/src/misc/lv_color.c ****         buf32++;
 195              		.loc 1 57 9 is_stmt 1 view .LVU56
 196              	.LVL23:
  58:lvgl/src/misc/lv_color.c **** 
  59:lvgl/src/misc/lv_color.c ****         *buf32 = c32;
 197              		.loc 1 59 9 view .LVU57
 198              		.loc 1 59 16 is_stmt 0 view .LVU58
 199 001c 0361     		str	r3, [r0, #16]
  60:lvgl/src/misc/lv_color.c ****         buf32++;
 200              		.loc 1 60 9 is_stmt 1 view .LVU59
 201              	.LVL24:
  61:lvgl/src/misc/lv_color.c ****         *buf32 = c32;
 202              		.loc 1 61 9 view .LVU60
 203              		.loc 1 61 16 is_stmt 0 view .LVU61
 204 001e 4361     		str	r3, [r0, #20]
  62:lvgl/src/misc/lv_color.c ****         buf32++;
 205              		.loc 1 62 9 is_stmt 1 view .LVU62
 206              	.LVL25:
  63:lvgl/src/misc/lv_color.c ****         *buf32 = c32;
 207              		.loc 1 63 9 view .LVU63
 208              		.loc 1 63 16 is_stmt 0 view .LVU64
 209 0020 8361     		str	r3, [r0, #24]
  64:lvgl/src/misc/lv_color.c ****         buf32++;
 210              		.loc 1 64 9 is_stmt 1 view .LVU65
 211              	.LVL26:
  65:lvgl/src/misc/lv_color.c ****         *buf32 = c32;
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 14


 212              		.loc 1 65 9 view .LVU66
 213              		.loc 1 65 16 is_stmt 0 view .LVU67
 214 0022 C361     		str	r3, [r0, #28]
  66:lvgl/src/misc/lv_color.c ****         buf32++;
 215              		.loc 1 66 9 is_stmt 1 view .LVU68
 216              		.loc 1 66 14 is_stmt 0 view .LVU69
 217 0024 2030     		adds	r0, r0, #32
 218              	.LVL27:
  67:lvgl/src/misc/lv_color.c **** 
  68:lvgl/src/misc/lv_color.c ****         px_num -= 16;
 219              		.loc 1 68 9 is_stmt 1 view .LVU70
 220              		.loc 1 68 16 is_stmt 0 view .LVU71
 221 0026 103A     		subs	r2, r2, #16
 222              	.LVL28:
 223              	.L7:
  49:lvgl/src/misc/lv_color.c ****         *buf32 = c32;
 224              		.loc 1 49 18 is_stmt 1 view .LVU72
 225 0028 102A     		cmp	r2, #16
 226 002a F3D8     		bhi	.L8
  49:lvgl/src/misc/lv_color.c ****         *buf32 = c32;
 227              		.loc 1 49 18 is_stmt 0 view .LVU73
 228 002c 02E0     		b	.L9
 229              	.LVL29:
 230              	.L10:
  69:lvgl/src/misc/lv_color.c ****     }
  70:lvgl/src/misc/lv_color.c **** 
  71:lvgl/src/misc/lv_color.c ****     buf = (lv_color_t *)buf32;
  72:lvgl/src/misc/lv_color.c **** 
  73:lvgl/src/misc/lv_color.c ****     while(px_num) {
  74:lvgl/src/misc/lv_color.c ****         *buf = color;
 231              		.loc 1 74 9 is_stmt 1 view .LVU74
 232              		.loc 1 74 14 is_stmt 0 view .LVU75
 233 002e 20F8021B 		strh	r1, [r0], #2	@ movhi
 234              	.LVL30:
  75:lvgl/src/misc/lv_color.c ****         buf++;
 235              		.loc 1 75 9 is_stmt 1 view .LVU76
  76:lvgl/src/misc/lv_color.c ****         px_num--;
 236              		.loc 1 76 9 view .LVU77
 237              		.loc 1 76 15 is_stmt 0 view .LVU78
 238 0032 013A     		subs	r2, r2, #1
 239              	.LVL31:
 240              	.L9:
  73:lvgl/src/misc/lv_color.c ****         *buf = color;
 241              		.loc 1 73 11 is_stmt 1 view .LVU79
 242 0034 002A     		cmp	r2, #0
 243 0036 FAD1     		bne	.L10
  77:lvgl/src/misc/lv_color.c ****     }
  78:lvgl/src/misc/lv_color.c **** #else
  79:lvgl/src/misc/lv_color.c ****     while(px_num > 16) {
  80:lvgl/src/misc/lv_color.c ****         *buf = color;
  81:lvgl/src/misc/lv_color.c ****         buf++;
  82:lvgl/src/misc/lv_color.c ****         *buf = color;
  83:lvgl/src/misc/lv_color.c ****         buf++;
  84:lvgl/src/misc/lv_color.c ****         *buf = color;
  85:lvgl/src/misc/lv_color.c ****         buf++;
  86:lvgl/src/misc/lv_color.c ****         *buf = color;
  87:lvgl/src/misc/lv_color.c ****         buf++;
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 15


  88:lvgl/src/misc/lv_color.c **** 
  89:lvgl/src/misc/lv_color.c ****         *buf = color;
  90:lvgl/src/misc/lv_color.c ****         buf++;
  91:lvgl/src/misc/lv_color.c ****         *buf = color;
  92:lvgl/src/misc/lv_color.c ****         buf++;
  93:lvgl/src/misc/lv_color.c ****         *buf = color;
  94:lvgl/src/misc/lv_color.c ****         buf++;
  95:lvgl/src/misc/lv_color.c ****         *buf = color;
  96:lvgl/src/misc/lv_color.c ****         buf++;
  97:lvgl/src/misc/lv_color.c **** 
  98:lvgl/src/misc/lv_color.c ****         *buf = color;
  99:lvgl/src/misc/lv_color.c ****         buf++;
 100:lvgl/src/misc/lv_color.c ****         *buf = color;
 101:lvgl/src/misc/lv_color.c ****         buf++;
 102:lvgl/src/misc/lv_color.c ****         *buf = color;
 103:lvgl/src/misc/lv_color.c ****         buf++;
 104:lvgl/src/misc/lv_color.c ****         *buf = color;
 105:lvgl/src/misc/lv_color.c ****         buf++;
 106:lvgl/src/misc/lv_color.c **** 
 107:lvgl/src/misc/lv_color.c ****         *buf = color;
 108:lvgl/src/misc/lv_color.c ****         buf++;
 109:lvgl/src/misc/lv_color.c ****         *buf = color;
 110:lvgl/src/misc/lv_color.c ****         buf++;
 111:lvgl/src/misc/lv_color.c ****         *buf = color;
 112:lvgl/src/misc/lv_color.c ****         buf++;
 113:lvgl/src/misc/lv_color.c ****         *buf = color;
 114:lvgl/src/misc/lv_color.c ****         buf++;
 115:lvgl/src/misc/lv_color.c **** 
 116:lvgl/src/misc/lv_color.c ****         px_num -= 16;
 117:lvgl/src/misc/lv_color.c ****     }
 118:lvgl/src/misc/lv_color.c ****     while(px_num) {
 119:lvgl/src/misc/lv_color.c ****         *buf = color;
 120:lvgl/src/misc/lv_color.c ****         buf++;
 121:lvgl/src/misc/lv_color.c ****         px_num--;
 122:lvgl/src/misc/lv_color.c ****     }
 123:lvgl/src/misc/lv_color.c **** #endif
 124:lvgl/src/misc/lv_color.c **** }
 244              		.loc 1 124 1 is_stmt 0 view .LVU80
 245 0038 7047     		bx	lr
 246              		.cfi_endproc
 247              	.LFE18:
 249              		.section	.text.lv_color_lighten,"ax",%progbits
 250              		.align	1
 251              		.global	lv_color_lighten
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 256              	lv_color_lighten:
 257              	.LVL32:
 258              	.LFB19:
 125:lvgl/src/misc/lv_color.c **** 
 126:lvgl/src/misc/lv_color.c **** lv_color_t lv_color_lighten(lv_color_t c, lv_opa_t lvl)
 127:lvgl/src/misc/lv_color.c **** {
 259              		.loc 1 127 1 is_stmt 1 view -0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 16


 263              		.loc 1 127 1 is_stmt 0 view .LVU82
 264 0000 08B5     		push	{r3, lr}
 265              	.LCFI0:
 266              		.cfi_def_cfa_offset 8
 267              		.cfi_offset 3, -8
 268              		.cfi_offset 14, -4
 269 0002 0A46     		mov	r2, r1
 128:lvgl/src/misc/lv_color.c ****     return lv_color_mix(lv_color_white(), c, lvl);
 270              		.loc 1 128 5 is_stmt 1 view .LVU83
 271              	.LBB38:
 272              	.LBI38:
 471:lvgl/src/misc/lv_color.h **** 
 472:lvgl/src/misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 473:lvgl/src/misc/lv_color.h **** {
 474:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 475:lvgl/src/misc/lv_color.h ****     out[0] = (uint16_t)LV_COLOR_GET_R(c) * mix;
 476:lvgl/src/misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 477:lvgl/src/misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 478:lvgl/src/misc/lv_color.h **** #else
 479:lvgl/src/misc/lv_color.h ****     (void) mix;
 480:lvgl/src/misc/lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 481:lvgl/src/misc/lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 482:lvgl/src/misc/lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 483:lvgl/src/misc/lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 484:lvgl/src/misc/lv_color.h **** #endif
 485:lvgl/src/misc/lv_color.h **** 
 486:lvgl/src/misc/lv_color.h **** }
 487:lvgl/src/misc/lv_color.h **** 
 488:lvgl/src/misc/lv_color.h **** /**
 489:lvgl/src/misc/lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 490:lvgl/src/misc/lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 491:lvgl/src/misc/lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 492:lvgl/src/misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 493:lvgl/src/misc/lv_color.h ****  *            Should be modified like mix = `255 - mix`
 494:lvgl/src/misc/lv_color.h ****  * @return the mixed color
 495:lvgl/src/misc/lv_color.h ****  * @note 255 won't give clearly `c1`.
 496:lvgl/src/misc/lv_color.h ****  */
 497:lvgl/src/misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix_premult(uint16_t * premult_c1, lv_color
 498:lvgl/src/misc/lv_color.h **** {
 499:lvgl/src/misc/lv_color.h ****     lv_color_t ret;
 500:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 501:lvgl/src/misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8 or 32*/
 502:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROUND_OF
 503:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 504:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 505:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 506:lvgl/src/misc/lv_color.h **** #else
 507:lvgl/src/misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 508:lvgl/src/misc/lv_color.h ****     /*Restore color1*/
 509:lvgl/src/misc/lv_color.h ****     lv_color_t c1;
 510:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
 511:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 512:lvgl/src/misc/lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 513:lvgl/src/misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
 514:lvgl/src/misc/lv_color.h **** #endif
 515:lvgl/src/misc/lv_color.h **** 
 516:lvgl/src/misc/lv_color.h ****     return ret;
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 17


 517:lvgl/src/misc/lv_color.h **** }
 518:lvgl/src/misc/lv_color.h **** 
 519:lvgl/src/misc/lv_color.h **** /**
 520:lvgl/src/misc/lv_color.h ****  * Mix two colors. Both color can have alpha value.
 521:lvgl/src/misc/lv_color.h ****  * @param bg_color background color
 522:lvgl/src/misc/lv_color.h ****  * @param bg_opa alpha of the background color
 523:lvgl/src/misc/lv_color.h ****  * @param fg_color foreground color
 524:lvgl/src/misc/lv_color.h ****  * @param fg_opa alpha of the foreground color
 525:lvgl/src/misc/lv_color.h ****  * @param res_color the result color
 526:lvgl/src/misc/lv_color.h ****  * @param res_opa the result opacity
 527:lvgl/src/misc/lv_color.h ****  */
 528:lvgl/src/misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 529:lvgl/src/misc/lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
 530:lvgl/src/misc/lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 531:lvgl/src/misc/lv_color.h **** {
 532:lvgl/src/misc/lv_color.h ****     /*Pick the foreground if it's fully opaque or the Background is fully transparent*/
 533:lvgl/src/misc/lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 534:lvgl/src/misc/lv_color.h ****         res_color->full = fg_color.full;
 535:lvgl/src/misc/lv_color.h ****         *res_opa = fg_opa;
 536:lvgl/src/misc/lv_color.h ****     }
 537:lvgl/src/misc/lv_color.h ****     /*Transparent foreground: use the Background*/
 538:lvgl/src/misc/lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 539:lvgl/src/misc/lv_color.h ****         res_color->full = bg_color.full;
 540:lvgl/src/misc/lv_color.h ****         *res_opa = bg_opa;
 541:lvgl/src/misc/lv_color.h ****     }
 542:lvgl/src/misc/lv_color.h ****     /*Opaque background: use simple mix*/
 543:lvgl/src/misc/lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 544:lvgl/src/misc/lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 545:lvgl/src/misc/lv_color.h ****         *res_opa = LV_OPA_COVER;
 546:lvgl/src/misc/lv_color.h ****     }
 547:lvgl/src/misc/lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 548:lvgl/src/misc/lv_color.h ****     else {
 549:lvgl/src/misc/lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
 550:lvgl/src/misc/lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 551:lvgl/src/misc/lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 552:lvgl/src/misc/lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 553:lvgl/src/misc/lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 554:lvgl/src/misc/lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
 555:lvgl/src/misc/lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 556:lvgl/src/misc/lv_color.h **** 
 557:lvgl/src/misc/lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
 558:lvgl/src/misc/lv_color.h ****            bg_color.full != bg_color_save.full) {
 559:lvgl/src/misc/lv_color.h ****             fg_opa_save        = fg_opa;
 560:lvgl/src/misc/lv_color.h ****             bg_opa_save        = bg_opa;
 561:lvgl/src/misc/lv_color.h ****             fg_color_save.full = fg_color.full;
 562:lvgl/src/misc/lv_color.h ****             bg_color_save.full = bg_color.full;
 563:lvgl/src/misc/lv_color.h ****             /*Info:
 564:lvgl/src/misc/lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
 565:lvgl/src/misc/lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
 566:lvgl/src/misc/lv_color.h ****             LV_ASSERT(res_opa_saved != 0);
 567:lvgl/src/misc/lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
 568:lvgl/src/misc/lv_color.h ****             res_color_saved = lv_color_mix(fg_color, bg_color, ratio);
 569:lvgl/src/misc/lv_color.h **** 
 570:lvgl/src/misc/lv_color.h ****         }
 571:lvgl/src/misc/lv_color.h **** 
 572:lvgl/src/misc/lv_color.h ****         res_color->full = res_color_saved.full;
 573:lvgl/src/misc/lv_color.h ****         *res_opa = res_opa_saved;
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 18


 574:lvgl/src/misc/lv_color.h ****     }
 575:lvgl/src/misc/lv_color.h **** }
 576:lvgl/src/misc/lv_color.h **** 
 577:lvgl/src/misc/lv_color.h **** //! @endcond
 578:lvgl/src/misc/lv_color.h **** 
 579:lvgl/src/misc/lv_color.h **** /**
 580:lvgl/src/misc/lv_color.h ****  * Get the brightness of a color
 581:lvgl/src/misc/lv_color.h ****  * @param color a color
 582:lvgl/src/misc/lv_color.h ****  * @return the brightness [0..255]
 583:lvgl/src/misc/lv_color.h ****  */
 584:lvgl/src/misc/lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 585:lvgl/src/misc/lv_color.h **** {
 586:lvgl/src/misc/lv_color.h ****     lv_color32_t c32;
 587:lvgl/src/misc/lv_color.h ****     c32.full        = lv_color_to32(color);
 588:lvgl/src/misc/lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 589:lvgl/src/misc/lv_color.h ****     return (uint8_t)(bright >> 3);
 590:lvgl/src/misc/lv_color.h **** }
 591:lvgl/src/misc/lv_color.h **** 
 592:lvgl/src/misc/lv_color.h **** static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)
 593:lvgl/src/misc/lv_color.h **** {
 594:lvgl/src/misc/lv_color.h ****     return _LV_COLOR_MAKE_TYPE_HELPER LV_COLOR_MAKE(r, g, b);
 595:lvgl/src/misc/lv_color.h **** }
 596:lvgl/src/misc/lv_color.h **** 
 597:lvgl/src/misc/lv_color.h **** static inline lv_color_t lv_color_hex(uint32_t c)
 598:lvgl/src/misc/lv_color.h **** {
 599:lvgl/src/misc/lv_color.h **** #if LV_COLOR_DEPTH == 16
 600:lvgl/src/misc/lv_color.h ****     lv_color_t r;
 601:lvgl/src/misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 602:lvgl/src/misc/lv_color.h ****     /* Convert a 4 bytes per pixel in format ARGB32 to R5G6B5 format
 603:lvgl/src/misc/lv_color.h ****         naive way (by calling lv_color_make with components):
 604:lvgl/src/misc/lv_color.h ****                     r = ((c & 0xFF0000) >> 19)
 605:lvgl/src/misc/lv_color.h ****                     g = ((c & 0xFF00) >> 10)
 606:lvgl/src/misc/lv_color.h ****                     b = ((c & 0xFF) >> 3)
 607:lvgl/src/misc/lv_color.h ****                     rgb565 = (r << 11) | (g << 5) | b
 608:lvgl/src/misc/lv_color.h ****         That's 3 mask, 5 bitshift and 2 or operations
 609:lvgl/src/misc/lv_color.h **** 
 610:lvgl/src/misc/lv_color.h ****         A bit better:
 611:lvgl/src/misc/lv_color.h ****                     r = ((c & 0xF80000) >> 8)
 612:lvgl/src/misc/lv_color.h ****                     g = ((c & 0xFC00) >> 5)
 613:lvgl/src/misc/lv_color.h ****                     b = ((c & 0xFF) >> 3)
 614:lvgl/src/misc/lv_color.h ****                     rgb565 = r | g | b
 615:lvgl/src/misc/lv_color.h ****         That's 3 mask, 3 bitshifts and 2 or operations */
 616:lvgl/src/misc/lv_color.h ****     r.full = (uint16_t)(((c & 0xF80000) >> 8) | ((c & 0xFC00) >> 5) | ((c & 0xFF) >> 3));
 617:lvgl/src/misc/lv_color.h **** #else
 618:lvgl/src/misc/lv_color.h ****     /* We want: rrrr rrrr GGGg gggg bbbb bbbb => gggb bbbb rrrr rGGG */
 619:lvgl/src/misc/lv_color.h ****     r.full = (uint16_t)(((c & 0xF80000) >> 16) | ((c & 0xFC00) >> 13) | ((c & 0x1C00) << 3) | ((c &
 620:lvgl/src/misc/lv_color.h **** #endif
 621:lvgl/src/misc/lv_color.h ****     return r;
 622:lvgl/src/misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 623:lvgl/src/misc/lv_color.h ****     lv_color_t r;
 624:lvgl/src/misc/lv_color.h ****     r.full = c | 0xFF000000;
 625:lvgl/src/misc/lv_color.h ****     return r;
 626:lvgl/src/misc/lv_color.h **** #else /*LV_COLOR_DEPTH == 8*/
 627:lvgl/src/misc/lv_color.h ****     return lv_color_make((uint8_t)((c >> 16) & 0xFF), (uint8_t)((c >> 8) & 0xFF), (uint8_t)(c & 0xF
 628:lvgl/src/misc/lv_color.h **** #endif
 629:lvgl/src/misc/lv_color.h **** }
 630:lvgl/src/misc/lv_color.h **** 
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 19


 631:lvgl/src/misc/lv_color.h **** static inline lv_color_t lv_color_hex3(uint32_t c)
 632:lvgl/src/misc/lv_color.h **** {
 633:lvgl/src/misc/lv_color.h ****     return lv_color_make((uint8_t)(((c >> 4) & 0xF0) | ((c >> 8) & 0xF)), (uint8_t)((c & 0xF0) | ((
 634:lvgl/src/misc/lv_color.h ****                          (uint8_t)((c & 0xF) | ((c & 0xF) << 4)));
 635:lvgl/src/misc/lv_color.h **** }
 636:lvgl/src/misc/lv_color.h **** 
 637:lvgl/src/misc/lv_color.h **** static inline void lv_color_filter_dsc_init(lv_color_filter_dsc_t * dsc, lv_color_filter_cb_t cb)
 638:lvgl/src/misc/lv_color.h **** {
 639:lvgl/src/misc/lv_color.h ****     dsc->filter_cb = cb;
 640:lvgl/src/misc/lv_color.h **** }
 641:lvgl/src/misc/lv_color.h **** 
 642:lvgl/src/misc/lv_color.h **** //! @cond Doxygen_Suppress
 643:lvgl/src/misc/lv_color.h **** //!
 644:lvgl/src/misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM void lv_color_fill(lv_color_t * buf, lv_color_t color, uint32_t px_num);
 645:lvgl/src/misc/lv_color.h **** 
 646:lvgl/src/misc/lv_color.h **** //! @endcond
 647:lvgl/src/misc/lv_color.h **** lv_color_t lv_color_lighten(lv_color_t c, lv_opa_t lvl);
 648:lvgl/src/misc/lv_color.h **** 
 649:lvgl/src/misc/lv_color.h **** lv_color_t lv_color_darken(lv_color_t c, lv_opa_t lvl);
 650:lvgl/src/misc/lv_color.h **** 
 651:lvgl/src/misc/lv_color.h **** lv_color_t lv_color_change_lightness(lv_color_t c, lv_opa_t lvl);
 652:lvgl/src/misc/lv_color.h **** 
 653:lvgl/src/misc/lv_color.h **** /**
 654:lvgl/src/misc/lv_color.h ****  * Convert a HSV color to RGB
 655:lvgl/src/misc/lv_color.h ****  * @param h hue [0..359]
 656:lvgl/src/misc/lv_color.h ****  * @param s saturation [0..100]
 657:lvgl/src/misc/lv_color.h ****  * @param v value [0..100]
 658:lvgl/src/misc/lv_color.h ****  * @return the given RGB color in RGB (with LV_COLOR_DEPTH depth)
 659:lvgl/src/misc/lv_color.h ****  */
 660:lvgl/src/misc/lv_color.h **** lv_color_t lv_color_hsv_to_rgb(uint16_t h, uint8_t s, uint8_t v);
 661:lvgl/src/misc/lv_color.h **** 
 662:lvgl/src/misc/lv_color.h **** /**
 663:lvgl/src/misc/lv_color.h ****  * Convert a 32-bit RGB color to HSV
 664:lvgl/src/misc/lv_color.h ****  * @param r8 8-bit red
 665:lvgl/src/misc/lv_color.h ****  * @param g8 8-bit green
 666:lvgl/src/misc/lv_color.h ****  * @param b8 8-bit blue
 667:lvgl/src/misc/lv_color.h ****  * @return the given RGB color in HSV
 668:lvgl/src/misc/lv_color.h ****  */
 669:lvgl/src/misc/lv_color.h **** lv_color_hsv_t lv_color_rgb_to_hsv(uint8_t r8, uint8_t g8, uint8_t b8);
 670:lvgl/src/misc/lv_color.h **** 
 671:lvgl/src/misc/lv_color.h **** /**
 672:lvgl/src/misc/lv_color.h ****  * Convert a color to HSV
 673:lvgl/src/misc/lv_color.h ****  * @param color color
 674:lvgl/src/misc/lv_color.h ****  * @return the given color in HSV
 675:lvgl/src/misc/lv_color.h ****  */
 676:lvgl/src/misc/lv_color.h **** lv_color_hsv_t lv_color_to_hsv(lv_color_t color);
 677:lvgl/src/misc/lv_color.h **** 
 678:lvgl/src/misc/lv_color.h **** /**
 679:lvgl/src/misc/lv_color.h ****  * Just a wrapper around LV_COLOR_CHROMA_KEY because it might be more convenient to use a function 
 680:lvgl/src/misc/lv_color.h ****  * @return LV_COLOR_CHROMA_KEY
 681:lvgl/src/misc/lv_color.h ****  */
 682:lvgl/src/misc/lv_color.h **** static inline lv_color_t lv_color_chroma_key(void)
 683:lvgl/src/misc/lv_color.h **** {
 684:lvgl/src/misc/lv_color.h ****     return LV_COLOR_CHROMA_KEY;
 685:lvgl/src/misc/lv_color.h **** }
 686:lvgl/src/misc/lv_color.h **** 
 687:lvgl/src/misc/lv_color.h **** /**********************
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 20


 688:lvgl/src/misc/lv_color.h ****  *  PREDEFINED COLORS
 689:lvgl/src/misc/lv_color.h ****  **********************/
 690:lvgl/src/misc/lv_color.h **** /*Source: https://vuetifyjs.com/en/styles/colors/#material-colors*/
 691:lvgl/src/misc/lv_color.h **** 
 692:lvgl/src/misc/lv_color.h **** lv_color_t lv_palette_main(lv_palette_t p);
 693:lvgl/src/misc/lv_color.h **** static inline lv_color_t lv_color_white(void)
 273              		.loc 2 693 26 view .LVU84
 694:lvgl/src/misc/lv_color.h **** {
 695:lvgl/src/misc/lv_color.h ****     return lv_color_make(0xff, 0xff, 0xff);
 274              		.loc 2 695 5 view .LVU85
 275              	.LVL33:
 276              	.LBB39:
 277              	.LBI39:
 592:lvgl/src/misc/lv_color.h **** {
 278              		.loc 2 592 26 view .LVU86
 279              	.LBB40:
 594:lvgl/src/misc/lv_color.h **** }
 280              		.loc 2 594 5 view .LVU87
 594:lvgl/src/misc/lv_color.h **** }
 281              		.loc 2 594 5 is_stmt 0 view .LVU88
 282              	.LBE40:
 283              	.LBE39:
 284              	.LBE38:
 285              		.loc 1 128 12 discriminator 1 view .LVU89
 286 0004 0146     		mov	r1, r0	@ movhi
 287              	.LVL34:
 288              		.loc 1 128 12 discriminator 1 view .LVU90
 289 0006 4FF0FF30 		mov	r0, #-1	@ movhi
 290              	.LVL35:
 291              		.loc 1 128 12 discriminator 1 view .LVU91
 292 000a FFF7FEFF 		bl	lv_color_mix
 293              	.LVL36:
 129:lvgl/src/misc/lv_color.c **** }
 294              		.loc 1 129 1 view .LVU92
 295 000e 08BD     		pop	{r3, pc}
 296              		.cfi_endproc
 297              	.LFE19:
 299              		.section	.text.lv_color_darken,"ax",%progbits
 300              		.align	1
 301              		.global	lv_color_darken
 302              		.syntax unified
 303              		.thumb
 304              		.thumb_func
 306              	lv_color_darken:
 307              	.LVL37:
 308              	.LFB20:
 130:lvgl/src/misc/lv_color.c **** 
 131:lvgl/src/misc/lv_color.c **** lv_color_t lv_color_darken(lv_color_t c, lv_opa_t lvl)
 132:lvgl/src/misc/lv_color.c **** {
 309              		.loc 1 132 1 is_stmt 1 view -0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313              		.loc 1 132 1 is_stmt 0 view .LVU94
 314 0000 08B5     		push	{r3, lr}
 315              	.LCFI1:
 316              		.cfi_def_cfa_offset 8
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 21


 317              		.cfi_offset 3, -8
 318              		.cfi_offset 14, -4
 319 0002 0A46     		mov	r2, r1
 133:lvgl/src/misc/lv_color.c ****     return lv_color_mix(lv_color_black(), c, lvl);
 320              		.loc 1 133 5 is_stmt 1 view .LVU95
 321              	.LBB41:
 322              	.LBI41:
 696:lvgl/src/misc/lv_color.h **** }
 697:lvgl/src/misc/lv_color.h **** static inline lv_color_t lv_color_black(void)
 323              		.loc 2 697 26 view .LVU96
 698:lvgl/src/misc/lv_color.h **** {
 699:lvgl/src/misc/lv_color.h ****     return lv_color_make(0x00, 0x0, 0x00);
 324              		.loc 2 699 5 view .LVU97
 325              	.LVL38:
 326              	.LBB42:
 327              	.LBI42:
 592:lvgl/src/misc/lv_color.h **** {
 328              		.loc 2 592 26 view .LVU98
 329              	.LBB43:
 594:lvgl/src/misc/lv_color.h **** }
 330              		.loc 2 594 5 view .LVU99
 594:lvgl/src/misc/lv_color.h **** }
 331              		.loc 2 594 12 is_stmt 0 view .LVU100
 332 0004 4FF00003 		mov	r3, #0	@ movhi
 333 0008 23F01F03 		bic	r3, r3, #31
 334 000c 23F4FC63 		bic	r3, r3, #2016
 335 0010 23F47843 		bic	r3, r3, #63488
 336              	.LVL39:
 594:lvgl/src/misc/lv_color.h **** }
 337              		.loc 2 594 12 view .LVU101
 338              	.LBE43:
 339              	.LBE42:
 340              	.LBE41:
 341              		.loc 1 133 12 discriminator 1 view .LVU102
 342 0014 0146     		mov	r1, r0	@ movhi
 343              	.LVL40:
 344              		.loc 1 133 12 discriminator 1 view .LVU103
 345 0016 1846     		mov	r0, r3	@ movhi
 346              	.LVL41:
 347              		.loc 1 133 12 discriminator 1 view .LVU104
 348 0018 FFF7FEFF 		bl	lv_color_mix
 349              	.LVL42:
 134:lvgl/src/misc/lv_color.c **** }
 350              		.loc 1 134 1 view .LVU105
 351 001c 08BD     		pop	{r3, pc}
 352              		.cfi_endproc
 353              	.LFE20:
 355              		.section	.text.lv_color_change_lightness,"ax",%progbits
 356              		.align	1
 357              		.global	lv_color_change_lightness
 358              		.syntax unified
 359              		.thumb
 360              		.thumb_func
 362              	lv_color_change_lightness:
 363              	.LVL43:
 364              	.LFB21:
 135:lvgl/src/misc/lv_color.c **** 
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 22


 136:lvgl/src/misc/lv_color.c **** lv_color_t lv_color_change_lightness(lv_color_t c, lv_opa_t lvl)
 137:lvgl/src/misc/lv_color.c **** {
 365              		.loc 1 137 1 is_stmt 1 view -0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 138:lvgl/src/misc/lv_color.c ****     /*It'd be better to convert the color to HSL, change L and convert back to RGB.*/
 139:lvgl/src/misc/lv_color.c ****     if(lvl == LV_OPA_50) return c;
 369              		.loc 1 139 5 view .LVU107
 370              		.loc 1 139 7 is_stmt 0 view .LVU108
 371 0000 7F29     		cmp	r1, #127
 372 0002 11D0     		beq	.L20
 137:lvgl/src/misc/lv_color.c ****     /*It'd be better to convert the color to HSL, change L and convert back to RGB.*/
 373              		.loc 1 137 1 view .LVU109
 374 0004 08B5     		push	{r3, lr}
 375              	.LCFI2:
 376              		.cfi_def_cfa_offset 8
 377              		.cfi_offset 3, -8
 378              		.cfi_offset 14, -4
 140:lvgl/src/misc/lv_color.c ****     else if(lvl < LV_OPA_50) return lv_color_darken(c, (LV_OPA_50 - lvl) * 2);
 379              		.loc 1 140 10 is_stmt 1 view .LVU110
 380              		.loc 1 140 12 is_stmt 0 view .LVU111
 381 0006 7E29     		cmp	r1, #126
 382 0008 07D8     		bhi	.L18
 383              		.loc 1 140 30 is_stmt 1 discriminator 1 view .LVU112
 384              		.loc 1 140 67 is_stmt 0 discriminator 1 view .LVU113
 385 000a C1F17F01 		rsb	r1, r1, #127
 386              	.LVL44:
 387              		.loc 1 140 37 discriminator 1 view .LVU114
 388 000e 4900     		lsls	r1, r1, #1
 389 0010 01F0FE01 		and	r1, r1, #254
 390 0014 FFF7FEFF 		bl	lv_color_darken
 391              	.LVL45:
 392              	.L17:
 141:lvgl/src/misc/lv_color.c ****     else return lv_color_lighten(c, (lvl - LV_OPA_50) * 2);
 142:lvgl/src/misc/lv_color.c **** }
 393              		.loc 1 142 1 view .LVU115
 394 0018 08BD     		pop	{r3, pc}
 395              	.LVL46:
 396              	.L18:
 141:lvgl/src/misc/lv_color.c ****     else return lv_color_lighten(c, (lvl - LV_OPA_50) * 2);
 397              		.loc 1 141 10 is_stmt 1 view .LVU116
 141:lvgl/src/misc/lv_color.c ****     else return lv_color_lighten(c, (lvl - LV_OPA_50) * 2);
 398              		.loc 1 141 17 is_stmt 0 view .LVU117
 399 001a 7F39     		subs	r1, r1, #127
 400              	.LVL47:
 141:lvgl/src/misc/lv_color.c ****     else return lv_color_lighten(c, (lvl - LV_OPA_50) * 2);
 401              		.loc 1 141 17 view .LVU118
 402 001c 4900     		lsls	r1, r1, #1
 403 001e 01F0FE01 		and	r1, r1, #254
 404 0022 FFF7FEFF 		bl	lv_color_lighten
 405              	.LVL48:
 141:lvgl/src/misc/lv_color.c ****     else return lv_color_lighten(c, (lvl - LV_OPA_50) * 2);
 406              		.loc 1 141 17 view .LVU119
 407 0026 F7E7     		b	.L17
 408              	.LVL49:
 409              	.L20:
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 23


 410              	.LCFI3:
 411              		.cfi_def_cfa_offset 0
 412              		.cfi_restore 3
 413              		.cfi_restore 14
 414              	.LVL50:
 415              		.loc 1 142 1 view .LVU120
 416 0028 7047     		bx	lr
 417              		.cfi_endproc
 418              	.LFE21:
 420              		.section	.text.lv_color_hsv_to_rgb,"ax",%progbits
 421              		.align	1
 422              		.global	lv_color_hsv_to_rgb
 423              		.syntax unified
 424              		.thumb
 425              		.thumb_func
 427              	lv_color_hsv_to_rgb:
 428              	.LVL51:
 429              	.LFB22:
 143:lvgl/src/misc/lv_color.c **** 
 144:lvgl/src/misc/lv_color.c **** /**
 145:lvgl/src/misc/lv_color.c ****  * Convert a HSV color to RGB
 146:lvgl/src/misc/lv_color.c ****  * @param h hue [0..359]
 147:lvgl/src/misc/lv_color.c ****  * @param s saturation [0..100]
 148:lvgl/src/misc/lv_color.c ****  * @param v value [0..100]
 149:lvgl/src/misc/lv_color.c ****  * @return the given RGB color in RGB (with LV_COLOR_DEPTH depth)
 150:lvgl/src/misc/lv_color.c ****  */
 151:lvgl/src/misc/lv_color.c **** lv_color_t lv_color_hsv_to_rgb(uint16_t h, uint8_t s, uint8_t v)
 152:lvgl/src/misc/lv_color.c **** {
 430              		.loc 1 152 1 is_stmt 1 view -0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              		.loc 1 152 1 is_stmt 0 view .LVU122
 435 0000 00B5     		push	{lr}
 436              	.LCFI4:
 437              		.cfi_def_cfa_offset 4
 438              		.cfi_offset 14, -4
 153:lvgl/src/misc/lv_color.c ****     h = (uint32_t)((uint32_t)h * 255) / 360;
 439              		.loc 1 153 5 is_stmt 1 view .LVU123
 440              		.loc 1 153 9 is_stmt 0 view .LVU124
 441 0002 C0EB0020 		rsb	r0, r0, r0, lsl #8
 442              	.LVL52:
 443              		.loc 1 153 39 view .LVU125
 444 0006 C008     		lsrs	r0, r0, #3
 445 0008 3B4B     		ldr	r3, .L36
 446 000a A3FB0030 		umull	r3, r0, r3, r0
 447 000e 4FEA900C 		lsr	ip, r0, #2
 448              		.loc 1 153 7 view .LVU126
 449 0012 C0F38F00 		ubfx	r0, r0, #2, #16
 450              	.LVL53:
 154:lvgl/src/misc/lv_color.c ****     s = (uint16_t)((uint16_t)s * 255) / 100;
 451              		.loc 1 154 5 is_stmt 1 view .LVU127
 452              		.loc 1 154 9 is_stmt 0 view .LVU128
 453 0016 C1EB0121 		rsb	r1, r1, r1, lsl #8
 454              	.LVL54:
 455              		.loc 1 154 9 view .LVU129
 456 001a 8BB2     		uxth	r3, r1
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 24


 457              		.loc 1 154 7 view .LVU130
 458 001c 3749     		ldr	r1, .L36+4
 459 001e A1FB03E3 		umull	lr, r3, r1, r3
 460 0022 C3F34713 		ubfx	r3, r3, #5, #8
 461              	.LVL55:
 155:lvgl/src/misc/lv_color.c ****     v = (uint16_t)((uint16_t)v * 255) / 100;
 462              		.loc 1 155 5 is_stmt 1 view .LVU131
 463              		.loc 1 155 9 is_stmt 0 view .LVU132
 464 0026 C2EB0222 		rsb	r2, r2, r2, lsl #8
 465              	.LVL56:
 466              		.loc 1 155 9 view .LVU133
 467 002a 92B2     		uxth	r2, r2
 468              		.loc 1 155 7 view .LVU134
 469 002c A1FB0212 		umull	r1, r2, r1, r2
 470 0030 C2F34712 		ubfx	r2, r2, #5, #8
 471              	.LVL57:
 156:lvgl/src/misc/lv_color.c **** 
 157:lvgl/src/misc/lv_color.c ****     uint8_t r, g, b;
 472              		.loc 1 157 5 is_stmt 1 view .LVU135
 158:lvgl/src/misc/lv_color.c **** 
 159:lvgl/src/misc/lv_color.c ****     uint8_t region, remainder, p, q, t;
 473              		.loc 1 159 5 view .LVU136
 160:lvgl/src/misc/lv_color.c **** 
 161:lvgl/src/misc/lv_color.c ****     if(s == 0) {
 474              		.loc 1 161 5 view .LVU137
 475              		.loc 1 161 7 is_stmt 0 view .LVU138
 476 0034 83B3     		cbz	r3, .L35
 162:lvgl/src/misc/lv_color.c ****         return lv_color_make(v, v, v);
 163:lvgl/src/misc/lv_color.c ****     }
 164:lvgl/src/misc/lv_color.c **** 
 165:lvgl/src/misc/lv_color.c ****     region    = h / 43;
 477              		.loc 1 165 5 is_stmt 1 view .LVU139
 478              		.loc 1 165 15 is_stmt 0 view .LVU140
 479 0036 3249     		ldr	r1, .L36+8
 480 0038 A1FB0010 		umull	r1, r0, r1, r0
 481              	.LVL58:
 482              		.loc 1 165 15 view .LVU141
 483 003c C0F3C700 		ubfx	r0, r0, #3, #8
 484              	.LVL59:
 166:lvgl/src/misc/lv_color.c ****     remainder = (h - (region * 43)) * 6;
 485              		.loc 1 166 5 is_stmt 1 view .LVU142
 486              		.loc 1 166 20 is_stmt 0 view .LVU143
 487 0040 1FFA8CF1 		uxth	r1, ip
 488 0044 6FF02A0C 		mvn	ip, #42
 489 0048 0CFB0011 		mla	r1, ip, r0, r1
 490              		.loc 1 166 15 view .LVU144
 491 004c 01EB4101 		add	r1, r1, r1, lsl #1
 492 0050 4900     		lsls	r1, r1, #1
 493 0052 C9B2     		uxtb	r1, r1
 494              	.LVL60:
 167:lvgl/src/misc/lv_color.c **** 
 168:lvgl/src/misc/lv_color.c ****     p = (v * (255 - s)) >> 8;
 495              		.loc 1 168 5 is_stmt 1 view .LVU145
 496              		.loc 1 168 19 is_stmt 0 view .LVU146
 497 0054 C3F1FF0E 		rsb	lr, r3, #255
 498              		.loc 1 168 12 view .LVU147
 499 0058 0EFB02FE 		mul	lr, lr, r2
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 25


 500              		.loc 1 168 7 view .LVU148
 501 005c CEF3072E 		ubfx	lr, lr, #8, #8
 502              	.LVL61:
 169:lvgl/src/misc/lv_color.c ****     q = (v * (255 - ((s * remainder) >> 8))) >> 8;
 503              		.loc 1 169 5 is_stmt 1 view .LVU149
 504              		.loc 1 169 25 is_stmt 0 view .LVU150
 505 0060 01FB03FC 		mul	ip, r1, r3
 506              		.loc 1 169 38 view .LVU151
 507 0064 4FEA2C2C 		asr	ip, ip, #8
 508              		.loc 1 169 19 view .LVU152
 509 0068 CCF1FF0C 		rsb	ip, ip, #255
 510              		.loc 1 169 12 view .LVU153
 511 006c 0CFB02FC 		mul	ip, ip, r2
 512              		.loc 1 169 7 view .LVU154
 513 0070 CCF3072C 		ubfx	ip, ip, #8, #8
 514              	.LVL62:
 170:lvgl/src/misc/lv_color.c ****     t = (v * (255 - ((s * (255 - remainder)) >> 8))) >> 8;
 515              		.loc 1 170 5 is_stmt 1 view .LVU155
 516              		.loc 1 170 32 is_stmt 0 view .LVU156
 517 0074 C1F1FF01 		rsb	r1, r1, #255
 518              	.LVL63:
 519              		.loc 1 170 25 view .LVU157
 520 0078 01FB03F3 		mul	r3, r1, r3
 521              	.LVL64:
 522              		.loc 1 170 46 view .LVU158
 523 007c 1B12     		asrs	r3, r3, #8
 524              		.loc 1 170 19 view .LVU159
 525 007e C3F1FF03 		rsb	r3, r3, #255
 526              		.loc 1 170 12 view .LVU160
 527 0082 02FB03F3 		mul	r3, r2, r3
 528              		.loc 1 170 7 view .LVU161
 529 0086 C3F30723 		ubfx	r3, r3, #8, #8
 530              	.LVL65:
 171:lvgl/src/misc/lv_color.c **** 
 172:lvgl/src/misc/lv_color.c ****     switch(region) {
 531              		.loc 1 172 5 is_stmt 1 view .LVU162
 532 008a 0428     		cmp	r0, #4
 533 008c 2ED8     		bhi	.L26
 534 008e DFE800F0 		tbb	[pc, r0]
 535              	.L28:
 536 0092 0E       		.byte	(.L32-.L28)/2
 537 0093 10       		.byte	(.L31-.L28)/2
 538 0094 20       		.byte	(.L30-.L28)/2
 539 0095 23       		.byte	(.L29-.L28)/2
 540 0096 28       		.byte	(.L27-.L28)/2
 541              	.LVL66:
 542 0097 00       		.p2align 1
 543              	.L35:
 162:lvgl/src/misc/lv_color.c ****     }
 544              		.loc 1 162 9 view .LVU163
 545              	.LBB44:
 546              	.LBI44:
 592:lvgl/src/misc/lv_color.h **** {
 547              		.loc 2 592 26 view .LVU164
 548              	.LBB45:
 594:lvgl/src/misc/lv_color.h **** }
 549              		.loc 2 594 5 view .LVU165
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 26


 594:lvgl/src/misc/lv_color.h **** }
 550              		.loc 2 594 39 is_stmt 0 view .LVU166
 551 0098 D308     		lsrs	r3, r2, #3
 552              	.LVL67:
 594:lvgl/src/misc/lv_color.h **** }
 553              		.loc 2 594 39 view .LVU167
 554 009a 9208     		lsrs	r2, r2, #2
 555              	.LVL68:
 594:lvgl/src/misc/lv_color.h **** }
 556              		.loc 2 594 12 view .LVU168
 557 009c 4FF00000 		mov	r0, #0	@ movhi
 558              	.LVL69:
 594:lvgl/src/misc/lv_color.h **** }
 559              		.loc 2 594 12 view .LVU169
 560 00a0 63F30400 		bfi	r0, r3, #0, #5
 561 00a4 62F34A10 		bfi	r0, r2, #5, #6
 562 00a8 63F3CF20 		bfi	r0, r3, #11, #5
 563              	.LVL70:
 594:lvgl/src/misc/lv_color.h **** }
 564              		.loc 2 594 12 view .LVU170
 565              	.LBE45:
 566              	.LBE44:
 162:lvgl/src/misc/lv_color.c ****     }
 567              		.loc 1 162 16 view .LVU171
 568 00ac 0FE0     		b	.L25
 569              	.LVL71:
 570              	.L32:
 571              		.loc 1 172 5 view .LVU172
 572 00ae 9446     		mov	ip, r2
 573              	.LVL72:
 574              		.loc 1 172 5 view .LVU173
 575 00b0 1A46     		mov	r2, r3
 576              	.LVL73:
 577              	.L31:
 173:lvgl/src/misc/lv_color.c ****         case 0:
 174:lvgl/src/misc/lv_color.c ****             r = v;
 175:lvgl/src/misc/lv_color.c ****             g = t;
 176:lvgl/src/misc/lv_color.c ****             b = p;
 177:lvgl/src/misc/lv_color.c ****             break;
 178:lvgl/src/misc/lv_color.c ****         case 1:
 179:lvgl/src/misc/lv_color.c ****             r = q;
 180:lvgl/src/misc/lv_color.c ****             g = v;
 181:lvgl/src/misc/lv_color.c ****             b = p;
 182:lvgl/src/misc/lv_color.c ****             break;
 183:lvgl/src/misc/lv_color.c ****         case 2:
 184:lvgl/src/misc/lv_color.c ****             r = p;
 185:lvgl/src/misc/lv_color.c ****             g = v;
 186:lvgl/src/misc/lv_color.c ****             b = t;
 187:lvgl/src/misc/lv_color.c ****             break;
 188:lvgl/src/misc/lv_color.c ****         case 3:
 189:lvgl/src/misc/lv_color.c ****             r = p;
 190:lvgl/src/misc/lv_color.c ****             g = q;
 191:lvgl/src/misc/lv_color.c ****             b = v;
 192:lvgl/src/misc/lv_color.c ****             break;
 193:lvgl/src/misc/lv_color.c ****         case 4:
 194:lvgl/src/misc/lv_color.c ****             r = t;
 195:lvgl/src/misc/lv_color.c ****             g = p;
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 27


 196:lvgl/src/misc/lv_color.c ****             b = v;
 197:lvgl/src/misc/lv_color.c ****             break;
 198:lvgl/src/misc/lv_color.c ****         default:
 199:lvgl/src/misc/lv_color.c ****             r = v;
 200:lvgl/src/misc/lv_color.c ****             g = p;
 201:lvgl/src/misc/lv_color.c ****             b = q;
 202:lvgl/src/misc/lv_color.c ****             break;
 203:lvgl/src/misc/lv_color.c ****     }
 204:lvgl/src/misc/lv_color.c **** 
 205:lvgl/src/misc/lv_color.c ****     lv_color_t result = lv_color_make(r, g, b);
 578              		.loc 1 205 5 is_stmt 1 view .LVU174
 579              	.LBB46:
 580              	.LBI46:
 592:lvgl/src/misc/lv_color.h **** {
 581              		.loc 2 592 26 view .LVU175
 582              	.LBB47:
 594:lvgl/src/misc/lv_color.h **** }
 583              		.loc 2 594 5 view .LVU176
 594:lvgl/src/misc/lv_color.h **** }
 584              		.loc 2 594 39 is_stmt 0 view .LVU177
 585 00b2 CEF3C40E 		ubfx	lr, lr, #3, #5
 586              	.LVL74:
 594:lvgl/src/misc/lv_color.h **** }
 587              		.loc 2 594 39 view .LVU178
 588 00b6 C2F38502 		ubfx	r2, r2, #2, #6
 589              	.LVL75:
 594:lvgl/src/misc/lv_color.h **** }
 590              		.loc 2 594 39 view .LVU179
 591 00ba CCF3C40C 		ubfx	ip, ip, #3, #5
 592              	.LVL76:
 594:lvgl/src/misc/lv_color.h **** }
 593              		.loc 2 594 12 view .LVU180
 594 00be 4FF00000 		mov	r0, #0	@ movhi
 595              	.LVL77:
 594:lvgl/src/misc/lv_color.h **** }
 596              		.loc 2 594 12 view .LVU181
 597 00c2 6EF30400 		bfi	r0, lr, #0, #5
 598 00c6 62F34A10 		bfi	r0, r2, #5, #6
 599 00ca 6CF3CF20 		bfi	r0, ip, #11, #5
 600              	.LVL78:
 594:lvgl/src/misc/lv_color.h **** }
 601              		.loc 2 594 12 view .LVU182
 602              	.LBE47:
 603              	.LBE46:
 206:lvgl/src/misc/lv_color.c ****     return result;
 604              		.loc 1 206 5 is_stmt 1 view .LVU183
 605              	.L25:
 207:lvgl/src/misc/lv_color.c **** }
 606              		.loc 1 207 1 is_stmt 0 view .LVU184
 607 00ce 5DF804FB 		ldr	pc, [sp], #4
 608              	.LVL79:
 609              	.L30:
 184:lvgl/src/misc/lv_color.c ****             g = v;
 610              		.loc 1 184 13 is_stmt 1 view .LVU185
 185:lvgl/src/misc/lv_color.c ****             b = t;
 611              		.loc 1 185 13 view .LVU186
 186:lvgl/src/misc/lv_color.c ****             break;
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 28


 612              		.loc 1 186 13 view .LVU187
 187:lvgl/src/misc/lv_color.c ****         case 3:
 613              		.loc 1 187 13 view .LVU188
 184:lvgl/src/misc/lv_color.c ****             g = v;
 614              		.loc 1 184 15 is_stmt 0 view .LVU189
 615 00d2 F446     		mov	ip, lr
 616              	.LVL80:
 186:lvgl/src/misc/lv_color.c ****             break;
 617              		.loc 1 186 15 view .LVU190
 618 00d4 9E46     		mov	lr, r3
 619              	.LVL81:
 187:lvgl/src/misc/lv_color.c ****         case 3:
 620              		.loc 1 187 13 view .LVU191
 621 00d6 ECE7     		b	.L31
 622              	.LVL82:
 623              	.L29:
 189:lvgl/src/misc/lv_color.c ****             g = q;
 624              		.loc 1 189 13 is_stmt 1 view .LVU192
 190:lvgl/src/misc/lv_color.c ****             b = v;
 625              		.loc 1 190 13 view .LVU193
 191:lvgl/src/misc/lv_color.c ****             break;
 626              		.loc 1 191 13 view .LVU194
 192:lvgl/src/misc/lv_color.c ****         case 4:
 627              		.loc 1 192 13 view .LVU195
 628 00d8 6346     		mov	r3, ip
 629              	.LVL83:
 189:lvgl/src/misc/lv_color.c ****             g = q;
 630              		.loc 1 189 15 is_stmt 0 view .LVU196
 631 00da F446     		mov	ip, lr
 632              	.LVL84:
 191:lvgl/src/misc/lv_color.c ****             break;
 633              		.loc 1 191 15 view .LVU197
 634 00dc 9646     		mov	lr, r2
 635              	.LVL85:
 190:lvgl/src/misc/lv_color.c ****             b = v;
 636              		.loc 1 190 15 view .LVU198
 637 00de 1A46     		mov	r2, r3
 638              	.LVL86:
 192:lvgl/src/misc/lv_color.c ****         case 4:
 639              		.loc 1 192 13 view .LVU199
 640 00e0 E7E7     		b	.L31
 641              	.LVL87:
 642              	.L27:
 194:lvgl/src/misc/lv_color.c ****             g = p;
 643              		.loc 1 194 13 is_stmt 1 view .LVU200
 195:lvgl/src/misc/lv_color.c ****             b = v;
 644              		.loc 1 195 13 view .LVU201
 196:lvgl/src/misc/lv_color.c ****             break;
 645              		.loc 1 196 13 view .LVU202
 197:lvgl/src/misc/lv_color.c ****         default:
 646              		.loc 1 197 13 view .LVU203
 647 00e2 1146     		mov	r1, r2
 195:lvgl/src/misc/lv_color.c ****             b = v;
 648              		.loc 1 195 15 is_stmt 0 view .LVU204
 649 00e4 7246     		mov	r2, lr
 650              	.LVL88:
 196:lvgl/src/misc/lv_color.c ****             break;
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 29


 651              		.loc 1 196 15 view .LVU205
 652 00e6 8E46     		mov	lr, r1
 653              	.LVL89:
 194:lvgl/src/misc/lv_color.c ****             g = p;
 654              		.loc 1 194 15 view .LVU206
 655 00e8 9C46     		mov	ip, r3
 656              	.LVL90:
 197:lvgl/src/misc/lv_color.c ****         default:
 657              		.loc 1 197 13 view .LVU207
 658 00ea E2E7     		b	.L31
 659              	.LVL91:
 660              	.L26:
 199:lvgl/src/misc/lv_color.c ****             g = p;
 661              		.loc 1 199 13 is_stmt 1 view .LVU208
 200:lvgl/src/misc/lv_color.c ****             b = q;
 662              		.loc 1 200 13 view .LVU209
 201:lvgl/src/misc/lv_color.c ****             break;
 663              		.loc 1 201 13 view .LVU210
 202:lvgl/src/misc/lv_color.c ****     }
 664              		.loc 1 202 13 view .LVU211
 665 00ec 6346     		mov	r3, ip
 666              	.LVL92:
 199:lvgl/src/misc/lv_color.c ****             g = p;
 667              		.loc 1 199 15 is_stmt 0 view .LVU212
 668 00ee 9446     		mov	ip, r2
 669              	.LVL93:
 200:lvgl/src/misc/lv_color.c ****             b = q;
 670              		.loc 1 200 15 view .LVU213
 671 00f0 7246     		mov	r2, lr
 672              	.LVL94:
 201:lvgl/src/misc/lv_color.c ****             break;
 673              		.loc 1 201 15 view .LVU214
 674 00f2 9E46     		mov	lr, r3
 675              	.LVL95:
 202:lvgl/src/misc/lv_color.c ****     }
 676              		.loc 1 202 13 view .LVU215
 677 00f4 DDE7     		b	.L31
 678              	.L37:
 679 00f6 00BF     		.align	2
 680              	.L36:
 681 00f8 176CC116 		.word	381774871
 682 00fc 1F85EB51 		.word	1374389535
 683 0100 83BEA02F 		.word	799063683
 684              		.cfi_endproc
 685              	.LFE22:
 687              		.section	.text.lv_color_rgb_to_hsv,"ax",%progbits
 688              		.align	1
 689              		.global	lv_color_rgb_to_hsv
 690              		.syntax unified
 691              		.thumb
 692              		.thumb_func
 694              	lv_color_rgb_to_hsv:
 695              	.LVL96:
 696              	.LFB23:
 208:lvgl/src/misc/lv_color.c **** 
 209:lvgl/src/misc/lv_color.c **** /**
 210:lvgl/src/misc/lv_color.c ****  * Convert a 32-bit RGB color to HSV
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 30


 211:lvgl/src/misc/lv_color.c ****  * @param r8 8-bit red
 212:lvgl/src/misc/lv_color.c ****  * @param g8 8-bit green
 213:lvgl/src/misc/lv_color.c ****  * @param b8 8-bit blue
 214:lvgl/src/misc/lv_color.c ****  * @return the given RGB color in HSV
 215:lvgl/src/misc/lv_color.c ****  */
 216:lvgl/src/misc/lv_color.c **** lv_color_hsv_t lv_color_rgb_to_hsv(uint8_t r8, uint8_t g8, uint8_t b8)
 217:lvgl/src/misc/lv_color.c **** {
 697              		.loc 1 217 1 is_stmt 1 view -0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 8
 700              		@ frame_needed = 0, uses_anonymous_args = 0
 701              		.loc 1 217 1 is_stmt 0 view .LVU217
 702 0000 70B5     		push	{r4, r5, r6, lr}
 703              	.LCFI5:
 704              		.cfi_def_cfa_offset 16
 705              		.cfi_offset 4, -16
 706              		.cfi_offset 5, -12
 707              		.cfi_offset 6, -8
 708              		.cfi_offset 14, -4
 709 0002 82B0     		sub	sp, sp, #8
 710              	.LCFI6:
 711              		.cfi_def_cfa_offset 24
 218:lvgl/src/misc/lv_color.c ****     uint16_t r = ((uint32_t)r8 << 10) / 255;
 712              		.loc 1 218 5 is_stmt 1 view .LVU218
 713              		.loc 1 218 32 is_stmt 0 view .LVU219
 714 0004 8002     		lsls	r0, r0, #10
 715              	.LVL97:
 716              		.loc 1 218 39 view .LVU220
 717 0006 484E     		ldr	r6, .L60
 718 0008 A6FB000E 		umull	r0, lr, r6, r0
 719 000c 4FEADE1C 		lsr	ip, lr, #7
 720              		.loc 1 218 14 view .LVU221
 721 0010 6446     		mov	r4, ip
 722              	.LVL98:
 219:lvgl/src/misc/lv_color.c ****     uint16_t g = ((uint32_t)g8 << 10) / 255;
 723              		.loc 1 219 5 is_stmt 1 view .LVU222
 724              		.loc 1 219 32 is_stmt 0 view .LVU223
 725 0012 8B02     		lsls	r3, r1, #10
 726              		.loc 1 219 39 view .LVU224
 727 0014 A6FB0313 		umull	r1, r3, r6, r3
 728              	.LVL99:
 729              		.loc 1 219 39 view .LVU225
 730 0018 DD09     		lsrs	r5, r3, #7
 731              		.loc 1 219 14 view .LVU226
 732 001a 2B46     		mov	r3, r5
 733              	.LVL100:
 220:lvgl/src/misc/lv_color.c ****     uint16_t b = ((uint32_t)b8 << 10) / 255;
 734              		.loc 1 220 5 is_stmt 1 view .LVU227
 735              		.loc 1 220 32 is_stmt 0 view .LVU228
 736 001c 9202     		lsls	r2, r2, #10
 737              	.LVL101:
 738              		.loc 1 220 39 view .LVU229
 739 001e A6FB0262 		umull	r6, r2, r6, r2
 740 0022 D609     		lsrs	r6, r2, #7
 741              		.loc 1 220 14 view .LVU230
 742 0024 3246     		mov	r2, r6
 743              	.LVL102:
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 31


 221:lvgl/src/misc/lv_color.c **** 
 222:lvgl/src/misc/lv_color.c ****     uint16_t rgbMin = r < g ? (r < b ? r : b) : (g < b ? g : b);
 744              		.loc 1 222 5 is_stmt 1 view .LVU231
 745              		.loc 1 222 14 is_stmt 0 view .LVU232
 746 0026 B5EBDE1F 		cmp	r5, lr, lsr #7
 747 002a 2BD9     		bls	.L39
 748              		.loc 1 222 14 discriminator 1 view .LVU233
 749 002c 6146     		mov	r1, ip
 750 002e B445     		cmp	ip, r6
 751 0030 28BF     		it	cs
 752 0032 3146     		movcs	r1, r6
 753 0034 89B2     		uxth	r1, r1
 754              	.L40:
 755              	.LVL103:
 223:lvgl/src/misc/lv_color.c ****     uint16_t rgbMax = r > g ? (r > b ? r : b) : (g > b ? g : b);
 756              		.loc 1 223 5 is_stmt 1 view .LVU234
 757              		.loc 1 223 14 is_stmt 0 view .LVU235
 758 0036 9C42     		cmp	r4, r3
 759 0038 2AD9     		bls	.L41
 760              		.loc 1 223 14 discriminator 1 view .LVU236
 761 003a 2046     		mov	r0, r4
 762 003c 9442     		cmp	r4, r2
 763 003e 38BF     		it	cc
 764 0040 1046     		movcc	r0, r2
 765 0042 80B2     		uxth	r0, r0
 766              	.L42:
 767              	.LVL104:
 224:lvgl/src/misc/lv_color.c **** 
 225:lvgl/src/misc/lv_color.c ****     lv_color_hsv_t hsv;
 768              		.loc 1 225 5 is_stmt 1 view .LVU237
 226:lvgl/src/misc/lv_color.c **** 
 227:lvgl/src/misc/lv_color.c ****     // https://en.wikipedia.org/wiki/HSL_and_HSV#Lightness
 228:lvgl/src/misc/lv_color.c ****     hsv.v = (100 * rgbMax) >> 10;
 769              		.loc 1 228 5 view .LVU238
 770              		.loc 1 228 18 is_stmt 0 view .LVU239
 771 0044 4FF0640E 		mov	lr, #100
 772 0048 0EFB00FE 		mul	lr, lr, r0
 773              		.loc 1 228 28 view .LVU240
 774 004c 4FEAAE2E 		asr	lr, lr, #10
 775              		.loc 1 228 11 view .LVU241
 776 0050 8DF803E0 		strb	lr, [sp, #3]
 229:lvgl/src/misc/lv_color.c **** 
 230:lvgl/src/misc/lv_color.c ****     int32_t delta = rgbMax - rgbMin;
 777              		.loc 1 230 5 is_stmt 1 view .LVU242
 778              		.loc 1 230 13 is_stmt 0 view .LVU243
 779 0054 411A     		subs	r1, r0, r1
 780              	.LVL105:
 231:lvgl/src/misc/lv_color.c ****     if(delta < 3) {
 781              		.loc 1 231 5 is_stmt 1 view .LVU244
 782              		.loc 1 231 7 is_stmt 0 view .LVU245
 783 0056 0229     		cmp	r1, #2
 784 0058 20DD     		ble	.L54
 232:lvgl/src/misc/lv_color.c ****         hsv.h = 0;
 233:lvgl/src/misc/lv_color.c ****         hsv.s = 0;
 234:lvgl/src/misc/lv_color.c ****         return hsv;
 235:lvgl/src/misc/lv_color.c ****     }
 236:lvgl/src/misc/lv_color.c **** 
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 32


 237:lvgl/src/misc/lv_color.c ****     // https://en.wikipedia.org/wiki/HSL_and_HSV#Saturation
 238:lvgl/src/misc/lv_color.c ****     hsv.s = 100 * delta / rgbMax;
 785              		.loc 1 238 5 is_stmt 1 view .LVU246
 786              		.loc 1 238 17 is_stmt 0 view .LVU247
 787 005a 4FF0640E 		mov	lr, #100
 788 005e 0EFB01FE 		mul	lr, lr, r1
 789              		.loc 1 238 25 view .LVU248
 790 0062 9EFBF0FE 		sdiv	lr, lr, r0
 791              		.loc 1 238 11 view .LVU249
 792 0066 5FFA8EFE 		uxtb	lr, lr
 793 006a 8DF802E0 		strb	lr, [sp, #2]
 239:lvgl/src/misc/lv_color.c ****     if(hsv.s < 3) {
 794              		.loc 1 239 5 is_stmt 1 view .LVU250
 795              		.loc 1 239 7 is_stmt 0 view .LVU251
 796 006e BEF1020F 		cmp	lr, #2
 797 0072 1BD9     		bls	.L55
 240:lvgl/src/misc/lv_color.c ****         hsv.h = 0;
 241:lvgl/src/misc/lv_color.c ****         return hsv;
 242:lvgl/src/misc/lv_color.c ****     }
 243:lvgl/src/misc/lv_color.c **** 
 244:lvgl/src/misc/lv_color.c ****     // https://en.wikipedia.org/wiki/HSL_and_HSV#Hue_and_chroma
 245:lvgl/src/misc/lv_color.c ****     int32_t h;
 798              		.loc 1 245 5 is_stmt 1 view .LVU252
 246:lvgl/src/misc/lv_color.c ****     if(rgbMax == r)
 799              		.loc 1 246 5 view .LVU253
 800              		.loc 1 246 7 is_stmt 0 view .LVU254
 801 0074 A042     		cmp	r0, r4
 802 0076 1FD0     		beq	.L56
 247:lvgl/src/misc/lv_color.c ****         h = (((g - b) << 10) / delta) + (g < b ? (6 << 10) : 0); // between yellow & magenta
 248:lvgl/src/misc/lv_color.c ****     else if(rgbMax == g)
 803              		.loc 1 248 10 is_stmt 1 view .LVU255
 804              		.loc 1 248 12 is_stmt 0 view .LVU256
 805 0078 9842     		cmp	r0, r3
 806 007a 3FD0     		beq	.L57
 249:lvgl/src/misc/lv_color.c ****         h = (((b - r) << 10) / delta) + (2 << 10); // between cyan & yellow
 250:lvgl/src/misc/lv_color.c ****     else if(rgbMax == b)
 807              		.loc 1 250 10 is_stmt 1 view .LVU257
 808              		.loc 1 250 12 is_stmt 0 view .LVU258
 809 007c 9042     		cmp	r0, r2
 810 007e 46D0     		beq	.L58
 251:lvgl/src/misc/lv_color.c ****         h = (((r - g) << 10) / delta) + (4 << 10); // between magenta & cyan
 252:lvgl/src/misc/lv_color.c ****     else
 253:lvgl/src/misc/lv_color.c ****         h = 0;
 811              		.loc 1 253 11 view .LVU259
 812 0080 0023     		movs	r3, #0
 813 0082 24E0     		b	.L48
 814              	.LVL106:
 815              	.L39:
 222:lvgl/src/misc/lv_color.c ****     uint16_t rgbMax = r > g ? (r > b ? r : b) : (g > b ? g : b);
 816              		.loc 1 222 14 discriminator 2 view .LVU260
 817 0084 2946     		mov	r1, r5
 818 0086 B542     		cmp	r5, r6
 819 0088 28BF     		it	cs
 820 008a 3146     		movcs	r1, r6
 821 008c 89B2     		uxth	r1, r1
 822 008e D2E7     		b	.L40
 823              	.LVL107:
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 33


 824              	.L41:
 223:lvgl/src/misc/lv_color.c **** 
 825              		.loc 1 223 14 discriminator 2 view .LVU261
 826 0090 1846     		mov	r0, r3
 827 0092 9342     		cmp	r3, r2
 828 0094 38BF     		it	cc
 829 0096 1046     		movcc	r0, r2
 830 0098 80B2     		uxth	r0, r0
 831 009a D3E7     		b	.L42
 832              	.LVL108:
 833              	.L54:
 232:lvgl/src/misc/lv_color.c ****         hsv.s = 0;
 834              		.loc 1 232 9 is_stmt 1 view .LVU262
 232:lvgl/src/misc/lv_color.c ****         hsv.s = 0;
 835              		.loc 1 232 15 is_stmt 0 view .LVU263
 836 009c 0023     		movs	r3, #0
 837 009e ADF80030 		strh	r3, [sp]	@ movhi
 233:lvgl/src/misc/lv_color.c ****         return hsv;
 838              		.loc 1 233 9 is_stmt 1 view .LVU264
 233:lvgl/src/misc/lv_color.c ****         return hsv;
 839              		.loc 1 233 15 is_stmt 0 view .LVU265
 840 00a2 8DF80230 		strb	r3, [sp, #2]
 234:lvgl/src/misc/lv_color.c ****     }
 841              		.loc 1 234 9 is_stmt 1 view .LVU266
 234:lvgl/src/misc/lv_color.c ****     }
 842              		.loc 1 234 16 is_stmt 0 view .LVU267
 843 00a6 009B     		ldr	r3, [sp]
 844 00a8 0193     		str	r3, [sp, #4]
 845 00aa 1AE0     		b	.L44
 846              	.L55:
 240:lvgl/src/misc/lv_color.c ****         return hsv;
 847              		.loc 1 240 9 is_stmt 1 view .LVU268
 240:lvgl/src/misc/lv_color.c ****         return hsv;
 848              		.loc 1 240 15 is_stmt 0 view .LVU269
 849 00ac 0023     		movs	r3, #0
 850 00ae ADF80030 		strh	r3, [sp]	@ movhi
 241:lvgl/src/misc/lv_color.c ****     }
 851              		.loc 1 241 9 is_stmt 1 view .LVU270
 241:lvgl/src/misc/lv_color.c ****     }
 852              		.loc 1 241 16 is_stmt 0 view .LVU271
 853 00b2 009B     		ldr	r3, [sp]
 854 00b4 0193     		str	r3, [sp, #4]
 855 00b6 14E0     		b	.L44
 856              	.L56:
 247:lvgl/src/misc/lv_color.c ****     else if(rgbMax == g)
 857              		.loc 1 247 9 is_stmt 1 view .LVU272
 247:lvgl/src/misc/lv_color.c ****     else if(rgbMax == g)
 858              		.loc 1 247 23 is_stmt 0 view .LVU273
 859 00b8 A8B2     		uxth	r0, r5
 860              	.LVL109:
 247:lvgl/src/misc/lv_color.c ****     else if(rgbMax == g)
 861              		.loc 1 247 23 view .LVU274
 862 00ba B6B2     		uxth	r6, r6
 247:lvgl/src/misc/lv_color.c ****     else if(rgbMax == g)
 863              		.loc 1 247 18 view .LVU275
 864 00bc 801B     		subs	r0, r0, r6
 247:lvgl/src/misc/lv_color.c ****     else if(rgbMax == g)
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 34


 865              		.loc 1 247 23 view .LVU276
 866 00be 8002     		lsls	r0, r0, #10
 247:lvgl/src/misc/lv_color.c ****     else if(rgbMax == g)
 867              		.loc 1 247 30 view .LVU277
 868 00c0 90FBF1F1 		sdiv	r1, r0, r1
 869              	.LVL110:
 247:lvgl/src/misc/lv_color.c ****     else if(rgbMax == g)
 870              		.loc 1 247 60 view .LVU278
 871 00c4 9342     		cmp	r3, r2
 872 00c6 17D2     		bcs	.L51
 247:lvgl/src/misc/lv_color.c ****     else if(rgbMax == g)
 873              		.loc 1 247 60 discriminator 1 view .LVU279
 874 00c8 4FF4C053 		mov	r3, #6144
 875              	.L47:
 247:lvgl/src/misc/lv_color.c ****     else if(rgbMax == g)
 876              		.loc 1 247 11 discriminator 4 view .LVU280
 877 00cc 0B44     		add	r3, r3, r1
 878              	.LVL111:
 879              	.L48:
 254:lvgl/src/misc/lv_color.c ****     h *= 60;
 880              		.loc 1 254 5 is_stmt 1 view .LVU281
 881              		.loc 1 254 7 is_stmt 0 view .LVU282
 882 00ce C3EB0313 		rsb	r3, r3, r3, lsl #4
 883              	.LVL112:
 255:lvgl/src/misc/lv_color.c ****     h >>= 10;
 884              		.loc 1 255 5 is_stmt 1 view .LVU283
 885              		.loc 1 255 7 is_stmt 0 view .LVU284
 886 00d2 43F31523 		sbfx	r3, r3, #8, #22
 887              	.LVL113:
 256:lvgl/src/misc/lv_color.c ****     if(h < 0) h += 360;
 888              		.loc 1 256 5 is_stmt 1 view .LVU285
 889              		.loc 1 256 7 is_stmt 0 view .LVU286
 890 00d6 002B     		cmp	r3, #0
 891 00d8 22DB     		blt	.L59
 892              	.L50:
 257:lvgl/src/misc/lv_color.c **** 
 258:lvgl/src/misc/lv_color.c ****     hsv.h = h;
 893              		.loc 1 258 5 is_stmt 1 view .LVU287
 894              		.loc 1 258 11 is_stmt 0 view .LVU288
 895 00da ADF80030 		strh	r3, [sp]	@ movhi
 259:lvgl/src/misc/lv_color.c ****     return hsv;
 896              		.loc 1 259 5 is_stmt 1 view .LVU289
 897              		.loc 1 259 12 is_stmt 0 view .LVU290
 898 00de 009B     		ldr	r3, [sp]
 899              	.LVL114:
 900              		.loc 1 259 12 view .LVU291
 901 00e0 0193     		str	r3, [sp, #4]
 902              	.LVL115:
 903              	.L44:
 260:lvgl/src/misc/lv_color.c **** }
 904              		.loc 1 260 1 view .LVU292
 905 00e2 0020     		movs	r0, #0
 906 00e4 BDF80430 		ldrh	r3, [sp, #4]
 907 00e8 63F30F00 		bfi	r0, r3, #0, #16
 908 00ec BDF80630 		ldrh	r3, [sp, #6]
 909 00f0 63F31F40 		bfi	r0, r3, #16, #16
 910 00f4 02B0     		add	sp, sp, #8
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 35


 911              	.LCFI7:
 912              		.cfi_remember_state
 913              		.cfi_def_cfa_offset 16
 914              		@ sp needed
 915 00f6 70BD     		pop	{r4, r5, r6, pc}
 916              	.LVL116:
 917              	.L51:
 918              	.LCFI8:
 919              		.cfi_restore_state
 247:lvgl/src/misc/lv_color.c ****     else if(rgbMax == g)
 920              		.loc 1 247 60 discriminator 2 view .LVU293
 921 00f8 0023     		movs	r3, #0
 922 00fa E7E7     		b	.L47
 923              	.LVL117:
 924              	.L57:
 249:lvgl/src/misc/lv_color.c ****     else if(rgbMax == b)
 925              		.loc 1 249 9 is_stmt 1 view .LVU294
 249:lvgl/src/misc/lv_color.c ****     else if(rgbMax == b)
 926              		.loc 1 249 23 is_stmt 0 view .LVU295
 927 00fc B3B2     		uxth	r3, r6
 249:lvgl/src/misc/lv_color.c ****     else if(rgbMax == b)
 928              		.loc 1 249 18 view .LVU296
 929 00fe A3EB0C03 		sub	r3, r3, ip
 249:lvgl/src/misc/lv_color.c ****     else if(rgbMax == b)
 930              		.loc 1 249 23 view .LVU297
 931 0102 9B02     		lsls	r3, r3, #10
 249:lvgl/src/misc/lv_color.c ****     else if(rgbMax == b)
 932              		.loc 1 249 30 view .LVU298
 933 0104 93FBF1F3 		sdiv	r3, r3, r1
 249:lvgl/src/misc/lv_color.c ****     else if(rgbMax == b)
 934              		.loc 1 249 11 view .LVU299
 935 0108 03F50063 		add	r3, r3, #2048
 936              	.LVL118:
 249:lvgl/src/misc/lv_color.c ****     else if(rgbMax == b)
 937              		.loc 1 249 11 view .LVU300
 938 010c DFE7     		b	.L48
 939              	.LVL119:
 940              	.L58:
 251:lvgl/src/misc/lv_color.c ****     else
 941              		.loc 1 251 9 is_stmt 1 view .LVU301
 251:lvgl/src/misc/lv_color.c ****     else
 942              		.loc 1 251 23 is_stmt 0 view .LVU302
 943 010e ADB2     		uxth	r5, r5
 251:lvgl/src/misc/lv_color.c ****     else
 944              		.loc 1 251 18 view .LVU303
 945 0110 ACEB0503 		sub	r3, ip, r5
 251:lvgl/src/misc/lv_color.c ****     else
 946              		.loc 1 251 23 view .LVU304
 947 0114 9B02     		lsls	r3, r3, #10
 251:lvgl/src/misc/lv_color.c ****     else
 948              		.loc 1 251 30 view .LVU305
 949 0116 93FBF1F3 		sdiv	r3, r3, r1
 251:lvgl/src/misc/lv_color.c ****     else
 950              		.loc 1 251 11 view .LVU306
 951 011a 03F58053 		add	r3, r3, #4096
 952              	.LVL120:
 251:lvgl/src/misc/lv_color.c ****     else
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 36


 953              		.loc 1 251 11 view .LVU307
 954 011e D6E7     		b	.L48
 955              	.LVL121:
 956              	.L59:
 256:lvgl/src/misc/lv_color.c **** 
 957              		.loc 1 256 15 is_stmt 1 discriminator 1 view .LVU308
 256:lvgl/src/misc/lv_color.c **** 
 958              		.loc 1 256 17 is_stmt 0 discriminator 1 view .LVU309
 959 0120 03F5B473 		add	r3, r3, #360
 960              	.LVL122:
 256:lvgl/src/misc/lv_color.c **** 
 961              		.loc 1 256 17 discriminator 1 view .LVU310
 962 0124 D9E7     		b	.L50
 963              	.L61:
 964 0126 00BF     		.align	2
 965              	.L60:
 966 0128 81808080 		.word	-2139062143
 967              		.cfi_endproc
 968              	.LFE23:
 970              		.section	.text.lv_color_to_hsv,"ax",%progbits
 971              		.align	1
 972              		.global	lv_color_to_hsv
 973              		.syntax unified
 974              		.thumb
 975              		.thumb_func
 977              	lv_color_to_hsv:
 978              	.LVL123:
 979              	.LFB24:
 261:lvgl/src/misc/lv_color.c **** 
 262:lvgl/src/misc/lv_color.c **** /**
 263:lvgl/src/misc/lv_color.c ****  * Convert a color to HSV
 264:lvgl/src/misc/lv_color.c ****  * @param color color
 265:lvgl/src/misc/lv_color.c ****  * @return the given color in HSV
 266:lvgl/src/misc/lv_color.c ****  */
 267:lvgl/src/misc/lv_color.c **** lv_color_hsv_t lv_color_to_hsv(lv_color_t color)
 268:lvgl/src/misc/lv_color.c **** {
 980              		.loc 1 268 1 is_stmt 1 view -0
 981              		.cfi_startproc
 982              		@ args = 0, pretend = 0, frame = 8
 983              		@ frame_needed = 0, uses_anonymous_args = 0
 984              		.loc 1 268 1 is_stmt 0 view .LVU312
 985 0000 00B5     		push	{lr}
 986              	.LCFI9:
 987              		.cfi_def_cfa_offset 4
 988              		.cfi_offset 14, -4
 989 0002 83B0     		sub	sp, sp, #12
 990              	.LCFI10:
 991              		.cfi_def_cfa_offset 16
 269:lvgl/src/misc/lv_color.c ****     lv_color32_t color32;
 992              		.loc 1 269 5 is_stmt 1 view .LVU313
 270:lvgl/src/misc/lv_color.c ****     color32.full = lv_color_to32(color);
 993              		.loc 1 270 5 view .LVU314
 994              		.loc 1 270 20 is_stmt 0 view .LVU315
 995 0004 FFF7FEFF 		bl	lv_color_to32
 996              	.LVL124:
 271:lvgl/src/misc/lv_color.c ****     return lv_color_rgb_to_hsv(color32.ch.red, color32.ch.green, color32.ch.blue);
 997              		.loc 1 271 5 is_stmt 1 view .LVU316
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 37


 998              		.loc 1 271 12 is_stmt 0 view .LVU317
 999 0008 C2B2     		uxtb	r2, r0
 1000 000a C0F30721 		ubfx	r1, r0, #8, #8
 1001 000e C0F30740 		ubfx	r0, r0, #16, #8
 1002 0012 FFF7FEFF 		bl	lv_color_rgb_to_hsv
 1003              	.LVL125:
 1004 0016 0190     		str	r0, [sp, #4]
 1005 0018 0020     		movs	r0, #0
 1006 001a BDF80430 		ldrh	r3, [sp, #4]
 1007 001e 63F30F00 		bfi	r0, r3, #0, #16
 1008 0022 BDF80630 		ldrh	r3, [sp, #6]
 1009 0026 63F31F40 		bfi	r0, r3, #16, #16
 272:lvgl/src/misc/lv_color.c **** }
 1010              		.loc 1 272 1 view .LVU318
 1011 002a 03B0     		add	sp, sp, #12
 1012              	.LCFI11:
 1013              		.cfi_def_cfa_offset 4
 1014              		@ sp needed
 1015 002c 5DF804FB 		ldr	pc, [sp], #4
 1016              		.cfi_endproc
 1017              	.LFE24:
 1019              		.section	.text.lv_palette_main,"ax",%progbits
 1020              		.align	1
 1021              		.global	lv_palette_main
 1022              		.syntax unified
 1023              		.thumb
 1024              		.thumb_func
 1026              	lv_palette_main:
 1027              	.LVL126:
 1028              	.LFB25:
 273:lvgl/src/misc/lv_color.c **** 
 274:lvgl/src/misc/lv_color.c **** lv_color_t lv_palette_main(lv_palette_t p)
 275:lvgl/src/misc/lv_color.c **** {
 1029              		.loc 1 275 1 is_stmt 1 view -0
 1030              		.cfi_startproc
 1031              		@ args = 0, pretend = 0, frame = 0
 1032              		@ frame_needed = 0, uses_anonymous_args = 0
 1033              		@ link register save eliminated.
 276:lvgl/src/misc/lv_color.c ****     static const lv_color_t colors[] = {
 1034              		.loc 1 276 5 view .LVU320
 277:lvgl/src/misc/lv_color.c ****         LV_COLOR_MAKE(0xF4, 0x43, 0x36), LV_COLOR_MAKE(0xE9, 0x1E, 0x63), LV_COLOR_MAKE(0x9C, 0x27,
 278:lvgl/src/misc/lv_color.c ****         LV_COLOR_MAKE(0x3F, 0x51, 0xB5), LV_COLOR_MAKE(0x21, 0x96, 0xF3), LV_COLOR_MAKE(0x03, 0xA9,
 279:lvgl/src/misc/lv_color.c ****         LV_COLOR_MAKE(0x00, 0x96, 0x88), LV_COLOR_MAKE(0x4C, 0xAF, 0x50), LV_COLOR_MAKE(0x8B, 0xC3,
 280:lvgl/src/misc/lv_color.c ****         LV_COLOR_MAKE(0xFF, 0xEB, 0x3B), LV_COLOR_MAKE(0xFF, 0xC1, 0x07), LV_COLOR_MAKE(0xFF, 0x98,
 281:lvgl/src/misc/lv_color.c ****         LV_COLOR_MAKE(0x79, 0x55, 0x48), LV_COLOR_MAKE(0x60, 0x7D, 0x8B), LV_COLOR_MAKE(0x9E, 0x9E,
 282:lvgl/src/misc/lv_color.c ****     };
 283:lvgl/src/misc/lv_color.c **** 
 284:lvgl/src/misc/lv_color.c ****     if(p >= _LV_PALETTE_LAST) {
 1035              		.loc 1 284 5 view .LVU321
 1036              		.loc 1 284 7 is_stmt 0 view .LVU322
 1037 0000 1228     		cmp	r0, #18
 1038 0002 03D8     		bhi	.L67
 285:lvgl/src/misc/lv_color.c ****         LV_LOG_WARN("Invalid palette: %d", p);
 286:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 287:lvgl/src/misc/lv_color.c ****     }
 288:lvgl/src/misc/lv_color.c **** 
 289:lvgl/src/misc/lv_color.c ****     return colors[p];
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 38


 1039              		.loc 1 289 5 is_stmt 1 view .LVU323
 1040              		.loc 1 289 18 is_stmt 0 view .LVU324
 1041 0004 064B     		ldr	r3, .L68
 1042 0006 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 1043              	.LVL127:
 290:lvgl/src/misc/lv_color.c **** 
 291:lvgl/src/misc/lv_color.c **** }
 1044              		.loc 1 291 1 view .LVU325
 1045 000a 7047     		bx	lr
 1046              	.LVL128:
 1047              	.L67:
 285:lvgl/src/misc/lv_color.c ****         LV_LOG_WARN("Invalid palette: %d", p);
 1048              		.loc 1 285 9 is_stmt 1 view .LVU326
 285:lvgl/src/misc/lv_color.c ****         LV_LOG_WARN("Invalid palette: %d", p);
 1049              		.loc 1 285 9 view .LVU327
 285:lvgl/src/misc/lv_color.c ****         LV_LOG_WARN("Invalid palette: %d", p);
 1050              		.loc 1 285 9 view .LVU328
 286:lvgl/src/misc/lv_color.c ****     }
 1051              		.loc 1 286 9 view .LVU329
 1052              	.LBB48:
 1053              	.LBI48:
 697:lvgl/src/misc/lv_color.h **** {
 1054              		.loc 2 697 26 view .LVU330
 1055              		.loc 2 699 5 view .LVU331
 1056              	.LBB49:
 1057              	.LBI49:
 592:lvgl/src/misc/lv_color.h **** {
 1058              		.loc 2 592 26 view .LVU332
 1059              	.LBB50:
 594:lvgl/src/misc/lv_color.h **** }
 1060              		.loc 2 594 5 view .LVU333
 594:lvgl/src/misc/lv_color.h **** }
 1061              		.loc 2 594 12 is_stmt 0 view .LVU334
 1062 000c 4FF00000 		mov	r0, #0	@ movhi
 1063              	.LVL129:
 594:lvgl/src/misc/lv_color.h **** }
 1064              		.loc 2 594 12 view .LVU335
 1065 0010 20F01F00 		bic	r0, r0, #31
 1066 0014 20F4FC60 		bic	r0, r0, #2016
 1067 0018 20F47840 		bic	r0, r0, #63488
 1068              	.LVL130:
 594:lvgl/src/misc/lv_color.h **** }
 1069              		.loc 2 594 12 view .LVU336
 1070              	.LBE50:
 1071              	.LBE49:
 1072              	.LBE48:
 286:lvgl/src/misc/lv_color.c ****     }
 1073              		.loc 1 286 16 view .LVU337
 1074 001c 7047     		bx	lr
 1075              	.L69:
 1076 001e 00BF     		.align	2
 1077              	.L68:
 1078 0020 00000000 		.word	colors.2
 1079              		.cfi_endproc
 1080              	.LFE25:
 1082              		.section	.text.lv_palette_lighten,"ax",%progbits
 1083              		.align	1
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 39


 1084              		.global	lv_palette_lighten
 1085              		.syntax unified
 1086              		.thumb
 1087              		.thumb_func
 1089              	lv_palette_lighten:
 1090              	.LVL131:
 1091              	.LFB26:
 292:lvgl/src/misc/lv_color.c **** 
 293:lvgl/src/misc/lv_color.c **** lv_color_t lv_palette_lighten(lv_palette_t p, uint8_t lvl)
 294:lvgl/src/misc/lv_color.c **** {
 1092              		.loc 1 294 1 is_stmt 1 view -0
 1093              		.cfi_startproc
 1094              		@ args = 0, pretend = 0, frame = 0
 1095              		@ frame_needed = 0, uses_anonymous_args = 0
 1096              		@ link register save eliminated.
 295:lvgl/src/misc/lv_color.c ****     static const lv_color_t colors[][5] = {
 1097              		.loc 1 295 5 view .LVU339
 296:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xEF, 0x53, 0x50), LV_COLOR_MAKE(0xE5, 0x73, 0x73), LV_COLOR_MAKE(0xEF, 0x9A
 297:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xEC, 0x40, 0x7A), LV_COLOR_MAKE(0xF0, 0x62, 0x92), LV_COLOR_MAKE(0xF4, 0x8F
 298:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xAB, 0x47, 0xBC), LV_COLOR_MAKE(0xBA, 0x68, 0xC8), LV_COLOR_MAKE(0xCE, 0x93
 299:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x7E, 0x57, 0xC2), LV_COLOR_MAKE(0x95, 0x75, 0xCD), LV_COLOR_MAKE(0xB3, 0x9D
 300:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x5C, 0x6B, 0xC0), LV_COLOR_MAKE(0x79, 0x86, 0xCB), LV_COLOR_MAKE(0x9F, 0xA8
 301:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x42, 0xA5, 0xF5), LV_COLOR_MAKE(0x64, 0xB5, 0xF6), LV_COLOR_MAKE(0x90, 0xCA
 302:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x29, 0xB6, 0xF6), LV_COLOR_MAKE(0x4F, 0xC3, 0xF7), LV_COLOR_MAKE(0x81, 0xD4
 303:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x26, 0xC6, 0xDA), LV_COLOR_MAKE(0x4D, 0xD0, 0xE1), LV_COLOR_MAKE(0x80, 0xDE
 304:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x26, 0xA6, 0x9A), LV_COLOR_MAKE(0x4D, 0xB6, 0xAC), LV_COLOR_MAKE(0x80, 0xCB
 305:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x66, 0xBB, 0x6A), LV_COLOR_MAKE(0x81, 0xC7, 0x84), LV_COLOR_MAKE(0xA5, 0xD6
 306:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x9C, 0xCC, 0x65), LV_COLOR_MAKE(0xAE, 0xD5, 0x81), LV_COLOR_MAKE(0xC5, 0xE1
 307:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xD4, 0xE1, 0x57), LV_COLOR_MAKE(0xDC, 0xE7, 0x75), LV_COLOR_MAKE(0xE6, 0xEE
 308:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xFF, 0xEE, 0x58), LV_COLOR_MAKE(0xFF, 0xF1, 0x76), LV_COLOR_MAKE(0xFF, 0xF5
 309:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xFF, 0xCA, 0x28), LV_COLOR_MAKE(0xFF, 0xD5, 0x4F), LV_COLOR_MAKE(0xFF, 0xE0
 310:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xFF, 0xA7, 0x26), LV_COLOR_MAKE(0xFF, 0xB7, 0x4D), LV_COLOR_MAKE(0xFF, 0xCC
 311:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xFF, 0x70, 0x43), LV_COLOR_MAKE(0xFF, 0x8A, 0x65), LV_COLOR_MAKE(0xFF, 0xAB
 312:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x8D, 0x6E, 0x63), LV_COLOR_MAKE(0xA1, 0x88, 0x7F), LV_COLOR_MAKE(0xBC, 0xAA
 313:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x78, 0x90, 0x9C), LV_COLOR_MAKE(0x90, 0xA4, 0xAE), LV_COLOR_MAKE(0xB0, 0xBE
 314:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xBD, 0xBD, 0xBD), LV_COLOR_MAKE(0xE0, 0xE0, 0xE0), LV_COLOR_MAKE(0xEE, 0xEE
 315:lvgl/src/misc/lv_color.c ****     };
 316:lvgl/src/misc/lv_color.c **** 
 317:lvgl/src/misc/lv_color.c ****     if(p >= _LV_PALETTE_LAST) {
 1098              		.loc 1 317 5 view .LVU340
 1099              		.loc 1 317 7 is_stmt 0 view .LVU341
 1100 0000 1228     		cmp	r0, #18
 1101 0002 0AD8     		bhi	.L74
 318:lvgl/src/misc/lv_color.c ****         LV_LOG_WARN("Invalid palette: %d", p);
 319:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 320:lvgl/src/misc/lv_color.c ****     }
 321:lvgl/src/misc/lv_color.c **** 
 322:lvgl/src/misc/lv_color.c ****     if(lvl == 0 || lvl > 5) {
 1102              		.loc 1 322 5 is_stmt 1 view .LVU342
 1103              		.loc 1 322 17 is_stmt 0 view .LVU343
 1104 0004 0139     		subs	r1, r1, #1
 1105              	.LVL132:
 1106              		.loc 1 322 17 view .LVU344
 1107 0006 C9B2     		uxtb	r1, r1
 1108              	.LVL133:
 1109              		.loc 1 322 7 view .LVU345
 1110 0008 0429     		cmp	r1, #4
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 40


 1111 000a 0FD8     		bhi	.L75
 323:lvgl/src/misc/lv_color.c ****         LV_LOG_WARN("Invalid level: %d. Must be 1..5", lvl);
 324:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 325:lvgl/src/misc/lv_color.c ****     }
 326:lvgl/src/misc/lv_color.c **** 
 327:lvgl/src/misc/lv_color.c ****     lvl--;
 1112              		.loc 1 327 5 is_stmt 1 view .LVU346
 1113              	.LVL134:
 328:lvgl/src/misc/lv_color.c **** 
 329:lvgl/src/misc/lv_color.c ****     return colors[p][lvl];
 1114              		.loc 1 329 5 view .LVU347
 1115              		.loc 1 329 21 is_stmt 0 view .LVU348
 1116 000c 00EB8000 		add	r0, r0, r0, lsl #2
 1117              	.LVL135:
 1118              		.loc 1 329 21 view .LVU349
 1119 0010 0844     		add	r0, r0, r1
 1120 0012 0B4B     		ldr	r3, .L76
 1121 0014 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 330:lvgl/src/misc/lv_color.c **** }
 1122              		.loc 1 330 1 view .LVU350
 1123 0018 7047     		bx	lr
 1124              	.LVL136:
 1125              	.L74:
 318:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 1126              		.loc 1 318 9 is_stmt 1 view .LVU351
 318:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 1127              		.loc 1 318 9 view .LVU352
 318:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 1128              		.loc 1 318 9 view .LVU353
 319:lvgl/src/misc/lv_color.c ****     }
 1129              		.loc 1 319 9 view .LVU354
 1130              	.LBB51:
 1131              	.LBI51:
 697:lvgl/src/misc/lv_color.h **** {
 1132              		.loc 2 697 26 view .LVU355
 1133              		.loc 2 699 5 view .LVU356
 1134              	.LBB52:
 1135              	.LBI52:
 592:lvgl/src/misc/lv_color.h **** {
 1136              		.loc 2 592 26 view .LVU357
 1137              	.LBB53:
 594:lvgl/src/misc/lv_color.h **** }
 1138              		.loc 2 594 5 view .LVU358
 594:lvgl/src/misc/lv_color.h **** }
 1139              		.loc 2 594 12 is_stmt 0 view .LVU359
 1140 001a 4FF00000 		mov	r0, #0	@ movhi
 1141              	.LVL137:
 594:lvgl/src/misc/lv_color.h **** }
 1142              		.loc 2 594 12 view .LVU360
 1143 001e 20F01F00 		bic	r0, r0, #31
 1144 0022 20F4FC60 		bic	r0, r0, #2016
 1145 0026 20F47840 		bic	r0, r0, #63488
 1146              	.LVL138:
 594:lvgl/src/misc/lv_color.h **** }
 1147              		.loc 2 594 12 view .LVU361
 1148              	.LBE53:
 1149              	.LBE52:
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 41


 1150              	.LBE51:
 319:lvgl/src/misc/lv_color.c ****     }
 1151              		.loc 1 319 16 view .LVU362
 1152 002a 7047     		bx	lr
 1153              	.LVL139:
 1154              	.L75:
 323:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 1155              		.loc 1 323 9 is_stmt 1 view .LVU363
 323:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 1156              		.loc 1 323 9 view .LVU364
 323:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 1157              		.loc 1 323 9 view .LVU365
 324:lvgl/src/misc/lv_color.c ****     }
 1158              		.loc 1 324 9 view .LVU366
 1159              	.LBB54:
 1160              	.LBI54:
 697:lvgl/src/misc/lv_color.h **** {
 1161              		.loc 2 697 26 view .LVU367
 1162              		.loc 2 699 5 view .LVU368
 1163              	.LBB55:
 1164              	.LBI55:
 592:lvgl/src/misc/lv_color.h **** {
 1165              		.loc 2 592 26 view .LVU369
 1166              	.LBB56:
 594:lvgl/src/misc/lv_color.h **** }
 1167              		.loc 2 594 5 view .LVU370
 594:lvgl/src/misc/lv_color.h **** }
 1168              		.loc 2 594 12 is_stmt 0 view .LVU371
 1169 002c 4FF00000 		mov	r0, #0	@ movhi
 1170              	.LVL140:
 594:lvgl/src/misc/lv_color.h **** }
 1171              		.loc 2 594 12 view .LVU372
 1172 0030 20F01F00 		bic	r0, r0, #31
 1173 0034 20F4FC60 		bic	r0, r0, #2016
 1174 0038 20F47840 		bic	r0, r0, #63488
 1175              	.LVL141:
 594:lvgl/src/misc/lv_color.h **** }
 1176              		.loc 2 594 12 view .LVU373
 1177              	.LBE56:
 1178              	.LBE55:
 1179              	.LBE54:
 324:lvgl/src/misc/lv_color.c ****     }
 1180              		.loc 1 324 16 view .LVU374
 1181 003c 7047     		bx	lr
 1182              	.L77:
 1183 003e 00BF     		.align	2
 1184              	.L76:
 1185 0040 00000000 		.word	colors.1
 1186              		.cfi_endproc
 1187              	.LFE26:
 1189              		.section	.text.lv_palette_darken,"ax",%progbits
 1190              		.align	1
 1191              		.global	lv_palette_darken
 1192              		.syntax unified
 1193              		.thumb
 1194              		.thumb_func
 1196              	lv_palette_darken:
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 42


 1197              	.LVL142:
 1198              	.LFB27:
 331:lvgl/src/misc/lv_color.c **** 
 332:lvgl/src/misc/lv_color.c **** lv_color_t lv_palette_darken(lv_palette_t p, uint8_t lvl)
 333:lvgl/src/misc/lv_color.c **** {
 1199              		.loc 1 333 1 is_stmt 1 view -0
 1200              		.cfi_startproc
 1201              		@ args = 0, pretend = 0, frame = 0
 1202              		@ frame_needed = 0, uses_anonymous_args = 0
 1203              		@ link register save eliminated.
 334:lvgl/src/misc/lv_color.c ****     static const lv_color_t colors[][4] = {
 1204              		.loc 1 334 5 view .LVU376
 335:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xE5, 0x39, 0x35), LV_COLOR_MAKE(0xD3, 0x2F, 0x2F), LV_COLOR_MAKE(0xC6, 0x28
 336:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xD8, 0x1B, 0x60), LV_COLOR_MAKE(0xC2, 0x18, 0x5B), LV_COLOR_MAKE(0xAD, 0x14
 337:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x8E, 0x24, 0xAA), LV_COLOR_MAKE(0x7B, 0x1F, 0xA2), LV_COLOR_MAKE(0x6A, 0x1B
 338:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x5E, 0x35, 0xB1), LV_COLOR_MAKE(0x51, 0x2D, 0xA8), LV_COLOR_MAKE(0x45, 0x27
 339:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x39, 0x49, 0xAB), LV_COLOR_MAKE(0x30, 0x3F, 0x9F), LV_COLOR_MAKE(0x28, 0x35
 340:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x1E, 0x88, 0xE5), LV_COLOR_MAKE(0x19, 0x76, 0xD2), LV_COLOR_MAKE(0x15, 0x65
 341:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x03, 0x9B, 0xE5), LV_COLOR_MAKE(0x02, 0x88, 0xD1), LV_COLOR_MAKE(0x02, 0x77
 342:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x00, 0xAC, 0xC1), LV_COLOR_MAKE(0x00, 0x97, 0xA7), LV_COLOR_MAKE(0x00, 0x83
 343:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x00, 0x89, 0x7B), LV_COLOR_MAKE(0x00, 0x79, 0x6B), LV_COLOR_MAKE(0x00, 0x69
 344:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x43, 0xA0, 0x47), LV_COLOR_MAKE(0x38, 0x8E, 0x3C), LV_COLOR_MAKE(0x2E, 0x7D
 345:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x7C, 0xB3, 0x42), LV_COLOR_MAKE(0x68, 0x9F, 0x38), LV_COLOR_MAKE(0x55, 0x8B
 346:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xC0, 0xCA, 0x33), LV_COLOR_MAKE(0xAF, 0xB4, 0x2B), LV_COLOR_MAKE(0x9E, 0x9D
 347:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xFD, 0xD8, 0x35), LV_COLOR_MAKE(0xFB, 0xC0, 0x2D), LV_COLOR_MAKE(0xF9, 0xA8
 348:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xFF, 0xB3, 0x00), LV_COLOR_MAKE(0xFF, 0xA0, 0x00), LV_COLOR_MAKE(0xFF, 0x8F
 349:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xFB, 0x8C, 0x00), LV_COLOR_MAKE(0xF5, 0x7C, 0x00), LV_COLOR_MAKE(0xEF, 0x6C
 350:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0xF4, 0x51, 0x1E), LV_COLOR_MAKE(0xE6, 0x4A, 0x19), LV_COLOR_MAKE(0xD8, 0x43
 351:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x6D, 0x4C, 0x41), LV_COLOR_MAKE(0x5D, 0x40, 0x37), LV_COLOR_MAKE(0x4E, 0x34
 352:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x54, 0x6E, 0x7A), LV_COLOR_MAKE(0x45, 0x5A, 0x64), LV_COLOR_MAKE(0x37, 0x47
 353:lvgl/src/misc/lv_color.c ****         {LV_COLOR_MAKE(0x75, 0x75, 0x75), LV_COLOR_MAKE(0x61, 0x61, 0x61), LV_COLOR_MAKE(0x42, 0x42
 354:lvgl/src/misc/lv_color.c ****     };
 355:lvgl/src/misc/lv_color.c **** 
 356:lvgl/src/misc/lv_color.c ****     if(p >= _LV_PALETTE_LAST) {
 1205              		.loc 1 356 5 view .LVU377
 1206              		.loc 1 356 7 is_stmt 0 view .LVU378
 1207 0000 1228     		cmp	r0, #18
 1208 0002 09D8     		bhi	.L82
 357:lvgl/src/misc/lv_color.c ****         LV_LOG_WARN("Invalid palette: %d", p);
 358:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 359:lvgl/src/misc/lv_color.c ****     }
 360:lvgl/src/misc/lv_color.c **** 
 361:lvgl/src/misc/lv_color.c ****     if(lvl == 0 || lvl > 4) {
 1209              		.loc 1 361 5 is_stmt 1 view .LVU379
 1210              		.loc 1 361 17 is_stmt 0 view .LVU380
 1211 0004 0139     		subs	r1, r1, #1
 1212              	.LVL143:
 1213              		.loc 1 361 17 view .LVU381
 1214 0006 C9B2     		uxtb	r1, r1
 1215              	.LVL144:
 1216              		.loc 1 361 7 view .LVU382
 1217 0008 0329     		cmp	r1, #3
 1218 000a 0ED8     		bhi	.L83
 362:lvgl/src/misc/lv_color.c ****         LV_LOG_WARN("Invalid level: %d. Must be 1..4", lvl);
 363:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 364:lvgl/src/misc/lv_color.c ****     }
 365:lvgl/src/misc/lv_color.c **** 
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 43


 366:lvgl/src/misc/lv_color.c ****     lvl--;
 1219              		.loc 1 366 5 is_stmt 1 view .LVU383
 1220              	.LVL145:
 367:lvgl/src/misc/lv_color.c **** 
 368:lvgl/src/misc/lv_color.c ****     return colors[p][lvl];
 1221              		.loc 1 368 5 view .LVU384
 1222              		.loc 1 368 21 is_stmt 0 view .LVU385
 1223 000c 01EB8000 		add	r0, r1, r0, lsl #2
 1224              	.LVL146:
 1225              		.loc 1 368 21 view .LVU386
 1226 0010 0A4B     		ldr	r3, .L84
 1227 0012 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 369:lvgl/src/misc/lv_color.c **** }
 1228              		.loc 1 369 1 view .LVU387
 1229 0016 7047     		bx	lr
 1230              	.LVL147:
 1231              	.L82:
 357:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 1232              		.loc 1 357 9 is_stmt 1 view .LVU388
 357:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 1233              		.loc 1 357 9 view .LVU389
 357:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 1234              		.loc 1 357 9 view .LVU390
 358:lvgl/src/misc/lv_color.c ****     }
 1235              		.loc 1 358 9 view .LVU391
 1236              	.LBB57:
 1237              	.LBI57:
 697:lvgl/src/misc/lv_color.h **** {
 1238              		.loc 2 697 26 view .LVU392
 1239              		.loc 2 699 5 view .LVU393
 1240              	.LBB58:
 1241              	.LBI58:
 592:lvgl/src/misc/lv_color.h **** {
 1242              		.loc 2 592 26 view .LVU394
 1243              	.LBB59:
 594:lvgl/src/misc/lv_color.h **** }
 1244              		.loc 2 594 5 view .LVU395
 594:lvgl/src/misc/lv_color.h **** }
 1245              		.loc 2 594 12 is_stmt 0 view .LVU396
 1246 0018 4FF00000 		mov	r0, #0	@ movhi
 1247              	.LVL148:
 594:lvgl/src/misc/lv_color.h **** }
 1248              		.loc 2 594 12 view .LVU397
 1249 001c 20F01F00 		bic	r0, r0, #31
 1250 0020 20F4FC60 		bic	r0, r0, #2016
 1251 0024 20F47840 		bic	r0, r0, #63488
 1252              	.LVL149:
 594:lvgl/src/misc/lv_color.h **** }
 1253              		.loc 2 594 12 view .LVU398
 1254              	.LBE59:
 1255              	.LBE58:
 1256              	.LBE57:
 358:lvgl/src/misc/lv_color.c ****     }
 1257              		.loc 1 358 16 view .LVU399
 1258 0028 7047     		bx	lr
 1259              	.LVL150:
 1260              	.L83:
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 44


 362:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 1261              		.loc 1 362 9 is_stmt 1 view .LVU400
 362:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 1262              		.loc 1 362 9 view .LVU401
 362:lvgl/src/misc/lv_color.c ****         return lv_color_black();
 1263              		.loc 1 362 9 view .LVU402
 363:lvgl/src/misc/lv_color.c ****     }
 1264              		.loc 1 363 9 view .LVU403
 1265              	.LBB60:
 1266              	.LBI60:
 697:lvgl/src/misc/lv_color.h **** {
 1267              		.loc 2 697 26 view .LVU404
 1268              		.loc 2 699 5 view .LVU405
 1269              	.LBB61:
 1270              	.LBI61:
 592:lvgl/src/misc/lv_color.h **** {
 1271              		.loc 2 592 26 view .LVU406
 1272              	.LBB62:
 594:lvgl/src/misc/lv_color.h **** }
 1273              		.loc 2 594 5 view .LVU407
 594:lvgl/src/misc/lv_color.h **** }
 1274              		.loc 2 594 12 is_stmt 0 view .LVU408
 1275 002a 4FF00000 		mov	r0, #0	@ movhi
 1276              	.LVL151:
 594:lvgl/src/misc/lv_color.h **** }
 1277              		.loc 2 594 12 view .LVU409
 1278 002e 20F01F00 		bic	r0, r0, #31
 1279 0032 20F4FC60 		bic	r0, r0, #2016
 1280 0036 20F47840 		bic	r0, r0, #63488
 1281              	.LVL152:
 594:lvgl/src/misc/lv_color.h **** }
 1282              		.loc 2 594 12 view .LVU410
 1283              	.LBE62:
 1284              	.LBE61:
 1285              	.LBE60:
 363:lvgl/src/misc/lv_color.c ****     }
 1286              		.loc 1 363 16 view .LVU411
 1287 003a 7047     		bx	lr
 1288              	.L85:
 1289              		.align	2
 1290              	.L84:
 1291 003c 00000000 		.word	colors.0
 1292              		.cfi_endproc
 1293              	.LFE27:
 1295              		.section	.rodata.colors.0,"a"
 1296              		.align	2
 1299              	colors.0:
 1300 0000 C6       		.byte	198
 1301 0001 E1       		.byte	225
 1302 0002 65       		.byte	101
 1303 0003 D1       		.byte	209
 1304 0004 45       		.byte	69
 1305 0005 C1       		.byte	193
 1306 0006 E3       		.byte	227
 1307 0007 B0       		.byte	176
 1308 0008 CC       		.byte	204
 1309 0009 D8       		.byte	216
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 45


 1310 000a CB       		.byte	203
 1311 000b C0       		.byte	192
 1312 000c AA       		.byte	170
 1313 000d A8       		.byte	168
 1314 000e 69       		.byte	105
 1315 000f 88       		.byte	136
 1316 0010 35       		.byte	53
 1317 0011 89       		.byte	137
 1318 0012 F4       		.byte	244
 1319 0013 78       		.byte	120
 1320 0014 D3       		.byte	211
 1321 0015 68       		.byte	104
 1322 0016 B1       		.byte	177
 1323 0017 48       		.byte	72
 1324 0018 B6       		.byte	182
 1325 0019 59       		.byte	89
 1326 001a 75       		.byte	117
 1327 001b 51       		.byte	81
 1328 001c 34       		.byte	52
 1329 001d 41       		.byte	65
 1330 001e D2       		.byte	210
 1331 001f 30       		.byte	48
 1332 0020 55       		.byte	85
 1333 0021 3A       		.byte	58
 1334 0022 F3       		.byte	243
 1335 0023 31       		.byte	49
 1336 0024 B2       		.byte	178
 1337 0025 29       		.byte	41
 1338 0026 0F       		.byte	15
 1339 0027 19       		.byte	25
 1340 0028 5C       		.byte	92
 1341 0029 1C       		.byte	28
 1342 002a BA       		.byte	186
 1343 002b 1B       		.byte	27
 1344 002c 38       		.byte	56
 1345 002d 13       		.byte	19
 1346 002e 34       		.byte	52
 1347 002f 0A       		.byte	10
 1348 0030 DC       		.byte	220
 1349 0031 04       		.byte	4
 1350 0032 5A       		.byte	90
 1351 0033 04       		.byte	4
 1352 0034 B7       		.byte	183
 1353 0035 03       		.byte	3
 1354 0036 B3       		.byte	179
 1355 0037 02       		.byte	2
 1356 0038 78       		.byte	120
 1357 0039 05       		.byte	5
 1358 003a B4       		.byte	180
 1359 003b 04       		.byte	4
 1360 003c 11       		.byte	17
 1361 003d 04       		.byte	4
 1362 003e 0C       		.byte	12
 1363 003f 03       		.byte	3
 1364 0040 4F       		.byte	79
 1365 0041 04       		.byte	4
 1366 0042 CD       		.byte	205
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 46


 1367 0043 03       		.byte	3
 1368 0044 4B       		.byte	75
 1369 0045 03       		.byte	3
 1370 0046 68       		.byte	104
 1371 0047 02       		.byte	2
 1372 0048 08       		.byte	8
 1373 0049 45       		.byte	69
 1374 004a 67       		.byte	103
 1375 004b 3C       		.byte	60
 1376 004c E6       		.byte	230
 1377 004d 2B       		.byte	43
 1378 004e E4       		.byte	228
 1379 004f 1A       		.byte	26
 1380 0050 88       		.byte	136
 1381 0051 7D       		.byte	125
 1382 0052 E7       		.byte	231
 1383 0053 6C       		.byte	108
 1384 0054 45       		.byte	69
 1385 0055 54       		.byte	84
 1386 0056 43       		.byte	67
 1387 0057 33       		.byte	51
 1388 0058 46       		.byte	70
 1389 0059 C6       		.byte	198
 1390 005a A5       		.byte	165
 1391 005b AD       		.byte	173
 1392 005c E4       		.byte	228
 1393 005d 9C       		.byte	156
 1394 005e A2       		.byte	162
 1395 005f 83       		.byte	131
 1396 0060 C6       		.byte	198
 1397 0061 FE       		.byte	254
 1398 0062 05       		.byte	5
 1399 0063 FE       		.byte	254
 1400 0064 44       		.byte	68
 1401 0065 FD       		.byte	253
 1402 0066 E2       		.byte	226
 1403 0067 F3       		.byte	243
 1404 0068 80       		.byte	128
 1405 0069 FD       		.byte	253
 1406 006a 00       		.byte	0
 1407 006b FD       		.byte	253
 1408 006c 60       		.byte	96
 1409 006d FC       		.byte	252
 1410 006e 60       		.byte	96
 1411 006f FB       		.byte	251
 1412 0070 60       		.byte	96
 1413 0071 FC       		.byte	252
 1414 0072 E0       		.byte	224
 1415 0073 F3       		.byte	243
 1416 0074 60       		.byte	96
 1417 0075 EB       		.byte	235
 1418 0076 80       		.byte	128
 1419 0077 E2       		.byte	226
 1420 0078 83       		.byte	131
 1421 0079 F2       		.byte	242
 1422 007a 43       		.byte	67
 1423 007b E2       		.byte	226
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 47


 1424 007c 02       		.byte	2
 1425 007d DA       		.byte	218
 1426 007e A1       		.byte	161
 1427 007f B9       		.byte	185
 1428 0080 68       		.byte	104
 1429 0081 6A       		.byte	106
 1430 0082 06       		.byte	6
 1431 0083 5A       		.byte	90
 1432 0084 A5       		.byte	165
 1433 0085 49       		.byte	73
 1434 0086 24       		.byte	36
 1435 0087 39       		.byte	57
 1436 0088 6F       		.byte	111
 1437 0089 53       		.byte	83
 1438 008a CC       		.byte	204
 1439 008b 42       		.byte	66
 1440 008c 29       		.byte	41
 1441 008d 32       		.byte	50
 1442 008e 87       		.byte	135
 1443 008f 21       		.byte	33
 1444 0090 AE       		.byte	174
 1445 0091 73       		.byte	115
 1446 0092 0C       		.byte	12
 1447 0093 63       		.byte	99
 1448 0094 08       		.byte	8
 1449 0095 42       		.byte	66
 1450 0096 04       		.byte	4
 1451 0097 21       		.byte	33
 1452              		.section	.rodata.colors.1,"a"
 1453              		.align	2
 1456              	colors.1:
 1457 0000 8A       		.byte	138
 1458 0001 EA       		.byte	234
 1459 0002 8E       		.byte	142
 1460 0003 E3       		.byte	227
 1461 0004 D3       		.byte	211
 1462 0005 EC       		.byte	236
 1463 0006 7A       		.byte	122
 1464 0007 FE       		.byte	254
 1465 0008 5D       		.byte	93
 1466 0009 FF       		.byte	255
 1467 000a 0F       		.byte	15
 1468 000b EA       		.byte	234
 1469 000c 12       		.byte	18
 1470 000d F3       		.byte	243
 1471 000e 76       		.byte	118
 1472 000f F4       		.byte	244
 1473 0010 DA       		.byte	218
 1474 0011 FD       		.byte	253
 1475 0012 3D       		.byte	61
 1476 0013 FF       		.byte	255
 1477 0014 37       		.byte	55
 1478 0015 AA       		.byte	170
 1479 0016 59       		.byte	89
 1480 0017 BB       		.byte	187
 1481 0018 9B       		.byte	155
 1482 0019 CC       		.byte	204
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 48


 1483 001a FC       		.byte	252
 1484 001b E5       		.byte	229
 1485 001c 3E       		.byte	62
 1486 001d F7       		.byte	247
 1487 001e B8       		.byte	184
 1488 001f 7A       		.byte	122
 1489 0020 B9       		.byte	185
 1490 0021 93       		.byte	147
 1491 0022 FB       		.byte	251
 1492 0023 B4       		.byte	180
 1493 0024 3D       		.byte	61
 1494 0025 D6       		.byte	214
 1495 0026 3E       		.byte	62
 1496 0027 EF       		.byte	239
 1497 0028 58       		.byte	88
 1498 0029 5B       		.byte	91
 1499 002a 39       		.byte	57
 1500 002b 7C       		.byte	124
 1501 002c 5B       		.byte	91
 1502 002d 9D       		.byte	157
 1503 002e 5D       		.byte	93
 1504 002f C6       		.byte	198
 1505 0030 5E       		.byte	94
 1506 0031 EF       		.byte	239
 1507 0032 3E       		.byte	62
 1508 0033 45       		.byte	69
 1509 0034 BE       		.byte	190
 1510 0035 65       		.byte	101
 1511 0036 5F       		.byte	95
 1512 0037 96       		.byte	150
 1513 0038 FF       		.byte	255
 1514 0039 BE       		.byte	190
 1515 003a 9F       		.byte	159
 1516 003b E7       		.byte	231
 1517 003c BE       		.byte	190
 1518 003d 2D       		.byte	45
 1519 003e 1E       		.byte	30
 1520 003f 4E       		.byte	78
 1521 0040 BF       		.byte	191
 1522 0041 86       		.byte	134
 1523 0042 3F       		.byte	63
 1524 0043 B7       		.byte	183
 1525 0044 BF       		.byte	191
 1526 0045 E7       		.byte	231
 1527 0046 3B       		.byte	59
 1528 0047 26       		.byte	38
 1529 0048 9C       		.byte	156
 1530 0049 4E       		.byte	78
 1531 004a FD       		.byte	253
 1532 004b 86       		.byte	134
 1533 004c 5E       		.byte	94
 1534 004d B7       		.byte	183
 1535 004e BF       		.byte	191
 1536 004f E7       		.byte	231
 1537 0050 33       		.byte	51
 1538 0051 25       		.byte	37
 1539 0052 B5       		.byte	181
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 49


 1540 0053 4D       		.byte	77
 1541 0054 58       		.byte	88
 1542 0055 86       		.byte	134
 1543 0056 FB       		.byte	251
 1544 0057 B6       		.byte	182
 1545 0058 9E       		.byte	158
 1546 0059 E7       		.byte	231
 1547 005a CD       		.byte	205
 1548 005b 65       		.byte	101
 1549 005c 30       		.byte	48
 1550 005d 86       		.byte	134
 1551 005e B4       		.byte	180
 1552 005f A6       		.byte	166
 1553 0060 39       		.byte	57
 1554 0061 CF       		.byte	207
 1555 0062 BD       		.byte	189
 1556 0063 EF       		.byte	239
 1557 0064 6C       		.byte	108
 1558 0065 9E       		.byte	158
 1559 0066 B0       		.byte	176
 1560 0067 AE       		.byte	174
 1561 0068 14       		.byte	20
 1562 0069 C7       		.byte	199
 1563 006a 79       		.byte	121
 1564 006b DF       		.byte	223
 1565 006c DD       		.byte	221
 1566 006d F7       		.byte	247
 1567 006e 0A       		.byte	10
 1568 006f D7       		.byte	215
 1569 0070 2E       		.byte	46
 1570 0071 DF       		.byte	223
 1571 0072 73       		.byte	115
 1572 0073 E7       		.byte	231
 1573 0074 B8       		.byte	184
 1574 0075 F7       		.byte	247
 1575 0076 DC       		.byte	220
 1576 0077 FF       		.byte	255
 1577 0078 6B       		.byte	107
 1578 0079 FF       		.byte	255
 1579 007a 8E       		.byte	142
 1580 007b FF       		.byte	255
 1581 007c B3       		.byte	179
 1582 007d FF       		.byte	255
 1583 007e D8       		.byte	216
 1584 007f FF       		.byte	255
 1585 0080 FC       		.byte	252
 1586 0081 FF       		.byte	255
 1587 0082 45       		.byte	69
 1588 0083 FE       		.byte	254
 1589 0084 A9       		.byte	169
 1590 0085 FE       		.byte	254
 1591 0086 10       		.byte	16
 1592 0087 FF       		.byte	255
 1593 0088 76       		.byte	118
 1594 0089 FF       		.byte	255
 1595 008a DC       		.byte	220
 1596 008b FF       		.byte	255
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 50


 1597 008c 24       		.byte	36
 1598 008d FD       		.byte	253
 1599 008e A9       		.byte	169
 1600 008f FD       		.byte	253
 1601 0090 70       		.byte	112
 1602 0091 FE       		.byte	254
 1603 0092 16       		.byte	22
 1604 0093 FF       		.byte	255
 1605 0094 9C       		.byte	156
 1606 0095 FF       		.byte	255
 1607 0096 88       		.byte	136
 1608 0097 FB       		.byte	251
 1609 0098 4C       		.byte	76
 1610 0099 FC       		.byte	252
 1611 009a 52       		.byte	82
 1612 009b FD       		.byte	253
 1613 009c 77       		.byte	119
 1614 009d FE       		.byte	254
 1615 009e 5C       		.byte	92
 1616 009f FF       		.byte	255
 1617 00a0 6C       		.byte	108
 1618 00a1 8B       		.byte	139
 1619 00a2 4F       		.byte	79
 1620 00a3 A4       		.byte	164
 1621 00a4 54       		.byte	84
 1622 00a5 BD       		.byte	189
 1623 00a6 79       		.byte	121
 1624 00a7 D6       		.byte	214
 1625 00a8 5D       		.byte	93
 1626 00a9 EF       		.byte	239
 1627 00aa 93       		.byte	147
 1628 00ab 7C       		.byte	124
 1629 00ac 35       		.byte	53
 1630 00ad 95       		.byte	149
 1631 00ae F8       		.byte	248
 1632 00af B5       		.byte	181
 1633 00b0 DB       		.byte	219
 1634 00b1 CE       		.byte	206
 1635 00b2 7E       		.byte	126
 1636 00b3 EF       		.byte	239
 1637 00b4 F7       		.byte	247
 1638 00b5 BD       		.byte	189
 1639 00b6 1C       		.byte	28
 1640 00b7 E7       		.byte	231
 1641 00b8 7D       		.byte	125
 1642 00b9 EF       		.byte	239
 1643 00ba BE       		.byte	190
 1644 00bb F7       		.byte	247
 1645 00bc DF       		.byte	223
 1646 00bd FF       		.byte	255
 1647              		.section	.rodata.colors.2,"a"
 1648              		.align	2
 1651              	colors.2:
 1652 0000 06       		.byte	6
 1653 0001 F2       		.byte	242
 1654 0002 EC       		.byte	236
 1655 0003 E8       		.byte	232
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 51


 1656 0004 36       		.byte	54
 1657 0005 99       		.byte	153
 1658 0006 D6       		.byte	214
 1659 0007 61       		.byte	97
 1660 0008 96       		.byte	150
 1661 0009 3A       		.byte	58
 1662 000a BE       		.byte	190
 1663 000b 24       		.byte	36
 1664 000c 5E       		.byte	94
 1665 000d 05       		.byte	5
 1666 000e FA       		.byte	250
 1667 000f 05       		.byte	5
 1668 0010 B1       		.byte	177
 1669 0011 04       		.byte	4
 1670 0012 6A       		.byte	106
 1671 0013 4D       		.byte	77
 1672 0014 09       		.byte	9
 1673 0015 8E       		.byte	142
 1674 0016 E7       		.byte	231
 1675 0017 CE       		.byte	206
 1676 0018 47       		.byte	71
 1677 0019 FF       		.byte	255
 1678 001a 00       		.byte	0
 1679 001b FE       		.byte	254
 1680 001c C0       		.byte	192
 1681 001d FC       		.byte	252
 1682 001e A4       		.byte	164
 1683 001f FA       		.byte	250
 1684 0020 A9       		.byte	169
 1685 0021 7A       		.byte	122
 1686 0022 F1       		.byte	241
 1687 0023 63       		.byte	99
 1688 0024 F3       		.byte	243
 1689 0025 9C       		.byte	156
 1690              		.text
 1691              	.Letext0:
 1692              		.file 3 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 1693              		.file 4 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
ARM GAS  C:\usertemp\ccHf0Xjp.s 			page 52


DEFINED SYMBOLS
                            *ABS*:00000000 lv_color.c
C:\usertemp\ccHf0Xjp.s:20     .text.lv_color_to32:00000000 $t
C:\usertemp\ccHf0Xjp.s:25     .text.lv_color_to32:00000000 lv_color_to32
C:\usertemp\ccHf0Xjp.s:71     .text.lv_color_mix:00000000 $t
C:\usertemp\ccHf0Xjp.s:76     .text.lv_color_mix:00000000 lv_color_mix
C:\usertemp\ccHf0Xjp.s:131    .text.lv_color_mix:0000002c $d
C:\usertemp\ccHf0Xjp.s:136    .text.lv_color_fill:00000000 $t
C:\usertemp\ccHf0Xjp.s:142    .text.lv_color_fill:00000000 lv_color_fill
C:\usertemp\ccHf0Xjp.s:250    .text.lv_color_lighten:00000000 $t
C:\usertemp\ccHf0Xjp.s:256    .text.lv_color_lighten:00000000 lv_color_lighten
C:\usertemp\ccHf0Xjp.s:300    .text.lv_color_darken:00000000 $t
C:\usertemp\ccHf0Xjp.s:306    .text.lv_color_darken:00000000 lv_color_darken
C:\usertemp\ccHf0Xjp.s:356    .text.lv_color_change_lightness:00000000 $t
C:\usertemp\ccHf0Xjp.s:362    .text.lv_color_change_lightness:00000000 lv_color_change_lightness
C:\usertemp\ccHf0Xjp.s:421    .text.lv_color_hsv_to_rgb:00000000 $t
C:\usertemp\ccHf0Xjp.s:427    .text.lv_color_hsv_to_rgb:00000000 lv_color_hsv_to_rgb
C:\usertemp\ccHf0Xjp.s:536    .text.lv_color_hsv_to_rgb:00000092 $d
C:\usertemp\ccHf0Xjp.s:681    .text.lv_color_hsv_to_rgb:000000f8 $d
C:\usertemp\ccHf0Xjp.s:688    .text.lv_color_rgb_to_hsv:00000000 $t
C:\usertemp\ccHf0Xjp.s:694    .text.lv_color_rgb_to_hsv:00000000 lv_color_rgb_to_hsv
C:\usertemp\ccHf0Xjp.s:966    .text.lv_color_rgb_to_hsv:00000128 $d
C:\usertemp\ccHf0Xjp.s:971    .text.lv_color_to_hsv:00000000 $t
C:\usertemp\ccHf0Xjp.s:977    .text.lv_color_to_hsv:00000000 lv_color_to_hsv
C:\usertemp\ccHf0Xjp.s:1020   .text.lv_palette_main:00000000 $t
C:\usertemp\ccHf0Xjp.s:1026   .text.lv_palette_main:00000000 lv_palette_main
C:\usertemp\ccHf0Xjp.s:1078   .text.lv_palette_main:00000020 $d
C:\usertemp\ccHf0Xjp.s:1651   .rodata.colors.2:00000000 colors.2
C:\usertemp\ccHf0Xjp.s:1083   .text.lv_palette_lighten:00000000 $t
C:\usertemp\ccHf0Xjp.s:1089   .text.lv_palette_lighten:00000000 lv_palette_lighten
C:\usertemp\ccHf0Xjp.s:1185   .text.lv_palette_lighten:00000040 $d
C:\usertemp\ccHf0Xjp.s:1456   .rodata.colors.1:00000000 colors.1
C:\usertemp\ccHf0Xjp.s:1190   .text.lv_palette_darken:00000000 $t
C:\usertemp\ccHf0Xjp.s:1196   .text.lv_palette_darken:00000000 lv_palette_darken
C:\usertemp\ccHf0Xjp.s:1291   .text.lv_palette_darken:0000003c $d
C:\usertemp\ccHf0Xjp.s:1299   .rodata.colors.0:00000000 colors.0
C:\usertemp\ccHf0Xjp.s:1296   .rodata.colors.0:00000000 $d
C:\usertemp\ccHf0Xjp.s:1453   .rodata.colors.1:00000000 $d
C:\usertemp\ccHf0Xjp.s:1648   .rodata.colors.2:00000000 $d
C:\usertemp\ccHf0Xjp.s:542    .text.lv_color_hsv_to_rgb:00000097 $d
C:\usertemp\ccHf0Xjp.s:542    .text.lv_color_hsv_to_rgb:00000098 $t

NO UNDEFINED SYMBOLS
