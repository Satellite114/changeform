ARM GAS  C:\usertemp\cc9mdkBP.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_obj_tree.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "lvgl/src/core/lv_obj_tree.c"
  19              		.section	.text.lv_obj_del_delayed,"ax",%progbits
  20              		.align	1
  21              		.global	lv_obj_del_delayed
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	lv_obj_del_delayed:
  27              	.LVL0:
  28              	.LFB158:
   1:lvgl/src/core/lv_obj_tree.c **** /**
   2:lvgl/src/core/lv_obj_tree.c ****  * @file lv_obj_tree.c
   3:lvgl/src/core/lv_obj_tree.c ****  *
   4:lvgl/src/core/lv_obj_tree.c ****  */
   5:lvgl/src/core/lv_obj_tree.c **** 
   6:lvgl/src/core/lv_obj_tree.c **** /*********************
   7:lvgl/src/core/lv_obj_tree.c ****  *      INCLUDES
   8:lvgl/src/core/lv_obj_tree.c ****  *********************/
   9:lvgl/src/core/lv_obj_tree.c **** #include <stdlib.h>
  10:lvgl/src/core/lv_obj_tree.c **** 
  11:lvgl/src/core/lv_obj_tree.c **** #include "lv_obj.h"
  12:lvgl/src/core/lv_obj_tree.c **** #include "lv_indev.h"
  13:lvgl/src/core/lv_obj_tree.c **** #include "../misc/lv_anim.h"
  14:lvgl/src/core/lv_obj_tree.c **** #include "../misc/lv_gc.h"
  15:lvgl/src/core/lv_obj_tree.c **** #include "../misc/lv_async.h"
  16:lvgl/src/core/lv_obj_tree.c **** 
  17:lvgl/src/core/lv_obj_tree.c **** /*********************
  18:lvgl/src/core/lv_obj_tree.c ****  *      DEFINES
  19:lvgl/src/core/lv_obj_tree.c ****  *********************/
  20:lvgl/src/core/lv_obj_tree.c **** #define MY_CLASS &lv_obj_class
  21:lvgl/src/core/lv_obj_tree.c **** 
  22:lvgl/src/core/lv_obj_tree.c **** /**********************
  23:lvgl/src/core/lv_obj_tree.c ****  *      TYPEDEFS
  24:lvgl/src/core/lv_obj_tree.c ****  **********************/
  25:lvgl/src/core/lv_obj_tree.c **** 
  26:lvgl/src/core/lv_obj_tree.c **** /**********************
  27:lvgl/src/core/lv_obj_tree.c ****  *  STATIC PROTOTYPES
  28:lvgl/src/core/lv_obj_tree.c ****  **********************/
  29:lvgl/src/core/lv_obj_tree.c **** static void lv_obj_del_async_cb(void * obj);
  30:lvgl/src/core/lv_obj_tree.c **** static void obj_del_core(lv_obj_t * obj);
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 2


  31:lvgl/src/core/lv_obj_tree.c **** static lv_obj_tree_walk_res_t walk_core(lv_obj_t * obj, lv_obj_tree_walk_cb_t cb, void * user_data)
  32:lvgl/src/core/lv_obj_tree.c **** 
  33:lvgl/src/core/lv_obj_tree.c **** /**********************
  34:lvgl/src/core/lv_obj_tree.c ****  *  STATIC VARIABLES
  35:lvgl/src/core/lv_obj_tree.c ****  **********************/
  36:lvgl/src/core/lv_obj_tree.c **** 
  37:lvgl/src/core/lv_obj_tree.c **** /**********************
  38:lvgl/src/core/lv_obj_tree.c ****  *      MACROS
  39:lvgl/src/core/lv_obj_tree.c ****  **********************/
  40:lvgl/src/core/lv_obj_tree.c **** 
  41:lvgl/src/core/lv_obj_tree.c **** /**********************
  42:lvgl/src/core/lv_obj_tree.c ****  *   GLOBAL FUNCTIONS
  43:lvgl/src/core/lv_obj_tree.c ****  **********************/
  44:lvgl/src/core/lv_obj_tree.c **** 
  45:lvgl/src/core/lv_obj_tree.c **** void lv_obj_del(lv_obj_t * obj)
  46:lvgl/src/core/lv_obj_tree.c **** {
  47:lvgl/src/core/lv_obj_tree.c ****     LV_LOG_TRACE("begin (delete %p)", (void *)obj);
  48:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
  49:lvgl/src/core/lv_obj_tree.c ****     lv_obj_invalidate(obj);
  50:lvgl/src/core/lv_obj_tree.c **** 
  51:lvgl/src/core/lv_obj_tree.c ****     lv_obj_t * par = lv_obj_get_parent(obj);
  52:lvgl/src/core/lv_obj_tree.c ****     if(par) {
  53:lvgl/src/core/lv_obj_tree.c ****         lv_obj_scrollbar_invalidate(par);
  54:lvgl/src/core/lv_obj_tree.c ****     }
  55:lvgl/src/core/lv_obj_tree.c **** 
  56:lvgl/src/core/lv_obj_tree.c ****     lv_disp_t * disp = NULL;
  57:lvgl/src/core/lv_obj_tree.c ****     bool act_scr_del = false;
  58:lvgl/src/core/lv_obj_tree.c ****     if(par == NULL) {
  59:lvgl/src/core/lv_obj_tree.c ****         disp = lv_obj_get_disp(obj);
  60:lvgl/src/core/lv_obj_tree.c ****         if(!disp) return;   /*Shouldn't happen*/
  61:lvgl/src/core/lv_obj_tree.c ****         if(disp->act_scr == obj) act_scr_del = true;
  62:lvgl/src/core/lv_obj_tree.c ****     }
  63:lvgl/src/core/lv_obj_tree.c **** 
  64:lvgl/src/core/lv_obj_tree.c ****     obj_del_core(obj);
  65:lvgl/src/core/lv_obj_tree.c **** 
  66:lvgl/src/core/lv_obj_tree.c ****     /*Call the ancestor's event handler to the parent to notify it about the child delete*/
  67:lvgl/src/core/lv_obj_tree.c ****     if(par) {
  68:lvgl/src/core/lv_obj_tree.c ****         lv_obj_readjust_scroll(par, LV_ANIM_OFF);
  69:lvgl/src/core/lv_obj_tree.c ****         lv_obj_scrollbar_invalidate(par);
  70:lvgl/src/core/lv_obj_tree.c ****         lv_event_send(par, LV_EVENT_CHILD_CHANGED, NULL);
  71:lvgl/src/core/lv_obj_tree.c ****         lv_event_send(par, LV_EVENT_CHILD_DELETED, NULL);
  72:lvgl/src/core/lv_obj_tree.c ****     }
  73:lvgl/src/core/lv_obj_tree.c **** 
  74:lvgl/src/core/lv_obj_tree.c ****     /*Handle if the active screen was deleted*/
  75:lvgl/src/core/lv_obj_tree.c ****     if(act_scr_del) {
  76:lvgl/src/core/lv_obj_tree.c ****         LV_LOG_WARN("the active screen was deleted");
  77:lvgl/src/core/lv_obj_tree.c ****         disp->act_scr = NULL;
  78:lvgl/src/core/lv_obj_tree.c ****     }
  79:lvgl/src/core/lv_obj_tree.c **** 
  80:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_MEM_INTEGRITY();
  81:lvgl/src/core/lv_obj_tree.c ****     LV_LOG_TRACE("finished (delete %p)", (void *)obj);
  82:lvgl/src/core/lv_obj_tree.c **** }
  83:lvgl/src/core/lv_obj_tree.c **** 
  84:lvgl/src/core/lv_obj_tree.c **** void lv_obj_clean(lv_obj_t * obj)
  85:lvgl/src/core/lv_obj_tree.c **** {
  86:lvgl/src/core/lv_obj_tree.c ****     LV_LOG_TRACE("begin (delete %p)", (void *)obj);
  87:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 3


  88:lvgl/src/core/lv_obj_tree.c **** 
  89:lvgl/src/core/lv_obj_tree.c ****     lv_obj_invalidate(obj);
  90:lvgl/src/core/lv_obj_tree.c **** 
  91:lvgl/src/core/lv_obj_tree.c ****     lv_obj_t * child = lv_obj_get_child(obj, 0);
  92:lvgl/src/core/lv_obj_tree.c ****     while(child) {
  93:lvgl/src/core/lv_obj_tree.c ****         obj_del_core(child);
  94:lvgl/src/core/lv_obj_tree.c ****         child = lv_obj_get_child(obj, 0);
  95:lvgl/src/core/lv_obj_tree.c ****     }
  96:lvgl/src/core/lv_obj_tree.c ****     /*Just to remove scroll animations if any*/
  97:lvgl/src/core/lv_obj_tree.c ****     lv_obj_scroll_to(obj, 0, 0, LV_ANIM_OFF);
  98:lvgl/src/core/lv_obj_tree.c ****     if(obj->spec_attr) {
  99:lvgl/src/core/lv_obj_tree.c ****         obj->spec_attr->scroll.x = 0;
 100:lvgl/src/core/lv_obj_tree.c ****         obj->spec_attr->scroll.y = 0;
 101:lvgl/src/core/lv_obj_tree.c ****     }
 102:lvgl/src/core/lv_obj_tree.c **** 
 103:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_MEM_INTEGRITY();
 104:lvgl/src/core/lv_obj_tree.c **** 
 105:lvgl/src/core/lv_obj_tree.c ****     LV_LOG_TRACE("finished (delete %p)", (void *)obj);
 106:lvgl/src/core/lv_obj_tree.c **** }
 107:lvgl/src/core/lv_obj_tree.c **** 
 108:lvgl/src/core/lv_obj_tree.c **** void lv_obj_del_delayed(lv_obj_t * obj, uint32_t delay_ms)
 109:lvgl/src/core/lv_obj_tree.c **** {
  29              		.loc 1 109 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 64
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 109 1 is_stmt 0 view .LVU1
  34 0000 30B5     		push	{r4, r5, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 12
  37              		.cfi_offset 4, -12
  38              		.cfi_offset 5, -8
  39              		.cfi_offset 14, -4
  40 0002 91B0     		sub	sp, sp, #68
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 80
  43 0004 0546     		mov	r5, r0
  44 0006 0C46     		mov	r4, r1
 110:lvgl/src/core/lv_obj_tree.c ****     lv_anim_t a;
  45              		.loc 1 110 5 is_stmt 1 view .LVU2
 111:lvgl/src/core/lv_obj_tree.c ****     lv_anim_init(&a);
  46              		.loc 1 111 5 view .LVU3
  47 0008 6846     		mov	r0, sp
  48              	.LVL1:
  49              		.loc 1 111 5 is_stmt 0 view .LVU4
  50 000a FFF7FEFF 		bl	lv_anim_init
  51              	.LVL2:
 112:lvgl/src/core/lv_obj_tree.c ****     lv_anim_set_var(&a, obj);
  52              		.loc 1 112 5 is_stmt 1 view .LVU5
  53              	.LBB12:
  54              	.LBI12:
  55              		.file 2 "lvgl/src/core/../misc/lv_anim.h"
   1:lvgl/src/core/../misc/lv_anim.h **** /**
   2:lvgl/src/core/../misc/lv_anim.h ****  * @file lv_anim.h
   3:lvgl/src/core/../misc/lv_anim.h ****  *
   4:lvgl/src/core/../misc/lv_anim.h ****  */
   5:lvgl/src/core/../misc/lv_anim.h **** 
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 4


   6:lvgl/src/core/../misc/lv_anim.h **** #ifndef LV_ANIM_H
   7:lvgl/src/core/../misc/lv_anim.h **** #define LV_ANIM_H
   8:lvgl/src/core/../misc/lv_anim.h **** 
   9:lvgl/src/core/../misc/lv_anim.h **** #ifdef __cplusplus
  10:lvgl/src/core/../misc/lv_anim.h **** extern "C" {
  11:lvgl/src/core/../misc/lv_anim.h **** #endif
  12:lvgl/src/core/../misc/lv_anim.h **** 
  13:lvgl/src/core/../misc/lv_anim.h **** /*********************
  14:lvgl/src/core/../misc/lv_anim.h ****  *      INCLUDES
  15:lvgl/src/core/../misc/lv_anim.h ****  *********************/
  16:lvgl/src/core/../misc/lv_anim.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/core/../misc/lv_anim.h **** 
  18:lvgl/src/core/../misc/lv_anim.h **** #include <stdint.h>
  19:lvgl/src/core/../misc/lv_anim.h **** #include <stdbool.h>
  20:lvgl/src/core/../misc/lv_anim.h **** #include <stddef.h>
  21:lvgl/src/core/../misc/lv_anim.h **** 
  22:lvgl/src/core/../misc/lv_anim.h **** /*********************
  23:lvgl/src/core/../misc/lv_anim.h ****  *      DEFINES
  24:lvgl/src/core/../misc/lv_anim.h ****  *********************/
  25:lvgl/src/core/../misc/lv_anim.h **** 
  26:lvgl/src/core/../misc/lv_anim.h **** #define LV_ANIM_REPEAT_INFINITE      0xFFFF
  27:lvgl/src/core/../misc/lv_anim.h **** #define LV_ANIM_PLAYTIME_INFINITE    0xFFFFFFFF
  28:lvgl/src/core/../misc/lv_anim.h **** 
  29:lvgl/src/core/../misc/lv_anim.h **** LV_EXPORT_CONST_INT(LV_ANIM_REPEAT_INFINITE);
  30:lvgl/src/core/../misc/lv_anim.h **** LV_EXPORT_CONST_INT(LV_ANIM_PLAYTIME_INFINITE);
  31:lvgl/src/core/../misc/lv_anim.h **** 
  32:lvgl/src/core/../misc/lv_anim.h **** /**********************
  33:lvgl/src/core/../misc/lv_anim.h ****  *      TYPEDEFS
  34:lvgl/src/core/../misc/lv_anim.h ****  **********************/
  35:lvgl/src/core/../misc/lv_anim.h **** 
  36:lvgl/src/core/../misc/lv_anim.h **** /** Can be used to indicate if animations are enabled or disabled in a case*/
  37:lvgl/src/core/../misc/lv_anim.h **** typedef enum {
  38:lvgl/src/core/../misc/lv_anim.h ****     LV_ANIM_OFF,
  39:lvgl/src/core/../misc/lv_anim.h ****     LV_ANIM_ON,
  40:lvgl/src/core/../misc/lv_anim.h **** } lv_anim_enable_t;
  41:lvgl/src/core/../misc/lv_anim.h **** 
  42:lvgl/src/core/../misc/lv_anim.h **** struct _lv_anim_t;
  43:lvgl/src/core/../misc/lv_anim.h **** 
  44:lvgl/src/core/../misc/lv_anim.h **** /** Get the current value during an animation*/
  45:lvgl/src/core/../misc/lv_anim.h **** typedef int32_t (*lv_anim_path_cb_t)(const struct _lv_anim_t *);
  46:lvgl/src/core/../misc/lv_anim.h **** 
  47:lvgl/src/core/../misc/lv_anim.h **** /** Generic prototype of "animator" functions.
  48:lvgl/src/core/../misc/lv_anim.h ****  * First parameter is the variable to animate.
  49:lvgl/src/core/../misc/lv_anim.h ****  * Second parameter is the value to set.
  50:lvgl/src/core/../misc/lv_anim.h ****  * Compatible with `lv_xxx_set_yyy(obj, value)` functions
  51:lvgl/src/core/../misc/lv_anim.h ****  * The `x` in `_xcb_t` means it's not a fully generic prototype because
  52:lvgl/src/core/../misc/lv_anim.h ****  * it doesn't receive `lv_anim_t *` as its first argument*/
  53:lvgl/src/core/../misc/lv_anim.h **** typedef void (*lv_anim_exec_xcb_t)(void *, int32_t);
  54:lvgl/src/core/../misc/lv_anim.h **** 
  55:lvgl/src/core/../misc/lv_anim.h **** /** Same as `lv_anim_exec_xcb_t` but receives `lv_anim_t *` as the first parameter.
  56:lvgl/src/core/../misc/lv_anim.h ****  * It's more consistent but less convenient. Might be used by binding generator functions.*/
  57:lvgl/src/core/../misc/lv_anim.h **** typedef void (*lv_anim_custom_exec_cb_t)(struct _lv_anim_t *, int32_t);
  58:lvgl/src/core/../misc/lv_anim.h **** 
  59:lvgl/src/core/../misc/lv_anim.h **** /** Callback to call when the animation is ready*/
  60:lvgl/src/core/../misc/lv_anim.h **** typedef void (*lv_anim_ready_cb_t)(struct _lv_anim_t *);
  61:lvgl/src/core/../misc/lv_anim.h **** 
  62:lvgl/src/core/../misc/lv_anim.h **** /** Callback to call when the animation really stars (considering `delay`)*/
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 5


  63:lvgl/src/core/../misc/lv_anim.h **** typedef void (*lv_anim_start_cb_t)(struct _lv_anim_t *);
  64:lvgl/src/core/../misc/lv_anim.h **** 
  65:lvgl/src/core/../misc/lv_anim.h **** /** Callback used when the animation values are relative to get the current value*/
  66:lvgl/src/core/../misc/lv_anim.h **** typedef int32_t (*lv_anim_get_value_cb_t)(struct _lv_anim_t *);
  67:lvgl/src/core/../misc/lv_anim.h **** 
  68:lvgl/src/core/../misc/lv_anim.h **** /** Describes an animation*/
  69:lvgl/src/core/../misc/lv_anim.h **** typedef struct _lv_anim_t {
  70:lvgl/src/core/../misc/lv_anim.h ****     void * var;                          /**<Variable to animate*/
  71:lvgl/src/core/../misc/lv_anim.h ****     lv_anim_exec_xcb_t exec_cb;          /**< Function to execute to animate*/
  72:lvgl/src/core/../misc/lv_anim.h ****     lv_anim_start_cb_t start_cb;         /**< Call it when the animation is starts (considering `de
  73:lvgl/src/core/../misc/lv_anim.h ****     lv_anim_ready_cb_t ready_cb;         /**< Call it when the animation is ready*/
  74:lvgl/src/core/../misc/lv_anim.h ****     lv_anim_get_value_cb_t get_value_cb; /**< Get the current value in relative mode*/
  75:lvgl/src/core/../misc/lv_anim.h **** #if LV_USE_USER_DATA
  76:lvgl/src/core/../misc/lv_anim.h ****     void * user_data; /**< Custom user data*/
  77:lvgl/src/core/../misc/lv_anim.h **** #endif
  78:lvgl/src/core/../misc/lv_anim.h ****     lv_anim_path_cb_t path_cb;         /**< Describe the path (curve) of animations*/
  79:lvgl/src/core/../misc/lv_anim.h ****     int32_t start_value;               /**< Start value*/
  80:lvgl/src/core/../misc/lv_anim.h ****     int32_t current_value;             /**< Current value*/
  81:lvgl/src/core/../misc/lv_anim.h ****     int32_t end_value;                 /**< End value*/
  82:lvgl/src/core/../misc/lv_anim.h ****     int32_t time;                /**< Animation time in ms*/
  83:lvgl/src/core/../misc/lv_anim.h ****     int32_t act_time;            /**< Current time in animation. Set to negative to make delay.*/
  84:lvgl/src/core/../misc/lv_anim.h ****     uint32_t playback_delay;     /**< Wait before play back*/
  85:lvgl/src/core/../misc/lv_anim.h ****     uint32_t playback_time;      /**< Duration of playback animation*/
  86:lvgl/src/core/../misc/lv_anim.h ****     uint32_t repeat_delay;       /**< Wait before repeat*/
  87:lvgl/src/core/../misc/lv_anim.h ****     uint16_t repeat_cnt;         /**< Repeat count for the animation*/
  88:lvgl/src/core/../misc/lv_anim.h ****     uint8_t early_apply  : 1;    /**< 1: Apply start value immediately even is there is `delay`*/
  89:lvgl/src/core/../misc/lv_anim.h **** 
  90:lvgl/src/core/../misc/lv_anim.h ****     /*Animation system use these - user shouldn't set*/
  91:lvgl/src/core/../misc/lv_anim.h ****     uint8_t playback_now : 1; /**< Play back is in progress*/
  92:lvgl/src/core/../misc/lv_anim.h ****     uint8_t run_round : 1;    /**< Indicates the animation has run in this round*/
  93:lvgl/src/core/../misc/lv_anim.h ****     uint8_t start_cb_called : 1;    /**< Indicates that the `start_cb` was already called*/
  94:lvgl/src/core/../misc/lv_anim.h **** } lv_anim_t;
  95:lvgl/src/core/../misc/lv_anim.h **** 
  96:lvgl/src/core/../misc/lv_anim.h **** /**********************
  97:lvgl/src/core/../misc/lv_anim.h ****  * GLOBAL PROTOTYPES
  98:lvgl/src/core/../misc/lv_anim.h ****  **********************/
  99:lvgl/src/core/../misc/lv_anim.h **** 
 100:lvgl/src/core/../misc/lv_anim.h **** /**
 101:lvgl/src/core/../misc/lv_anim.h ****  * Init. the animation module
 102:lvgl/src/core/../misc/lv_anim.h ****  */
 103:lvgl/src/core/../misc/lv_anim.h **** void _lv_anim_core_init(void);
 104:lvgl/src/core/../misc/lv_anim.h **** 
 105:lvgl/src/core/../misc/lv_anim.h **** /**
 106:lvgl/src/core/../misc/lv_anim.h ****  * Initialize an animation variable.
 107:lvgl/src/core/../misc/lv_anim.h ****  * E.g.:
 108:lvgl/src/core/../misc/lv_anim.h ****  * lv_anim_t a;
 109:lvgl/src/core/../misc/lv_anim.h ****  * lv_anim_init(&a);
 110:lvgl/src/core/../misc/lv_anim.h ****  * lv_anim_set_...(&a);
 111:lvgl/src/core/../misc/lv_anim.h ****  * lv_anim_start(&a);
 112:lvgl/src/core/../misc/lv_anim.h ****  * @param a     pointer to an `lv_anim_t` variable to initialize
 113:lvgl/src/core/../misc/lv_anim.h ****  */
 114:lvgl/src/core/../misc/lv_anim.h **** void lv_anim_init(lv_anim_t * a);
 115:lvgl/src/core/../misc/lv_anim.h **** 
 116:lvgl/src/core/../misc/lv_anim.h **** /**
 117:lvgl/src/core/../misc/lv_anim.h ****  * Set a variable to animate
 118:lvgl/src/core/../misc/lv_anim.h ****  * @param a     pointer to an initialized `lv_anim_t` variable
 119:lvgl/src/core/../misc/lv_anim.h ****  * @param var   pointer to a variable to animate
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 6


 120:lvgl/src/core/../misc/lv_anim.h ****  */
 121:lvgl/src/core/../misc/lv_anim.h **** static inline void lv_anim_set_var(lv_anim_t * a, void * var)
  56              		.loc 2 121 20 view .LVU6
  57              	.LBB13:
 122:lvgl/src/core/../misc/lv_anim.h **** {
 123:lvgl/src/core/../misc/lv_anim.h ****     a->var = var;
  58              		.loc 2 123 5 view .LVU7
  59              		.loc 2 123 12 is_stmt 0 view .LVU8
  60 000e 0095     		str	r5, [sp]
  61              	.LVL3:
  62              		.loc 2 123 12 view .LVU9
  63              	.LBE13:
  64              	.LBE12:
 113:lvgl/src/core/lv_obj_tree.c ****     lv_anim_set_exec_cb(&a, NULL);
  65              		.loc 1 113 5 is_stmt 1 view .LVU10
  66              	.LBB14:
  67              	.LBI14:
 124:lvgl/src/core/../misc/lv_anim.h **** }
 125:lvgl/src/core/../misc/lv_anim.h **** 
 126:lvgl/src/core/../misc/lv_anim.h **** /**
 127:lvgl/src/core/../misc/lv_anim.h ****  * Set a function to animate `var`
 128:lvgl/src/core/../misc/lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 129:lvgl/src/core/../misc/lv_anim.h ****  * @param exec_cb   a function to execute during animation
 130:lvgl/src/core/../misc/lv_anim.h ****  *                  LVGL's built-in functions can be used.
 131:lvgl/src/core/../misc/lv_anim.h ****  *                  E.g. lv_obj_set_x
 132:lvgl/src/core/../misc/lv_anim.h ****  */
 133:lvgl/src/core/../misc/lv_anim.h **** static inline void lv_anim_set_exec_cb(lv_anim_t * a, lv_anim_exec_xcb_t exec_cb)
  68              		.loc 2 133 20 view .LVU11
  69              	.LBB15:
 134:lvgl/src/core/../misc/lv_anim.h **** {
 135:lvgl/src/core/../misc/lv_anim.h ****     a->exec_cb = exec_cb;
  70              		.loc 2 135 5 view .LVU12
  71              		.loc 2 135 16 is_stmt 0 view .LVU13
  72 0010 0023     		movs	r3, #0
  73 0012 0193     		str	r3, [sp, #4]
  74              	.LVL4:
  75              		.loc 2 135 16 view .LVU14
  76              	.LBE15:
  77              	.LBE14:
 114:lvgl/src/core/lv_obj_tree.c ****     lv_anim_set_time(&a, 1);
  78              		.loc 1 114 5 is_stmt 1 view .LVU15
  79              	.LBB16:
  80              	.LBI16:
 136:lvgl/src/core/../misc/lv_anim.h **** }
 137:lvgl/src/core/../misc/lv_anim.h **** 
 138:lvgl/src/core/../misc/lv_anim.h **** /**
 139:lvgl/src/core/../misc/lv_anim.h ****  * Set the duration of an animation
 140:lvgl/src/core/../misc/lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 141:lvgl/src/core/../misc/lv_anim.h ****  * @param duration  duration of the animation in milliseconds
 142:lvgl/src/core/../misc/lv_anim.h ****  */
 143:lvgl/src/core/../misc/lv_anim.h **** static inline void lv_anim_set_time(lv_anim_t * a, uint32_t duration)
  81              		.loc 2 143 20 view .LVU16
  82              	.LBB17:
 144:lvgl/src/core/../misc/lv_anim.h **** {
 145:lvgl/src/core/../misc/lv_anim.h ****     a->time = duration;
  83              		.loc 2 145 5 view .LVU17
  84              		.loc 2 145 13 is_stmt 0 view .LVU18
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 7


  85 0014 0123     		movs	r3, #1
  86 0016 0A93     		str	r3, [sp, #40]
  87              	.LVL5:
  88              		.loc 2 145 13 view .LVU19
  89              	.LBE17:
  90              	.LBE16:
 115:lvgl/src/core/lv_obj_tree.c ****     lv_anim_set_delay(&a, delay_ms);
  91              		.loc 1 115 5 is_stmt 1 view .LVU20
  92              	.LBB18:
  93              	.LBI18:
 146:lvgl/src/core/../misc/lv_anim.h **** }
 147:lvgl/src/core/../misc/lv_anim.h **** 
 148:lvgl/src/core/../misc/lv_anim.h **** /**
 149:lvgl/src/core/../misc/lv_anim.h ****  * Set a delay before starting the animation
 150:lvgl/src/core/../misc/lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 151:lvgl/src/core/../misc/lv_anim.h ****  * @param delay     delay before the animation in milliseconds
 152:lvgl/src/core/../misc/lv_anim.h ****  */
 153:lvgl/src/core/../misc/lv_anim.h **** static inline void lv_anim_set_delay(lv_anim_t * a, uint32_t delay)
  94              		.loc 2 153 20 view .LVU21
  95              	.LBB19:
 154:lvgl/src/core/../misc/lv_anim.h **** {
 155:lvgl/src/core/../misc/lv_anim.h ****     a->act_time = -(int32_t)(delay);
  96              		.loc 2 155 5 view .LVU22
  97              		.loc 2 155 19 is_stmt 0 view .LVU23
  98 0018 6442     		rsbs	r4, r4, #0
  99              	.LVL6:
 100              		.loc 2 155 17 view .LVU24
 101 001a 0B94     		str	r4, [sp, #44]
 102              	.LVL7:
 103              		.loc 2 155 17 view .LVU25
 104              	.LBE19:
 105              	.LBE18:
 116:lvgl/src/core/lv_obj_tree.c ****     lv_anim_set_ready_cb(&a, lv_obj_del_anim_ready_cb);
 106              		.loc 1 116 5 is_stmt 1 view .LVU26
 107              	.LBB20:
 108              	.LBI20:
 156:lvgl/src/core/../misc/lv_anim.h **** }
 157:lvgl/src/core/../misc/lv_anim.h **** 
 158:lvgl/src/core/../misc/lv_anim.h **** /**
 159:lvgl/src/core/../misc/lv_anim.h ****  * Set the start and end values of an animation
 160:lvgl/src/core/../misc/lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 161:lvgl/src/core/../misc/lv_anim.h ****  * @param start     the start value
 162:lvgl/src/core/../misc/lv_anim.h ****  * @param end       the end value
 163:lvgl/src/core/../misc/lv_anim.h ****  */
 164:lvgl/src/core/../misc/lv_anim.h **** static inline void lv_anim_set_values(lv_anim_t * a, int32_t start, int32_t end)
 165:lvgl/src/core/../misc/lv_anim.h **** {
 166:lvgl/src/core/../misc/lv_anim.h ****     a->start_value = start;
 167:lvgl/src/core/../misc/lv_anim.h ****     a->current_value = start;
 168:lvgl/src/core/../misc/lv_anim.h ****     a->end_value = end;
 169:lvgl/src/core/../misc/lv_anim.h **** }
 170:lvgl/src/core/../misc/lv_anim.h **** 
 171:lvgl/src/core/../misc/lv_anim.h **** /**
 172:lvgl/src/core/../misc/lv_anim.h ****  * Similar to `lv_anim_set_exec_cb` but `lv_anim_custom_exec_cb_t` receives
 173:lvgl/src/core/../misc/lv_anim.h ****  * `lv_anim_t * ` as its first parameter instead of `void *`.
 174:lvgl/src/core/../misc/lv_anim.h ****  * This function might be used when LVGL is bound to other languages because
 175:lvgl/src/core/../misc/lv_anim.h ****  * it's more consistent to have `lv_anim_t *` as first parameter.
 176:lvgl/src/core/../misc/lv_anim.h ****  * The variable to animate can be stored in the animation's `user_data`
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 8


 177:lvgl/src/core/../misc/lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 178:lvgl/src/core/../misc/lv_anim.h ****  * @param exec_cb   a function to execute.
 179:lvgl/src/core/../misc/lv_anim.h ****  */
 180:lvgl/src/core/../misc/lv_anim.h **** static inline void lv_anim_set_custom_exec_cb(lv_anim_t * a, lv_anim_custom_exec_cb_t exec_cb)
 181:lvgl/src/core/../misc/lv_anim.h **** {
 182:lvgl/src/core/../misc/lv_anim.h ****     a->var     = a;
 183:lvgl/src/core/../misc/lv_anim.h ****     a->exec_cb = (lv_anim_exec_xcb_t)exec_cb;
 184:lvgl/src/core/../misc/lv_anim.h **** }
 185:lvgl/src/core/../misc/lv_anim.h **** 
 186:lvgl/src/core/../misc/lv_anim.h **** /**
 187:lvgl/src/core/../misc/lv_anim.h ****  * Set the path (curve) of the animation.
 188:lvgl/src/core/../misc/lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 189:lvgl/src/core/../misc/lv_anim.h ****  * @param path_cb a function to set the current value of the animation.
 190:lvgl/src/core/../misc/lv_anim.h ****  */
 191:lvgl/src/core/../misc/lv_anim.h **** static inline void lv_anim_set_path_cb(lv_anim_t * a, lv_anim_path_cb_t path_cb)
 192:lvgl/src/core/../misc/lv_anim.h **** {
 193:lvgl/src/core/../misc/lv_anim.h ****     a->path_cb = path_cb;
 194:lvgl/src/core/../misc/lv_anim.h **** }
 195:lvgl/src/core/../misc/lv_anim.h **** 
 196:lvgl/src/core/../misc/lv_anim.h **** /**
 197:lvgl/src/core/../misc/lv_anim.h ****  * Set a function call when the animation really starts (considering `delay`)
 198:lvgl/src/core/../misc/lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 199:lvgl/src/core/../misc/lv_anim.h ****  * @param start_cb  a function call when the animation starts
 200:lvgl/src/core/../misc/lv_anim.h ****  */
 201:lvgl/src/core/../misc/lv_anim.h **** static inline void lv_anim_set_start_cb(lv_anim_t * a, lv_anim_start_cb_t start_cb)
 202:lvgl/src/core/../misc/lv_anim.h **** {
 203:lvgl/src/core/../misc/lv_anim.h ****     a->start_cb = start_cb;
 204:lvgl/src/core/../misc/lv_anim.h **** }
 205:lvgl/src/core/../misc/lv_anim.h **** 
 206:lvgl/src/core/../misc/lv_anim.h **** /**
 207:lvgl/src/core/../misc/lv_anim.h ****  * Set a function to use the current value of the variable and make start and end value
 208:lvgl/src/core/../misc/lv_anim.h ****  * relative to the returned current value.
 209:lvgl/src/core/../misc/lv_anim.h ****  * @param a             pointer to an initialized `lv_anim_t` variable
 210:lvgl/src/core/../misc/lv_anim.h ****  * @param get_value_cb  a function call when the animation starts
 211:lvgl/src/core/../misc/lv_anim.h ****  */
 212:lvgl/src/core/../misc/lv_anim.h **** static inline void lv_anim_set_get_value_cb(lv_anim_t * a, lv_anim_get_value_cb_t get_value_cb)
 213:lvgl/src/core/../misc/lv_anim.h **** {
 214:lvgl/src/core/../misc/lv_anim.h ****     a->get_value_cb = get_value_cb;
 215:lvgl/src/core/../misc/lv_anim.h **** }
 216:lvgl/src/core/../misc/lv_anim.h **** 
 217:lvgl/src/core/../misc/lv_anim.h **** /**
 218:lvgl/src/core/../misc/lv_anim.h ****  * Set a function call when the animation is ready
 219:lvgl/src/core/../misc/lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 220:lvgl/src/core/../misc/lv_anim.h ****  * @param ready_cb  a function call when the animation is ready
 221:lvgl/src/core/../misc/lv_anim.h ****  */
 222:lvgl/src/core/../misc/lv_anim.h **** static inline void lv_anim_set_ready_cb(lv_anim_t * a, lv_anim_ready_cb_t ready_cb)
 109              		.loc 2 222 20 view .LVU27
 110              	.LBB21:
 223:lvgl/src/core/../misc/lv_anim.h **** {
 224:lvgl/src/core/../misc/lv_anim.h ****     a->ready_cb = ready_cb;
 111              		.loc 2 224 5 view .LVU28
 112              		.loc 2 224 17 is_stmt 0 view .LVU29
 113 001c 034B     		ldr	r3, .L3
 114 001e 0393     		str	r3, [sp, #12]
 115              	.LVL8:
 116              		.loc 2 224 17 view .LVU30
 117              	.LBE21:
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 9


 118              	.LBE20:
 117:lvgl/src/core/lv_obj_tree.c ****     lv_anim_start(&a);
 119              		.loc 1 117 5 is_stmt 1 view .LVU31
 120 0020 6846     		mov	r0, sp
 121 0022 FFF7FEFF 		bl	lv_anim_start
 122              	.LVL9:
 118:lvgl/src/core/lv_obj_tree.c **** }
 123              		.loc 1 118 1 is_stmt 0 view .LVU32
 124 0026 11B0     		add	sp, sp, #68
 125              	.LCFI2:
 126              		.cfi_def_cfa_offset 12
 127              		@ sp needed
 128 0028 30BD     		pop	{r4, r5, pc}
 129              	.LVL10:
 130              	.L4:
 131              		.loc 1 118 1 view .LVU33
 132 002a 00BF     		.align	2
 133              	.L3:
 134 002c 00000000 		.word	lv_obj_del_anim_ready_cb
 135              		.cfi_endproc
 136              	.LFE158:
 138              		.section	.text.lv_obj_del_async,"ax",%progbits
 139              		.align	1
 140              		.global	lv_obj_del_async
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 145              	lv_obj_del_async:
 146              	.LVL11:
 147              	.LFB160:
 119:lvgl/src/core/lv_obj_tree.c **** 
 120:lvgl/src/core/lv_obj_tree.c **** void lv_obj_del_anim_ready_cb(lv_anim_t * a)
 121:lvgl/src/core/lv_obj_tree.c **** {
 122:lvgl/src/core/lv_obj_tree.c ****     lv_obj_del(a->var);
 123:lvgl/src/core/lv_obj_tree.c **** }
 124:lvgl/src/core/lv_obj_tree.c **** 
 125:lvgl/src/core/lv_obj_tree.c **** void lv_obj_del_async(lv_obj_t * obj)
 126:lvgl/src/core/lv_obj_tree.c **** {
 148              		.loc 1 126 1 is_stmt 1 view -0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		.loc 1 126 1 is_stmt 0 view .LVU35
 153 0000 08B5     		push	{r3, lr}
 154              	.LCFI3:
 155              		.cfi_def_cfa_offset 8
 156              		.cfi_offset 3, -8
 157              		.cfi_offset 14, -4
 158 0002 0146     		mov	r1, r0
 127:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 159              		.loc 1 127 5 is_stmt 1 view .LVU36
 160              		.loc 1 127 5 view .LVU37
 161              		.loc 1 127 5 view .LVU38
 128:lvgl/src/core/lv_obj_tree.c ****     lv_async_call(lv_obj_del_async_cb, obj);
 162              		.loc 1 128 5 view .LVU39
 163 0004 0148     		ldr	r0, .L7
 164              	.LVL12:
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 10


 165              		.loc 1 128 5 is_stmt 0 view .LVU40
 166 0006 FFF7FEFF 		bl	lv_async_call
 167              	.LVL13:
 129:lvgl/src/core/lv_obj_tree.c **** }
 168              		.loc 1 129 1 view .LVU41
 169 000a 08BD     		pop	{r3, pc}
 170              	.L8:
 171              		.align	2
 172              	.L7:
 173 000c 00000000 		.word	lv_obj_del_async_cb
 174              		.cfi_endproc
 175              	.LFE160:
 177              		.section	.text.lv_obj_get_parent,"ax",%progbits
 178              		.align	1
 179              		.global	lv_obj_get_parent
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 184              	lv_obj_get_parent:
 185              	.LVL14:
 186              	.LFB166:
 130:lvgl/src/core/lv_obj_tree.c **** 
 131:lvgl/src/core/lv_obj_tree.c **** void lv_obj_set_parent(lv_obj_t * obj, lv_obj_t * parent)
 132:lvgl/src/core/lv_obj_tree.c **** {
 133:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 134:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(parent, MY_CLASS);
 135:lvgl/src/core/lv_obj_tree.c **** 
 136:lvgl/src/core/lv_obj_tree.c ****     if(obj->parent == NULL) {
 137:lvgl/src/core/lv_obj_tree.c ****         LV_LOG_WARN("Can't set the parent of a screen");
 138:lvgl/src/core/lv_obj_tree.c ****         return;
 139:lvgl/src/core/lv_obj_tree.c ****     }
 140:lvgl/src/core/lv_obj_tree.c **** 
 141:lvgl/src/core/lv_obj_tree.c ****     if(parent == NULL) {
 142:lvgl/src/core/lv_obj_tree.c ****         LV_LOG_WARN("Can't set parent == NULL to an object");
 143:lvgl/src/core/lv_obj_tree.c ****         return;
 144:lvgl/src/core/lv_obj_tree.c ****     }
 145:lvgl/src/core/lv_obj_tree.c **** 
 146:lvgl/src/core/lv_obj_tree.c ****     lv_obj_invalidate(obj);
 147:lvgl/src/core/lv_obj_tree.c **** 
 148:lvgl/src/core/lv_obj_tree.c ****     lv_obj_allocate_spec_attr(parent);
 149:lvgl/src/core/lv_obj_tree.c **** 
 150:lvgl/src/core/lv_obj_tree.c ****     lv_obj_t * old_parent = obj->parent;
 151:lvgl/src/core/lv_obj_tree.c ****     /*Remove the object from the old parent's child list*/
 152:lvgl/src/core/lv_obj_tree.c ****     int32_t i;
 153:lvgl/src/core/lv_obj_tree.c ****     for(i = lv_obj_get_index(obj); i <= (int32_t)lv_obj_get_child_cnt(old_parent) - 2; i++) {
 154:lvgl/src/core/lv_obj_tree.c ****         old_parent->spec_attr->children[i] = old_parent->spec_attr->children[i + 1];
 155:lvgl/src/core/lv_obj_tree.c ****     }
 156:lvgl/src/core/lv_obj_tree.c ****     old_parent->spec_attr->child_cnt--;
 157:lvgl/src/core/lv_obj_tree.c ****     if(old_parent->spec_attr->child_cnt) {
 158:lvgl/src/core/lv_obj_tree.c ****         old_parent->spec_attr->children = lv_mem_realloc(old_parent->spec_attr->children,
 159:lvgl/src/core/lv_obj_tree.c ****                                                          old_parent->spec_attr->child_cnt * (sizeof
 160:lvgl/src/core/lv_obj_tree.c ****     }
 161:lvgl/src/core/lv_obj_tree.c ****     else {
 162:lvgl/src/core/lv_obj_tree.c ****         lv_mem_free(old_parent->spec_attr->children);
 163:lvgl/src/core/lv_obj_tree.c ****         old_parent->spec_attr->children = NULL;
 164:lvgl/src/core/lv_obj_tree.c ****     }
 165:lvgl/src/core/lv_obj_tree.c **** 
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 11


 166:lvgl/src/core/lv_obj_tree.c ****     /*Add the child to the new parent as the last (newest child)*/
 167:lvgl/src/core/lv_obj_tree.c ****     parent->spec_attr->child_cnt++;
 168:lvgl/src/core/lv_obj_tree.c ****     parent->spec_attr->children = lv_mem_realloc(parent->spec_attr->children,
 169:lvgl/src/core/lv_obj_tree.c ****                                                  parent->spec_attr->child_cnt * (sizeof(lv_obj_t *)
 170:lvgl/src/core/lv_obj_tree.c ****     parent->spec_attr->children[lv_obj_get_child_cnt(parent) - 1] = obj;
 171:lvgl/src/core/lv_obj_tree.c **** 
 172:lvgl/src/core/lv_obj_tree.c ****     obj->parent = parent;
 173:lvgl/src/core/lv_obj_tree.c **** 
 174:lvgl/src/core/lv_obj_tree.c ****     /*Notify the original parent because one of its children is lost*/
 175:lvgl/src/core/lv_obj_tree.c ****     lv_obj_readjust_scroll(old_parent, LV_ANIM_OFF);
 176:lvgl/src/core/lv_obj_tree.c ****     lv_obj_scrollbar_invalidate(old_parent);
 177:lvgl/src/core/lv_obj_tree.c ****     lv_event_send(old_parent, LV_EVENT_CHILD_CHANGED, obj);
 178:lvgl/src/core/lv_obj_tree.c ****     lv_event_send(old_parent, LV_EVENT_CHILD_DELETED, NULL);
 179:lvgl/src/core/lv_obj_tree.c **** 
 180:lvgl/src/core/lv_obj_tree.c ****     /*Notify the new parent about the child*/
 181:lvgl/src/core/lv_obj_tree.c ****     lv_event_send(parent, LV_EVENT_CHILD_CHANGED, obj);
 182:lvgl/src/core/lv_obj_tree.c ****     lv_event_send(parent, LV_EVENT_CHILD_CREATED, NULL);
 183:lvgl/src/core/lv_obj_tree.c **** 
 184:lvgl/src/core/lv_obj_tree.c ****     lv_obj_mark_layout_as_dirty(obj);
 185:lvgl/src/core/lv_obj_tree.c **** 
 186:lvgl/src/core/lv_obj_tree.c ****     lv_obj_invalidate(obj);
 187:lvgl/src/core/lv_obj_tree.c **** }
 188:lvgl/src/core/lv_obj_tree.c **** 
 189:lvgl/src/core/lv_obj_tree.c **** void lv_obj_move_to_index(lv_obj_t * obj, int32_t index)
 190:lvgl/src/core/lv_obj_tree.c **** {
 191:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 192:lvgl/src/core/lv_obj_tree.c **** 
 193:lvgl/src/core/lv_obj_tree.c ****     if(index < 0) {
 194:lvgl/src/core/lv_obj_tree.c ****         index = lv_obj_get_child_cnt(lv_obj_get_parent(obj)) + index;
 195:lvgl/src/core/lv_obj_tree.c ****     }
 196:lvgl/src/core/lv_obj_tree.c **** 
 197:lvgl/src/core/lv_obj_tree.c ****     const int32_t old_index = lv_obj_get_index(obj);
 198:lvgl/src/core/lv_obj_tree.c **** 
 199:lvgl/src/core/lv_obj_tree.c ****     lv_obj_t * parent = lv_obj_get_parent(obj);
 200:lvgl/src/core/lv_obj_tree.c **** 
 201:lvgl/src/core/lv_obj_tree.c ****     if(index < 0) return;
 202:lvgl/src/core/lv_obj_tree.c ****     if(index >= (int32_t) lv_obj_get_child_cnt(parent)) return;
 203:lvgl/src/core/lv_obj_tree.c ****     if(index == old_index) return;
 204:lvgl/src/core/lv_obj_tree.c **** 
 205:lvgl/src/core/lv_obj_tree.c ****     int32_t i = old_index;
 206:lvgl/src/core/lv_obj_tree.c ****     if(index < old_index) {
 207:lvgl/src/core/lv_obj_tree.c ****         while(i > index)  {
 208:lvgl/src/core/lv_obj_tree.c ****             parent->spec_attr->children[i] = parent->spec_attr->children[i - 1];
 209:lvgl/src/core/lv_obj_tree.c ****             i--;
 210:lvgl/src/core/lv_obj_tree.c ****         }
 211:lvgl/src/core/lv_obj_tree.c ****     }
 212:lvgl/src/core/lv_obj_tree.c ****     else {
 213:lvgl/src/core/lv_obj_tree.c ****         while(i < index) {
 214:lvgl/src/core/lv_obj_tree.c ****             parent->spec_attr->children[i] = parent->spec_attr->children[i + 1];
 215:lvgl/src/core/lv_obj_tree.c ****             i++;
 216:lvgl/src/core/lv_obj_tree.c ****         }
 217:lvgl/src/core/lv_obj_tree.c ****     }
 218:lvgl/src/core/lv_obj_tree.c **** 
 219:lvgl/src/core/lv_obj_tree.c ****     parent->spec_attr->children[index] = obj;
 220:lvgl/src/core/lv_obj_tree.c ****     lv_event_send(parent, LV_EVENT_CHILD_CHANGED, NULL);
 221:lvgl/src/core/lv_obj_tree.c ****     lv_obj_invalidate(parent);
 222:lvgl/src/core/lv_obj_tree.c **** }
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 12


 223:lvgl/src/core/lv_obj_tree.c **** 
 224:lvgl/src/core/lv_obj_tree.c **** void lv_obj_swap(lv_obj_t * obj1, lv_obj_t * obj2)
 225:lvgl/src/core/lv_obj_tree.c **** {
 226:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj1, MY_CLASS);
 227:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj2, MY_CLASS);
 228:lvgl/src/core/lv_obj_tree.c **** 
 229:lvgl/src/core/lv_obj_tree.c ****     lv_obj_t * parent = lv_obj_get_parent(obj1);
 230:lvgl/src/core/lv_obj_tree.c ****     lv_obj_t * parent2 = lv_obj_get_parent(obj2);
 231:lvgl/src/core/lv_obj_tree.c **** 
 232:lvgl/src/core/lv_obj_tree.c ****     uint_fast32_t index1 = lv_obj_get_index(obj1);
 233:lvgl/src/core/lv_obj_tree.c ****     uint_fast32_t index2 = lv_obj_get_index(obj2);
 234:lvgl/src/core/lv_obj_tree.c **** 
 235:lvgl/src/core/lv_obj_tree.c ****     lv_event_send(parent2, LV_EVENT_CHILD_DELETED, obj2);
 236:lvgl/src/core/lv_obj_tree.c ****     lv_event_send(parent, LV_EVENT_CHILD_DELETED, obj1);
 237:lvgl/src/core/lv_obj_tree.c **** 
 238:lvgl/src/core/lv_obj_tree.c ****     parent->spec_attr->children[index1] = obj2;
 239:lvgl/src/core/lv_obj_tree.c ****     parent2->spec_attr->children[index2] = obj1;
 240:lvgl/src/core/lv_obj_tree.c **** 
 241:lvgl/src/core/lv_obj_tree.c ****     lv_event_send(parent, LV_EVENT_CHILD_CHANGED, obj2);
 242:lvgl/src/core/lv_obj_tree.c ****     lv_event_send(parent, LV_EVENT_CHILD_CREATED, obj2);
 243:lvgl/src/core/lv_obj_tree.c ****     lv_event_send(parent2, LV_EVENT_CHILD_CHANGED, obj1);
 244:lvgl/src/core/lv_obj_tree.c ****     lv_event_send(parent2, LV_EVENT_CHILD_CREATED, obj1);
 245:lvgl/src/core/lv_obj_tree.c **** 
 246:lvgl/src/core/lv_obj_tree.c ****     lv_obj_invalidate(parent);
 247:lvgl/src/core/lv_obj_tree.c **** 
 248:lvgl/src/core/lv_obj_tree.c ****     if(parent != parent2) {
 249:lvgl/src/core/lv_obj_tree.c ****         lv_obj_invalidate(parent2);
 250:lvgl/src/core/lv_obj_tree.c ****     }
 251:lvgl/src/core/lv_obj_tree.c ****     lv_group_swap_obj(obj1, obj2);
 252:lvgl/src/core/lv_obj_tree.c **** }
 253:lvgl/src/core/lv_obj_tree.c **** 
 254:lvgl/src/core/lv_obj_tree.c **** lv_obj_t * lv_obj_get_screen(const lv_obj_t * obj)
 255:lvgl/src/core/lv_obj_tree.c **** {
 256:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 257:lvgl/src/core/lv_obj_tree.c **** 
 258:lvgl/src/core/lv_obj_tree.c ****     const lv_obj_t * par = obj;
 259:lvgl/src/core/lv_obj_tree.c ****     const lv_obj_t * act_par;
 260:lvgl/src/core/lv_obj_tree.c **** 
 261:lvgl/src/core/lv_obj_tree.c ****     do {
 262:lvgl/src/core/lv_obj_tree.c ****         act_par = par;
 263:lvgl/src/core/lv_obj_tree.c ****         par = lv_obj_get_parent(act_par);
 264:lvgl/src/core/lv_obj_tree.c ****     } while(par != NULL);
 265:lvgl/src/core/lv_obj_tree.c **** 
 266:lvgl/src/core/lv_obj_tree.c ****     return (lv_obj_t *)act_par;
 267:lvgl/src/core/lv_obj_tree.c **** }
 268:lvgl/src/core/lv_obj_tree.c **** 
 269:lvgl/src/core/lv_obj_tree.c **** lv_disp_t * lv_obj_get_disp(const lv_obj_t * obj)
 270:lvgl/src/core/lv_obj_tree.c **** {
 271:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 272:lvgl/src/core/lv_obj_tree.c **** 
 273:lvgl/src/core/lv_obj_tree.c ****     const lv_obj_t * scr;
 274:lvgl/src/core/lv_obj_tree.c **** 
 275:lvgl/src/core/lv_obj_tree.c ****     if(obj->parent == NULL) scr = obj;  /*`obj` is a screen*/
 276:lvgl/src/core/lv_obj_tree.c ****     else scr = lv_obj_get_screen(obj);  /*get the screen of `obj`*/
 277:lvgl/src/core/lv_obj_tree.c **** 
 278:lvgl/src/core/lv_obj_tree.c ****     lv_disp_t * d;
 279:lvgl/src/core/lv_obj_tree.c ****     _LV_LL_READ(&LV_GC_ROOT(_lv_disp_ll), d) {
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 13


 280:lvgl/src/core/lv_obj_tree.c ****         uint32_t i;
 281:lvgl/src/core/lv_obj_tree.c ****         for(i = 0; i < d->screen_cnt; i++) {
 282:lvgl/src/core/lv_obj_tree.c ****             if(d->screens[i] == scr) return d;
 283:lvgl/src/core/lv_obj_tree.c ****         }
 284:lvgl/src/core/lv_obj_tree.c ****     }
 285:lvgl/src/core/lv_obj_tree.c **** 
 286:lvgl/src/core/lv_obj_tree.c ****     LV_LOG_WARN("No screen found");
 287:lvgl/src/core/lv_obj_tree.c ****     return NULL;
 288:lvgl/src/core/lv_obj_tree.c **** }
 289:lvgl/src/core/lv_obj_tree.c **** 
 290:lvgl/src/core/lv_obj_tree.c **** lv_obj_t * lv_obj_get_parent(const lv_obj_t * obj)
 291:lvgl/src/core/lv_obj_tree.c **** {
 187              		.loc 1 291 1 is_stmt 1 view -0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191              		@ link register save eliminated.
 292:lvgl/src/core/lv_obj_tree.c ****     if(obj == NULL) return NULL;
 192              		.loc 1 292 5 view .LVU43
 193              		.loc 1 292 7 is_stmt 0 view .LVU44
 194 0000 08B1     		cbz	r0, .L11
 293:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 195              		.loc 1 293 5 is_stmt 1 view .LVU45
 196              		.loc 1 293 5 view .LVU46
 197              		.loc 1 293 5 view .LVU47
 294:lvgl/src/core/lv_obj_tree.c **** 
 295:lvgl/src/core/lv_obj_tree.c ****     return obj->parent;
 198              		.loc 1 295 5 view .LVU48
 199              		.loc 1 295 15 is_stmt 0 view .LVU49
 200 0002 4068     		ldr	r0, [r0, #4]
 201              	.LVL15:
 202              		.loc 1 295 15 view .LVU50
 203 0004 7047     		bx	lr
 204              	.LVL16:
 205              	.L11:
 296:lvgl/src/core/lv_obj_tree.c **** }
 206              		.loc 1 296 1 view .LVU51
 207 0006 7047     		bx	lr
 208              		.cfi_endproc
 209              	.LFE166:
 211              		.section	.text.lv_obj_get_screen,"ax",%progbits
 212              		.align	1
 213              		.global	lv_obj_get_screen
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 218              	lv_obj_get_screen:
 219              	.LFB164:
 255:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 220              		.loc 1 255 1 is_stmt 1 view -0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224              	.LVL17:
 255:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 225              		.loc 1 255 1 is_stmt 0 view .LVU53
 226 0000 10B5     		push	{r4, lr}
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 14


 227              	.LCFI4:
 228              		.cfi_def_cfa_offset 8
 229              		.cfi_offset 4, -8
 230              		.cfi_offset 14, -4
 231              	.LVL18:
 232              	.L13:
 259:lvgl/src/core/lv_obj_tree.c **** 
 233              		.loc 1 259 5 is_stmt 1 view .LVU54
 261:lvgl/src/core/lv_obj_tree.c ****         act_par = par;
 234              		.loc 1 261 5 view .LVU55
 262:lvgl/src/core/lv_obj_tree.c ****         par = lv_obj_get_parent(act_par);
 235              		.loc 1 262 9 view .LVU56
 263:lvgl/src/core/lv_obj_tree.c ****     } while(par != NULL);
 236              		.loc 1 263 9 view .LVU57
 237 0002 0446     		mov	r4, r0
 263:lvgl/src/core/lv_obj_tree.c ****     } while(par != NULL);
 238              		.loc 1 263 15 is_stmt 0 view .LVU58
 239 0004 FFF7FEFF 		bl	lv_obj_get_parent
 240              	.LVL19:
 264:lvgl/src/core/lv_obj_tree.c **** 
 241              		.loc 1 264 17 is_stmt 1 discriminator 1 view .LVU59
 242 0008 0028     		cmp	r0, #0
 243 000a FAD1     		bne	.L13
 266:lvgl/src/core/lv_obj_tree.c **** }
 244              		.loc 1 266 5 view .LVU60
 267:lvgl/src/core/lv_obj_tree.c **** 
 245              		.loc 1 267 1 is_stmt 0 view .LVU61
 246 000c 2046     		mov	r0, r4
 247 000e 10BD     		pop	{r4, pc}
 267:lvgl/src/core/lv_obj_tree.c **** 
 248              		.loc 1 267 1 view .LVU62
 249              		.cfi_endproc
 250              	.LFE164:
 252              		.section	.text.lv_obj_get_disp,"ax",%progbits
 253              		.align	1
 254              		.global	lv_obj_get_disp
 255              		.syntax unified
 256              		.thumb
 257              		.thumb_func
 259              	lv_obj_get_disp:
 260              	.LVL20:
 261              	.LFB165:
 270:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 262              		.loc 1 270 1 is_stmt 1 view -0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 270:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 266              		.loc 1 270 1 is_stmt 0 view .LVU64
 267 0000 10B5     		push	{r4, lr}
 268              	.LCFI5:
 269              		.cfi_def_cfa_offset 8
 270              		.cfi_offset 4, -8
 271              		.cfi_offset 14, -4
 272 0002 0446     		mov	r4, r0
 271:lvgl/src/core/lv_obj_tree.c **** 
 273              		.loc 1 271 5 is_stmt 1 view .LVU65
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 15


 271:lvgl/src/core/lv_obj_tree.c **** 
 274              		.loc 1 271 5 view .LVU66
 271:lvgl/src/core/lv_obj_tree.c **** 
 275              		.loc 1 271 5 view .LVU67
 273:lvgl/src/core/lv_obj_tree.c **** 
 276              		.loc 1 273 5 view .LVU68
 275:lvgl/src/core/lv_obj_tree.c ****     else scr = lv_obj_get_screen(obj);  /*get the screen of `obj`*/
 277              		.loc 1 275 5 view .LVU69
 275:lvgl/src/core/lv_obj_tree.c ****     else scr = lv_obj_get_screen(obj);  /*get the screen of `obj`*/
 278              		.loc 1 275 11 is_stmt 0 view .LVU70
 279 0004 4368     		ldr	r3, [r0, #4]
 275:lvgl/src/core/lv_obj_tree.c ****     else scr = lv_obj_get_screen(obj);  /*get the screen of `obj`*/
 280              		.loc 1 275 7 view .LVU71
 281 0006 13B1     		cbz	r3, .L16
 276:lvgl/src/core/lv_obj_tree.c **** 
 282              		.loc 1 276 10 is_stmt 1 view .LVU72
 276:lvgl/src/core/lv_obj_tree.c **** 
 283              		.loc 1 276 16 is_stmt 0 view .LVU73
 284 0008 FFF7FEFF 		bl	lv_obj_get_screen
 285              	.LVL21:
 276:lvgl/src/core/lv_obj_tree.c **** 
 286              		.loc 1 276 16 view .LVU74
 287 000c 0446     		mov	r4, r0
 288              	.LVL22:
 289              	.L16:
 278:lvgl/src/core/lv_obj_tree.c ****     _LV_LL_READ(&LV_GC_ROOT(_lv_disp_ll), d) {
 290              		.loc 1 278 5 is_stmt 1 view .LVU75
 279:lvgl/src/core/lv_obj_tree.c ****         uint32_t i;
 291              		.loc 1 279 5 view .LVU76
 292 000e 0A48     		ldr	r0, .L25
 293 0010 FFF7FEFF 		bl	_lv_ll_get_head
 294              	.LVL23:
 295              	.L17:
 279:lvgl/src/core/lv_obj_tree.c ****         uint32_t i;
 296              		.loc 1 279 5 discriminator 1 view .LVU77
 297 0014 50B1     		cbz	r0, .L15
 298              	.LBB22:
 281:lvgl/src/core/lv_obj_tree.c ****             if(d->screens[i] == scr) return d;
 299              		.loc 1 281 15 is_stmt 0 view .LVU78
 300 0016 0023     		movs	r3, #0
 301 0018 00E0     		b	.L20
 302              	.LVL24:
 303              	.L24:
 281:lvgl/src/core/lv_obj_tree.c ****             if(d->screens[i] == scr) return d;
 304              		.loc 1 281 40 is_stmt 1 discriminator 2 view .LVU79
 305 001a 0133     		adds	r3, r3, #1
 306              	.LVL25:
 307              	.L20:
 281:lvgl/src/core/lv_obj_tree.c ****             if(d->screens[i] == scr) return d;
 308              		.loc 1 281 22 discriminator 1 view .LVU80
 281:lvgl/src/core/lv_obj_tree.c ****             if(d->screens[i] == scr) return d;
 309              		.loc 1 281 25 is_stmt 0 discriminator 1 view .LVU81
 310 001c 426A     		ldr	r2, [r0, #36]
 281:lvgl/src/core/lv_obj_tree.c ****             if(d->screens[i] == scr) return d;
 311              		.loc 1 281 22 discriminator 1 view .LVU82
 312 001e 9A42     		cmp	r2, r3
 313 0020 05D9     		bls	.L23
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 16


 282:lvgl/src/core/lv_obj_tree.c ****         }
 314              		.loc 1 282 13 is_stmt 1 view .LVU83
 282:lvgl/src/core/lv_obj_tree.c ****         }
 315              		.loc 1 282 17 is_stmt 0 view .LVU84
 316 0022 C268     		ldr	r2, [r0, #12]
 282:lvgl/src/core/lv_obj_tree.c ****         }
 317              		.loc 1 282 26 view .LVU85
 318 0024 52F82320 		ldr	r2, [r2, r3, lsl #2]
 282:lvgl/src/core/lv_obj_tree.c ****         }
 319              		.loc 1 282 15 view .LVU86
 320 0028 A242     		cmp	r2, r4
 321 002a F6D1     		bne	.L24
 322              	.LVL26:
 323              	.L15:
 282:lvgl/src/core/lv_obj_tree.c ****         }
 324              		.loc 1 282 15 view .LVU87
 325              	.LBE22:
 288:lvgl/src/core/lv_obj_tree.c **** 
 326              		.loc 1 288 1 view .LVU88
 327 002c 10BD     		pop	{r4, pc}
 328              	.LVL27:
 329              	.L23:
 279:lvgl/src/core/lv_obj_tree.c ****         uint32_t i;
 330              		.loc 1 279 5 is_stmt 1 discriminator 2 view .LVU89
 331 002e 0146     		mov	r1, r0
 332 0030 0148     		ldr	r0, .L25
 333              	.LVL28:
 279:lvgl/src/core/lv_obj_tree.c ****         uint32_t i;
 334              		.loc 1 279 5 is_stmt 0 discriminator 2 view .LVU90
 335 0032 FFF7FEFF 		bl	_lv_ll_get_next
 336              	.LVL29:
 279:lvgl/src/core/lv_obj_tree.c ****         uint32_t i;
 337              		.loc 1 279 5 discriminator 2 view .LVU91
 338 0036 EDE7     		b	.L17
 339              	.L26:
 340              		.align	2
 341              	.L25:
 342 0038 00000000 		.word	_lv_disp_ll
 343              		.cfi_endproc
 344              	.LFE165:
 346              		.section	.text.lv_obj_get_child,"ax",%progbits
 347              		.align	1
 348              		.global	lv_obj_get_child
 349              		.syntax unified
 350              		.thumb
 351              		.thumb_func
 353              	lv_obj_get_child:
 354              	.LVL30:
 355              	.LFB167:
 297:lvgl/src/core/lv_obj_tree.c **** 
 298:lvgl/src/core/lv_obj_tree.c **** lv_obj_t * lv_obj_get_child(const lv_obj_t * obj, int32_t id)
 299:lvgl/src/core/lv_obj_tree.c **** {
 356              		.loc 1 299 1 is_stmt 1 view -0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 0
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 360              		@ link register save eliminated.
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 17


 300:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 361              		.loc 1 300 5 view .LVU93
 362              		.loc 1 300 5 view .LVU94
 363              		.loc 1 300 5 view .LVU95
 301:lvgl/src/core/lv_obj_tree.c **** 
 302:lvgl/src/core/lv_obj_tree.c ****     if(obj->spec_attr == NULL) return NULL;
 364              		.loc 1 302 5 view .LVU96
 365              		.loc 1 302 11 is_stmt 0 view .LVU97
 366 0000 8068     		ldr	r0, [r0, #8]
 367              	.LVL31:
 368              		.loc 1 302 7 view .LVU98
 369 0002 88B1     		cbz	r0, .L27
 303:lvgl/src/core/lv_obj_tree.c **** 
 304:lvgl/src/core/lv_obj_tree.c ****     uint32_t idu;
 370              		.loc 1 304 5 is_stmt 1 view .LVU99
 305:lvgl/src/core/lv_obj_tree.c ****     if(id < 0) {
 371              		.loc 1 305 5 view .LVU100
 372              		.loc 1 305 7 is_stmt 0 view .LVU101
 373 0004 0029     		cmp	r1, #0
 374 0006 07DB     		blt	.L33
 306:lvgl/src/core/lv_obj_tree.c ****         id = obj->spec_attr->child_cnt + id;
 307:lvgl/src/core/lv_obj_tree.c ****         if(id < 0) return NULL;
 308:lvgl/src/core/lv_obj_tree.c ****         idu = (uint32_t) id;
 309:lvgl/src/core/lv_obj_tree.c ****     }
 310:lvgl/src/core/lv_obj_tree.c ****     else {
 311:lvgl/src/core/lv_obj_tree.c ****         idu = id;
 375              		.loc 1 311 9 is_stmt 1 view .LVU102
 376              		.loc 1 311 13 is_stmt 0 view .LVU103
 377 0008 0B46     		mov	r3, r1
 378              	.LVL32:
 379              	.L30:
 312:lvgl/src/core/lv_obj_tree.c ****     }
 313:lvgl/src/core/lv_obj_tree.c **** 
 314:lvgl/src/core/lv_obj_tree.c ****     if(idu >= obj->spec_attr->child_cnt) return NULL;
 380              		.loc 1 314 5 is_stmt 1 view .LVU104
 381              		.loc 1 314 29 is_stmt 0 view .LVU105
 382 000a 4268     		ldr	r2, [r0, #4]
 383              		.loc 1 314 7 view .LVU106
 384 000c 9A42     		cmp	r2, r3
 385 000e 0AD9     		bls	.L32
 315:lvgl/src/core/lv_obj_tree.c ****     else return obj->spec_attr->children[id];
 386              		.loc 1 315 10 is_stmt 1 view .LVU107
 387              		.loc 1 315 31 is_stmt 0 view .LVU108
 388 0010 0368     		ldr	r3, [r0]
 389              		.loc 1 315 41 view .LVU109
 390 0012 53F82100 		ldr	r0, [r3, r1, lsl #2]
 391 0016 7047     		bx	lr
 392              	.LVL33:
 393              	.L33:
 306:lvgl/src/core/lv_obj_tree.c ****         id = obj->spec_attr->child_cnt + id;
 394              		.loc 1 306 9 is_stmt 1 view .LVU110
 306:lvgl/src/core/lv_obj_tree.c ****         id = obj->spec_attr->child_cnt + id;
 395              		.loc 1 306 28 is_stmt 0 view .LVU111
 396 0018 4368     		ldr	r3, [r0, #4]
 306:lvgl/src/core/lv_obj_tree.c ****         id = obj->spec_attr->child_cnt + id;
 397              		.loc 1 306 40 view .LVU112
 398 001a 1944     		add	r1, r1, r3
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 18


 399              	.LVL34:
 306:lvgl/src/core/lv_obj_tree.c ****         id = obj->spec_attr->child_cnt + id;
 400              		.loc 1 306 12 view .LVU113
 401 001c 0B46     		mov	r3, r1
 402              	.LVL35:
 307:lvgl/src/core/lv_obj_tree.c ****         idu = (uint32_t) id;
 403              		.loc 1 307 9 is_stmt 1 view .LVU114
 307:lvgl/src/core/lv_obj_tree.c ****         idu = (uint32_t) id;
 404              		.loc 1 307 11 is_stmt 0 view .LVU115
 405 001e 0029     		cmp	r1, #0
 406 0020 F3DA     		bge	.L30
 307:lvgl/src/core/lv_obj_tree.c ****         idu = (uint32_t) id;
 407              		.loc 1 307 27 discriminator 1 view .LVU116
 408 0022 0020     		movs	r0, #0
 409 0024 7047     		bx	lr
 410              	.LVL36:
 411              	.L32:
 314:lvgl/src/core/lv_obj_tree.c ****     else return obj->spec_attr->children[id];
 412              		.loc 1 314 49 discriminator 1 view .LVU117
 413 0026 0020     		movs	r0, #0
 414              	.LVL37:
 415              	.L27:
 316:lvgl/src/core/lv_obj_tree.c **** }
 416              		.loc 1 316 1 view .LVU118
 417 0028 7047     		bx	lr
 418              		.cfi_endproc
 419              	.LFE167:
 421              		.section	.text.lv_obj_get_child_cnt,"ax",%progbits
 422              		.align	1
 423              		.global	lv_obj_get_child_cnt
 424              		.syntax unified
 425              		.thumb
 426              		.thumb_func
 428              	lv_obj_get_child_cnt:
 429              	.LVL38:
 430              	.LFB168:
 317:lvgl/src/core/lv_obj_tree.c **** 
 318:lvgl/src/core/lv_obj_tree.c **** uint32_t lv_obj_get_child_cnt(const lv_obj_t * obj)
 319:lvgl/src/core/lv_obj_tree.c **** {
 431              		.loc 1 319 1 is_stmt 1 view -0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435              		@ link register save eliminated.
 320:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 436              		.loc 1 320 5 view .LVU120
 437              		.loc 1 320 5 view .LVU121
 438              		.loc 1 320 5 view .LVU122
 321:lvgl/src/core/lv_obj_tree.c ****     if(obj->spec_attr == NULL) return 0;
 439              		.loc 1 321 5 view .LVU123
 440              		.loc 1 321 11 is_stmt 0 view .LVU124
 441 0000 8368     		ldr	r3, [r0, #8]
 442              		.loc 1 321 7 view .LVU125
 443 0002 0BB1     		cbz	r3, .L36
 322:lvgl/src/core/lv_obj_tree.c ****     return obj->spec_attr->child_cnt;
 444              		.loc 1 322 5 is_stmt 1 view .LVU126
 445              		.loc 1 322 26 is_stmt 0 view .LVU127
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 19


 446 0004 5868     		ldr	r0, [r3, #4]
 447              	.LVL39:
 448              		.loc 1 322 26 view .LVU128
 449 0006 7047     		bx	lr
 450              	.LVL40:
 451              	.L36:
 321:lvgl/src/core/lv_obj_tree.c ****     if(obj->spec_attr == NULL) return 0;
 452              		.loc 1 321 39 discriminator 1 view .LVU129
 453 0008 0020     		movs	r0, #0
 454              	.LVL41:
 323:lvgl/src/core/lv_obj_tree.c **** }
 455              		.loc 1 323 1 view .LVU130
 456 000a 7047     		bx	lr
 457              		.cfi_endproc
 458              	.LFE168:
 460              		.section	.text.walk_core,"ax",%progbits
 461              		.align	1
 462              		.syntax unified
 463              		.thumb
 464              		.thumb_func
 466              	walk_core:
 467              	.LVL42:
 468              	.LFB173:
 324:lvgl/src/core/lv_obj_tree.c **** 
 325:lvgl/src/core/lv_obj_tree.c **** uint32_t lv_obj_get_index(const lv_obj_t * obj)
 326:lvgl/src/core/lv_obj_tree.c **** {
 327:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 328:lvgl/src/core/lv_obj_tree.c **** 
 329:lvgl/src/core/lv_obj_tree.c ****     lv_obj_t * parent = lv_obj_get_parent(obj);
 330:lvgl/src/core/lv_obj_tree.c ****     if(parent == NULL) return 0;
 331:lvgl/src/core/lv_obj_tree.c **** 
 332:lvgl/src/core/lv_obj_tree.c ****     uint32_t i = 0;
 333:lvgl/src/core/lv_obj_tree.c ****     for(i = 0; i < lv_obj_get_child_cnt(parent); i++) {
 334:lvgl/src/core/lv_obj_tree.c ****         if(lv_obj_get_child(parent, i) == obj) return i;
 335:lvgl/src/core/lv_obj_tree.c ****     }
 336:lvgl/src/core/lv_obj_tree.c **** 
 337:lvgl/src/core/lv_obj_tree.c ****     return 0xFFFFFFFF; /*Shouldn't happen*/
 338:lvgl/src/core/lv_obj_tree.c **** }
 339:lvgl/src/core/lv_obj_tree.c **** 
 340:lvgl/src/core/lv_obj_tree.c **** void lv_obj_tree_walk(lv_obj_t * start_obj, lv_obj_tree_walk_cb_t cb, void * user_data)
 341:lvgl/src/core/lv_obj_tree.c **** {
 342:lvgl/src/core/lv_obj_tree.c ****     walk_core(start_obj, cb, user_data);
 343:lvgl/src/core/lv_obj_tree.c **** }
 344:lvgl/src/core/lv_obj_tree.c **** 
 345:lvgl/src/core/lv_obj_tree.c **** /**********************
 346:lvgl/src/core/lv_obj_tree.c ****  *   STATIC FUNCTIONS
 347:lvgl/src/core/lv_obj_tree.c ****  **********************/
 348:lvgl/src/core/lv_obj_tree.c **** 
 349:lvgl/src/core/lv_obj_tree.c **** static void lv_obj_del_async_cb(void * obj)
 350:lvgl/src/core/lv_obj_tree.c **** {
 351:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 352:lvgl/src/core/lv_obj_tree.c **** 
 353:lvgl/src/core/lv_obj_tree.c ****     lv_obj_del(obj);
 354:lvgl/src/core/lv_obj_tree.c **** }
 355:lvgl/src/core/lv_obj_tree.c **** 
 356:lvgl/src/core/lv_obj_tree.c **** static void obj_del_core(lv_obj_t * obj)
 357:lvgl/src/core/lv_obj_tree.c **** {
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 20


 358:lvgl/src/core/lv_obj_tree.c ****     /*Let the user free the resources used in `LV_EVENT_DELETE`*/
 359:lvgl/src/core/lv_obj_tree.c ****     lv_res_t res = lv_event_send(obj, LV_EVENT_DELETE, NULL);
 360:lvgl/src/core/lv_obj_tree.c ****     if(res == LV_RES_INV) return;
 361:lvgl/src/core/lv_obj_tree.c **** 
 362:lvgl/src/core/lv_obj_tree.c ****     /*Recursively delete the children*/
 363:lvgl/src/core/lv_obj_tree.c ****     lv_obj_t * child = lv_obj_get_child(obj, 0);
 364:lvgl/src/core/lv_obj_tree.c ****     while(child) {
 365:lvgl/src/core/lv_obj_tree.c ****         obj_del_core(child);
 366:lvgl/src/core/lv_obj_tree.c ****         child = lv_obj_get_child(obj, 0);
 367:lvgl/src/core/lv_obj_tree.c ****     }
 368:lvgl/src/core/lv_obj_tree.c **** 
 369:lvgl/src/core/lv_obj_tree.c ****     lv_group_t * group = lv_obj_get_group(obj);
 370:lvgl/src/core/lv_obj_tree.c **** 
 371:lvgl/src/core/lv_obj_tree.c ****     /*Reset all input devices if the object to delete is used*/
 372:lvgl/src/core/lv_obj_tree.c ****     lv_indev_t * indev = lv_indev_get_next(NULL);
 373:lvgl/src/core/lv_obj_tree.c ****     while(indev) {
 374:lvgl/src/core/lv_obj_tree.c ****         if(indev->proc.types.pointer.act_obj == obj || indev->proc.types.pointer.last_obj == obj) {
 375:lvgl/src/core/lv_obj_tree.c ****             lv_indev_reset(indev, obj);
 376:lvgl/src/core/lv_obj_tree.c ****         }
 377:lvgl/src/core/lv_obj_tree.c ****         if(indev->proc.types.pointer.last_pressed == obj) {
 378:lvgl/src/core/lv_obj_tree.c ****             indev->proc.types.pointer.last_pressed = NULL;
 379:lvgl/src/core/lv_obj_tree.c ****         }
 380:lvgl/src/core/lv_obj_tree.c **** 
 381:lvgl/src/core/lv_obj_tree.c ****         if(indev->group == group && obj == lv_indev_get_obj_act()) {
 382:lvgl/src/core/lv_obj_tree.c ****             lv_indev_reset(indev, obj);
 383:lvgl/src/core/lv_obj_tree.c ****         }
 384:lvgl/src/core/lv_obj_tree.c ****         indev = lv_indev_get_next(indev);
 385:lvgl/src/core/lv_obj_tree.c ****     }
 386:lvgl/src/core/lv_obj_tree.c **** 
 387:lvgl/src/core/lv_obj_tree.c ****     /*All children deleted. Now clean up the object specific data*/
 388:lvgl/src/core/lv_obj_tree.c ****     _lv_obj_destruct(obj);
 389:lvgl/src/core/lv_obj_tree.c **** 
 390:lvgl/src/core/lv_obj_tree.c ****     /*Remove the screen for the screen list*/
 391:lvgl/src/core/lv_obj_tree.c ****     if(obj->parent == NULL) {
 392:lvgl/src/core/lv_obj_tree.c ****         lv_disp_t * disp = lv_obj_get_disp(obj);
 393:lvgl/src/core/lv_obj_tree.c ****         uint32_t i;
 394:lvgl/src/core/lv_obj_tree.c ****         /*Find the screen in the list*/
 395:lvgl/src/core/lv_obj_tree.c ****         for(i = 0; i < disp->screen_cnt; i++) {
 396:lvgl/src/core/lv_obj_tree.c ****             if(disp->screens[i] == obj) break;
 397:lvgl/src/core/lv_obj_tree.c ****         }
 398:lvgl/src/core/lv_obj_tree.c **** 
 399:lvgl/src/core/lv_obj_tree.c ****         uint32_t id = i;
 400:lvgl/src/core/lv_obj_tree.c ****         for(i = id; i < disp->screen_cnt - 1; i++) {
 401:lvgl/src/core/lv_obj_tree.c ****             disp->screens[i] = disp->screens[i + 1];
 402:lvgl/src/core/lv_obj_tree.c ****         }
 403:lvgl/src/core/lv_obj_tree.c ****         disp->screen_cnt--;
 404:lvgl/src/core/lv_obj_tree.c ****         disp->screens = lv_mem_realloc(disp->screens, disp->screen_cnt * sizeof(lv_obj_t *));
 405:lvgl/src/core/lv_obj_tree.c ****     }
 406:lvgl/src/core/lv_obj_tree.c ****     /*Remove the object from the child list of its parent*/
 407:lvgl/src/core/lv_obj_tree.c ****     else {
 408:lvgl/src/core/lv_obj_tree.c ****         uint32_t id = lv_obj_get_index(obj);
 409:lvgl/src/core/lv_obj_tree.c ****         uint32_t i;
 410:lvgl/src/core/lv_obj_tree.c ****         for(i = id; i < obj->parent->spec_attr->child_cnt - 1; i++) {
 411:lvgl/src/core/lv_obj_tree.c ****             obj->parent->spec_attr->children[i] = obj->parent->spec_attr->children[i + 1];
 412:lvgl/src/core/lv_obj_tree.c ****         }
 413:lvgl/src/core/lv_obj_tree.c ****         obj->parent->spec_attr->child_cnt--;
 414:lvgl/src/core/lv_obj_tree.c ****         obj->parent->spec_attr->children = lv_mem_realloc(obj->parent->spec_attr->children,
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 21


 415:lvgl/src/core/lv_obj_tree.c ****                                                           obj->parent->spec_attr->child_cnt * sizeo
 416:lvgl/src/core/lv_obj_tree.c ****     }
 417:lvgl/src/core/lv_obj_tree.c **** 
 418:lvgl/src/core/lv_obj_tree.c ****     /*Free the object itself*/
 419:lvgl/src/core/lv_obj_tree.c ****     lv_mem_free(obj);
 420:lvgl/src/core/lv_obj_tree.c **** }
 421:lvgl/src/core/lv_obj_tree.c **** 
 422:lvgl/src/core/lv_obj_tree.c **** 
 423:lvgl/src/core/lv_obj_tree.c **** static lv_obj_tree_walk_res_t walk_core(lv_obj_t * obj, lv_obj_tree_walk_cb_t cb, void * user_data)
 424:lvgl/src/core/lv_obj_tree.c **** {
 469              		.loc 1 424 1 is_stmt 1 view -0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 0
 472              		@ frame_needed = 0, uses_anonymous_args = 0
 473              		.loc 1 424 1 is_stmt 0 view .LVU132
 474 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 475              	.LCFI6:
 476              		.cfi_def_cfa_offset 24
 477              		.cfi_offset 3, -24
 478              		.cfi_offset 4, -20
 479              		.cfi_offset 5, -16
 480              		.cfi_offset 6, -12
 481              		.cfi_offset 7, -8
 482              		.cfi_offset 14, -4
 483 0002 0D46     		mov	r5, r1
 484 0004 1646     		mov	r6, r2
 425:lvgl/src/core/lv_obj_tree.c ****     lv_obj_tree_walk_res_t res = LV_OBJ_TREE_WALK_NEXT;
 485              		.loc 1 425 5 is_stmt 1 view .LVU133
 486              	.LVL43:
 426:lvgl/src/core/lv_obj_tree.c **** 
 427:lvgl/src/core/lv_obj_tree.c ****     if(obj == NULL) {
 487              		.loc 1 427 5 view .LVU134
 488              		.loc 1 427 7 is_stmt 0 view .LVU135
 489 0006 40B1     		cbz	r0, .L48
 490 0008 0746     		mov	r7, r0
 428:lvgl/src/core/lv_obj_tree.c ****         lv_disp_t * disp = lv_disp_get_next(NULL);
 429:lvgl/src/core/lv_obj_tree.c ****         while(disp) {
 430:lvgl/src/core/lv_obj_tree.c ****             uint32_t i;
 431:lvgl/src/core/lv_obj_tree.c ****             for(i = 0; i < disp->screen_cnt; i++) {
 432:lvgl/src/core/lv_obj_tree.c ****                 walk_core(disp->screens[i], cb, user_data);
 433:lvgl/src/core/lv_obj_tree.c ****             }
 434:lvgl/src/core/lv_obj_tree.c ****             disp = lv_disp_get_next(disp);
 435:lvgl/src/core/lv_obj_tree.c ****         }
 436:lvgl/src/core/lv_obj_tree.c ****         return LV_OBJ_TREE_WALK_END;    /*The value doesn't matter as it wasn't called recursively*
 437:lvgl/src/core/lv_obj_tree.c ****     }
 438:lvgl/src/core/lv_obj_tree.c **** 
 439:lvgl/src/core/lv_obj_tree.c ****     res = cb(obj, user_data);
 491              		.loc 1 439 5 is_stmt 1 view .LVU136
 492              		.loc 1 439 11 is_stmt 0 view .LVU137
 493 000a 1146     		mov	r1, r2
 494              	.LVL44:
 495              		.loc 1 439 11 view .LVU138
 496 000c A847     		blx	r5
 497              	.LVL45:
 440:lvgl/src/core/lv_obj_tree.c **** 
 441:lvgl/src/core/lv_obj_tree.c ****     if(res == LV_OBJ_TREE_WALK_END) return LV_OBJ_TREE_WALK_END;
 498              		.loc 1 441 5 is_stmt 1 view .LVU139
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 22


 499              		.loc 1 441 7 is_stmt 0 view .LVU140
 500 000e 0228     		cmp	r0, #2
 501 0010 2FD0     		beq	.L42
 442:lvgl/src/core/lv_obj_tree.c **** 
 443:lvgl/src/core/lv_obj_tree.c ****     if(res != LV_OBJ_TREE_WALK_SKIP_CHILDREN) {
 502              		.loc 1 443 5 is_stmt 1 view .LVU141
 503              		.loc 1 443 7 is_stmt 0 view .LVU142
 504 0012 0128     		cmp	r0, #1
 505 0014 19D0     		beq	.L49
 506              	.LBB23:
 444:lvgl/src/core/lv_obj_tree.c ****         uint32_t i;
 445:lvgl/src/core/lv_obj_tree.c ****         for(i = 0; i < lv_obj_get_child_cnt(obj); i++) {
 507              		.loc 1 445 15 view .LVU143
 508 0016 0024     		movs	r4, #0
 509 0018 1AE0     		b	.L43
 510              	.LVL46:
 511              	.L48:
 512              		.loc 1 445 15 view .LVU144
 513              	.LBE23:
 514              	.LBB24:
 428:lvgl/src/core/lv_obj_tree.c ****         while(disp) {
 515              		.loc 1 428 9 is_stmt 1 view .LVU145
 428:lvgl/src/core/lv_obj_tree.c ****         while(disp) {
 516              		.loc 1 428 28 is_stmt 0 view .LVU146
 517 001a FFF7FEFF 		bl	lv_disp_get_next
 518              	.LVL47:
 428:lvgl/src/core/lv_obj_tree.c ****         while(disp) {
 519              		.loc 1 428 28 view .LVU147
 520 001e 0746     		mov	r7, r0
 521              	.LVL48:
 429:lvgl/src/core/lv_obj_tree.c ****             uint32_t i;
 522              		.loc 1 429 9 is_stmt 1 view .LVU148
 429:lvgl/src/core/lv_obj_tree.c ****             uint32_t i;
 523              		.loc 1 429 14 is_stmt 0 view .LVU149
 524 0020 0EE0     		b	.L39
 525              	.LVL49:
 526              	.L40:
 527              	.LBB25:
 432:lvgl/src/core/lv_obj_tree.c ****             }
 528              		.loc 1 432 17 is_stmt 1 view .LVU150
 432:lvgl/src/core/lv_obj_tree.c ****             }
 529              		.loc 1 432 31 is_stmt 0 view .LVU151
 530 0022 FB68     		ldr	r3, [r7, #12]
 432:lvgl/src/core/lv_obj_tree.c ****             }
 531              		.loc 1 432 17 view .LVU152
 532 0024 3246     		mov	r2, r6
 533 0026 2946     		mov	r1, r5
 534 0028 53F82400 		ldr	r0, [r3, r4, lsl #2]
 535 002c FFF7E8FF 		bl	walk_core
 536              	.LVL50:
 431:lvgl/src/core/lv_obj_tree.c ****                 walk_core(disp->screens[i], cb, user_data);
 537              		.loc 1 431 47 is_stmt 1 discriminator 3 view .LVU153
 538 0030 0134     		adds	r4, r4, #1
 539              	.LVL51:
 540              	.L41:
 431:lvgl/src/core/lv_obj_tree.c ****                 walk_core(disp->screens[i], cb, user_data);
 541              		.loc 1 431 26 discriminator 1 view .LVU154
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 23


 431:lvgl/src/core/lv_obj_tree.c ****                 walk_core(disp->screens[i], cb, user_data);
 542              		.loc 1 431 32 is_stmt 0 discriminator 1 view .LVU155
 543 0032 7B6A     		ldr	r3, [r7, #36]
 431:lvgl/src/core/lv_obj_tree.c ****                 walk_core(disp->screens[i], cb, user_data);
 544              		.loc 1 431 26 discriminator 1 view .LVU156
 545 0034 A342     		cmp	r3, r4
 546 0036 F4D8     		bhi	.L40
 434:lvgl/src/core/lv_obj_tree.c ****         }
 547              		.loc 1 434 13 is_stmt 1 view .LVU157
 434:lvgl/src/core/lv_obj_tree.c ****         }
 548              		.loc 1 434 20 is_stmt 0 view .LVU158
 549 0038 3846     		mov	r0, r7
 550 003a FFF7FEFF 		bl	lv_disp_get_next
 551              	.LVL52:
 552 003e 0746     		mov	r7, r0
 553              	.LVL53:
 554              	.L39:
 434:lvgl/src/core/lv_obj_tree.c ****         }
 555              		.loc 1 434 20 view .LVU159
 556              	.LBE25:
 429:lvgl/src/core/lv_obj_tree.c ****             uint32_t i;
 557              		.loc 1 429 15 is_stmt 1 view .LVU160
 558 0040 0FB1     		cbz	r7, .L50
 559              	.LBB26:
 431:lvgl/src/core/lv_obj_tree.c ****                 walk_core(disp->screens[i], cb, user_data);
 560              		.loc 1 431 19 is_stmt 0 view .LVU161
 561 0042 0024     		movs	r4, #0
 562 0044 F5E7     		b	.L41
 563              	.L50:
 564              	.LBE26:
 436:lvgl/src/core/lv_obj_tree.c ****     }
 565              		.loc 1 436 16 view .LVU162
 566 0046 0220     		movs	r0, #2
 567              	.LVL54:
 436:lvgl/src/core/lv_obj_tree.c ****     }
 568              		.loc 1 436 16 view .LVU163
 569 0048 13E0     		b	.L42
 570              	.LVL55:
 571              	.L49:
 436:lvgl/src/core/lv_obj_tree.c ****     }
 572              		.loc 1 436 16 view .LVU164
 573              	.LBE24:
 446:lvgl/src/core/lv_obj_tree.c ****             res = walk_core(lv_obj_get_child(obj, i), cb, user_data);
 447:lvgl/src/core/lv_obj_tree.c ****             if(res == LV_OBJ_TREE_WALK_END) return LV_OBJ_TREE_WALK_END;
 448:lvgl/src/core/lv_obj_tree.c ****         }
 449:lvgl/src/core/lv_obj_tree.c ****     }
 450:lvgl/src/core/lv_obj_tree.c ****     return LV_OBJ_TREE_WALK_NEXT;
 574              		.loc 1 450 12 view .LVU165
 575 004a 0020     		movs	r0, #0
 576              	.LVL56:
 577              		.loc 1 450 12 view .LVU166
 578 004c 11E0     		b	.L42
 579              	.LVL57:
 580              	.L52:
 581              	.LBB27:
 445:lvgl/src/core/lv_obj_tree.c ****             res = walk_core(lv_obj_get_child(obj, i), cb, user_data);
 582              		.loc 1 445 52 is_stmt 1 discriminator 2 view .LVU167
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 24


 583 004e 0134     		adds	r4, r4, #1
 584              	.LVL58:
 585              	.L43:
 445:lvgl/src/core/lv_obj_tree.c ****             res = walk_core(lv_obj_get_child(obj, i), cb, user_data);
 586              		.loc 1 445 22 discriminator 1 view .LVU168
 445:lvgl/src/core/lv_obj_tree.c ****             res = walk_core(lv_obj_get_child(obj, i), cb, user_data);
 587              		.loc 1 445 24 is_stmt 0 discriminator 1 view .LVU169
 588 0050 3846     		mov	r0, r7
 589              	.LVL59:
 445:lvgl/src/core/lv_obj_tree.c ****             res = walk_core(lv_obj_get_child(obj, i), cb, user_data);
 590              		.loc 1 445 24 discriminator 1 view .LVU170
 591 0052 FFF7FEFF 		bl	lv_obj_get_child_cnt
 592              	.LVL60:
 445:lvgl/src/core/lv_obj_tree.c ****             res = walk_core(lv_obj_get_child(obj, i), cb, user_data);
 593              		.loc 1 445 22 discriminator 1 view .LVU171
 594 0056 A042     		cmp	r0, r4
 595 0058 0AD9     		bls	.L51
 446:lvgl/src/core/lv_obj_tree.c ****             res = walk_core(lv_obj_get_child(obj, i), cb, user_data);
 596              		.loc 1 446 13 is_stmt 1 view .LVU172
 446:lvgl/src/core/lv_obj_tree.c ****             res = walk_core(lv_obj_get_child(obj, i), cb, user_data);
 597              		.loc 1 446 29 is_stmt 0 view .LVU173
 598 005a 2146     		mov	r1, r4
 599 005c 3846     		mov	r0, r7
 600 005e FFF7FEFF 		bl	lv_obj_get_child
 601              	.LVL61:
 446:lvgl/src/core/lv_obj_tree.c ****             res = walk_core(lv_obj_get_child(obj, i), cb, user_data);
 602              		.loc 1 446 19 discriminator 1 view .LVU174
 603 0062 3246     		mov	r2, r6
 604 0064 2946     		mov	r1, r5
 605 0066 FFF7CBFF 		bl	walk_core
 606              	.LVL62:
 447:lvgl/src/core/lv_obj_tree.c ****         }
 607              		.loc 1 447 13 is_stmt 1 view .LVU175
 447:lvgl/src/core/lv_obj_tree.c ****         }
 608              		.loc 1 447 15 is_stmt 0 view .LVU176
 609 006a 0228     		cmp	r0, #2
 610 006c EFD1     		bne	.L52
 611 006e 00E0     		b	.L42
 612              	.LVL63:
 613              	.L51:
 447:lvgl/src/core/lv_obj_tree.c ****         }
 614              		.loc 1 447 15 view .LVU177
 615              	.LBE27:
 616              		.loc 1 450 12 view .LVU178
 617 0070 0020     		movs	r0, #0
 618              	.LVL64:
 619              	.L42:
 451:lvgl/src/core/lv_obj_tree.c **** }
 620              		.loc 1 451 1 view .LVU179
 621 0072 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 622              		.loc 1 451 1 view .LVU180
 623              		.cfi_endproc
 624              	.LFE173:
 626              		.section	.text.lv_obj_get_index,"ax",%progbits
 627              		.align	1
 628              		.global	lv_obj_get_index
 629              		.syntax unified
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 25


 630              		.thumb
 631              		.thumb_func
 633              	lv_obj_get_index:
 634              	.LVL65:
 635              	.LFB169:
 326:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 636              		.loc 1 326 1 is_stmt 1 view -0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 0
 639              		@ frame_needed = 0, uses_anonymous_args = 0
 326:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 640              		.loc 1 326 1 is_stmt 0 view .LVU182
 641 0000 70B5     		push	{r4, r5, r6, lr}
 642              	.LCFI7:
 643              		.cfi_def_cfa_offset 16
 644              		.cfi_offset 4, -16
 645              		.cfi_offset 5, -12
 646              		.cfi_offset 6, -8
 647              		.cfi_offset 14, -4
 648 0002 0646     		mov	r6, r0
 327:lvgl/src/core/lv_obj_tree.c **** 
 649              		.loc 1 327 5 is_stmt 1 view .LVU183
 327:lvgl/src/core/lv_obj_tree.c **** 
 650              		.loc 1 327 5 view .LVU184
 327:lvgl/src/core/lv_obj_tree.c **** 
 651              		.loc 1 327 5 view .LVU185
 329:lvgl/src/core/lv_obj_tree.c ****     if(parent == NULL) return 0;
 652              		.loc 1 329 5 view .LVU186
 329:lvgl/src/core/lv_obj_tree.c ****     if(parent == NULL) return 0;
 653              		.loc 1 329 25 is_stmt 0 view .LVU187
 654 0004 FFF7FEFF 		bl	lv_obj_get_parent
 655              	.LVL66:
 330:lvgl/src/core/lv_obj_tree.c **** 
 656              		.loc 1 330 5 is_stmt 1 view .LVU188
 330:lvgl/src/core/lv_obj_tree.c **** 
 657              		.loc 1 330 7 is_stmt 0 view .LVU189
 658 0008 90B1     		cbz	r0, .L57
 659 000a 0546     		mov	r5, r0
 333:lvgl/src/core/lv_obj_tree.c ****         if(lv_obj_get_child(parent, i) == obj) return i;
 660              		.loc 1 333 11 view .LVU190
 661 000c 0024     		movs	r4, #0
 662              	.LVL67:
 663              	.L55:
 333:lvgl/src/core/lv_obj_tree.c ****         if(lv_obj_get_child(parent, i) == obj) return i;
 664              		.loc 1 333 18 is_stmt 1 discriminator 1 view .LVU191
 333:lvgl/src/core/lv_obj_tree.c ****         if(lv_obj_get_child(parent, i) == obj) return i;
 665              		.loc 1 333 20 is_stmt 0 discriminator 1 view .LVU192
 666 000e 2846     		mov	r0, r5
 667 0010 FFF7FEFF 		bl	lv_obj_get_child_cnt
 668              	.LVL68:
 333:lvgl/src/core/lv_obj_tree.c ****         if(lv_obj_get_child(parent, i) == obj) return i;
 669              		.loc 1 333 18 discriminator 1 view .LVU193
 670 0014 A042     		cmp	r0, r4
 671 0016 07D9     		bls	.L59
 334:lvgl/src/core/lv_obj_tree.c ****     }
 672              		.loc 1 334 9 is_stmt 1 view .LVU194
 334:lvgl/src/core/lv_obj_tree.c ****     }
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 26


 673              		.loc 1 334 12 is_stmt 0 view .LVU195
 674 0018 2146     		mov	r1, r4
 675 001a 2846     		mov	r0, r5
 676 001c FFF7FEFF 		bl	lv_obj_get_child
 677              	.LVL69:
 334:lvgl/src/core/lv_obj_tree.c ****     }
 678              		.loc 1 334 11 discriminator 1 view .LVU196
 679 0020 8642     		cmp	r6, r0
 680 0022 03D0     		beq	.L53
 333:lvgl/src/core/lv_obj_tree.c ****         if(lv_obj_get_child(parent, i) == obj) return i;
 681              		.loc 1 333 51 is_stmt 1 discriminator 2 view .LVU197
 682 0024 0134     		adds	r4, r4, #1
 683              	.LVL70:
 333:lvgl/src/core/lv_obj_tree.c ****         if(lv_obj_get_child(parent, i) == obj) return i;
 684              		.loc 1 333 51 is_stmt 0 discriminator 2 view .LVU198
 685 0026 F2E7     		b	.L55
 686              	.L59:
 337:lvgl/src/core/lv_obj_tree.c **** }
 687              		.loc 1 337 12 view .LVU199
 688 0028 4FF0FF34 		mov	r4, #-1
 689              	.LVL71:
 690              	.L53:
 338:lvgl/src/core/lv_obj_tree.c **** 
 691              		.loc 1 338 1 view .LVU200
 692 002c 2046     		mov	r0, r4
 693 002e 70BD     		pop	{r4, r5, r6, pc}
 694              	.LVL72:
 695              	.L57:
 330:lvgl/src/core/lv_obj_tree.c **** 
 696              		.loc 1 330 31 discriminator 1 view .LVU201
 697 0030 0024     		movs	r4, #0
 698 0032 FBE7     		b	.L53
 699              		.cfi_endproc
 700              	.LFE169:
 702              		.section	.text.obj_del_core,"ax",%progbits
 703              		.align	1
 704              		.syntax unified
 705              		.thumb
 706              		.thumb_func
 708              	obj_del_core:
 709              	.LVL73:
 710              	.LFB172:
 357:lvgl/src/core/lv_obj_tree.c ****     /*Let the user free the resources used in `LV_EVENT_DELETE`*/
 711              		.loc 1 357 1 is_stmt 1 view -0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 0
 714              		@ frame_needed = 0, uses_anonymous_args = 0
 357:lvgl/src/core/lv_obj_tree.c ****     /*Let the user free the resources used in `LV_EVENT_DELETE`*/
 715              		.loc 1 357 1 is_stmt 0 view .LVU203
 716 0000 70B5     		push	{r4, r5, r6, lr}
 717              	.LCFI8:
 718              		.cfi_def_cfa_offset 16
 719              		.cfi_offset 4, -16
 720              		.cfi_offset 5, -12
 721              		.cfi_offset 6, -8
 722              		.cfi_offset 14, -4
 723 0002 0546     		mov	r5, r0
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 27


 359:lvgl/src/core/lv_obj_tree.c ****     if(res == LV_RES_INV) return;
 724              		.loc 1 359 5 is_stmt 1 view .LVU204
 359:lvgl/src/core/lv_obj_tree.c ****     if(res == LV_RES_INV) return;
 725              		.loc 1 359 20 is_stmt 0 view .LVU205
 726 0004 0022     		movs	r2, #0
 727 0006 2121     		movs	r1, #33
 728 0008 FFF7FEFF 		bl	lv_event_send
 729              	.LVL74:
 360:lvgl/src/core/lv_obj_tree.c **** 
 730              		.loc 1 360 5 is_stmt 1 view .LVU206
 360:lvgl/src/core/lv_obj_tree.c **** 
 731              		.loc 1 360 7 is_stmt 0 view .LVU207
 732 000c 0028     		cmp	r0, #0
 733 000e 79D0     		beq	.L60
 363:lvgl/src/core/lv_obj_tree.c ****     while(child) {
 734              		.loc 1 363 5 is_stmt 1 view .LVU208
 363:lvgl/src/core/lv_obj_tree.c ****     while(child) {
 735              		.loc 1 363 24 is_stmt 0 view .LVU209
 736 0010 0021     		movs	r1, #0
 737 0012 2846     		mov	r0, r5
 738              	.LVL75:
 363:lvgl/src/core/lv_obj_tree.c ****     while(child) {
 739              		.loc 1 363 24 view .LVU210
 740 0014 FFF7FEFF 		bl	lv_obj_get_child
 741              	.LVL76:
 364:lvgl/src/core/lv_obj_tree.c ****         obj_del_core(child);
 742              		.loc 1 364 5 is_stmt 1 view .LVU211
 743              	.L62:
 364:lvgl/src/core/lv_obj_tree.c ****         obj_del_core(child);
 744              		.loc 1 364 11 view .LVU212
 745 0018 30B1     		cbz	r0, .L80
 365:lvgl/src/core/lv_obj_tree.c ****         child = lv_obj_get_child(obj, 0);
 746              		.loc 1 365 9 view .LVU213
 747 001a FFF7F1FF 		bl	obj_del_core
 748              	.LVL77:
 366:lvgl/src/core/lv_obj_tree.c ****     }
 749              		.loc 1 366 9 view .LVU214
 366:lvgl/src/core/lv_obj_tree.c ****     }
 750              		.loc 1 366 17 is_stmt 0 view .LVU215
 751 001e 0021     		movs	r1, #0
 752 0020 2846     		mov	r0, r5
 753 0022 FFF7FEFF 		bl	lv_obj_get_child
 754              	.LVL78:
 366:lvgl/src/core/lv_obj_tree.c ****     }
 755              		.loc 1 366 17 view .LVU216
 756 0026 F7E7     		b	.L62
 757              	.L80:
 369:lvgl/src/core/lv_obj_tree.c **** 
 758              		.loc 1 369 5 is_stmt 1 view .LVU217
 369:lvgl/src/core/lv_obj_tree.c **** 
 759              		.loc 1 369 26 is_stmt 0 view .LVU218
 760 0028 2846     		mov	r0, r5
 761              	.LVL79:
 369:lvgl/src/core/lv_obj_tree.c **** 
 762              		.loc 1 369 26 view .LVU219
 763 002a FFF7FEFF 		bl	lv_obj_get_group
 764              	.LVL80:
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 28


 765 002e 0646     		mov	r6, r0
 766              	.LVL81:
 372:lvgl/src/core/lv_obj_tree.c ****     while(indev) {
 767              		.loc 1 372 5 is_stmt 1 view .LVU220
 372:lvgl/src/core/lv_obj_tree.c ****     while(indev) {
 768              		.loc 1 372 26 is_stmt 0 view .LVU221
 769 0030 0020     		movs	r0, #0
 770              	.LVL82:
 372:lvgl/src/core/lv_obj_tree.c ****     while(indev) {
 771              		.loc 1 372 26 view .LVU222
 772 0032 FFF7FEFF 		bl	lv_indev_get_next
 773              	.LVL83:
 774 0036 0446     		mov	r4, r0
 775              	.LVL84:
 373:lvgl/src/core/lv_obj_tree.c ****         if(indev->proc.types.pointer.act_obj == obj || indev->proc.types.pointer.last_obj == obj) {
 776              		.loc 1 373 5 is_stmt 1 view .LVU223
 373:lvgl/src/core/lv_obj_tree.c ****         if(indev->proc.types.pointer.act_obj == obj || indev->proc.types.pointer.last_obj == obj) {
 777              		.loc 1 373 10 is_stmt 0 view .LVU224
 778 0038 0DE0     		b	.L64
 779              	.L65:
 375:lvgl/src/core/lv_obj_tree.c ****         }
 780              		.loc 1 375 13 is_stmt 1 view .LVU225
 781 003a 2946     		mov	r1, r5
 782 003c 2046     		mov	r0, r4
 783              	.LVL85:
 375:lvgl/src/core/lv_obj_tree.c ****         }
 784              		.loc 1 375 13 is_stmt 0 view .LVU226
 785 003e FFF7FEFF 		bl	lv_indev_reset
 786              	.LVL86:
 787              	.L66:
 377:lvgl/src/core/lv_obj_tree.c ****             indev->proc.types.pointer.last_pressed = NULL;
 788              		.loc 1 377 9 is_stmt 1 view .LVU227
 377:lvgl/src/core/lv_obj_tree.c ****             indev->proc.types.pointer.last_pressed = NULL;
 789              		.loc 1 377 37 is_stmt 0 view .LVU228
 790 0042 236B     		ldr	r3, [r4, #48]
 377:lvgl/src/core/lv_obj_tree.c ****             indev->proc.types.pointer.last_pressed = NULL;
 791              		.loc 1 377 11 view .LVU229
 792 0044 AB42     		cmp	r3, r5
 793 0046 0ED0     		beq	.L81
 794              	.L67:
 381:lvgl/src/core/lv_obj_tree.c ****             lv_indev_reset(indev, obj);
 795              		.loc 1 381 9 is_stmt 1 view .LVU230
 381:lvgl/src/core/lv_obj_tree.c ****             lv_indev_reset(indev, obj);
 796              		.loc 1 381 17 is_stmt 0 view .LVU231
 797 0048 236D     		ldr	r3, [r4, #80]
 381:lvgl/src/core/lv_obj_tree.c ****             lv_indev_reset(indev, obj);
 798              		.loc 1 381 11 view .LVU232
 799 004a B342     		cmp	r3, r6
 800 004c 0ED0     		beq	.L82
 801              	.L68:
 384:lvgl/src/core/lv_obj_tree.c ****     }
 802              		.loc 1 384 9 is_stmt 1 view .LVU233
 384:lvgl/src/core/lv_obj_tree.c ****     }
 803              		.loc 1 384 17 is_stmt 0 view .LVU234
 804 004e 2046     		mov	r0, r4
 805 0050 FFF7FEFF 		bl	lv_indev_get_next
 806              	.LVL87:
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 29


 807 0054 0446     		mov	r4, r0
 808              	.LVL88:
 809              	.L64:
 373:lvgl/src/core/lv_obj_tree.c ****         if(indev->proc.types.pointer.act_obj == obj || indev->proc.types.pointer.last_obj == obj) {
 810              		.loc 1 373 11 is_stmt 1 view .LVU235
 811 0056 94B1     		cbz	r4, .L83
 374:lvgl/src/core/lv_obj_tree.c ****             lv_indev_reset(indev, obj);
 812              		.loc 1 374 9 view .LVU236
 374:lvgl/src/core/lv_obj_tree.c ****             lv_indev_reset(indev, obj);
 813              		.loc 1 374 37 is_stmt 0 view .LVU237
 814 0058 636A     		ldr	r3, [r4, #36]
 374:lvgl/src/core/lv_obj_tree.c ****             lv_indev_reset(indev, obj);
 815              		.loc 1 374 11 view .LVU238
 816 005a AB42     		cmp	r3, r5
 817 005c EDD0     		beq	.L65
 374:lvgl/src/core/lv_obj_tree.c ****             lv_indev_reset(indev, obj);
 818              		.loc 1 374 81 discriminator 1 view .LVU239
 819 005e A36A     		ldr	r3, [r4, #40]
 374:lvgl/src/core/lv_obj_tree.c ****             lv_indev_reset(indev, obj);
 820              		.loc 1 374 53 discriminator 1 view .LVU240
 821 0060 AB42     		cmp	r3, r5
 822 0062 EED1     		bne	.L66
 823 0064 E9E7     		b	.L65
 824              	.LVL89:
 825              	.L81:
 378:lvgl/src/core/lv_obj_tree.c ****         }
 826              		.loc 1 378 13 is_stmt 1 view .LVU241
 378:lvgl/src/core/lv_obj_tree.c ****         }
 827              		.loc 1 378 52 is_stmt 0 view .LVU242
 828 0066 0023     		movs	r3, #0
 829 0068 2363     		str	r3, [r4, #48]
 830 006a EDE7     		b	.L67
 831              	.L82:
 381:lvgl/src/core/lv_obj_tree.c ****             lv_indev_reset(indev, obj);
 832              		.loc 1 381 44 discriminator 1 view .LVU243
 833 006c FFF7FEFF 		bl	lv_indev_get_obj_act
 834              	.LVL90:
 381:lvgl/src/core/lv_obj_tree.c ****             lv_indev_reset(indev, obj);
 835              		.loc 1 381 34 discriminator 1 view .LVU244
 836 0070 8542     		cmp	r5, r0
 837 0072 ECD1     		bne	.L68
 382:lvgl/src/core/lv_obj_tree.c ****         }
 838              		.loc 1 382 13 is_stmt 1 view .LVU245
 839 0074 2946     		mov	r1, r5
 840 0076 2046     		mov	r0, r4
 841 0078 FFF7FEFF 		bl	lv_indev_reset
 842              	.LVL91:
 843 007c E7E7     		b	.L68
 844              	.LVL92:
 845              	.L83:
 388:lvgl/src/core/lv_obj_tree.c **** 
 846              		.loc 1 388 5 view .LVU246
 847 007e 2846     		mov	r0, r5
 848              	.LVL93:
 388:lvgl/src/core/lv_obj_tree.c **** 
 849              		.loc 1 388 5 is_stmt 0 view .LVU247
 850 0080 FFF7FEFF 		bl	_lv_obj_destruct
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 30


 851              	.LVL94:
 391:lvgl/src/core/lv_obj_tree.c ****         lv_disp_t * disp = lv_obj_get_disp(obj);
 852              		.loc 1 391 5 is_stmt 1 view .LVU248
 391:lvgl/src/core/lv_obj_tree.c ****         lv_disp_t * disp = lv_obj_get_disp(obj);
 853              		.loc 1 391 11 is_stmt 0 view .LVU249
 854 0084 6B68     		ldr	r3, [r5, #4]
 391:lvgl/src/core/lv_obj_tree.c ****         lv_disp_t * disp = lv_obj_get_disp(obj);
 855              		.loc 1 391 7 view .LVU250
 856 0086 83B1     		cbz	r3, .L84
 857              	.LBB28:
 408:lvgl/src/core/lv_obj_tree.c ****         uint32_t i;
 858              		.loc 1 408 9 is_stmt 1 view .LVU251
 408:lvgl/src/core/lv_obj_tree.c ****         uint32_t i;
 859              		.loc 1 408 23 is_stmt 0 view .LVU252
 860 0088 2846     		mov	r0, r5
 861 008a FFF7FEFF 		bl	lv_obj_get_index
 862              	.LVL95:
 409:lvgl/src/core/lv_obj_tree.c ****         for(i = id; i < obj->parent->spec_attr->child_cnt - 1; i++) {
 863              		.loc 1 409 9 is_stmt 1 view .LVU253
 410:lvgl/src/core/lv_obj_tree.c ****             obj->parent->spec_attr->children[i] = obj->parent->spec_attr->children[i + 1];
 864              		.loc 1 410 9 view .LVU254
 865              	.L77:
 410:lvgl/src/core/lv_obj_tree.c ****             obj->parent->spec_attr->children[i] = obj->parent->spec_attr->children[i + 1];
 866              		.loc 1 410 23 discriminator 1 view .LVU255
 410:lvgl/src/core/lv_obj_tree.c ****             obj->parent->spec_attr->children[i] = obj->parent->spec_attr->children[i + 1];
 867              		.loc 1 410 28 is_stmt 0 discriminator 1 view .LVU256
 868 008e 6B68     		ldr	r3, [r5, #4]
 410:lvgl/src/core/lv_obj_tree.c ****             obj->parent->spec_attr->children[i] = obj->parent->spec_attr->children[i + 1];
 869              		.loc 1 410 36 discriminator 1 view .LVU257
 870 0090 9A68     		ldr	r2, [r3, #8]
 410:lvgl/src/core/lv_obj_tree.c ****             obj->parent->spec_attr->children[i] = obj->parent->spec_attr->children[i + 1];
 871              		.loc 1 410 47 discriminator 1 view .LVU258
 872 0092 5368     		ldr	r3, [r2, #4]
 410:lvgl/src/core/lv_obj_tree.c ****             obj->parent->spec_attr->children[i] = obj->parent->spec_attr->children[i + 1];
 873              		.loc 1 410 59 discriminator 1 view .LVU259
 874 0094 013B     		subs	r3, r3, #1
 410:lvgl/src/core/lv_obj_tree.c ****             obj->parent->spec_attr->children[i] = obj->parent->spec_attr->children[i + 1];
 875              		.loc 1 410 23 discriminator 1 view .LVU260
 876 0096 8342     		cmp	r3, r0
 877 0098 28D9     		bls	.L85
 411:lvgl/src/core/lv_obj_tree.c ****         }
 878              		.loc 1 411 13 is_stmt 1 view .LVU261
 411:lvgl/src/core/lv_obj_tree.c ****         }
 879              		.loc 1 411 73 is_stmt 0 view .LVU262
 880 009a 1268     		ldr	r2, [r2]
 411:lvgl/src/core/lv_obj_tree.c ****         }
 881              		.loc 1 411 83 view .LVU263
 882 009c 431C     		adds	r3, r0, #1
 883 009e 52F82310 		ldr	r1, [r2, r3, lsl #2]
 411:lvgl/src/core/lv_obj_tree.c ****         }
 884              		.loc 1 411 49 view .LVU264
 885 00a2 42F82010 		str	r1, [r2, r0, lsl #2]
 410:lvgl/src/core/lv_obj_tree.c ****             obj->parent->spec_attr->children[i] = obj->parent->spec_attr->children[i + 1];
 886              		.loc 1 410 65 is_stmt 1 discriminator 3 view .LVU265
 887              	.LVL96:
 410:lvgl/src/core/lv_obj_tree.c ****             obj->parent->spec_attr->children[i] = obj->parent->spec_attr->children[i + 1];
 888              		.loc 1 410 65 is_stmt 0 discriminator 3 view .LVU266
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 31


 889 00a6 1846     		mov	r0, r3
 890 00a8 F1E7     		b	.L77
 891              	.LVL97:
 892              	.L84:
 410:lvgl/src/core/lv_obj_tree.c ****             obj->parent->spec_attr->children[i] = obj->parent->spec_attr->children[i + 1];
 893              		.loc 1 410 65 discriminator 3 view .LVU267
 894              	.LBE28:
 895              	.LBB29:
 392:lvgl/src/core/lv_obj_tree.c ****         uint32_t i;
 896              		.loc 1 392 9 is_stmt 1 view .LVU268
 392:lvgl/src/core/lv_obj_tree.c ****         uint32_t i;
 897              		.loc 1 392 28 is_stmt 0 view .LVU269
 898 00aa 2846     		mov	r0, r5
 899 00ac FFF7FEFF 		bl	lv_obj_get_disp
 900              	.LVL98:
 901 00b0 0446     		mov	r4, r0
 902              	.LVL99:
 393:lvgl/src/core/lv_obj_tree.c ****         /*Find the screen in the list*/
 903              		.loc 1 393 9 is_stmt 1 view .LVU270
 395:lvgl/src/core/lv_obj_tree.c ****             if(disp->screens[i] == obj) break;
 904              		.loc 1 395 9 view .LVU271
 395:lvgl/src/core/lv_obj_tree.c ****             if(disp->screens[i] == obj) break;
 905              		.loc 1 395 15 is_stmt 0 view .LVU272
 906 00b2 0023     		movs	r3, #0
 907              	.LVL100:
 908              	.L71:
 395:lvgl/src/core/lv_obj_tree.c ****             if(disp->screens[i] == obj) break;
 909              		.loc 1 395 22 is_stmt 1 discriminator 1 view .LVU273
 395:lvgl/src/core/lv_obj_tree.c ****             if(disp->screens[i] == obj) break;
 910              		.loc 1 395 28 is_stmt 0 discriminator 1 view .LVU274
 911 00b4 626A     		ldr	r2, [r4, #36]
 395:lvgl/src/core/lv_obj_tree.c ****             if(disp->screens[i] == obj) break;
 912              		.loc 1 395 22 discriminator 1 view .LVU275
 913 00b6 9A42     		cmp	r2, r3
 914 00b8 0DD9     		bls	.L74
 396:lvgl/src/core/lv_obj_tree.c ****         }
 915              		.loc 1 396 13 is_stmt 1 view .LVU276
 396:lvgl/src/core/lv_obj_tree.c ****         }
 916              		.loc 1 396 20 is_stmt 0 view .LVU277
 917 00ba E268     		ldr	r2, [r4, #12]
 396:lvgl/src/core/lv_obj_tree.c ****         }
 918              		.loc 1 396 29 view .LVU278
 919 00bc 52F82320 		ldr	r2, [r2, r3, lsl #2]
 396:lvgl/src/core/lv_obj_tree.c ****         }
 920              		.loc 1 396 15 view .LVU279
 921 00c0 AA42     		cmp	r2, r5
 922 00c2 08D0     		beq	.L74
 395:lvgl/src/core/lv_obj_tree.c ****             if(disp->screens[i] == obj) break;
 923              		.loc 1 395 43 is_stmt 1 discriminator 2 view .LVU280
 924 00c4 0133     		adds	r3, r3, #1
 925              	.LVL101:
 395:lvgl/src/core/lv_obj_tree.c ****             if(disp->screens[i] == obj) break;
 926              		.loc 1 395 43 is_stmt 0 discriminator 2 view .LVU281
 927 00c6 F5E7     		b	.L71
 928              	.LVL102:
 929              	.L75:
 401:lvgl/src/core/lv_obj_tree.c ****         }
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 32


 930              		.loc 1 401 13 is_stmt 1 view .LVU282
 401:lvgl/src/core/lv_obj_tree.c ****         }
 931              		.loc 1 401 36 is_stmt 0 view .LVU283
 932 00c8 E168     		ldr	r1, [r4, #12]
 401:lvgl/src/core/lv_obj_tree.c ****         }
 933              		.loc 1 401 45 view .LVU284
 934 00ca 5A1C     		adds	r2, r3, #1
 935 00cc 51F82200 		ldr	r0, [r1, r2, lsl #2]
 401:lvgl/src/core/lv_obj_tree.c ****         }
 936              		.loc 1 401 30 view .LVU285
 937 00d0 41F82300 		str	r0, [r1, r3, lsl #2]
 400:lvgl/src/core/lv_obj_tree.c ****             disp->screens[i] = disp->screens[i + 1];
 938              		.loc 1 400 48 is_stmt 1 discriminator 3 view .LVU286
 939              	.LVL103:
 400:lvgl/src/core/lv_obj_tree.c ****             disp->screens[i] = disp->screens[i + 1];
 940              		.loc 1 400 48 is_stmt 0 discriminator 3 view .LVU287
 941 00d4 1346     		mov	r3, r2
 942              	.LVL104:
 943              	.L74:
 400:lvgl/src/core/lv_obj_tree.c ****             disp->screens[i] = disp->screens[i + 1];
 944              		.loc 1 400 23 is_stmt 1 discriminator 1 view .LVU288
 400:lvgl/src/core/lv_obj_tree.c ****             disp->screens[i] = disp->screens[i + 1];
 945              		.loc 1 400 29 is_stmt 0 discriminator 1 view .LVU289
 946 00d6 616A     		ldr	r1, [r4, #36]
 400:lvgl/src/core/lv_obj_tree.c ****             disp->screens[i] = disp->screens[i + 1];
 947              		.loc 1 400 42 discriminator 1 view .LVU290
 948 00d8 0139     		subs	r1, r1, #1
 400:lvgl/src/core/lv_obj_tree.c ****             disp->screens[i] = disp->screens[i + 1];
 949              		.loc 1 400 23 discriminator 1 view .LVU291
 950 00da 9942     		cmp	r1, r3
 951 00dc F4D8     		bhi	.L75
 403:lvgl/src/core/lv_obj_tree.c ****         disp->screens = lv_mem_realloc(disp->screens, disp->screen_cnt * sizeof(lv_obj_t *));
 952              		.loc 1 403 9 is_stmt 1 view .LVU292
 403:lvgl/src/core/lv_obj_tree.c ****         disp->screens = lv_mem_realloc(disp->screens, disp->screen_cnt * sizeof(lv_obj_t *));
 953              		.loc 1 403 25 is_stmt 0 view .LVU293
 954 00de 6162     		str	r1, [r4, #36]
 404:lvgl/src/core/lv_obj_tree.c ****     }
 955              		.loc 1 404 9 is_stmt 1 view .LVU294
 404:lvgl/src/core/lv_obj_tree.c ****     }
 956              		.loc 1 404 25 is_stmt 0 view .LVU295
 957 00e0 8900     		lsls	r1, r1, #2
 958 00e2 E068     		ldr	r0, [r4, #12]
 959 00e4 FFF7FEFF 		bl	lv_mem_realloc
 960              	.LVL105:
 404:lvgl/src/core/lv_obj_tree.c ****     }
 961              		.loc 1 404 23 discriminator 1 view .LVU296
 962 00e8 E060     		str	r0, [r4, #12]
 963              	.LBE29:
 964 00ea 08E0     		b	.L76
 965              	.LVL106:
 966              	.L85:
 967              	.LBB30:
 413:lvgl/src/core/lv_obj_tree.c ****         obj->parent->spec_attr->children = lv_mem_realloc(obj->parent->spec_attr->children,
 968              		.loc 1 413 9 is_stmt 1 view .LVU297
 413:lvgl/src/core/lv_obj_tree.c ****         obj->parent->spec_attr->children = lv_mem_realloc(obj->parent->spec_attr->children,
 969              		.loc 1 413 42 is_stmt 0 view .LVU298
 970 00ec 5360     		str	r3, [r2, #4]
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 33


 414:lvgl/src/core/lv_obj_tree.c ****                                                           obj->parent->spec_attr->child_cnt * sizeo
 971              		.loc 1 414 9 is_stmt 1 view .LVU299
 414:lvgl/src/core/lv_obj_tree.c ****                                                           obj->parent->spec_attr->child_cnt * sizeo
 972              		.loc 1 414 62 is_stmt 0 view .LVU300
 973 00ee 6B68     		ldr	r3, [r5, #4]
 414:lvgl/src/core/lv_obj_tree.c ****                                                           obj->parent->spec_attr->child_cnt * sizeo
 974              		.loc 1 414 70 view .LVU301
 975 00f0 9C68     		ldr	r4, [r3, #8]
 976              	.LVL107:
 415:lvgl/src/core/lv_obj_tree.c ****     }
 977              		.loc 1 415 81 view .LVU302
 978 00f2 6168     		ldr	r1, [r4, #4]
 414:lvgl/src/core/lv_obj_tree.c ****                                                           obj->parent->spec_attr->child_cnt * sizeo
 979              		.loc 1 414 44 view .LVU303
 980 00f4 8900     		lsls	r1, r1, #2
 981 00f6 2068     		ldr	r0, [r4]
 982              	.LVL108:
 414:lvgl/src/core/lv_obj_tree.c ****                                                           obj->parent->spec_attr->child_cnt * sizeo
 983              		.loc 1 414 44 view .LVU304
 984 00f8 FFF7FEFF 		bl	lv_mem_realloc
 985              	.LVL109:
 414:lvgl/src/core/lv_obj_tree.c ****                                                           obj->parent->spec_attr->child_cnt * sizeo
 986              		.loc 1 414 42 discriminator 1 view .LVU305
 987 00fc 2060     		str	r0, [r4]
 988              	.LVL110:
 989              	.L76:
 414:lvgl/src/core/lv_obj_tree.c ****                                                           obj->parent->spec_attr->child_cnt * sizeo
 990              		.loc 1 414 42 discriminator 1 view .LVU306
 991              	.LBE30:
 419:lvgl/src/core/lv_obj_tree.c **** }
 992              		.loc 1 419 5 is_stmt 1 view .LVU307
 993 00fe 2846     		mov	r0, r5
 994 0100 FFF7FEFF 		bl	lv_mem_free
 995              	.LVL111:
 996              	.L60:
 420:lvgl/src/core/lv_obj_tree.c **** 
 997              		.loc 1 420 1 is_stmt 0 view .LVU308
 998 0104 70BD     		pop	{r4, r5, r6, pc}
 420:lvgl/src/core/lv_obj_tree.c **** 
 999              		.loc 1 420 1 view .LVU309
 1000              		.cfi_endproc
 1001              	.LFE172:
 1003              		.section	.text.lv_obj_del,"ax",%progbits
 1004              		.align	1
 1005              		.global	lv_obj_del
 1006              		.syntax unified
 1007              		.thumb
 1008              		.thumb_func
 1010              	lv_obj_del:
 1011              	.LVL112:
 1012              	.LFB156:
  46:lvgl/src/core/lv_obj_tree.c ****     LV_LOG_TRACE("begin (delete %p)", (void *)obj);
 1013              		.loc 1 46 1 is_stmt 1 view -0
 1014              		.cfi_startproc
 1015              		@ args = 0, pretend = 0, frame = 0
 1016              		@ frame_needed = 0, uses_anonymous_args = 0
  46:lvgl/src/core/lv_obj_tree.c ****     LV_LOG_TRACE("begin (delete %p)", (void *)obj);
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 34


 1017              		.loc 1 46 1 is_stmt 0 view .LVU311
 1018 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1019              	.LCFI9:
 1020              		.cfi_def_cfa_offset 24
 1021              		.cfi_offset 3, -24
 1022              		.cfi_offset 4, -20
 1023              		.cfi_offset 5, -16
 1024              		.cfi_offset 6, -12
 1025              		.cfi_offset 7, -8
 1026              		.cfi_offset 14, -4
 1027 0002 0446     		mov	r4, r0
  47:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 1028              		.loc 1 47 5 is_stmt 1 view .LVU312
  47:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 1029              		.loc 1 47 5 view .LVU313
  47:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 1030              		.loc 1 47 5 view .LVU314
  48:lvgl/src/core/lv_obj_tree.c ****     lv_obj_invalidate(obj);
 1031              		.loc 1 48 5 view .LVU315
  48:lvgl/src/core/lv_obj_tree.c ****     lv_obj_invalidate(obj);
 1032              		.loc 1 48 5 view .LVU316
  48:lvgl/src/core/lv_obj_tree.c ****     lv_obj_invalidate(obj);
 1033              		.loc 1 48 5 view .LVU317
  49:lvgl/src/core/lv_obj_tree.c **** 
 1034              		.loc 1 49 5 view .LVU318
 1035 0004 FFF7FEFF 		bl	lv_obj_invalidate
 1036              	.LVL113:
  51:lvgl/src/core/lv_obj_tree.c ****     if(par) {
 1037              		.loc 1 51 5 view .LVU319
  51:lvgl/src/core/lv_obj_tree.c ****     if(par) {
 1038              		.loc 1 51 22 is_stmt 0 view .LVU320
 1039 0008 2046     		mov	r0, r4
 1040 000a FFF7FEFF 		bl	lv_obj_get_parent
 1041              	.LVL114:
  52:lvgl/src/core/lv_obj_tree.c ****         lv_obj_scrollbar_invalidate(par);
 1042              		.loc 1 52 5 is_stmt 1 view .LVU321
  52:lvgl/src/core/lv_obj_tree.c ****         lv_obj_scrollbar_invalidate(par);
 1043              		.loc 1 52 7 is_stmt 0 view .LVU322
 1044 000e 0546     		mov	r5, r0
 1045 0010 E0B1     		cbz	r0, .L95
  53:lvgl/src/core/lv_obj_tree.c ****     }
 1046              		.loc 1 53 9 is_stmt 1 view .LVU323
 1047 0012 FFF7FEFF 		bl	lv_obj_scrollbar_invalidate
 1048              	.LVL115:
  56:lvgl/src/core/lv_obj_tree.c ****     bool act_scr_del = false;
 1049              		.loc 1 56 5 view .LVU324
  57:lvgl/src/core/lv_obj_tree.c ****     if(par == NULL) {
 1050              		.loc 1 57 5 view .LVU325
  58:lvgl/src/core/lv_obj_tree.c ****         disp = lv_obj_get_disp(obj);
 1051              		.loc 1 58 5 view .LVU326
  57:lvgl/src/core/lv_obj_tree.c ****     if(par == NULL) {
 1052              		.loc 1 57 10 is_stmt 0 view .LVU327
 1053 0016 0026     		movs	r6, #0
  56:lvgl/src/core/lv_obj_tree.c ****     bool act_scr_del = false;
 1054              		.loc 1 56 17 view .LVU328
 1055 0018 3746     		mov	r7, r6
 1056              	.LVL116:
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 35


 1057              	.L90:
  64:lvgl/src/core/lv_obj_tree.c **** 
 1058              		.loc 1 64 5 is_stmt 1 view .LVU329
 1059 001a 2046     		mov	r0, r4
 1060 001c FFF7FEFF 		bl	obj_del_core
 1061              	.LVL117:
  67:lvgl/src/core/lv_obj_tree.c ****         lv_obj_readjust_scroll(par, LV_ANIM_OFF);
 1062              		.loc 1 67 5 view .LVU330
  67:lvgl/src/core/lv_obj_tree.c ****         lv_obj_readjust_scroll(par, LV_ANIM_OFF);
 1063              		.loc 1 67 7 is_stmt 0 view .LVU331
 1064 0020 85B1     		cbz	r5, .L91
  68:lvgl/src/core/lv_obj_tree.c ****         lv_obj_scrollbar_invalidate(par);
 1065              		.loc 1 68 9 is_stmt 1 view .LVU332
 1066 0022 0021     		movs	r1, #0
 1067 0024 2846     		mov	r0, r5
 1068 0026 FFF7FEFF 		bl	lv_obj_readjust_scroll
 1069              	.LVL118:
  69:lvgl/src/core/lv_obj_tree.c ****         lv_event_send(par, LV_EVENT_CHILD_CHANGED, NULL);
 1070              		.loc 1 69 9 view .LVU333
 1071 002a 2846     		mov	r0, r5
 1072 002c FFF7FEFF 		bl	lv_obj_scrollbar_invalidate
 1073              	.LVL119:
  70:lvgl/src/core/lv_obj_tree.c ****         lv_event_send(par, LV_EVENT_CHILD_DELETED, NULL);
 1074              		.loc 1 70 9 view .LVU334
 1075 0030 0022     		movs	r2, #0
 1076 0032 2221     		movs	r1, #34
 1077 0034 2846     		mov	r0, r5
 1078 0036 FFF7FEFF 		bl	lv_event_send
 1079              	.LVL120:
  71:lvgl/src/core/lv_obj_tree.c ****     }
 1080              		.loc 1 71 9 view .LVU335
 1081 003a 0022     		movs	r2, #0
 1082 003c 2421     		movs	r1, #36
 1083 003e 2846     		mov	r0, r5
 1084 0040 FFF7FEFF 		bl	lv_event_send
 1085              	.LVL121:
 1086              	.L91:
  75:lvgl/src/core/lv_obj_tree.c ****         LV_LOG_WARN("the active screen was deleted");
 1087              		.loc 1 75 5 view .LVU336
  75:lvgl/src/core/lv_obj_tree.c ****         LV_LOG_WARN("the active screen was deleted");
 1088              		.loc 1 75 7 is_stmt 0 view .LVU337
 1089 0044 0EB1     		cbz	r6, .L86
  76:lvgl/src/core/lv_obj_tree.c ****         disp->act_scr = NULL;
 1090              		.loc 1 76 9 is_stmt 1 view .LVU338
  76:lvgl/src/core/lv_obj_tree.c ****         disp->act_scr = NULL;
 1091              		.loc 1 76 9 view .LVU339
  76:lvgl/src/core/lv_obj_tree.c ****         disp->act_scr = NULL;
 1092              		.loc 1 76 9 view .LVU340
  77:lvgl/src/core/lv_obj_tree.c ****     }
 1093              		.loc 1 77 9 view .LVU341
  77:lvgl/src/core/lv_obj_tree.c ****     }
 1094              		.loc 1 77 23 is_stmt 0 view .LVU342
 1095 0046 0023     		movs	r3, #0
 1096 0048 3B61     		str	r3, [r7, #16]
  80:lvgl/src/core/lv_obj_tree.c ****     LV_LOG_TRACE("finished (delete %p)", (void *)obj);
 1097              		.loc 1 80 30 is_stmt 1 view .LVU343
  81:lvgl/src/core/lv_obj_tree.c **** }
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 36


 1098              		.loc 1 81 5 view .LVU344
  81:lvgl/src/core/lv_obj_tree.c **** }
 1099              		.loc 1 81 5 view .LVU345
  81:lvgl/src/core/lv_obj_tree.c **** }
 1100              		.loc 1 81 5 view .LVU346
 1101              	.LVL122:
 1102              	.L86:
  82:lvgl/src/core/lv_obj_tree.c **** 
 1103              		.loc 1 82 1 is_stmt 0 view .LVU347
 1104 004a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1105              	.LVL123:
 1106              	.L95:
  56:lvgl/src/core/lv_obj_tree.c ****     bool act_scr_del = false;
 1107              		.loc 1 56 5 is_stmt 1 view .LVU348
  57:lvgl/src/core/lv_obj_tree.c ****     if(par == NULL) {
 1108              		.loc 1 57 5 view .LVU349
  58:lvgl/src/core/lv_obj_tree.c ****         disp = lv_obj_get_disp(obj);
 1109              		.loc 1 58 5 view .LVU350
  59:lvgl/src/core/lv_obj_tree.c ****         if(!disp) return;   /*Shouldn't happen*/
 1110              		.loc 1 59 9 view .LVU351
  59:lvgl/src/core/lv_obj_tree.c ****         if(!disp) return;   /*Shouldn't happen*/
 1111              		.loc 1 59 16 is_stmt 0 view .LVU352
 1112 004c 2046     		mov	r0, r4
 1113              	.LVL124:
  59:lvgl/src/core/lv_obj_tree.c ****         if(!disp) return;   /*Shouldn't happen*/
 1114              		.loc 1 59 16 view .LVU353
 1115 004e FFF7FEFF 		bl	lv_obj_get_disp
 1116              	.LVL125:
  60:lvgl/src/core/lv_obj_tree.c ****         if(disp->act_scr == obj) act_scr_del = true;
 1117              		.loc 1 60 9 is_stmt 1 view .LVU354
  60:lvgl/src/core/lv_obj_tree.c ****         if(disp->act_scr == obj) act_scr_del = true;
 1118              		.loc 1 60 11 is_stmt 0 view .LVU355
 1119 0052 0746     		mov	r7, r0
 1120 0054 0028     		cmp	r0, #0
 1121 0056 F8D0     		beq	.L86
  61:lvgl/src/core/lv_obj_tree.c ****     }
 1122              		.loc 1 61 9 is_stmt 1 view .LVU356
  61:lvgl/src/core/lv_obj_tree.c ****     }
 1123              		.loc 1 61 16 is_stmt 0 view .LVU357
 1124 0058 0369     		ldr	r3, [r0, #16]
  61:lvgl/src/core/lv_obj_tree.c ****     }
 1125              		.loc 1 61 11 view .LVU358
 1126 005a A342     		cmp	r3, r4
 1127 005c 01D0     		beq	.L92
  57:lvgl/src/core/lv_obj_tree.c ****     if(par == NULL) {
 1128              		.loc 1 57 10 view .LVU359
 1129 005e 0026     		movs	r6, #0
 1130 0060 DBE7     		b	.L90
 1131              	.L92:
  61:lvgl/src/core/lv_obj_tree.c ****     }
 1132              		.loc 1 61 46 discriminator 1 view .LVU360
 1133 0062 0126     		movs	r6, #1
 1134 0064 D9E7     		b	.L90
 1135              		.cfi_endproc
 1136              	.LFE156:
 1138              		.section	.text.lv_obj_del_anim_ready_cb,"ax",%progbits
 1139              		.align	1
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 37


 1140              		.global	lv_obj_del_anim_ready_cb
 1141              		.syntax unified
 1142              		.thumb
 1143              		.thumb_func
 1145              	lv_obj_del_anim_ready_cb:
 1146              	.LVL126:
 1147              	.LFB159:
 121:lvgl/src/core/lv_obj_tree.c ****     lv_obj_del(a->var);
 1148              		.loc 1 121 1 is_stmt 1 view -0
 1149              		.cfi_startproc
 1150              		@ args = 0, pretend = 0, frame = 0
 1151              		@ frame_needed = 0, uses_anonymous_args = 0
 121:lvgl/src/core/lv_obj_tree.c ****     lv_obj_del(a->var);
 1152              		.loc 1 121 1 is_stmt 0 view .LVU362
 1153 0000 08B5     		push	{r3, lr}
 1154              	.LCFI10:
 1155              		.cfi_def_cfa_offset 8
 1156              		.cfi_offset 3, -8
 1157              		.cfi_offset 14, -4
 122:lvgl/src/core/lv_obj_tree.c **** }
 1158              		.loc 1 122 5 is_stmt 1 view .LVU363
 1159 0002 0068     		ldr	r0, [r0]
 1160              	.LVL127:
 122:lvgl/src/core/lv_obj_tree.c **** }
 1161              		.loc 1 122 5 is_stmt 0 view .LVU364
 1162 0004 FFF7FEFF 		bl	lv_obj_del
 1163              	.LVL128:
 123:lvgl/src/core/lv_obj_tree.c **** 
 1164              		.loc 1 123 1 view .LVU365
 1165 0008 08BD     		pop	{r3, pc}
 1166              		.cfi_endproc
 1167              	.LFE159:
 1169              		.section	.text.lv_obj_del_async_cb,"ax",%progbits
 1170              		.align	1
 1171              		.syntax unified
 1172              		.thumb
 1173              		.thumb_func
 1175              	lv_obj_del_async_cb:
 1176              	.LVL129:
 1177              	.LFB171:
 350:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 1178              		.loc 1 350 1 is_stmt 1 view -0
 1179              		.cfi_startproc
 1180              		@ args = 0, pretend = 0, frame = 0
 1181              		@ frame_needed = 0, uses_anonymous_args = 0
 350:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 1182              		.loc 1 350 1 is_stmt 0 view .LVU367
 1183 0000 08B5     		push	{r3, lr}
 1184              	.LCFI11:
 1185              		.cfi_def_cfa_offset 8
 1186              		.cfi_offset 3, -8
 1187              		.cfi_offset 14, -4
 351:lvgl/src/core/lv_obj_tree.c **** 
 1188              		.loc 1 351 5 is_stmt 1 view .LVU368
 351:lvgl/src/core/lv_obj_tree.c **** 
 1189              		.loc 1 351 5 view .LVU369
 351:lvgl/src/core/lv_obj_tree.c **** 
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 38


 1190              		.loc 1 351 5 view .LVU370
 353:lvgl/src/core/lv_obj_tree.c **** }
 1191              		.loc 1 353 5 view .LVU371
 1192 0002 FFF7FEFF 		bl	lv_obj_del
 1193              	.LVL130:
 354:lvgl/src/core/lv_obj_tree.c **** 
 1194              		.loc 1 354 1 is_stmt 0 view .LVU372
 1195 0006 08BD     		pop	{r3, pc}
 1196              		.cfi_endproc
 1197              	.LFE171:
 1199              		.section	.text.lv_obj_clean,"ax",%progbits
 1200              		.align	1
 1201              		.global	lv_obj_clean
 1202              		.syntax unified
 1203              		.thumb
 1204              		.thumb_func
 1206              	lv_obj_clean:
 1207              	.LVL131:
 1208              	.LFB157:
  85:lvgl/src/core/lv_obj_tree.c ****     LV_LOG_TRACE("begin (delete %p)", (void *)obj);
 1209              		.loc 1 85 1 is_stmt 1 view -0
 1210              		.cfi_startproc
 1211              		@ args = 0, pretend = 0, frame = 0
 1212              		@ frame_needed = 0, uses_anonymous_args = 0
  85:lvgl/src/core/lv_obj_tree.c ****     LV_LOG_TRACE("begin (delete %p)", (void *)obj);
 1213              		.loc 1 85 1 is_stmt 0 view .LVU374
 1214 0000 10B5     		push	{r4, lr}
 1215              	.LCFI12:
 1216              		.cfi_def_cfa_offset 8
 1217              		.cfi_offset 4, -8
 1218              		.cfi_offset 14, -4
 1219 0002 0446     		mov	r4, r0
  86:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 1220              		.loc 1 86 5 is_stmt 1 view .LVU375
  86:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 1221              		.loc 1 86 5 view .LVU376
  86:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 1222              		.loc 1 86 5 view .LVU377
  87:lvgl/src/core/lv_obj_tree.c **** 
 1223              		.loc 1 87 5 view .LVU378
  87:lvgl/src/core/lv_obj_tree.c **** 
 1224              		.loc 1 87 5 view .LVU379
  87:lvgl/src/core/lv_obj_tree.c **** 
 1225              		.loc 1 87 5 view .LVU380
  89:lvgl/src/core/lv_obj_tree.c **** 
 1226              		.loc 1 89 5 view .LVU381
 1227 0004 FFF7FEFF 		bl	lv_obj_invalidate
 1228              	.LVL132:
  91:lvgl/src/core/lv_obj_tree.c ****     while(child) {
 1229              		.loc 1 91 5 view .LVU382
  91:lvgl/src/core/lv_obj_tree.c ****     while(child) {
 1230              		.loc 1 91 24 is_stmt 0 view .LVU383
 1231 0008 0021     		movs	r1, #0
 1232 000a 2046     		mov	r0, r4
 1233 000c FFF7FEFF 		bl	lv_obj_get_child
 1234              	.LVL133:
  92:lvgl/src/core/lv_obj_tree.c ****         obj_del_core(child);
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 39


 1235              		.loc 1 92 5 is_stmt 1 view .LVU384
  92:lvgl/src/core/lv_obj_tree.c ****         obj_del_core(child);
 1236              		.loc 1 92 10 is_stmt 0 view .LVU385
 1237 0010 05E0     		b	.L101
 1238              	.L102:
  93:lvgl/src/core/lv_obj_tree.c ****         child = lv_obj_get_child(obj, 0);
 1239              		.loc 1 93 9 is_stmt 1 view .LVU386
 1240 0012 FFF7FEFF 		bl	obj_del_core
 1241              	.LVL134:
  94:lvgl/src/core/lv_obj_tree.c ****     }
 1242              		.loc 1 94 9 view .LVU387
  94:lvgl/src/core/lv_obj_tree.c ****     }
 1243              		.loc 1 94 17 is_stmt 0 view .LVU388
 1244 0016 0021     		movs	r1, #0
 1245 0018 2046     		mov	r0, r4
 1246 001a FFF7FEFF 		bl	lv_obj_get_child
 1247              	.LVL135:
 1248              	.L101:
  92:lvgl/src/core/lv_obj_tree.c ****         obj_del_core(child);
 1249              		.loc 1 92 11 is_stmt 1 view .LVU389
 1250 001e 0028     		cmp	r0, #0
 1251 0020 F7D1     		bne	.L102
  97:lvgl/src/core/lv_obj_tree.c ****     if(obj->spec_attr) {
 1252              		.loc 1 97 5 view .LVU390
 1253 0022 0023     		movs	r3, #0
 1254 0024 1A46     		mov	r2, r3
 1255 0026 1946     		mov	r1, r3
 1256 0028 2046     		mov	r0, r4
 1257              	.LVL136:
  97:lvgl/src/core/lv_obj_tree.c ****     if(obj->spec_attr) {
 1258              		.loc 1 97 5 is_stmt 0 view .LVU391
 1259 002a FFF7FEFF 		bl	lv_obj_scroll_to
 1260              	.LVL137:
  98:lvgl/src/core/lv_obj_tree.c ****         obj->spec_attr->scroll.x = 0;
 1261              		.loc 1 98 5 is_stmt 1 view .LVU392
  98:lvgl/src/core/lv_obj_tree.c ****         obj->spec_attr->scroll.x = 0;
 1262              		.loc 1 98 11 is_stmt 0 view .LVU393
 1263 002e A368     		ldr	r3, [r4, #8]
  98:lvgl/src/core/lv_obj_tree.c ****         obj->spec_attr->scroll.x = 0;
 1264              		.loc 1 98 7 view .LVU394
 1265 0030 1BB1     		cbz	r3, .L100
  99:lvgl/src/core/lv_obj_tree.c ****         obj->spec_attr->scroll.y = 0;
 1266              		.loc 1 99 9 is_stmt 1 view .LVU395
  99:lvgl/src/core/lv_obj_tree.c ****         obj->spec_attr->scroll.y = 0;
 1267              		.loc 1 99 34 is_stmt 0 view .LVU396
 1268 0032 0022     		movs	r2, #0
 1269 0034 1A82     		strh	r2, [r3, #16]	@ movhi
 100:lvgl/src/core/lv_obj_tree.c ****     }
 1270              		.loc 1 100 9 is_stmt 1 view .LVU397
 100:lvgl/src/core/lv_obj_tree.c ****     }
 1271              		.loc 1 100 12 is_stmt 0 view .LVU398
 1272 0036 A368     		ldr	r3, [r4, #8]
 100:lvgl/src/core/lv_obj_tree.c ****     }
 1273              		.loc 1 100 34 view .LVU399
 1274 0038 5A82     		strh	r2, [r3, #18]	@ movhi
 103:lvgl/src/core/lv_obj_tree.c **** 
 1275              		.loc 1 103 30 is_stmt 1 view .LVU400
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 40


 105:lvgl/src/core/lv_obj_tree.c **** }
 1276              		.loc 1 105 5 view .LVU401
 105:lvgl/src/core/lv_obj_tree.c **** }
 1277              		.loc 1 105 5 view .LVU402
 105:lvgl/src/core/lv_obj_tree.c **** }
 1278              		.loc 1 105 5 view .LVU403
 1279              	.L100:
 106:lvgl/src/core/lv_obj_tree.c **** 
 1280              		.loc 1 106 1 is_stmt 0 view .LVU404
 1281 003a 10BD     		pop	{r4, pc}
 106:lvgl/src/core/lv_obj_tree.c **** 
 1282              		.loc 1 106 1 view .LVU405
 1283              		.cfi_endproc
 1284              	.LFE157:
 1286              		.section	.text.lv_obj_set_parent,"ax",%progbits
 1287              		.align	1
 1288              		.global	lv_obj_set_parent
 1289              		.syntax unified
 1290              		.thumb
 1291              		.thumb_func
 1293              	lv_obj_set_parent:
 1294              	.LVL138:
 1295              	.LFB161:
 132:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 1296              		.loc 1 132 1 is_stmt 1 view -0
 1297              		.cfi_startproc
 1298              		@ args = 0, pretend = 0, frame = 0
 1299              		@ frame_needed = 0, uses_anonymous_args = 0
 132:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 1300              		.loc 1 132 1 is_stmt 0 view .LVU407
 1301 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1302              	.LCFI13:
 1303              		.cfi_def_cfa_offset 24
 1304              		.cfi_offset 3, -24
 1305              		.cfi_offset 4, -20
 1306              		.cfi_offset 5, -16
 1307              		.cfi_offset 6, -12
 1308              		.cfi_offset 7, -8
 1309              		.cfi_offset 14, -4
 133:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(parent, MY_CLASS);
 1310              		.loc 1 133 5 is_stmt 1 view .LVU408
 133:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(parent, MY_CLASS);
 1311              		.loc 1 133 5 view .LVU409
 133:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(parent, MY_CLASS);
 1312              		.loc 1 133 5 view .LVU410
 134:lvgl/src/core/lv_obj_tree.c **** 
 1313              		.loc 1 134 5 view .LVU411
 134:lvgl/src/core/lv_obj_tree.c **** 
 1314              		.loc 1 134 5 view .LVU412
 134:lvgl/src/core/lv_obj_tree.c **** 
 1315              		.loc 1 134 5 view .LVU413
 136:lvgl/src/core/lv_obj_tree.c ****         LV_LOG_WARN("Can't set the parent of a screen");
 1316              		.loc 1 136 5 view .LVU414
 136:lvgl/src/core/lv_obj_tree.c ****         LV_LOG_WARN("Can't set the parent of a screen");
 1317              		.loc 1 136 11 is_stmt 0 view .LVU415
 1318 0002 4368     		ldr	r3, [r0, #4]
 136:lvgl/src/core/lv_obj_tree.c ****         LV_LOG_WARN("Can't set the parent of a screen");
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 41


 1319              		.loc 1 136 7 view .LVU416
 1320 0004 002B     		cmp	r3, #0
 1321 0006 60D0     		beq	.L105
 1322 0008 0646     		mov	r6, r0
 1323 000a 0F46     		mov	r7, r1
 141:lvgl/src/core/lv_obj_tree.c ****         LV_LOG_WARN("Can't set parent == NULL to an object");
 1324              		.loc 1 141 5 is_stmt 1 view .LVU417
 141:lvgl/src/core/lv_obj_tree.c ****         LV_LOG_WARN("Can't set parent == NULL to an object");
 1325              		.loc 1 141 7 is_stmt 0 view .LVU418
 1326 000c 0029     		cmp	r1, #0
 1327 000e 5CD0     		beq	.L105
 146:lvgl/src/core/lv_obj_tree.c **** 
 1328              		.loc 1 146 5 is_stmt 1 view .LVU419
 1329 0010 FFF7FEFF 		bl	lv_obj_invalidate
 1330              	.LVL139:
 148:lvgl/src/core/lv_obj_tree.c **** 
 1331              		.loc 1 148 5 view .LVU420
 1332 0014 3846     		mov	r0, r7
 1333 0016 FFF7FEFF 		bl	lv_obj_allocate_spec_attr
 1334              	.LVL140:
 150:lvgl/src/core/lv_obj_tree.c ****     /*Remove the object from the old parent's child list*/
 1335              		.loc 1 150 5 view .LVU421
 150:lvgl/src/core/lv_obj_tree.c ****     /*Remove the object from the old parent's child list*/
 1336              		.loc 1 150 16 is_stmt 0 view .LVU422
 1337 001a 7568     		ldr	r5, [r6, #4]
 1338              	.LVL141:
 152:lvgl/src/core/lv_obj_tree.c ****     for(i = lv_obj_get_index(obj); i <= (int32_t)lv_obj_get_child_cnt(old_parent) - 2; i++) {
 1339              		.loc 1 152 5 is_stmt 1 view .LVU423
 153:lvgl/src/core/lv_obj_tree.c ****         old_parent->spec_attr->children[i] = old_parent->spec_attr->children[i + 1];
 1340              		.loc 1 153 5 view .LVU424
 153:lvgl/src/core/lv_obj_tree.c ****         old_parent->spec_attr->children[i] = old_parent->spec_attr->children[i + 1];
 1341              		.loc 1 153 13 is_stmt 0 view .LVU425
 1342 001c 3046     		mov	r0, r6
 1343 001e FFF7FEFF 		bl	lv_obj_get_index
 1344              	.LVL142:
 1345 0022 0446     		mov	r4, r0
 1346              	.LVL143:
 153:lvgl/src/core/lv_obj_tree.c ****         old_parent->spec_attr->children[i] = old_parent->spec_attr->children[i + 1];
 1347              		.loc 1 153 5 view .LVU426
 1348 0024 07E0     		b	.L107
 1349              	.LVL144:
 1350              	.L108:
 154:lvgl/src/core/lv_obj_tree.c ****     }
 1351              		.loc 1 154 9 is_stmt 1 view .LVU427
 154:lvgl/src/core/lv_obj_tree.c ****     }
 1352              		.loc 1 154 56 is_stmt 0 view .LVU428
 1353 0026 AB68     		ldr	r3, [r5, #8]
 154:lvgl/src/core/lv_obj_tree.c ****     }
 1354              		.loc 1 154 67 view .LVU429
 1355 0028 1A68     		ldr	r2, [r3]
 154:lvgl/src/core/lv_obj_tree.c ****     }
 1356              		.loc 1 154 77 view .LVU430
 1357 002a 631C     		adds	r3, r4, #1
 1358 002c 52F82310 		ldr	r1, [r2, r3, lsl #2]
 154:lvgl/src/core/lv_obj_tree.c ****     }
 1359              		.loc 1 154 44 view .LVU431
 1360 0030 42F82410 		str	r1, [r2, r4, lsl #2]
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 42


 153:lvgl/src/core/lv_obj_tree.c ****         old_parent->spec_attr->children[i] = old_parent->spec_attr->children[i + 1];
 1361              		.loc 1 153 89 is_stmt 1 discriminator 3 view .LVU432
 1362 0034 1C46     		mov	r4, r3
 1363              	.LVL145:
 1364              	.L107:
 153:lvgl/src/core/lv_obj_tree.c ****         old_parent->spec_attr->children[i] = old_parent->spec_attr->children[i + 1];
 1365              		.loc 1 153 38 discriminator 1 view .LVU433
 153:lvgl/src/core/lv_obj_tree.c ****         old_parent->spec_attr->children[i] = old_parent->spec_attr->children[i + 1];
 1366              		.loc 1 153 50 is_stmt 0 discriminator 1 view .LVU434
 1367 0036 2846     		mov	r0, r5
 1368 0038 FFF7FEFF 		bl	lv_obj_get_child_cnt
 1369              	.LVL146:
 153:lvgl/src/core/lv_obj_tree.c ****         old_parent->spec_attr->children[i] = old_parent->spec_attr->children[i + 1];
 1370              		.loc 1 153 38 discriminator 1 view .LVU435
 1371 003c 0138     		subs	r0, r0, #1
 1372 003e A042     		cmp	r0, r4
 1373 0040 F1DC     		bgt	.L108
 156:lvgl/src/core/lv_obj_tree.c ****     if(old_parent->spec_attr->child_cnt) {
 1374              		.loc 1 156 5 is_stmt 1 view .LVU436
 156:lvgl/src/core/lv_obj_tree.c ****     if(old_parent->spec_attr->child_cnt) {
 1375              		.loc 1 156 15 is_stmt 0 view .LVU437
 1376 0042 AA68     		ldr	r2, [r5, #8]
 156:lvgl/src/core/lv_obj_tree.c ****     if(old_parent->spec_attr->child_cnt) {
 1377              		.loc 1 156 26 view .LVU438
 1378 0044 5368     		ldr	r3, [r2, #4]
 156:lvgl/src/core/lv_obj_tree.c ****     if(old_parent->spec_attr->child_cnt) {
 1379              		.loc 1 156 37 view .LVU439
 1380 0046 013B     		subs	r3, r3, #1
 1381 0048 5360     		str	r3, [r2, #4]
 157:lvgl/src/core/lv_obj_tree.c ****         old_parent->spec_attr->children = lv_mem_realloc(old_parent->spec_attr->children,
 1382              		.loc 1 157 5 is_stmt 1 view .LVU440
 157:lvgl/src/core/lv_obj_tree.c ****         old_parent->spec_attr->children = lv_mem_realloc(old_parent->spec_attr->children,
 1383              		.loc 1 157 18 is_stmt 0 view .LVU441
 1384 004a AC68     		ldr	r4, [r5, #8]
 1385              	.LVL147:
 157:lvgl/src/core/lv_obj_tree.c ****         old_parent->spec_attr->children = lv_mem_realloc(old_parent->spec_attr->children,
 1386              		.loc 1 157 29 view .LVU442
 1387 004c 6168     		ldr	r1, [r4, #4]
 157:lvgl/src/core/lv_obj_tree.c ****         old_parent->spec_attr->children = lv_mem_realloc(old_parent->spec_attr->children,
 1388              		.loc 1 157 7 view .LVU443
 1389 004e 0029     		cmp	r1, #0
 1390 0050 3CD0     		beq	.L109
 158:lvgl/src/core/lv_obj_tree.c ****                                                          old_parent->spec_attr->child_cnt * (sizeof
 1391              		.loc 1 158 9 is_stmt 1 view .LVU444
 158:lvgl/src/core/lv_obj_tree.c ****                                                          old_parent->spec_attr->child_cnt * (sizeof
 1392              		.loc 1 158 43 is_stmt 0 view .LVU445
 1393 0052 8900     		lsls	r1, r1, #2
 1394 0054 2068     		ldr	r0, [r4]
 1395 0056 FFF7FEFF 		bl	lv_mem_realloc
 1396              	.LVL148:
 158:lvgl/src/core/lv_obj_tree.c ****                                                          old_parent->spec_attr->child_cnt * (sizeof
 1397              		.loc 1 158 41 discriminator 1 view .LVU446
 1398 005a 2060     		str	r0, [r4]
 1399              	.L110:
 167:lvgl/src/core/lv_obj_tree.c ****     parent->spec_attr->children = lv_mem_realloc(parent->spec_attr->children,
 1400              		.loc 1 167 5 is_stmt 1 view .LVU447
 167:lvgl/src/core/lv_obj_tree.c ****     parent->spec_attr->children = lv_mem_realloc(parent->spec_attr->children,
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 43


 1401              		.loc 1 167 11 is_stmt 0 view .LVU448
 1402 005c BA68     		ldr	r2, [r7, #8]
 167:lvgl/src/core/lv_obj_tree.c ****     parent->spec_attr->children = lv_mem_realloc(parent->spec_attr->children,
 1403              		.loc 1 167 22 view .LVU449
 1404 005e 5368     		ldr	r3, [r2, #4]
 167:lvgl/src/core/lv_obj_tree.c ****     parent->spec_attr->children = lv_mem_realloc(parent->spec_attr->children,
 1405              		.loc 1 167 33 view .LVU450
 1406 0060 0133     		adds	r3, r3, #1
 1407 0062 5360     		str	r3, [r2, #4]
 168:lvgl/src/core/lv_obj_tree.c ****                                                  parent->spec_attr->child_cnt * (sizeof(lv_obj_t *)
 1408              		.loc 1 168 5 is_stmt 1 view .LVU451
 168:lvgl/src/core/lv_obj_tree.c ****                                                  parent->spec_attr->child_cnt * (sizeof(lv_obj_t *)
 1409              		.loc 1 168 56 is_stmt 0 view .LVU452
 1410 0064 BC68     		ldr	r4, [r7, #8]
 169:lvgl/src/core/lv_obj_tree.c ****     parent->spec_attr->children[lv_obj_get_child_cnt(parent) - 1] = obj;
 1411              		.loc 1 169 67 view .LVU453
 1412 0066 6168     		ldr	r1, [r4, #4]
 168:lvgl/src/core/lv_obj_tree.c ****                                                  parent->spec_attr->child_cnt * (sizeof(lv_obj_t *)
 1413              		.loc 1 168 35 view .LVU454
 1414 0068 8900     		lsls	r1, r1, #2
 1415 006a 2068     		ldr	r0, [r4]
 1416 006c FFF7FEFF 		bl	lv_mem_realloc
 1417              	.LVL149:
 168:lvgl/src/core/lv_obj_tree.c ****                                                  parent->spec_attr->child_cnt * (sizeof(lv_obj_t *)
 1418              		.loc 1 168 33 discriminator 1 view .LVU455
 1419 0070 2060     		str	r0, [r4]
 170:lvgl/src/core/lv_obj_tree.c **** 
 1420              		.loc 1 170 5 is_stmt 1 view .LVU456
 170:lvgl/src/core/lv_obj_tree.c **** 
 1421              		.loc 1 170 11 is_stmt 0 view .LVU457
 1422 0072 BB68     		ldr	r3, [r7, #8]
 170:lvgl/src/core/lv_obj_tree.c **** 
 1423              		.loc 1 170 22 view .LVU458
 1424 0074 1C68     		ldr	r4, [r3]
 170:lvgl/src/core/lv_obj_tree.c **** 
 1425              		.loc 1 170 33 view .LVU459
 1426 0076 3846     		mov	r0, r7
 1427 0078 FFF7FEFF 		bl	lv_obj_get_child_cnt
 1428              	.LVL150:
 170:lvgl/src/core/lv_obj_tree.c **** 
 1429              		.loc 1 170 32 discriminator 1 view .LVU460
 1430 007c 6FF04043 		mvn	r3, #-1073741824
 1431 0080 0344     		add	r3, r3, r0
 170:lvgl/src/core/lv_obj_tree.c **** 
 1432              		.loc 1 170 67 discriminator 1 view .LVU461
 1433 0082 44F82360 		str	r6, [r4, r3, lsl #2]
 172:lvgl/src/core/lv_obj_tree.c **** 
 1434              		.loc 1 172 5 is_stmt 1 view .LVU462
 172:lvgl/src/core/lv_obj_tree.c **** 
 1435              		.loc 1 172 17 is_stmt 0 view .LVU463
 1436 0086 7760     		str	r7, [r6, #4]
 175:lvgl/src/core/lv_obj_tree.c ****     lv_obj_scrollbar_invalidate(old_parent);
 1437              		.loc 1 175 5 is_stmt 1 view .LVU464
 1438 0088 0021     		movs	r1, #0
 1439 008a 2846     		mov	r0, r5
 1440 008c FFF7FEFF 		bl	lv_obj_readjust_scroll
 1441              	.LVL151:
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 44


 176:lvgl/src/core/lv_obj_tree.c ****     lv_event_send(old_parent, LV_EVENT_CHILD_CHANGED, obj);
 1442              		.loc 1 176 5 view .LVU465
 1443 0090 2846     		mov	r0, r5
 1444 0092 FFF7FEFF 		bl	lv_obj_scrollbar_invalidate
 1445              	.LVL152:
 177:lvgl/src/core/lv_obj_tree.c ****     lv_event_send(old_parent, LV_EVENT_CHILD_DELETED, NULL);
 1446              		.loc 1 177 5 view .LVU466
 1447 0096 3246     		mov	r2, r6
 1448 0098 2221     		movs	r1, #34
 1449 009a 2846     		mov	r0, r5
 1450 009c FFF7FEFF 		bl	lv_event_send
 1451              	.LVL153:
 178:lvgl/src/core/lv_obj_tree.c **** 
 1452              		.loc 1 178 5 view .LVU467
 1453 00a0 0022     		movs	r2, #0
 1454 00a2 2421     		movs	r1, #36
 1455 00a4 2846     		mov	r0, r5
 1456 00a6 FFF7FEFF 		bl	lv_event_send
 1457              	.LVL154:
 181:lvgl/src/core/lv_obj_tree.c ****     lv_event_send(parent, LV_EVENT_CHILD_CREATED, NULL);
 1458              		.loc 1 181 5 view .LVU468
 1459 00aa 3246     		mov	r2, r6
 1460 00ac 2221     		movs	r1, #34
 1461 00ae 3846     		mov	r0, r7
 1462 00b0 FFF7FEFF 		bl	lv_event_send
 1463              	.LVL155:
 182:lvgl/src/core/lv_obj_tree.c **** 
 1464              		.loc 1 182 5 view .LVU469
 1465 00b4 0022     		movs	r2, #0
 1466 00b6 2321     		movs	r1, #35
 1467 00b8 3846     		mov	r0, r7
 1468 00ba FFF7FEFF 		bl	lv_event_send
 1469              	.LVL156:
 184:lvgl/src/core/lv_obj_tree.c **** 
 1470              		.loc 1 184 5 view .LVU470
 1471 00be 3046     		mov	r0, r6
 1472 00c0 FFF7FEFF 		bl	lv_obj_mark_layout_as_dirty
 1473              	.LVL157:
 186:lvgl/src/core/lv_obj_tree.c **** }
 1474              		.loc 1 186 5 view .LVU471
 1475 00c4 3046     		mov	r0, r6
 1476 00c6 FFF7FEFF 		bl	lv_obj_invalidate
 1477              	.LVL158:
 1478              	.L105:
 187:lvgl/src/core/lv_obj_tree.c **** 
 1479              		.loc 1 187 1 is_stmt 0 view .LVU472
 1480 00ca F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1481              	.LVL159:
 1482              	.L109:
 162:lvgl/src/core/lv_obj_tree.c ****         old_parent->spec_attr->children = NULL;
 1483              		.loc 1 162 9 is_stmt 1 view .LVU473
 1484 00cc 2068     		ldr	r0, [r4]
 1485 00ce FFF7FEFF 		bl	lv_mem_free
 1486              	.LVL160:
 163:lvgl/src/core/lv_obj_tree.c ****     }
 1487              		.loc 1 163 9 view .LVU474
 163:lvgl/src/core/lv_obj_tree.c ****     }
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 45


 1488              		.loc 1 163 19 is_stmt 0 view .LVU475
 1489 00d2 AB68     		ldr	r3, [r5, #8]
 163:lvgl/src/core/lv_obj_tree.c ****     }
 1490              		.loc 1 163 41 view .LVU476
 1491 00d4 0022     		movs	r2, #0
 1492 00d6 1A60     		str	r2, [r3]
 1493 00d8 C0E7     		b	.L110
 1494              		.cfi_endproc
 1495              	.LFE161:
 1497              		.section	.text.lv_obj_move_to_index,"ax",%progbits
 1498              		.align	1
 1499              		.global	lv_obj_move_to_index
 1500              		.syntax unified
 1501              		.thumb
 1502              		.thumb_func
 1504              	lv_obj_move_to_index:
 1505              	.LVL161:
 1506              	.LFB162:
 190:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 1507              		.loc 1 190 1 is_stmt 1 view -0
 1508              		.cfi_startproc
 1509              		@ args = 0, pretend = 0, frame = 0
 1510              		@ frame_needed = 0, uses_anonymous_args = 0
 190:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 1511              		.loc 1 190 1 is_stmt 0 view .LVU478
 1512 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1513              	.LCFI14:
 1514              		.cfi_def_cfa_offset 24
 1515              		.cfi_offset 3, -24
 1516              		.cfi_offset 4, -20
 1517              		.cfi_offset 5, -16
 1518              		.cfi_offset 6, -12
 1519              		.cfi_offset 7, -8
 1520              		.cfi_offset 14, -4
 1521 0002 0746     		mov	r7, r0
 191:lvgl/src/core/lv_obj_tree.c **** 
 1522              		.loc 1 191 5 is_stmt 1 view .LVU479
 191:lvgl/src/core/lv_obj_tree.c **** 
 1523              		.loc 1 191 5 view .LVU480
 191:lvgl/src/core/lv_obj_tree.c **** 
 1524              		.loc 1 191 5 view .LVU481
 193:lvgl/src/core/lv_obj_tree.c ****         index = lv_obj_get_child_cnt(lv_obj_get_parent(obj)) + index;
 1525              		.loc 1 193 5 view .LVU482
 193:lvgl/src/core/lv_obj_tree.c ****         index = lv_obj_get_child_cnt(lv_obj_get_parent(obj)) + index;
 1526              		.loc 1 193 7 is_stmt 0 view .LVU483
 1527 0004 0D1E     		subs	r5, r1, #0
 1528 0006 11DB     		blt	.L121
 1529              	.LVL162:
 1530              	.L113:
 197:lvgl/src/core/lv_obj_tree.c **** 
 1531              		.loc 1 197 5 is_stmt 1 view .LVU484
 197:lvgl/src/core/lv_obj_tree.c **** 
 1532              		.loc 1 197 31 is_stmt 0 view .LVU485
 1533 0008 3846     		mov	r0, r7
 1534 000a FFF7FEFF 		bl	lv_obj_get_index
 1535              	.LVL163:
 1536 000e 0446     		mov	r4, r0
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 46


 1537              	.LVL164:
 199:lvgl/src/core/lv_obj_tree.c **** 
 1538              		.loc 1 199 5 is_stmt 1 view .LVU486
 199:lvgl/src/core/lv_obj_tree.c **** 
 1539              		.loc 1 199 25 is_stmt 0 view .LVU487
 1540 0010 3846     		mov	r0, r7
 1541              	.LVL165:
 199:lvgl/src/core/lv_obj_tree.c **** 
 1542              		.loc 1 199 25 view .LVU488
 1543 0012 FFF7FEFF 		bl	lv_obj_get_parent
 1544              	.LVL166:
 1545 0016 0646     		mov	r6, r0
 1546              	.LVL167:
 201:lvgl/src/core/lv_obj_tree.c ****     if(index >= (int32_t) lv_obj_get_child_cnt(parent)) return;
 1547              		.loc 1 201 5 is_stmt 1 view .LVU489
 201:lvgl/src/core/lv_obj_tree.c ****     if(index >= (int32_t) lv_obj_get_child_cnt(parent)) return;
 1548              		.loc 1 201 7 is_stmt 0 view .LVU490
 1549 0018 002D     		cmp	r5, #0
 1550 001a 25DB     		blt	.L112
 202:lvgl/src/core/lv_obj_tree.c ****     if(index == old_index) return;
 1551              		.loc 1 202 5 is_stmt 1 view .LVU491
 202:lvgl/src/core/lv_obj_tree.c ****     if(index == old_index) return;
 1552              		.loc 1 202 27 is_stmt 0 view .LVU492
 1553 001c FFF7FEFF 		bl	lv_obj_get_child_cnt
 1554              	.LVL168:
 202:lvgl/src/core/lv_obj_tree.c ****     if(index == old_index) return;
 1555              		.loc 1 202 7 discriminator 1 view .LVU493
 1556 0020 A842     		cmp	r0, r5
 1557 0022 21DD     		ble	.L112
 203:lvgl/src/core/lv_obj_tree.c **** 
 1558              		.loc 1 203 5 is_stmt 1 view .LVU494
 203:lvgl/src/core/lv_obj_tree.c **** 
 1559              		.loc 1 203 7 is_stmt 0 view .LVU495
 1560 0024 A542     		cmp	r5, r4
 1561 0026 1FD0     		beq	.L112
 205:lvgl/src/core/lv_obj_tree.c ****     if(index < old_index) {
 1562              		.loc 1 205 5 is_stmt 1 view .LVU496
 1563              	.LVL169:
 206:lvgl/src/core/lv_obj_tree.c ****         while(i > index)  {
 1564              		.loc 1 206 5 view .LVU497
 206:lvgl/src/core/lv_obj_tree.c ****         while(i > index)  {
 1565              		.loc 1 206 7 is_stmt 0 view .LVU498
 1566 0028 10DB     		blt	.L115
 1567 002a 26E0     		b	.L116
 1568              	.LVL170:
 1569              	.L121:
 194:lvgl/src/core/lv_obj_tree.c ****     }
 1570              		.loc 1 194 9 is_stmt 1 view .LVU499
 194:lvgl/src/core/lv_obj_tree.c ****     }
 1571              		.loc 1 194 38 is_stmt 0 view .LVU500
 1572 002c FFF7FEFF 		bl	lv_obj_get_parent
 1573              	.LVL171:
 194:lvgl/src/core/lv_obj_tree.c ****     }
 1574              		.loc 1 194 17 discriminator 1 view .LVU501
 1575 0030 FFF7FEFF 		bl	lv_obj_get_child_cnt
 1576              	.LVL172:
 194:lvgl/src/core/lv_obj_tree.c ****     }
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 47


 1577              		.loc 1 194 62 discriminator 2 view .LVU502
 1578 0034 0544     		add	r5, r5, r0
 1579              	.LVL173:
 194:lvgl/src/core/lv_obj_tree.c ****     }
 1580              		.loc 1 194 62 discriminator 2 view .LVU503
 1581 0036 E7E7     		b	.L113
 1582              	.LVL174:
 1583              	.L117:
 208:lvgl/src/core/lv_obj_tree.c ****             i--;
 1584              		.loc 1 208 13 is_stmt 1 view .LVU504
 208:lvgl/src/core/lv_obj_tree.c ****             i--;
 1585              		.loc 1 208 52 is_stmt 0 view .LVU505
 1586 0038 B368     		ldr	r3, [r6, #8]
 208:lvgl/src/core/lv_obj_tree.c ****             i--;
 1587              		.loc 1 208 63 view .LVU506
 1588 003a 1A68     		ldr	r2, [r3]
 208:lvgl/src/core/lv_obj_tree.c ****             i--;
 1589              		.loc 1 208 73 view .LVU507
 1590 003c 6FF04043 		mvn	r3, #-1073741824
 1591 0040 2344     		add	r3, r3, r4
 1592 0042 52F82330 		ldr	r3, [r2, r3, lsl #2]
 208:lvgl/src/core/lv_obj_tree.c ****             i--;
 1593              		.loc 1 208 44 view .LVU508
 1594 0046 42F82430 		str	r3, [r2, r4, lsl #2]
 209:lvgl/src/core/lv_obj_tree.c ****         }
 1595              		.loc 1 209 13 is_stmt 1 view .LVU509
 209:lvgl/src/core/lv_obj_tree.c ****         }
 1596              		.loc 1 209 14 is_stmt 0 view .LVU510
 1597 004a 013C     		subs	r4, r4, #1
 1598              	.LVL175:
 1599              	.L115:
 207:lvgl/src/core/lv_obj_tree.c ****             parent->spec_attr->children[i] = parent->spec_attr->children[i - 1];
 1600              		.loc 1 207 17 is_stmt 1 view .LVU511
 1601 004c A542     		cmp	r5, r4
 1602 004e F3DB     		blt	.L117
 1603              	.L118:
 219:lvgl/src/core/lv_obj_tree.c ****     lv_event_send(parent, LV_EVENT_CHILD_CHANGED, NULL);
 1604              		.loc 1 219 5 view .LVU512
 219:lvgl/src/core/lv_obj_tree.c ****     lv_event_send(parent, LV_EVENT_CHILD_CHANGED, NULL);
 1605              		.loc 1 219 11 is_stmt 0 view .LVU513
 1606 0050 B368     		ldr	r3, [r6, #8]
 219:lvgl/src/core/lv_obj_tree.c ****     lv_event_send(parent, LV_EVENT_CHILD_CHANGED, NULL);
 1607              		.loc 1 219 22 view .LVU514
 1608 0052 1B68     		ldr	r3, [r3]
 219:lvgl/src/core/lv_obj_tree.c ****     lv_event_send(parent, LV_EVENT_CHILD_CHANGED, NULL);
 1609              		.loc 1 219 40 view .LVU515
 1610 0054 43F82570 		str	r7, [r3, r5, lsl #2]
 220:lvgl/src/core/lv_obj_tree.c ****     lv_obj_invalidate(parent);
 1611              		.loc 1 220 5 is_stmt 1 view .LVU516
 1612 0058 0022     		movs	r2, #0
 1613 005a 2221     		movs	r1, #34
 1614 005c 3046     		mov	r0, r6
 1615 005e FFF7FEFF 		bl	lv_event_send
 1616              	.LVL176:
 221:lvgl/src/core/lv_obj_tree.c **** }
 1617              		.loc 1 221 5 view .LVU517
 1618 0062 3046     		mov	r0, r6
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 48


 1619 0064 FFF7FEFF 		bl	lv_obj_invalidate
 1620              	.LVL177:
 1621              	.L112:
 222:lvgl/src/core/lv_obj_tree.c **** 
 1622              		.loc 1 222 1 is_stmt 0 view .LVU518
 1623 0068 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1624              	.LVL178:
 1625              	.L119:
 214:lvgl/src/core/lv_obj_tree.c ****             i++;
 1626              		.loc 1 214 13 is_stmt 1 view .LVU519
 214:lvgl/src/core/lv_obj_tree.c ****             i++;
 1627              		.loc 1 214 52 is_stmt 0 view .LVU520
 1628 006a B368     		ldr	r3, [r6, #8]
 214:lvgl/src/core/lv_obj_tree.c ****             i++;
 1629              		.loc 1 214 63 view .LVU521
 1630 006c 1A68     		ldr	r2, [r3]
 214:lvgl/src/core/lv_obj_tree.c ****             i++;
 1631              		.loc 1 214 73 view .LVU522
 1632 006e 631C     		adds	r3, r4, #1
 1633 0070 52F82310 		ldr	r1, [r2, r3, lsl #2]
 214:lvgl/src/core/lv_obj_tree.c ****             i++;
 1634              		.loc 1 214 44 view .LVU523
 1635 0074 42F82410 		str	r1, [r2, r4, lsl #2]
 215:lvgl/src/core/lv_obj_tree.c ****         }
 1636              		.loc 1 215 13 is_stmt 1 view .LVU524
 215:lvgl/src/core/lv_obj_tree.c ****         }
 1637              		.loc 1 215 14 is_stmt 0 view .LVU525
 1638 0078 1C46     		mov	r4, r3
 1639              	.LVL179:
 1640              	.L116:
 213:lvgl/src/core/lv_obj_tree.c ****             parent->spec_attr->children[i] = parent->spec_attr->children[i + 1];
 1641              		.loc 1 213 17 is_stmt 1 view .LVU526
 1642 007a A542     		cmp	r5, r4
 1643 007c F5DC     		bgt	.L119
 1644 007e E7E7     		b	.L118
 1645              		.cfi_endproc
 1646              	.LFE162:
 1648              		.section	.text.lv_obj_swap,"ax",%progbits
 1649              		.align	1
 1650              		.global	lv_obj_swap
 1651              		.syntax unified
 1652              		.thumb
 1653              		.thumb_func
 1655              	lv_obj_swap:
 1656              	.LVL180:
 1657              	.LFB163:
 225:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj1, MY_CLASS);
 1658              		.loc 1 225 1 view -0
 1659              		.cfi_startproc
 1660              		@ args = 0, pretend = 0, frame = 0
 1661              		@ frame_needed = 0, uses_anonymous_args = 0
 225:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj1, MY_CLASS);
 1662              		.loc 1 225 1 is_stmt 0 view .LVU528
 1663 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 1664              	.LCFI15:
 1665              		.cfi_def_cfa_offset 32
 1666              		.cfi_offset 3, -32
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 49


 1667              		.cfi_offset 4, -28
 1668              		.cfi_offset 5, -24
 1669              		.cfi_offset 6, -20
 1670              		.cfi_offset 7, -16
 1671              		.cfi_offset 8, -12
 1672              		.cfi_offset 9, -8
 1673              		.cfi_offset 14, -4
 1674 0004 0546     		mov	r5, r0
 1675 0006 0C46     		mov	r4, r1
 226:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj2, MY_CLASS);
 1676              		.loc 1 226 5 is_stmt 1 view .LVU529
 226:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj2, MY_CLASS);
 1677              		.loc 1 226 5 view .LVU530
 226:lvgl/src/core/lv_obj_tree.c ****     LV_ASSERT_OBJ(obj2, MY_CLASS);
 1678              		.loc 1 226 5 view .LVU531
 227:lvgl/src/core/lv_obj_tree.c **** 
 1679              		.loc 1 227 5 view .LVU532
 227:lvgl/src/core/lv_obj_tree.c **** 
 1680              		.loc 1 227 5 view .LVU533
 227:lvgl/src/core/lv_obj_tree.c **** 
 1681              		.loc 1 227 5 view .LVU534
 229:lvgl/src/core/lv_obj_tree.c ****     lv_obj_t * parent2 = lv_obj_get_parent(obj2);
 1682              		.loc 1 229 5 view .LVU535
 229:lvgl/src/core/lv_obj_tree.c ****     lv_obj_t * parent2 = lv_obj_get_parent(obj2);
 1683              		.loc 1 229 25 is_stmt 0 view .LVU536
 1684 0008 FFF7FEFF 		bl	lv_obj_get_parent
 1685              	.LVL181:
 229:lvgl/src/core/lv_obj_tree.c ****     lv_obj_t * parent2 = lv_obj_get_parent(obj2);
 1686              		.loc 1 229 25 view .LVU537
 1687 000c 0646     		mov	r6, r0
 1688              	.LVL182:
 230:lvgl/src/core/lv_obj_tree.c **** 
 1689              		.loc 1 230 5 is_stmt 1 view .LVU538
 230:lvgl/src/core/lv_obj_tree.c **** 
 1690              		.loc 1 230 26 is_stmt 0 view .LVU539
 1691 000e 2046     		mov	r0, r4
 1692              	.LVL183:
 230:lvgl/src/core/lv_obj_tree.c **** 
 1693              		.loc 1 230 26 view .LVU540
 1694 0010 FFF7FEFF 		bl	lv_obj_get_parent
 1695              	.LVL184:
 1696 0014 0746     		mov	r7, r0
 1697              	.LVL185:
 232:lvgl/src/core/lv_obj_tree.c ****     uint_fast32_t index2 = lv_obj_get_index(obj2);
 1698              		.loc 1 232 5 is_stmt 1 view .LVU541
 232:lvgl/src/core/lv_obj_tree.c ****     uint_fast32_t index2 = lv_obj_get_index(obj2);
 1699              		.loc 1 232 28 is_stmt 0 view .LVU542
 1700 0016 2846     		mov	r0, r5
 1701              	.LVL186:
 232:lvgl/src/core/lv_obj_tree.c ****     uint_fast32_t index2 = lv_obj_get_index(obj2);
 1702              		.loc 1 232 28 view .LVU543
 1703 0018 FFF7FEFF 		bl	lv_obj_get_index
 1704              	.LVL187:
 1705 001c 8146     		mov	r9, r0
 1706              	.LVL188:
 233:lvgl/src/core/lv_obj_tree.c **** 
 1707              		.loc 1 233 5 is_stmt 1 view .LVU544
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 50


 233:lvgl/src/core/lv_obj_tree.c **** 
 1708              		.loc 1 233 28 is_stmt 0 view .LVU545
 1709 001e 2046     		mov	r0, r4
 1710              	.LVL189:
 233:lvgl/src/core/lv_obj_tree.c **** 
 1711              		.loc 1 233 28 view .LVU546
 1712 0020 FFF7FEFF 		bl	lv_obj_get_index
 1713              	.LVL190:
 1714 0024 8046     		mov	r8, r0
 1715              	.LVL191:
 235:lvgl/src/core/lv_obj_tree.c ****     lv_event_send(parent, LV_EVENT_CHILD_DELETED, obj1);
 1716              		.loc 1 235 5 is_stmt 1 view .LVU547
 1717 0026 2246     		mov	r2, r4
 1718 0028 2421     		movs	r1, #36
 1719 002a 3846     		mov	r0, r7
 1720              	.LVL192:
 235:lvgl/src/core/lv_obj_tree.c ****     lv_event_send(parent, LV_EVENT_CHILD_DELETED, obj1);
 1721              		.loc 1 235 5 is_stmt 0 view .LVU548
 1722 002c FFF7FEFF 		bl	lv_event_send
 1723              	.LVL193:
 236:lvgl/src/core/lv_obj_tree.c **** 
 1724              		.loc 1 236 5 is_stmt 1 view .LVU549
 1725 0030 2A46     		mov	r2, r5
 1726 0032 2421     		movs	r1, #36
 1727 0034 3046     		mov	r0, r6
 1728 0036 FFF7FEFF 		bl	lv_event_send
 1729              	.LVL194:
 238:lvgl/src/core/lv_obj_tree.c ****     parent2->spec_attr->children[index2] = obj1;
 1730              		.loc 1 238 5 view .LVU550
 238:lvgl/src/core/lv_obj_tree.c ****     parent2->spec_attr->children[index2] = obj1;
 1731              		.loc 1 238 11 is_stmt 0 view .LVU551
 1732 003a B368     		ldr	r3, [r6, #8]
 238:lvgl/src/core/lv_obj_tree.c ****     parent2->spec_attr->children[index2] = obj1;
 1733              		.loc 1 238 22 view .LVU552
 1734 003c 1B68     		ldr	r3, [r3]
 238:lvgl/src/core/lv_obj_tree.c ****     parent2->spec_attr->children[index2] = obj1;
 1735              		.loc 1 238 41 view .LVU553
 1736 003e 43F82940 		str	r4, [r3, r9, lsl #2]
 239:lvgl/src/core/lv_obj_tree.c **** 
 1737              		.loc 1 239 5 is_stmt 1 view .LVU554
 239:lvgl/src/core/lv_obj_tree.c **** 
 1738              		.loc 1 239 12 is_stmt 0 view .LVU555
 1739 0042 BB68     		ldr	r3, [r7, #8]
 239:lvgl/src/core/lv_obj_tree.c **** 
 1740              		.loc 1 239 23 view .LVU556
 1741 0044 1B68     		ldr	r3, [r3]
 239:lvgl/src/core/lv_obj_tree.c **** 
 1742              		.loc 1 239 42 view .LVU557
 1743 0046 43F82850 		str	r5, [r3, r8, lsl #2]
 241:lvgl/src/core/lv_obj_tree.c ****     lv_event_send(parent, LV_EVENT_CHILD_CREATED, obj2);
 1744              		.loc 1 241 5 is_stmt 1 view .LVU558
 1745 004a 2246     		mov	r2, r4
 1746 004c 2221     		movs	r1, #34
 1747 004e 3046     		mov	r0, r6
 1748 0050 FFF7FEFF 		bl	lv_event_send
 1749              	.LVL195:
 242:lvgl/src/core/lv_obj_tree.c ****     lv_event_send(parent2, LV_EVENT_CHILD_CHANGED, obj1);
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 51


 1750              		.loc 1 242 5 view .LVU559
 1751 0054 2246     		mov	r2, r4
 1752 0056 2321     		movs	r1, #35
 1753 0058 3046     		mov	r0, r6
 1754 005a FFF7FEFF 		bl	lv_event_send
 1755              	.LVL196:
 243:lvgl/src/core/lv_obj_tree.c ****     lv_event_send(parent2, LV_EVENT_CHILD_CREATED, obj1);
 1756              		.loc 1 243 5 view .LVU560
 1757 005e 2A46     		mov	r2, r5
 1758 0060 2221     		movs	r1, #34
 1759 0062 3846     		mov	r0, r7
 1760 0064 FFF7FEFF 		bl	lv_event_send
 1761              	.LVL197:
 244:lvgl/src/core/lv_obj_tree.c **** 
 1762              		.loc 1 244 5 view .LVU561
 1763 0068 2A46     		mov	r2, r5
 1764 006a 2321     		movs	r1, #35
 1765 006c 3846     		mov	r0, r7
 1766 006e FFF7FEFF 		bl	lv_event_send
 1767              	.LVL198:
 246:lvgl/src/core/lv_obj_tree.c **** 
 1768              		.loc 1 246 5 view .LVU562
 1769 0072 3046     		mov	r0, r6
 1770 0074 FFF7FEFF 		bl	lv_obj_invalidate
 1771              	.LVL199:
 248:lvgl/src/core/lv_obj_tree.c ****         lv_obj_invalidate(parent2);
 1772              		.loc 1 248 5 view .LVU563
 248:lvgl/src/core/lv_obj_tree.c ****         lv_obj_invalidate(parent2);
 1773              		.loc 1 248 7 is_stmt 0 view .LVU564
 1774 0078 BE42     		cmp	r6, r7
 1775 007a 02D0     		beq	.L123
 249:lvgl/src/core/lv_obj_tree.c ****     }
 1776              		.loc 1 249 9 is_stmt 1 view .LVU565
 1777 007c 3846     		mov	r0, r7
 1778 007e FFF7FEFF 		bl	lv_obj_invalidate
 1779              	.LVL200:
 1780              	.L123:
 251:lvgl/src/core/lv_obj_tree.c **** }
 1781              		.loc 1 251 5 view .LVU566
 1782 0082 2146     		mov	r1, r4
 1783 0084 2846     		mov	r0, r5
 1784 0086 FFF7FEFF 		bl	lv_group_swap_obj
 1785              	.LVL201:
 252:lvgl/src/core/lv_obj_tree.c **** 
 1786              		.loc 1 252 1 is_stmt 0 view .LVU567
 1787 008a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 252:lvgl/src/core/lv_obj_tree.c **** 
 1788              		.loc 1 252 1 view .LVU568
 1789              		.cfi_endproc
 1790              	.LFE163:
 1792              		.section	.text.lv_obj_tree_walk,"ax",%progbits
 1793              		.align	1
 1794              		.global	lv_obj_tree_walk
 1795              		.syntax unified
 1796              		.thumb
 1797              		.thumb_func
 1799              	lv_obj_tree_walk:
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 52


 1800              	.LVL202:
 1801              	.LFB170:
 341:lvgl/src/core/lv_obj_tree.c ****     walk_core(start_obj, cb, user_data);
 1802              		.loc 1 341 1 is_stmt 1 view -0
 1803              		.cfi_startproc
 1804              		@ args = 0, pretend = 0, frame = 0
 1805              		@ frame_needed = 0, uses_anonymous_args = 0
 341:lvgl/src/core/lv_obj_tree.c ****     walk_core(start_obj, cb, user_data);
 1806              		.loc 1 341 1 is_stmt 0 view .LVU570
 1807 0000 08B5     		push	{r3, lr}
 1808              	.LCFI16:
 1809              		.cfi_def_cfa_offset 8
 1810              		.cfi_offset 3, -8
 1811              		.cfi_offset 14, -4
 342:lvgl/src/core/lv_obj_tree.c **** }
 1812              		.loc 1 342 5 is_stmt 1 view .LVU571
 1813 0002 FFF7FEFF 		bl	walk_core
 1814              	.LVL203:
 343:lvgl/src/core/lv_obj_tree.c **** 
 1815              		.loc 1 343 1 is_stmt 0 view .LVU572
 1816 0006 08BD     		pop	{r3, pc}
 1817              		.cfi_endproc
 1818              	.LFE170:
 1820              		.text
 1821              	.Letext0:
 1822              		.file 3 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/lib/gcc/arm-none
 1823              		.file 4 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 1824              		.file 5 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 1825              		.file 6 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 1826              		.file 7 "lvgl/src/core/../misc/../font/../misc/lv_area.h"
 1827              		.file 8 "lvgl/src/core/../misc/../font/lv_font.h"
 1828              		.file 9 "lvgl/src/core/../misc/lv_types.h"
 1829              		.file 10 "lvgl/src/core/../misc/lv_color.h"
 1830              		.file 11 "lvgl/src/core/../misc/lv_txt.h"
 1831              		.file 12 "lvgl/src/core/../misc/lv_bidi.h"
 1832              		.file 13 "lvgl/src/core/../misc/lv_style.h"
 1833              		.file 14 "lvgl/src/core/../hal/../draw/lv_img_buf.h"
 1834              		.file 15 "lvgl/src/core/lv_obj.h"
 1835              		.file 16 "lvgl/src/core/../hal/../draw/lv_draw_rect.h"
 1836              		.file 17 "lvgl/src/core/../hal/../draw/lv_draw_label.h"
 1837              		.file 18 "lvgl/src/core/../hal/../draw/lv_draw_img.h"
 1838              		.file 19 "lvgl/src/core/../hal/../draw/lv_draw_line.h"
 1839              		.file 20 "lvgl/src/core/../hal/../draw/lv_draw_arc.h"
 1840              		.file 21 "lvgl/src/core/../hal/../draw/lv_draw.h"
 1841              		.file 22 "lvgl/src/core/../hal/../misc/lv_ll.h"
 1842              		.file 23 "lvgl/src/core/../hal/../misc/lv_timer.h"
 1843              		.file 24 "lvgl/src/core/../hal/lv_hal_disp.h"
 1844              		.file 25 "lvgl/src/core/../hal/lv_hal_indev.h"
 1845              		.file 26 "lvgl/src/core/lv_group.h"
 1846              		.file 27 "lvgl/src/core/lv_obj_tree.h"
 1847              		.file 28 "lvgl/src/core/lv_obj_scroll.h"
 1848              		.file 29 "lvgl/src/core/lv_obj_style.h"
 1849              		.file 30 "lvgl/src/core/lv_obj_class.h"
 1850              		.file 31 "lvgl/src/core/lv_event.h"
 1851              		.file 32 "lvgl/src/core/../misc/lv_async.h"
 1852              		.file 33 "lvgl/src/core/../hal/../draw/sw/../../core/lv_obj_pos.h"
 1853              		.file 34 "lvgl/src/core/../misc/lv_mem.h"
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 53


 1854              		.file 35 "lvgl/src/core/lv_indev.h"
 1855              		.file 36 "lvgl/src/core/../misc/lv_gc.h"
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 54


DEFINED SYMBOLS
                            *ABS*:00000000 lv_obj_tree.c
C:\usertemp\cc9mdkBP.s:20     .text.lv_obj_del_delayed:00000000 $t
C:\usertemp\cc9mdkBP.s:26     .text.lv_obj_del_delayed:00000000 lv_obj_del_delayed
C:\usertemp\cc9mdkBP.s:134    .text.lv_obj_del_delayed:0000002c $d
C:\usertemp\cc9mdkBP.s:1145   .text.lv_obj_del_anim_ready_cb:00000000 lv_obj_del_anim_ready_cb
C:\usertemp\cc9mdkBP.s:139    .text.lv_obj_del_async:00000000 $t
C:\usertemp\cc9mdkBP.s:145    .text.lv_obj_del_async:00000000 lv_obj_del_async
C:\usertemp\cc9mdkBP.s:173    .text.lv_obj_del_async:0000000c $d
C:\usertemp\cc9mdkBP.s:1175   .text.lv_obj_del_async_cb:00000000 lv_obj_del_async_cb
C:\usertemp\cc9mdkBP.s:178    .text.lv_obj_get_parent:00000000 $t
C:\usertemp\cc9mdkBP.s:184    .text.lv_obj_get_parent:00000000 lv_obj_get_parent
C:\usertemp\cc9mdkBP.s:212    .text.lv_obj_get_screen:00000000 $t
C:\usertemp\cc9mdkBP.s:218    .text.lv_obj_get_screen:00000000 lv_obj_get_screen
C:\usertemp\cc9mdkBP.s:253    .text.lv_obj_get_disp:00000000 $t
C:\usertemp\cc9mdkBP.s:259    .text.lv_obj_get_disp:00000000 lv_obj_get_disp
C:\usertemp\cc9mdkBP.s:342    .text.lv_obj_get_disp:00000038 $d
C:\usertemp\cc9mdkBP.s:347    .text.lv_obj_get_child:00000000 $t
C:\usertemp\cc9mdkBP.s:353    .text.lv_obj_get_child:00000000 lv_obj_get_child
C:\usertemp\cc9mdkBP.s:422    .text.lv_obj_get_child_cnt:00000000 $t
C:\usertemp\cc9mdkBP.s:428    .text.lv_obj_get_child_cnt:00000000 lv_obj_get_child_cnt
C:\usertemp\cc9mdkBP.s:461    .text.walk_core:00000000 $t
C:\usertemp\cc9mdkBP.s:466    .text.walk_core:00000000 walk_core
C:\usertemp\cc9mdkBP.s:627    .text.lv_obj_get_index:00000000 $t
C:\usertemp\cc9mdkBP.s:633    .text.lv_obj_get_index:00000000 lv_obj_get_index
C:\usertemp\cc9mdkBP.s:703    .text.obj_del_core:00000000 $t
C:\usertemp\cc9mdkBP.s:708    .text.obj_del_core:00000000 obj_del_core
C:\usertemp\cc9mdkBP.s:1004   .text.lv_obj_del:00000000 $t
C:\usertemp\cc9mdkBP.s:1010   .text.lv_obj_del:00000000 lv_obj_del
C:\usertemp\cc9mdkBP.s:1139   .text.lv_obj_del_anim_ready_cb:00000000 $t
C:\usertemp\cc9mdkBP.s:1170   .text.lv_obj_del_async_cb:00000000 $t
C:\usertemp\cc9mdkBP.s:1200   .text.lv_obj_clean:00000000 $t
C:\usertemp\cc9mdkBP.s:1206   .text.lv_obj_clean:00000000 lv_obj_clean
C:\usertemp\cc9mdkBP.s:1287   .text.lv_obj_set_parent:00000000 $t
C:\usertemp\cc9mdkBP.s:1293   .text.lv_obj_set_parent:00000000 lv_obj_set_parent
C:\usertemp\cc9mdkBP.s:1498   .text.lv_obj_move_to_index:00000000 $t
C:\usertemp\cc9mdkBP.s:1504   .text.lv_obj_move_to_index:00000000 lv_obj_move_to_index
C:\usertemp\cc9mdkBP.s:1649   .text.lv_obj_swap:00000000 $t
C:\usertemp\cc9mdkBP.s:1655   .text.lv_obj_swap:00000000 lv_obj_swap
C:\usertemp\cc9mdkBP.s:1793   .text.lv_obj_tree_walk:00000000 $t
C:\usertemp\cc9mdkBP.s:1799   .text.lv_obj_tree_walk:00000000 lv_obj_tree_walk

UNDEFINED SYMBOLS
lv_anim_init
lv_anim_start
lv_async_call
_lv_ll_get_head
_lv_ll_get_next
_lv_disp_ll
lv_disp_get_next
lv_event_send
lv_obj_get_group
lv_indev_get_next
lv_indev_reset
lv_indev_get_obj_act
_lv_obj_destruct
lv_mem_realloc
ARM GAS  C:\usertemp\cc9mdkBP.s 			page 55


lv_mem_free
lv_obj_invalidate
lv_obj_scrollbar_invalidate
lv_obj_readjust_scroll
lv_obj_scroll_to
lv_obj_allocate_spec_attr
lv_obj_mark_layout_as_dirty
lv_group_swap_obj
