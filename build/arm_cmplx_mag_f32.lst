ARM GAS  C:\usertemp\ccIaK9yf.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"arm_cmplx_mag_f32.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c"
  19              		.section	.text.arm_cmplx_mag_f32,"ax",%progbits
  20              		.align	1
  21              		.global	arm_cmplx_mag_f32
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	arm_cmplx_mag_f32:
  27              	.LVL0:
  28              	.LFB145:
   1:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** /* ----------------------------------------------------------------------
   2:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * Project:      CMSIS DSP Library
   3:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * Title:        arm_cmplx_mag_f32.c
   4:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * Description:  Floating-point complex magnitude
   5:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  *
   6:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * $Date:        18. March 2019
   7:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * $Revision:    V1.6.0
   8:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  *
   9:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * Target Processor: Cortex-M cores
  10:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * -------------------------------------------------------------------- */
  11:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** /*
  12:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * Copyright (C) 2010-2019 ARM Limited or its affiliates. All rights reserved.
  13:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  *
  14:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * SPDX-License-Identifier: Apache-2.0
  15:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  *
  16:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  17:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * not use this file except in compliance with the License.
  18:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * You may obtain a copy of the License at
  19:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  *
  20:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * www.apache.org/licenses/LICENSE-2.0
  21:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  *
  22:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * Unless required by applicable law or agreed to in writing, software
  23:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  24:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  25:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * See the License for the specific language governing permissions and
  26:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  * limitations under the License.
  27:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  */
  28:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  29:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** #include "arm_math.h"
  30:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 2


  31:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** /**
  32:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   @ingroup groupCmplxMath
  33:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  */
  34:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  35:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** /**
  36:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   @defgroup cmplx_mag Complex Magnitude
  37:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  38:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   Computes the magnitude of the elements of a complex data vector.
  39:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  40:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   The <code>pSrc</code> points to the source data and
  41:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   <code>pDst</code> points to the where the result should be written.
  42:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   <code>numSamples</code> specifies the number of complex samples
  43:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   in the input array and the data is stored in an interleaved fashion
  44:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   (real, imag, real, imag, ...).
  45:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   The input array has a total of <code>2*numSamples</code> values;
  46:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   the output array has a total of <code>numSamples</code> values.
  47:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  48:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   The underlying algorithm is used:
  49:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  50:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   <pre>
  51:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   for (n = 0; n < numSamples; n++) {
  52:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****       pDst[n] = sqrt(pSrc[(2*n)+0]^2 + pSrc[(2*n)+1]^2);
  53:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   }
  54:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   </pre>
  55:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  56:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   There are separate functions for floating-point, Q15, and Q31 data types.
  57:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  */
  58:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  59:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** /**
  60:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   @addtogroup cmplx_mag
  61:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   @{
  62:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  */
  63:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  64:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** /**
  65:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   @brief         Floating-point complex magnitude.
  66:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   @param[in]     pSrc        points to input vector
  67:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   @param[out]    pDst        points to output vector
  68:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   @param[in]     numSamples  number of samples in each vector
  69:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   @return        none
  70:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****  */
  71:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  72:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** void arm_cmplx_mag_f32(
  73:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   const float32_t * pSrc,
  74:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****         float32_t * pDst,
  75:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****         uint32_t numSamples)
  76:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** {
  29              		.loc 1 76 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 76 1 is_stmt 0 view .LVU1
  34 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 24
  37              		.cfi_offset 3, -24
  38              		.cfi_offset 4, -20
  39              		.cfi_offset 5, -16
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 3


  40              		.cfi_offset 6, -12
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 0E46     		mov	r6, r1
  44 0004 1546     		mov	r5, r2
  77:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   uint32_t blkCnt;                               /* loop counter */
  45              		.loc 1 77 3 is_stmt 1 view .LVU2
  78:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   float32_t real, imag;                      /* Temporary variables to hold input values */
  46              		.loc 1 78 3 view .LVU3
  79:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  80:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** #if defined(ARM_MATH_NEON)
  81:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  82:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   float32x4x2_t vecA;
  83:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   float32x4_t vRealA;
  84:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   float32x4_t vImagA;
  85:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   float32x4_t vMagSqA;
  86:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  87:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   float32x4x2_t vecB;
  88:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   float32x4_t vRealB;
  89:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   float32x4_t vImagB;
  90:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   float32x4_t vMagSqB;
  91:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  92:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   /* Loop unrolling: Compute 8 outputs at a time */
  93:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   blkCnt = numSamples >> 3;
  94:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  95:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   while (blkCnt > 0U)
  96:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   {
  97:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     /* out = sqrt((real * real) + (imag * imag)) */
  98:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  99:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     vecA = vld2q_f32(pSrc);
 100:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     pSrc += 8;
 101:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 102:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     vecB = vld2q_f32(pSrc);
 103:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     pSrc += 8;
 104:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 105:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     vRealA = vmulq_f32(vecA.val[0], vecA.val[0]);
 106:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     vImagA = vmulq_f32(vecA.val[1], vecA.val[1]);
 107:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     vMagSqA = vaddq_f32(vRealA, vImagA);
 108:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 109:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     vRealB = vmulq_f32(vecB.val[0], vecB.val[0]);
 110:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     vImagB = vmulq_f32(vecB.val[1], vecB.val[1]);
 111:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     vMagSqB = vaddq_f32(vRealB, vImagB);
 112:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 113:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     /* Store the result in the destination buffer. */
 114:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     vst1q_f32(pDst, __arm_vec_sqrt_f32_neon(vMagSqA));
 115:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     pDst += 4;
 116:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 117:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     vst1q_f32(pDst, __arm_vec_sqrt_f32_neon(vMagSqB));
 118:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     pDst += 4;
 119:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 120:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     /* Decrement the loop counter */
 121:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     blkCnt--;
 122:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   }
 123:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 124:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   blkCnt = numSamples & 7;
 125:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 126:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** #else
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 4


 127:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 128:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** #if defined (ARM_MATH_LOOPUNROLL)
 129:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 130:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   /* Loop unrolling: Compute 4 outputs at a time */
 131:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   blkCnt = numSamples >> 2U;
 132:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 133:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   while (blkCnt > 0U)
 134:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   {
 135:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     /* C[0] = sqrt(A[0] * A[0] + A[1] * A[1]) */
 136:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 137:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     real = *pSrc++;
 138:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     imag = *pSrc++;
 139:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 140:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     /* store result in destination buffer. */
 141:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     arm_sqrt_f32((real * real) + (imag * imag), pDst++);
 142:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 143:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     real = *pSrc++;
 144:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     imag = *pSrc++;
 145:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     arm_sqrt_f32((real * real) + (imag * imag), pDst++);
 146:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 147:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     real = *pSrc++;
 148:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     imag = *pSrc++;
 149:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     arm_sqrt_f32((real * real) + (imag * imag), pDst++);
 150:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 151:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     real = *pSrc++;
 152:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     imag = *pSrc++;
 153:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     arm_sqrt_f32((real * real) + (imag * imag), pDst++);
 154:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 155:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     /* Decrement loop counter */
 156:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     blkCnt--;
 157:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   }
 158:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 159:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   /* Loop unrolling: Compute remaining outputs */
 160:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   blkCnt = numSamples % 0x4U;
 161:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 162:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** #else
 163:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 164:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   /* Initialize blkCnt with number of samples */
 165:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   blkCnt = numSamples;
  47              		.loc 1 165 3 view .LVU4
  48              	.LVL1:
 166:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 167:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** #endif /* #if defined (ARM_MATH_LOOPUNROLL) */
 168:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** #endif /* #if defined(ARM_MATH_NEON) */
 169:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 170:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   while (blkCnt > 0U)
  49              		.loc 1 170 3 view .LVU5
  50              		.loc 1 170 9 is_stmt 0 view .LVU6
  51 0006 04E0     		b	.L2
  52              	.LVL2:
  53              	.L8:
  54              	.LBB4:
  55              	.LBB5:
  56              		.file 2 "Drivers/CMSIS/DSP/Include/arm_math.h"
   1:Drivers/CMSIS/DSP/Include/arm_math.h **** /******************************************************************************
   2:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @file     arm_math.h
   3:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @brief    Public header file for CMSIS DSP Library
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 5


   4:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @version  V1.6.0
   5:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @date     18. March 2019
   6:Drivers/CMSIS/DSP/Include/arm_math.h ****  ******************************************************************************/
   7:Drivers/CMSIS/DSP/Include/arm_math.h **** /*
   8:Drivers/CMSIS/DSP/Include/arm_math.h ****  * Copyright (c) 2010-2019 Arm Limited or its affiliates. All rights reserved.
   9:Drivers/CMSIS/DSP/Include/arm_math.h ****  *
  10:Drivers/CMSIS/DSP/Include/arm_math.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/DSP/Include/arm_math.h ****  *
  12:Drivers/CMSIS/DSP/Include/arm_math.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/DSP/Include/arm_math.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/DSP/Include/arm_math.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/DSP/Include/arm_math.h ****  *
  16:Drivers/CMSIS/DSP/Include/arm_math.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/DSP/Include/arm_math.h ****  *
  18:Drivers/CMSIS/DSP/Include/arm_math.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/DSP/Include/arm_math.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/DSP/Include/arm_math.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/DSP/Include/arm_math.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/DSP/Include/arm_math.h ****  * limitations under the License.
  23:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
  24:Drivers/CMSIS/DSP/Include/arm_math.h **** 
  25:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
  26:Drivers/CMSIS/DSP/Include/arm_math.h ****    \mainpage CMSIS DSP Software Library
  27:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  28:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Introduction
  29:Drivers/CMSIS/DSP/Include/arm_math.h ****    * ------------
  30:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  31:Drivers/CMSIS/DSP/Include/arm_math.h ****    * This user manual describes the CMSIS DSP software library,
  32:Drivers/CMSIS/DSP/Include/arm_math.h ****    * a suite of common signal processing functions for use on Cortex-M processor based devices.
  33:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  34:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The library is divided into a number of functions each covering a specific category:
  35:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - Basic math functions
  36:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - Fast math functions
  37:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - Complex math functions
  38:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - Filters
  39:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - Matrix functions
  40:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - Transform functions
  41:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - Motor control functions
  42:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - Statistical functions
  43:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - Support functions
  44:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - Interpolation functions
  45:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  46:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The library has separate functions for operating on 8-bit integers, 16-bit integers,
  47:Drivers/CMSIS/DSP/Include/arm_math.h ****    * 32-bit integer and 32-bit floating-point values.
  48:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  49:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Using the Library
  50:Drivers/CMSIS/DSP/Include/arm_math.h ****    * ------------
  51:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  52:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The library installer contains prebuilt versions of the libraries in the <code>Lib</code> fold
  53:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7lfdp_math.lib (Cortex-M7, Little endian, Double Precision Floating Point Unit)
  54:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7bfdp_math.lib (Cortex-M7, Big endian, Double Precision Floating Point Unit)
  55:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7lfsp_math.lib (Cortex-M7, Little endian, Single Precision Floating Point Unit)
  56:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7bfsp_math.lib (Cortex-M7, Big endian and Single Precision Floating Point Unit on
  57:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7l_math.lib (Cortex-M7, Little endian)
  58:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM7b_math.lib (Cortex-M7, Big endian)
  59:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4lf_math.lib (Cortex-M4, Little endian, Floating Point Unit)
  60:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4bf_math.lib (Cortex-M4, Big endian, Floating Point Unit)
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 6


  61:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4l_math.lib (Cortex-M4, Little endian)
  62:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM4b_math.lib (Cortex-M4, Big endian)
  63:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM3l_math.lib (Cortex-M3, Little endian)
  64:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM3b_math.lib (Cortex-M3, Big endian)
  65:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM0l_math.lib (Cortex-M0 / Cortex-M0+, Little endian)
  66:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM0b_math.lib (Cortex-M0 / Cortex-M0+, Big endian)
  67:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MBLl_math.lib (Armv8-M Baseline, Little endian)
  68:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLl_math.lib (Armv8-M Mainline, Little endian)
  69:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLlfsp_math.lib (Armv8-M Mainline, Little endian, Single Precision Floating Point 
  70:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLld_math.lib (Armv8-M Mainline, Little endian, DSP instructions)
  71:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_ARMv8MMLldfsp_math.lib (Armv8-M Mainline, Little endian, DSP instructions, Single Precis
  72:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  73:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The library functions are declared in the public file <code>arm_math.h</code> which is placed 
  74:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Simply include this file and link the appropriate library in the application and begin calling
  75:Drivers/CMSIS/DSP/Include/arm_math.h ****    * public header file <code> arm_math.h</code> for Cortex-M cores with little endian and big endi
  76:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  77:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  78:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Examples
  79:Drivers/CMSIS/DSP/Include/arm_math.h ****    * --------
  80:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  81:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The library ships with a number of examples which demonstrate how to use the library functions
  82:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  83:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Toolchain Support
  84:Drivers/CMSIS/DSP/Include/arm_math.h ****    * ------------
  85:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  86:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The library has been developed and tested with MDK version 5.14.0.0
  87:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The library is being tested in GCC and IAR toolchains and updates on this activity will be mad
  88:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  89:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Building the Library
  90:Drivers/CMSIS/DSP/Include/arm_math.h ****    * ------------
  91:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  92:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The library installer contains a project file to rebuild libraries on MDK toolchain in the <co
  93:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - arm_cortexM_math.uvprojx
  94:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  95:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  96:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The libraries can be built by opening the arm_cortexM_math.uvprojx project in MDK-ARM, selecti
  97:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
  98:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Preprocessor Macros
  99:Drivers/CMSIS/DSP/Include/arm_math.h ****    * ------------
 100:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
 101:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Each library project have different preprocessor macros.
 102:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
 103:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_BIG_ENDIAN:
 104:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
 105:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_BIG_ENDIAN to build the library for big endian targets. By default libra
 106:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
 107:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_MATRIX_CHECK:
 108:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
 109:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_MATRIX_CHECK for checking on the input and output sizes of matrices
 110:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
 111:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_ROUNDING:
 112:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
 113:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_ROUNDING for rounding on support functions
 114:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
 115:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_LOOPUNROLL:
 116:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
 117:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_LOOPUNROLL to enable manual loop unrolling in DSP functions
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 7


 118:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
 119:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_NEON:
 120:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
 121:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_NEON to enable Neon versions of the DSP functions.
 122:Drivers/CMSIS/DSP/Include/arm_math.h ****    * It is not enabled by default when Neon is available because performances are 
 123:Drivers/CMSIS/DSP/Include/arm_math.h ****    * dependent on the compiler and target architecture.
 124:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
 125:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - ARM_MATH_NEON_EXPERIMENTAL:
 126:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
 127:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Define macro ARM_MATH_NEON_EXPERIMENTAL to enable experimental Neon versions of 
 128:Drivers/CMSIS/DSP/Include/arm_math.h ****    * of some DSP functions. Experimental Neon versions currently do not have better
 129:Drivers/CMSIS/DSP/Include/arm_math.h ****    * performances than the scalar versions.
 130:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
 131:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <hr>
 132:Drivers/CMSIS/DSP/Include/arm_math.h ****    * CMSIS-DSP in ARM::CMSIS Pack
 133:Drivers/CMSIS/DSP/Include/arm_math.h ****    * -----------------------------
 134:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
 135:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The following files relevant to CMSIS-DSP are present in the <b>ARM::CMSIS</b> Pack directorie
 136:Drivers/CMSIS/DSP/Include/arm_math.h ****    * |File/Folder                      |Content                                                    
 137:Drivers/CMSIS/DSP/Include/arm_math.h ****    * |---------------------------------|-----------------------------------------------------------
 138:Drivers/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\Documentation\\DSP     | This documentation                                        
 139:Drivers/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\DSP_Lib_TestSuite | DSP_Lib test suite                                        
 140:Drivers/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Examples          | Example projects demonstrating the usage of the library fu
 141:Drivers/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Include           | DSP_Lib include files                                     
 142:Drivers/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Lib               | DSP_Lib binaries                                          
 143:Drivers/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Projects          | Projects to rebuild DSP_Lib binaries                      
 144:Drivers/CMSIS/DSP/Include/arm_math.h ****    * |\b CMSIS\\DSP\\Source            | DSP_Lib source files                                      
 145:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
 146:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <hr>
 147:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Revision History of CMSIS-DSP
 148:Drivers/CMSIS/DSP/Include/arm_math.h ****    * ------------
 149:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Please refer to \ref ChangeLog_pg.
 150:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 151:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 152:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 153:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 154:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupMath Basic Math Functions
 155:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 156:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 157:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 158:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupFastMath Fast Math Functions
 159:Drivers/CMSIS/DSP/Include/arm_math.h ****  * This set of functions provides a fast approximation to sine, cosine, and square root.
 160:Drivers/CMSIS/DSP/Include/arm_math.h ****  * As compared to most of the other functions in the CMSIS math library, the fast math functions
 161:Drivers/CMSIS/DSP/Include/arm_math.h ****  * operate on individual values and not arrays.
 162:Drivers/CMSIS/DSP/Include/arm_math.h ****  * There are separate functions for Q15, Q31, and floating-point data.
 163:Drivers/CMSIS/DSP/Include/arm_math.h ****  *
 164:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 165:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 166:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 167:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupCmplxMath Complex Math Functions
 168:Drivers/CMSIS/DSP/Include/arm_math.h ****  * This set of functions operates on complex data vectors.
 169:Drivers/CMSIS/DSP/Include/arm_math.h ****  * The data in the complex arrays is stored in an interleaved fashion
 170:Drivers/CMSIS/DSP/Include/arm_math.h ****  * (real, imag, real, imag, ...).
 171:Drivers/CMSIS/DSP/Include/arm_math.h ****  * In the API functions, the number of samples in a complex array refers
 172:Drivers/CMSIS/DSP/Include/arm_math.h ****  * to the number of complex values; the array contains twice this number of
 173:Drivers/CMSIS/DSP/Include/arm_math.h ****  * real values.
 174:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 8


 175:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 176:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 177:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupFilters Filtering Functions
 178:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 179:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 180:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 181:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupMatrix Matrix Functions
 182:Drivers/CMSIS/DSP/Include/arm_math.h ****  *
 183:Drivers/CMSIS/DSP/Include/arm_math.h ****  * This set of functions provides basic matrix math operations.
 184:Drivers/CMSIS/DSP/Include/arm_math.h ****  * The functions operate on matrix data structures.  For example,
 185:Drivers/CMSIS/DSP/Include/arm_math.h ****  * the type
 186:Drivers/CMSIS/DSP/Include/arm_math.h ****  * definition for the floating-point matrix structure is shown
 187:Drivers/CMSIS/DSP/Include/arm_math.h ****  * below:
 188:Drivers/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 189:Drivers/CMSIS/DSP/Include/arm_math.h ****  *     typedef struct
 190:Drivers/CMSIS/DSP/Include/arm_math.h ****  *     {
 191:Drivers/CMSIS/DSP/Include/arm_math.h ****  *       uint16_t numRows;     // number of rows of the matrix.
 192:Drivers/CMSIS/DSP/Include/arm_math.h ****  *       uint16_t numCols;     // number of columns of the matrix.
 193:Drivers/CMSIS/DSP/Include/arm_math.h ****  *       float32_t *pData;     // points to the data of the matrix.
 194:Drivers/CMSIS/DSP/Include/arm_math.h ****  *     } arm_matrix_instance_f32;
 195:Drivers/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 196:Drivers/CMSIS/DSP/Include/arm_math.h ****  * There are similar definitions for Q15 and Q31 data types.
 197:Drivers/CMSIS/DSP/Include/arm_math.h ****  *
 198:Drivers/CMSIS/DSP/Include/arm_math.h ****  * The structure specifies the size of the matrix and then points to
 199:Drivers/CMSIS/DSP/Include/arm_math.h ****  * an array of data.  The array is of size <code>numRows X numCols</code>
 200:Drivers/CMSIS/DSP/Include/arm_math.h ****  * and the values are arranged in row order.  That is, the
 201:Drivers/CMSIS/DSP/Include/arm_math.h ****  * matrix element (i, j) is stored at:
 202:Drivers/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 203:Drivers/CMSIS/DSP/Include/arm_math.h ****  *     pData[i*numCols + j]
 204:Drivers/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 205:Drivers/CMSIS/DSP/Include/arm_math.h ****  *
 206:Drivers/CMSIS/DSP/Include/arm_math.h ****  * \par Init Functions
 207:Drivers/CMSIS/DSP/Include/arm_math.h ****  * There is an associated initialization function for each type of matrix
 208:Drivers/CMSIS/DSP/Include/arm_math.h ****  * data structure.
 209:Drivers/CMSIS/DSP/Include/arm_math.h ****  * The initialization function sets the values of the internal structure fields.
 210:Drivers/CMSIS/DSP/Include/arm_math.h ****  * Refer to \ref arm_mat_init_f32(), \ref arm_mat_init_q31() and \ref arm_mat_init_q15()
 211:Drivers/CMSIS/DSP/Include/arm_math.h ****  * for floating-point, Q31 and Q15 types,  respectively.
 212:Drivers/CMSIS/DSP/Include/arm_math.h ****  *
 213:Drivers/CMSIS/DSP/Include/arm_math.h ****  * \par
 214:Drivers/CMSIS/DSP/Include/arm_math.h ****  * Use of the initialization function is optional. However, if initialization function is used
 215:Drivers/CMSIS/DSP/Include/arm_math.h ****  * then the instance structure cannot be placed into a const data section.
 216:Drivers/CMSIS/DSP/Include/arm_math.h ****  * To place the instance structure in a const data
 217:Drivers/CMSIS/DSP/Include/arm_math.h ****  * section, manually initialize the data structure.  For example:
 218:Drivers/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 219:Drivers/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_f32 S = {nRows, nColumns, pData};</code>
 220:Drivers/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_q31 S = {nRows, nColumns, pData};</code>
 221:Drivers/CMSIS/DSP/Include/arm_math.h ****  * <code>arm_matrix_instance_q15 S = {nRows, nColumns, pData};</code>
 222:Drivers/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 223:Drivers/CMSIS/DSP/Include/arm_math.h ****  * where <code>nRows</code> specifies the number of rows, <code>nColumns</code>
 224:Drivers/CMSIS/DSP/Include/arm_math.h ****  * specifies the number of columns, and <code>pData</code> points to the
 225:Drivers/CMSIS/DSP/Include/arm_math.h ****  * data array.
 226:Drivers/CMSIS/DSP/Include/arm_math.h ****  *
 227:Drivers/CMSIS/DSP/Include/arm_math.h ****  * \par Size Checking
 228:Drivers/CMSIS/DSP/Include/arm_math.h ****  * By default all of the matrix functions perform size checking on the input and
 229:Drivers/CMSIS/DSP/Include/arm_math.h ****  * output matrices. For example, the matrix addition function verifies that the
 230:Drivers/CMSIS/DSP/Include/arm_math.h ****  * two input matrices and the output matrix all have the same number of rows and
 231:Drivers/CMSIS/DSP/Include/arm_math.h ****  * columns. If the size check fails the functions return:
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 9


 232:Drivers/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 233:Drivers/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_SIZE_MISMATCH
 234:Drivers/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 235:Drivers/CMSIS/DSP/Include/arm_math.h ****  * Otherwise the functions return
 236:Drivers/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 237:Drivers/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_SUCCESS
 238:Drivers/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 239:Drivers/CMSIS/DSP/Include/arm_math.h ****  * There is some overhead associated with this matrix size checking.
 240:Drivers/CMSIS/DSP/Include/arm_math.h ****  * The matrix size checking is enabled via the \#define
 241:Drivers/CMSIS/DSP/Include/arm_math.h ****  * <pre>
 242:Drivers/CMSIS/DSP/Include/arm_math.h ****  *     ARM_MATH_MATRIX_CHECK
 243:Drivers/CMSIS/DSP/Include/arm_math.h ****  * </pre>
 244:Drivers/CMSIS/DSP/Include/arm_math.h ****  * within the library project settings.  By default this macro is defined
 245:Drivers/CMSIS/DSP/Include/arm_math.h ****  * and size checking is enabled. By changing the project settings and
 246:Drivers/CMSIS/DSP/Include/arm_math.h ****  * undefining this macro size checking is eliminated and the functions
 247:Drivers/CMSIS/DSP/Include/arm_math.h ****  * run a bit faster. With size checking disabled the functions always
 248:Drivers/CMSIS/DSP/Include/arm_math.h ****  * return <code>ARM_MATH_SUCCESS</code>.
 249:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 250:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 251:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 252:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupTransforms Transform Functions
 253:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 254:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 255:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 256:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupController Controller Functions
 257:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 258:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 259:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 260:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupStats Statistics Functions
 261:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 262:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 263:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 264:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupSupport Support Functions
 265:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 266:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 267:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 268:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupInterpolation Interpolation Functions
 269:Drivers/CMSIS/DSP/Include/arm_math.h ****  * These functions perform 1- and 2-dimensional interpolation of data.
 270:Drivers/CMSIS/DSP/Include/arm_math.h ****  * Linear interpolation is used for 1-dimensional data and
 271:Drivers/CMSIS/DSP/Include/arm_math.h ****  * bilinear interpolation is used for 2-dimensional data.
 272:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 273:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 274:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 275:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @defgroup groupExamples Examples
 276:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 277:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 278:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 279:Drivers/CMSIS/DSP/Include/arm_math.h **** #ifndef _ARM_MATH_H
 280:Drivers/CMSIS/DSP/Include/arm_math.h **** #define _ARM_MATH_H
 281:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 282:Drivers/CMSIS/DSP/Include/arm_math.h **** /* Compiler specific diagnostic adjustment */
 283:Drivers/CMSIS/DSP/Include/arm_math.h **** #if   defined ( __CC_ARM )
 284:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 285:Drivers/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 286:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 287:Drivers/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __GNUC__ )
 288:Drivers/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic push
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 10


 289:Drivers/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wsign-conversion"
 290:Drivers/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wconversion"
 291:Drivers/CMSIS/DSP/Include/arm_math.h ****   #pragma GCC diagnostic ignored "-Wunused-parameter"
 292:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 293:Drivers/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ICCARM__ )
 294:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 295:Drivers/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 296:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 297:Drivers/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __CSMC__ )
 298:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 299:Drivers/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TASKING__ )
 300:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 301:Drivers/CMSIS/DSP/Include/arm_math.h **** #elif defined ( _MSC_VER )
 302:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 303:Drivers/CMSIS/DSP/Include/arm_math.h **** #else
 304:Drivers/CMSIS/DSP/Include/arm_math.h ****   #error Unknown compiler
 305:Drivers/CMSIS/DSP/Include/arm_math.h **** #endif
 306:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 307:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 308:Drivers/CMSIS/DSP/Include/arm_math.h **** /* Included for instrinsics definitions */
 309:Drivers/CMSIS/DSP/Include/arm_math.h **** #if !defined ( _MSC_VER )
 310:Drivers/CMSIS/DSP/Include/arm_math.h **** #include "cmsis_compiler.h"
 311:Drivers/CMSIS/DSP/Include/arm_math.h **** #else
 312:Drivers/CMSIS/DSP/Include/arm_math.h **** #include <stdint.h>
 313:Drivers/CMSIS/DSP/Include/arm_math.h **** #define __STATIC_FORCEINLINE static __forceinline
 314:Drivers/CMSIS/DSP/Include/arm_math.h **** #define __ALIGNED(x) __declspec(align(x))
 315:Drivers/CMSIS/DSP/Include/arm_math.h **** #define LOW_OPTIMIZATION_ENTER
 316:Drivers/CMSIS/DSP/Include/arm_math.h **** #define LOW_OPTIMIZATION_EXIT
 317:Drivers/CMSIS/DSP/Include/arm_math.h **** #define IAR_ONLY_LOW_OPTIMIZATION_ENTER 
 318:Drivers/CMSIS/DSP/Include/arm_math.h **** #define IAR_ONLY_LOW_OPTIMIZATION_EXIT
 319:Drivers/CMSIS/DSP/Include/arm_math.h **** #endif
 320:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 321:Drivers/CMSIS/DSP/Include/arm_math.h **** #include "string.h"
 322:Drivers/CMSIS/DSP/Include/arm_math.h **** #include "math.h"
 323:Drivers/CMSIS/DSP/Include/arm_math.h **** #include "float.h"
 324:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 325:Drivers/CMSIS/DSP/Include/arm_math.h **** /* evaluate ARM DSP feature */
 326:Drivers/CMSIS/DSP/Include/arm_math.h **** #if (defined (__ARM_FEATURE_DSP) && (__ARM_FEATURE_DSP == 1))
 327:Drivers/CMSIS/DSP/Include/arm_math.h ****   #define ARM_MATH_DSP                   1
 328:Drivers/CMSIS/DSP/Include/arm_math.h **** #endif
 329:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 330:Drivers/CMSIS/DSP/Include/arm_math.h **** #if defined(__ARM_NEON)
 331:Drivers/CMSIS/DSP/Include/arm_math.h **** #include <arm_neon.h>
 332:Drivers/CMSIS/DSP/Include/arm_math.h **** #endif
 333:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 334:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 335:Drivers/CMSIS/DSP/Include/arm_math.h **** #ifdef   __cplusplus
 336:Drivers/CMSIS/DSP/Include/arm_math.h **** extern "C"
 337:Drivers/CMSIS/DSP/Include/arm_math.h **** {
 338:Drivers/CMSIS/DSP/Include/arm_math.h **** #endif
 339:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 340:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 341:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
 342:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for reciprocal calculation in Normalized LMS
 343:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 344:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 345:Drivers/CMSIS/DSP/Include/arm_math.h **** #define DELTA_Q31          (0x100)
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 11


 346:Drivers/CMSIS/DSP/Include/arm_math.h **** #define DELTA_Q15          0x5
 347:Drivers/CMSIS/DSP/Include/arm_math.h **** #define INDEX_MASK         0x0000003F
 348:Drivers/CMSIS/DSP/Include/arm_math.h **** #ifndef PI
 349:Drivers/CMSIS/DSP/Include/arm_math.h ****   #define PI               3.14159265358979f
 350:Drivers/CMSIS/DSP/Include/arm_math.h **** #endif
 351:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 352:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
 353:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Fast math approximations
 354:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 355:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 356:Drivers/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_TABLE_SIZE  512
 357:Drivers/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_Q31_SHIFT   (32 - 10)
 358:Drivers/CMSIS/DSP/Include/arm_math.h **** #define FAST_MATH_Q15_SHIFT   (16 - 10)
 359:Drivers/CMSIS/DSP/Include/arm_math.h **** #define CONTROLLER_Q31_SHIFT  (32 - 9)
 360:Drivers/CMSIS/DSP/Include/arm_math.h **** #define TABLE_SPACING_Q31     0x400000
 361:Drivers/CMSIS/DSP/Include/arm_math.h **** #define TABLE_SPACING_Q15     0x80
 362:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 363:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
 364:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Macros required for SINE and COSINE Controller functions
 365:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 366:Drivers/CMSIS/DSP/Include/arm_math.h ****   /* 1.31(q31) Fixed value of 2/360 */
 367:Drivers/CMSIS/DSP/Include/arm_math.h ****   /* -1 to +1 is divided into 360 values so total spacing is (2/360) */
 368:Drivers/CMSIS/DSP/Include/arm_math.h **** #define INPUT_SPACING         0xB60B61
 369:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 370:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 371:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
 372:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Error status returned by some functions in the library.
 373:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 374:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 375:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef enum
 376:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
 377:Drivers/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SUCCESS        =  0,        /**< No error */
 378:Drivers/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_ARGUMENT_ERROR = -1,        /**< One or more arguments are incorrect */
 379:Drivers/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_LENGTH_ERROR   = -2,        /**< Length of data buffer is incorrect */
 380:Drivers/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SIZE_MISMATCH  = -3,        /**< Size of matrices is not compatible with the operation
 381:Drivers/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_NANINF         = -4,        /**< Not-a-number (NaN) or infinity is generated */
 382:Drivers/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_SINGULAR       = -5,        /**< Input matrix is singular and cannot be inverted */
 383:Drivers/CMSIS/DSP/Include/arm_math.h ****     ARM_MATH_TEST_FAILURE   = -6         /**< Test Failed */
 384:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_status;
 385:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 386:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
 387:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief 8-bit fractional data type in 1.7 format.
 388:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 389:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef int8_t q7_t;
 390:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 391:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
 392:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief 16-bit fractional data type in 1.15 format.
 393:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 394:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef int16_t q15_t;
 395:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 396:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
 397:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief 32-bit fractional data type in 1.31 format.
 398:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 399:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef int32_t q31_t;
 400:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 401:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
 402:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief 64-bit fractional data type in 1.63 format.
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 12


 403:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 404:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef int64_t q63_t;
 405:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 406:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
 407:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief 32-bit floating-point type definition.
 408:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 409:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef float float32_t;
 410:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 411:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
 412:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief 64-bit floating-point type definition.
 413:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 414:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef double float64_t;
 415:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 416:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 417:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 418:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief definition to read/write two 16 bit values.
 419:Drivers/CMSIS/DSP/Include/arm_math.h ****   @deprecated
 420:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 421:Drivers/CMSIS/DSP/Include/arm_math.h **** #if   defined ( __CC_ARM )
 422:Drivers/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 423:Drivers/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ARMCC_VERSION ) && ( __ARMCC_VERSION >= 6010050 )
 424:Drivers/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 425:Drivers/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __GNUC__ )
 426:Drivers/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 427:Drivers/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ICCARM__ )
 428:Drivers/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t __packed
 429:Drivers/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TI_ARM__ )
 430:Drivers/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 431:Drivers/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __CSMC__ )
 432:Drivers/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 433:Drivers/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __TASKING__ )
 434:Drivers/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE __un(aligned) int32_t
 435:Drivers/CMSIS/DSP/Include/arm_math.h **** #elif defined(_MSC_VER )
 436:Drivers/CMSIS/DSP/Include/arm_math.h ****   #define __SIMD32_TYPE int32_t
 437:Drivers/CMSIS/DSP/Include/arm_math.h **** #else
 438:Drivers/CMSIS/DSP/Include/arm_math.h ****   #error Unknown compiler
 439:Drivers/CMSIS/DSP/Include/arm_math.h **** #endif
 440:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 441:Drivers/CMSIS/DSP/Include/arm_math.h **** #define __SIMD32(addr)        (*(__SIMD32_TYPE **) & (addr))
 442:Drivers/CMSIS/DSP/Include/arm_math.h **** #define __SIMD32_CONST(addr)  ( (__SIMD32_TYPE * )   (addr))
 443:Drivers/CMSIS/DSP/Include/arm_math.h **** #define _SIMD32_OFFSET(addr)  (*(__SIMD32_TYPE * )   (addr))
 444:Drivers/CMSIS/DSP/Include/arm_math.h **** #define __SIMD64(addr)        (*(      int64_t **) & (addr))
 445:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 446:Drivers/CMSIS/DSP/Include/arm_math.h **** /* SIMD replacement */
 447:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 448:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 449:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 450:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer.
 451:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 452:Drivers/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 453:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 454:Drivers/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2 (
 455:Drivers/CMSIS/DSP/Include/arm_math.h ****   q15_t * pQ15)
 456:Drivers/CMSIS/DSP/Include/arm_math.h **** {
 457:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 458:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 459:Drivers/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, pQ15, 4);
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 13


 460:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 461:Drivers/CMSIS/DSP/Include/arm_math.h ****   return (val);
 462:Drivers/CMSIS/DSP/Include/arm_math.h **** }
 463:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 464:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 465:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer and increment pointer afterwards.
 466:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 467:Drivers/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 468:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 469:Drivers/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2_ia (
 470:Drivers/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 471:Drivers/CMSIS/DSP/Include/arm_math.h **** {
 472:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 473:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 474:Drivers/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ15, 4);
 475:Drivers/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 476:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 477:Drivers/CMSIS/DSP/Include/arm_math.h ****   return (val);
 478:Drivers/CMSIS/DSP/Include/arm_math.h **** }
 479:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 480:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 481:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 2 Q15 from Q15 pointer and decrement pointer afterwards.
 482:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 483:Drivers/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 484:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 485:Drivers/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q15x2_da (
 486:Drivers/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15)
 487:Drivers/CMSIS/DSP/Include/arm_math.h **** {
 488:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 489:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 490:Drivers/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ15, 4);
 491:Drivers/CMSIS/DSP/Include/arm_math.h ****   *pQ15 -= 2;
 492:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 493:Drivers/CMSIS/DSP/Include/arm_math.h ****   return (val);
 494:Drivers/CMSIS/DSP/Include/arm_math.h **** }
 495:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 496:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 497:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief         Write 2 Q15 to Q15 pointer and increment pointer afterwards.
 498:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 499:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     value     Q31 value
 500:Drivers/CMSIS/DSP/Include/arm_math.h ****   @return        none
 501:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 502:Drivers/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void write_q15x2_ia (
 503:Drivers/CMSIS/DSP/Include/arm_math.h ****   q15_t ** pQ15,
 504:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t    value)
 505:Drivers/CMSIS/DSP/Include/arm_math.h **** {
 506:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t val = value;
 507:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 508:Drivers/CMSIS/DSP/Include/arm_math.h ****   memcpy (*pQ15, &val, 4);
 509:Drivers/CMSIS/DSP/Include/arm_math.h ****   *pQ15 += 2;
 510:Drivers/CMSIS/DSP/Include/arm_math.h **** }
 511:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 512:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 513:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief         Write 2 Q15 to Q15 pointer.
 514:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ15      points to input value
 515:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     value     Q31 value
 516:Drivers/CMSIS/DSP/Include/arm_math.h ****   @return        none
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 14


 517:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 518:Drivers/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void write_q15x2 (
 519:Drivers/CMSIS/DSP/Include/arm_math.h ****   q15_t * pQ15,
 520:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t   value)
 521:Drivers/CMSIS/DSP/Include/arm_math.h **** {
 522:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t val = value;
 523:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 524:Drivers/CMSIS/DSP/Include/arm_math.h ****   memcpy (pQ15, &val, 4);
 525:Drivers/CMSIS/DSP/Include/arm_math.h **** }
 526:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 527:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 528:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 529:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 4 Q7 from Q7 pointer and increment pointer afterwards.
 530:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ7       points to input value
 531:Drivers/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 532:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 533:Drivers/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q7x4_ia (
 534:Drivers/CMSIS/DSP/Include/arm_math.h ****   q7_t ** pQ7)
 535:Drivers/CMSIS/DSP/Include/arm_math.h **** {
 536:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 537:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 538:Drivers/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ7, 4);
 539:Drivers/CMSIS/DSP/Include/arm_math.h ****   *pQ7 += 4;
 540:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 541:Drivers/CMSIS/DSP/Include/arm_math.h ****   return (val);
 542:Drivers/CMSIS/DSP/Include/arm_math.h **** }
 543:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 544:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 545:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief         Read 4 Q7 from Q7 pointer and decrement pointer afterwards.
 546:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ7       points to input value
 547:Drivers/CMSIS/DSP/Include/arm_math.h ****   @return        Q31 value
 548:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 549:Drivers/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t read_q7x4_da (
 550:Drivers/CMSIS/DSP/Include/arm_math.h ****   q7_t ** pQ7)
 551:Drivers/CMSIS/DSP/Include/arm_math.h **** {
 552:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t val;
 553:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 554:Drivers/CMSIS/DSP/Include/arm_math.h ****   memcpy (&val, *pQ7, 4);
 555:Drivers/CMSIS/DSP/Include/arm_math.h ****   *pQ7 -= 4;
 556:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 557:Drivers/CMSIS/DSP/Include/arm_math.h ****   return (val);
 558:Drivers/CMSIS/DSP/Include/arm_math.h **** }
 559:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 560:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
 561:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief         Write 4 Q7 to Q7 pointer and increment pointer afterwards.
 562:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pQ7       points to input value
 563:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     value     Q31 value
 564:Drivers/CMSIS/DSP/Include/arm_math.h ****   @return        none
 565:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 566:Drivers/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void write_q7x4_ia (
 567:Drivers/CMSIS/DSP/Include/arm_math.h ****   q7_t ** pQ7,
 568:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t   value)
 569:Drivers/CMSIS/DSP/Include/arm_math.h **** {
 570:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t val = value;
 571:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 572:Drivers/CMSIS/DSP/Include/arm_math.h ****   memcpy (*pQ7, &val, 4);
 573:Drivers/CMSIS/DSP/Include/arm_math.h ****   *pQ7 += 4;
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 15


 574:Drivers/CMSIS/DSP/Include/arm_math.h **** }
 575:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 576:Drivers/CMSIS/DSP/Include/arm_math.h **** /*
 577:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 578:Drivers/CMSIS/DSP/Include/arm_math.h **** Normally those kind of definitions are in a compiler file
 579:Drivers/CMSIS/DSP/Include/arm_math.h **** in Core or Core_A.
 580:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 581:Drivers/CMSIS/DSP/Include/arm_math.h **** But for MSVC compiler it is a bit special. The goal is very specific
 582:Drivers/CMSIS/DSP/Include/arm_math.h **** to CMSIS-DSP and only to allow the use of this library from other
 583:Drivers/CMSIS/DSP/Include/arm_math.h **** systems like Python or Matlab.
 584:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 585:Drivers/CMSIS/DSP/Include/arm_math.h **** MSVC is not going to be used to cross-compile to ARM. So, having a MSVC
 586:Drivers/CMSIS/DSP/Include/arm_math.h **** compiler file in Core or Core_A would not make sense.
 587:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 588:Drivers/CMSIS/DSP/Include/arm_math.h **** */
 589:Drivers/CMSIS/DSP/Include/arm_math.h **** #if defined ( _MSC_VER )
 590:Drivers/CMSIS/DSP/Include/arm_math.h ****     __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t data)
 591:Drivers/CMSIS/DSP/Include/arm_math.h ****     {
 592:Drivers/CMSIS/DSP/Include/arm_math.h ****       if (data == 0U) { return 32U; }
 593:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 594:Drivers/CMSIS/DSP/Include/arm_math.h ****       uint32_t count = 0U;
 595:Drivers/CMSIS/DSP/Include/arm_math.h ****       uint32_t mask = 0x80000000U;
 596:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 597:Drivers/CMSIS/DSP/Include/arm_math.h ****       while ((data & mask) == 0U)
 598:Drivers/CMSIS/DSP/Include/arm_math.h ****       {
 599:Drivers/CMSIS/DSP/Include/arm_math.h ****         count += 1U;
 600:Drivers/CMSIS/DSP/Include/arm_math.h ****         mask = mask >> 1U;
 601:Drivers/CMSIS/DSP/Include/arm_math.h ****       }
 602:Drivers/CMSIS/DSP/Include/arm_math.h ****       return count;
 603:Drivers/CMSIS/DSP/Include/arm_math.h ****     }
 604:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 605:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 606:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
 607:Drivers/CMSIS/DSP/Include/arm_math.h ****     if ((sat >= 1U) && (sat <= 32U))
 608:Drivers/CMSIS/DSP/Include/arm_math.h ****     {
 609:Drivers/CMSIS/DSP/Include/arm_math.h ****       const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 610:Drivers/CMSIS/DSP/Include/arm_math.h ****       const int32_t min = -1 - max ;
 611:Drivers/CMSIS/DSP/Include/arm_math.h ****       if (val > max)
 612:Drivers/CMSIS/DSP/Include/arm_math.h ****       {
 613:Drivers/CMSIS/DSP/Include/arm_math.h ****         return max;
 614:Drivers/CMSIS/DSP/Include/arm_math.h ****       }
 615:Drivers/CMSIS/DSP/Include/arm_math.h ****       else if (val < min)
 616:Drivers/CMSIS/DSP/Include/arm_math.h ****       {
 617:Drivers/CMSIS/DSP/Include/arm_math.h ****         return min;
 618:Drivers/CMSIS/DSP/Include/arm_math.h ****       }
 619:Drivers/CMSIS/DSP/Include/arm_math.h ****     }
 620:Drivers/CMSIS/DSP/Include/arm_math.h ****     return val;
 621:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
 622:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 623:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 624:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
 625:Drivers/CMSIS/DSP/Include/arm_math.h ****     if (sat <= 31U)
 626:Drivers/CMSIS/DSP/Include/arm_math.h ****     {
 627:Drivers/CMSIS/DSP/Include/arm_math.h ****       const uint32_t max = ((1U << sat) - 1U);
 628:Drivers/CMSIS/DSP/Include/arm_math.h ****       if (val > (int32_t)max)
 629:Drivers/CMSIS/DSP/Include/arm_math.h ****       {
 630:Drivers/CMSIS/DSP/Include/arm_math.h ****         return max;
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 16


 631:Drivers/CMSIS/DSP/Include/arm_math.h ****       }
 632:Drivers/CMSIS/DSP/Include/arm_math.h ****       else if (val < 0)
 633:Drivers/CMSIS/DSP/Include/arm_math.h ****       {
 634:Drivers/CMSIS/DSP/Include/arm_math.h ****         return 0U;
 635:Drivers/CMSIS/DSP/Include/arm_math.h ****       }
 636:Drivers/CMSIS/DSP/Include/arm_math.h ****     }
 637:Drivers/CMSIS/DSP/Include/arm_math.h ****     return (uint32_t)val;
 638:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
 639:Drivers/CMSIS/DSP/Include/arm_math.h **** #endif
 640:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 641:Drivers/CMSIS/DSP/Include/arm_math.h **** #ifndef ARM_MATH_DSP
 642:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
 643:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief definition to pack two 16 bit values.
 644:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 645:Drivers/CMSIS/DSP/Include/arm_math.h ****   #define __PKHBT(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0x0000FFFF) | \
 646:Drivers/CMSIS/DSP/Include/arm_math.h ****                                       (((int32_t)(ARG2) << ARG3) & (int32_t)0xFFFF0000)  )
 647:Drivers/CMSIS/DSP/Include/arm_math.h ****   #define __PKHTB(ARG1, ARG2, ARG3) ( (((int32_t)(ARG1) <<    0) & (int32_t)0xFFFF0000) | \
 648:Drivers/CMSIS/DSP/Include/arm_math.h ****                                       (((int32_t)(ARG2) >> ARG3) & (int32_t)0x0000FFFF)  )
 649:Drivers/CMSIS/DSP/Include/arm_math.h **** #endif
 650:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 651:Drivers/CMSIS/DSP/Include/arm_math.h ****    /**
 652:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief definition to pack four 8 bit values.
 653:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 654:Drivers/CMSIS/DSP/Include/arm_math.h **** #ifndef ARM_MATH_BIG_ENDIAN
 655:Drivers/CMSIS/DSP/Include/arm_math.h ****   #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v0) <<  0) & (int32_t)0x000000FF) | \
 656:Drivers/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v1) <<  8) & (int32_t)0x0000FF00) | \
 657:Drivers/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v2) << 16) & (int32_t)0x00FF0000) | \
 658:Drivers/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v3) << 24) & (int32_t)0xFF000000)  )
 659:Drivers/CMSIS/DSP/Include/arm_math.h **** #else
 660:Drivers/CMSIS/DSP/Include/arm_math.h ****   #define __PACKq7(v0,v1,v2,v3) ( (((int32_t)(v3) <<  0) & (int32_t)0x000000FF) | \
 661:Drivers/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v2) <<  8) & (int32_t)0x0000FF00) | \
 662:Drivers/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v1) << 16) & (int32_t)0x00FF0000) | \
 663:Drivers/CMSIS/DSP/Include/arm_math.h ****                                   (((int32_t)(v0) << 24) & (int32_t)0xFF000000)  )
 664:Drivers/CMSIS/DSP/Include/arm_math.h **** #endif
 665:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 666:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 667:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
 668:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Clips Q63 to Q31 values.
 669:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 670:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE q31_t clip_q63_to_q31(
 671:Drivers/CMSIS/DSP/Include/arm_math.h ****   q63_t x)
 672:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
 673:Drivers/CMSIS/DSP/Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 674:Drivers/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFFFFFF ^ ((q31_t) (x >> 63)))) : (q31_t) x;
 675:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
 676:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 677:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
 678:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Clips Q63 to Q15 values.
 679:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 680:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE q15_t clip_q63_to_q15(
 681:Drivers/CMSIS/DSP/Include/arm_math.h ****   q63_t x)
 682:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
 683:Drivers/CMSIS/DSP/Include/arm_math.h ****     return ((q31_t) (x >> 32) != ((q31_t) x >> 31)) ?
 684:Drivers/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 63)))) : (q15_t) (x >> 15);
 685:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
 686:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 687:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 17


 688:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Clips Q31 to Q7 values.
 689:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 690:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE q7_t clip_q31_to_q7(
 691:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t x)
 692:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
 693:Drivers/CMSIS/DSP/Include/arm_math.h ****     return ((q31_t) (x >> 24) != ((q31_t) x >> 23)) ?
 694:Drivers/CMSIS/DSP/Include/arm_math.h ****       ((0x7F ^ ((q7_t) (x >> 31)))) : (q7_t) x;
 695:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
 696:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 697:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
 698:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Clips Q31 to Q15 values.
 699:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 700:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE q15_t clip_q31_to_q15(
 701:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t x)
 702:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
 703:Drivers/CMSIS/DSP/Include/arm_math.h ****     return ((q31_t) (x >> 16) != ((q31_t) x >> 15)) ?
 704:Drivers/CMSIS/DSP/Include/arm_math.h ****       ((0x7FFF ^ ((q15_t) (x >> 31)))) : (q15_t) x;
 705:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
 706:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 707:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
 708:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Multiplies 32 X 64 and returns 32 bit result in 2.30 format.
 709:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 710:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE q63_t mult32x64(
 711:Drivers/CMSIS/DSP/Include/arm_math.h ****   q63_t x,
 712:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t y)
 713:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
 714:Drivers/CMSIS/DSP/Include/arm_math.h ****     return ((((q63_t) (x & 0x00000000FFFFFFFF) * y) >> 32) +
 715:Drivers/CMSIS/DSP/Include/arm_math.h ****             (((q63_t) (x >> 32)                * y)      )  );
 716:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
 717:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 718:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
 719:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q31 Data type.
 720:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 721:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t arm_recip_q31(
 722:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t in,
 723:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * dst,
 724:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pRecipTable)
 725:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
 726:Drivers/CMSIS/DSP/Include/arm_math.h ****     q31_t out;
 727:Drivers/CMSIS/DSP/Include/arm_math.h ****     uint32_t tempVal;
 728:Drivers/CMSIS/DSP/Include/arm_math.h ****     uint32_t index, i;
 729:Drivers/CMSIS/DSP/Include/arm_math.h ****     uint32_t signBits;
 730:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 731:Drivers/CMSIS/DSP/Include/arm_math.h ****     if (in > 0)
 732:Drivers/CMSIS/DSP/Include/arm_math.h ****     {
 733:Drivers/CMSIS/DSP/Include/arm_math.h ****       signBits = ((uint32_t) (__CLZ( in) - 1));
 734:Drivers/CMSIS/DSP/Include/arm_math.h ****     }
 735:Drivers/CMSIS/DSP/Include/arm_math.h ****     else
 736:Drivers/CMSIS/DSP/Include/arm_math.h ****     {
 737:Drivers/CMSIS/DSP/Include/arm_math.h ****       signBits = ((uint32_t) (__CLZ(-in) - 1));
 738:Drivers/CMSIS/DSP/Include/arm_math.h ****     }
 739:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 740:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Convert input sample to 1.31 format */
 741:Drivers/CMSIS/DSP/Include/arm_math.h ****     in = (in << signBits);
 742:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 743:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* calculation of index for initial approximated Val */
 744:Drivers/CMSIS/DSP/Include/arm_math.h ****     index = (uint32_t)(in >> 24);
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 18


 745:Drivers/CMSIS/DSP/Include/arm_math.h ****     index = (index & INDEX_MASK);
 746:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 747:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* 1.31 with exp 1 */
 748:Drivers/CMSIS/DSP/Include/arm_math.h ****     out = pRecipTable[index];
 749:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 750:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* calculation of reciprocal value */
 751:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* running approximation for two iterations */
 752:Drivers/CMSIS/DSP/Include/arm_math.h ****     for (i = 0U; i < 2U; i++)
 753:Drivers/CMSIS/DSP/Include/arm_math.h ****     {
 754:Drivers/CMSIS/DSP/Include/arm_math.h ****       tempVal = (uint32_t) (((q63_t) in * out) >> 31);
 755:Drivers/CMSIS/DSP/Include/arm_math.h ****       tempVal = 0x7FFFFFFFu - tempVal;
 756:Drivers/CMSIS/DSP/Include/arm_math.h ****       /*      1.31 with exp 1 */
 757:Drivers/CMSIS/DSP/Include/arm_math.h ****       /* out = (q31_t) (((q63_t) out * tempVal) >> 30); */
 758:Drivers/CMSIS/DSP/Include/arm_math.h ****       out = clip_q63_to_q31(((q63_t) out * tempVal) >> 30);
 759:Drivers/CMSIS/DSP/Include/arm_math.h ****     }
 760:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 761:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* write output */
 762:Drivers/CMSIS/DSP/Include/arm_math.h ****     *dst = out;
 763:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 764:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* return num of signbits of out = 1/in value */
 765:Drivers/CMSIS/DSP/Include/arm_math.h ****     return (signBits + 1U);
 766:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
 767:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 768:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 769:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
 770:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Function to Calculates 1/in (reciprocal) value of Q15 Data type.
 771:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 772:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t arm_recip_q15(
 773:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t in,
 774:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * dst,
 775:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pRecipTable)
 776:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
 777:Drivers/CMSIS/DSP/Include/arm_math.h ****     q15_t out = 0;
 778:Drivers/CMSIS/DSP/Include/arm_math.h ****     uint32_t tempVal = 0;
 779:Drivers/CMSIS/DSP/Include/arm_math.h ****     uint32_t index = 0, i = 0;
 780:Drivers/CMSIS/DSP/Include/arm_math.h ****     uint32_t signBits = 0;
 781:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 782:Drivers/CMSIS/DSP/Include/arm_math.h ****     if (in > 0)
 783:Drivers/CMSIS/DSP/Include/arm_math.h ****     {
 784:Drivers/CMSIS/DSP/Include/arm_math.h ****       signBits = ((uint32_t)(__CLZ( in) - 17));
 785:Drivers/CMSIS/DSP/Include/arm_math.h ****     }
 786:Drivers/CMSIS/DSP/Include/arm_math.h ****     else
 787:Drivers/CMSIS/DSP/Include/arm_math.h ****     {
 788:Drivers/CMSIS/DSP/Include/arm_math.h ****       signBits = ((uint32_t)(__CLZ(-in) - 17));
 789:Drivers/CMSIS/DSP/Include/arm_math.h ****     }
 790:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 791:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Convert input sample to 1.15 format */
 792:Drivers/CMSIS/DSP/Include/arm_math.h ****     in = (in << signBits);
 793:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 794:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* calculation of index for initial approximated Val */
 795:Drivers/CMSIS/DSP/Include/arm_math.h ****     index = (uint32_t)(in >>  8);
 796:Drivers/CMSIS/DSP/Include/arm_math.h ****     index = (index & INDEX_MASK);
 797:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 798:Drivers/CMSIS/DSP/Include/arm_math.h ****     /*      1.15 with exp 1  */
 799:Drivers/CMSIS/DSP/Include/arm_math.h ****     out = pRecipTable[index];
 800:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 801:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* calculation of reciprocal value */
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 19


 802:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* running approximation for two iterations */
 803:Drivers/CMSIS/DSP/Include/arm_math.h ****     for (i = 0U; i < 2U; i++)
 804:Drivers/CMSIS/DSP/Include/arm_math.h ****     {
 805:Drivers/CMSIS/DSP/Include/arm_math.h ****       tempVal = (uint32_t) (((q31_t) in * out) >> 15);
 806:Drivers/CMSIS/DSP/Include/arm_math.h ****       tempVal = 0x7FFFu - tempVal;
 807:Drivers/CMSIS/DSP/Include/arm_math.h ****       /*      1.15 with exp 1 */
 808:Drivers/CMSIS/DSP/Include/arm_math.h ****       out = (q15_t) (((q31_t) out * tempVal) >> 14);
 809:Drivers/CMSIS/DSP/Include/arm_math.h ****       /* out = clip_q31_to_q15(((q31_t) out * tempVal) >> 14); */
 810:Drivers/CMSIS/DSP/Include/arm_math.h ****     }
 811:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 812:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* write output */
 813:Drivers/CMSIS/DSP/Include/arm_math.h ****     *dst = out;
 814:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 815:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* return num of signbits of out = 1/in value */
 816:Drivers/CMSIS/DSP/Include/arm_math.h ****     return (signBits + 1);
 817:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
 818:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 819:Drivers/CMSIS/DSP/Include/arm_math.h **** #if defined(ARM_MATH_NEON)
 820:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 821:Drivers/CMSIS/DSP/Include/arm_math.h **** static inline float32x4_t __arm_vec_sqrt_f32_neon(float32x4_t  x)
 822:Drivers/CMSIS/DSP/Include/arm_math.h **** {
 823:Drivers/CMSIS/DSP/Include/arm_math.h ****     float32x4_t x1 = vmaxq_f32(x, vdupq_n_f32(FLT_MIN));
 824:Drivers/CMSIS/DSP/Include/arm_math.h ****     float32x4_t e = vrsqrteq_f32(x1);
 825:Drivers/CMSIS/DSP/Include/arm_math.h ****     e = vmulq_f32(vrsqrtsq_f32(vmulq_f32(x1, e), e), e);
 826:Drivers/CMSIS/DSP/Include/arm_math.h ****     e = vmulq_f32(vrsqrtsq_f32(vmulq_f32(x1, e), e), e);
 827:Drivers/CMSIS/DSP/Include/arm_math.h ****     return vmulq_f32(x, e);
 828:Drivers/CMSIS/DSP/Include/arm_math.h **** }
 829:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 830:Drivers/CMSIS/DSP/Include/arm_math.h **** static inline int16x8_t __arm_vec_sqrt_q15_neon(int16x8_t vec)
 831:Drivers/CMSIS/DSP/Include/arm_math.h **** {
 832:Drivers/CMSIS/DSP/Include/arm_math.h ****     float32x4_t tempF;
 833:Drivers/CMSIS/DSP/Include/arm_math.h ****     int32x4_t tempHI,tempLO;
 834:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 835:Drivers/CMSIS/DSP/Include/arm_math.h ****     tempLO = vmovl_s16(vget_low_s16(vec));
 836:Drivers/CMSIS/DSP/Include/arm_math.h ****     tempF = vcvtq_n_f32_s32(tempLO,15);
 837:Drivers/CMSIS/DSP/Include/arm_math.h ****     tempF = __arm_vec_sqrt_f32_neon(tempF);
 838:Drivers/CMSIS/DSP/Include/arm_math.h ****     tempLO = vcvtq_n_s32_f32(tempF,15);
 839:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 840:Drivers/CMSIS/DSP/Include/arm_math.h ****     tempHI = vmovl_s16(vget_high_s16(vec));
 841:Drivers/CMSIS/DSP/Include/arm_math.h ****     tempF = vcvtq_n_f32_s32(tempHI,15);
 842:Drivers/CMSIS/DSP/Include/arm_math.h ****     tempF = __arm_vec_sqrt_f32_neon(tempF);
 843:Drivers/CMSIS/DSP/Include/arm_math.h ****     tempHI = vcvtq_n_s32_f32(tempF,15);
 844:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 845:Drivers/CMSIS/DSP/Include/arm_math.h ****     return(vcombine_s16(vqmovn_s32(tempLO),vqmovn_s32(tempHI)));
 846:Drivers/CMSIS/DSP/Include/arm_math.h **** }
 847:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 848:Drivers/CMSIS/DSP/Include/arm_math.h **** static inline int32x4_t __arm_vec_sqrt_q31_neon(int32x4_t vec)
 849:Drivers/CMSIS/DSP/Include/arm_math.h **** {
 850:Drivers/CMSIS/DSP/Include/arm_math.h ****   float32x4_t temp;
 851:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 852:Drivers/CMSIS/DSP/Include/arm_math.h ****   temp = vcvtq_n_f32_s32(vec,31);
 853:Drivers/CMSIS/DSP/Include/arm_math.h ****   temp = __arm_vec_sqrt_f32_neon(temp);
 854:Drivers/CMSIS/DSP/Include/arm_math.h ****   return(vcvtq_n_s32_f32(temp,31));
 855:Drivers/CMSIS/DSP/Include/arm_math.h **** }
 856:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 857:Drivers/CMSIS/DSP/Include/arm_math.h **** #endif
 858:Drivers/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 20


 859:Drivers/CMSIS/DSP/Include/arm_math.h **** /*
 860:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @brief C custom defined intrinsic functions
 861:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
 862:Drivers/CMSIS/DSP/Include/arm_math.h **** #if !defined (ARM_MATH_DSP)
 863:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 864:Drivers/CMSIS/DSP/Include/arm_math.h ****   /*
 865:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined QADD8
 866:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 867:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __QADD8(
 868:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
 869:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t y)
 870:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
 871:Drivers/CMSIS/DSP/Include/arm_math.h ****     q31_t r, s, t, u;
 872:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 873:Drivers/CMSIS/DSP/Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) + (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 874:Drivers/CMSIS/DSP/Include/arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) + (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
 875:Drivers/CMSIS/DSP/Include/arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) + (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 876:Drivers/CMSIS/DSP/Include/arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) + (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 877:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 878:Drivers/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 879:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
 880:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 881:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 882:Drivers/CMSIS/DSP/Include/arm_math.h ****   /*
 883:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined QSUB8
 884:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 885:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __QSUB8(
 886:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
 887:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t y)
 888:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
 889:Drivers/CMSIS/DSP/Include/arm_math.h ****     q31_t r, s, t, u;
 890:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 891:Drivers/CMSIS/DSP/Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 24) >> 24) - (((q31_t)y << 24) >> 24)), 8) & (int32_t)0x000000FF;
 892:Drivers/CMSIS/DSP/Include/arm_math.h ****     s = __SSAT(((((q31_t)x << 16) >> 24) - (((q31_t)y << 16) >> 24)), 8) & (int32_t)0x000000FF;
 893:Drivers/CMSIS/DSP/Include/arm_math.h ****     t = __SSAT(((((q31_t)x <<  8) >> 24) - (((q31_t)y <<  8) >> 24)), 8) & (int32_t)0x000000FF;
 894:Drivers/CMSIS/DSP/Include/arm_math.h ****     u = __SSAT(((((q31_t)x      ) >> 24) - (((q31_t)y      ) >> 24)), 8) & (int32_t)0x000000FF;
 895:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 896:Drivers/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)((u << 24) | (t << 16) | (s <<  8) | (r      )));
 897:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
 898:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 899:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 900:Drivers/CMSIS/DSP/Include/arm_math.h ****   /*
 901:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined QADD16
 902:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 903:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __QADD16(
 904:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
 905:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t y)
 906:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
 907:Drivers/CMSIS/DSP/Include/arm_math.h **** /*  q31_t r,     s;  without initialisation 'arm_offset_q15 test' fails  but 'intrinsic' tests pass
 908:Drivers/CMSIS/DSP/Include/arm_math.h ****     q31_t r = 0, s = 0;
 909:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 910:Drivers/CMSIS/DSP/Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 911:Drivers/CMSIS/DSP/Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 912:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 913:Drivers/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 914:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
 915:Drivers/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 21


 916:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 917:Drivers/CMSIS/DSP/Include/arm_math.h ****   /*
 918:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined SHADD16
 919:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 920:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __SHADD16(
 921:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
 922:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t y)
 923:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
 924:Drivers/CMSIS/DSP/Include/arm_math.h ****     q31_t r, s;
 925:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 926:Drivers/CMSIS/DSP/Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 927:Drivers/CMSIS/DSP/Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 928:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 929:Drivers/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 930:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
 931:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 932:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 933:Drivers/CMSIS/DSP/Include/arm_math.h ****   /*
 934:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined QSUB16
 935:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 936:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __QSUB16(
 937:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
 938:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t y)
 939:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
 940:Drivers/CMSIS/DSP/Include/arm_math.h ****     q31_t r, s;
 941:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 942:Drivers/CMSIS/DSP/Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 943:Drivers/CMSIS/DSP/Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 944:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 945:Drivers/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 946:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
 947:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 948:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 949:Drivers/CMSIS/DSP/Include/arm_math.h ****   /*
 950:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined SHSUB16
 951:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 952:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __SHSUB16(
 953:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
 954:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t y)
 955:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
 956:Drivers/CMSIS/DSP/Include/arm_math.h ****     q31_t r, s;
 957:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 958:Drivers/CMSIS/DSP/Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 959:Drivers/CMSIS/DSP/Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 960:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 961:Drivers/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 962:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
 963:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 964:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 965:Drivers/CMSIS/DSP/Include/arm_math.h ****   /*
 966:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined QASX
 967:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 968:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __QASX(
 969:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
 970:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t y)
 971:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
 972:Drivers/CMSIS/DSP/Include/arm_math.h ****     q31_t r, s;
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 22


 973:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 974:Drivers/CMSIS/DSP/Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
 975:Drivers/CMSIS/DSP/Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
 976:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 977:Drivers/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 978:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
 979:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 980:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 981:Drivers/CMSIS/DSP/Include/arm_math.h ****   /*
 982:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined SHASX
 983:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
 984:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __SHASX(
 985:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
 986:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t y)
 987:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
 988:Drivers/CMSIS/DSP/Include/arm_math.h ****     q31_t r, s;
 989:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 990:Drivers/CMSIS/DSP/Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) - (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 991:Drivers/CMSIS/DSP/Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) + (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
 992:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 993:Drivers/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
 994:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
 995:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 996:Drivers/CMSIS/DSP/Include/arm_math.h **** 
 997:Drivers/CMSIS/DSP/Include/arm_math.h ****   /*
 998:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined QSAX
 999:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1000:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __QSAX(
1001:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
1002:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t y)
1003:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1004:Drivers/CMSIS/DSP/Include/arm_math.h ****     q31_t r, s;
1005:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1006:Drivers/CMSIS/DSP/Include/arm_math.h ****     r = __SSAT(((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)), 16) & (int32_t)0x0000FFFF;
1007:Drivers/CMSIS/DSP/Include/arm_math.h ****     s = __SSAT(((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)), 16) & (int32_t)0x0000FFFF;
1008:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1009:Drivers/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
1010:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
1011:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1012:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1013:Drivers/CMSIS/DSP/Include/arm_math.h ****   /*
1014:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined SHSAX
1015:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1016:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __SHSAX(
1017:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
1018:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t y)
1019:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1020:Drivers/CMSIS/DSP/Include/arm_math.h ****     q31_t r, s;
1021:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1022:Drivers/CMSIS/DSP/Include/arm_math.h ****     r = (((((q31_t)x << 16) >> 16) + (((q31_t)y      ) >> 16)) >> 1) & (int32_t)0x0000FFFF;
1023:Drivers/CMSIS/DSP/Include/arm_math.h ****     s = (((((q31_t)x      ) >> 16) - (((q31_t)y << 16) >> 16)) >> 1) & (int32_t)0x0000FFFF;
1024:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1025:Drivers/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)((s << 16) | (r      )));
1026:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
1027:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1028:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1029:Drivers/CMSIS/DSP/Include/arm_math.h ****   /*
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 23


1030:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined SMUSDX
1031:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1032:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __SMUSDX(
1033:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
1034:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t y)
1035:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1036:Drivers/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) -
1037:Drivers/CMSIS/DSP/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
1038:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
1039:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1040:Drivers/CMSIS/DSP/Include/arm_math.h ****   /*
1041:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined SMUADX
1042:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1043:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __SMUADX(
1044:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
1045:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t y)
1046:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1047:Drivers/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
1048:Drivers/CMSIS/DSP/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16))   ));
1049:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
1050:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1051:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1052:Drivers/CMSIS/DSP/Include/arm_math.h ****   /*
1053:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined QADD
1054:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1055:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE int32_t __QADD(
1056:Drivers/CMSIS/DSP/Include/arm_math.h ****   int32_t x,
1057:Drivers/CMSIS/DSP/Include/arm_math.h ****   int32_t y)
1058:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1059:Drivers/CMSIS/DSP/Include/arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x + (q31_t)y)));
1060:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
1061:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1062:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1063:Drivers/CMSIS/DSP/Include/arm_math.h ****   /*
1064:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined QSUB
1065:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1066:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE int32_t __QSUB(
1067:Drivers/CMSIS/DSP/Include/arm_math.h ****   int32_t x,
1068:Drivers/CMSIS/DSP/Include/arm_math.h ****   int32_t y)
1069:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1070:Drivers/CMSIS/DSP/Include/arm_math.h ****     return ((int32_t)(clip_q63_to_q31((q63_t)x - (q31_t)y)));
1071:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
1072:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1073:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1074:Drivers/CMSIS/DSP/Include/arm_math.h ****   /*
1075:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined SMLAD
1076:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1077:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __SMLAD(
1078:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
1079:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t y,
1080:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t sum)
1081:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1082:Drivers/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
1083:Drivers/CMSIS/DSP/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
1084:Drivers/CMSIS/DSP/Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
1085:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
1086:Drivers/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 24


1087:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1088:Drivers/CMSIS/DSP/Include/arm_math.h ****   /*
1089:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined SMLADX
1090:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1091:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __SMLADX(
1092:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
1093:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t y,
1094:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t sum)
1095:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1096:Drivers/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
1097:Drivers/CMSIS/DSP/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
1098:Drivers/CMSIS/DSP/Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
1099:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
1100:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1101:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1102:Drivers/CMSIS/DSP/Include/arm_math.h ****   /*
1103:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined SMLSDX
1104:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1105:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __SMLSDX(
1106:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
1107:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t y,
1108:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t sum)
1109:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1110:Drivers/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) -
1111:Drivers/CMSIS/DSP/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
1112:Drivers/CMSIS/DSP/Include/arm_math.h ****                        ( ((q31_t)sum    )                                  )   ));
1113:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
1114:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1115:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1116:Drivers/CMSIS/DSP/Include/arm_math.h ****   /*
1117:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined SMLALD
1118:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1119:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint64_t __SMLALD(
1120:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
1121:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t y,
1122:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint64_t sum)
1123:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1124:Drivers/CMSIS/DSP/Include/arm_math.h **** /*  return (sum + ((q15_t) (x >> 16) * (q15_t) (y >> 16)) + ((q15_t) x * (q15_t) y)); */
1125:Drivers/CMSIS/DSP/Include/arm_math.h ****     return ((uint64_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
1126:Drivers/CMSIS/DSP/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16)) +
1127:Drivers/CMSIS/DSP/Include/arm_math.h ****                        ( ((q63_t)sum    )                                  )   ));
1128:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
1129:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1130:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1131:Drivers/CMSIS/DSP/Include/arm_math.h ****   /*
1132:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined SMLALDX
1133:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1134:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint64_t __SMLALDX(
1135:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
1136:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t y,
1137:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint64_t sum)
1138:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1139:Drivers/CMSIS/DSP/Include/arm_math.h **** /*  return (sum + ((q15_t) (x >> 16) * (q15_t) y)) + ((q15_t) x * (q15_t) (y >> 16)); */
1140:Drivers/CMSIS/DSP/Include/arm_math.h ****     return ((uint64_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y      ) >> 16)) +
1141:Drivers/CMSIS/DSP/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y << 16) >> 16)) +
1142:Drivers/CMSIS/DSP/Include/arm_math.h ****                        ( ((q63_t)sum    )                                  )   ));
1143:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 25


1144:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1145:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1146:Drivers/CMSIS/DSP/Include/arm_math.h ****   /*
1147:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined SMUAD
1148:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1149:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __SMUAD(
1150:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
1151:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t y)
1152:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1153:Drivers/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) +
1154:Drivers/CMSIS/DSP/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16))   ));
1155:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
1156:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1157:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1158:Drivers/CMSIS/DSP/Include/arm_math.h ****   /*
1159:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined SMUSD
1160:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1161:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __SMUSD(
1162:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t x,
1163:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t y)
1164:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1165:Drivers/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 16) >> 16) * (((q31_t)y << 16) >> 16)) -
1166:Drivers/CMSIS/DSP/Include/arm_math.h ****                        ((((q31_t)x      ) >> 16) * (((q31_t)y      ) >> 16))   ));
1167:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
1168:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1169:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1170:Drivers/CMSIS/DSP/Include/arm_math.h ****   /*
1171:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined SXTB16
1172:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1173:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE uint32_t __SXTB16(
1174:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t x)
1175:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1176:Drivers/CMSIS/DSP/Include/arm_math.h ****     return ((uint32_t)(((((q31_t)x << 24) >> 24) & (q31_t)0x0000FFFF) |
1177:Drivers/CMSIS/DSP/Include/arm_math.h ****                        ((((q31_t)x <<  8) >>  8) & (q31_t)0xFFFF0000)  ));
1178:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
1179:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1180:Drivers/CMSIS/DSP/Include/arm_math.h ****   /*
1181:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief C custom defined SMMLA
1182:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1183:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE int32_t __SMMLA(
1184:Drivers/CMSIS/DSP/Include/arm_math.h ****   int32_t x,
1185:Drivers/CMSIS/DSP/Include/arm_math.h ****   int32_t y,
1186:Drivers/CMSIS/DSP/Include/arm_math.h ****   int32_t sum)
1187:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1188:Drivers/CMSIS/DSP/Include/arm_math.h ****     return (sum + (int32_t) (((int64_t) x * y) >> 32));
1189:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
1190:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1191:Drivers/CMSIS/DSP/Include/arm_math.h **** #endif /* !defined (ARM_MATH_DSP) */
1192:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1193:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1194:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1195:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q7 FIR filter.
1196:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1197:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1198:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1199:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;        /**< number of filter coefficients in the filter. */
1200:Drivers/CMSIS/DSP/Include/arm_math.h ****           q7_t *pState;            /**< points to the state variable array. The array is of length 
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 26


1201:Drivers/CMSIS/DSP/Include/arm_math.h ****     const q7_t *pCoeffs;           /**< points to the coefficient array. The array is of length num
1202:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_instance_q7;
1203:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1204:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1205:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 FIR filter.
1206:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1207:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1208:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1209:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;         /**< number of filter coefficients in the filter. */
1210:Drivers/CMSIS/DSP/Include/arm_math.h ****           q15_t *pState;            /**< points to the state variable array. The array is of length
1211:Drivers/CMSIS/DSP/Include/arm_math.h ****     const q15_t *pCoeffs;           /**< points to the coefficient array. The array is of length nu
1212:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_instance_q15;
1213:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1214:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1215:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q31 FIR filter.
1216:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1217:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1218:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1219:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;         /**< number of filter coefficients in the filter. */
1220:Drivers/CMSIS/DSP/Include/arm_math.h ****           q31_t *pState;            /**< points to the state variable array. The array is of length
1221:Drivers/CMSIS/DSP/Include/arm_math.h ****     const q31_t *pCoeffs;           /**< points to the coefficient array. The array is of length nu
1222:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_instance_q31;
1223:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1224:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1225:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point FIR filter.
1226:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1227:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1228:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1229:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;     /**< number of filter coefficients in the filter. */
1230:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t *pState;    /**< points to the state variable array. The array is of length num
1231:Drivers/CMSIS/DSP/Include/arm_math.h ****     const float32_t *pCoeffs;   /**< points to the coefficient array. The array is of length numTap
1232:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_instance_f32;
1233:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1234:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1235:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q7 FIR filter.
1236:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q7 FIR filter structure.
1237:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1238:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1239:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1240:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1241:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_q7(
1242:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_instance_q7 * S,
1243:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrc,
1244:Drivers/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
1245:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
1246:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1247:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1248:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q7 FIR filter.
1249:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q7 FIR structure.
1250:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter.
1251:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1252:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1253:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed.
1254:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1255:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_init_q7(
1256:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_fir_instance_q7 * S,
1257:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 27


1258:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pCoeffs,
1259:Drivers/CMSIS/DSP/Include/arm_math.h ****         q7_t * pState,
1260:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
1261:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1262:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1263:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q15 FIR filter.
1264:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR structure.
1265:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1266:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1267:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1268:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1269:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_q15(
1270:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_instance_q15 * S,
1271:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
1272:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
1273:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
1274:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1275:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1276:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the fast Q15 FIR filter (fast version).
1277:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR filter structure.
1278:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1279:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1280:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1281:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1282:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_fast_q15(
1283:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_instance_q15 * S,
1284:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
1285:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
1286:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
1287:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1288:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1289:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q15 FIR filter.
1290:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 FIR filter structure.
1291:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter. Must be even and greate
1292:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1293:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1294:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed at a time.
1295:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1296:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SUCCESS</code> if initialization was successful or
1297:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_ARGUMENT_ERROR</code> if <code>numTaps</code> is not a supported value.
1298:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1299:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_fir_init_q15(
1300:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_fir_instance_q15 * S,
1301:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
1302:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pCoeffs,
1303:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pState,
1304:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
1305:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1306:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1307:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q31 FIR filter.
1308:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR filter structure.
1309:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1310:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1311:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1312:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1313:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_q31(
1314:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_instance_q31 * S,
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 28


1315:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
1316:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
1317:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
1318:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1319:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1320:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the fast Q31 FIR filter (fast version).
1321:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR filter structure.
1322:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1323:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1324:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1325:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1326:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_fast_q31(
1327:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_instance_q31 * S,
1328:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
1329:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
1330:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
1331:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1332:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1333:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q31 FIR filter.
1334:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 FIR structure.
1335:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter.
1336:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1337:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1338:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed at a time.
1339:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1340:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_init_q31(
1341:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_fir_instance_q31 * S,
1342:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
1343:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pCoeffs,
1344:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pState,
1345:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
1346:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1347:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1348:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the floating-point FIR filter.
1349:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR structure.
1350:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1351:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1352:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1353:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1354:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_f32(
1355:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_instance_f32 * S,
1356:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
1357:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
1358:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
1359:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1360:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1361:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the floating-point FIR filter.
1362:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point FIR filter structure.
1363:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numTaps    Number of filter coefficients in the filter.
1364:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1365:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1366:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that are processed at a time.
1367:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1368:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_init_f32(
1369:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_fir_instance_f32 * S,
1370:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
1371:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pCoeffs,
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 29


1372:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pState,
1373:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
1374:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1375:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1376:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 Biquad cascade filter.
1377:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1378:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1379:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1380:Drivers/CMSIS/DSP/Include/arm_math.h ****           int8_t numStages;        /**< number of 2nd order stages in the filter.  Overall order is
1381:Drivers/CMSIS/DSP/Include/arm_math.h ****           q15_t *pState;           /**< Points to the array of state coefficients.  The array is of
1382:Drivers/CMSIS/DSP/Include/arm_math.h ****     const q15_t *pCoeffs;          /**< Points to the array of coefficients.  The array is of lengt
1383:Drivers/CMSIS/DSP/Include/arm_math.h ****           int8_t postShift;        /**< Additional shift, in bits, applied to each output sample. *
1384:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_biquad_casd_df1_inst_q15;
1385:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1386:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1387:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q31 Biquad cascade filter.
1388:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1389:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1390:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1391:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint32_t numStages;      /**< number of 2nd order stages in the filter.  Overall order is
1392:Drivers/CMSIS/DSP/Include/arm_math.h ****           q31_t *pState;           /**< Points to the array of state coefficients.  The array is of
1393:Drivers/CMSIS/DSP/Include/arm_math.h ****     const q31_t *pCoeffs;          /**< Points to the array of coefficients.  The array is of lengt
1394:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t postShift;       /**< Additional shift, in bits, applied to each output sample. *
1395:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_biquad_casd_df1_inst_q31;
1396:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1397:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1398:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point Biquad cascade filter.
1399:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1400:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1401:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1402:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint32_t numStages;      /**< number of 2nd order stages in the filter.  Overall order is
1403:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t *pState;       /**< Points to the array of state coefficients.  The array is of
1404:Drivers/CMSIS/DSP/Include/arm_math.h ****     const float32_t *pCoeffs;      /**< Points to the array of coefficients.  The array is of lengt
1405:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_biquad_casd_df1_inst_f32;
1406:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1407:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1408:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q15 Biquad cascade filter.
1409:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 Biquad cascade structure.
1410:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1411:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1412:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1413:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1414:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cascade_df1_q15(
1415:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_biquad_casd_df1_inst_q15 * S,
1416:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
1417:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
1418:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
1419:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1420:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1421:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q15 Biquad cascade filter.
1422:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 Biquad cascade structure.
1423:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
1424:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1425:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1426:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     postShift  Shift to be applied to the output. Varies according to the coefficie
1427:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1428:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cascade_df1_init_q15(
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 30


1429:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_biquad_casd_df1_inst_q15 * S,
1430:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t numStages,
1431:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pCoeffs,
1432:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pState,
1433:Drivers/CMSIS/DSP/Include/arm_math.h ****         int8_t postShift);
1434:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1435:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1436:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Fast but less precise processing function for the Q15 Biquad cascade filter for Cortex-
1437:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 Biquad cascade structure.
1438:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1439:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1440:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1441:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1442:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cascade_df1_fast_q15(
1443:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_biquad_casd_df1_inst_q15 * S,
1444:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
1445:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
1446:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
1447:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1448:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1449:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q31 Biquad cascade filter
1450:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 Biquad cascade structure.
1451:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1452:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1453:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1454:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1455:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cascade_df1_q31(
1456:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_biquad_casd_df1_inst_q31 * S,
1457:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
1458:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
1459:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
1460:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1461:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1462:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Fast but less precise processing function for the Q31 Biquad cascade filter for Cortex-
1463:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 Biquad cascade structure.
1464:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1465:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1466:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1467:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1468:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cascade_df1_fast_q31(
1469:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_biquad_casd_df1_inst_q31 * S,
1470:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
1471:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
1472:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
1473:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1474:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1475:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q31 Biquad cascade filter.
1476:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 Biquad cascade structure.
1477:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
1478:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1479:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1480:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     postShift  Shift to be applied to the output. Varies according to the coefficie
1481:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1482:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cascade_df1_init_q31(
1483:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_biquad_casd_df1_inst_q31 * S,
1484:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t numStages,
1485:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pCoeffs,
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 31


1486:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pState,
1487:Drivers/CMSIS/DSP/Include/arm_math.h ****         int8_t postShift);
1488:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1489:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1490:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the floating-point Biquad cascade filter.
1491:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point Biquad cascade structure.
1492:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
1493:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
1494:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
1495:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1496:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cascade_df1_f32(
1497:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_biquad_casd_df1_inst_f32 * S,
1498:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
1499:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
1500:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
1501:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1502:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1503:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the floating-point Biquad cascade filter.
1504:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point Biquad cascade structure
1505:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
1506:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
1507:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
1508:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1509:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cascade_df1_init_f32(
1510:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_biquad_casd_df1_inst_f32 * S,
1511:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t numStages,
1512:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pCoeffs,
1513:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pState);
1514:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1515:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1516:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point matrix structure.
1517:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1518:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1519:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1520:Drivers/CMSIS/DSP/Include/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1521:Drivers/CMSIS/DSP/Include/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1522:Drivers/CMSIS/DSP/Include/arm_math.h ****     float32_t *pData;     /**< points to the data of the matrix. */
1523:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_matrix_instance_f32;
1524:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1525:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1526:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1527:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point matrix structure.
1528:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1529:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1530:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1531:Drivers/CMSIS/DSP/Include/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1532:Drivers/CMSIS/DSP/Include/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1533:Drivers/CMSIS/DSP/Include/arm_math.h ****     float64_t *pData;     /**< points to the data of the matrix. */
1534:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_matrix_instance_f64;
1535:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1536:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1537:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 matrix structure.
1538:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1539:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1540:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1541:Drivers/CMSIS/DSP/Include/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1542:Drivers/CMSIS/DSP/Include/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 32


1543:Drivers/CMSIS/DSP/Include/arm_math.h ****     q15_t *pData;         /**< points to the data of the matrix. */
1544:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_matrix_instance_q15;
1545:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1546:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1547:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q31 matrix structure.
1548:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1549:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1550:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1551:Drivers/CMSIS/DSP/Include/arm_math.h ****     uint16_t numRows;     /**< number of rows of the matrix.     */
1552:Drivers/CMSIS/DSP/Include/arm_math.h ****     uint16_t numCols;     /**< number of columns of the matrix.  */
1553:Drivers/CMSIS/DSP/Include/arm_math.h ****     q31_t *pData;         /**< points to the data of the matrix. */
1554:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_matrix_instance_q31;
1555:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1556:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1557:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Floating-point matrix addition.
1558:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1559:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1560:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1561:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1562:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1563:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1564:Drivers/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_add_f32(
1565:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1566:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1567:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_f32 * pDst);
1568:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1569:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1570:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Q15 matrix addition.
1571:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]   pSrcA  points to the first input matrix structure
1572:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]   pSrcB  points to the second input matrix structure
1573:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out]  pDst   points to output matrix structure
1574:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1575:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1576:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1577:Drivers/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_add_q15(
1578:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1579:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1580:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q15 * pDst);
1581:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1582:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1583:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Q31 matrix addition.
1584:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1585:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1586:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1587:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1588:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1589:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1590:Drivers/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_add_q31(
1591:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1592:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1593:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q31 * pDst);
1594:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1595:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1596:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Floating-point, complex, matrix multiplication.
1597:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1598:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1599:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 33


1600:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1601:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1602:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1603:Drivers/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_cmplx_mult_f32(
1604:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1605:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1606:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_f32 * pDst);
1607:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1608:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1609:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Q15, complex,  matrix multiplication.
1610:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1611:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1612:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1613:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1614:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1615:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1616:Drivers/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_cmplx_mult_q15(
1617:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1618:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1619:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q15 * pDst,
1620:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch);
1621:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1622:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1623:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Q31, complex, matrix multiplication.
1624:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1625:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1626:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1627:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1628:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1629:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1630:Drivers/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_cmplx_mult_q31(
1631:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1632:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1633:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q31 * pDst);
1634:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1635:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1636:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Floating-point matrix transpose.
1637:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc  points to the input matrix
1638:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst  points to the output matrix
1639:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
1640:Drivers/CMSIS/DSP/Include/arm_math.h ****    * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
1641:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1642:Drivers/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_trans_f32(
1643:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrc,
1644:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_f32 * pDst);
1645:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1646:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1647:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Q15 matrix transpose.
1648:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc  points to the input matrix
1649:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst  points to the output matrix
1650:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
1651:Drivers/CMSIS/DSP/Include/arm_math.h ****    * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
1652:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1653:Drivers/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_trans_q15(
1654:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrc,
1655:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q15 * pDst);
1656:Drivers/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 34


1657:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1658:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Q31 matrix transpose.
1659:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc  points to the input matrix
1660:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst  points to the output matrix
1661:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return    The function returns either  <code>ARM_MATH_SIZE_MISMATCH</code>
1662:Drivers/CMSIS/DSP/Include/arm_math.h ****    * or <code>ARM_MATH_SUCCESS</code> based on the outcome of size checking.
1663:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1664:Drivers/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_trans_q31(
1665:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrc,
1666:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q31 * pDst);
1667:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1668:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1669:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Floating-point matrix multiplication
1670:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1671:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1672:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1673:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1674:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1675:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1676:Drivers/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_mult_f32(
1677:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1678:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1679:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_f32 * pDst);
1680:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1681:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1682:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Q15 matrix multiplication
1683:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA   points to the first input matrix structure
1684:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB   points to the second input matrix structure
1685:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst    points to output matrix structure
1686:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pState  points to the array for storing intermediate results
1687:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1688:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1689:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1690:Drivers/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_mult_q15(
1691:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1692:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1693:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q15 * pDst,
1694:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pState);
1695:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1696:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1697:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Q15 matrix multiplication (fast variant) for Cortex-M3 and Cortex-M4
1698:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA   points to the first input matrix structure
1699:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB   points to the second input matrix structure
1700:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst    points to output matrix structure
1701:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pState  points to the array for storing intermediate results
1702:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1703:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1704:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1705:Drivers/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_mult_fast_q15(
1706:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1707:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1708:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q15 * pDst,
1709:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pState);
1710:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1711:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1712:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Q31 matrix multiplication
1713:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 35


1714:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1715:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1716:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1717:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1718:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1719:Drivers/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_mult_q31(
1720:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1721:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1722:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q31 * pDst);
1723:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1724:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1725:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Q31 matrix multiplication (fast variant) for Cortex-M3 and Cortex-M4
1726:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1727:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1728:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1729:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1730:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1731:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1732:Drivers/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_mult_fast_q31(
1733:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1734:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1735:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q31 * pDst);
1736:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1737:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1738:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Floating-point matrix subtraction
1739:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1740:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1741:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1742:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1743:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1744:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1745:Drivers/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_sub_f32(
1746:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcA,
1747:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrcB,
1748:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_f32 * pDst);
1749:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1750:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1751:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Q15 matrix subtraction
1752:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1753:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1754:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1755:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1756:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1757:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1758:Drivers/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_sub_q15(
1759:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcA,
1760:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrcB,
1761:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q15 * pDst);
1762:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1763:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1764:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Q31 matrix subtraction
1765:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA  points to the first input matrix structure
1766:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB  points to the second input matrix structure
1767:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst   points to output matrix structure
1768:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1769:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1770:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 36


1771:Drivers/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_sub_q31(
1772:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcA,
1773:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrcB,
1774:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q31 * pDst);
1775:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1776:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1777:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Floating-point matrix scaling.
1778:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc   points to the input matrix
1779:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  scale  scale factor
1780:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst   points to the output matrix
1781:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1782:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1783:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1784:Drivers/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_scale_f32(
1785:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_f32 * pSrc,
1786:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t scale,
1787:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_f32 * pDst);
1788:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1789:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1790:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Q15 matrix scaling.
1791:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc        points to input matrix
1792:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale factor
1793:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
1794:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to output matrix
1795:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1796:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1797:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1798:Drivers/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_scale_q15(
1799:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q15 * pSrc,
1800:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t scaleFract,
1801:Drivers/CMSIS/DSP/Include/arm_math.h ****         int32_t shift,
1802:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q15 * pDst);
1803:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1804:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1805:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Q31 matrix scaling.
1806:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc        points to input matrix
1807:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale factor
1808:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
1809:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to output matrix structure
1810:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return     The function returns either
1811:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <code>ARM_MATH_SIZE_MISMATCH</code> or <code>ARM_MATH_SUCCESS</code> based on the outcome of s
1812:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1813:Drivers/CMSIS/DSP/Include/arm_math.h **** arm_status arm_mat_scale_q31(
1814:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_q31 * pSrc,
1815:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t scaleFract,
1816:Drivers/CMSIS/DSP/Include/arm_math.h ****         int32_t shift,
1817:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q31 * pDst);
1818:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1819:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1820:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Q31 matrix initialization.
1821:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S         points to an instance of the floating-point matrix structure.
1822:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     nRows     number of rows in the matrix.
1823:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     nColumns  number of columns in the matrix.
1824:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pData     points to the matrix data array.
1825:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1826:Drivers/CMSIS/DSP/Include/arm_math.h **** void arm_mat_init_q31(
1827:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q31 * S,
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 37


1828:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t nRows,
1829:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t nColumns,
1830:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pData);
1831:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1832:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1833:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Q15 matrix initialization.
1834:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S         points to an instance of the floating-point matrix structure.
1835:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     nRows     number of rows in the matrix.
1836:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     nColumns  number of columns in the matrix.
1837:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pData     points to the matrix data array.
1838:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1839:Drivers/CMSIS/DSP/Include/arm_math.h **** void arm_mat_init_q15(
1840:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_q15 * S,
1841:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t nRows,
1842:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t nColumns,
1843:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pData);
1844:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1845:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1846:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Floating-point matrix initialization.
1847:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S         points to an instance of the floating-point matrix structure.
1848:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     nRows     number of rows in the matrix.
1849:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     nColumns  number of columns in the matrix.
1850:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pData     points to the matrix data array.
1851:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1852:Drivers/CMSIS/DSP/Include/arm_math.h **** void arm_mat_init_f32(
1853:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_matrix_instance_f32 * S,
1854:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t nRows,
1855:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t nColumns,
1856:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pData);
1857:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1858:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1859:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1860:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 PID Control.
1861:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1862:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1863:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1864:Drivers/CMSIS/DSP/Include/arm_math.h ****           q15_t A0;           /**< The derived gain, A0 = Kp + Ki + Kd . */
1865:Drivers/CMSIS/DSP/Include/arm_math.h **** #if !defined (ARM_MATH_DSP)
1866:Drivers/CMSIS/DSP/Include/arm_math.h ****           q15_t A1;
1867:Drivers/CMSIS/DSP/Include/arm_math.h ****           q15_t A2;
1868:Drivers/CMSIS/DSP/Include/arm_math.h **** #else
1869:Drivers/CMSIS/DSP/Include/arm_math.h ****           q31_t A1;           /**< The derived gain A1 = -Kp - 2Kd | Kd.*/
1870:Drivers/CMSIS/DSP/Include/arm_math.h **** #endif
1871:Drivers/CMSIS/DSP/Include/arm_math.h ****           q15_t state[3];     /**< The state array of length 3. */
1872:Drivers/CMSIS/DSP/Include/arm_math.h ****           q15_t Kp;           /**< The proportional gain. */
1873:Drivers/CMSIS/DSP/Include/arm_math.h ****           q15_t Ki;           /**< The integral gain. */
1874:Drivers/CMSIS/DSP/Include/arm_math.h ****           q15_t Kd;           /**< The derivative gain. */
1875:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_pid_instance_q15;
1876:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1877:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1878:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q31 PID Control.
1879:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1880:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1881:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1882:Drivers/CMSIS/DSP/Include/arm_math.h ****           q31_t A0;            /**< The derived gain, A0 = Kp + Ki + Kd . */
1883:Drivers/CMSIS/DSP/Include/arm_math.h ****           q31_t A1;            /**< The derived gain, A1 = -Kp - 2Kd. */
1884:Drivers/CMSIS/DSP/Include/arm_math.h ****           q31_t A2;            /**< The derived gain, A2 = Kd . */
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 38


1885:Drivers/CMSIS/DSP/Include/arm_math.h ****           q31_t state[3];      /**< The state array of length 3. */
1886:Drivers/CMSIS/DSP/Include/arm_math.h ****           q31_t Kp;            /**< The proportional gain. */
1887:Drivers/CMSIS/DSP/Include/arm_math.h ****           q31_t Ki;            /**< The integral gain. */
1888:Drivers/CMSIS/DSP/Include/arm_math.h ****           q31_t Kd;            /**< The derivative gain. */
1889:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_pid_instance_q31;
1890:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1891:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1892:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point PID Control.
1893:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1894:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1895:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1896:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t A0;          /**< The derived gain, A0 = Kp + Ki + Kd . */
1897:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t A1;          /**< The derived gain, A1 = -Kp - 2Kd. */
1898:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t A2;          /**< The derived gain, A2 = Kd . */
1899:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t state[3];    /**< The state array of length 3. */
1900:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t Kp;          /**< The proportional gain. */
1901:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t Ki;          /**< The integral gain. */
1902:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t Kd;          /**< The derivative gain. */
1903:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_pid_instance_f32;
1904:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1905:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1906:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1907:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1908:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the floating-point PID Control.
1909:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S               points to an instance of the PID structure.
1910:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the s
1911:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1912:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_pid_init_f32(
1913:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_pid_instance_f32 * S,
1914:Drivers/CMSIS/DSP/Include/arm_math.h ****         int32_t resetStateFlag);
1915:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1916:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1917:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1918:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Reset function for the floating-point PID Control.
1919:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S  is an instance of the floating-point PID Control structure
1920:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1921:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_pid_reset_f32(
1922:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_pid_instance_f32 * S);
1923:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1924:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1925:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1926:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q31 PID Control.
1927:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S               points to an instance of the Q15 PID structure.
1928:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the s
1929:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1930:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_pid_init_q31(
1931:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_pid_instance_q31 * S,
1932:Drivers/CMSIS/DSP/Include/arm_math.h ****         int32_t resetStateFlag);
1933:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1934:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1935:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1936:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Reset function for the Q31 PID Control.
1937:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S   points to an instance of the Q31 PID Control structure
1938:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1939:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1940:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_pid_reset_q31(
1941:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_pid_instance_q31 * S);
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 39


1942:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1943:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1944:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1945:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q15 PID Control.
1946:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S               points to an instance of the Q15 PID structure.
1947:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     resetStateFlag  flag to reset the state. 0 = no change in state 1 = reset the s
1948:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1949:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_pid_init_q15(
1950:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_pid_instance_q15 * S,
1951:Drivers/CMSIS/DSP/Include/arm_math.h ****         int32_t resetStateFlag);
1952:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1953:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1954:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1955:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Reset function for the Q15 PID Control.
1956:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S  points to an instance of the q15 PID Control structure
1957:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1958:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_pid_reset_q15(
1959:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_pid_instance_q15 * S);
1960:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1961:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1962:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1963:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point Linear Interpolate function.
1964:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1965:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1966:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1967:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint32_t nValues;           /**< nValues */
1968:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t x1;               /**< x1 */
1969:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t xSpacing;         /**< xSpacing */
1970:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t *pYData;          /**< pointer to the table of Y values */
1971:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_linear_interp_instance_f32;
1972:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1973:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
1974:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point bilinear interpolation function.
1975:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1976:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1977:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1978:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t numRows;   /**< number of rows in the data table. */
1979:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t numCols;   /**< number of columns in the data table. */
1980:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t *pData;   /**< points to the data table. */
1981:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_bilinear_interp_instance_f32;
1982:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1983:Drivers/CMSIS/DSP/Include/arm_math.h ****    /**
1984:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q31 bilinear interpolation function.
1985:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1986:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1987:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1988:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t numRows;   /**< number of rows in the data table. */
1989:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t numCols;   /**< number of columns in the data table. */
1990:Drivers/CMSIS/DSP/Include/arm_math.h ****           q31_t *pData;       /**< points to the data table. */
1991:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_bilinear_interp_instance_q31;
1992:Drivers/CMSIS/DSP/Include/arm_math.h **** 
1993:Drivers/CMSIS/DSP/Include/arm_math.h ****    /**
1994:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 bilinear interpolation function.
1995:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
1996:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
1997:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
1998:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t numRows;   /**< number of rows in the data table. */
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 40


1999:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t numCols;   /**< number of columns in the data table. */
2000:Drivers/CMSIS/DSP/Include/arm_math.h ****           q15_t *pData;       /**< points to the data table. */
2001:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_bilinear_interp_instance_q15;
2002:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2003:Drivers/CMSIS/DSP/Include/arm_math.h ****    /**
2004:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 bilinear interpolation function.
2005:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2006:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
2007:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
2008:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t numRows;   /**< number of rows in the data table. */
2009:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t numCols;   /**< number of columns in the data table. */
2010:Drivers/CMSIS/DSP/Include/arm_math.h ****           q7_t *pData;        /**< points to the data table. */
2011:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_bilinear_interp_instance_q7;
2012:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2013:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2014:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2015:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Q7 vector multiplication.
2016:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2017:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2018:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2019:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2020:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2021:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_mult_q7(
2022:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcA,
2023:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcB,
2024:Drivers/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
2025:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2026:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2027:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2028:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2029:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Q15 vector multiplication.
2030:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2031:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2032:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2033:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2034:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2035:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_mult_q15(
2036:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
2037:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
2038:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
2039:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2040:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2041:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2042:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2043:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Q31 vector multiplication.
2044:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2045:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2046:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2047:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2048:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2049:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_mult_q31(
2050:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcA,
2051:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcB,
2052:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
2053:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2054:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2055:Drivers/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 41


2056:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2057:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Floating-point vector multiplication.
2058:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2059:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2060:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2061:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2062:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2063:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_mult_f32(
2064:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrcA,
2065:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrcB,
2066:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
2067:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2068:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2069:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2070:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2071:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 CFFT/CIFFT function.
2072:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2073:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
2074:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
2075:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t fftLen;                 /**< length of the FFT. */
2076:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (
2077:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (b
2078:Drivers/CMSIS/DSP/Include/arm_math.h ****     const q15_t *pTwiddle;                 /**< points to the Sin twiddle factor table. */
2079:Drivers/CMSIS/DSP/Include/arm_math.h ****     const uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
2080:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports differen
2081:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size 
2082:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_cfft_radix2_instance_q15;
2083:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2084:Drivers/CMSIS/DSP/Include/arm_math.h **** /* Deprecated */
2085:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_cfft_radix2_init_q15(
2086:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_cfft_radix2_instance_q15 * S,
2087:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t fftLen,
2088:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t ifftFlag,
2089:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t bitReverseFlag);
2090:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2091:Drivers/CMSIS/DSP/Include/arm_math.h **** /* Deprecated */
2092:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_cfft_radix2_q15(
2093:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_cfft_radix2_instance_q15 * S,
2094:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pSrc);
2095:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2096:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2097:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2098:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 CFFT/CIFFT function.
2099:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2100:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
2101:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
2102:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t fftLen;                 /**< length of the FFT. */
2103:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (
2104:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (b
2105:Drivers/CMSIS/DSP/Include/arm_math.h ****     const q15_t *pTwiddle;                 /**< points to the twiddle factor table. */
2106:Drivers/CMSIS/DSP/Include/arm_math.h ****     const uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
2107:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports differen
2108:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size 
2109:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_cfft_radix4_instance_q15;
2110:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2111:Drivers/CMSIS/DSP/Include/arm_math.h **** /* Deprecated */
2112:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_cfft_radix4_init_q15(
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 42


2113:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_cfft_radix4_instance_q15 * S,
2114:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t fftLen,
2115:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t ifftFlag,
2116:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t bitReverseFlag);
2117:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2118:Drivers/CMSIS/DSP/Include/arm_math.h **** /* Deprecated */
2119:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_cfft_radix4_q15(
2120:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_cfft_radix4_instance_q15 * S,
2121:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pSrc);
2122:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2123:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2124:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Radix-2 Q31 CFFT/CIFFT function.
2125:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2126:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
2127:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
2128:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t fftLen;                 /**< length of the FFT. */
2129:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (
2130:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (b
2131:Drivers/CMSIS/DSP/Include/arm_math.h ****     const q31_t *pTwiddle;                 /**< points to the Twiddle factor table. */
2132:Drivers/CMSIS/DSP/Include/arm_math.h ****     const uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
2133:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports differen
2134:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size 
2135:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_cfft_radix2_instance_q31;
2136:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2137:Drivers/CMSIS/DSP/Include/arm_math.h **** /* Deprecated */
2138:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_cfft_radix2_init_q31(
2139:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_cfft_radix2_instance_q31 * S,
2140:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t fftLen,
2141:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t ifftFlag,
2142:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t bitReverseFlag);
2143:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2144:Drivers/CMSIS/DSP/Include/arm_math.h **** /* Deprecated */
2145:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_cfft_radix2_q31(
2146:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_cfft_radix2_instance_q31 * S,
2147:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pSrc);
2148:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2149:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2150:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q31 CFFT/CIFFT function.
2151:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2152:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
2153:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
2154:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t fftLen;                 /**< length of the FFT. */
2155:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t ifftFlag;                /**< flag that selects forward (ifftFlag=0) or inverse (
2156:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t bitReverseFlag;          /**< flag that enables (bitReverseFlag=1) or disables (b
2157:Drivers/CMSIS/DSP/Include/arm_math.h ****     const q31_t *pTwiddle;                 /**< points to the twiddle factor table. */
2158:Drivers/CMSIS/DSP/Include/arm_math.h ****     const uint16_t *pBitRevTable;          /**< points to the bit reversal table. */
2159:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t twidCoefModifier;       /**< twiddle coefficient modifier that supports differen
2160:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t bitRevFactor;           /**< bit reversal modifier that supports different size 
2161:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_cfft_radix4_instance_q31;
2162:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2163:Drivers/CMSIS/DSP/Include/arm_math.h **** /* Deprecated */
2164:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_cfft_radix4_q31(
2165:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_cfft_radix4_instance_q31 * S,
2166:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pSrc);
2167:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2168:Drivers/CMSIS/DSP/Include/arm_math.h **** /* Deprecated */
2169:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_cfft_radix4_init_q31(
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 43


2170:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_cfft_radix4_instance_q31 * S,
2171:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t fftLen,
2172:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t ifftFlag,
2173:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t bitReverseFlag);
2174:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2175:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2176:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point CFFT/CIFFT function.
2177:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2178:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
2179:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
2180:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t fftLen;                   /**< length of the FFT. */
2181:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t ifftFlag;                  /**< flag that selects forward (ifftFlag=0) or inverse
2182:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t bitReverseFlag;            /**< flag that enables (bitReverseFlag=1) or disables 
2183:Drivers/CMSIS/DSP/Include/arm_math.h ****     const float32_t *pTwiddle;               /**< points to the Twiddle factor table. */
2184:Drivers/CMSIS/DSP/Include/arm_math.h ****     const uint16_t *pBitRevTable;            /**< points to the bit reversal table. */
2185:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t twidCoefModifier;         /**< twiddle coefficient modifier that supports differ
2186:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t bitRevFactor;             /**< bit reversal modifier that supports different siz
2187:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t onebyfftLen;             /**< value of 1/fftLen. */
2188:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_cfft_radix2_instance_f32;
2189:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2190:Drivers/CMSIS/DSP/Include/arm_math.h **** /* Deprecated */
2191:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_cfft_radix2_init_f32(
2192:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_cfft_radix2_instance_f32 * S,
2193:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t fftLen,
2194:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t ifftFlag,
2195:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t bitReverseFlag);
2196:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2197:Drivers/CMSIS/DSP/Include/arm_math.h **** /* Deprecated */
2198:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_cfft_radix2_f32(
2199:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_cfft_radix2_instance_f32 * S,
2200:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pSrc);
2201:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2202:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2203:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point CFFT/CIFFT function.
2204:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2205:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
2206:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
2207:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t fftLen;                   /**< length of the FFT. */
2208:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t ifftFlag;                  /**< flag that selects forward (ifftFlag=0) or inverse
2209:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t bitReverseFlag;            /**< flag that enables (bitReverseFlag=1) or disables 
2210:Drivers/CMSIS/DSP/Include/arm_math.h ****     const float32_t *pTwiddle;               /**< points to the Twiddle factor table. */
2211:Drivers/CMSIS/DSP/Include/arm_math.h ****     const uint16_t *pBitRevTable;            /**< points to the bit reversal table. */
2212:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t twidCoefModifier;         /**< twiddle coefficient modifier that supports differ
2213:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t bitRevFactor;             /**< bit reversal modifier that supports different siz
2214:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t onebyfftLen;             /**< value of 1/fftLen. */
2215:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_cfft_radix4_instance_f32;
2216:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2217:Drivers/CMSIS/DSP/Include/arm_math.h **** /* Deprecated */
2218:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_cfft_radix4_init_f32(
2219:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_cfft_radix4_instance_f32 * S,
2220:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t fftLen,
2221:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t ifftFlag,
2222:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t bitReverseFlag);
2223:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2224:Drivers/CMSIS/DSP/Include/arm_math.h **** /* Deprecated */
2225:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_cfft_radix4_f32(
2226:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_cfft_radix4_instance_f32 * S,
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 44


2227:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pSrc);
2228:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2229:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2230:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the fixed-point CFFT/CIFFT function.
2231:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2232:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
2233:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
2234:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t fftLen;                   /**< length of the FFT. */
2235:Drivers/CMSIS/DSP/Include/arm_math.h ****     const q15_t *pTwiddle;             /**< points to the Twiddle factor table. */
2236:Drivers/CMSIS/DSP/Include/arm_math.h ****     const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
2237:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t bitRevLength;             /**< bit reversal table length. */
2238:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_cfft_instance_q15;
2239:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2240:Drivers/CMSIS/DSP/Include/arm_math.h **** void arm_cfft_q15(
2241:Drivers/CMSIS/DSP/Include/arm_math.h ****     const arm_cfft_instance_q15 * S,
2242:Drivers/CMSIS/DSP/Include/arm_math.h ****           q15_t * p1,
2243:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t ifftFlag,
2244:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t bitReverseFlag);
2245:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2246:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2247:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the fixed-point CFFT/CIFFT function.
2248:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2249:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
2250:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
2251:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t fftLen;                   /**< length of the FFT. */
2252:Drivers/CMSIS/DSP/Include/arm_math.h ****     const q31_t *pTwiddle;             /**< points to the Twiddle factor table. */
2253:Drivers/CMSIS/DSP/Include/arm_math.h ****     const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
2254:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t bitRevLength;             /**< bit reversal table length. */
2255:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_cfft_instance_q31;
2256:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2257:Drivers/CMSIS/DSP/Include/arm_math.h **** void arm_cfft_q31(
2258:Drivers/CMSIS/DSP/Include/arm_math.h ****     const arm_cfft_instance_q31 * S,
2259:Drivers/CMSIS/DSP/Include/arm_math.h ****           q31_t * p1,
2260:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t ifftFlag,
2261:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t bitReverseFlag);
2262:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2263:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2264:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point CFFT/CIFFT function.
2265:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2266:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
2267:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
2268:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t fftLen;                   /**< length of the FFT. */
2269:Drivers/CMSIS/DSP/Include/arm_math.h ****     const float32_t *pTwiddle;         /**< points to the Twiddle factor table. */
2270:Drivers/CMSIS/DSP/Include/arm_math.h ****     const uint16_t *pBitRevTable;      /**< points to the bit reversal table. */
2271:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t bitRevLength;             /**< bit reversal table length. */
2272:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_cfft_instance_f32;
2273:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2274:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_cfft_f32(
2275:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_cfft_instance_f32 * S,
2276:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * p1,
2277:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t ifftFlag,
2278:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t bitReverseFlag);
2279:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2280:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2281:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 RFFT/RIFFT function.
2282:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2283:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 45


2284:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
2285:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint32_t fftLenReal;                      /**< length of the real FFT. */
2286:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t ifftFlagR;                        /**< flag that selects forward (ifftFlagR=0) or
2287:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t bitReverseFlagR;                  /**< flag that enables (bitReverseFlagR=1) or d
2288:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint32_t twidCoefRModifier;               /**< twiddle coefficient modifier that supports
2289:Drivers/CMSIS/DSP/Include/arm_math.h ****     const q15_t *pTwiddleAReal;                     /**< points to the real twiddle factor table. *
2290:Drivers/CMSIS/DSP/Include/arm_math.h ****     const q15_t *pTwiddleBReal;                     /**< points to the imag twiddle factor table. *
2291:Drivers/CMSIS/DSP/Include/arm_math.h ****     const arm_cfft_instance_q15 *pCfft;       /**< points to the complex FFT instance. */
2292:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_rfft_instance_q15;
2293:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2294:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_rfft_init_q15(
2295:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_rfft_instance_q15 * S,
2296:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t fftLenReal,
2297:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t ifftFlagR,
2298:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t bitReverseFlag);
2299:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2300:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_rfft_q15(
2301:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_rfft_instance_q15 * S,
2302:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pSrc,
2303:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst);
2304:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2305:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2306:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q31 RFFT/RIFFT function.
2307:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2308:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
2309:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
2310:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint32_t fftLenReal;                        /**< length of the real FFT. */
2311:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t ifftFlagR;                          /**< flag that selects forward (ifftFlagR=0) 
2312:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t bitReverseFlagR;                    /**< flag that enables (bitReverseFlagR=1) or
2313:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint32_t twidCoefRModifier;                 /**< twiddle coefficient modifier that suppor
2314:Drivers/CMSIS/DSP/Include/arm_math.h ****     const q31_t *pTwiddleAReal;                       /**< points to the real twiddle factor table.
2315:Drivers/CMSIS/DSP/Include/arm_math.h ****     const q31_t *pTwiddleBReal;                       /**< points to the imag twiddle factor table.
2316:Drivers/CMSIS/DSP/Include/arm_math.h ****     const arm_cfft_instance_q31 *pCfft;         /**< points to the complex FFT instance. */
2317:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_rfft_instance_q31;
2318:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2319:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_rfft_init_q31(
2320:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_rfft_instance_q31 * S,
2321:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t fftLenReal,
2322:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t ifftFlagR,
2323:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t bitReverseFlag);
2324:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2325:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_rfft_q31(
2326:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_rfft_instance_q31 * S,
2327:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pSrc,
2328:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst);
2329:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2330:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2331:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point RFFT/RIFFT function.
2332:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2333:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
2334:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
2335:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint32_t fftLenReal;                        /**< length of the real FFT. */
2336:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t fftLenBy2;                         /**< length of the complex FFT. */
2337:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t ifftFlagR;                          /**< flag that selects forward (ifftFlagR=0) 
2338:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t bitReverseFlagR;                    /**< flag that enables (bitReverseFlagR=1) or
2339:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint32_t twidCoefRModifier;                     /**< twiddle coefficient modifier that su
2340:Drivers/CMSIS/DSP/Include/arm_math.h ****     const float32_t *pTwiddleAReal;                   /**< points to the real twiddle factor table.
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 46


2341:Drivers/CMSIS/DSP/Include/arm_math.h ****     const float32_t *pTwiddleBReal;                   /**< points to the imag twiddle factor table.
2342:Drivers/CMSIS/DSP/Include/arm_math.h ****           arm_cfft_radix4_instance_f32 *pCfft;        /**< points to the complex FFT instance. */
2343:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_rfft_instance_f32;
2344:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2345:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_rfft_init_f32(
2346:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_rfft_instance_f32 * S,
2347:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_cfft_radix4_instance_f32 * S_CFFT,
2348:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t fftLenReal,
2349:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t ifftFlagR,
2350:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t bitReverseFlag);
2351:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2352:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_rfft_f32(
2353:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_rfft_instance_f32 * S,
2354:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pSrc,
2355:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst);
2356:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2357:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2358:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point RFFT/RIFFT function.
2359:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2360:Drivers/CMSIS/DSP/Include/arm_math.h **** typedef struct
2361:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
2362:Drivers/CMSIS/DSP/Include/arm_math.h ****           arm_cfft_instance_f32 Sint;      /**< Internal CFFT structure. */
2363:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t fftLenRFFT;             /**< length of the real sequence */
2364:Drivers/CMSIS/DSP/Include/arm_math.h ****     const float32_t * pTwiddleRFFT;        /**< Twiddle factors real stage  */
2365:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_rfft_fast_instance_f32 ;
2366:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2367:Drivers/CMSIS/DSP/Include/arm_math.h **** arm_status arm_rfft_fast_init_f32 (
2368:Drivers/CMSIS/DSP/Include/arm_math.h ****          arm_rfft_fast_instance_f32 * S,
2369:Drivers/CMSIS/DSP/Include/arm_math.h ****          uint16_t fftLen);
2370:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2371:Drivers/CMSIS/DSP/Include/arm_math.h **** arm_status arm_rfft_32_fast_init_f32 ( arm_rfft_fast_instance_f32 * S );
2372:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2373:Drivers/CMSIS/DSP/Include/arm_math.h **** arm_status arm_rfft_64_fast_init_f32 ( arm_rfft_fast_instance_f32 * S );
2374:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2375:Drivers/CMSIS/DSP/Include/arm_math.h **** arm_status arm_rfft_128_fast_init_f32 ( arm_rfft_fast_instance_f32 * S );
2376:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2377:Drivers/CMSIS/DSP/Include/arm_math.h **** arm_status arm_rfft_256_fast_init_f32 ( arm_rfft_fast_instance_f32 * S );
2378:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2379:Drivers/CMSIS/DSP/Include/arm_math.h **** arm_status arm_rfft_512_fast_init_f32 ( arm_rfft_fast_instance_f32 * S );
2380:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2381:Drivers/CMSIS/DSP/Include/arm_math.h **** arm_status arm_rfft_1024_fast_init_f32 ( arm_rfft_fast_instance_f32 * S );
2382:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2383:Drivers/CMSIS/DSP/Include/arm_math.h **** arm_status arm_rfft_2048_fast_init_f32 ( arm_rfft_fast_instance_f32 * S );
2384:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2385:Drivers/CMSIS/DSP/Include/arm_math.h **** arm_status arm_rfft_4096_fast_init_f32 ( arm_rfft_fast_instance_f32 * S );
2386:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2387:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2388:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_rfft_fast_f32(
2389:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_rfft_fast_instance_f32 * S,
2390:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * p, float32_t * pOut,
2391:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t ifftFlag);
2392:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2393:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2394:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point DCT4/IDCT4 function.
2395:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2396:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
2397:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 47


2398:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t N;                          /**< length of the DCT4. */
2399:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t Nby2;                       /**< half of the length of the DCT4. */
2400:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t normalize;                 /**< normalizing factor. */
2401:Drivers/CMSIS/DSP/Include/arm_math.h ****     const float32_t *pTwiddle;                 /**< points to the twiddle factor table. */
2402:Drivers/CMSIS/DSP/Include/arm_math.h ****     const float32_t *pCosFactor;               /**< points to the cosFactor table. */
2403:Drivers/CMSIS/DSP/Include/arm_math.h ****           arm_rfft_instance_f32 *pRfft;        /**< points to the real FFT instance. */
2404:Drivers/CMSIS/DSP/Include/arm_math.h ****           arm_cfft_radix4_instance_f32 *pCfft; /**< points to the complex FFT instance. */
2405:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_dct4_instance_f32;
2406:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2407:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2408:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2409:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the floating-point DCT4/IDCT4.
2410:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of floating-point DCT4/IDCT4 structure.
2411:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     S_RFFT     points to an instance of floating-point RFFT/RIFFT structure.
2412:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     S_CFFT     points to an instance of floating-point CFFT/CIFFT structure.
2413:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     N          length of the DCT4.
2414:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     Nby2       half of the length of the DCT4.
2415:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     normalize  normalizing factor.
2416:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or A
2417:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2418:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_dct4_init_f32(
2419:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_dct4_instance_f32 * S,
2420:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_rfft_instance_f32 * S_RFFT,
2421:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_cfft_radix4_instance_f32 * S_CFFT,
2422:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t N,
2423:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t Nby2,
2424:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t normalize);
2425:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2426:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2427:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2428:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the floating-point DCT4/IDCT4.
2429:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     S              points to an instance of the floating-point DCT4/IDCT4 structure
2430:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState         points to state buffer.
2431:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
2432:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2433:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_dct4_f32(
2434:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_dct4_instance_f32 * S,
2435:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pState,
2436:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pInlineBuffer);
2437:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2438:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2439:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2440:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q31 DCT4/IDCT4 function.
2441:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2442:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
2443:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
2444:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t N;                          /**< length of the DCT4. */
2445:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t Nby2;                       /**< half of the length of the DCT4. */
2446:Drivers/CMSIS/DSP/Include/arm_math.h ****           q31_t normalize;                     /**< normalizing factor. */
2447:Drivers/CMSIS/DSP/Include/arm_math.h ****     const q31_t *pTwiddle;                     /**< points to the twiddle factor table. */
2448:Drivers/CMSIS/DSP/Include/arm_math.h ****     const q31_t *pCosFactor;                   /**< points to the cosFactor table. */
2449:Drivers/CMSIS/DSP/Include/arm_math.h ****           arm_rfft_instance_q31 *pRfft;        /**< points to the real FFT instance. */
2450:Drivers/CMSIS/DSP/Include/arm_math.h ****           arm_cfft_radix4_instance_q31 *pCfft; /**< points to the complex FFT instance. */
2451:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_dct4_instance_q31;
2452:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2453:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2454:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 48


2455:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q31 DCT4/IDCT4.
2456:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of Q31 DCT4/IDCT4 structure.
2457:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     S_RFFT     points to an instance of Q31 RFFT/RIFFT structure
2458:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     S_CFFT     points to an instance of Q31 CFFT/CIFFT structure
2459:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     N          length of the DCT4.
2460:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     Nby2       half of the length of the DCT4.
2461:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     normalize  normalizing factor.
2462:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or A
2463:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2464:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_dct4_init_q31(
2465:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_dct4_instance_q31 * S,
2466:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_rfft_instance_q31 * S_RFFT,
2467:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_cfft_radix4_instance_q31 * S_CFFT,
2468:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t N,
2469:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t Nby2,
2470:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t normalize);
2471:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2472:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2473:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2474:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q31 DCT4/IDCT4.
2475:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     S              points to an instance of the Q31 DCT4 structure.
2476:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState         points to state buffer.
2477:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
2478:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2479:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_dct4_q31(
2480:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_dct4_instance_q31 * S,
2481:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pState,
2482:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pInlineBuffer);
2483:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2484:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2485:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2486:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 DCT4/IDCT4 function.
2487:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2488:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
2489:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
2490:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t N;                          /**< length of the DCT4. */
2491:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t Nby2;                       /**< half of the length of the DCT4. */
2492:Drivers/CMSIS/DSP/Include/arm_math.h ****           q15_t normalize;                     /**< normalizing factor. */
2493:Drivers/CMSIS/DSP/Include/arm_math.h ****     const q15_t *pTwiddle;                     /**< points to the twiddle factor table. */
2494:Drivers/CMSIS/DSP/Include/arm_math.h ****     const q15_t *pCosFactor;                   /**< points to the cosFactor table. */
2495:Drivers/CMSIS/DSP/Include/arm_math.h ****           arm_rfft_instance_q15 *pRfft;        /**< points to the real FFT instance. */
2496:Drivers/CMSIS/DSP/Include/arm_math.h ****           arm_cfft_radix4_instance_q15 *pCfft; /**< points to the complex FFT instance. */
2497:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_dct4_instance_q15;
2498:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2499:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2500:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2501:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q15 DCT4/IDCT4.
2502:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of Q15 DCT4/IDCT4 structure.
2503:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     S_RFFT     points to an instance of Q15 RFFT/RIFFT structure.
2504:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     S_CFFT     points to an instance of Q15 CFFT/CIFFT structure.
2505:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     N          length of the DCT4.
2506:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     Nby2       half of the length of the DCT4.
2507:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     normalize  normalizing factor.
2508:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return      arm_status function returns ARM_MATH_SUCCESS if initialization is successful or A
2509:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2510:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_dct4_init_q15(
2511:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_dct4_instance_q15 * S,
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 49


2512:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_rfft_instance_q15 * S_RFFT,
2513:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_cfft_radix4_instance_q15 * S_CFFT,
2514:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t N,
2515:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t Nby2,
2516:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t normalize);
2517:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2518:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2519:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2520:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q15 DCT4/IDCT4.
2521:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     S              points to an instance of the Q15 DCT4 structure.
2522:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState         points to state buffer.
2523:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] pInlineBuffer  points to the in-place input and output buffer.
2524:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2525:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_dct4_q15(
2526:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_dct4_instance_q15 * S,
2527:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pState,
2528:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pInlineBuffer);
2529:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2530:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2531:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2532:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Floating-point vector addition.
2533:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2534:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2535:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2536:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2537:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2538:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_add_f32(
2539:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrcA,
2540:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrcB,
2541:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
2542:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2543:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2544:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2545:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2546:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Q7 vector addition.
2547:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2548:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2549:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2550:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2551:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2552:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_add_q7(
2553:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcA,
2554:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcB,
2555:Drivers/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
2556:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2557:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2558:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2559:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2560:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Q15 vector addition.
2561:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2562:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2563:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2564:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2565:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2566:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_add_q15(
2567:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
2568:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 50


2569:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
2570:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2571:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2572:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2573:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2574:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Q31 vector addition.
2575:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2576:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2577:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2578:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2579:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2580:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_add_q31(
2581:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcA,
2582:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcB,
2583:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
2584:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2585:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2586:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2587:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2588:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Floating-point vector subtraction.
2589:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2590:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2591:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2592:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2593:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2594:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_sub_f32(
2595:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrcA,
2596:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrcB,
2597:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
2598:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2599:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2600:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2601:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2602:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Q7 vector subtraction.
2603:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2604:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2605:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2606:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2607:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2608:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_sub_q7(
2609:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcA,
2610:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcB,
2611:Drivers/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
2612:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2613:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2614:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2615:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2616:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Q15 vector subtraction.
2617:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2618:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2619:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2620:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2621:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2622:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_sub_q15(
2623:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
2624:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
2625:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 51


2626:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2627:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2628:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2629:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2630:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Q31 vector subtraction.
2631:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2632:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2633:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2634:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2635:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2636:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_sub_q31(
2637:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcA,
2638:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcB,
2639:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
2640:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2641:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2642:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2643:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2644:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Multiplies a floating-point vector by a scalar.
2645:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2646:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  scale      scale factor to be applied
2647:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2648:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2649:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2650:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_scale_f32(
2651:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
2652:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t scale,
2653:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
2654:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2655:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2656:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2657:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2658:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Multiplies a Q7 vector by a scalar.
2659:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
2660:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale value
2661:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
2662:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the output vector
2663:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize   number of samples in the vector
2664:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2665:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_scale_q7(
2666:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrc,
2667:Drivers/CMSIS/DSP/Include/arm_math.h ****         q7_t scaleFract,
2668:Drivers/CMSIS/DSP/Include/arm_math.h ****         int8_t shift,
2669:Drivers/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
2670:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2671:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2672:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2673:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2674:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Multiplies a Q15 vector by a scalar.
2675:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
2676:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale value
2677:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
2678:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the output vector
2679:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize   number of samples in the vector
2680:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2681:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_scale_q15(
2682:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 52


2683:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t scaleFract,
2684:Drivers/CMSIS/DSP/Include/arm_math.h ****         int8_t shift,
2685:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
2686:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2687:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2688:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2689:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2690:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Multiplies a Q31 vector by a scalar.
2691:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
2692:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  scaleFract  fractional portion of the scale value
2693:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  shift       number of bits to shift the result by
2694:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the output vector
2695:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize   number of samples in the vector
2696:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2697:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_scale_q31(
2698:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
2699:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t scaleFract,
2700:Drivers/CMSIS/DSP/Include/arm_math.h ****         int8_t shift,
2701:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
2702:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2703:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2704:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2705:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2706:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Q7 vector absolute value.
2707:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2708:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output buffer
2709:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2710:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2711:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_abs_q7(
2712:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrc,
2713:Drivers/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
2714:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2715:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2716:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2717:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2718:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Floating-point vector absolute value.
2719:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2720:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output buffer
2721:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2722:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2723:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_abs_f32(
2724:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
2725:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
2726:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2727:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2728:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2729:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2730:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Q15 vector absolute value.
2731:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2732:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output buffer
2733:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2734:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2735:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_abs_q15(
2736:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
2737:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
2738:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2739:Drivers/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 53


2740:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2741:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2742:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Q31 vector absolute value.
2743:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input buffer
2744:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output buffer
2745:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2746:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2747:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_abs_q31(
2748:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
2749:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
2750:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2751:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2752:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2753:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2754:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Dot product of floating-point vectors.
2755:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2756:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2757:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2758:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] result     output result returned here
2759:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2760:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_dot_prod_f32(
2761:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrcA,
2762:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrcB,
2763:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize,
2764:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * result);
2765:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2766:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2767:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2768:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Dot product of Q7 vectors.
2769:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2770:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2771:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2772:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] result     output result returned here
2773:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2774:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_dot_prod_q7(
2775:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcA,
2776:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcB,
2777:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize,
2778:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * result);
2779:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2780:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2781:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2782:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Dot product of Q15 vectors.
2783:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2784:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2785:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2786:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] result     output result returned here
2787:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2788:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_dot_prod_q15(
2789:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
2790:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
2791:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize,
2792:Drivers/CMSIS/DSP/Include/arm_math.h ****         q63_t * result);
2793:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2794:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2795:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2796:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Dot product of Q31 vectors.
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 54


2797:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input vector
2798:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input vector
2799:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in each vector
2800:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] result     output result returned here
2801:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2802:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_dot_prod_q31(
2803:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcA,
2804:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcB,
2805:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize,
2806:Drivers/CMSIS/DSP/Include/arm_math.h ****         q63_t * result);
2807:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2808:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2809:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2810:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Shifts the elements of a Q7 vector a specified number of bits.
2811:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2812:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
2813:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2814:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2815:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2816:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_shift_q7(
2817:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrc,
2818:Drivers/CMSIS/DSP/Include/arm_math.h ****         int8_t shiftBits,
2819:Drivers/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
2820:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2821:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2822:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2823:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2824:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Shifts the elements of a Q15 vector a specified number of bits.
2825:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2826:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
2827:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2828:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2829:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2830:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_shift_q15(
2831:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
2832:Drivers/CMSIS/DSP/Include/arm_math.h ****         int8_t shiftBits,
2833:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
2834:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2835:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2836:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2837:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2838:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Shifts the elements of a Q31 vector a specified number of bits.
2839:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2840:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  shiftBits  number of bits to shift.  A positive value shifts left; a negative valu
2841:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2842:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2843:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2844:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_shift_q31(
2845:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
2846:Drivers/CMSIS/DSP/Include/arm_math.h ****         int8_t shiftBits,
2847:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
2848:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2849:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2850:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2851:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2852:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Adds a constant offset to a floating-point vector.
2853:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 55


2854:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  offset     is the offset to be added
2855:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2856:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2857:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2858:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_offset_f32(
2859:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
2860:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t offset,
2861:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
2862:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2863:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2864:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2865:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2866:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Adds a constant offset to a Q7 vector.
2867:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2868:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  offset     is the offset to be added
2869:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2870:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2871:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2872:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_offset_q7(
2873:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrc,
2874:Drivers/CMSIS/DSP/Include/arm_math.h ****         q7_t offset,
2875:Drivers/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
2876:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2877:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2878:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2879:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2880:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Adds a constant offset to a Q15 vector.
2881:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2882:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  offset     is the offset to be added
2883:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2884:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2885:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2886:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_offset_q15(
2887:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
2888:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t offset,
2889:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
2890:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2891:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2892:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2893:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2894:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Adds a constant offset to a Q31 vector.
2895:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2896:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  offset     is the offset to be added
2897:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2898:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2899:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2900:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_offset_q31(
2901:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
2902:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t offset,
2903:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
2904:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2905:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2906:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2907:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2908:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Negates the elements of a floating-point vector.
2909:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2910:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 56


2911:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2912:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2913:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_negate_f32(
2914:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
2915:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
2916:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2917:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2918:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2919:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2920:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Negates the elements of a Q7 vector.
2921:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2922:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2923:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2924:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2925:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_negate_q7(
2926:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrc,
2927:Drivers/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
2928:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2929:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2930:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2931:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2932:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Negates the elements of a Q15 vector.
2933:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2934:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2935:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2936:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2937:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_negate_q15(
2938:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
2939:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
2940:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2941:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2942:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2943:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2944:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Negates the elements of a Q31 vector.
2945:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the input vector
2946:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the output vector
2947:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples in the vector
2948:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2949:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_negate_q31(
2950:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
2951:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
2952:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2953:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2954:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2955:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2956:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Copies the elements of a floating-point vector.
2957:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       input pointer
2958:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       output pointer
2959:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2960:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2961:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_copy_f32(
2962:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
2963:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
2964:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2965:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2966:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2967:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 57


2968:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Copies the elements of a Q7 vector.
2969:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       input pointer
2970:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       output pointer
2971:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2972:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2973:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_copy_q7(
2974:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrc,
2975:Drivers/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
2976:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2977:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2978:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2979:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2980:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Copies the elements of a Q15 vector.
2981:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       input pointer
2982:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       output pointer
2983:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2984:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2985:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_copy_q15(
2986:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
2987:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
2988:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
2989:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2990:Drivers/CMSIS/DSP/Include/arm_math.h **** 
2991:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
2992:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Copies the elements of a Q31 vector.
2993:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       input pointer
2994:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       output pointer
2995:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
2996:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
2997:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_copy_q31(
2998:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
2999:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
3000:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3001:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3002:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3003:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3004:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Fills a constant value into a floating-point vector.
3005:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  value      input value to be filled
3006:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       output pointer
3007:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
3008:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3009:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fill_f32(
3010:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t value,
3011:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
3012:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3013:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3014:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3015:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3016:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Fills a constant value into a Q7 vector.
3017:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  value      input value to be filled
3018:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       output pointer
3019:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
3020:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3021:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fill_q7(
3022:Drivers/CMSIS/DSP/Include/arm_math.h ****         q7_t value,
3023:Drivers/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
3024:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 58


3025:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3026:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3027:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3028:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Fills a constant value into a Q15 vector.
3029:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  value      input value to be filled
3030:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       output pointer
3031:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
3032:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3033:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fill_q15(
3034:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t value,
3035:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
3036:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3037:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3038:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3039:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3040:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Fills a constant value into a Q31 vector.
3041:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  value      input value to be filled
3042:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       output pointer
3043:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process
3044:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3045:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fill_q31(
3046:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t value,
3047:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
3048:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3049:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3050:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3051:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
3052:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @brief Convolution of floating-point sequences.
3053:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @param[in]  pSrcA    points to the first input sequence.
3054:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @param[in]  srcALen  length of the first input sequence.
3055:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @param[in]  pSrcB    points to the second input sequence.
3056:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @param[in]  srcBLen  length of the second input sequence.
3057:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @param[out] pDst     points to the location where the output result is written.  Length srcALen+
3058:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
3059:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_conv_f32(
3060:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrcA,
3061:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3062:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrcB,
3063:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3064:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst);
3065:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3066:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3067:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3068:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Convolution of Q15 sequences.
3069:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
3070:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
3071:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
3072:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
3073:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
3074:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen,
3075:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer of size min(srcALen, srcBLen).
3076:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3077:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_conv_opt_q15(
3078:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
3079:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3080:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
3081:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 59


3082:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
3083:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch1,
3084:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch2);
3085:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3086:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3087:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
3088:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @brief Convolution of Q15 sequences.
3089:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @param[in]  pSrcA    points to the first input sequence.
3090:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @param[in]  srcALen  length of the first input sequence.
3091:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @param[in]  pSrcB    points to the second input sequence.
3092:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @param[in]  srcBLen  length of the second input sequence.
3093:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @param[out] pDst     points to the location where the output result is written.  Length srcALen+
3094:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
3095:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_conv_q15(
3096:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
3097:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3098:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
3099:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3100:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst);
3101:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3102:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3103:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3104:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
3105:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
3106:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
3107:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
3108:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
3109:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3110:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3111:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_conv_fast_q15(
3112:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
3113:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3114:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
3115:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3116:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst);
3117:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3118:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3119:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3120:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
3121:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
3122:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
3123:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
3124:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
3125:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
3126:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen,
3127:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer of size min(srcALen, srcBLen).
3128:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3129:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_conv_fast_opt_q15(
3130:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
3131:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3132:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
3133:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3134:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
3135:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch1,
3136:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch2);
3137:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3138:Drivers/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 60


3139:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3140:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Convolution of Q31 sequences.
3141:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
3142:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
3143:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
3144:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
3145:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3146:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3147:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_conv_q31(
3148:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcA,
3149:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3150:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcB,
3151:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3152:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst);
3153:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3154:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3155:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3156:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Convolution of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4
3157:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
3158:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
3159:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
3160:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
3161:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3162:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3163:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_conv_fast_q31(
3164:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcA,
3165:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3166:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcB,
3167:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3168:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst);
3169:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3170:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3171:Drivers/CMSIS/DSP/Include/arm_math.h ****     /**
3172:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Convolution of Q7 sequences.
3173:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
3174:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
3175:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
3176:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
3177:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length srcALen+srcBLen-1.
3178:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) +
3179:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen).
3180:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3181:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_conv_opt_q7(
3182:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcA,
3183:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3184:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcB,
3185:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3186:Drivers/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
3187:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch1,
3188:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch2);
3189:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3190:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3191:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3192:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Convolution of Q7 sequences.
3193:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
3194:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
3195:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 61


3196:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
3197:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length srcALen+srcBLen-1.
3198:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3199:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_conv_q7(
3200:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcA,
3201:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3202:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcB,
3203:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3204:Drivers/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst);
3205:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3206:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3207:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3208:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Partial convolution of floating-point sequences.
3209:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3210:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3211:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3212:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3213:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3214:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3215:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3216:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3217:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3218:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_conv_partial_f32(
3219:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrcA,
3220:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3221:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrcB,
3222:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3223:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
3224:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t firstIndex,
3225:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t numPoints);
3226:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3227:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3228:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3229:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Partial convolution of Q15 sequences.
3230:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3231:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3232:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3233:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3234:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3235:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3236:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3237:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratch1   points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen
3238:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratch2   points to scratch buffer of size min(srcALen, srcBLen).
3239:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3240:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3241:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_conv_partial_opt_q15(
3242:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
3243:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3244:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
3245:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3246:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
3247:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t firstIndex,
3248:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t numPoints,
3249:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch1,
3250:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch2);
3251:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3252:Drivers/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 62


3253:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3254:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Partial convolution of Q15 sequences.
3255:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3256:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3257:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3258:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3259:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3260:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3261:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3262:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3263:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3264:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_conv_partial_q15(
3265:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
3266:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3267:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
3268:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3269:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
3270:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t firstIndex,
3271:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t numPoints);
3272:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3273:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3274:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3275:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
3276:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3277:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3278:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3279:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3280:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3281:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3282:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3283:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3284:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3285:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_conv_partial_fast_q15(
3286:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
3287:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3288:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
3289:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3290:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
3291:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t firstIndex,
3292:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t numPoints);
3293:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3294:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3295:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3296:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Partial convolution of Q15 sequences (fast version) for Cortex-M3 and Cortex-M4
3297:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3298:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3299:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3300:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3301:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3302:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3303:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3304:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratch1   points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen
3305:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratch2   points to scratch buffer of size min(srcALen, srcBLen).
3306:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3307:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3308:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_conv_partial_fast_opt_q15(
3309:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 63


3310:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3311:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
3312:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3313:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
3314:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t firstIndex,
3315:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t numPoints,
3316:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch1,
3317:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch2);
3318:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3319:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3320:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3321:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Partial convolution of Q31 sequences.
3322:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3323:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3324:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3325:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3326:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3327:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3328:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3329:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3330:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3331:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_conv_partial_q31(
3332:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcA,
3333:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3334:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcB,
3335:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3336:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
3337:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t firstIndex,
3338:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t numPoints);
3339:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3340:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3341:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3342:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Partial convolution of Q31 sequences (fast version) for Cortex-M3 and Cortex-M4
3343:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3344:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3345:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3346:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3347:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3348:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3349:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3350:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3351:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3352:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_conv_partial_fast_q31(
3353:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcA,
3354:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3355:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcB,
3356:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3357:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
3358:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t firstIndex,
3359:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t numPoints);
3360:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3361:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3362:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3363:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Partial convolution of Q7 sequences
3364:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3365:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3366:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 64


3367:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3368:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3369:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3370:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3371:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratch1   points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) 
3372:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratch2   points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen)
3373:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3374:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3375:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_conv_partial_opt_q7(
3376:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcA,
3377:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3378:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcB,
3379:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3380:Drivers/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
3381:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t firstIndex,
3382:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t numPoints,
3383:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch1,
3384:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch2);
3385:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3386:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3387:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
3388:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Partial convolution of Q7 sequences.
3389:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA       points to the first input sequence.
3390:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen     length of the first input sequence.
3391:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB       points to the second input sequence.
3392:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen     length of the second input sequence.
3393:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
3394:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  firstIndex  is the first output sample to start with.
3395:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  numPoints   is the number of output points to be computed.
3396:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return  Returns either ARM_MATH_SUCCESS if the function completed correctly or ARM_MATH_ARGUM
3397:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3398:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_conv_partial_q7(
3399:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcA,
3400:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
3401:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcB,
3402:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
3403:Drivers/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
3404:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t firstIndex,
3405:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t numPoints);
3406:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3407:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3408:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3409:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 FIR decimator.
3410:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3411:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
3412:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
3413:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t M;                  /**< decimation factor. */
3414:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;           /**< number of coefficients in the filter. */
3415:Drivers/CMSIS/DSP/Include/arm_math.h ****     const q15_t *pCoeffs;             /**< points to the coefficient array. The array is of length 
3416:Drivers/CMSIS/DSP/Include/arm_math.h ****           q15_t *pState;              /**< points to the state variable array. The array is of leng
3417:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_decimate_instance_q15;
3418:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3419:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3420:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q31 FIR decimator.
3421:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3422:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
3423:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 65


3424:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t M;                  /**< decimation factor. */
3425:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;           /**< number of coefficients in the filter. */
3426:Drivers/CMSIS/DSP/Include/arm_math.h ****     const q31_t *pCoeffs;             /**< points to the coefficient array. The array is of length 
3427:Drivers/CMSIS/DSP/Include/arm_math.h ****           q31_t *pState;              /**< points to the state variable array. The array is of leng
3428:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_decimate_instance_q31;
3429:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3430:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
3431:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief Instance structure for floating-point FIR decimator.
3432:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
3433:Drivers/CMSIS/DSP/Include/arm_math.h **** typedef struct
3434:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
3435:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t M;                  /**< decimation factor. */
3436:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;           /**< number of coefficients in the filter. */
3437:Drivers/CMSIS/DSP/Include/arm_math.h ****     const float32_t *pCoeffs;         /**< points to the coefficient array. The array is of length 
3438:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t *pState;          /**< points to the state variable array. The array is of leng
3439:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_decimate_instance_f32;
3440:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3441:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3442:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
3443:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief         Processing function for floating-point FIR decimator.
3444:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     S         points to an instance of the floating-point FIR decimator structure
3445:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pSrc      points to the block of input data
3446:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[out]    pDst      points to the block of output data
3447:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     blockSize number of samples to process
3448:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
3449:Drivers/CMSIS/DSP/Include/arm_math.h **** void arm_fir_decimate_f32(
3450:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_decimate_instance_f32 * S,
3451:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
3452:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
3453:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3454:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3455:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3456:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
3457:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief         Initialization function for the floating-point FIR decimator.
3458:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in,out] S          points to an instance of the floating-point FIR decimator structure
3459:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     numTaps    number of coefficients in the filter
3460:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     M          decimation factor
3461:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pCoeffs    points to the filter coefficients
3462:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pState     points to the state buffer
3463:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     blockSize  number of input samples to process per call
3464:Drivers/CMSIS/DSP/Include/arm_math.h ****   @return        execution status
3465:Drivers/CMSIS/DSP/Include/arm_math.h ****                    - \ref ARM_MATH_SUCCESS      : Operation successful
3466:Drivers/CMSIS/DSP/Include/arm_math.h ****                    - \ref ARM_MATH_LENGTH_ERROR : <code>blockSize</code> is not a multiple of <code
3467:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
3468:Drivers/CMSIS/DSP/Include/arm_math.h **** arm_status arm_fir_decimate_init_f32(
3469:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_fir_decimate_instance_f32 * S,
3470:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
3471:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t M,
3472:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pCoeffs,
3473:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pState,
3474:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3475:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3476:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3477:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3478:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q15 FIR decimator.
3479:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR decimator structure.
3480:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 66


3481:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3482:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3483:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3484:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_decimate_q15(
3485:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_decimate_instance_q15 * S,
3486:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
3487:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
3488:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3489:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3490:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3491:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3492:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q15 FIR decimator (fast variant) for Cortex-M3 and Cortex-M
3493:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR decimator structure.
3494:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3495:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3496:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3497:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3498:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_decimate_fast_q15(
3499:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_decimate_instance_q15 * S,
3500:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
3501:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
3502:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3503:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3504:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3505:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3506:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q15 FIR decimator.
3507:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 FIR decimator structure.
3508:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numTaps    number of coefficients in the filter.
3509:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     M          decimation factor.
3510:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3511:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3512:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3513:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return    The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_L
3514:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <code>blockSize</code> is not a multiple of <code>M</code>.
3515:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3516:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_fir_decimate_init_q15(
3517:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_fir_decimate_instance_q15 * S,
3518:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
3519:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t M,
3520:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pCoeffs,
3521:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pState,
3522:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3523:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3524:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3525:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3526:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q31 FIR decimator.
3527:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S     points to an instance of the Q31 FIR decimator structure.
3528:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc  points to the block of input data.
3529:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst  points to the block of output data
3530:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] blockSize number of input samples to process per call.
3531:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3532:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_decimate_q31(
3533:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_decimate_instance_q31 * S,
3534:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
3535:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
3536:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3537:Drivers/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 67


3538:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3539:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q31 FIR decimator (fast variant) for Cortex-M3 and Cortex-M
3540:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR decimator structure.
3541:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3542:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3543:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3544:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3545:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_decimate_fast_q31(
3546:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_decimate_instance_q31 * S,
3547:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
3548:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
3549:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3550:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3551:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3552:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3553:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q31 FIR decimator.
3554:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 FIR decimator structure.
3555:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numTaps    number of coefficients in the filter.
3556:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     M          decimation factor.
3557:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3558:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3559:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3560:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return    The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MATH_L
3561:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <code>blockSize</code> is not a multiple of <code>M</code>.
3562:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3563:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_fir_decimate_init_q31(
3564:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_fir_decimate_instance_q31 * S,
3565:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
3566:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t M,
3567:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pCoeffs,
3568:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pState,
3569:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3570:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3571:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3572:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3573:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 FIR interpolator.
3574:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3575:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
3576:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
3577:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t L;                      /**< upsample factor. */
3578:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t phaseLength;           /**< length of each polyphase filter component. */
3579:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t *pCoeffs;                 /**< points to the coefficient array. The array is of lengt
3580:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t *pState;                  /**< points to the state variable array. The array is of le
3581:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_interpolate_instance_q15;
3582:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3583:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3584:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q31 FIR interpolator.
3585:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3586:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
3587:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
3588:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t L;                      /**< upsample factor. */
3589:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t phaseLength;           /**< length of each polyphase filter component. */
3590:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t *pCoeffs;                 /**< points to the coefficient array. The array is of lengt
3591:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t *pState;                  /**< points to the state variable array. The array is of le
3592:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_interpolate_instance_q31;
3593:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3594:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 68


3595:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point FIR interpolator.
3596:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3597:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
3598:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
3599:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t L;                     /**< upsample factor. */
3600:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t phaseLength;          /**< length of each polyphase filter component. */
3601:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t *pCoeffs;            /**< points to the coefficient array. The array is of length
3602:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t *pState;             /**< points to the state variable array. The array is of len
3603:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_interpolate_instance_f32;
3604:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3605:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3606:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3607:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q15 FIR interpolator.
3608:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR interpolator structure.
3609:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3610:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3611:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3612:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3613:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_interpolate_q15(
3614:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_interpolate_instance_q15 * S,
3615:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
3616:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
3617:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3618:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3619:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3620:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3621:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q15 FIR interpolator.
3622:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 FIR interpolator structure.
3623:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     L          upsample factor.
3624:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numTaps    number of filter coefficients in the filter.
3625:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficient buffer.
3626:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3627:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3628:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MA
3629:Drivers/CMSIS/DSP/Include/arm_math.h ****    * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</
3630:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3631:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_fir_interpolate_init_q15(
3632:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_fir_interpolate_instance_q15 * S,
3633:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t L,
3634:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
3635:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pCoeffs,
3636:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pState,
3637:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3638:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3639:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3640:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3641:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q31 FIR interpolator.
3642:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR interpolator structure.
3643:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3644:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3645:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3646:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3647:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_interpolate_q31(
3648:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_interpolate_instance_q31 * S,
3649:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
3650:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
3651:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 69


3652:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3653:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3654:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3655:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q31 FIR interpolator.
3656:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 FIR interpolator structure.
3657:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     L          upsample factor.
3658:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numTaps    number of filter coefficients in the filter.
3659:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficient buffer.
3660:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3661:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3662:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MA
3663:Drivers/CMSIS/DSP/Include/arm_math.h ****    * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</
3664:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3665:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_fir_interpolate_init_q31(
3666:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_fir_interpolate_instance_q31 * S,
3667:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t L,
3668:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
3669:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pCoeffs,
3670:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pState,
3671:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3672:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3673:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3674:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3675:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the floating-point FIR interpolator.
3676:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR interpolator structure.
3677:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3678:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3679:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of input samples to process per call.
3680:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3681:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_interpolate_f32(
3682:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_interpolate_instance_f32 * S,
3683:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
3684:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
3685:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3686:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3687:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3688:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3689:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the floating-point FIR interpolator.
3690:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point FIR interpolator structu
3691:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     L          upsample factor.
3692:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numTaps    number of filter coefficients in the filter.
3693:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficient buffer.
3694:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3695:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     blockSize  number of input samples to process per call.
3696:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return        The function returns ARM_MATH_SUCCESS if initialization is successful or ARM_MA
3697:Drivers/CMSIS/DSP/Include/arm_math.h ****    * the filter length <code>numTaps</code> is not a multiple of the interpolation factor <code>L</
3698:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3699:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_fir_interpolate_init_f32(
3700:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_fir_interpolate_instance_f32 * S,
3701:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t L,
3702:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
3703:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pCoeffs,
3704:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pState,
3705:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3706:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3707:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3708:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 70


3709:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the high precision Q31 Biquad cascade filter.
3710:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3711:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
3712:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
3713:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t numStages;       /**< number of 2nd order stages in the filter.  Overall order is
3714:Drivers/CMSIS/DSP/Include/arm_math.h ****           q63_t *pState;           /**< points to the array of state coefficients.  The array is of
3715:Drivers/CMSIS/DSP/Include/arm_math.h ****     const q31_t *pCoeffs;          /**< points to the array of coefficients.  The array is of lengt
3716:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t postShift;       /**< additional shift, in bits, applied to each output sample. *
3717:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_biquad_cas_df1_32x64_ins_q31;
3718:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3719:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3720:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3721:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the high precision Q31 Biquad cascade filter s
3722:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3723:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3724:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3725:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3726:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cas_df1_32x64_q31(
3727:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_biquad_cas_df1_32x64_ins_q31 * S,
3728:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pSrc,
3729:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
3730:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3731:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3732:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3733:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3734:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the high precision Q31 Biquad cascade filte
3735:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3736:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3737:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3738:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     postShift  shift to be applied to the output. Varies according to the coefficie
3739:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3740:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cas_df1_32x64_init_q31(
3741:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_biquad_cas_df1_32x64_ins_q31 * S,
3742:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t numStages,
3743:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pCoeffs,
3744:Drivers/CMSIS/DSP/Include/arm_math.h ****         q63_t * pState,
3745:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t postShift);
3746:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3747:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3748:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3749:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filt
3750:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3751:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
3752:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
3753:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order 
3754:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t *pState;         /**< points to the array of state coefficients.  The array is 
3755:Drivers/CMSIS/DSP/Include/arm_math.h ****     const float32_t *pCoeffs;        /**< points to the array of coefficients.  The array is of len
3756:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_biquad_cascade_df2T_instance_f32;
3757:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3758:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3759:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filt
3760:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3761:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
3762:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
3763:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order 
3764:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t *pState;         /**< points to the array of state coefficients.  The array is 
3765:Drivers/CMSIS/DSP/Include/arm_math.h ****     const float32_t *pCoeffs;        /**< points to the array of coefficients.  The array is of len
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 71


3766:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_biquad_cascade_stereo_df2T_instance_f32;
3767:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3768:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3769:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point transposed direct form II Biquad cascade filt
3770:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3771:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
3772:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
3773:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t numStages;         /**< number of 2nd order stages in the filter.  Overall order 
3774:Drivers/CMSIS/DSP/Include/arm_math.h ****           float64_t *pState;         /**< points to the array of state coefficients.  The array is 
3775:Drivers/CMSIS/DSP/Include/arm_math.h ****           float64_t *pCoeffs;        /**< points to the array of coefficients.  The array is of len
3776:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_biquad_cascade_df2T_instance_f64;
3777:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3778:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3779:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3780:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the floating-point transposed direct form II Biquad cascade fil
3781:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the filter data structure.
3782:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3783:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3784:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3785:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3786:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cascade_df2T_f32(
3787:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_biquad_cascade_df2T_instance_f32 * S,
3788:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
3789:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
3790:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3791:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3792:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3793:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3794:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the floating-point transposed direct form II Biquad cascade fil
3795:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the filter data structure.
3796:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3797:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3798:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3799:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3800:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cascade_stereo_df2T_f32(
3801:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_biquad_cascade_stereo_df2T_instance_f32 * S,
3802:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
3803:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
3804:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3805:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3806:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3807:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3808:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the floating-point transposed direct form II Biquad cascade fil
3809:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the filter data structure.
3810:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3811:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3812:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3813:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3814:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cascade_df2T_f64(
3815:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_biquad_cascade_df2T_instance_f64 * S,
3816:Drivers/CMSIS/DSP/Include/arm_math.h ****         float64_t * pSrc,
3817:Drivers/CMSIS/DSP/Include/arm_math.h ****         float64_t * pDst,
3818:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3819:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3820:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3821:Drivers/CMSIS/DSP/Include/arm_math.h **** #if defined(ARM_MATH_NEON) 
3822:Drivers/CMSIS/DSP/Include/arm_math.h **** void arm_biquad_cascade_df2T_compute_coefs_f32(
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 72


3823:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_biquad_cascade_df2T_instance_f32 * S,
3824:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint8_t numStages,
3825:Drivers/CMSIS/DSP/Include/arm_math.h ****   float32_t * pCoeffs);
3826:Drivers/CMSIS/DSP/Include/arm_math.h **** #endif
3827:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3828:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the floating-point transposed direct form II Biquad cascad
3829:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the filter data structure.
3830:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3831:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3832:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3833:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3834:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cascade_df2T_init_f32(
3835:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_biquad_cascade_df2T_instance_f32 * S,
3836:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t numStages,
3837:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pCoeffs,
3838:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pState);
3839:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3840:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3841:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3842:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the floating-point transposed direct form II Biquad cascad
3843:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the filter data structure.
3844:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3845:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3846:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3847:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3848:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cascade_stereo_df2T_init_f32(
3849:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_biquad_cascade_stereo_df2T_instance_f32 * S,
3850:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t numStages,
3851:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pCoeffs,
3852:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pState);
3853:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3854:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3855:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3856:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the floating-point transposed direct form II Biquad cascad
3857:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the filter data structure.
3858:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numStages  number of 2nd order stages in the filter.
3859:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the filter coefficients.
3860:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
3861:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3862:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_biquad_cascade_df2T_init_f64(
3863:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_biquad_cascade_df2T_instance_f64 * S,
3864:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t numStages,
3865:Drivers/CMSIS/DSP/Include/arm_math.h ****         float64_t * pCoeffs,
3866:Drivers/CMSIS/DSP/Include/arm_math.h ****         float64_t * pState);
3867:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3868:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3869:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3870:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 FIR lattice filter.
3871:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3872:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
3873:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
3874:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t numStages;                  /**< number of filter stages. */
3875:Drivers/CMSIS/DSP/Include/arm_math.h ****           q15_t *pState;                       /**< points to the state variable array. The array i
3876:Drivers/CMSIS/DSP/Include/arm_math.h ****     const q15_t *pCoeffs;                      /**< points to the coefficient array. The array is o
3877:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_lattice_instance_q15;
3878:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3879:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 73


3880:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q31 FIR lattice filter.
3881:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3882:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
3883:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
3884:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t numStages;                  /**< number of filter stages. */
3885:Drivers/CMSIS/DSP/Include/arm_math.h ****           q31_t *pState;                       /**< points to the state variable array. The array i
3886:Drivers/CMSIS/DSP/Include/arm_math.h ****     const q31_t *pCoeffs;                      /**< points to the coefficient array. The array is o
3887:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_lattice_instance_q31;
3888:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3889:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3890:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point FIR lattice filter.
3891:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3892:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
3893:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
3894:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t numStages;                  /**< number of filter stages. */
3895:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t *pState;                   /**< points to the state variable array. The array i
3896:Drivers/CMSIS/DSP/Include/arm_math.h ****     const float32_t *pCoeffs;                  /**< points to the coefficient array. The array is o
3897:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_lattice_instance_f32;
3898:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3899:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3900:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3901:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Initialization function for the Q15 FIR lattice filter.
3902:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] S          points to an instance of the Q15 FIR lattice structure.
3903:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] numStages  number of filter stages.
3904:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
3905:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pState     points to the state buffer.  The array is of length numStages.
3906:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3907:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_lattice_init_q15(
3908:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_fir_lattice_instance_q15 * S,
3909:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t numStages,
3910:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pCoeffs,
3911:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pState);
3912:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3913:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3914:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3915:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q15 FIR lattice filter.
3916:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 FIR lattice structure.
3917:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3918:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
3919:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3920:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3921:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_lattice_q15(
3922:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_lattice_instance_q15 * S,
3923:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
3924:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
3925:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3926:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3927:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3928:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3929:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Initialization function for the Q31 FIR lattice filter.
3930:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] S          points to an instance of the Q31 FIR lattice structure.
3931:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] numStages  number of filter stages.
3932:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
3933:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pState     points to the state buffer.   The array is of length numStages.
3934:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3935:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_lattice_init_q31(
3936:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_fir_lattice_instance_q31 * S,
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 74


3937:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t numStages,
3938:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pCoeffs,
3939:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pState);
3940:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3941:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3942:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3943:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q31 FIR lattice filter.
3944:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 FIR lattice structure.
3945:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3946:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3947:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3948:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3949:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_lattice_q31(
3950:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_lattice_instance_q31 * S,
3951:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
3952:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
3953:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3954:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3955:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3956:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
3957:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @brief Initialization function for the floating-point FIR lattice filter.
3958:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @param[in] S          points to an instance of the floating-point FIR lattice structure.
3959:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @param[in] numStages  number of filter stages.
3960:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @param[in] pCoeffs    points to the coefficient buffer.  The array is of length numStages.
3961:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @param[in] pState     points to the state buffer.  The array is of length numStages.
3962:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
3963:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_lattice_init_f32(
3964:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_fir_lattice_instance_f32 * S,
3965:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t numStages,
3966:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pCoeffs,
3967:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pState);
3968:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3969:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3970:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3971:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the floating-point FIR lattice filter.
3972:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point FIR lattice structure.
3973:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
3974:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data
3975:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
3976:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3977:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_lattice_f32(
3978:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_fir_lattice_instance_f32 * S,
3979:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
3980:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
3981:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
3982:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3983:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3984:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3985:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 IIR lattice filter.
3986:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3987:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
3988:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
3989:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t numStages;                  /**< number of stages in the filter. */
3990:Drivers/CMSIS/DSP/Include/arm_math.h ****           q15_t *pState;                       /**< points to the state variable array. The array i
3991:Drivers/CMSIS/DSP/Include/arm_math.h ****           q15_t *pkCoeffs;                     /**< points to the reflection coefficient array. The
3992:Drivers/CMSIS/DSP/Include/arm_math.h ****           q15_t *pvCoeffs;                     /**< points to the ladder coefficient array. The arr
3993:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_iir_lattice_instance_q15;
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 75


3994:Drivers/CMSIS/DSP/Include/arm_math.h **** 
3995:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
3996:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q31 IIR lattice filter.
3997:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
3998:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
3999:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
4000:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t numStages;                  /**< number of stages in the filter. */
4001:Drivers/CMSIS/DSP/Include/arm_math.h ****           q31_t *pState;                       /**< points to the state variable array. The array i
4002:Drivers/CMSIS/DSP/Include/arm_math.h ****           q31_t *pkCoeffs;                     /**< points to the reflection coefficient array. The
4003:Drivers/CMSIS/DSP/Include/arm_math.h ****           q31_t *pvCoeffs;                     /**< points to the ladder coefficient array. The arr
4004:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_iir_lattice_instance_q31;
4005:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4006:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4007:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point IIR lattice filter.
4008:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4009:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
4010:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
4011:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t numStages;                  /**< number of stages in the filter. */
4012:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t *pState;                   /**< points to the state variable array. The array i
4013:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t *pkCoeffs;                 /**< points to the reflection coefficient array. The
4014:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t *pvCoeffs;                 /**< points to the ladder coefficient array. The arr
4015:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_iir_lattice_instance_f32;
4016:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4017:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4018:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4019:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the floating-point IIR lattice filter.
4020:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point IIR lattice structure.
4021:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4022:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
4023:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4024:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4025:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_iir_lattice_f32(
4026:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_iir_lattice_instance_f32 * S,
4027:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
4028:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
4029:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4030:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4031:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4032:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4033:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Initialization function for the floating-point IIR lattice filter.
4034:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] S          points to an instance of the floating-point IIR lattice structure.
4035:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] numStages  number of stages in the filter.
4036:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pkCoeffs   points to the reflection coefficient buffer.  The array is of length num
4037:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pvCoeffs   points to the ladder coefficient buffer.  The array is of length numStag
4038:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pState     points to the state buffer.  The array is of length numStages+blockSize-
4039:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4040:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4041:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_iir_lattice_init_f32(
4042:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_iir_lattice_instance_f32 * S,
4043:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t numStages,
4044:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pkCoeffs,
4045:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pvCoeffs,
4046:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pState,
4047:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4048:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4049:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4050:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 76


4051:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q31 IIR lattice filter.
4052:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 IIR lattice structure.
4053:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4054:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
4055:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4056:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4057:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_iir_lattice_q31(
4058:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_iir_lattice_instance_q31 * S,
4059:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
4060:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
4061:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4062:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4063:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4064:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4065:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Initialization function for the Q31 IIR lattice filter.
4066:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] S          points to an instance of the Q31 IIR lattice structure.
4067:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] numStages  number of stages in the filter.
4068:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pkCoeffs   points to the reflection coefficient buffer.  The array is of length num
4069:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pvCoeffs   points to the ladder coefficient buffer.  The array is of length numStag
4070:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pState     points to the state buffer.  The array is of length numStages+blockSize.
4071:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4072:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4073:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_iir_lattice_init_q31(
4074:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_iir_lattice_instance_q31 * S,
4075:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t numStages,
4076:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pkCoeffs,
4077:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pvCoeffs,
4078:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pState,
4079:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4080:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4081:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4082:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4083:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q15 IIR lattice filter.
4084:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 IIR lattice structure.
4085:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4086:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data.
4087:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4088:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4089:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_iir_lattice_q15(
4090:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_iir_lattice_instance_q15 * S,
4091:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
4092:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
4093:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4094:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4095:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4096:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
4097:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @brief Initialization function for the Q15 IIR lattice filter.
4098:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @param[in] S          points to an instance of the fixed-point Q15 IIR lattice structure.
4099:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @param[in] numStages  number of stages in the filter.
4100:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @param[in] pkCoeffs   points to reflection coefficient buffer.  The array is of length numStages
4101:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @param[in] pvCoeffs   points to ladder coefficient buffer.  The array is of length numStages+1.
4102:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @param[in] pState     points to state buffer.  The array is of length numStages+blockSize.
4103:Drivers/CMSIS/DSP/Include/arm_math.h ****  * @param[in] blockSize  number of samples to process per call.
4104:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
4105:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_iir_lattice_init_q15(
4106:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_iir_lattice_instance_q15 * S,
4107:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t numStages,
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 77


4108:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pkCoeffs,
4109:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pvCoeffs,
4110:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pState,
4111:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4112:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4113:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4114:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4115:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point LMS filter.
4116:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4117:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
4118:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
4119:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;    /**< number of coefficients in the filter. */
4120:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t *pState;   /**< points to the state variable array. The array is of length numT
4121:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t *pCoeffs;  /**< points to the coefficient array. The array is of length numTaps
4122:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t mu;        /**< step size that controls filter coefficient updates. */
4123:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_lms_instance_f32;
4124:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4125:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4126:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4127:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for floating-point LMS filter.
4128:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point LMS filter structure.
4129:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4130:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4131:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4132:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4133:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4134:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4135:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_lms_f32(
4136:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_lms_instance_f32 * S,
4137:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
4138:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pRef,
4139:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pOut,
4140:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pErr,
4141:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4142:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4143:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4144:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4145:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Initialization function for floating-point LMS filter.
4146:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] S          points to an instance of the floating-point LMS filter structure.
4147:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4148:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.
4149:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pState     points to state buffer.
4150:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4151:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4152:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4153:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_lms_init_f32(
4154:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_lms_instance_f32 * S,
4155:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
4156:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pCoeffs,
4157:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pState,
4158:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t mu,
4159:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4160:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4161:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4162:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4163:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 LMS filter.
4164:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 78


4165:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
4166:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
4167:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;    /**< number of coefficients in the filter. */
4168:Drivers/CMSIS/DSP/Include/arm_math.h ****           q15_t *pState;       /**< points to the state variable array. The array is of length numT
4169:Drivers/CMSIS/DSP/Include/arm_math.h ****           q15_t *pCoeffs;      /**< points to the coefficient array. The array is of length numTaps
4170:Drivers/CMSIS/DSP/Include/arm_math.h ****           q15_t mu;            /**< step size that controls filter coefficient updates. */
4171:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint32_t postShift;  /**< bit shift applied to coefficients. */
4172:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_lms_instance_q15;
4173:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4174:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4175:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4176:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Initialization function for the Q15 LMS filter.
4177:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] S          points to an instance of the Q15 LMS filter structure.
4178:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4179:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pCoeffs    points to the coefficient buffer.
4180:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pState     points to the state buffer.
4181:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4182:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4183:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4184:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4185:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_lms_init_q15(
4186:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_lms_instance_q15 * S,
4187:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
4188:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pCoeffs,
4189:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pState,
4190:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t mu,
4191:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize,
4192:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t postShift);
4193:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4194:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4195:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4196:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for Q15 LMS filter.
4197:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 LMS filter structure.
4198:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4199:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4200:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4201:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4202:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4203:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4204:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_lms_q15(
4205:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_lms_instance_q15 * S,
4206:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
4207:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pRef,
4208:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pOut,
4209:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pErr,
4210:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4211:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4212:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4213:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4214:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q31 LMS filter.
4215:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4216:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
4217:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
4218:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;    /**< number of coefficients in the filter. */
4219:Drivers/CMSIS/DSP/Include/arm_math.h ****           q31_t *pState;       /**< points to the state variable array. The array is of length numT
4220:Drivers/CMSIS/DSP/Include/arm_math.h ****           q31_t *pCoeffs;      /**< points to the coefficient array. The array is of length numTaps
4221:Drivers/CMSIS/DSP/Include/arm_math.h ****           q31_t mu;            /**< step size that controls filter coefficient updates. */
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 79


4222:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint32_t postShift;  /**< bit shift applied to coefficients. */
4223:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_lms_instance_q31;
4224:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4225:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4226:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4227:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for Q31 LMS filter.
4228:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 LMS filter structure.
4229:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4230:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4231:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4232:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4233:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4234:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4235:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_lms_q31(
4236:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_lms_instance_q31 * S,
4237:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
4238:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pRef,
4239:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pOut,
4240:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pErr,
4241:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4242:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4243:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4244:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4245:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Initialization function for Q31 LMS filter.
4246:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] S          points to an instance of the Q31 LMS filter structure.
4247:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4248:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4249:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pState     points to state buffer.
4250:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4251:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4252:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4253:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4254:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_lms_init_q31(
4255:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_lms_instance_q31 * S,
4256:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
4257:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pCoeffs,
4258:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pState,
4259:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t mu,
4260:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize,
4261:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t postShift);
4262:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4263:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4264:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4265:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point normalized LMS filter.
4266:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4267:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
4268:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
4269:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;     /**< number of coefficients in the filter. */
4270:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t *pState;    /**< points to the state variable array. The array is of length num
4271:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t *pCoeffs;   /**< points to the coefficient array. The array is of length numTap
4272:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t mu;         /**< step size that control filter coefficient updates. */
4273:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t energy;     /**< saves previous frame energy. */
4274:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t x0;         /**< saves previous input sample. */
4275:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_lms_norm_instance_f32;
4276:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4277:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4278:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 80


4279:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for floating-point normalized LMS filter.
4280:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the floating-point normalized LMS filter struc
4281:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4282:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4283:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4284:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4285:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4286:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4287:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_lms_norm_f32(
4288:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_lms_norm_instance_f32 * S,
4289:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
4290:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pRef,
4291:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pOut,
4292:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pErr,
4293:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4294:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4295:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4296:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4297:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Initialization function for floating-point normalized LMS filter.
4298:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] S          points to an instance of the floating-point LMS filter structure.
4299:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4300:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4301:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pState     points to state buffer.
4302:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4303:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4304:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4305:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_lms_norm_init_f32(
4306:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_lms_norm_instance_f32 * S,
4307:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
4308:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pCoeffs,
4309:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pState,
4310:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t mu,
4311:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4312:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4313:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4314:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4315:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q31 normalized LMS filter.
4316:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4317:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
4318:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
4319:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;     /**< number of coefficients in the filter. */
4320:Drivers/CMSIS/DSP/Include/arm_math.h ****           q31_t *pState;        /**< points to the state variable array. The array is of length num
4321:Drivers/CMSIS/DSP/Include/arm_math.h ****           q31_t *pCoeffs;       /**< points to the coefficient array. The array is of length numTap
4322:Drivers/CMSIS/DSP/Include/arm_math.h ****           q31_t mu;             /**< step size that controls filter coefficient updates. */
4323:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t postShift;    /**< bit shift applied to coefficients. */
4324:Drivers/CMSIS/DSP/Include/arm_math.h ****     const q31_t *recipTable;    /**< points to the reciprocal initial value table. */
4325:Drivers/CMSIS/DSP/Include/arm_math.h ****           q31_t energy;         /**< saves previous frame energy. */
4326:Drivers/CMSIS/DSP/Include/arm_math.h ****           q31_t x0;             /**< saves previous input sample. */
4327:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_lms_norm_instance_q31;
4328:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4329:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4330:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4331:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for Q31 normalized LMS filter.
4332:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q31 normalized LMS filter structure.
4333:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4334:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4335:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 81


4336:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4337:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4338:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4339:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_lms_norm_q31(
4340:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_lms_norm_instance_q31 * S,
4341:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
4342:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pRef,
4343:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pOut,
4344:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pErr,
4345:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4346:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4347:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4348:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4349:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Initialization function for Q31 normalized LMS filter.
4350:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] S          points to an instance of the Q31 normalized LMS filter structure.
4351:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4352:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4353:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pState     points to state buffer.
4354:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4355:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4356:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4357:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4358:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_lms_norm_init_q31(
4359:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_lms_norm_instance_q31 * S,
4360:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
4361:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pCoeffs,
4362:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pState,
4363:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t mu,
4364:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize,
4365:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t postShift);
4366:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4367:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4368:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4369:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 normalized LMS filter.
4370:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4371:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
4372:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
4373:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;     /**< Number of coefficients in the filter. */
4374:Drivers/CMSIS/DSP/Include/arm_math.h ****           q15_t *pState;        /**< points to the state variable array. The array is of length num
4375:Drivers/CMSIS/DSP/Include/arm_math.h ****           q15_t *pCoeffs;       /**< points to the coefficient array. The array is of length numTap
4376:Drivers/CMSIS/DSP/Include/arm_math.h ****           q15_t mu;             /**< step size that controls filter coefficient updates. */
4377:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint8_t postShift;    /**< bit shift applied to coefficients. */
4378:Drivers/CMSIS/DSP/Include/arm_math.h ****     const q15_t *recipTable;    /**< Points to the reciprocal initial value table. */
4379:Drivers/CMSIS/DSP/Include/arm_math.h ****           q15_t energy;         /**< saves previous frame energy. */
4380:Drivers/CMSIS/DSP/Include/arm_math.h ****           q15_t x0;             /**< saves previous input sample. */
4381:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_lms_norm_instance_q15;
4382:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4383:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4384:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4385:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for Q15 normalized LMS filter.
4386:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S          points to an instance of the Q15 normalized LMS filter structure.
4387:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc       points to the block of input data.
4388:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pRef       points to the block of reference data.
4389:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pOut       points to the block of output data.
4390:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pErr       points to the block of error data.
4391:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize  number of samples to process.
4392:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 82


4393:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_lms_norm_q15(
4394:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_lms_norm_instance_q15 * S,
4395:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
4396:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pRef,
4397:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pOut,
4398:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pErr,
4399:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4400:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4401:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4402:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4403:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Initialization function for Q15 normalized LMS filter.
4404:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] S          points to an instance of the Q15 normalized LMS filter structure.
4405:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] numTaps    number of filter coefficients.
4406:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pCoeffs    points to coefficient buffer.
4407:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pState     points to state buffer.
4408:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] mu         step size that controls filter coefficient updates.
4409:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] blockSize  number of samples to process.
4410:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] postShift  bit shift applied to coefficients.
4411:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4412:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_lms_norm_init_q15(
4413:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_lms_norm_instance_q15 * S,
4414:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
4415:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pCoeffs,
4416:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pState,
4417:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t mu,
4418:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize,
4419:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint8_t postShift);
4420:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4421:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4422:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4423:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Correlation of floating-point sequences.
4424:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4425:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4426:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4427:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4428:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4429:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4430:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_correlate_f32(
4431:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrcA,
4432:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
4433:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrcB,
4434:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
4435:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst);
4436:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4437:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4438:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
4439:Drivers/CMSIS/DSP/Include/arm_math.h ****  @brief Correlation of Q15 sequences
4440:Drivers/CMSIS/DSP/Include/arm_math.h ****  @param[in]  pSrcA     points to the first input sequence
4441:Drivers/CMSIS/DSP/Include/arm_math.h ****  @param[in]  srcALen   length of the first input sequence
4442:Drivers/CMSIS/DSP/Include/arm_math.h ****  @param[in]  pSrcB     points to the second input sequence
4443:Drivers/CMSIS/DSP/Include/arm_math.h ****  @param[in]  srcBLen   length of the second input sequence
4444:Drivers/CMSIS/DSP/Include/arm_math.h ****  @param[out] pDst      points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4445:Drivers/CMSIS/DSP/Include/arm_math.h ****  @param[in]  pScratch  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, srcB
4446:Drivers/CMSIS/DSP/Include/arm_math.h **** */
4447:Drivers/CMSIS/DSP/Include/arm_math.h **** void arm_correlate_opt_q15(
4448:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
4449:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 83


4450:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
4451:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
4452:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
4453:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch);
4454:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4455:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4456:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
4457:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief Correlation of Q15 sequences.
4458:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]  pSrcA    points to the first input sequence
4459:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]  srcALen  length of the first input sequence
4460:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]  pSrcB    points to the second input sequence
4461:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]  srcBLen  length of the second input sequence
4462:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4463:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
4464:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_correlate_q15(
4465:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
4466:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
4467:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
4468:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
4469:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst);
4470:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4471:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4472:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
4473:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief         Correlation of Q15 sequences (fast version).
4474:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pSrcA      points to the first input sequence
4475:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     srcALen    length of the first input sequence
4476:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     pSrcB      points to the second input sequence
4477:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     srcBLen    length of the second input sequence
4478:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[out]    pDst       points to the location where the output result is written.  Length 2 * 
4479:Drivers/CMSIS/DSP/Include/arm_math.h ****   @return        none
4480:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
4481:Drivers/CMSIS/DSP/Include/arm_math.h **** void arm_correlate_fast_q15(
4482:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
4483:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
4484:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
4485:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
4486:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst);
4487:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4488:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4489:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
4490:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief Correlation of Q15 sequences (fast version).
4491:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]  pSrcA     points to the first input sequence.
4492:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]  srcALen   length of the first input sequence.
4493:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]  pSrcB     points to the second input sequence.
4494:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]  srcBLen   length of the second input sequence.
4495:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[out] pDst      points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4496:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]  pScratch  points to scratch buffer of size max(srcALen, srcBLen) + 2*min(srcALen, src
4497:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
4498:Drivers/CMSIS/DSP/Include/arm_math.h **** void arm_correlate_fast_opt_q15(
4499:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcA,
4500:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
4501:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrcB,
4502:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
4503:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
4504:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch);
4505:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4506:Drivers/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 84


4507:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4508:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Correlation of Q31 sequences.
4509:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4510:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4511:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
4512:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4513:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4514:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4515:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_correlate_q31(
4516:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcA,
4517:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
4518:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcB,
4519:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
4520:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst);
4521:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4522:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4523:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
4524:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief Correlation of Q31 sequences (fast version).
4525:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]  pSrcA    points to the first input sequence
4526:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]  srcALen  length of the first input sequence
4527:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]  pSrcB    points to the second input sequence
4528:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]  srcBLen  length of the second input sequence
4529:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4530:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
4531:Drivers/CMSIS/DSP/Include/arm_math.h **** void arm_correlate_fast_q31(
4532:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcA,
4533:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
4534:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrcB,
4535:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
4536:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst);
4537:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4538:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4539:Drivers/CMSIS/DSP/Include/arm_math.h ****  /**
4540:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Correlation of Q7 sequences.
4541:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA      points to the first input sequence.
4542:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen    length of the first input sequence.
4543:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB      points to the second input sequence.
4544:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen    length of the second input sequence.
4545:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst       points to the block of output data  Length 2 * max(srcALen, srcBLen) - 
4546:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratch1  points to scratch buffer(of type q15_t) of size max(srcALen, srcBLen) +
4547:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratch2  points to scratch buffer (of type q15_t) of size min(srcALen, srcBLen).
4548:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4549:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_correlate_opt_q7(
4550:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcA,
4551:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
4552:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcB,
4553:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
4554:Drivers/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
4555:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch1,
4556:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratch2);
4557:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4558:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4559:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4560:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Correlation of Q7 sequences.
4561:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcA    points to the first input sequence.
4562:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcALen  length of the first input sequence.
4563:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrcB    points to the second input sequence.
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 85


4564:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  srcBLen  length of the second input sequence.
4565:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst     points to the block of output data  Length 2 * max(srcALen, srcBLen) - 1.
4566:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4567:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_correlate_q7(
4568:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcA,
4569:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcALen,
4570:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrcB,
4571:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t srcBLen,
4572:Drivers/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst);
4573:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4574:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4575:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4576:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the floating-point sparse FIR filter.
4577:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4578:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
4579:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
4580:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;             /**< number of coefficients in the filter. */
4581:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in th
4582:Drivers/CMSIS/DSP/Include/arm_math.h ****           float32_t *pState;            /**< points to the state buffer array. The array is of leng
4583:Drivers/CMSIS/DSP/Include/arm_math.h ****     const float32_t *pCoeffs;           /**< points to the coefficient array. The array is of lengt
4584:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4585:Drivers/CMSIS/DSP/Include/arm_math.h ****           int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of 
4586:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_sparse_instance_f32;
4587:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4588:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4589:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q31 sparse FIR filter.
4590:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4591:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
4592:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
4593:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;             /**< number of coefficients in the filter. */
4594:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in th
4595:Drivers/CMSIS/DSP/Include/arm_math.h ****           q31_t *pState;                /**< points to the state buffer array. The array is of leng
4596:Drivers/CMSIS/DSP/Include/arm_math.h ****     const q31_t *pCoeffs;               /**< points to the coefficient array. The array is of lengt
4597:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4598:Drivers/CMSIS/DSP/Include/arm_math.h ****           int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of 
4599:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_sparse_instance_q31;
4600:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4601:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4602:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q15 sparse FIR filter.
4603:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4604:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
4605:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
4606:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;             /**< number of coefficients in the filter. */
4607:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in th
4608:Drivers/CMSIS/DSP/Include/arm_math.h ****           q15_t *pState;                /**< points to the state buffer array. The array is of leng
4609:Drivers/CMSIS/DSP/Include/arm_math.h ****     const q15_t *pCoeffs;               /**< points to the coefficient array. The array is of lengt
4610:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4611:Drivers/CMSIS/DSP/Include/arm_math.h ****           int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of 
4612:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_sparse_instance_q15;
4613:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4614:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4615:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Instance structure for the Q7 sparse FIR filter.
4616:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4617:Drivers/CMSIS/DSP/Include/arm_math.h ****   typedef struct
4618:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
4619:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t numTaps;             /**< number of coefficients in the filter. */
4620:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t stateIndex;          /**< state buffer index.  Points to the oldest sample in th
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 86


4621:Drivers/CMSIS/DSP/Include/arm_math.h ****           q7_t *pState;                 /**< points to the state buffer array. The array is of leng
4622:Drivers/CMSIS/DSP/Include/arm_math.h ****     const q7_t *pCoeffs;                /**< points to the coefficient array. The array is of lengt
4623:Drivers/CMSIS/DSP/Include/arm_math.h ****           uint16_t maxDelay;            /**< maximum offset specified by the pTapDelay array. */
4624:Drivers/CMSIS/DSP/Include/arm_math.h ****           int32_t *pTapDelay;           /**< points to the array of delay values.  The array is of 
4625:Drivers/CMSIS/DSP/Include/arm_math.h ****   } arm_fir_sparse_instance_q7;
4626:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4627:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4628:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4629:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the floating-point sparse FIR filter.
4630:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S           points to an instance of the floating-point sparse FIR structure.
4631:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc        points to the block of input data.
4632:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
4633:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratchIn  points to a temporary buffer of size blockSize.
4634:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize   number of input samples to process per call.
4635:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4636:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_sparse_f32(
4637:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_fir_sparse_instance_f32 * S,
4638:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
4639:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
4640:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pScratchIn,
4641:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4642:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4643:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4644:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4645:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the floating-point sparse FIR filter.
4646:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the floating-point sparse FIR structure.
4647:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4648:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4649:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4650:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4651:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4652:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4653:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4654:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_sparse_init_f32(
4655:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_fir_sparse_instance_f32 * S,
4656:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
4657:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pCoeffs,
4658:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pState,
4659:Drivers/CMSIS/DSP/Include/arm_math.h ****         int32_t * pTapDelay,
4660:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t maxDelay,
4661:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4662:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4663:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4664:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4665:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q31 sparse FIR filter.
4666:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S           points to an instance of the Q31 sparse FIR structure.
4667:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc        points to the block of input data.
4668:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the block of output data
4669:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratchIn  points to a temporary buffer of size blockSize.
4670:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize   number of input samples to process per call.
4671:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4672:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_sparse_q31(
4673:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_fir_sparse_instance_q31 * S,
4674:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
4675:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
4676:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pScratchIn,
4677:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 87


4678:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4679:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4680:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4681:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q31 sparse FIR filter.
4682:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q31 sparse FIR structure.
4683:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4684:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4685:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4686:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4687:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4688:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4689:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4690:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_sparse_init_q31(
4691:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_fir_sparse_instance_q31 * S,
4692:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
4693:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pCoeffs,
4694:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pState,
4695:Drivers/CMSIS/DSP/Include/arm_math.h ****         int32_t * pTapDelay,
4696:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t maxDelay,
4697:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4698:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4699:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4700:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4701:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q15 sparse FIR filter.
4702:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S            points to an instance of the Q15 sparse FIR structure.
4703:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc         points to the block of input data.
4704:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst         points to the block of output data
4705:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratchIn   points to a temporary buffer of size blockSize.
4706:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratchOut  points to a temporary buffer of size blockSize.
4707:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize    number of input samples to process per call.
4708:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4709:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_sparse_q15(
4710:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_fir_sparse_instance_q15 * S,
4711:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
4712:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
4713:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pScratchIn,
4714:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pScratchOut,
4715:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4716:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4717:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4718:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4719:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q15 sparse FIR filter.
4720:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q15 sparse FIR structure.
4721:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4722:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4723:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4724:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4725:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4726:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4727:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4728:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_sparse_init_q15(
4729:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_fir_sparse_instance_q15 * S,
4730:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
4731:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pCoeffs,
4732:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pState,
4733:Drivers/CMSIS/DSP/Include/arm_math.h ****         int32_t * pTapDelay,
4734:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t maxDelay,
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 88


4735:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4736:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4737:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4738:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4739:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Processing function for the Q7 sparse FIR filter.
4740:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  S            points to an instance of the Q7 sparse FIR structure.
4741:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc         points to the block of input data.
4742:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst         points to the block of output data
4743:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratchIn   points to a temporary buffer of size blockSize.
4744:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pScratchOut  points to a temporary buffer of size blockSize.
4745:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  blockSize    number of input samples to process per call.
4746:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4747:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_sparse_q7(
4748:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_fir_sparse_instance_q7 * S,
4749:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pSrc,
4750:Drivers/CMSIS/DSP/Include/arm_math.h ****         q7_t * pDst,
4751:Drivers/CMSIS/DSP/Include/arm_math.h ****         q7_t * pScratchIn,
4752:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pScratchOut,
4753:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4754:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4755:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4756:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4757:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Initialization function for the Q7 sparse FIR filter.
4758:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S          points to an instance of the Q7 sparse FIR structure.
4759:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     numTaps    number of nonzero coefficients in the filter.
4760:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pCoeffs    points to the array of filter coefficients.
4761:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pState     points to the state buffer.
4762:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     pTapDelay  points to the array of offset times.
4763:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     maxDelay   maximum offset time supported.
4764:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     blockSize  number of samples that will be processed per block.
4765:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4766:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_fir_sparse_init_q7(
4767:Drivers/CMSIS/DSP/Include/arm_math.h ****         arm_fir_sparse_instance_q7 * S,
4768:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t numTaps,
4769:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q7_t * pCoeffs,
4770:Drivers/CMSIS/DSP/Include/arm_math.h ****         q7_t * pState,
4771:Drivers/CMSIS/DSP/Include/arm_math.h ****         int32_t * pTapDelay,
4772:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint16_t maxDelay,
4773:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t blockSize);
4774:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4775:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4776:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4777:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Floating-point sin_cos function.
4778:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  theta   input value in degrees
4779:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pSinVal  points to the processed sine output.
4780:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pCosVal  points to the processed cos output.
4781:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4782:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_sin_cos_f32(
4783:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t theta,
4784:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pSinVal,
4785:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pCosVal);
4786:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4787:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4788:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4789:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Q31 sin_cos function.
4790:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  theta    scaled input value in degrees
4791:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pSinVal  points to the processed sine output.
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 89


4792:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pCosVal  points to the processed cosine output.
4793:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4794:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_sin_cos_q31(
4795:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t theta,
4796:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pSinVal,
4797:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pCosVal);
4798:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4799:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4800:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4801:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Floating-point complex conjugate.
4802:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
4803:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the output vector
4804:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in each vector
4805:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4806:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_cmplx_conj_f32(
4807:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
4808:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
4809:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t numSamples);
4810:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4811:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4812:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Q31 complex conjugate.
4813:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
4814:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the output vector
4815:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in each vector
4816:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4817:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_cmplx_conj_q31(
4818:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
4819:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
4820:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t numSamples);
4821:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4822:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4823:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4824:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Q15 complex conjugate.
4825:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc        points to the input vector
4826:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the output vector
4827:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in each vector
4828:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4829:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_cmplx_conj_q15(
4830:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
4831:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
4832:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t numSamples);
4833:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4834:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4835:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4836:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Floating-point complex magnitude squared
4837:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc        points to the complex input vector
4838:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the real output vector
4839:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in the input vector
4840:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4841:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_cmplx_mag_squared_f32(
4842:Drivers/CMSIS/DSP/Include/arm_math.h ****   const float32_t * pSrc,
4843:Drivers/CMSIS/DSP/Include/arm_math.h ****         float32_t * pDst,
4844:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t numSamples);
4845:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4846:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4847:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4848:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Q31 complex magnitude squared
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 90


4849:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc        points to the complex input vector
4850:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the real output vector
4851:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in the input vector
4852:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4853:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_cmplx_mag_squared_q31(
4854:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q31_t * pSrc,
4855:Drivers/CMSIS/DSP/Include/arm_math.h ****         q31_t * pDst,
4856:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t numSamples);
4857:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4858:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4859:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4860:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Q15 complex magnitude squared
4861:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  pSrc        points to the complex input vector
4862:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pDst        points to the real output vector
4863:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  numSamples  number of complex samples in the input vector
4864:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4865:Drivers/CMSIS/DSP/Include/arm_math.h ****   void arm_cmplx_mag_squared_q15(
4866:Drivers/CMSIS/DSP/Include/arm_math.h ****   const q15_t * pSrc,
4867:Drivers/CMSIS/DSP/Include/arm_math.h ****         q15_t * pDst,
4868:Drivers/CMSIS/DSP/Include/arm_math.h ****         uint32_t numSamples);
4869:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4870:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4871:Drivers/CMSIS/DSP/Include/arm_math.h ****  /**
4872:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @ingroup groupController
4873:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4874:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4875:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4876:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @defgroup PID PID Motor Control
4877:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
4878:Drivers/CMSIS/DSP/Include/arm_math.h ****    * A Proportional Integral Derivative (PID) controller is a generic feedback control
4879:Drivers/CMSIS/DSP/Include/arm_math.h ****    * loop mechanism widely used in industrial control systems.
4880:Drivers/CMSIS/DSP/Include/arm_math.h ****    * A PID controller is the most commonly used type of feedback controller.
4881:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
4882:Drivers/CMSIS/DSP/Include/arm_math.h ****    * This set of functions implements (PID) controllers
4883:Drivers/CMSIS/DSP/Include/arm_math.h ****    * for Q15, Q31, and floating-point data types.  The functions operate on a single sample
4884:Drivers/CMSIS/DSP/Include/arm_math.h ****    * of data and each call to the function returns a single processed value.
4885:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <code>S</code> points to an instance of the PID control data structure.  <code>in</code>
4886:Drivers/CMSIS/DSP/Include/arm_math.h ****    * is the input sample value. The functions return the output value.
4887:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
4888:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \par Algorithm:
4889:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <pre>
4890:Drivers/CMSIS/DSP/Include/arm_math.h ****    *    y[n] = y[n-1] + A0 * x[n] + A1 * x[n-1] + A2 * x[n-2]
4891:Drivers/CMSIS/DSP/Include/arm_math.h ****    *    A0 = Kp + Ki + Kd
4892:Drivers/CMSIS/DSP/Include/arm_math.h ****    *    A1 = (-Kp ) - (2 * Kd )
4893:Drivers/CMSIS/DSP/Include/arm_math.h ****    *    A2 = Kd
4894:Drivers/CMSIS/DSP/Include/arm_math.h ****    * </pre>
4895:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
4896:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \par
4897:Drivers/CMSIS/DSP/Include/arm_math.h ****    * where \c Kp is proportional constant, \c Ki is Integral constant and \c Kd is Derivative const
4898:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
4899:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \par
4900:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \image html PID.gif "Proportional Integral Derivative Controller"
4901:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
4902:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \par
4903:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The PID controller calculates an "error" value as the difference between
4904:Drivers/CMSIS/DSP/Include/arm_math.h ****    * the measured output and the reference input.
4905:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The controller attempts to minimize the error by adjusting the process control inputs.
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 91


4906:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The proportional value determines the reaction to the current error,
4907:Drivers/CMSIS/DSP/Include/arm_math.h ****    * the integral value determines the reaction based on the sum of recent errors,
4908:Drivers/CMSIS/DSP/Include/arm_math.h ****    * and the derivative value determines the reaction based on the rate at which the error has been
4909:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
4910:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \par Instance Structure
4911:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The Gains A0, A1, A2 and state variables for a PID controller are stored together in an instan
4912:Drivers/CMSIS/DSP/Include/arm_math.h ****    * A separate instance structure must be defined for each PID Controller.
4913:Drivers/CMSIS/DSP/Include/arm_math.h ****    * There are separate instance structure declarations for each of the 3 supported data types.
4914:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
4915:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \par Reset Functions
4916:Drivers/CMSIS/DSP/Include/arm_math.h ****    * There is also an associated reset function for each data type which clears the state array.
4917:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
4918:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \par Initialization Functions
4919:Drivers/CMSIS/DSP/Include/arm_math.h ****    * There is also an associated initialization function for each data type.
4920:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The initialization function performs the following operations:
4921:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - Initializes the Gains A0, A1, A2 from Kp,Ki, Kd gains.
4922:Drivers/CMSIS/DSP/Include/arm_math.h ****    * - Zeros out the values in the state buffer.
4923:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
4924:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \par
4925:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Instance structure cannot be placed into a const data section and it is recommended to use the
4926:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
4927:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \par Fixed-Point Behavior
4928:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Care must be taken when using the fixed-point versions of the PID Controller functions.
4929:Drivers/CMSIS/DSP/Include/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used in each function m
4930:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
4931:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4932:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4933:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4934:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @addtogroup PID
4935:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @{
4936:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4937:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4938:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
4939:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief         Process function for the floating-point PID Control.
4940:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S   is an instance of the floating-point PID Control structure
4941:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     in  input sample to process
4942:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return        processed output sample.
4943:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
4944:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE float32_t arm_pid_f32(
4945:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_pid_instance_f32 * S,
4946:Drivers/CMSIS/DSP/Include/arm_math.h ****   float32_t in)
4947:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
4948:Drivers/CMSIS/DSP/Include/arm_math.h ****     float32_t out;
4949:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4950:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* y[n] = y[n-1] + A0 * x[n] + A1 * x[n-1] + A2 * x[n-2]  */
4951:Drivers/CMSIS/DSP/Include/arm_math.h ****     out = (S->A0 * in) +
4952:Drivers/CMSIS/DSP/Include/arm_math.h ****       (S->A1 * S->state[0]) + (S->A2 * S->state[1]) + (S->state[2]);
4953:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4954:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Update state */
4955:Drivers/CMSIS/DSP/Include/arm_math.h ****     S->state[1] = S->state[0];
4956:Drivers/CMSIS/DSP/Include/arm_math.h ****     S->state[0] = in;
4957:Drivers/CMSIS/DSP/Include/arm_math.h ****     S->state[2] = out;
4958:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4959:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* return to application */
4960:Drivers/CMSIS/DSP/Include/arm_math.h ****     return (out);
4961:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4962:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 92


4963:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4964:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
4965:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief         Process function for the Q31 PID Control.
4966:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in,out] S  points to an instance of the Q31 PID Control structure
4967:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     in  input sample to process
4968:Drivers/CMSIS/DSP/Include/arm_math.h ****   @return        processed output sample.
4969:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4970:Drivers/CMSIS/DSP/Include/arm_math.h ****   \par Scaling and Overflow Behavior
4971:Drivers/CMSIS/DSP/Include/arm_math.h ****          The function is implemented using an internal 64-bit accumulator.
4972:Drivers/CMSIS/DSP/Include/arm_math.h ****          The accumulator has a 2.62 format and maintains full precision of the intermediate multipl
4973:Drivers/CMSIS/DSP/Include/arm_math.h ****          Thus, if the accumulator result overflows it wraps around rather than clip.
4974:Drivers/CMSIS/DSP/Include/arm_math.h ****          In order to avoid overflows completely the input signal must be scaled down by 2 bits as t
4975:Drivers/CMSIS/DSP/Include/arm_math.h ****          After all multiply-accumulates are performed, the 2.62 accumulator is truncated to 1.32 fo
4976:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
4977:Drivers/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q31_t arm_pid_q31(
4978:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_pid_instance_q31 * S,
4979:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t in)
4980:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
4981:Drivers/CMSIS/DSP/Include/arm_math.h ****     q63_t acc;
4982:Drivers/CMSIS/DSP/Include/arm_math.h ****     q31_t out;
4983:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4984:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* acc = A0 * x[n]  */
4985:Drivers/CMSIS/DSP/Include/arm_math.h ****     acc = (q63_t) S->A0 * in;
4986:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4987:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* acc += A1 * x[n-1] */
4988:Drivers/CMSIS/DSP/Include/arm_math.h ****     acc += (q63_t) S->A1 * S->state[0];
4989:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4990:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* acc += A2 * x[n-2]  */
4991:Drivers/CMSIS/DSP/Include/arm_math.h ****     acc += (q63_t) S->A2 * S->state[1];
4992:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4993:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* convert output to 1.31 format to add y[n-1] */
4994:Drivers/CMSIS/DSP/Include/arm_math.h ****     out = (q31_t) (acc >> 31U);
4995:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4996:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* out += y[n-1] */
4997:Drivers/CMSIS/DSP/Include/arm_math.h ****     out += S->state[2];
4998:Drivers/CMSIS/DSP/Include/arm_math.h **** 
4999:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Update state */
5000:Drivers/CMSIS/DSP/Include/arm_math.h ****     S->state[1] = S->state[0];
5001:Drivers/CMSIS/DSP/Include/arm_math.h ****     S->state[0] = in;
5002:Drivers/CMSIS/DSP/Include/arm_math.h ****     S->state[2] = out;
5003:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5004:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* return to application */
5005:Drivers/CMSIS/DSP/Include/arm_math.h ****     return (out);
5006:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
5007:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5008:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5009:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
5010:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief         Process function for the Q15 PID Control.
5011:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in,out] S   points to an instance of the Q15 PID Control structure
5012:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     in  input sample to process
5013:Drivers/CMSIS/DSP/Include/arm_math.h ****   @return        processed output sample.
5014:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5015:Drivers/CMSIS/DSP/Include/arm_math.h ****   \par Scaling and Overflow Behavior
5016:Drivers/CMSIS/DSP/Include/arm_math.h ****          The function is implemented using a 64-bit internal accumulator.
5017:Drivers/CMSIS/DSP/Include/arm_math.h ****          Both Gains and state variables are represented in 1.15 format and multiplications yield a 
5018:Drivers/CMSIS/DSP/Include/arm_math.h ****          The 2.30 intermediate results are accumulated in a 64-bit accumulator in 34.30 format.
5019:Drivers/CMSIS/DSP/Include/arm_math.h ****          There is no risk of internal overflow with this approach and the full precision of interme
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 93


5020:Drivers/CMSIS/DSP/Include/arm_math.h ****          After all additions have been performed, the accumulator is truncated to 34.15 format by d
5021:Drivers/CMSIS/DSP/Include/arm_math.h ****          Lastly, the accumulator is saturated to yield a result in 1.15 format.
5022:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
5023:Drivers/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE q15_t arm_pid_q15(
5024:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_pid_instance_q15 * S,
5025:Drivers/CMSIS/DSP/Include/arm_math.h ****   q15_t in)
5026:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
5027:Drivers/CMSIS/DSP/Include/arm_math.h ****     q63_t acc;
5028:Drivers/CMSIS/DSP/Include/arm_math.h ****     q15_t out;
5029:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5030:Drivers/CMSIS/DSP/Include/arm_math.h **** #if defined (ARM_MATH_DSP)
5031:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Implementation of PID controller */
5032:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5033:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* acc = A0 * x[n]  */
5034:Drivers/CMSIS/DSP/Include/arm_math.h ****     acc = (q31_t) __SMUAD((uint32_t)S->A0, (uint32_t)in);
5035:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5036:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* acc += A1 * x[n-1] + A2 * x[n-2]  */
5037:Drivers/CMSIS/DSP/Include/arm_math.h ****     acc = (q63_t)__SMLALD((uint32_t)S->A1, (uint32_t)read_q15x2 (S->state), (uint64_t)acc);
5038:Drivers/CMSIS/DSP/Include/arm_math.h **** #else
5039:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* acc = A0 * x[n]  */
5040:Drivers/CMSIS/DSP/Include/arm_math.h ****     acc = ((q31_t) S->A0) * in;
5041:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5042:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* acc += A1 * x[n-1] + A2 * x[n-2]  */
5043:Drivers/CMSIS/DSP/Include/arm_math.h ****     acc += (q31_t) S->A1 * S->state[0];
5044:Drivers/CMSIS/DSP/Include/arm_math.h ****     acc += (q31_t) S->A2 * S->state[1];
5045:Drivers/CMSIS/DSP/Include/arm_math.h **** #endif
5046:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5047:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* acc += y[n-1] */
5048:Drivers/CMSIS/DSP/Include/arm_math.h ****     acc += (q31_t) S->state[2] << 15;
5049:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5050:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* saturate the output */
5051:Drivers/CMSIS/DSP/Include/arm_math.h ****     out = (q15_t) (__SSAT((acc >> 15), 16));
5052:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5053:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Update state */
5054:Drivers/CMSIS/DSP/Include/arm_math.h ****     S->state[1] = S->state[0];
5055:Drivers/CMSIS/DSP/Include/arm_math.h ****     S->state[0] = in;
5056:Drivers/CMSIS/DSP/Include/arm_math.h ****     S->state[2] = out;
5057:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5058:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* return to application */
5059:Drivers/CMSIS/DSP/Include/arm_math.h ****     return (out);
5060:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
5061:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5062:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5063:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @} end of PID group
5064:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5065:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5066:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5067:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5068:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Floating-point matrix inverse.
5069:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  src   points to the instance of the input floating-point matrix structure.
5070:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] dst   points to the instance of the output floating-point matrix structure.
5071:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return The function returns ARM_MATH_SIZE_MISMATCH, if the dimensions do not match.
5072:Drivers/CMSIS/DSP/Include/arm_math.h ****    * If the input matrix is singular (does not have an inverse), then the algorithm terminates and 
5073:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5074:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_mat_inverse_f32(
5075:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_f32 * src,
5076:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_matrix_instance_f32 * dst);
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 94


5077:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5078:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5079:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5080:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Floating-point matrix inverse.
5081:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  src   points to the instance of the input floating-point matrix structure.
5082:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] dst   points to the instance of the output floating-point matrix structure.
5083:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return The function returns ARM_MATH_SIZE_MISMATCH, if the dimensions do not match.
5084:Drivers/CMSIS/DSP/Include/arm_math.h ****    * If the input matrix is singular (does not have an inverse), then the algorithm terminates and 
5085:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5086:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_status arm_mat_inverse_f64(
5087:Drivers/CMSIS/DSP/Include/arm_math.h ****   const arm_matrix_instance_f64 * src,
5088:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_matrix_instance_f64 * dst);
5089:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5090:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5091:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5092:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5093:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @ingroup groupController
5094:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5095:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5096:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5097:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @defgroup clarke Vector Clarke Transform
5098:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Forward Clarke transform converts the instantaneous stator phases into a two-coordinate time i
5099:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Generally the Clarke transform uses three-phase currents <code>Ia, Ib and Ic</code> to calcula
5100:Drivers/CMSIS/DSP/Include/arm_math.h ****    * in the two-phase orthogonal stator axis <code>Ialpha</code> and <code>Ibeta</code>.
5101:Drivers/CMSIS/DSP/Include/arm_math.h ****    * When <code>Ialpha</code> is superposed with <code>Ia</code> as shown in the figure below
5102:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \image html clarke.gif Stator current space vector and its components in (a,b).
5103:Drivers/CMSIS/DSP/Include/arm_math.h ****    * and <code>Ia + Ib + Ic = 0</code>, in this condition <code>Ialpha</code> and <code>Ibeta</code
5104:Drivers/CMSIS/DSP/Include/arm_math.h ****    * can be calculated using only <code>Ia</code> and <code>Ib</code>.
5105:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
5106:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
5107:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
5108:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \par Algorithm
5109:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \image html clarkeFormula.gif
5110:Drivers/CMSIS/DSP/Include/arm_math.h ****    * where <code>Ia</code> and <code>Ib</code> are the instantaneous stator phases and
5111:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <code>pIalpha</code> and <code>pIbeta</code> are the two coordinates of time invariant vector.
5112:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \par Fixed-Point Behavior
5113:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Care must be taken when using the Q31 version of the Clarke transform.
5114:Drivers/CMSIS/DSP/Include/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
5115:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
5116:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5117:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5118:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5119:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @addtogroup clarke
5120:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @{
5121:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5122:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5123:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5124:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
5125:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Floating-point Clarke transform
5126:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  Ia       input three-phase coordinate <code>a</code>
5127:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  Ib       input three-phase coordinate <code>b</code>
5128:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
5129:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
5130:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return        none
5131:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5132:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE void arm_clarke_f32(
5133:Drivers/CMSIS/DSP/Include/arm_math.h ****   float32_t Ia,
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 95


5134:Drivers/CMSIS/DSP/Include/arm_math.h ****   float32_t Ib,
5135:Drivers/CMSIS/DSP/Include/arm_math.h ****   float32_t * pIalpha,
5136:Drivers/CMSIS/DSP/Include/arm_math.h ****   float32_t * pIbeta)
5137:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
5138:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Calculate pIalpha using the equation, pIalpha = Ia */
5139:Drivers/CMSIS/DSP/Include/arm_math.h ****     *pIalpha = Ia;
5140:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5141:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Calculate pIbeta using the equation, pIbeta = (1/sqrt(3)) * Ia + (2/sqrt(3)) * Ib */
5142:Drivers/CMSIS/DSP/Include/arm_math.h ****     *pIbeta = ((float32_t) 0.57735026919 * Ia + (float32_t) 1.15470053838 * Ib);
5143:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
5144:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5145:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5146:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
5147:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief  Clarke transform for Q31 version
5148:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]  Ia       input three-phase coordinate <code>a</code>
5149:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]  Ib       input three-phase coordinate <code>b</code>
5150:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
5151:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
5152:Drivers/CMSIS/DSP/Include/arm_math.h ****   @return     none
5153:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5154:Drivers/CMSIS/DSP/Include/arm_math.h ****   \par Scaling and Overflow Behavior
5155:Drivers/CMSIS/DSP/Include/arm_math.h ****          The function is implemented using an internal 32-bit accumulator.
5156:Drivers/CMSIS/DSP/Include/arm_math.h ****          The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate mult
5157:Drivers/CMSIS/DSP/Include/arm_math.h ****          There is saturation on the addition, hence there is no risk of overflow.
5158:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
5159:Drivers/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void arm_clarke_q31(
5160:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t Ia,
5161:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t Ib,
5162:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t * pIalpha,
5163:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t * pIbeta)
5164:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
5165:Drivers/CMSIS/DSP/Include/arm_math.h ****     q31_t product1, product2;                    /* Temporary variables used to store intermediate 
5166:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5167:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Calculating pIalpha from Ia by equation pIalpha = Ia */
5168:Drivers/CMSIS/DSP/Include/arm_math.h ****     *pIalpha = Ia;
5169:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5170:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Intermediate product is calculated by (1/(sqrt(3)) * Ia) */
5171:Drivers/CMSIS/DSP/Include/arm_math.h ****     product1 = (q31_t) (((q63_t) Ia * 0x24F34E8B) >> 30);
5172:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5173:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Intermediate product is calculated by (2/sqrt(3) * Ib) */
5174:Drivers/CMSIS/DSP/Include/arm_math.h ****     product2 = (q31_t) (((q63_t) Ib * 0x49E69D16) >> 30);
5175:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5176:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* pIbeta is calculated by adding the intermediate products */
5177:Drivers/CMSIS/DSP/Include/arm_math.h ****     *pIbeta = __QADD(product1, product2);
5178:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
5179:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5180:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5181:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @} end of clarke group
5182:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5183:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5184:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5185:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5186:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @ingroup groupController
5187:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5188:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5189:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5190:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @defgroup inv_clarke Vector Inverse Clarke Transform
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 96


5191:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Inverse Clarke transform converts the two-coordinate time invariant vector into instantaneous 
5192:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
5193:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
5194:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
5195:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \par Algorithm
5196:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \image html clarkeInvFormula.gif
5197:Drivers/CMSIS/DSP/Include/arm_math.h ****    * where <code>pIa</code> and <code>pIb</code> are the instantaneous stator phases and
5198:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <code>Ialpha</code> and <code>Ibeta</code> are the two coordinates of time invariant vector.
5199:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \par Fixed-Point Behavior
5200:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Care must be taken when using the Q31 version of the Clarke transform.
5201:Drivers/CMSIS/DSP/Include/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
5202:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
5203:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5204:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5205:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5206:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @addtogroup inv_clarke
5207:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @{
5208:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5209:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5210:Drivers/CMSIS/DSP/Include/arm_math.h ****    /**
5211:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Floating-point Inverse Clarke transform
5212:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  Ialpha  input two-phase orthogonal vector axis alpha
5213:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  Ibeta   input two-phase orthogonal vector axis beta
5214:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pIa     points to output three-phase coordinate <code>a</code>
5215:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pIb     points to output three-phase coordinate <code>b</code>
5216:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return     none
5217:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5218:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE void arm_inv_clarke_f32(
5219:Drivers/CMSIS/DSP/Include/arm_math.h ****   float32_t Ialpha,
5220:Drivers/CMSIS/DSP/Include/arm_math.h ****   float32_t Ibeta,
5221:Drivers/CMSIS/DSP/Include/arm_math.h ****   float32_t * pIa,
5222:Drivers/CMSIS/DSP/Include/arm_math.h ****   float32_t * pIb)
5223:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
5224:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Calculating pIa from Ialpha by equation pIa = Ialpha */
5225:Drivers/CMSIS/DSP/Include/arm_math.h ****     *pIa = Ialpha;
5226:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5227:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Calculating pIb from Ialpha and Ibeta by equation pIb = -(1/2) * Ialpha + (sqrt(3)/2) * Ibet
5228:Drivers/CMSIS/DSP/Include/arm_math.h ****     *pIb = -0.5f * Ialpha + 0.8660254039f * Ibeta;
5229:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
5230:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5231:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5232:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
5233:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief  Inverse Clarke transform for Q31 version
5234:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]  Ialpha  input two-phase orthogonal vector axis alpha
5235:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]  Ibeta   input two-phase orthogonal vector axis beta
5236:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[out] pIa     points to output three-phase coordinate <code>a</code>
5237:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[out] pIb     points to output three-phase coordinate <code>b</code>
5238:Drivers/CMSIS/DSP/Include/arm_math.h ****   @return     none
5239:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5240:Drivers/CMSIS/DSP/Include/arm_math.h ****   \par Scaling and Overflow Behavior
5241:Drivers/CMSIS/DSP/Include/arm_math.h ****          The function is implemented using an internal 32-bit accumulator.
5242:Drivers/CMSIS/DSP/Include/arm_math.h ****          The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate mult
5243:Drivers/CMSIS/DSP/Include/arm_math.h ****          There is saturation on the subtraction, hence there is no risk of overflow.
5244:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
5245:Drivers/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void arm_inv_clarke_q31(
5246:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t Ialpha,
5247:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t Ibeta,
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 97


5248:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t * pIa,
5249:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t * pIb)
5250:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
5251:Drivers/CMSIS/DSP/Include/arm_math.h ****     q31_t product1, product2;                    /* Temporary variables used to store intermediate 
5252:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5253:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Calculating pIa from Ialpha by equation pIa = Ialpha */
5254:Drivers/CMSIS/DSP/Include/arm_math.h ****     *pIa = Ialpha;
5255:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5256:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Intermediate product is calculated by (1/(2*sqrt(3)) * Ia) */
5257:Drivers/CMSIS/DSP/Include/arm_math.h ****     product1 = (q31_t) (((q63_t) (Ialpha) * (0x40000000)) >> 31);
5258:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5259:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Intermediate product is calculated by (1/sqrt(3) * pIb) */
5260:Drivers/CMSIS/DSP/Include/arm_math.h ****     product2 = (q31_t) (((q63_t) (Ibeta) * (0x6ED9EBA1)) >> 31);
5261:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5262:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* pIb is calculated by subtracting the products */
5263:Drivers/CMSIS/DSP/Include/arm_math.h ****     *pIb = __QSUB(product2, product1);
5264:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
5265:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5266:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5267:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @} end of inv_clarke group
5268:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5269:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5270:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5271:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5272:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5273:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @ingroup groupController
5274:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5275:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5276:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5277:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @defgroup park Vector Park Transform
5278:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
5279:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Forward Park transform converts the input two-coordinate vector to flux and torque components.
5280:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The Park transform can be used to realize the transformation of the <code>Ialpha</code> and th
5281:Drivers/CMSIS/DSP/Include/arm_math.h ****    * from the stationary to the moving reference frame and control the spatial relationship between
5282:Drivers/CMSIS/DSP/Include/arm_math.h ****    * the stator vector current and rotor flux vector.
5283:Drivers/CMSIS/DSP/Include/arm_math.h ****    * If we consider the d axis aligned with the rotor flux, the diagram below shows the
5284:Drivers/CMSIS/DSP/Include/arm_math.h ****    * current vector and the relationship from the two reference frames:
5285:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \image html park.gif "Stator current space vector and its component in (a,b) and in the d,q ro
5286:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
5287:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
5288:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
5289:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \par Algorithm
5290:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \image html parkFormula.gif
5291:Drivers/CMSIS/DSP/Include/arm_math.h ****    * where <code>Ialpha</code> and <code>Ibeta</code> are the stator vector components,
5292:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <code>pId</code> and <code>pIq</code> are rotor vector components and <code>cosVal</code> and 
5293:Drivers/CMSIS/DSP/Include/arm_math.h ****    * cosine and sine values of theta (rotor flux position).
5294:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \par Fixed-Point Behavior
5295:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Care must be taken when using the Q31 version of the Park transform.
5296:Drivers/CMSIS/DSP/Include/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
5297:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
5298:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5299:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5300:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5301:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @addtogroup park
5302:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @{
5303:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5304:Drivers/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 98


5305:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5306:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Floating-point Park transform
5307:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  Ialpha  input two-phase vector coordinate alpha
5308:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  Ibeta   input two-phase vector coordinate beta
5309:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pId     points to output   rotor reference frame d
5310:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pIq     points to output   rotor reference frame q
5311:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  sinVal  sine value of rotation angle theta
5312:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  cosVal  cosine value of rotation angle theta
5313:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return     none
5314:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
5315:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The function implements the forward Park transform.
5316:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
5317:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5318:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE void arm_park_f32(
5319:Drivers/CMSIS/DSP/Include/arm_math.h ****   float32_t Ialpha,
5320:Drivers/CMSIS/DSP/Include/arm_math.h ****   float32_t Ibeta,
5321:Drivers/CMSIS/DSP/Include/arm_math.h ****   float32_t * pId,
5322:Drivers/CMSIS/DSP/Include/arm_math.h ****   float32_t * pIq,
5323:Drivers/CMSIS/DSP/Include/arm_math.h ****   float32_t sinVal,
5324:Drivers/CMSIS/DSP/Include/arm_math.h ****   float32_t cosVal)
5325:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
5326:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Calculate pId using the equation, pId = Ialpha * cosVal + Ibeta * sinVal */
5327:Drivers/CMSIS/DSP/Include/arm_math.h ****     *pId = Ialpha * cosVal + Ibeta * sinVal;
5328:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5329:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Calculate pIq using the equation, pIq = - Ialpha * sinVal + Ibeta * cosVal */
5330:Drivers/CMSIS/DSP/Include/arm_math.h ****     *pIq = -Ialpha * sinVal + Ibeta * cosVal;
5331:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
5332:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5333:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5334:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
5335:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief  Park transform for Q31 version
5336:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]  Ialpha  input two-phase vector coordinate alpha
5337:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]  Ibeta   input two-phase vector coordinate beta
5338:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[out] pId     points to output rotor reference frame d
5339:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[out] pIq     points to output rotor reference frame q
5340:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]  sinVal  sine value of rotation angle theta
5341:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]  cosVal  cosine value of rotation angle theta
5342:Drivers/CMSIS/DSP/Include/arm_math.h ****   @return     none
5343:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5344:Drivers/CMSIS/DSP/Include/arm_math.h ****   \par Scaling and Overflow Behavior
5345:Drivers/CMSIS/DSP/Include/arm_math.h ****          The function is implemented using an internal 32-bit accumulator.
5346:Drivers/CMSIS/DSP/Include/arm_math.h ****          The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate mult
5347:Drivers/CMSIS/DSP/Include/arm_math.h ****          There is saturation on the addition and subtraction, hence there is no risk of overflow.
5348:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
5349:Drivers/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void arm_park_q31(
5350:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t Ialpha,
5351:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t Ibeta,
5352:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t * pId,
5353:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t * pIq,
5354:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t sinVal,
5355:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t cosVal)
5356:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
5357:Drivers/CMSIS/DSP/Include/arm_math.h ****     q31_t product1, product2;                    /* Temporary variables used to store intermediate 
5358:Drivers/CMSIS/DSP/Include/arm_math.h ****     q31_t product3, product4;                    /* Temporary variables used to store intermediate 
5359:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5360:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Intermediate product is calculated by (Ialpha * cosVal) */
5361:Drivers/CMSIS/DSP/Include/arm_math.h ****     product1 = (q31_t) (((q63_t) (Ialpha) * (cosVal)) >> 31);
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 99


5362:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5363:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Intermediate product is calculated by (Ibeta * sinVal) */
5364:Drivers/CMSIS/DSP/Include/arm_math.h ****     product2 = (q31_t) (((q63_t) (Ibeta) * (sinVal)) >> 31);
5365:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5366:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5367:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Intermediate product is calculated by (Ialpha * sinVal) */
5368:Drivers/CMSIS/DSP/Include/arm_math.h ****     product3 = (q31_t) (((q63_t) (Ialpha) * (sinVal)) >> 31);
5369:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5370:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Intermediate product is calculated by (Ibeta * cosVal) */
5371:Drivers/CMSIS/DSP/Include/arm_math.h ****     product4 = (q31_t) (((q63_t) (Ibeta) * (cosVal)) >> 31);
5372:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5373:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Calculate pId by adding the two intermediate products 1 and 2 */
5374:Drivers/CMSIS/DSP/Include/arm_math.h ****     *pId = __QADD(product1, product2);
5375:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5376:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Calculate pIq by subtracting the two intermediate products 3 from 4 */
5377:Drivers/CMSIS/DSP/Include/arm_math.h ****     *pIq = __QSUB(product4, product3);
5378:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
5379:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5380:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5381:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @} end of park group
5382:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5383:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5384:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5385:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5386:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @ingroup groupController
5387:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5388:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5389:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5390:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @defgroup inv_park Vector Inverse Park transform
5391:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Inverse Park transform converts the input flux and torque components to two-coordinate vector.
5392:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
5393:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The function operates on a single sample of data and each call to the function returns the pro
5394:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The library provides separate functions for Q31 and floating-point data types.
5395:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \par Algorithm
5396:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \image html parkInvFormula.gif
5397:Drivers/CMSIS/DSP/Include/arm_math.h ****    * where <code>pIalpha</code> and <code>pIbeta</code> are the stator vector components,
5398:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <code>Id</code> and <code>Iq</code> are rotor vector components and <code>cosVal</code> and <c
5399:Drivers/CMSIS/DSP/Include/arm_math.h ****    * cosine and sine values of theta (rotor flux position).
5400:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \par Fixed-Point Behavior
5401:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Care must be taken when using the Q31 version of the Park transform.
5402:Drivers/CMSIS/DSP/Include/arm_math.h ****    * In particular, the overflow and saturation behavior of the accumulator used must be considered
5403:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Refer to the function specific documentation below for usage guidelines.
5404:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5405:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5406:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5407:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @addtogroup inv_park
5408:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @{
5409:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5410:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5411:Drivers/CMSIS/DSP/Include/arm_math.h ****    /**
5412:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Floating-point Inverse Park transform
5413:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  Id       input coordinate of rotor reference frame d
5414:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  Iq       input coordinate of rotor reference frame q
5415:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
5416:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
5417:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  sinVal   sine value of rotation angle theta
5418:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]  cosVal   cosine value of rotation angle theta
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 100


5419:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return     none
5420:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5421:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE void arm_inv_park_f32(
5422:Drivers/CMSIS/DSP/Include/arm_math.h ****   float32_t Id,
5423:Drivers/CMSIS/DSP/Include/arm_math.h ****   float32_t Iq,
5424:Drivers/CMSIS/DSP/Include/arm_math.h ****   float32_t * pIalpha,
5425:Drivers/CMSIS/DSP/Include/arm_math.h ****   float32_t * pIbeta,
5426:Drivers/CMSIS/DSP/Include/arm_math.h ****   float32_t sinVal,
5427:Drivers/CMSIS/DSP/Include/arm_math.h ****   float32_t cosVal)
5428:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
5429:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Calculate pIalpha using the equation, pIalpha = Id * cosVal - Iq * sinVal */
5430:Drivers/CMSIS/DSP/Include/arm_math.h ****     *pIalpha = Id * cosVal - Iq * sinVal;
5431:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5432:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Calculate pIbeta using the equation, pIbeta = Id * sinVal + Iq * cosVal */
5433:Drivers/CMSIS/DSP/Include/arm_math.h ****     *pIbeta = Id * sinVal + Iq * cosVal;
5434:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
5435:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5436:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5437:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
5438:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief  Inverse Park transform for   Q31 version
5439:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]  Id       input coordinate of rotor reference frame d
5440:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]  Iq       input coordinate of rotor reference frame q
5441:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[out] pIalpha  points to output two-phase orthogonal vector axis alpha
5442:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[out] pIbeta   points to output two-phase orthogonal vector axis beta
5443:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]  sinVal   sine value of rotation angle theta
5444:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]  cosVal   cosine value of rotation angle theta
5445:Drivers/CMSIS/DSP/Include/arm_math.h ****   @return     none
5446:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5447:Drivers/CMSIS/DSP/Include/arm_math.h ****   @par Scaling and Overflow Behavior
5448:Drivers/CMSIS/DSP/Include/arm_math.h ****          The function is implemented using an internal 32-bit accumulator.
5449:Drivers/CMSIS/DSP/Include/arm_math.h ****          The accumulator maintains 1.31 format by truncating lower 31 bits of the intermediate mult
5450:Drivers/CMSIS/DSP/Include/arm_math.h ****          There is saturation on the addition, hence there is no risk of overflow.
5451:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
5452:Drivers/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE void arm_inv_park_q31(
5453:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t Id,
5454:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t Iq,
5455:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t * pIalpha,
5456:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t * pIbeta,
5457:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t sinVal,
5458:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t cosVal)
5459:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
5460:Drivers/CMSIS/DSP/Include/arm_math.h ****     q31_t product1, product2;                    /* Temporary variables used to store intermediate 
5461:Drivers/CMSIS/DSP/Include/arm_math.h ****     q31_t product3, product4;                    /* Temporary variables used to store intermediate 
5462:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5463:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Intermediate product is calculated by (Id * cosVal) */
5464:Drivers/CMSIS/DSP/Include/arm_math.h ****     product1 = (q31_t) (((q63_t) (Id) * (cosVal)) >> 31);
5465:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5466:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Intermediate product is calculated by (Iq * sinVal) */
5467:Drivers/CMSIS/DSP/Include/arm_math.h ****     product2 = (q31_t) (((q63_t) (Iq) * (sinVal)) >> 31);
5468:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5469:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5470:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Intermediate product is calculated by (Id * sinVal) */
5471:Drivers/CMSIS/DSP/Include/arm_math.h ****     product3 = (q31_t) (((q63_t) (Id) * (sinVal)) >> 31);
5472:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5473:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Intermediate product is calculated by (Iq * cosVal) */
5474:Drivers/CMSIS/DSP/Include/arm_math.h ****     product4 = (q31_t) (((q63_t) (Iq) * (cosVal)) >> 31);
5475:Drivers/CMSIS/DSP/Include/arm_math.h **** 
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 101


5476:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Calculate pIalpha by using the two intermediate products 1 and 2 */
5477:Drivers/CMSIS/DSP/Include/arm_math.h ****     *pIalpha = __QSUB(product1, product2);
5478:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5479:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Calculate pIbeta by using the two intermediate products 3 and 4 */
5480:Drivers/CMSIS/DSP/Include/arm_math.h ****     *pIbeta = __QADD(product4, product3);
5481:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
5482:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5483:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5484:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @} end of Inverse park group
5485:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5486:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5487:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5488:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5489:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @ingroup groupInterpolation
5490:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5491:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5492:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5493:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @defgroup LinearInterpolate Linear Interpolation
5494:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
5495:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Linear interpolation is a method of curve fitting using linear polynomials.
5496:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Linear interpolation works by effectively drawing a straight line between two neighboring samp
5497:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
5498:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \par
5499:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \image html LinearInterp.gif "Linear interpolation"
5500:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
5501:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \par
5502:Drivers/CMSIS/DSP/Include/arm_math.h ****    * A  Linear Interpolate function calculates an output value(y), for the input(x)
5503:Drivers/CMSIS/DSP/Include/arm_math.h ****    * using linear interpolation of the input values x0, x1( nearest input values) and the output va
5504:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
5505:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \par Algorithm:
5506:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <pre>
5507:Drivers/CMSIS/DSP/Include/arm_math.h ****    *       y = y0 + (x - x0) * ((y1 - y0)/(x1-x0))
5508:Drivers/CMSIS/DSP/Include/arm_math.h ****    *       where x0, x1 are nearest values of input x
5509:Drivers/CMSIS/DSP/Include/arm_math.h ****    *             y0, y1 are nearest values to output y
5510:Drivers/CMSIS/DSP/Include/arm_math.h ****    * </pre>
5511:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
5512:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \par
5513:Drivers/CMSIS/DSP/Include/arm_math.h ****    * This set of functions implements Linear interpolation process
5514:Drivers/CMSIS/DSP/Include/arm_math.h ****    * for Q7, Q15, Q31, and floating-point data types.  The functions operate on a single
5515:Drivers/CMSIS/DSP/Include/arm_math.h ****    * sample of data and each call to the function returns a single processed value.
5516:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <code>S</code> points to an instance of the Linear Interpolate function data structure.
5517:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <code>x</code> is the input sample value. The functions returns the output value.
5518:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
5519:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \par
5520:Drivers/CMSIS/DSP/Include/arm_math.h ****    * if x is outside of the table boundary, Linear interpolation returns first value of the table
5521:Drivers/CMSIS/DSP/Include/arm_math.h ****    * if x is below input range and returns last value of table if x is above range.
5522:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5523:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5524:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5525:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @addtogroup LinearInterpolate
5526:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @{
5527:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5528:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5529:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5530:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Process function for the floating-point Linear Interpolation Function.
5531:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in,out] S  is an instance of the floating-point Linear Interpolation structure
5532:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in]     x  input sample to process
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 102


5533:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return y processed output sample.
5534:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
5535:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5536:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE float32_t arm_linear_interp_f32(
5537:Drivers/CMSIS/DSP/Include/arm_math.h ****   arm_linear_interp_instance_f32 * S,
5538:Drivers/CMSIS/DSP/Include/arm_math.h ****   float32_t x)
5539:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
5540:Drivers/CMSIS/DSP/Include/arm_math.h ****     float32_t y;
5541:Drivers/CMSIS/DSP/Include/arm_math.h ****     float32_t x0, x1;                            /* Nearest input values */
5542:Drivers/CMSIS/DSP/Include/arm_math.h ****     float32_t y0, y1;                            /* Nearest output values */
5543:Drivers/CMSIS/DSP/Include/arm_math.h ****     float32_t xSpacing = S->xSpacing;            /* spacing between input values */
5544:Drivers/CMSIS/DSP/Include/arm_math.h ****     int32_t i;                                   /* Index variable */
5545:Drivers/CMSIS/DSP/Include/arm_math.h ****     float32_t *pYData = S->pYData;               /* pointer to output table */
5546:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5547:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Calculation of index */
5548:Drivers/CMSIS/DSP/Include/arm_math.h ****     i = (int32_t) ((x - S->x1) / xSpacing);
5549:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5550:Drivers/CMSIS/DSP/Include/arm_math.h ****     if (i < 0)
5551:Drivers/CMSIS/DSP/Include/arm_math.h ****     {
5552:Drivers/CMSIS/DSP/Include/arm_math.h ****       /* Iniatilize output for below specified range as least output value of table */
5553:Drivers/CMSIS/DSP/Include/arm_math.h ****       y = pYData[0];
5554:Drivers/CMSIS/DSP/Include/arm_math.h ****     }
5555:Drivers/CMSIS/DSP/Include/arm_math.h ****     else if ((uint32_t)i >= S->nValues)
5556:Drivers/CMSIS/DSP/Include/arm_math.h ****     {
5557:Drivers/CMSIS/DSP/Include/arm_math.h ****       /* Iniatilize output for above specified range as last output value of table */
5558:Drivers/CMSIS/DSP/Include/arm_math.h ****       y = pYData[S->nValues - 1];
5559:Drivers/CMSIS/DSP/Include/arm_math.h ****     }
5560:Drivers/CMSIS/DSP/Include/arm_math.h ****     else
5561:Drivers/CMSIS/DSP/Include/arm_math.h ****     {
5562:Drivers/CMSIS/DSP/Include/arm_math.h ****       /* Calculation of nearest input values */
5563:Drivers/CMSIS/DSP/Include/arm_math.h ****       x0 = S->x1 +  i      * xSpacing;
5564:Drivers/CMSIS/DSP/Include/arm_math.h ****       x1 = S->x1 + (i + 1) * xSpacing;
5565:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5566:Drivers/CMSIS/DSP/Include/arm_math.h ****       /* Read of nearest output values */
5567:Drivers/CMSIS/DSP/Include/arm_math.h ****       y0 = pYData[i];
5568:Drivers/CMSIS/DSP/Include/arm_math.h ****       y1 = pYData[i + 1];
5569:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5570:Drivers/CMSIS/DSP/Include/arm_math.h ****       /* Calculation of output */
5571:Drivers/CMSIS/DSP/Include/arm_math.h ****       y = y0 + (x - x0) * ((y1 - y0) / (x1 - x0));
5572:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5573:Drivers/CMSIS/DSP/Include/arm_math.h ****     }
5574:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5575:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* returns output value */
5576:Drivers/CMSIS/DSP/Include/arm_math.h ****     return (y);
5577:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
5578:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5579:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5580:Drivers/CMSIS/DSP/Include/arm_math.h ****    /**
5581:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
5582:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Process function for the Q31 Linear Interpolation Function.
5583:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pYData   pointer to Q31 Linear Interpolation table
5584:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] x        input sample to process
5585:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] nValues  number of table values
5586:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return y processed output sample.
5587:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
5588:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \par
5589:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Input sample <code>x</code> is in 12.20 format which contains 12 bits for table index and 20 b
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 103


5590:Drivers/CMSIS/DSP/Include/arm_math.h ****    * This function can support maximum of table size 2^12.
5591:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
5592:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5593:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE q31_t arm_linear_interp_q31(
5594:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t * pYData,
5595:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t x,
5596:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t nValues)
5597:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
5598:Drivers/CMSIS/DSP/Include/arm_math.h ****     q31_t y;                                     /* output */
5599:Drivers/CMSIS/DSP/Include/arm_math.h ****     q31_t y0, y1;                                /* Nearest output values */
5600:Drivers/CMSIS/DSP/Include/arm_math.h ****     q31_t fract;                                 /* fractional part */
5601:Drivers/CMSIS/DSP/Include/arm_math.h ****     int32_t index;                               /* Index to read nearest output values */
5602:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5603:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Input is in 12.20 format */
5604:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* 12 bits for the table index */
5605:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Index value calculation */
5606:Drivers/CMSIS/DSP/Include/arm_math.h ****     index = ((x & (q31_t)0xFFF00000) >> 20);
5607:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5608:Drivers/CMSIS/DSP/Include/arm_math.h ****     if (index >= (int32_t)(nValues - 1))
5609:Drivers/CMSIS/DSP/Include/arm_math.h ****     {
5610:Drivers/CMSIS/DSP/Include/arm_math.h ****       return (pYData[nValues - 1]);
5611:Drivers/CMSIS/DSP/Include/arm_math.h ****     }
5612:Drivers/CMSIS/DSP/Include/arm_math.h ****     else if (index < 0)
5613:Drivers/CMSIS/DSP/Include/arm_math.h ****     {
5614:Drivers/CMSIS/DSP/Include/arm_math.h ****       return (pYData[0]);
5615:Drivers/CMSIS/DSP/Include/arm_math.h ****     }
5616:Drivers/CMSIS/DSP/Include/arm_math.h ****     else
5617:Drivers/CMSIS/DSP/Include/arm_math.h ****     {
5618:Drivers/CMSIS/DSP/Include/arm_math.h ****       /* 20 bits for the fractional part */
5619:Drivers/CMSIS/DSP/Include/arm_math.h ****       /* shift left by 11 to keep fract in 1.31 format */
5620:Drivers/CMSIS/DSP/Include/arm_math.h ****       fract = (x & 0x000FFFFF) << 11;
5621:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5622:Drivers/CMSIS/DSP/Include/arm_math.h ****       /* Read two nearest output values from the index in 1.31(q31) format */
5623:Drivers/CMSIS/DSP/Include/arm_math.h ****       y0 = pYData[index];
5624:Drivers/CMSIS/DSP/Include/arm_math.h ****       y1 = pYData[index + 1];
5625:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5626:Drivers/CMSIS/DSP/Include/arm_math.h ****       /* Calculation of y0 * (1-fract) and y is in 2.30 format */
5627:Drivers/CMSIS/DSP/Include/arm_math.h ****       y = ((q31_t) ((q63_t) y0 * (0x7FFFFFFF - fract) >> 32));
5628:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5629:Drivers/CMSIS/DSP/Include/arm_math.h ****       /* Calculation of y0 * (1-fract) + y1 *fract and y is in 2.30 format */
5630:Drivers/CMSIS/DSP/Include/arm_math.h ****       y += ((q31_t) (((q63_t) y1 * fract) >> 32));
5631:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5632:Drivers/CMSIS/DSP/Include/arm_math.h ****       /* Convert y to 1.31 format */
5633:Drivers/CMSIS/DSP/Include/arm_math.h ****       return (y << 1U);
5634:Drivers/CMSIS/DSP/Include/arm_math.h ****     }
5635:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
5636:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5637:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5638:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5639:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
5640:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Process function for the Q15 Linear Interpolation Function.
5641:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pYData   pointer to Q15 Linear Interpolation table
5642:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] x        input sample to process
5643:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] nValues  number of table values
5644:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return y processed output sample.
5645:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
5646:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \par
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 104


5647:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Input sample <code>x</code> is in 12.20 format which contains 12 bits for table index and 20 b
5648:Drivers/CMSIS/DSP/Include/arm_math.h ****    * This function can support maximum of table size 2^12.
5649:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
5650:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5651:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE q15_t arm_linear_interp_q15(
5652:Drivers/CMSIS/DSP/Include/arm_math.h ****   q15_t * pYData,
5653:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t x,
5654:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t nValues)
5655:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
5656:Drivers/CMSIS/DSP/Include/arm_math.h ****     q63_t y;                                     /* output */
5657:Drivers/CMSIS/DSP/Include/arm_math.h ****     q15_t y0, y1;                                /* Nearest output values */
5658:Drivers/CMSIS/DSP/Include/arm_math.h ****     q31_t fract;                                 /* fractional part */
5659:Drivers/CMSIS/DSP/Include/arm_math.h ****     int32_t index;                               /* Index to read nearest output values */
5660:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5661:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Input is in 12.20 format */
5662:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* 12 bits for the table index */
5663:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Index value calculation */
5664:Drivers/CMSIS/DSP/Include/arm_math.h ****     index = ((x & (int32_t)0xFFF00000) >> 20);
5665:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5666:Drivers/CMSIS/DSP/Include/arm_math.h ****     if (index >= (int32_t)(nValues - 1))
5667:Drivers/CMSIS/DSP/Include/arm_math.h ****     {
5668:Drivers/CMSIS/DSP/Include/arm_math.h ****       return (pYData[nValues - 1]);
5669:Drivers/CMSIS/DSP/Include/arm_math.h ****     }
5670:Drivers/CMSIS/DSP/Include/arm_math.h ****     else if (index < 0)
5671:Drivers/CMSIS/DSP/Include/arm_math.h ****     {
5672:Drivers/CMSIS/DSP/Include/arm_math.h ****       return (pYData[0]);
5673:Drivers/CMSIS/DSP/Include/arm_math.h ****     }
5674:Drivers/CMSIS/DSP/Include/arm_math.h ****     else
5675:Drivers/CMSIS/DSP/Include/arm_math.h ****     {
5676:Drivers/CMSIS/DSP/Include/arm_math.h ****       /* 20 bits for the fractional part */
5677:Drivers/CMSIS/DSP/Include/arm_math.h ****       /* fract is in 12.20 format */
5678:Drivers/CMSIS/DSP/Include/arm_math.h ****       fract = (x & 0x000FFFFF);
5679:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5680:Drivers/CMSIS/DSP/Include/arm_math.h ****       /* Read two nearest output values from the index */
5681:Drivers/CMSIS/DSP/Include/arm_math.h ****       y0 = pYData[index];
5682:Drivers/CMSIS/DSP/Include/arm_math.h ****       y1 = pYData[index + 1];
5683:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5684:Drivers/CMSIS/DSP/Include/arm_math.h ****       /* Calculation of y0 * (1-fract) and y is in 13.35 format */
5685:Drivers/CMSIS/DSP/Include/arm_math.h ****       y = ((q63_t) y0 * (0xFFFFF - fract));
5686:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5687:Drivers/CMSIS/DSP/Include/arm_math.h ****       /* Calculation of (y0 * (1-fract) + y1 * fract) and y is in 13.35 format */
5688:Drivers/CMSIS/DSP/Include/arm_math.h ****       y += ((q63_t) y1 * (fract));
5689:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5690:Drivers/CMSIS/DSP/Include/arm_math.h ****       /* convert y to 1.15 format */
5691:Drivers/CMSIS/DSP/Include/arm_math.h ****       return (q15_t) (y >> 20);
5692:Drivers/CMSIS/DSP/Include/arm_math.h ****     }
5693:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
5694:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5695:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5696:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5697:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
5698:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Process function for the Q7 Linear Interpolation Function.
5699:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] pYData   pointer to Q7 Linear Interpolation table
5700:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] x        input sample to process
5701:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] nValues  number of table values
5702:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return y processed output sample.
5703:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 105


5704:Drivers/CMSIS/DSP/Include/arm_math.h ****    * \par
5705:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Input sample <code>x</code> is in 12.20 format which contains 12 bits for table index and 20 b
5706:Drivers/CMSIS/DSP/Include/arm_math.h ****    * This function can support maximum of table size 2^12.
5707:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5708:Drivers/CMSIS/DSP/Include/arm_math.h ****   __STATIC_FORCEINLINE q7_t arm_linear_interp_q7(
5709:Drivers/CMSIS/DSP/Include/arm_math.h ****   q7_t * pYData,
5710:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t x,
5711:Drivers/CMSIS/DSP/Include/arm_math.h ****   uint32_t nValues)
5712:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
5713:Drivers/CMSIS/DSP/Include/arm_math.h ****     q31_t y;                                     /* output */
5714:Drivers/CMSIS/DSP/Include/arm_math.h ****     q7_t y0, y1;                                 /* Nearest output values */
5715:Drivers/CMSIS/DSP/Include/arm_math.h ****     q31_t fract;                                 /* fractional part */
5716:Drivers/CMSIS/DSP/Include/arm_math.h ****     uint32_t index;                              /* Index to read nearest output values */
5717:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5718:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Input is in 12.20 format */
5719:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* 12 bits for the table index */
5720:Drivers/CMSIS/DSP/Include/arm_math.h ****     /* Index value calculation */
5721:Drivers/CMSIS/DSP/Include/arm_math.h ****     if (x < 0)
5722:Drivers/CMSIS/DSP/Include/arm_math.h ****     {
5723:Drivers/CMSIS/DSP/Include/arm_math.h ****       return (pYData[0]);
5724:Drivers/CMSIS/DSP/Include/arm_math.h ****     }
5725:Drivers/CMSIS/DSP/Include/arm_math.h ****     index = (x >> 20) & 0xfff;
5726:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5727:Drivers/CMSIS/DSP/Include/arm_math.h ****     if (index >= (nValues - 1))
5728:Drivers/CMSIS/DSP/Include/arm_math.h ****     {
5729:Drivers/CMSIS/DSP/Include/arm_math.h ****       return (pYData[nValues - 1]);
5730:Drivers/CMSIS/DSP/Include/arm_math.h ****     }
5731:Drivers/CMSIS/DSP/Include/arm_math.h ****     else
5732:Drivers/CMSIS/DSP/Include/arm_math.h ****     {
5733:Drivers/CMSIS/DSP/Include/arm_math.h ****       /* 20 bits for the fractional part */
5734:Drivers/CMSIS/DSP/Include/arm_math.h ****       /* fract is in 12.20 format */
5735:Drivers/CMSIS/DSP/Include/arm_math.h ****       fract = (x & 0x000FFFFF);
5736:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5737:Drivers/CMSIS/DSP/Include/arm_math.h ****       /* Read two nearest output values from the index and are in 1.7(q7) format */
5738:Drivers/CMSIS/DSP/Include/arm_math.h ****       y0 = pYData[index];
5739:Drivers/CMSIS/DSP/Include/arm_math.h ****       y1 = pYData[index + 1];
5740:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5741:Drivers/CMSIS/DSP/Include/arm_math.h ****       /* Calculation of y0 * (1-fract ) and y is in 13.27(q27) format */
5742:Drivers/CMSIS/DSP/Include/arm_math.h ****       y = ((y0 * (0xFFFFF - fract)));
5743:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5744:Drivers/CMSIS/DSP/Include/arm_math.h ****       /* Calculation of y1 * fract + y0 * (1-fract) and y is in 13.27(q27) format */
5745:Drivers/CMSIS/DSP/Include/arm_math.h ****       y += (y1 * fract);
5746:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5747:Drivers/CMSIS/DSP/Include/arm_math.h ****       /* convert y to 1.7(q7) format */
5748:Drivers/CMSIS/DSP/Include/arm_math.h ****       return (q7_t) (y >> 20);
5749:Drivers/CMSIS/DSP/Include/arm_math.h ****      }
5750:Drivers/CMSIS/DSP/Include/arm_math.h ****   }
5751:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5752:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5753:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @} end of LinearInterpolate group
5754:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5755:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5756:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5757:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Fast approximation to the trigonometric sine function for floating-point data.
5758:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] x  input value in radians.
5759:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return  sin(x).
5760:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 106


5761:Drivers/CMSIS/DSP/Include/arm_math.h ****   float32_t arm_sin_f32(
5762:Drivers/CMSIS/DSP/Include/arm_math.h ****   float32_t x);
5763:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5764:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5765:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5766:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Fast approximation to the trigonometric sine function for Q31 data.
5767:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] x  Scaled input value in radians.
5768:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return  sin(x).
5769:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5770:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t arm_sin_q31(
5771:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t x);
5772:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5773:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5774:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5775:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Fast approximation to the trigonometric sine function for Q15 data.
5776:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] x  Scaled input value in radians.
5777:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return  sin(x).
5778:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5779:Drivers/CMSIS/DSP/Include/arm_math.h ****   q15_t arm_sin_q15(
5780:Drivers/CMSIS/DSP/Include/arm_math.h ****   q15_t x);
5781:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5782:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5783:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5784:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Fast approximation to the trigonometric cosine function for floating-point data.
5785:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] x  input value in radians.
5786:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return  cos(x).
5787:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5788:Drivers/CMSIS/DSP/Include/arm_math.h ****   float32_t arm_cos_f32(
5789:Drivers/CMSIS/DSP/Include/arm_math.h ****   float32_t x);
5790:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5791:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5792:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5793:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief Fast approximation to the trigonometric cosine function for Q31 data.
5794:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] x  Scaled input value in radians.
5795:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return  cos(x).
5796:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5797:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t arm_cos_q31(
5798:Drivers/CMSIS/DSP/Include/arm_math.h ****   q31_t x);
5799:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5800:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5801:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5802:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @brief  Fast approximation to the trigonometric cosine function for Q15 data.
5803:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @param[in] x  Scaled input value in radians.
5804:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @return  cos(x).
5805:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5806:Drivers/CMSIS/DSP/Include/arm_math.h ****   q15_t arm_cos_q15(
5807:Drivers/CMSIS/DSP/Include/arm_math.h ****   q15_t x);
5808:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5809:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5810:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5811:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @ingroup groupFastMath
5812:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5813:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5814:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5815:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5816:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @defgroup SQRT Square Root
5817:Drivers/CMSIS/DSP/Include/arm_math.h ****    *
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 107


5818:Drivers/CMSIS/DSP/Include/arm_math.h ****    * Computes the square root of a number.
5819:Drivers/CMSIS/DSP/Include/arm_math.h ****    * There are separate functions for Q15, Q31, and floating-point data types.
5820:Drivers/CMSIS/DSP/Include/arm_math.h ****    * The square root function is computed using the Newton-Raphson algorithm.
5821:Drivers/CMSIS/DSP/Include/arm_math.h ****    * This is an iterative algorithm of the form:
5822:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <pre>
5823:Drivers/CMSIS/DSP/Include/arm_math.h ****    *      x1 = x0 - f(x0)/f'(x0)
5824:Drivers/CMSIS/DSP/Include/arm_math.h ****    * </pre>
5825:Drivers/CMSIS/DSP/Include/arm_math.h ****    * where <code>x1</code> is the current estimate,
5826:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <code>x0</code> is the previous estimate, and
5827:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <code>f'(x0)</code> is the derivative of <code>f()</code> evaluated at <code>x0</code>.
5828:Drivers/CMSIS/DSP/Include/arm_math.h ****    * For the square root function, the algorithm reduces to:
5829:Drivers/CMSIS/DSP/Include/arm_math.h ****    * <pre>
5830:Drivers/CMSIS/DSP/Include/arm_math.h ****    *     x0 = in/2                         [initial guess]
5831:Drivers/CMSIS/DSP/Include/arm_math.h ****    *     x1 = 1/2 * ( x0 + in / x0)        [each iteration]
5832:Drivers/CMSIS/DSP/Include/arm_math.h ****    * </pre>
5833:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5834:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5835:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5836:Drivers/CMSIS/DSP/Include/arm_math.h ****   /**
5837:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @addtogroup SQRT
5838:Drivers/CMSIS/DSP/Include/arm_math.h ****    * @{
5839:Drivers/CMSIS/DSP/Include/arm_math.h ****    */
5840:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5841:Drivers/CMSIS/DSP/Include/arm_math.h **** /**
5842:Drivers/CMSIS/DSP/Include/arm_math.h ****   @brief         Floating-point square root function.
5843:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[in]     in    input value
5844:Drivers/CMSIS/DSP/Include/arm_math.h ****   @param[out]    pOut  square root of input value
5845:Drivers/CMSIS/DSP/Include/arm_math.h ****   @return        execution status
5846:Drivers/CMSIS/DSP/Include/arm_math.h ****                    - \ref ARM_MATH_SUCCESS        : input value is positive
5847:Drivers/CMSIS/DSP/Include/arm_math.h ****                    - \ref ARM_MATH_ARGUMENT_ERROR : input value is negative; *pOut is set to 0
5848:Drivers/CMSIS/DSP/Include/arm_math.h ****  */
5849:Drivers/CMSIS/DSP/Include/arm_math.h **** __STATIC_FORCEINLINE arm_status arm_sqrt_f32(
5850:Drivers/CMSIS/DSP/Include/arm_math.h ****   float32_t in,
5851:Drivers/CMSIS/DSP/Include/arm_math.h ****   float32_t * pOut)
5852:Drivers/CMSIS/DSP/Include/arm_math.h ****   {
5853:Drivers/CMSIS/DSP/Include/arm_math.h ****     if (in >= 0.0f)
5854:Drivers/CMSIS/DSP/Include/arm_math.h ****     {
5855:Drivers/CMSIS/DSP/Include/arm_math.h **** #if defined ( __CC_ARM )
5856:Drivers/CMSIS/DSP/Include/arm_math.h ****   #if defined __TARGET_FPU_VFP
5857:Drivers/CMSIS/DSP/Include/arm_math.h ****       *pOut = __sqrtf(in);
5858:Drivers/CMSIS/DSP/Include/arm_math.h ****   #else
5859:Drivers/CMSIS/DSP/Include/arm_math.h ****       *pOut = sqrtf(in);
5860:Drivers/CMSIS/DSP/Include/arm_math.h ****   #endif
5861:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5862:Drivers/CMSIS/DSP/Include/arm_math.h **** #elif defined ( __ICCARM__ )
5863:Drivers/CMSIS/DSP/Include/arm_math.h ****   #if defined __ARMVFP__
5864:Drivers/CMSIS/DSP/Include/arm_math.h ****       __ASM("VSQRT.F32 %0,%1" : "=t"(*pOut) : "t"(in));
5865:Drivers/CMSIS/DSP/Include/arm_math.h ****   #else
5866:Drivers/CMSIS/DSP/Include/arm_math.h ****       *pOut = sqrtf(in);
5867:Drivers/CMSIS/DSP/Include/arm_math.h ****   #endif
5868:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5869:Drivers/CMSIS/DSP/Include/arm_math.h **** #else
5870:Drivers/CMSIS/DSP/Include/arm_math.h ****       *pOut = sqrtf(in);
5871:Drivers/CMSIS/DSP/Include/arm_math.h **** #endif
5872:Drivers/CMSIS/DSP/Include/arm_math.h **** 
5873:Drivers/CMSIS/DSP/Include/arm_math.h ****       return (ARM_MATH_SUCCESS);
5874:Drivers/CMSIS/DSP/Include/arm_math.h ****     }
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 108


5875:Drivers/CMSIS/DSP/Include/arm_math.h ****     else
5876:Drivers/CMSIS/DSP/Include/arm_math.h ****     {
5877:Drivers/CMSIS/DSP/Include/arm_math.h ****       *pOut = 0.0f;
  57              		.loc 2 5877 7 is_stmt 1 view .LVU7
  58              		.loc 2 5877 13 is_stmt 0 view .LVU8
  59 0008 0023     		movs	r3, #0
  60 000a 3360     		str	r3, [r6]	@ float
  61              	.LVL3:
5878:Drivers/CMSIS/DSP/Include/arm_math.h ****       return (ARM_MATH_ARGUMENT_ERROR);
  62              		.loc 2 5878 7 is_stmt 1 view .LVU9
  63              	.L5:
  64              		.loc 2 5878 7 is_stmt 0 view .LVU10
  65              	.LBE5:
  66              	.LBE4:
 171:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   {
 172:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     /* C[0] = sqrt(A[0] * A[0] + A[1] * A[1]) */
 173:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 174:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     real = *pSrc++;
 175:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     imag = *pSrc++;
 176:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 177:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     /* store result in destination buffer. */
 178:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     arm_sqrt_f32((real * real) + (imag * imag), pDst++);
 179:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 180:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     /* Decrement loop counter */
 181:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     blkCnt--;
  67              		.loc 1 181 5 is_stmt 1 view .LVU11
  68              		.loc 1 181 11 is_stmt 0 view .LVU12
  69 000c 013D     		subs	r5, r5, #1
  70              	.LVL4:
 178:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  71              		.loc 1 178 5 view .LVU13
  72 000e 3E46     		mov	r6, r7
 175:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  73              		.loc 1 175 17 view .LVU14
  74 0010 2046     		mov	r0, r4
  75              	.LVL5:
  76              	.L2:
 170:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   {
  77              		.loc 1 170 17 is_stmt 1 view .LVU15
  78 0012 B5B1     		cbz	r5, .L10
 174:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     imag = *pSrc++;
  79              		.loc 1 174 5 view .LVU16
  80              	.LVL6:
 174:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****     imag = *pSrc++;
  81              		.loc 1 174 10 is_stmt 0 view .LVU17
  82 0014 0446     		mov	r4, r0
  83 0016 0834     		adds	r4, r4, #8
  84 0018 90ED000A 		vldr.32	s0, [r0]
  85              	.LVL7:
 175:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  86              		.loc 1 175 5 is_stmt 1 view .LVU18
 175:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  87              		.loc 1 175 10 is_stmt 0 view .LVU19
  88 001c D0ED017A 		vldr.32	s15, [r0, #4]
  89              	.LVL8:
 178:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  90              		.loc 1 178 5 is_stmt 1 view .LVU20
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 109


 178:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  91              		.loc 1 178 24 is_stmt 0 view .LVU21
  92 0020 20EE000A 		vmul.f32	s0, s0, s0
  93              	.LVL9:
 178:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  94              		.loc 1 178 40 view .LVU22
  95 0024 67EEA77A 		vmul.f32	s15, s15, s15
  96              	.LVL10:
 178:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
  97              		.loc 1 178 5 view .LVU23
  98 0028 30EE270A 		vadd.f32	s0, s0, s15
  99 002c 371D     		adds	r7, r6, #4
 100              	.LVL11:
 101              	.LBB7:
 102              	.LBI4:
5849:Drivers/CMSIS/DSP/Include/arm_math.h ****   float32_t in,
 103              		.loc 2 5849 33 is_stmt 1 view .LVU24
 104              	.LBB6:
5853:Drivers/CMSIS/DSP/Include/arm_math.h ****     {
 105              		.loc 2 5853 5 view .LVU25
5853:Drivers/CMSIS/DSP/Include/arm_math.h ****     {
 106              		.loc 2 5853 8 is_stmt 0 view .LVU26
 107 002e B5EEC00A 		vcmpe.f32	s0, #0
 108 0032 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 109 0036 E7DB     		blt	.L8
5870:Drivers/CMSIS/DSP/Include/arm_math.h **** #endif
 110              		.loc 2 5870 7 is_stmt 1 view .LVU27
5870:Drivers/CMSIS/DSP/Include/arm_math.h **** #endif
 111              		.loc 2 5870 15 is_stmt 0 view .LVU28
 112 0038 FFF7FEFF 		bl	sqrtf
 113              	.LVL12:
5870:Drivers/CMSIS/DSP/Include/arm_math.h **** #endif
 114              		.loc 2 5870 13 discriminator 1 view .LVU29
 115 003c 86ED000A 		vstr.32	s0, [r6]
5873:Drivers/CMSIS/DSP/Include/arm_math.h ****     }
 116              		.loc 2 5873 7 is_stmt 1 view .LVU30
5873:Drivers/CMSIS/DSP/Include/arm_math.h ****     }
 117              		.loc 2 5873 14 is_stmt 0 view .LVU31
 118 0040 E4E7     		b	.L5
 119              	.LVL13:
 120              	.L10:
5873:Drivers/CMSIS/DSP/Include/arm_math.h ****     }
 121              		.loc 2 5873 14 view .LVU32
 122              	.LBE6:
 123              	.LBE7:
 182:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c ****   }
 183:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** 
 184:Drivers/CMSIS/DSP/Source/ComplexMathFunctions/arm_cmplx_mag_f32.c **** }
 124              		.loc 1 184 1 view .LVU33
 125 0042 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 126              		.loc 1 184 1 view .LVU34
 127              		.cfi_endproc
 128              	.LFE145:
 130              		.text
 131              	.Letext0:
 132              		.file 3 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 133              		.file 4 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 110


 134              		.file 5 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
ARM GAS  C:\usertemp\ccIaK9yf.s 			page 111


DEFINED SYMBOLS
                            *ABS*:00000000 arm_cmplx_mag_f32.c
C:\usertemp\ccIaK9yf.s:20     .text.arm_cmplx_mag_f32:00000000 $t
C:\usertemp\ccIaK9yf.s:26     .text.arm_cmplx_mag_f32:00000000 arm_cmplx_mag_f32

UNDEFINED SYMBOLS
sqrtf
