ARM GAS  C:\usertemp\ccuvhm44.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_draw_sw_letter.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "lvgl/src/draw/sw/lv_draw_sw_letter.c"
  19              		.section	.text.draw_letter_normal,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	draw_letter_normal:
  26              	.LVL0:
  27              	.LFB157:
   1:lvgl/src/draw/sw/lv_draw_sw_letter.c **** /**
   2:lvgl/src/draw/sw/lv_draw_sw_letter.c ****  * @file lv_draw_sw_letter.c
   3:lvgl/src/draw/sw/lv_draw_sw_letter.c ****  *
   4:lvgl/src/draw/sw/lv_draw_sw_letter.c ****  */
   5:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
   6:lvgl/src/draw/sw/lv_draw_sw_letter.c **** /*********************
   7:lvgl/src/draw/sw/lv_draw_sw_letter.c ****  *      INCLUDES
   8:lvgl/src/draw/sw/lv_draw_sw_letter.c ****  *********************/
   9:lvgl/src/draw/sw/lv_draw_sw_letter.c **** #include "lv_draw_sw.h"
  10:lvgl/src/draw/sw/lv_draw_sw_letter.c **** #include "../../hal/lv_hal_disp.h"
  11:lvgl/src/draw/sw/lv_draw_sw_letter.c **** #include "../../misc/lv_math.h"
  12:lvgl/src/draw/sw/lv_draw_sw_letter.c **** #include "../../misc/lv_assert.h"
  13:lvgl/src/draw/sw/lv_draw_sw_letter.c **** #include "../../misc/lv_area.h"
  14:lvgl/src/draw/sw/lv_draw_sw_letter.c **** #include "../../misc/lv_style.h"
  15:lvgl/src/draw/sw/lv_draw_sw_letter.c **** #include "../../font/lv_font.h"
  16:lvgl/src/draw/sw/lv_draw_sw_letter.c **** #include "../../core/lv_refr.h"
  17:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
  18:lvgl/src/draw/sw/lv_draw_sw_letter.c **** /*********************
  19:lvgl/src/draw/sw/lv_draw_sw_letter.c ****  *      DEFINES
  20:lvgl/src/draw/sw/lv_draw_sw_letter.c ****  *********************/
  21:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
  22:lvgl/src/draw/sw/lv_draw_sw_letter.c **** /**********************
  23:lvgl/src/draw/sw/lv_draw_sw_letter.c ****  *      TYPEDEFS
  24:lvgl/src/draw/sw/lv_draw_sw_letter.c ****  **********************/
  25:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
  26:lvgl/src/draw/sw/lv_draw_sw_letter.c **** /**********************
  27:lvgl/src/draw/sw/lv_draw_sw_letter.c ****  *  STATIC PROTOTYPES
  28:lvgl/src/draw/sw/lv_draw_sw_letter.c ****  **********************/
  29:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
  30:lvgl/src/draw/sw/lv_draw_sw_letter.c **** LV_ATTRIBUTE_FAST_MEM static void draw_letter_normal(lv_draw_ctx_t * draw_ctx, const lv_draw_label_
  31:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                                                      const lv_point_t * pos, lv_font_glyph_dsc_t * 
ARM GAS  C:\usertemp\ccuvhm44.s 			page 2


  32:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
  33:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
  34:lvgl/src/draw/sw/lv_draw_sw_letter.c **** #if LV_DRAW_COMPLEX && LV_USE_FONT_SUBPX
  35:lvgl/src/draw/sw/lv_draw_sw_letter.c **** static void draw_letter_subpx(lv_draw_ctx_t * draw_ctx, const lv_draw_label_dsc_t * dsc, const lv_p
  36:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                               lv_font_glyph_dsc_t * g, const uint8_t * map_p);
  37:lvgl/src/draw/sw/lv_draw_sw_letter.c **** #endif /*LV_DRAW_COMPLEX && LV_USE_FONT_SUBPX*/
  38:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
  39:lvgl/src/draw/sw/lv_draw_sw_letter.c **** /**********************
  40:lvgl/src/draw/sw/lv_draw_sw_letter.c ****  *  STATIC VARIABLES
  41:lvgl/src/draw/sw/lv_draw_sw_letter.c ****  **********************/
  42:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
  43:lvgl/src/draw/sw/lv_draw_sw_letter.c **** /**********************
  44:lvgl/src/draw/sw/lv_draw_sw_letter.c ****  *  GLOBAL VARIABLES
  45:lvgl/src/draw/sw/lv_draw_sw_letter.c ****  **********************/
  46:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
  47:lvgl/src/draw/sw/lv_draw_sw_letter.c **** const uint8_t _lv_bpp1_opa_table[2]  = {0, 255};          /*Opacity mapping with bpp = 1 (Just for 
  48:lvgl/src/draw/sw/lv_draw_sw_letter.c **** const uint8_t _lv_bpp2_opa_table[4]  = {0, 85, 170, 255}; /*Opacity mapping with bpp = 2*/
  49:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
  50:lvgl/src/draw/sw/lv_draw_sw_letter.c **** const uint8_t _lv_bpp3_opa_table[8]  = {0, 36,  73, 109,   /*Opacity mapping with bpp = 3*/
  51:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                                         146, 182,  219, 255
  52:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                                        };
  53:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
  54:lvgl/src/draw/sw/lv_draw_sw_letter.c **** const uint8_t _lv_bpp4_opa_table[16] = {0,  17, 34,  51,  /*Opacity mapping with bpp = 4*/
  55:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                                         68, 85, 102, 119,
  56:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                                         136, 153, 170, 187,
  57:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                                         204, 221, 238, 255
  58:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                                        };
  59:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
  60:lvgl/src/draw/sw/lv_draw_sw_letter.c **** const uint8_t _lv_bpp8_opa_table[256] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  61:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                                          16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30
  62:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                                          32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46
  63:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                                          48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62
  64:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                                          64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78
  65:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                                          80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94
  66:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                                          96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 10
  67:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                                          112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123
  68:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                                          128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139
  69:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                                          144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155
  70:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                                          160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171
  71:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                                          176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187
  72:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                                          192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203
  73:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                                          208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219
  74:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                                          224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235
  75:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                                          240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251
  76:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                                         };
  77:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
  78:lvgl/src/draw/sw/lv_draw_sw_letter.c **** /**********************
  79:lvgl/src/draw/sw/lv_draw_sw_letter.c ****  *      MACROS
  80:lvgl/src/draw/sw/lv_draw_sw_letter.c ****  **********************/
  81:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
  82:lvgl/src/draw/sw/lv_draw_sw_letter.c **** /**********************
  83:lvgl/src/draw/sw/lv_draw_sw_letter.c ****  *   GLOBAL FUNCTIONS
  84:lvgl/src/draw/sw/lv_draw_sw_letter.c ****  **********************/
  85:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
  86:lvgl/src/draw/sw/lv_draw_sw_letter.c **** /**
  87:lvgl/src/draw/sw/lv_draw_sw_letter.c ****  * Draw a letter in the Virtual Display Buffer
  88:lvgl/src/draw/sw/lv_draw_sw_letter.c ****  * @param pos_p left-top coordinate of the latter
ARM GAS  C:\usertemp\ccuvhm44.s 			page 3


  89:lvgl/src/draw/sw/lv_draw_sw_letter.c ****  * @param mask_p the letter will be drawn only on this area  (truncated to draw_buf area)
  90:lvgl/src/draw/sw/lv_draw_sw_letter.c ****  * @param font_p pointer to font
  91:lvgl/src/draw/sw/lv_draw_sw_letter.c ****  * @param letter a letter to draw
  92:lvgl/src/draw/sw/lv_draw_sw_letter.c ****  * @param color color of letter
  93:lvgl/src/draw/sw/lv_draw_sw_letter.c ****  * @param opa opacity of letter (0..255)
  94:lvgl/src/draw/sw/lv_draw_sw_letter.c ****  */
  95:lvgl/src/draw/sw/lv_draw_sw_letter.c **** void lv_draw_sw_letter(lv_draw_ctx_t * draw_ctx, const lv_draw_label_dsc_t * dsc,  const lv_point_t
  96:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                        uint32_t letter)
  97:lvgl/src/draw/sw/lv_draw_sw_letter.c **** {
  98:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     lv_font_glyph_dsc_t g;
  99:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     bool g_ret = lv_font_get_glyph_dsc(dsc->font, &g, letter, '\0');
 100:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     if(g_ret == false)  {
 101:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         /*Add warning if the dsc is not found
 102:lvgl/src/draw/sw/lv_draw_sw_letter.c ****          *but do not print warning for non printable ASCII chars (e.g. '\n')*/
 103:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         if(letter >= 0x20 &&
 104:lvgl/src/draw/sw/lv_draw_sw_letter.c ****            letter != 0xf8ff && /*LV_SYMBOL_DUMMY*/
 105:lvgl/src/draw/sw/lv_draw_sw_letter.c ****            letter != 0x200c) { /*ZERO WIDTH NON-JOINER*/
 106:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             LV_LOG_WARN("lv_draw_letter: glyph dsc. not found for U+%X", (unsigned int)letter);
 107:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         }
 108:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         return;
 109:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     }
 110:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 111:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     /*Don't draw anything if the character is empty. E.g. space*/
 112:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     if((g.box_h == 0) || (g.box_w == 0)) return;
 113:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 114:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     lv_point_t gpos;
 115:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     gpos.x = pos_p->x + g.ofs_x;
 116:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     gpos.y = pos_p->y + (dsc->font->line_height - dsc->font->base_line) - g.box_h - g.ofs_y;
 117:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 118:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     /*If the letter is completely out of mask don't draw it*/
 119:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     if(gpos.x + g.box_w < draw_ctx->clip_area->x1 ||
 120:lvgl/src/draw/sw/lv_draw_sw_letter.c ****        gpos.x > draw_ctx->clip_area->x2 ||
 121:lvgl/src/draw/sw/lv_draw_sw_letter.c ****        gpos.y + g.box_h < draw_ctx->clip_area->y1 ||
 122:lvgl/src/draw/sw/lv_draw_sw_letter.c ****        gpos.y > draw_ctx->clip_area->y2)  {
 123:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         return;
 124:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     }
 125:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 126:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     const uint8_t * map_p = lv_font_get_glyph_bitmap(g.resolved_font, letter);
 127:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     if(map_p == NULL) {
 128:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         LV_LOG_WARN("lv_draw_letter: character's bitmap not found");
 129:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         return;
 130:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     }
 131:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 132:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     if(g.resolved_font->subpx) {
 133:lvgl/src/draw/sw/lv_draw_sw_letter.c **** #if LV_DRAW_COMPLEX && LV_USE_FONT_SUBPX
 134:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         draw_letter_subpx(draw_ctx, dsc, &gpos, &g, map_p);
 135:lvgl/src/draw/sw/lv_draw_sw_letter.c **** #else
 136:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         LV_LOG_WARN("Can't draw sub-pixel rendered letter because LV_USE_FONT_SUBPX == 0 in lv_conf
 137:lvgl/src/draw/sw/lv_draw_sw_letter.c **** #endif
 138:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     }
 139:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     else {
 140:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         draw_letter_normal(draw_ctx, dsc, &gpos, &g, map_p);
 141:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     }
 142:lvgl/src/draw/sw/lv_draw_sw_letter.c **** }
 143:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 144:lvgl/src/draw/sw/lv_draw_sw_letter.c **** /**********************
 145:lvgl/src/draw/sw/lv_draw_sw_letter.c ****  *   STATIC FUNCTIONS
ARM GAS  C:\usertemp\ccuvhm44.s 			page 4


 146:lvgl/src/draw/sw/lv_draw_sw_letter.c ****  **********************/
 147:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 148:lvgl/src/draw/sw/lv_draw_sw_letter.c **** LV_ATTRIBUTE_FAST_MEM static void draw_letter_normal(lv_draw_ctx_t * draw_ctx, const lv_draw_label_
 149:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                                                      const lv_point_t * pos, lv_font_glyph_dsc_t * 
 150:lvgl/src/draw/sw/lv_draw_sw_letter.c **** {
  28              		.loc 1 150 1 view -0
  29              		.cfi_startproc
  30              		@ args = 4, pretend = 0, frame = 88
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 150 1 is_stmt 0 view .LVU1
  33 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 36
  36              		.cfi_offset 4, -36
  37              		.cfi_offset 5, -32
  38              		.cfi_offset 6, -28
  39              		.cfi_offset 7, -24
  40              		.cfi_offset 8, -20
  41              		.cfi_offset 9, -16
  42              		.cfi_offset 10, -12
  43              		.cfi_offset 11, -8
  44              		.cfi_offset 14, -4
  45 0004 97B0     		sub	sp, sp, #92
  46              	.LCFI1:
  47              		.cfi_def_cfa_offset 128
  48 0006 0790     		str	r0, [sp, #28]
  49 0008 0D46     		mov	r5, r1
  50 000a 0592     		str	r2, [sp, #20]
 151:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 152:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     const uint8_t * bpp_opa_table_p;
  51              		.loc 1 152 5 is_stmt 1 view .LVU2
 153:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     uint32_t bitmask_init;
  52              		.loc 1 153 5 view .LVU3
 154:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     uint32_t bitmask;
  53              		.loc 1 154 5 view .LVU4
 155:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     uint32_t bpp = g->bpp;
  54              		.loc 1 155 5 view .LVU5
  55              		.loc 1 155 21 is_stmt 0 view .LVU6
  56 000c 93F80E90 		ldrb	r9, [r3, #14]	@ zero_extendqisi2
  57 0010 09F00F09 		and	r9, r9, #15
  58              	.LVL1:
 156:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     lv_opa_t opa = dsc->opa;
  59              		.loc 1 156 5 is_stmt 1 view .LVU7
  60              		.loc 1 156 14 is_stmt 0 view .LVU8
  61 0014 8C7E     		ldrb	r4, [r1, #26]	@ zero_extendqisi2
  62              	.LVL2:
 157:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     uint32_t shades;
  63              		.loc 1 157 5 is_stmt 1 view .LVU9
 158:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     if(bpp == 3) bpp = 4;
  64              		.loc 1 158 5 view .LVU10
  65              		.loc 1 158 7 is_stmt 0 view .LVU11
  66 0016 B9F1030F 		cmp	r9, #3
  67 001a 21D0     		beq	.L31
 159:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 160:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     switch(bpp) {
  68              		.loc 1 160 5 is_stmt 1 view .LVU12
  69 001c 09F1FF32 		add	r2, r9, #-1
ARM GAS  C:\usertemp\ccuvhm44.s 			page 5


  70              	.LVL3:
  71              		.loc 1 160 5 is_stmt 0 view .LVU13
  72 0020 072A     		cmp	r2, #7
  73 0022 00F25881 		bhi	.L1
  74 0026 DFE812F0 		tbh	[pc, r2, lsl #1]
  75              	.LVL4:
  76              	.L5:
  77 002a 0800     		.2byte	(.L7-.L5)/2
  78 002c 2A00     		.2byte	(.L32-.L5)/2
  79 002e 5601     		.2byte	(.L1-.L5)/2
  80 0030 0E00     		.2byte	(.L6-.L5)/2
  81 0032 5601     		.2byte	(.L1-.L5)/2
  82 0034 5601     		.2byte	(.L1-.L5)/2
  83 0036 5601     		.2byte	(.L1-.L5)/2
  84 0038 1400     		.2byte	(.L4-.L5)/2
  85              		.p2align 1
  86              	.L7:
  87              		.loc 1 160 5 view .LVU14
  88 003a 0226     		movs	r6, #2
  89 003c 8022     		movs	r2, #128
  90 003e 0092     		str	r2, [sp]
  91 0040 DFF8BCB2 		ldr	fp, .L47+12
  92 0044 13E0     		b	.L2
  93              	.L6:
 161:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         case 1:
 162:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             bpp_opa_table_p = _lv_bpp1_opa_table;
 163:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             bitmask_init  = 0x80;
 164:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             shades = 2;
 165:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             break;
 166:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         case 2:
 167:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             bpp_opa_table_p = _lv_bpp2_opa_table;
 168:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             bitmask_init  = 0xC0;
 169:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             shades = 4;
 170:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             break;
 171:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         case 4:
 172:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             bpp_opa_table_p = _lv_bpp4_opa_table;
 173:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             bitmask_init  = 0xF0;
 174:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             shades = 16;
  94              		.loc 1 174 20 view .LVU15
  95 0046 1026     		movs	r6, #16
 173:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             shades = 16;
  96              		.loc 1 173 27 view .LVU16
  97 0048 F022     		movs	r2, #240
  98 004a 0092     		str	r2, [sp]
 172:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             bitmask_init  = 0xF0;
  99              		.loc 1 172 29 view .LVU17
 100 004c DFF8B4B2 		ldr	fp, .L47+16
 101 0050 0DE0     		b	.L2
 102              	.L4:
 175:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             break;
 176:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         case 8:
 177:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             bpp_opa_table_p = _lv_bpp8_opa_table;
 103              		.loc 1 177 13 is_stmt 1 view .LVU18
 104              	.LVL5:
 178:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             bitmask_init  = 0xFF;
 105              		.loc 1 178 13 view .LVU19
 179:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             shades = 256;
ARM GAS  C:\usertemp\ccuvhm44.s 			page 6


 106              		.loc 1 179 13 view .LVU20
 180:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             break;       /*No opa table, pixel value will be used directly*/
 107              		.loc 1 180 13 view .LVU21
 179:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             shades = 256;
 108              		.loc 1 179 20 is_stmt 0 view .LVU22
 109 0052 4FF48076 		mov	r6, #256
 178:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             bitmask_init  = 0xFF;
 110              		.loc 1 178 27 view .LVU23
 111 0056 FF22     		movs	r2, #255
 112 0058 0092     		str	r2, [sp]
 177:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             bitmask_init  = 0xFF;
 113              		.loc 1 177 29 view .LVU24
 114 005a DFF8ACB2 		ldr	fp, .L47+20
 115              		.loc 1 180 13 view .LVU25
 116 005e 06E0     		b	.L2
 117              	.LVL6:
 118              	.L31:
 158:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 119              		.loc 1 158 22 discriminator 1 view .LVU26
 120 0060 4FF00409 		mov	r9, #4
 121              	.LVL7:
 174:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             break;
 122              		.loc 1 174 20 view .LVU27
 123 0064 1026     		movs	r6, #16
 173:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             shades = 16;
 124              		.loc 1 173 27 view .LVU28
 125 0066 F022     		movs	r2, #240
 126              	.LVL8:
 173:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             shades = 16;
 127              		.loc 1 173 27 view .LVU29
 128 0068 0092     		str	r2, [sp]
 172:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             bitmask_init  = 0xF0;
 129              		.loc 1 172 29 view .LVU30
 130 006a DFF898B2 		ldr	fp, .L47+16
 131              	.LVL9:
 132              	.L2:
 181:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         default:
 182:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             LV_LOG_WARN("lv_draw_letter: invalid bpp");
 183:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             return; /*Invalid bpp. Can't render the letter*/
 184:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     }
 185:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 186:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     static lv_opa_t opa_table[256];
 133              		.loc 1 186 5 is_stmt 1 view .LVU31
 187:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     static lv_opa_t prev_opa = LV_OPA_TRANSP;
 134              		.loc 1 187 5 view .LVU32
 188:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     static uint32_t prev_bpp = 0;
 135              		.loc 1 188 5 view .LVU33
 189:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     if(opa < LV_OPA_MAX) {
 136              		.loc 1 189 5 view .LVU34
 137              		.loc 1 189 7 is_stmt 0 view .LVU35
 138 006e FC2C     		cmp	r4, #252
 139 0070 26D8     		bhi	.L8
 190:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         if(prev_opa != opa || prev_bpp != bpp) {
 140              		.loc 1 190 9 is_stmt 1 view .LVU36
 141              		.loc 1 190 21 is_stmt 0 view .LVU37
 142 0072 A04A     		ldr	r2, .L47
 143 0074 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  C:\usertemp\ccuvhm44.s 			page 7


 144              		.loc 1 190 11 view .LVU38
 145 0076 A242     		cmp	r2, r4
 146 0078 07D0     		beq	.L42
 147 007a 0021     		movs	r1, #0
 148 007c 0FE0     		b	.L12
 149              	.LVL10:
 150              	.L32:
 169:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             break;
 151              		.loc 1 169 20 view .LVU39
 152 007e 0426     		movs	r6, #4
 168:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             shades = 4;
 153              		.loc 1 168 27 view .LVU40
 154 0080 C022     		movs	r2, #192
 155 0082 0092     		str	r2, [sp]
 167:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             bitmask_init  = 0xC0;
 156              		.loc 1 167 29 view .LVU41
 157 0084 DFF884B2 		ldr	fp, .L47+24
 158 0088 F1E7     		b	.L2
 159              	.LVL11:
 160              	.L42:
 161              		.loc 1 190 40 discriminator 1 view .LVU42
 162 008a 9B4A     		ldr	r2, .L47+4
 163 008c 1268     		ldr	r2, [r2]
 164              		.loc 1 190 28 discriminator 1 view .LVU43
 165 008e 4A45     		cmp	r2, r9
 166 0090 0FD0     		beq	.L10
 167 0092 0021     		movs	r1, #0
 168 0094 03E0     		b	.L12
 169              	.LVL12:
 170              	.L35:
 171              	.LBB8:
 191:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             uint32_t i;
 192:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             for(i = 0; i < shades; i++) {
 193:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                 opa_table[i] = bpp_opa_table_p[i] == LV_OPA_COVER ? opa : ((bpp_opa_table_p[i] * op
 172              		.loc 1 193 30 discriminator 2 view .LVU44
 173 0096 2246     		mov	r2, r4
 174              	.L11:
 175              		.loc 1 193 30 discriminator 4 view .LVU45
 176 0098 9848     		ldr	r0, .L47+8
 177 009a 4254     		strb	r2, [r0, r1]
 192:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                 opa_table[i] = bpp_opa_table_p[i] == LV_OPA_COVER ? opa : ((bpp_opa_table_p[i] * op
 178              		.loc 1 192 37 is_stmt 1 discriminator 2 view .LVU46
 179 009c 0131     		adds	r1, r1, #1
 180              	.LVL13:
 181              	.L12:
 192:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                 opa_table[i] = bpp_opa_table_p[i] == LV_OPA_COVER ? opa : ((bpp_opa_table_p[i] * op
 182              		.loc 1 192 26 discriminator 1 view .LVU47
 183 009e 8E42     		cmp	r6, r1
 184 00a0 07D9     		bls	.L10
 185              		.loc 1 193 17 view .LVU48
 186              		.loc 1 193 47 is_stmt 0 view .LVU49
 187 00a2 1BF80120 		ldrb	r2, [fp, r1]	@ zero_extendqisi2
 188              		.loc 1 193 30 view .LVU50
 189 00a6 FF2A     		cmp	r2, #255
 190 00a8 F5D0     		beq	.L35
 191              		.loc 1 193 96 discriminator 1 view .LVU51
 192 00aa 04FB02F2 		mul	r2, r4, r2
ARM GAS  C:\usertemp\ccuvhm44.s 			page 8


 193              		.loc 1 193 30 discriminator 1 view .LVU52
 194 00ae 120A     		lsrs	r2, r2, #8
 195 00b0 F2E7     		b	.L11
 196              	.LVL14:
 197              	.L10:
 198              		.loc 1 193 30 discriminator 1 view .LVU53
 199              	.LBE8:
 194:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             }
 195:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         }
 196:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         bpp_opa_table_p = opa_table;
 200              		.loc 1 196 9 is_stmt 1 view .LVU54
 197:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         prev_opa = opa;
 201              		.loc 1 197 9 view .LVU55
 202              		.loc 1 197 18 is_stmt 0 view .LVU56
 203 00b2 904A     		ldr	r2, .L47
 204 00b4 1470     		strb	r4, [r2]
 198:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         prev_bpp = bpp;
 205              		.loc 1 198 9 is_stmt 1 view .LVU57
 206              		.loc 1 198 18 is_stmt 0 view .LVU58
 207 00b6 904A     		ldr	r2, .L47+4
 208 00b8 C2F80090 		str	r9, [r2]
 196:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         prev_opa = opa;
 209              		.loc 1 196 25 view .LVU59
 210 00bc DFF83CB2 		ldr	fp, .L47+8
 211              	.LVL15:
 212              	.L8:
 199:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     }
 200:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 201:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     int32_t col, row;
 213              		.loc 1 201 5 is_stmt 1 view .LVU60
 202:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     int32_t box_w = g->box_w;
 214              		.loc 1 202 5 view .LVU61
 215              		.loc 1 202 22 is_stmt 0 view .LVU62
 216 00c0 DA88     		ldrh	r2, [r3, #6]
 217 00c2 0692     		str	r2, [sp, #24]
 218              	.LVL16:
 203:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     int32_t box_h = g->box_h;
 219              		.loc 1 203 5 is_stmt 1 view .LVU63
 220              		.loc 1 203 22 is_stmt 0 view .LVU64
 221 00c4 1F89     		ldrh	r7, [r3, #8]
 222              	.LVL17:
 204:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     int32_t width_bit = box_w * bpp; /*Letter width in bits*/
 223              		.loc 1 204 5 is_stmt 1 view .LVU65
 224              		.loc 1 204 31 is_stmt 0 view .LVU66
 225 00c6 09FB02F1 		mul	r1, r9, r2
 226              	.LVL18:
 205:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 206:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     /*Calculate the col/row start/end on the map*/
 207:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     int32_t col_start = pos->x >= draw_ctx->clip_area->x1 ? 0 : draw_ctx->clip_area->x1 - pos->x;
 227              		.loc 1 207 5 is_stmt 1 view .LVU67
 228              		.loc 1 207 28 is_stmt 0 view .LVU68
 229 00ca 059B     		ldr	r3, [sp, #20]
 230              	.LVL19:
 231              		.loc 1 207 28 view .LVU69
 232 00cc B3F90000 		ldrsh	r0, [r3]
 233              		.loc 1 207 43 view .LVU70
 234 00d0 079B     		ldr	r3, [sp, #28]
ARM GAS  C:\usertemp\ccuvhm44.s 			page 9


 235 00d2 9B68     		ldr	r3, [r3, #8]
 236              		.loc 1 207 54 view .LVU71
 237 00d4 B3F90020 		ldrsh	r2, [r3]
 238              	.LVL20:
 239              		.loc 1 207 63 view .LVU72
 240 00d8 9042     		cmp	r0, r2
 241 00da 02DA     		bge	.L36
 242              		.loc 1 207 63 discriminator 1 view .LVU73
 243 00dc 121A     		subs	r2, r2, r0
 244 00de 0292     		str	r2, [sp, #8]
 245 00e0 01E0     		b	.L14
 246              	.L36:
 247              		.loc 1 207 63 discriminator 2 view .LVU74
 248 00e2 0022     		movs	r2, #0
 249 00e4 0292     		str	r2, [sp, #8]
 250              	.L14:
 251              	.LVL21:
 208:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     int32_t col_end   = pos->x + box_w <= draw_ctx->clip_area->x2 ? box_w : draw_ctx->clip_area->x2
 252              		.loc 1 208 5 is_stmt 1 view .LVU75
 253              		.loc 1 208 32 is_stmt 0 view .LVU76
 254 00e6 069A     		ldr	r2, [sp, #24]
 255 00e8 8218     		adds	r2, r0, r2
 256              		.loc 1 208 62 view .LVU77
 257 00ea B3F90440 		ldrsh	r4, [r3, #4]
 258              	.LVL22:
 259              		.loc 1 208 75 view .LVU78
 260 00ee A242     		cmp	r2, r4
 261 00f0 03DD     		ble	.L37
 262              		.loc 1 208 101 discriminator 1 view .LVU79
 263 00f2 241A     		subs	r4, r4, r0
 264              		.loc 1 208 75 discriminator 1 view .LVU80
 265 00f4 04F10108 		add	r8, r4, #1
 266 00f8 01E0     		b	.L15
 267              	.L37:
 268              		.loc 1 208 75 discriminator 2 view .LVU81
 269 00fa DDF81880 		ldr	r8, [sp, #24]
 270              	.L15:
 271              	.LVL23:
 209:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     int32_t row_start = pos->y >= draw_ctx->clip_area->y1 ? 0 : draw_ctx->clip_area->y1 - pos->y;
 272              		.loc 1 209 5 is_stmt 1 view .LVU82
 273              		.loc 1 209 28 is_stmt 0 view .LVU83
 274 00fe 059A     		ldr	r2, [sp, #20]
 275 0100 B2F90200 		ldrsh	r0, [r2, #2]
 276              		.loc 1 209 54 view .LVU84
 277 0104 B3F90220 		ldrsh	r2, [r3, #2]
 278              		.loc 1 209 63 view .LVU85
 279 0108 9042     		cmp	r0, r2
 280 010a 02DA     		bge	.L38
 281              		.loc 1 209 63 discriminator 1 view .LVU86
 282 010c 121A     		subs	r2, r2, r0
 283 010e 0192     		str	r2, [sp, #4]
 284 0110 01E0     		b	.L16
 285              	.L38:
 286              		.loc 1 209 63 discriminator 2 view .LVU87
 287 0112 0022     		movs	r2, #0
 288 0114 0192     		str	r2, [sp, #4]
 289              	.L16:
ARM GAS  C:\usertemp\ccuvhm44.s 			page 10


 290              	.LVL24:
 210:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     int32_t row_end   = pos->y + box_h <= draw_ctx->clip_area->y2 ? box_h : draw_ctx->clip_area->y2
 291              		.loc 1 210 5 is_stmt 1 view .LVU88
 292              		.loc 1 210 32 is_stmt 0 view .LVU89
 293 0116 C219     		adds	r2, r0, r7
 294              		.loc 1 210 62 view .LVU90
 295 0118 B3F90640 		ldrsh	r4, [r3, #6]
 296              		.loc 1 210 75 view .LVU91
 297 011c A242     		cmp	r2, r4
 298 011e 03DD     		ble	.L39
 299              		.loc 1 210 101 discriminator 1 view .LVU92
 300 0120 241A     		subs	r4, r4, r0
 301              		.loc 1 210 75 discriminator 1 view .LVU93
 302 0122 631C     		adds	r3, r4, #1
 303 0124 0393     		str	r3, [sp, #12]
 304 0126 00E0     		b	.L17
 305              	.L39:
 306              		.loc 1 210 75 discriminator 2 view .LVU94
 307 0128 0397     		str	r7, [sp, #12]
 308              	.L17:
 309              	.LVL25:
 211:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 212:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     /*Move on the map too*/
 213:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     uint32_t bit_ofs = (row_start * width_bit) + (col_start * bpp);
 310              		.loc 1 213 5 is_stmt 1 view .LVU95
 311              		.loc 1 213 61 is_stmt 0 view .LVU96
 312 012a 029B     		ldr	r3, [sp, #8]
 313 012c 09FB03F4 		mul	r4, r9, r3
 314              		.loc 1 213 14 view .LVU97
 315 0130 0198     		ldr	r0, [sp, #4]
 316 0132 01FB0044 		mla	r4, r1, r0, r4
 317              	.LVL26:
 214:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     map_p += bit_ofs >> 3;
 318              		.loc 1 214 5 is_stmt 1 view .LVU98
 319              		.loc 1 214 11 is_stmt 0 view .LVU99
 320 0136 209E     		ldr	r6, [sp, #128]
 321              	.LVL27:
 322              		.loc 1 214 11 view .LVU100
 323 0138 06EBD406 		add	r6, r6, r4, lsr #3
 324              	.LVL28:
 215:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 216:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     uint8_t letter_px;
 325              		.loc 1 216 5 is_stmt 1 view .LVU101
 217:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     uint32_t col_bit;
 326              		.loc 1 217 5 view .LVU102
 218:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     col_bit = bit_ofs & 0x7; /*"& 0x7" equals to "% 8" just faster*/
 327              		.loc 1 218 5 view .LVU103
 328              		.loc 1 218 13 is_stmt 0 view .LVU104
 329 013c 04F00704 		and	r4, r4, #7
 330              	.LVL29:
 219:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 220:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     lv_draw_sw_blend_dsc_t blend_dsc;
 331              		.loc 1 220 5 is_stmt 1 view .LVU105
 221:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     lv_memset_00(&blend_dsc, sizeof(blend_dsc));
 332              		.loc 1 221 5 view .LVU106
 333 0140 1C21     		movs	r1, #28
 334              	.LVL30:
ARM GAS  C:\usertemp\ccuvhm44.s 			page 11


 335              		.loc 1 221 5 is_stmt 0 view .LVU107
 336 0142 0FA8     		add	r0, sp, #60
 337              	.LVL31:
 338              		.loc 1 221 5 view .LVU108
 339 0144 FFF7FEFF 		bl	lv_memset_00
 340              	.LVL32:
 222:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     blend_dsc.color = dsc->color;
 341              		.loc 1 222 5 is_stmt 1 view .LVU109
 342              		.loc 1 222 21 is_stmt 0 view .LVU110
 343 0148 AB89     		ldrh	r3, [r5, #12]
 344 014a ADF84430 		strh	r3, [sp, #68]	@ movhi
 223:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     blend_dsc.opa = dsc->opa;
 345              		.loc 1 223 5 is_stmt 1 view .LVU111
 346              		.loc 1 223 24 is_stmt 0 view .LVU112
 347 014e AB7E     		ldrb	r3, [r5, #26]	@ zero_extendqisi2
 348              		.loc 1 223 19 view .LVU113
 349 0150 8DF85430 		strb	r3, [sp, #84]
 224:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     blend_dsc.blend_mode = dsc->blend_mode;
 350              		.loc 1 224 5 is_stmt 1 view .LVU114
 351              		.loc 1 224 31 is_stmt 0 view .LVU115
 352 0154 AB7F     		ldrb	r3, [r5, #30]	@ zero_extendqisi2
 353 0156 C3F3C203 		ubfx	r3, r3, #3, #3
 354              		.loc 1 224 26 view .LVU116
 355 015a 8DF85530 		strb	r3, [sp, #85]
 225:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 226:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     lv_coord_t hor_res = lv_disp_get_hor_res(_lv_refr_get_disp_refreshing());
 356              		.loc 1 226 5 is_stmt 1 view .LVU117
 357              		.loc 1 226 26 is_stmt 0 view .LVU118
 358 015e FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 359              	.LVL33:
 360              		.loc 1 226 26 discriminator 1 view .LVU119
 361 0162 FFF7FEFF 		bl	lv_disp_get_hor_res
 362              	.LVL34:
 227:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     uint32_t mask_buf_size = box_w * box_h > hor_res ? hor_res : box_w * box_h;
 363              		.loc 1 227 5 is_stmt 1 view .LVU120
 364              		.loc 1 227 36 is_stmt 0 view .LVU121
 365 0166 0699     		ldr	r1, [sp, #24]
 366 0168 01FB07F7 		mul	r7, r1, r7
 367              	.LVL35:
 368              		.loc 1 227 64 view .LVU122
 369 016c 3D46     		mov	r5, r7
 370              	.LVL36:
 371              		.loc 1 227 64 view .LVU123
 372 016e 8742     		cmp	r7, r0
 373 0170 A8BF     		it	ge
 374 0172 0546     		movge	r5, r0
 375 0174 0495     		str	r5, [sp, #16]
 376              	.LVL37:
 228:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     lv_opa_t * mask_buf = lv_mem_buf_get(mask_buf_size);
 377              		.loc 1 228 5 is_stmt 1 view .LVU124
 378              		.loc 1 228 27 is_stmt 0 view .LVU125
 379 0176 2846     		mov	r0, r5
 380              	.LVL38:
 381              		.loc 1 228 27 view .LVU126
 382 0178 FFF7FEFF 		bl	lv_mem_buf_get
 383              	.LVL39:
 384 017c 8246     		mov	r10, r0
ARM GAS  C:\usertemp\ccuvhm44.s 			page 12


 385              	.LVL40:
 229:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     blend_dsc.mask_buf = mask_buf;
 386              		.loc 1 229 5 is_stmt 1 view .LVU127
 387              		.loc 1 229 24 is_stmt 0 view .LVU128
 388 017e 1290     		str	r0, [sp, #72]
 230:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     int32_t mask_p = 0;
 389              		.loc 1 230 5 is_stmt 1 view .LVU129
 390              	.LVL41:
 231:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 232:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     lv_area_t fill_area;
 391              		.loc 1 232 5 view .LVU130
 233:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     fill_area.x1 = col_start + pos->x;
 392              		.loc 1 233 5 view .LVU131
 393              		.loc 1 233 35 is_stmt 0 view .LVU132
 394 0180 059D     		ldr	r5, [sp, #20]
 395              	.LVL42:
 396              		.loc 1 233 35 view .LVU133
 397 0182 2B88     		ldrh	r3, [r5]
 398              		.loc 1 233 30 view .LVU134
 399 0184 029A     		ldr	r2, [sp, #8]
 400 0186 9A18     		adds	r2, r3, r2
 401 0188 91B2     		uxth	r1, r2
 402 018a 12B2     		sxth	r2, r2
 403              		.loc 1 233 18 view .LVU135
 404 018c ADF83420 		strh	r2, [sp, #52]	@ movhi
 234:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     fill_area.x2 = col_end  + pos->x - 1;
 405              		.loc 1 234 5 is_stmt 1 view .LVU136
 406              		.loc 1 234 29 is_stmt 0 view .LVU137
 407 0190 4344     		add	r3, r3, r8
 408 0192 9BB2     		uxth	r3, r3
 409              		.loc 1 234 38 view .LVU138
 410 0194 013B     		subs	r3, r3, #1
 411 0196 98B2     		uxth	r0, r3
 412              	.LVL43:
 413              		.loc 1 234 38 view .LVU139
 414 0198 1BB2     		sxth	r3, r3
 415              		.loc 1 234 18 view .LVU140
 416 019a ADF83830 		strh	r3, [sp, #56]	@ movhi
 235:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     fill_area.y1 = row_start + pos->y;
 417              		.loc 1 235 5 is_stmt 1 view .LVU141
 418              		.loc 1 235 35 is_stmt 0 view .LVU142
 419 019e 6D88     		ldrh	r5, [r5, #2]
 420              		.loc 1 235 30 view .LVU143
 421 01a0 019F     		ldr	r7, [sp, #4]
 422 01a2 3D44     		add	r5, r5, r7
 423 01a4 2FB2     		sxth	r7, r5
 424              		.loc 1 235 18 view .LVU144
 425 01a6 ADF83670 		strh	r7, [sp, #54]	@ movhi
 236:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     fill_area.y2 = fill_area.y1;
 426              		.loc 1 236 5 is_stmt 1 view .LVU145
 427              		.loc 1 236 18 is_stmt 0 view .LVU146
 428 01aa ADF83A70 		strh	r7, [sp, #58]	@ movhi
 237:lvgl/src/draw/sw/lv_draw_sw_letter.c **** #if LV_DRAW_COMPLEX
 238:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     lv_coord_t fill_w = lv_area_get_width(&fill_area);
 429              		.loc 1 238 5 is_stmt 1 view .LVU147
 430              	.LVL44:
 431              	.LBB9:
ARM GAS  C:\usertemp\ccuvhm44.s 			page 13


 432              	.LBI9:
 433              		.file 2 "lvgl/src/draw/sw/../../misc/lv_area.h"
   1:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
   2:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @file lv_area.h
   3:lvgl/src/draw/sw/../../misc/lv_area.h ****  *
   4:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
   5:lvgl/src/draw/sw/../../misc/lv_area.h **** 
   6:lvgl/src/draw/sw/../../misc/lv_area.h **** #ifndef LV_AREA_H
   7:lvgl/src/draw/sw/../../misc/lv_area.h **** #define LV_AREA_H
   8:lvgl/src/draw/sw/../../misc/lv_area.h **** 
   9:lvgl/src/draw/sw/../../misc/lv_area.h **** #ifdef __cplusplus
  10:lvgl/src/draw/sw/../../misc/lv_area.h **** extern "C" {
  11:lvgl/src/draw/sw/../../misc/lv_area.h **** #endif
  12:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  13:lvgl/src/draw/sw/../../misc/lv_area.h **** /*********************
  14:lvgl/src/draw/sw/../../misc/lv_area.h ****  *      INCLUDES
  15:lvgl/src/draw/sw/../../misc/lv_area.h ****  *********************/
  16:lvgl/src/draw/sw/../../misc/lv_area.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/draw/sw/../../misc/lv_area.h **** #include <stdbool.h>
  18:lvgl/src/draw/sw/../../misc/lv_area.h **** #include <stdint.h>
  19:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  20:lvgl/src/draw/sw/../../misc/lv_area.h **** /*********************
  21:lvgl/src/draw/sw/../../misc/lv_area.h ****  *      DEFINES
  22:lvgl/src/draw/sw/../../misc/lv_area.h ****  *********************/
  23:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  24:lvgl/src/draw/sw/../../misc/lv_area.h **** #if LV_USE_LARGE_COORD
  25:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef int32_t lv_coord_t;
  26:lvgl/src/draw/sw/../../misc/lv_area.h **** #else
  27:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef int16_t lv_coord_t;
  28:lvgl/src/draw/sw/../../misc/lv_area.h **** #endif
  29:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  30:lvgl/src/draw/sw/../../misc/lv_area.h **** /**********************
  31:lvgl/src/draw/sw/../../misc/lv_area.h ****  *      TYPEDEFS
  32:lvgl/src/draw/sw/../../misc/lv_area.h ****  **********************/
  33:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  34:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
  35:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Represents a point on the screen.
  36:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
  37:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef struct {
  38:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t x;
  39:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t y;
  40:lvgl/src/draw/sw/../../misc/lv_area.h **** } lv_point_t;
  41:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  42:lvgl/src/draw/sw/../../misc/lv_area.h **** /** Represents an area of the screen.*/
  43:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef struct {
  44:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t x1;
  45:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t y1;
  46:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t x2;
  47:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t y2;
  48:lvgl/src/draw/sw/../../misc/lv_area.h **** } lv_area_t;
  49:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  50:lvgl/src/draw/sw/../../misc/lv_area.h **** /** Alignments*/
  51:lvgl/src/draw/sw/../../misc/lv_area.h **** enum {
  52:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_DEFAULT = 0,
  53:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_TOP_LEFT,
  54:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_TOP_MID,
  55:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_TOP_RIGHT,
ARM GAS  C:\usertemp\ccuvhm44.s 			page 14


  56:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_BOTTOM_LEFT,
  57:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_BOTTOM_MID,
  58:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_BOTTOM_RIGHT,
  59:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_LEFT_MID,
  60:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_RIGHT_MID,
  61:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_CENTER,
  62:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  63:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  64:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  65:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  66:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  67:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  68:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  69:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  70:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  71:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  72:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  73:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  74:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  75:lvgl/src/draw/sw/../../misc/lv_area.h **** };
  76:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef uint8_t lv_align_t;
  77:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  78:lvgl/src/draw/sw/../../misc/lv_area.h **** enum {
  79:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_NONE     = 0x00,
  80:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_LEFT     = (1 << 0),
  81:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_RIGHT    = (1 << 1),
  82:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_TOP      = (1 << 2),
  83:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_BOTTOM   = (1 << 3),
  84:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_HOR      = LV_DIR_LEFT | LV_DIR_RIGHT,
  85:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_VER      = LV_DIR_TOP | LV_DIR_BOTTOM,
  86:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_ALL      = LV_DIR_HOR | LV_DIR_VER,
  87:lvgl/src/draw/sw/../../misc/lv_area.h **** };
  88:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  89:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef uint8_t lv_dir_t;
  90:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  91:lvgl/src/draw/sw/../../misc/lv_area.h **** /**********************
  92:lvgl/src/draw/sw/../../misc/lv_area.h ****  * GLOBAL PROTOTYPES
  93:lvgl/src/draw/sw/../../misc/lv_area.h ****  **********************/
  94:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  95:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
  96:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Initialize an area
  97:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param area_p pointer to an area
  98:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param x1 left coordinate of the area
  99:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param y1 top coordinate of the area
 100:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param x2 right coordinate of the area
 101:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param y2 bottom coordinate of the area
 102:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
 103:lvgl/src/draw/sw/../../misc/lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
 104:lvgl/src/draw/sw/../../misc/lv_area.h **** 
 105:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
 106:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Copy an area
 107:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param dest pointer to the destination area
 108:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param src pointer to the source area
 109:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
 110:lvgl/src/draw/sw/../../misc/lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
 111:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 112:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->x1 = src->x1;
ARM GAS  C:\usertemp\ccuvhm44.s 			page 15


 113:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y1 = src->y1;
 114:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->x2 = src->x2;
 115:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y2 = src->y2;
 116:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 117:lvgl/src/draw/sw/../../misc/lv_area.h **** 
 118:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
 119:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Get the width of an area
 120:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param area_p pointer to an area
 121:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @return the width of the area (if x1 == x2 -> width = 1)
 122:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)
 434              		.loc 2 123 26 view .LVU148
 435              	.LBB10:
 124:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 125:lvgl/src/draw/sw/../../misc/lv_area.h ****     return (lv_coord_t)(area_p->x2 - area_p->x1 + 1);
 436              		.loc 2 125 5 view .LVU149
 437              		.loc 2 125 36 is_stmt 0 view .LVU150
 438 01ae 411A     		subs	r1, r0, r1
 439 01b0 89B2     		uxth	r1, r1
 440              		.loc 2 125 49 view .LVU151
 441 01b2 0131     		adds	r1, r1, #1
 442              		.loc 2 125 12 view .LVU152
 443 01b4 08B2     		sxth	r0, r1
 444 01b6 0890     		str	r0, [sp, #32]
 445              	.LVL45:
 446              		.loc 2 125 12 view .LVU153
 447              	.LBE10:
 448              	.LBE9:
 239:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     lv_area_t mask_area;
 449              		.loc 1 239 5 is_stmt 1 view .LVU154
 240:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     lv_area_copy(&mask_area, &fill_area);
 450              		.loc 1 240 5 view .LVU155
 451              	.LBB11:
 452              	.LBI11:
 110:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 453              		.loc 2 110 20 view .LVU156
 454              	.LBB12:
 112:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y1 = src->y1;
 455              		.loc 2 112 5 view .LVU157
 112:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y1 = src->y1;
 456              		.loc 2 112 14 is_stmt 0 view .LVU158
 457 01b8 ADF82C20 		strh	r2, [sp, #44]	@ movhi
 113:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->x2 = src->x2;
 458              		.loc 2 113 5 is_stmt 1 view .LVU159
 113:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->x2 = src->x2;
 459              		.loc 2 113 14 is_stmt 0 view .LVU160
 460 01bc ADF82E70 		strh	r7, [sp, #46]	@ movhi
 114:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y2 = src->y2;
 461              		.loc 2 114 5 is_stmt 1 view .LVU161
 114:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y2 = src->y2;
 462              		.loc 2 114 14 is_stmt 0 view .LVU162
 463 01c0 ADF83030 		strh	r3, [sp, #48]	@ movhi
 115:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 464              		.loc 2 115 5 is_stmt 1 view .LVU163
 115:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 465              		.loc 2 115 14 is_stmt 0 view .LVU164
 466 01c4 ADF83270 		strh	r7, [sp, #50]	@ movhi
ARM GAS  C:\usertemp\ccuvhm44.s 			page 16


 467              	.LVL46:
 115:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 468              		.loc 2 115 14 view .LVU165
 469              	.LBE12:
 470              	.LBE11:
 241:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     mask_area.y2 = mask_area.y1 + row_end;
 471              		.loc 1 241 5 is_stmt 1 view .LVU166
 472              		.loc 1 241 33 is_stmt 0 view .LVU167
 473 01c8 0398     		ldr	r0, [sp, #12]
 474 01ca 10FA85F5 		uxtah	r5, r0, r5
 475              		.loc 1 241 18 view .LVU168
 476 01ce ADF83250 		strh	r5, [sp, #50]	@ movhi
 242:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     bool mask_any = lv_draw_mask_is_any(&mask_area);
 477              		.loc 1 242 5 is_stmt 1 view .LVU169
 478              		.loc 1 242 21 is_stmt 0 view .LVU170
 479 01d2 0BA8     		add	r0, sp, #44
 480 01d4 FFF7FEFF 		bl	lv_draw_mask_is_any
 481              	.LVL47:
 482 01d8 0590     		str	r0, [sp, #20]
 483              	.LVL48:
 243:lvgl/src/draw/sw/lv_draw_sw_letter.c **** #endif
 244:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     blend_dsc.blend_area = &fill_area;
 484              		.loc 1 244 5 is_stmt 1 view .LVU171
 485              		.loc 1 244 26 is_stmt 0 view .LVU172
 486 01da 0DAB     		add	r3, sp, #52
 487 01dc 0F93     		str	r3, [sp, #60]
 245:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     blend_dsc.mask_area = &fill_area;
 488              		.loc 1 245 5 is_stmt 1 view .LVU173
 489              		.loc 1 245 25 is_stmt 0 view .LVU174
 490 01de 1493     		str	r3, [sp, #80]
 246:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 247:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     uint32_t col_bit_max = 8 - bpp;
 491              		.loc 1 247 5 is_stmt 1 view .LVU175
 492              		.loc 1 247 14 is_stmt 0 view .LVU176
 493 01e0 C9F10807 		rsb	r7, r9, #8
 494              	.LVL49:
 248:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     uint32_t col_bit_row_ofs = (box_w + col_start - col_end) * bpp;
 495              		.loc 1 248 5 is_stmt 1 view .LVU177
 496              		.loc 1 248 39 is_stmt 0 view .LVU178
 497 01e4 029B     		ldr	r3, [sp, #8]
 498 01e6 0699     		ldr	r1, [sp, #24]
 499 01e8 0B44     		add	r3, r3, r1
 500              		.loc 1 248 51 view .LVU179
 501 01ea A3EB0803 		sub	r3, r3, r8
 502              		.loc 1 248 14 view .LVU180
 503 01ee 09FB03F3 		mul	r3, r9, r3
 504 01f2 0693     		str	r3, [sp, #24]
 505              	.LVL50:
 249:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 250:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     for(row = row_start ; row < row_end; row++) {
 506              		.loc 1 250 5 is_stmt 1 view .LVU181
 230:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 507              		.loc 1 230 13 is_stmt 0 view .LVU182
 508 01f4 0020     		movs	r0, #0
 509              		.loc 1 250 5 view .LVU183
 510 01f6 36E0     		b	.L18
 511              	.LVL51:
ARM GAS  C:\usertemp\ccuvhm44.s 			page 17


 512              	.L20:
 513              	.LBB13:
 251:lvgl/src/draw/sw/lv_draw_sw_letter.c **** #if LV_DRAW_COMPLEX
 252:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         int32_t mask_p_start = mask_p;
 253:lvgl/src/draw/sw/lv_draw_sw_letter.c **** #endif
 254:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         bitmask = bitmask_init >> col_bit;
 255:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         for(col = col_start; col < col_end; col++) {
 256:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             /*Load the pixel's opacity into the mask*/
 257:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             letter_px = (*map_p & bitmask) >> (col_bit_max - col_bit);
 258:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             if(letter_px) {
 259:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                 mask_buf[mask_p] = bpp_opa_table_p[letter_px];
 260:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             }
 261:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             else {
 262:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                 mask_buf[mask_p] = 0;
 514              		.loc 1 262 17 is_stmt 1 view .LVU184
 515              		.loc 1 262 34 is_stmt 0 view .LVU185
 516 01f8 0023     		movs	r3, #0
 517              	.LVL52:
 518              		.loc 1 262 34 view .LVU186
 519 01fa 0AF80530 		strb	r3, [r10, r5]
 520              	.LVL53:
 521              		.loc 1 262 34 view .LVU187
 522 01fe 14E0     		b	.L21
 523              	.L22:
 263:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             }
 264:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 265:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             /*Go to the next column*/
 266:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             if(col_bit < col_bit_max) {
 267:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                 col_bit += bpp;
 268:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                 bitmask = bitmask >> bpp;
 269:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             }
 270:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             else {
 271:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                 col_bit = 0;
 524              		.loc 1 271 17 is_stmt 1 view .LVU188
 525              	.LVL54:
 272:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                 bitmask = bitmask_init;
 526              		.loc 1 272 17 view .LVU189
 273:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                 map_p++;
 527              		.loc 1 273 17 view .LVU190
 528              		.loc 1 273 22 is_stmt 0 view .LVU191
 529 0200 0136     		adds	r6, r6, #1
 530              	.LVL55:
 272:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                 bitmask = bitmask_init;
 531              		.loc 1 272 25 view .LVU192
 532 0202 0099     		ldr	r1, [sp]
 271:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                 bitmask = bitmask_init;
 533              		.loc 1 271 25 view .LVU193
 534 0204 0024     		movs	r4, #0
 535              	.LVL56:
 536              	.L23:
 274:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             }
 275:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 276:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             /*Next mask byte*/
 277:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             mask_p++;
 537              		.loc 1 277 13 is_stmt 1 view .LVU194
 538              		.loc 1 277 19 is_stmt 0 view .LVU195
 539 0206 0135     		adds	r5, r5, #1
ARM GAS  C:\usertemp\ccuvhm44.s 			page 18


 540              	.LVL57:
 255:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             /*Load the pixel's opacity into the mask*/
 541              		.loc 1 255 48 is_stmt 1 discriminator 2 view .LVU196
 542 0208 0132     		adds	r2, r2, #1
 543              	.LVL58:
 544              	.L19:
 255:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             /*Load the pixel's opacity into the mask*/
 545              		.loc 1 255 34 discriminator 1 view .LVU197
 546 020a 4245     		cmp	r2, r8
 547 020c 13DA     		bge	.L43
 257:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             if(letter_px) {
 548              		.loc 1 257 13 view .LVU198
 257:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             if(letter_px) {
 549              		.loc 1 257 26 is_stmt 0 view .LVU199
 550 020e 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 257:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             if(letter_px) {
 551              		.loc 1 257 33 view .LVU200
 552 0210 0B40     		ands	r3, r3, r1
 257:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             if(letter_px) {
 553              		.loc 1 257 60 view .LVU201
 554 0212 A7EB040C 		sub	ip, r7, r4
 257:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             if(letter_px) {
 555              		.loc 1 257 44 view .LVU202
 556 0216 23FA0CF3 		lsr	r3, r3, ip
 557              	.LVL59:
 258:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                 mask_buf[mask_p] = bpp_opa_table_p[letter_px];
 558              		.loc 1 258 13 is_stmt 1 view .LVU203
 258:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                 mask_buf[mask_p] = bpp_opa_table_p[letter_px];
 559              		.loc 1 258 15 is_stmt 0 view .LVU204
 560 021a 13F0FF0F 		tst	r3, #255
 561 021e EBD0     		beq	.L20
 259:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             }
 562              		.loc 1 259 17 is_stmt 1 view .LVU205
 259:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             }
 563              		.loc 1 259 51 is_stmt 0 view .LVU206
 564 0220 DBB2     		uxtb	r3, r3
 259:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             }
 565              		.loc 1 259 51 view .LVU207
 566 0222 1BF80330 		ldrb	r3, [fp, r3]	@ zero_extendqisi2
 567              	.LVL60:
 259:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             }
 568              		.loc 1 259 34 view .LVU208
 569 0226 0AF80530 		strb	r3, [r10, r5]
 570              	.LVL61:
 571              	.L21:
 266:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                 col_bit += bpp;
 572              		.loc 1 266 13 is_stmt 1 view .LVU209
 266:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                 col_bit += bpp;
 573              		.loc 1 266 15 is_stmt 0 view .LVU210
 574 022a BC42     		cmp	r4, r7
 575 022c E8D2     		bcs	.L22
 267:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                 bitmask = bitmask >> bpp;
 576              		.loc 1 267 17 is_stmt 1 view .LVU211
 267:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                 bitmask = bitmask >> bpp;
 577              		.loc 1 267 25 is_stmt 0 view .LVU212
 578 022e 4C44     		add	r4, r4, r9
 579              	.LVL62:
ARM GAS  C:\usertemp\ccuvhm44.s 			page 19


 268:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             }
 580              		.loc 1 268 17 is_stmt 1 view .LVU213
 268:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             }
 581              		.loc 1 268 25 is_stmt 0 view .LVU214
 582 0230 21FA09F1 		lsr	r1, r1, r9
 583              	.LVL63:
 268:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             }
 584              		.loc 1 268 25 view .LVU215
 585 0234 E7E7     		b	.L23
 586              	.LVL64:
 587              	.L43:
 278:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         }
 279:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 280:lvgl/src/draw/sw/lv_draw_sw_letter.c **** #if LV_DRAW_COMPLEX
 281:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         /*Apply masks if any*/
 282:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         if(mask_any) {
 588              		.loc 1 282 9 is_stmt 1 view .LVU216
 589              		.loc 1 282 11 is_stmt 0 view .LVU217
 590 0236 059B     		ldr	r3, [sp, #20]
 591 0238 FBB9     		cbnz	r3, .L44
 592              	.LVL65:
 593              	.L25:
 283:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             blend_dsc.mask_res = lv_draw_mask_apply(mask_buf + mask_p_start, fill_area.x1, fill_are
 284:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                                                     fill_w);
 285:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             if(blend_dsc.mask_res == LV_DRAW_MASK_RES_TRANSP) {
 286:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                 lv_memset_00(mask_buf + mask_p_start, fill_w);
 287:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             }
 288:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         }
 289:lvgl/src/draw/sw/lv_draw_sw_letter.c **** #endif
 290:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 291:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         if((uint32_t) mask_p + (col_end - col_start) < mask_buf_size) {
 594              		.loc 1 291 9 is_stmt 1 view .LVU218
 595              		.loc 1 291 41 is_stmt 0 view .LVU219
 596 023a 029B     		ldr	r3, [sp, #8]
 597 023c A8EB0303 		sub	r3, r8, r3
 598              		.loc 1 291 30 view .LVU220
 599 0240 2B44     		add	r3, r3, r5
 600              		.loc 1 291 11 view .LVU221
 601 0242 049A     		ldr	r2, [sp, #16]
 602 0244 9342     		cmp	r3, r2
 603 0246 2CD2     		bcs	.L26
 292:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             fill_area.y2 ++;
 604              		.loc 1 292 13 is_stmt 1 view .LVU222
 605              		.loc 1 292 22 is_stmt 0 view .LVU223
 606 0248 BDF93A30 		ldrsh	r3, [sp, #58]
 607              		.loc 1 292 26 view .LVU224
 608 024c 0133     		adds	r3, r3, #1
 609 024e ADF83A30 		strh	r3, [sp, #58]	@ movhi
 610 0252 2846     		mov	r0, r5
 611              	.LVL66:
 612              	.L27:
 293:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         }
 294:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         else {
 295:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             blend_dsc.mask_res = LV_DRAW_MASK_RES_CHANGED;
 296:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             lv_draw_sw_blend(draw_ctx, &blend_dsc);
 297:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 298:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             fill_area.y1 = fill_area.y2 + 1;
ARM GAS  C:\usertemp\ccuvhm44.s 			page 20


 299:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             fill_area.y2 = fill_area.y1;
 300:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             mask_p = 0;
 301:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         }
 302:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 303:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         col_bit += col_bit_row_ofs;
 613              		.loc 1 303 9 is_stmt 1 view .LVU225
 614              		.loc 1 303 17 is_stmt 0 view .LVU226
 615 0254 069B     		ldr	r3, [sp, #24]
 616 0256 1C44     		add	r4, r4, r3
 617              	.LVL67:
 304:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         map_p += (col_bit >> 3);
 618              		.loc 1 304 9 is_stmt 1 view .LVU227
 619              		.loc 1 304 15 is_stmt 0 view .LVU228
 620 0258 06EBD406 		add	r6, r6, r4, lsr #3
 621              	.LVL68:
 305:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         col_bit = col_bit & 0x7;
 622              		.loc 1 305 9 is_stmt 1 view .LVU229
 623              		.loc 1 305 17 is_stmt 0 view .LVU230
 624 025c 04F00704 		and	r4, r4, #7
 625              	.LVL69:
 626              		.loc 1 305 17 view .LVU231
 627              	.LBE13:
 250:lvgl/src/draw/sw/lv_draw_sw_letter.c **** #if LV_DRAW_COMPLEX
 628              		.loc 1 250 45 is_stmt 1 discriminator 2 view .LVU232
 629 0260 019B     		ldr	r3, [sp, #4]
 630 0262 0133     		adds	r3, r3, #1
 631 0264 0193     		str	r3, [sp, #4]
 632              	.LVL70:
 633              	.L18:
 250:lvgl/src/draw/sw/lv_draw_sw_letter.c **** #if LV_DRAW_COMPLEX
 634              		.loc 1 250 31 discriminator 1 view .LVU233
 635 0266 019B     		ldr	r3, [sp, #4]
 636 0268 039A     		ldr	r2, [sp, #12]
 637 026a 9342     		cmp	r3, r2
 638 026c 2ADA     		bge	.L45
 639              	.LBB14:
 252:lvgl/src/draw/sw/lv_draw_sw_letter.c **** #endif
 640              		.loc 1 252 9 view .LVU234
 641              	.LVL71:
 254:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         for(col = col_start; col < col_end; col++) {
 642              		.loc 1 254 9 view .LVU235
 254:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         for(col = col_start; col < col_end; col++) {
 643              		.loc 1 254 17 is_stmt 0 view .LVU236
 644 026e 009B     		ldr	r3, [sp]
 645 0270 23FA04F1 		lsr	r1, r3, r4
 646              	.LVL72:
 255:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             /*Load the pixel's opacity into the mask*/
 647              		.loc 1 255 9 is_stmt 1 view .LVU237
 255:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             /*Load the pixel's opacity into the mask*/
 648              		.loc 1 255 9 is_stmt 0 view .LVU238
 649 0274 0546     		mov	r5, r0
 255:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             /*Load the pixel's opacity into the mask*/
 650              		.loc 1 255 17 view .LVU239
 651 0276 029A     		ldr	r2, [sp, #8]
 255:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             /*Load the pixel's opacity into the mask*/
 652              		.loc 1 255 9 view .LVU240
 653 0278 C7E7     		b	.L19
ARM GAS  C:\usertemp\ccuvhm44.s 			page 21


 654              	.LVL73:
 655              	.L44:
 283:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                                                     fill_w);
 656              		.loc 1 283 13 is_stmt 1 view .LVU241
 283:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                                                     fill_w);
 657              		.loc 1 283 34 is_stmt 0 view .LVU242
 658 027a 0AEB0003 		add	r3, r10, r0
 659 027e 1846     		mov	r0, r3
 660              	.LVL74:
 283:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                                                     fill_w);
 661              		.loc 1 283 34 view .LVU243
 662 0280 0993     		str	r3, [sp, #36]
 663 0282 089B     		ldr	r3, [sp, #32]
 664 0284 BDF93A20 		ldrsh	r2, [sp, #58]
 665              	.LVL75:
 283:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                                                     fill_w);
 666              		.loc 1 283 34 view .LVU244
 667 0288 BDF93410 		ldrsh	r1, [sp, #52]
 668              	.LVL76:
 283:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                                                     fill_w);
 669              		.loc 1 283 34 view .LVU245
 670 028c FFF7FEFF 		bl	lv_draw_mask_apply
 671              	.LVL77:
 283:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                                                     fill_w);
 672              		.loc 1 283 32 discriminator 1 view .LVU246
 673 0290 8DF84C00 		strb	r0, [sp, #76]
 285:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                 lv_memset_00(mask_buf + mask_p_start, fill_w);
 674              		.loc 1 285 13 is_stmt 1 view .LVU247
 285:lvgl/src/draw/sw/lv_draw_sw_letter.c ****                 lv_memset_00(mask_buf + mask_p_start, fill_w);
 675              		.loc 1 285 15 is_stmt 0 view .LVU248
 676 0294 0028     		cmp	r0, #0
 677 0296 D0D1     		bne	.L25
 286:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             }
 678              		.loc 1 286 17 is_stmt 1 view .LVU249
 679 0298 0899     		ldr	r1, [sp, #32]
 680 029a 0998     		ldr	r0, [sp, #36]
 681 029c FFF7FEFF 		bl	lv_memset_00
 682              	.LVL78:
 683 02a0 CBE7     		b	.L25
 684              	.L26:
 295:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             lv_draw_sw_blend(draw_ctx, &blend_dsc);
 685              		.loc 1 295 13 view .LVU250
 295:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             lv_draw_sw_blend(draw_ctx, &blend_dsc);
 686              		.loc 1 295 32 is_stmt 0 view .LVU251
 687 02a2 0223     		movs	r3, #2
 688 02a4 8DF84C30 		strb	r3, [sp, #76]
 296:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 689              		.loc 1 296 13 is_stmt 1 view .LVU252
 690 02a8 0FA9     		add	r1, sp, #60
 691 02aa 0798     		ldr	r0, [sp, #28]
 692 02ac FFF7FEFF 		bl	lv_draw_sw_blend
 693              	.LVL79:
 298:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             fill_area.y2 = fill_area.y1;
 694              		.loc 1 298 13 view .LVU253
 298:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             fill_area.y2 = fill_area.y1;
 695              		.loc 1 298 37 is_stmt 0 view .LVU254
 696 02b0 BDF83A30 		ldrh	r3, [sp, #58]
ARM GAS  C:\usertemp\ccuvhm44.s 			page 22


 298:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             fill_area.y2 = fill_area.y1;
 697              		.loc 1 298 41 view .LVU255
 698 02b4 0133     		adds	r3, r3, #1
 699 02b6 1BB2     		sxth	r3, r3
 298:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             fill_area.y2 = fill_area.y1;
 700              		.loc 1 298 26 view .LVU256
 701 02b8 ADF83630 		strh	r3, [sp, #54]	@ movhi
 299:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             mask_p = 0;
 702              		.loc 1 299 13 is_stmt 1 view .LVU257
 299:lvgl/src/draw/sw/lv_draw_sw_letter.c ****             mask_p = 0;
 703              		.loc 1 299 26 is_stmt 0 view .LVU258
 704 02bc ADF83A30 		strh	r3, [sp, #58]	@ movhi
 300:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         }
 705              		.loc 1 300 13 is_stmt 1 view .LVU259
 706              	.LVL80:
 300:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         }
 707              		.loc 1 300 20 is_stmt 0 view .LVU260
 708 02c0 0020     		movs	r0, #0
 709 02c2 C7E7     		b	.L27
 710              	.LVL81:
 711              	.L45:
 300:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         }
 712              		.loc 1 300 20 view .LVU261
 713              	.LBE14:
 306:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     }
 307:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 308:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     /*Flush the last part*/
 309:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     if(fill_area.y1 != fill_area.y2) {
 714              		.loc 1 309 5 is_stmt 1 view .LVU262
 715              		.loc 1 309 17 is_stmt 0 view .LVU263
 716 02c4 BDF93620 		ldrsh	r2, [sp, #54]
 717              		.loc 1 309 33 view .LVU264
 718 02c8 BDF93A30 		ldrsh	r3, [sp, #58]
 719              	.LVL82:
 720              		.loc 1 309 7 view .LVU265
 721 02cc 9A42     		cmp	r2, r3
 722 02ce 05D1     		bne	.L46
 723              	.LVL83:
 724              	.L29:
 310:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         fill_area.y2--;
 311:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         blend_dsc.mask_res = LV_DRAW_MASK_RES_CHANGED;
 312:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         lv_draw_sw_blend(draw_ctx, &blend_dsc);
 313:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         mask_p = 0;
 314:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     }
 315:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 316:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     lv_mem_buf_release(mask_buf);
 725              		.loc 1 316 5 is_stmt 1 view .LVU266
 726 02d0 5046     		mov	r0, r10
 727 02d2 FFF7FEFF 		bl	lv_mem_buf_release
 728              	.LVL84:
 729              	.L1:
 317:lvgl/src/draw/sw/lv_draw_sw_letter.c **** }
 730              		.loc 1 317 1 is_stmt 0 view .LVU267
 731 02d6 17B0     		add	sp, sp, #92
 732              	.LCFI2:
 733              		.cfi_remember_state
 734              		.cfi_def_cfa_offset 36
ARM GAS  C:\usertemp\ccuvhm44.s 			page 23


 735              		@ sp needed
 736 02d8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 737              	.LVL85:
 738              	.L46:
 739              	.LCFI3:
 740              		.cfi_restore_state
 310:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         fill_area.y2--;
 741              		.loc 1 310 9 is_stmt 1 view .LVU268
 310:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         fill_area.y2--;
 742              		.loc 1 310 21 is_stmt 0 view .LVU269
 743 02dc 013B     		subs	r3, r3, #1
 744 02de ADF83A30 		strh	r3, [sp, #58]	@ movhi
 311:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         lv_draw_sw_blend(draw_ctx, &blend_dsc);
 745              		.loc 1 311 9 is_stmt 1 view .LVU270
 311:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         lv_draw_sw_blend(draw_ctx, &blend_dsc);
 746              		.loc 1 311 28 is_stmt 0 view .LVU271
 747 02e2 0223     		movs	r3, #2
 748 02e4 8DF84C30 		strb	r3, [sp, #76]
 312:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         mask_p = 0;
 749              		.loc 1 312 9 is_stmt 1 view .LVU272
 750 02e8 0FA9     		add	r1, sp, #60
 751 02ea 0798     		ldr	r0, [sp, #28]
 752              	.LVL86:
 312:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         mask_p = 0;
 753              		.loc 1 312 9 is_stmt 0 view .LVU273
 754 02ec FFF7FEFF 		bl	lv_draw_sw_blend
 755              	.LVL87:
 313:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     }
 756              		.loc 1 313 9 is_stmt 1 view .LVU274
 313:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     }
 757              		.loc 1 313 9 is_stmt 0 view .LVU275
 758 02f0 EEE7     		b	.L29
 759              	.L48:
 760 02f2 00BF     		.align	2
 761              	.L47:
 762 02f4 00000000 		.word	prev_opa.2
 763 02f8 00000000 		.word	prev_bpp.1
 764 02fc 00000000 		.word	opa_table.0
 765 0300 00000000 		.word	_lv_bpp1_opa_table
 766 0304 00000000 		.word	_lv_bpp4_opa_table
 767 0308 00000000 		.word	_lv_bpp8_opa_table
 768 030c 00000000 		.word	_lv_bpp2_opa_table
 769              		.cfi_endproc
 770              	.LFE157:
 772              		.section	.text.lv_draw_sw_letter,"ax",%progbits
 773              		.align	1
 774              		.global	lv_draw_sw_letter
 775              		.syntax unified
 776              		.thumb
 777              		.thumb_func
 779              	lv_draw_sw_letter:
 780              	.LVL88:
 781              	.LFB156:
  97:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     lv_font_glyph_dsc_t g;
 782              		.loc 1 97 1 is_stmt 1 view -0
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 24
ARM GAS  C:\usertemp\ccuvhm44.s 			page 24


 785              		@ frame_needed = 0, uses_anonymous_args = 0
  97:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     lv_font_glyph_dsc_t g;
 786              		.loc 1 97 1 is_stmt 0 view .LVU277
 787 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 788              	.LCFI4:
 789              		.cfi_def_cfa_offset 20
 790              		.cfi_offset 4, -20
 791              		.cfi_offset 5, -16
 792              		.cfi_offset 6, -12
 793              		.cfi_offset 7, -8
 794              		.cfi_offset 14, -4
 795 0002 89B0     		sub	sp, sp, #36
 796              	.LCFI5:
 797              		.cfi_def_cfa_offset 56
 798 0004 0646     		mov	r6, r0
 799 0006 0C46     		mov	r4, r1
 800 0008 1746     		mov	r7, r2
 801 000a 1D46     		mov	r5, r3
  98:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     bool g_ret = lv_font_get_glyph_dsc(dsc->font, &g, letter, '\0');
 802              		.loc 1 98 5 is_stmt 1 view .LVU278
  99:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     if(g_ret == false)  {
 803              		.loc 1 99 5 view .LVU279
  99:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     if(g_ret == false)  {
 804              		.loc 1 99 18 is_stmt 0 view .LVU280
 805 000c 0023     		movs	r3, #0
 806              	.LVL89:
  99:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     if(g_ret == false)  {
 807              		.loc 1 99 18 view .LVU281
 808 000e 2A46     		mov	r2, r5
 809              	.LVL90:
  99:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     if(g_ret == false)  {
 810              		.loc 1 99 18 view .LVU282
 811 0010 04A9     		add	r1, sp, #16
 812              	.LVL91:
  99:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     if(g_ret == false)  {
 813              		.loc 1 99 18 view .LVU283
 814 0012 2068     		ldr	r0, [r4]
 815              	.LVL92:
  99:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     if(g_ret == false)  {
 816              		.loc 1 99 18 view .LVU284
 817 0014 FFF7FEFF 		bl	lv_font_get_glyph_dsc
 818              	.LVL93:
 100:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         /*Add warning if the dsc is not found
 819              		.loc 1 100 5 is_stmt 1 view .LVU285
 100:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         /*Add warning if the dsc is not found
 820              		.loc 1 100 7 is_stmt 0 view .LVU286
 821 0018 B0B3     		cbz	r0, .L49
 112:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 822              		.loc 1 112 5 is_stmt 1 view .LVU287
 112:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 823              		.loc 1 112 10 is_stmt 0 view .LVU288
 824 001a BDF81810 		ldrh	r1, [sp, #24]
 112:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 825              		.loc 1 112 7 view .LVU289
 826 001e 99B3     		cbz	r1, .L49
 112:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 827              		.loc 1 112 28 discriminator 2 view .LVU290
ARM GAS  C:\usertemp\ccuvhm44.s 			page 25


 828 0020 BDF81600 		ldrh	r0, [sp, #22]
 829              	.LVL94:
 112:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 830              		.loc 1 112 23 discriminator 2 view .LVU291
 831 0024 80B3     		cbz	r0, .L49
 114:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     gpos.x = pos_p->x + g.ofs_x;
 832              		.loc 1 114 5 is_stmt 1 view .LVU292
 115:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     gpos.y = pos_p->y + (dsc->font->line_height - dsc->font->base_line) - g.box_h - g.ofs_y;
 833              		.loc 1 115 5 view .LVU293
 115:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     gpos.y = pos_p->y + (dsc->font->line_height - dsc->font->base_line) - g.box_h - g.ofs_y;
 834              		.loc 1 115 19 is_stmt 0 view .LVU294
 835 0026 3B88     		ldrh	r3, [r7]
 115:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     gpos.y = pos_p->y + (dsc->font->line_height - dsc->font->base_line) - g.box_h - g.ofs_y;
 836              		.loc 1 115 26 view .LVU295
 837 0028 BDF81A20 		ldrh	r2, [sp, #26]
 115:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     gpos.y = pos_p->y + (dsc->font->line_height - dsc->font->base_line) - g.box_h - g.ofs_y;
 838              		.loc 1 115 23 view .LVU296
 839 002c 1344     		add	r3, r3, r2
 840 002e 1BB2     		sxth	r3, r3
 115:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     gpos.y = pos_p->y + (dsc->font->line_height - dsc->font->base_line) - g.box_h - g.ofs_y;
 841              		.loc 1 115 12 view .LVU297
 842 0030 ADF80C30 		strh	r3, [sp, #12]	@ movhi
 116:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 843              		.loc 1 116 5 is_stmt 1 view .LVU298
 116:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 844              		.loc 1 116 19 is_stmt 0 view .LVU299
 845 0034 7F88     		ldrh	r7, [r7, #2]
 846              	.LVL95:
 116:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 847              		.loc 1 116 29 view .LVU300
 848 0036 2268     		ldr	r2, [r4]
 116:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 849              		.loc 1 116 35 view .LVU301
 850 0038 B2F808C0 		ldrh	ip, [r2, #8]
 116:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 851              		.loc 1 116 60 view .LVU302
 852 003c 5289     		ldrh	r2, [r2, #10]
 116:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 853              		.loc 1 116 49 view .LVU303
 854 003e ACEB020C 		sub	ip, ip, r2
 116:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 855              		.loc 1 116 23 view .LVU304
 856 0042 17FA8CFC 		uxtah	ip, r7, ip
 857 0046 1FFA8CFC 		uxth	ip, ip
 116:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 858              		.loc 1 116 73 view .LVU305
 859 004a ACEB010C 		sub	ip, ip, r1
 860 004e 1FFA8CFC 		uxth	ip, ip
 116:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 861              		.loc 1 116 86 view .LVU306
 862 0052 BDF81C20 		ldrh	r2, [sp, #28]
 116:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 863              		.loc 1 116 83 view .LVU307
 864 0056 ACEB020C 		sub	ip, ip, r2
 865 005a 0FFA8CFC 		sxth	ip, ip
 116:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 866              		.loc 1 116 12 view .LVU308
ARM GAS  C:\usertemp\ccuvhm44.s 			page 26


 867 005e ADF80EC0 		strh	ip, [sp, #14]	@ movhi
 119:lvgl/src/draw/sw/lv_draw_sw_letter.c ****        gpos.x > draw_ctx->clip_area->x2 ||
 868              		.loc 1 119 5 is_stmt 1 view .LVU309
 119:lvgl/src/draw/sw/lv_draw_sw_letter.c ****        gpos.x > draw_ctx->clip_area->x2 ||
 869              		.loc 1 119 15 is_stmt 0 view .LVU310
 870 0062 1844     		add	r0, r0, r3
 119:lvgl/src/draw/sw/lv_draw_sw_letter.c ****        gpos.x > draw_ctx->clip_area->x2 ||
 871              		.loc 1 119 35 view .LVU311
 872 0064 B268     		ldr	r2, [r6, #8]
 119:lvgl/src/draw/sw/lv_draw_sw_letter.c ****        gpos.x > draw_ctx->clip_area->x2 ||
 873              		.loc 1 119 46 view .LVU312
 874 0066 B2F90070 		ldrsh	r7, [r2]
 119:lvgl/src/draw/sw/lv_draw_sw_letter.c ****        gpos.x > draw_ctx->clip_area->x2 ||
 875              		.loc 1 119 7 view .LVU313
 876 006a B842     		cmp	r0, r7
 877 006c 0CDB     		blt	.L49
 120:lvgl/src/draw/sw/lv_draw_sw_letter.c ****        gpos.y + g.box_h < draw_ctx->clip_area->y1 ||
 878              		.loc 1 120 36 view .LVU314
 879 006e B2F90400 		ldrsh	r0, [r2, #4]
 119:lvgl/src/draw/sw/lv_draw_sw_letter.c ****        gpos.x > draw_ctx->clip_area->x2 ||
 880              		.loc 1 119 51 discriminator 1 view .LVU315
 881 0072 8342     		cmp	r3, r0
 882 0074 08DC     		bgt	.L49
 121:lvgl/src/draw/sw/lv_draw_sw_letter.c ****        gpos.y > draw_ctx->clip_area->y2)  {
 883              		.loc 1 121 15 view .LVU316
 884 0076 6144     		add	r1, r1, ip
 121:lvgl/src/draw/sw/lv_draw_sw_letter.c ****        gpos.y > draw_ctx->clip_area->y2)  {
 885              		.loc 1 121 46 view .LVU317
 886 0078 B2F90230 		ldrsh	r3, [r2, #2]
 120:lvgl/src/draw/sw/lv_draw_sw_letter.c ****        gpos.y + g.box_h < draw_ctx->clip_area->y1 ||
 887              		.loc 1 120 41 view .LVU318
 888 007c 9942     		cmp	r1, r3
 889 007e 03DB     		blt	.L49
 122:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         return;
 890              		.loc 1 122 36 view .LVU319
 891 0080 B2F90630 		ldrsh	r3, [r2, #6]
 121:lvgl/src/draw/sw/lv_draw_sw_letter.c ****        gpos.y > draw_ctx->clip_area->y2)  {
 892              		.loc 1 121 51 view .LVU320
 893 0084 9C45     		cmp	ip, r3
 894 0086 01DD     		ble	.L54
 895              	.L49:
 142:lvgl/src/draw/sw/lv_draw_sw_letter.c **** 
 896              		.loc 1 142 1 view .LVU321
 897 0088 09B0     		add	sp, sp, #36
 898              	.LCFI6:
 899              		.cfi_remember_state
 900              		.cfi_def_cfa_offset 20
 901              		@ sp needed
 902 008a F0BD     		pop	{r4, r5, r6, r7, pc}
 903              	.LVL96:
 904              	.L54:
 905              	.LCFI7:
 906              		.cfi_restore_state
 126:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     if(map_p == NULL) {
 907              		.loc 1 126 5 is_stmt 1 view .LVU322
 126:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     if(map_p == NULL) {
 908              		.loc 1 126 29 is_stmt 0 view .LVU323
ARM GAS  C:\usertemp\ccuvhm44.s 			page 27


 909 008c 2946     		mov	r1, r5
 910 008e 0498     		ldr	r0, [sp, #16]
 911 0090 FFF7FEFF 		bl	lv_font_get_glyph_bitmap
 912              	.LVL97:
 127:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         LV_LOG_WARN("lv_draw_letter: character's bitmap not found");
 913              		.loc 1 127 5 is_stmt 1 view .LVU324
 127:lvgl/src/draw/sw/lv_draw_sw_letter.c ****         LV_LOG_WARN("lv_draw_letter: character's bitmap not found");
 914              		.loc 1 127 7 is_stmt 0 view .LVU325
 915 0094 0028     		cmp	r0, #0
 916 0096 F7D0     		beq	.L49
 132:lvgl/src/draw/sw/lv_draw_sw_letter.c **** #if LV_DRAW_COMPLEX && LV_USE_FONT_SUBPX
 917              		.loc 1 132 5 is_stmt 1 view .LVU326
 132:lvgl/src/draw/sw/lv_draw_sw_letter.c **** #if LV_DRAW_COMPLEX && LV_USE_FONT_SUBPX
 918              		.loc 1 132 9 is_stmt 0 view .LVU327
 919 0098 049B     		ldr	r3, [sp, #16]
 132:lvgl/src/draw/sw/lv_draw_sw_letter.c **** #if LV_DRAW_COMPLEX && LV_USE_FONT_SUBPX
 920              		.loc 1 132 8 view .LVU328
 921 009a 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 132:lvgl/src/draw/sw/lv_draw_sw_letter.c **** #if LV_DRAW_COMPLEX && LV_USE_FONT_SUBPX
 922              		.loc 1 132 7 view .LVU329
 923 009c 13F0030F 		tst	r3, #3
 924 00a0 F2D1     		bne	.L49
 140:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     }
 925              		.loc 1 140 9 is_stmt 1 view .LVU330
 926 00a2 0090     		str	r0, [sp]
 927 00a4 04AB     		add	r3, sp, #16
 928 00a6 03AA     		add	r2, sp, #12
 929 00a8 2146     		mov	r1, r4
 930 00aa 3046     		mov	r0, r6
 931              	.LVL98:
 140:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     }
 932              		.loc 1 140 9 is_stmt 0 view .LVU331
 933 00ac FFF7FEFF 		bl	draw_letter_normal
 934              	.LVL99:
 140:lvgl/src/draw/sw/lv_draw_sw_letter.c ****     }
 935              		.loc 1 140 9 view .LVU332
 936 00b0 EAE7     		b	.L49
 937              		.cfi_endproc
 938              	.LFE156:
 940              		.section	.bss.opa_table.0,"aw",%nobits
 941              		.align	2
 944              	opa_table.0:
 945 0000 00000000 		.space	256
 945      00000000 
 945      00000000 
 945      00000000 
 945      00000000 
 946              		.section	.bss.prev_bpp.1,"aw",%nobits
 947              		.align	2
 950              	prev_bpp.1:
 951 0000 00000000 		.space	4
 952              		.section	.bss.prev_opa.2,"aw",%nobits
 955              	prev_opa.2:
 956 0000 00       		.space	1
 957              		.global	_lv_bpp8_opa_table
 958              		.section	.rodata._lv_bpp8_opa_table,"a"
 959              		.align	2
ARM GAS  C:\usertemp\ccuvhm44.s 			page 28


 962              	_lv_bpp8_opa_table:
 963 0000 00010203 		.ascii	"\000\001\002\003\004\005\006\007\010\011\012\013\014"
 963      04050607 
 963      08090A0B 
 963      0C
 964 000d 0D0E0F10 		.ascii	"\015\016\017\020\021\022\023\024\025\026\027\030\031"
 964      11121314 
 964      15161718 
 964      19
 965 001a 1A1B1C1D 		.ascii	"\032\033\034\035\036\037 !\"#$%&'()*+,-./0123456789"
 965      1E1F2021 
 965      22232425 
 965      26272829 
 965      2A2B2C2D 
 966 003a 3A3B3C3D 		.ascii	":;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijk"
 966      3E3F4041 
 966      42434445 
 966      46474849 
 966      4A4B4C4D 
 967 006c 6C6D6E6F 		.ascii	"lmnopqrstuvwxyz{|}~\177\200\201\202\203\204\205\206"
 967      70717273 
 967      74757677 
 967      78797A7B 
 967      7C7D7E7F 
 968 0087 8788898A 		.ascii	"\207\210\211\212\213\214\215\216\217\220\221\222\223"
 968      8B8C8D8E 
 968      8F909192 
 968      93
 969 0094 94959697 		.ascii	"\224\225\226\227\230\231\232\233\234\235\236\237\240"
 969      98999A9B 
 969      9C9D9E9F 
 969      A0
 970 00a1 A1A2A3A4 		.ascii	"\241\242\243\244\245\246\247\250\251\252\253\254\255"
 970      A5A6A7A8 
 970      A9AAABAC 
 970      AD
 971 00ae AEAFB0B1 		.ascii	"\256\257\260\261\262\263\264\265\266\267\270\271\272"
 971      B2B3B4B5 
 971      B6B7B8B9 
 971      BA
 972 00bb BBBCBDBE 		.ascii	"\273\274\275\276\277\300\301\302\303\304\305\306\307"
 972      BFC0C1C2 
 972      C3C4C5C6 
 972      C7
 973 00c8 C8C9CACB 		.ascii	"\310\311\312\313\314\315\316\317\320\321\322\323\324"
 973      CCCDCECF 
 973      D0D1D2D3 
 973      D4
 974 00d5 D5D6D7D8 		.ascii	"\325\326\327\330\331\332\333\334\335\336\337\340\341"
 974      D9DADBDC 
 974      DDDEDFE0 
 974      E1
 975 00e2 E2E3E4E5 		.ascii	"\342\343\344\345\346\347\350\351\352\353\354\355\356"
 975      E6E7E8E9 
 975      EAEBECED 
 975      EE
 976 00ef EFF0F1F2 		.ascii	"\357\360\361\362\363\364\365\366\367\370\371\372\373"
ARM GAS  C:\usertemp\ccuvhm44.s 			page 29


 976      F3F4F5F6 
 976      F7F8F9FA 
 976      FB
 977 00fc FCFDFEFF 		.ascii	"\374\375\376\377"
 978              		.global	_lv_bpp4_opa_table
 979              		.section	.rodata._lv_bpp4_opa_table,"a"
 980              		.align	2
 983              	_lv_bpp4_opa_table:
 984 0000 00112233 		.ascii	"\000\021\"3DUfw\210\231\252\273\314\335\356\377"
 984      44556677 
 984      8899AABB 
 984      CCDDEEFF 
 985              		.global	_lv_bpp3_opa_table
 986              		.section	.rodata._lv_bpp3_opa_table,"a"
 987              		.align	2
 990              	_lv_bpp3_opa_table:
 991 0000 0024496D 		.ascii	"\000$Im\222\266\333\377"
 991      92B6DBFF 
 992              		.global	_lv_bpp2_opa_table
 993              		.section	.rodata._lv_bpp2_opa_table,"a"
 994              		.align	2
 997              	_lv_bpp2_opa_table:
 998 0000 0055AAFF 		.ascii	"\000U\252\377"
 999              		.global	_lv_bpp1_opa_table
 1000              		.section	.rodata._lv_bpp1_opa_table,"a"
 1001              		.align	2
 1004              	_lv_bpp1_opa_table:
 1005 0000 00FF     		.ascii	"\000\377"
 1006              		.text
 1007              	.Letext0:
 1008              		.file 3 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 1009              		.file 4 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 1010              		.file 5 "lvgl/src/draw/sw/../../misc/lv_types.h"
 1011              		.file 6 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/lib/gcc/arm-none
 1012              		.file 7 "lvgl/src/draw/sw/../../misc/lv_color.h"
 1013              		.file 8 "lvgl/src/draw/sw/../../misc/../font/lv_font.h"
 1014              		.file 9 "lvgl/src/draw/sw/../../misc/lv_txt.h"
 1015              		.file 10 "lvgl/src/draw/sw/../../misc/lv_bidi.h"
 1016              		.file 11 "lvgl/src/draw/sw/../../misc/lv_style.h"
 1017              		.file 12 "lvgl/src/draw/sw/../lv_draw_mask.h"
 1018              		.file 13 "lvgl/src/draw/sw/lv_draw_sw_blend.h"
 1019              		.file 14 "lvgl/src/draw/sw/../lv_img_buf.h"
 1020              		.file 15 "lvgl/src/draw/sw/../../core/lv_obj.h"
 1021              		.file 16 "lvgl/src/draw/sw/../lv_draw_rect.h"
 1022              		.file 17 "lvgl/src/draw/sw/../lv_draw_label.h"
 1023              		.file 18 "lvgl/src/draw/sw/../lv_draw_img.h"
 1024              		.file 19 "lvgl/src/draw/sw/../lv_draw_line.h"
 1025              		.file 20 "lvgl/src/draw/sw/../lv_draw_arc.h"
 1026              		.file 21 "lvgl/src/draw/sw/../lv_draw.h"
 1027              		.file 22 "lvgl/src/draw/sw/../../hal/../misc/lv_timer.h"
 1028              		.file 23 "lvgl/src/draw/sw/../../hal/lv_hal_disp.h"
 1029              		.file 24 "lvgl/src/draw/sw/../../core/lv_group.h"
 1030              		.file 25 "lvgl/src/draw/sw/../../hal/../misc/lv_ll.h"
 1031              		.file 26 "lvgl/src/draw/sw/../../core/lv_obj_scroll.h"
 1032              		.file 27 "lvgl/src/draw/sw/../../core/lv_obj_style.h"
 1033              		.file 28 "lvgl/src/draw/sw/../../core/lv_obj_class.h"
 1034              		.file 29 "lvgl/src/draw/sw/../../core/lv_event.h"
ARM GAS  C:\usertemp\ccuvhm44.s 			page 30


 1035              		.file 30 "lvgl/src/draw/sw/../../misc/lv_mem.h"
 1036              		.file 31 "lvgl/src/draw/sw/../../core/lv_refr.h"
ARM GAS  C:\usertemp\ccuvhm44.s 			page 31


DEFINED SYMBOLS
                            *ABS*:00000000 lv_draw_sw_letter.c
C:\usertemp\ccuvhm44.s:20     .text.draw_letter_normal:00000000 $t
C:\usertemp\ccuvhm44.s:25     .text.draw_letter_normal:00000000 draw_letter_normal
C:\usertemp\ccuvhm44.s:77     .text.draw_letter_normal:0000002a $d
C:\usertemp\ccuvhm44.s:85     .text.draw_letter_normal:0000003a $t
C:\usertemp\ccuvhm44.s:762    .text.draw_letter_normal:000002f4 $d
C:\usertemp\ccuvhm44.s:955    .bss.prev_opa.2:00000000 prev_opa.2
C:\usertemp\ccuvhm44.s:950    .bss.prev_bpp.1:00000000 prev_bpp.1
C:\usertemp\ccuvhm44.s:944    .bss.opa_table.0:00000000 opa_table.0
C:\usertemp\ccuvhm44.s:1004   .rodata._lv_bpp1_opa_table:00000000 _lv_bpp1_opa_table
C:\usertemp\ccuvhm44.s:983    .rodata._lv_bpp4_opa_table:00000000 _lv_bpp4_opa_table
C:\usertemp\ccuvhm44.s:962    .rodata._lv_bpp8_opa_table:00000000 _lv_bpp8_opa_table
C:\usertemp\ccuvhm44.s:997    .rodata._lv_bpp2_opa_table:00000000 _lv_bpp2_opa_table
C:\usertemp\ccuvhm44.s:773    .text.lv_draw_sw_letter:00000000 $t
C:\usertemp\ccuvhm44.s:779    .text.lv_draw_sw_letter:00000000 lv_draw_sw_letter
C:\usertemp\ccuvhm44.s:941    .bss.opa_table.0:00000000 $d
C:\usertemp\ccuvhm44.s:947    .bss.prev_bpp.1:00000000 $d
C:\usertemp\ccuvhm44.s:956    .bss.prev_opa.2:00000000 $d
C:\usertemp\ccuvhm44.s:959    .rodata._lv_bpp8_opa_table:00000000 $d
C:\usertemp\ccuvhm44.s:980    .rodata._lv_bpp4_opa_table:00000000 $d
C:\usertemp\ccuvhm44.s:990    .rodata._lv_bpp3_opa_table:00000000 _lv_bpp3_opa_table
C:\usertemp\ccuvhm44.s:987    .rodata._lv_bpp3_opa_table:00000000 $d
C:\usertemp\ccuvhm44.s:994    .rodata._lv_bpp2_opa_table:00000000 $d
C:\usertemp\ccuvhm44.s:1001   .rodata._lv_bpp1_opa_table:00000000 $d

UNDEFINED SYMBOLS
lv_memset_00
_lv_refr_get_disp_refreshing
lv_disp_get_hor_res
lv_mem_buf_get
lv_draw_mask_is_any
lv_draw_mask_apply
lv_draw_sw_blend
lv_mem_buf_release
lv_font_get_glyph_dsc
lv_font_get_glyph_bitmap
