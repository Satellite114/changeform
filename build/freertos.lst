ARM GAS  C:\usertemp\ccJaadcl.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"freertos.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Core/Src/freertos.c"
  19              		.section	.rodata.Refersh_LVGL.str1.4,"aMS",%progbits,1
  20              		.align	2
  21              	.LC6:
  22 0000 33302073 		.ascii	"30 seconds enters sleep mode\000"
  22      65636F6E 
  22      64732065 
  22      6E746572 
  22      7320736C 
  23              		.section	.text.Refersh_LVGL,"ax",%progbits
  24              		.align	1
  25              		.global	Refersh_LVGL
  26              		.syntax unified
  27              		.thumb
  28              		.thumb_func
  30              	Refersh_LVGL:
  31              	.LVL0:
  32              	.LFB601:
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****  ******************************************************************************
   4:Core/Src/freertos.c ****  * File Name          : freertos.c
   5:Core/Src/freertos.c ****  * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****  ******************************************************************************
   7:Core/Src/freertos.c ****  * @attention
   8:Core/Src/freertos.c ****  *
   9:Core/Src/freertos.c ****  * <h2><center>&copy; Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/freertos.c ****  * All rights reserved.</center></h2>
  11:Core/Src/freertos.c ****  *
  12:Core/Src/freertos.c ****  * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/freertos.c ****  * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/freertos.c ****  * the License. You may obtain a copy of the License at:
  15:Core/Src/freertos.c ****  *                             www.st.com/SLA0044
  16:Core/Src/freertos.c ****  *
  17:Core/Src/freertos.c ****  ******************************************************************************
  18:Core/Src/freertos.c ****  */
  19:Core/Src/freertos.c **** /* USER CODE END Header */
  20:Core/Src/freertos.c **** 
  21:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/freertos.c **** #include "FreeRTOS.h"
ARM GAS  C:\usertemp\ccJaadcl.s 			page 2


  23:Core/Src/freertos.c **** #include "task.h"
  24:Core/Src/freertos.c **** #include "main.h"
  25:Core/Src/freertos.c **** #include "cmsis_os.h"
  26:Core/Src/freertos.c **** 
  27:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  29:Core/Src/freertos.c **** #include "lwip/apps/httpd.h"
  30:Core/Src/freertos.c **** #include "ad7606.h"
  31:Core/Src/freertos.c **** #include "lcd.h"
  32:Core/Src/freertos.c **** #include "gui_guider.h"
  33:Core/Src/freertos.c **** #include "arm_math.h"
  34:Core/Src/freertos.c **** #include "tim.h"
  35:Core/Src/freertos.c **** #include "dsp_fft.h"
  36:Core/Src/freertos.c **** #include "lvgl.h"
  37:Core/Src/freertos.c **** #include "lv_chart.h"
  38:Core/Src/freertos.c **** #include "task.h"
  39:Core/Src/freertos.c **** #include "task_page1.h"
  40:Core/Src/freertos.c **** #include "gpio.h"
  41:Core/Src/freertos.c **** #include "sdmmc.h"
  42:Core/Src/freertos.c **** #include "events_init.h"
  43:Core/Src/freertos.c **** /* USER CODE END Includes */
  44:Core/Src/freertos.c **** 
  45:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  46:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  47:Core/Src/freertos.c **** ALIGN_32BYTES(FFT fft_1V)
  48:Core/Src/freertos.c **** __attribute__((section(".SDRAM")));
  49:Core/Src/freertos.c **** 
  50:Core/Src/freertos.c **** ALIGN_32BYTES(FFT fft_2V)
  51:Core/Src/freertos.c **** __attribute__((section(".SDRAM")));
  52:Core/Src/freertos.c **** ALIGN_32BYTES(FFT fft_3V)
  53:Core/Src/freertos.c **** __attribute__((section(".SDRAM")));
  54:Core/Src/freertos.c **** ALIGN_32BYTES(FFT fft_NV)
  55:Core/Src/freertos.c **** __attribute__((section(".SDRAM")));
  56:Core/Src/freertos.c **** 
  57:Core/Src/freertos.c **** ALIGN_32BYTES(FFT fft_1I)
  58:Core/Src/freertos.c **** __attribute__((section(".SDRAM")));
  59:Core/Src/freertos.c **** ALIGN_32BYTES(FFT fft_2I)
  60:Core/Src/freertos.c **** __attribute__((section(".SDRAM")));
  61:Core/Src/freertos.c **** ALIGN_32BYTES(FFT fft_3I)
  62:Core/Src/freertos.c **** __attribute__((section(".SDRAM")));
  63:Core/Src/freertos.c **** ALIGN_32BYTES(FFT fft_NI)
  64:Core/Src/freertos.c **** __attribute__((section(".SDRAM")));
  65:Core/Src/freertos.c **** 
  66:Core/Src/freertos.c **** ALIGN_32BYTES(phase P1)
  67:Core/Src/freertos.c **** __attribute__((section(".SDRAM")));
  68:Core/Src/freertos.c **** ALIGN_32BYTES(phase P2)
  69:Core/Src/freertos.c **** __attribute__((section(".SDRAM")));
  70:Core/Src/freertos.c **** ALIGN_32BYTES(phase P3)
  71:Core/Src/freertos.c **** __attribute__((section(".SDRAM")));
  72:Core/Src/freertos.c **** ALIGN_32BYTES(phase PN)
  73:Core/Src/freertos.c **** __attribute__((section(".SDRAM")));
  74:Core/Src/freertos.c **** 
  75:Core/Src/freertos.c **** ALIGN_32BYTES(Voltage_three Voltage)
  76:Core/Src/freertos.c **** __attribute__((section(".SDRAM")));
  77:Core/Src/freertos.c **** 
  78:Core/Src/freertos.c **** lv_chart_series_t *ser1;
  79:Core/Src/freertos.c **** lv_chart_series_t *ser2;
ARM GAS  C:\usertemp\ccJaadcl.s 			page 3


  80:Core/Src/freertos.c **** lv_chart_series_t *ser3;
  81:Core/Src/freertos.c **** lv_chart_series_t *serN;
  82:Core/Src/freertos.c **** 
  83:Core/Src/freertos.c **** lv_chart_series_t *ser1_I;
  84:Core/Src/freertos.c **** lv_chart_series_t *ser2_I;
  85:Core/Src/freertos.c **** lv_chart_series_t *ser3_I;
  86:Core/Src/freertos.c **** lv_chart_series_t *serN_I;
  87:Core/Src/freertos.c **** extern uint8_t V_I_flag;
  88:Core/Src/freertos.c **** extern uint8_t L1_flag;
  89:Core/Src/freertos.c **** extern uint8_t L2_flag;
  90:Core/Src/freertos.c **** extern uint8_t L3_flag;
  91:Core/Src/freertos.c **** extern uint8_t LN_flag;
  92:Core/Src/freertos.c **** extern uint8_t L1_I_flag;
  93:Core/Src/freertos.c **** extern uint8_t L2_I_flag;
  94:Core/Src/freertos.c **** extern uint8_t L3_I_flag;
  95:Core/Src/freertos.c **** extern uint8_t LN_I_flag;
  96:Core/Src/freertos.c **** extern AD7606Dev ad7606dev;
  97:Core/Src/freertos.c **** extern SD_HandleTypeDef hsd1;
  98:Core/Src/freertos.c **** /* USER CODE END PTD */
  99:Core/Src/freertos.c **** 
 100:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
 101:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
 102:Core/Src/freertos.c **** 
 103:Core/Src/freertos.c **** /* USER CODE END PD */
 104:Core/Src/freertos.c **** 
 105:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
 106:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
 107:Core/Src/freertos.c **** 
 108:Core/Src/freertos.c **** /* USER CODE END PM */
 109:Core/Src/freertos.c **** 
 110:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
 111:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
 112:Core/Src/freertos.c **** 
 113:Core/Src/freertos.c **** /* USER CODE END Variables */
 114:Core/Src/freertos.c **** osThreadId refersh_lvglHandle;
 115:Core/Src/freertos.c **** osThreadId task_FFTHandle;
 116:Core/Src/freertos.c **** osThreadId task_lvglHandle;
 117:Core/Src/freertos.c **** osSemaphoreId EVENT_ADCHandle;
 118:Core/Src/freertos.c **** osSemaphoreId EVENT_FFTHandle;
 119:Core/Src/freertos.c **** osSemaphoreId EVENT_LVGL_REFERSHHandle;
 120:Core/Src/freertos.c **** osSemaphoreId EVENT_LVGL_TASKHandle;
 121:Core/Src/freertos.c **** 
 122:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
 123:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
 124:Core/Src/freertos.c **** 
 125:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
 126:Core/Src/freertos.c **** 
 127:Core/Src/freertos.c **** void Refersh_LVGL(void const *argument);
 128:Core/Src/freertos.c **** void TASK_FFT(void const *argument);
 129:Core/Src/freertos.c **** void TASK_LVGL(void const *argument);
 130:Core/Src/freertos.c **** void init_form_stop();
 131:Core/Src/freertos.c **** extern void MX_LWIP_Init(void);
 132:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
 133:Core/Src/freertos.c **** 
 134:Core/Src/freertos.c **** /* GetIdleTaskMemory prototype (linked to static allocation support) */
 135:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory(StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskSt
 136:Core/Src/freertos.c **** 
ARM GAS  C:\usertemp\ccJaadcl.s 			page 4


 137:Core/Src/freertos.c **** /* Hook prototypes */
 138:Core/Src/freertos.c **** void vApplicationMallocFailedHook(void);
 139:Core/Src/freertos.c **** 
 140:Core/Src/freertos.c **** /* USER CODE BEGIN 5 */
 141:Core/Src/freertos.c **** void vApplicationMallocFailedHook(void)
 142:Core/Src/freertos.c **** {
 143:Core/Src/freertos.c ****   /* vApplicationMallocFailedHook() will only be called if
 144:Core/Src/freertos.c ****   configUSE_MALLOC_FAILED_HOOK is set to 1 in FreeRTOSConfig.h. It is a hook
 145:Core/Src/freertos.c ****   function that will get called if a call to pvPortMalloc() fails.
 146:Core/Src/freertos.c ****   pvPortMalloc() is called internally by the kernel whenever a task, queue,
 147:Core/Src/freertos.c ****   timer or semaphore is created. It is also called by various parts of the
 148:Core/Src/freertos.c ****   demo application. If heap_1.c or heap_2.c are used, then the size of the
 149:Core/Src/freertos.c ****   heap available to pvPortMalloc() is defined by configTOTAL_HEAP_SIZE in
 150:Core/Src/freertos.c ****   FreeRTOSConfig.h, and the xPortGetFreeHeapSize() API function can be used
 151:Core/Src/freertos.c ****   to query the size of free heap space that remains (although it does not
 152:Core/Src/freertos.c ****   provide information on how the remaining heap might be fragmented). */
 153:Core/Src/freertos.c ****   printf("malloc fail\r\n");
 154:Core/Src/freertos.c ****   while (1)
 155:Core/Src/freertos.c ****   {
 156:Core/Src/freertos.c **** 
 157:Core/Src/freertos.c ****     HAL_GPIO_TogglePin(PG14_GPIO_Port, PG14_Pin);
 158:Core/Src/freertos.c ****     osDelay(200);
 159:Core/Src/freertos.c ****   }
 160:Core/Src/freertos.c **** }
 161:Core/Src/freertos.c **** /* USER CODE END 5 */
 162:Core/Src/freertos.c **** 
 163:Core/Src/freertos.c **** /* USER CODE BEGIN GET_IDLE_TASK_MEMORY */
 164:Core/Src/freertos.c **** static StaticTask_t xIdleTaskTCBBuffer;
 165:Core/Src/freertos.c **** static StackType_t xIdleStack[configMINIMAL_STACK_SIZE];
 166:Core/Src/freertos.c **** 
 167:Core/Src/freertos.c **** void vApplicationGetIdleTaskMemory(StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskSt
 168:Core/Src/freertos.c **** {
 169:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 170:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 171:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 172:Core/Src/freertos.c ****   /* place for user code */
 173:Core/Src/freertos.c **** }
 174:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
 175:Core/Src/freertos.c **** 
 176:Core/Src/freertos.c **** /**
 177:Core/Src/freertos.c ****  * @brief  FreeRTOS initialization
 178:Core/Src/freertos.c ****  * @param  None
 179:Core/Src/freertos.c ****  * @retval None
 180:Core/Src/freertos.c ****  */
 181:Core/Src/freertos.c **** void MX_FREERTOS_Init(void)
 182:Core/Src/freertos.c **** {
 183:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 184:Core/Src/freertos.c **** 
 185:Core/Src/freertos.c ****   /* USER CODE END Init */
 186:Core/Src/freertos.c **** 
 187:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 188:Core/Src/freertos.c ****   /* add mutexes, ... */
 189:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
 190:Core/Src/freertos.c **** 
 191:Core/Src/freertos.c ****   /* Create the semaphores(s) */
 192:Core/Src/freertos.c ****   /* definition and creation of EVENT_ADC */
 193:Core/Src/freertos.c ****   osSemaphoreDef(EVENT_ADC);
ARM GAS  C:\usertemp\ccJaadcl.s 			page 5


 194:Core/Src/freertos.c ****   EVENT_ADCHandle = osSemaphoreCreate(osSemaphore(EVENT_ADC), 1);
 195:Core/Src/freertos.c **** 
 196:Core/Src/freertos.c ****   /* definition and creation of EVENT_FFT */
 197:Core/Src/freertos.c ****   osSemaphoreDef(EVENT_FFT);
 198:Core/Src/freertos.c ****   EVENT_FFTHandle = osSemaphoreCreate(osSemaphore(EVENT_FFT), 1);
 199:Core/Src/freertos.c **** 
 200:Core/Src/freertos.c ****   /* definition and creation of EVENT_LVGL_REFERSH */
 201:Core/Src/freertos.c ****   osSemaphoreDef(EVENT_LVGL_REFERSH);
 202:Core/Src/freertos.c ****   EVENT_LVGL_REFERSHHandle = osSemaphoreCreate(osSemaphore(EVENT_LVGL_REFERSH), 1);
 203:Core/Src/freertos.c **** 
 204:Core/Src/freertos.c ****   /* definition and creation of EVENT_LVGL_TASK */
 205:Core/Src/freertos.c ****   osSemaphoreDef(EVENT_LVGL_TASK);
 206:Core/Src/freertos.c ****   EVENT_LVGL_TASKHandle = osSemaphoreCreate(osSemaphore(EVENT_LVGL_TASK), 1);
 207:Core/Src/freertos.c **** 
 208:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 209:Core/Src/freertos.c ****   /* add semaphores, ... */
 210:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 211:Core/Src/freertos.c **** 
 212:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 213:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
 214:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 215:Core/Src/freertos.c **** 
 216:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 217:Core/Src/freertos.c ****   /* add queues, ... */
 218:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 219:Core/Src/freertos.c **** 
 220:Core/Src/freertos.c ****   /* Create the thread(s) */
 221:Core/Src/freertos.c ****   /* definition and creation of refersh_lvgl */
 222:Core/Src/freertos.c ****   osThreadDef(refersh_lvgl, Refersh_LVGL, osPriorityAboveNormal, 0, 1024);
 223:Core/Src/freertos.c ****   refersh_lvglHandle = osThreadCreate(osThread(refersh_lvgl), NULL);
 224:Core/Src/freertos.c **** 
 225:Core/Src/freertos.c ****   /* definition and creation of task_FFT */
 226:Core/Src/freertos.c ****   osThreadDef(task_FFT, TASK_FFT, osPriorityNormal, 0, 1300);
 227:Core/Src/freertos.c ****   task_FFTHandle = osThreadCreate(osThread(task_FFT), NULL);
 228:Core/Src/freertos.c **** 
 229:Core/Src/freertos.c ****   /* definition and creation of task_lvgl */
 230:Core/Src/freertos.c ****   osThreadDef(task_lvgl, TASK_LVGL, osPriorityNormal, 0, 1300);
 231:Core/Src/freertos.c ****   task_lvglHandle = osThreadCreate(osThread(task_lvgl), NULL);
 232:Core/Src/freertos.c **** 
 233:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 234:Core/Src/freertos.c ****   /* add threads, ... */
 235:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 236:Core/Src/freertos.c **** }
 237:Core/Src/freertos.c **** 
 238:Core/Src/freertos.c **** /* USER CODE BEGIN Header_Refersh_LVGL */
 239:Core/Src/freertos.c **** /**
 240:Core/Src/freertos.c ****  * @brief  Function implementing the refersh_lvgl thread.
 241:Core/Src/freertos.c ****  * @param  argument: Not used
 242:Core/Src/freertos.c ****  * @retval None
 243:Core/Src/freertos.c ****  */
 244:Core/Src/freertos.c **** /* USER CODE END Header_Refersh_LVGL */
 245:Core/Src/freertos.c **** void Refersh_LVGL(void const *argument)
 246:Core/Src/freertos.c **** {
  33              		.loc 1 246 1 view -0
  34              		.cfi_startproc
  35              		@ Volatile: function does not return.
  36              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\usertemp\ccJaadcl.s 			page 6


  37              		@ frame_needed = 0, uses_anonymous_args = 0
  38              		.loc 1 246 1 is_stmt 0 view .LVU1
  39 0000 2DE98848 		push	{r3, r7, fp, lr}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 16
  42              		.cfi_offset 3, -16
  43              		.cfi_offset 7, -12
  44              		.cfi_offset 11, -8
  45              		.cfi_offset 14, -4
 247:Core/Src/freertos.c ****   /* init code for LWIP */
 248:Core/Src/freertos.c ****   MX_LWIP_Init();
  46              		.loc 1 248 3 is_stmt 1 view .LVU2
  47 0004 FFF7FEFF 		bl	MX_LWIP_Init
  48              	.LVL1:
 249:Core/Src/freertos.c ****   /* USER CODE BEGIN Refersh_LVGL */
 250:Core/Src/freertos.c ****   httpd_init();
  49              		.loc 1 250 3 view .LVU3
  50 0008 FFF7FEFF 		bl	httpd_init
  51              	.LVL2:
 251:Core/Src/freertos.c ****   FFT_Init(&fft_1V, SAMPLING, FFT_LENGTH, 1); // 1表示电压
  52              		.loc 1 251 3 view .LVU4
  53 000c DFF82CA1 		ldr	r10, .L5+36
  54 0010 0123     		movs	r3, #1
  55 0012 4FF40062 		mov	r2, #2048
  56 0016 4FF44851 		mov	r1, #12800
  57 001a 5046     		mov	r0, r10
  58 001c FFF7FEFF 		bl	FFT_Init
  59              	.LVL3:
 252:Core/Src/freertos.c ****   FFT_Init(&fft_2V, SAMPLING, FFT_LENGTH, 1);
  60              		.loc 1 252 3 view .LVU5
  61 0020 DFF81C81 		ldr	r8, .L5+40
  62 0024 0123     		movs	r3, #1
  63 0026 4FF40062 		mov	r2, #2048
  64 002a 4FF44851 		mov	r1, #12800
  65 002e 4046     		mov	r0, r8
  66 0030 FFF7FEFF 		bl	FFT_Init
  67              	.LVL4:
 253:Core/Src/freertos.c ****   FFT_Init(&fft_3V, SAMPLING, FFT_LENGTH, 1);
  68              		.loc 1 253 3 view .LVU6
  69 0034 384E     		ldr	r6, .L5
  70 0036 0123     		movs	r3, #1
  71 0038 4FF40062 		mov	r2, #2048
  72 003c 4FF44851 		mov	r1, #12800
  73 0040 3046     		mov	r0, r6
  74 0042 FFF7FEFF 		bl	FFT_Init
  75              	.LVL5:
 254:Core/Src/freertos.c ****   FFT_Init(&fft_NV, SAMPLING, FFT_LENGTH, 1);
  76              		.loc 1 254 3 view .LVU7
  77 0046 354C     		ldr	r4, .L5+4
  78 0048 0123     		movs	r3, #1
  79 004a 4FF40062 		mov	r2, #2048
  80 004e 4FF44851 		mov	r1, #12800
  81 0052 2046     		mov	r0, r4
  82 0054 FFF7FEFF 		bl	FFT_Init
  83              	.LVL6:
 255:Core/Src/freertos.c **** 
 256:Core/Src/freertos.c ****   FFT_Init(&fft_1I, SAMPLING, FFT_LENGTH, 0); // 0表示电流
ARM GAS  C:\usertemp\ccJaadcl.s 			page 7


  84              		.loc 1 256 3 view .LVU8
  85 0058 DFF8E8B0 		ldr	fp, .L5+44
  86 005c 0023     		movs	r3, #0
  87 005e 4FF40062 		mov	r2, #2048
  88 0062 4FF44851 		mov	r1, #12800
  89 0066 5846     		mov	r0, fp
  90 0068 FFF7FEFF 		bl	FFT_Init
  91              	.LVL7:
 257:Core/Src/freertos.c ****   FFT_Init(&fft_2I, SAMPLING, FFT_LENGTH, 0);
  92              		.loc 1 257 3 view .LVU9
  93 006c DFF8D890 		ldr	r9, .L5+48
  94 0070 0023     		movs	r3, #0
  95 0072 4FF40062 		mov	r2, #2048
  96 0076 4FF44851 		mov	r1, #12800
  97 007a 4846     		mov	r0, r9
  98 007c FFF7FEFF 		bl	FFT_Init
  99              	.LVL8:
 258:Core/Src/freertos.c ****   FFT_Init(&fft_3I, SAMPLING, FFT_LENGTH, 0);
 100              		.loc 1 258 3 view .LVU10
 101 0080 274F     		ldr	r7, .L5+8
 102 0082 0023     		movs	r3, #0
 103 0084 4FF40062 		mov	r2, #2048
 104 0088 4FF44851 		mov	r1, #12800
 105 008c 3846     		mov	r0, r7
 106 008e FFF7FEFF 		bl	FFT_Init
 107              	.LVL9:
 259:Core/Src/freertos.c ****   FFT_Init(&fft_NI, SAMPLING, FFT_LENGTH, 0);
 108              		.loc 1 259 3 view .LVU11
 109 0092 244D     		ldr	r5, .L5+12
 110 0094 0023     		movs	r3, #0
 111 0096 4FF40062 		mov	r2, #2048
 112 009a 4FF44851 		mov	r1, #12800
 113 009e 2846     		mov	r0, r5
 114 00a0 FFF7FEFF 		bl	FFT_Init
 115              	.LVL10:
 260:Core/Src/freertos.c **** 
 261:Core/Src/freertos.c ****   PHASE_Init(&P1, &fft_1V, &fft_1I);
 116              		.loc 1 261 3 view .LVU12
 117 00a4 5A46     		mov	r2, fp
 118 00a6 5146     		mov	r1, r10
 119 00a8 1F48     		ldr	r0, .L5+16
 120 00aa FFF7FEFF 		bl	PHASE_Init
 121              	.LVL11:
 262:Core/Src/freertos.c ****   PHASE_Init(&P2, &fft_2V, &fft_2I);
 122              		.loc 1 262 3 view .LVU13
 123 00ae DFF89CA0 		ldr	r10, .L5+52
 124 00b2 4A46     		mov	r2, r9
 125 00b4 4146     		mov	r1, r8
 126 00b6 5046     		mov	r0, r10
 127 00b8 FFF7FEFF 		bl	PHASE_Init
 128              	.LVL12:
 263:Core/Src/freertos.c ****   PHASE_Init(&P3, &fft_3V, &fft_3I);
 129              		.loc 1 263 3 view .LVU14
 130 00bc DFF89080 		ldr	r8, .L5+56
 131 00c0 3A46     		mov	r2, r7
 132 00c2 3146     		mov	r1, r6
 133 00c4 4046     		mov	r0, r8
ARM GAS  C:\usertemp\ccJaadcl.s 			page 8


 134 00c6 FFF7FEFF 		bl	PHASE_Init
 135              	.LVL13:
 264:Core/Src/freertos.c ****   PHASE_Init(&PN, &fft_NV, &fft_NI);
 136              		.loc 1 264 3 view .LVU15
 137 00ca 2A46     		mov	r2, r5
 138 00cc 2146     		mov	r1, r4
 139 00ce 1748     		ldr	r0, .L5+20
 140 00d0 FFF7FEFF 		bl	PHASE_Init
 141              	.LVL14:
 265:Core/Src/freertos.c **** 
 266:Core/Src/freertos.c ****   Voltage_three_Init(&Voltage, &P1, &P2, &P3);
 142              		.loc 1 266 3 view .LVU16
 143 00d4 4346     		mov	r3, r8
 144 00d6 5246     		mov	r2, r10
 145 00d8 1349     		ldr	r1, .L5+16
 146 00da 1548     		ldr	r0, .L5+24
 147 00dc FFF7FEFF 		bl	Voltage_three_Init
 148              	.LVL15:
 149 00e0 02E0     		b	.L3
 150              	.L2:
 267:Core/Src/freertos.c ****   /* Infinite loop */
 268:Core/Src/freertos.c ****   for (;;)
 269:Core/Src/freertos.c ****   {
 270:Core/Src/freertos.c **** 
 271:Core/Src/freertos.c ****     // test
 272:Core/Src/freertos.c **** 
 273:Core/Src/freertos.c ****     if (lv_disp_get_inactive_time(NULL) < 60000)
 274:Core/Src/freertos.c ****     {
 275:Core/Src/freertos.c ****       lv_task_handler();
 276:Core/Src/freertos.c ****       if(lv_disp_get_inactive_time(NULL) > 30000)
 277:Core/Src/freertos.c ****       {
 278:Core/Src/freertos.c ****         msg_notice(guider_ui.wave_model_msg, 30000, "30 seconds enters sleep mode");
 279:Core/Src/freertos.c ****       }
 280:Core/Src/freertos.c ****     }
 281:Core/Src/freertos.c ****     /*Sleep after 60 sec inactivity*/
 282:Core/Src/freertos.c ****     else
 283:Core/Src/freertos.c ****     {
 284:Core/Src/freertos.c ****       // // while (!lv_anim_count_running())
 285:Core/Src/freertos.c ****       // //   ;
 286:Core/Src/freertos.c ****       // 允许外设唤醒系统
 287:Core/Src/freertos.c ****       // HAL_SuspendTick(); // 关闭 SysTick 定时器（防止唤醒）
 288:Core/Src/freertos.c **** 
 289:Core/Src/freertos.c ****       // GPIO_InitTypeDef GPIO_InitStruct = {0};
 290:Core/Src/freertos.c ****       // GPIO_InitStruct.Pin = SKEY_Pin;
 291:Core/Src/freertos.c ****       // GPIO_InitStruct.Mode = GPIO_MODE_EVT_FALLING;
 292:Core/Src/freertos.c ****       // GPIO_InitStruct.Pull = GPIO_PULLUP;
 293:Core/Src/freertos.c ****       // HAL_GPIO_Init(SKEY_GPIO_Port, &GPIO_InitStruct);
 294:Core/Src/freertos.c ****       // Display_OFF();
 295:Core/Src/freertos.c ****       // // 进入 Stop 模式
 296:Core/Src/freertos.c ****       // HAL_PWR_EnterSTOPMode(PWR_MAINREGULATOR_ON, PWR_SLEEPENTRY_WFI);
 297:Core/Src/freertos.c ****     }
 151              		.loc 1 297 5 view .LVU17
 298:Core/Src/freertos.c ****     osDelay(30);
 152              		.loc 1 298 5 view .LVU18
 153 00e2 1E20     		movs	r0, #30
 154 00e4 FFF7FEFF 		bl	osDelay
 155              	.LVL16:
ARM GAS  C:\usertemp\ccJaadcl.s 			page 9


 268:Core/Src/freertos.c ****   {
 156              		.loc 1 268 3 view .LVU19
 157              	.L3:
 268:Core/Src/freertos.c ****   {
 158              		.loc 1 268 3 view .LVU20
 273:Core/Src/freertos.c ****     {
 159              		.loc 1 273 5 view .LVU21
 273:Core/Src/freertos.c ****     {
 160              		.loc 1 273 9 is_stmt 0 view .LVU22
 161 00e8 0020     		movs	r0, #0
 162 00ea FFF7FEFF 		bl	lv_disp_get_inactive_time
 163              	.LVL17:
 273:Core/Src/freertos.c ****     {
 164              		.loc 1 273 8 discriminator 1 view .LVU23
 165 00ee 4EF65F23 		movw	r3, #59999
 166 00f2 9842     		cmp	r0, r3
 167 00f4 F5D8     		bhi	.L2
 275:Core/Src/freertos.c ****       if(lv_disp_get_inactive_time(NULL) > 30000)
 168              		.loc 1 275 7 is_stmt 1 view .LVU24
 169              	.LBB10:
 170              	.LBI10:
 171              		.file 2 "lvgl/src/lv_api_map.h"
   1:lvgl/src/lv_api_map.h **** /**
   2:lvgl/src/lv_api_map.h ****  * @file lv_api_map.h
   3:lvgl/src/lv_api_map.h ****  *
   4:lvgl/src/lv_api_map.h ****  */
   5:lvgl/src/lv_api_map.h **** 
   6:lvgl/src/lv_api_map.h **** #ifndef LV_API_MAP_H
   7:lvgl/src/lv_api_map.h **** #define LV_API_MAP_H
   8:lvgl/src/lv_api_map.h **** 
   9:lvgl/src/lv_api_map.h **** #ifdef __cplusplus
  10:lvgl/src/lv_api_map.h **** extern "C" {
  11:lvgl/src/lv_api_map.h **** #endif
  12:lvgl/src/lv_api_map.h **** 
  13:lvgl/src/lv_api_map.h **** /*********************
  14:lvgl/src/lv_api_map.h ****  *      INCLUDES
  15:lvgl/src/lv_api_map.h ****  *********************/
  16:lvgl/src/lv_api_map.h **** #include "../lvgl.h"
  17:lvgl/src/lv_api_map.h **** 
  18:lvgl/src/lv_api_map.h **** /*********************
  19:lvgl/src/lv_api_map.h ****  *      DEFINES
  20:lvgl/src/lv_api_map.h ****  *********************/
  21:lvgl/src/lv_api_map.h **** 
  22:lvgl/src/lv_api_map.h **** #define LV_NO_TASK_READY        LV_NO_TIMER_READY
  23:lvgl/src/lv_api_map.h **** #define LV_INDEV_STATE_REL      LV_INDEV_STATE_RELEASED
  24:lvgl/src/lv_api_map.h **** #define LV_INDEV_STATE_PR       LV_INDEV_STATE_PRESSED
  25:lvgl/src/lv_api_map.h **** #define LV_OBJ_FLAG_SNAPABLE    LV_OBJ_FLAG_SNAPPABLE   /*Fixed typo*/
  26:lvgl/src/lv_api_map.h **** 
  27:lvgl/src/lv_api_map.h **** /**********************
  28:lvgl/src/lv_api_map.h ****  *      TYPEDEFS
  29:lvgl/src/lv_api_map.h ****  **********************/
  30:lvgl/src/lv_api_map.h **** 
  31:lvgl/src/lv_api_map.h **** /**********************
  32:lvgl/src/lv_api_map.h ****  * GLOBAL PROTOTYPES
  33:lvgl/src/lv_api_map.h ****  **********************/
  34:lvgl/src/lv_api_map.h **** 
  35:lvgl/src/lv_api_map.h **** static inline LV_ATTRIBUTE_TIMER_HANDLER uint32_t lv_task_handler(void)
ARM GAS  C:\usertemp\ccJaadcl.s 			page 10


 172              		.loc 2 35 51 view .LVU25
 173              	.LBB11:
  36:lvgl/src/lv_api_map.h **** {
  37:lvgl/src/lv_api_map.h ****     return lv_timer_handler();
 174              		.loc 2 37 5 view .LVU26
 175              		.loc 2 37 12 is_stmt 0 view .LVU27
 176 00f6 FFF7FEFF 		bl	lv_timer_handler
 177              	.LVL18:
 178              	.LBE11:
 179              	.LBE10:
 276:Core/Src/freertos.c ****       {
 180              		.loc 1 276 7 is_stmt 1 view .LVU28
 276:Core/Src/freertos.c ****       {
 181              		.loc 1 276 10 is_stmt 0 view .LVU29
 182 00fa 0020     		movs	r0, #0
 183 00fc FFF7FEFF 		bl	lv_disp_get_inactive_time
 184              	.LVL19:
 276:Core/Src/freertos.c ****       {
 185              		.loc 1 276 9 discriminator 1 view .LVU30
 186 0100 47F23053 		movw	r3, #30000
 187 0104 9842     		cmp	r0, r3
 188 0106 ECD9     		bls	.L2
 278:Core/Src/freertos.c ****       }
 189              		.loc 1 278 9 is_stmt 1 view .LVU31
 190 0108 0A4A     		ldr	r2, .L5+28
 191 010a 1946     		mov	r1, r3
 192 010c 0A4B     		ldr	r3, .L5+32
 193 010e D3F8E400 		ldr	r0, [r3, #228]
 194 0112 FFF7FEFF 		bl	msg_notice
 195              	.LVL20:
 196 0116 E4E7     		b	.L2
 197              	.L6:
 198              		.align	2
 199              	.L5:
 200 0118 00000000 		.word	fft_3V
 201 011c 00000000 		.word	fft_NV
 202 0120 00000000 		.word	fft_3I
 203 0124 00000000 		.word	fft_NI
 204 0128 00000000 		.word	P1
 205 012c 00000000 		.word	PN
 206 0130 00000000 		.word	Voltage
 207 0134 00000000 		.word	.LC6
 208 0138 00000000 		.word	guider_ui
 209 013c 00000000 		.word	fft_1V
 210 0140 00000000 		.word	fft_2V
 211 0144 00000000 		.word	fft_1I
 212 0148 00000000 		.word	fft_2I
 213 014c 00000000 		.word	P2
 214 0150 00000000 		.word	P3
 215              		.cfi_endproc
 216              	.LFE601:
 218              		.section	.text.TASK_FFT,"ax",%progbits
 219              		.align	1
 220              		.global	TASK_FFT
 221              		.syntax unified
 222              		.thumb
 223              		.thumb_func
ARM GAS  C:\usertemp\ccJaadcl.s 			page 11


 225              	TASK_FFT:
 226              	.LVL21:
 227              	.LFB602:
 299:Core/Src/freertos.c ****   }
 300:Core/Src/freertos.c ****   /* USER CODE END Refersh_LVGL */
 301:Core/Src/freertos.c **** }
 302:Core/Src/freertos.c **** 
 303:Core/Src/freertos.c **** /* USER CODE BEGIN Header_TASK_FFT */
 304:Core/Src/freertos.c **** /**
 305:Core/Src/freertos.c ****  * @brief Function implementing the task_FFT thread.
 306:Core/Src/freertos.c ****  * @param argument: Not used
 307:Core/Src/freertos.c ****  * @retval None
 308:Core/Src/freertos.c ****  */
 309:Core/Src/freertos.c **** /* USER CODE END Header_TASK_FFT */
 310:Core/Src/freertos.c **** void TASK_FFT(void const *argument)
 311:Core/Src/freertos.c **** {
 228              		.loc 1 311 1 view -0
 229              		.cfi_startproc
 230              		@ Volatile: function does not return.
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		.loc 1 311 1 is_stmt 0 view .LVU33
 234 0000 08B5     		push	{r3, lr}
 235              	.LCFI1:
 236              		.cfi_def_cfa_offset 8
 237              		.cfi_offset 3, -8
 238              		.cfi_offset 14, -4
 312:Core/Src/freertos.c ****   /* USER CODE BEGIN TASK_FFT */
 313:Core/Src/freertos.c ****   HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 239              		.loc 1 313 3 is_stmt 1 view .LVU34
 240 0002 2820     		movs	r0, #40
 241              	.LVL22:
 242              		.loc 1 313 3 is_stmt 0 view .LVU35
 243 0004 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 244              	.LVL23:
 245              	.L8:
 314:Core/Src/freertos.c ****   //HAL_TIMEx_PWMN_Start(&htim8, TIM_CHANNEL_3);
 315:Core/Src/freertos.c ****   /* Infinite loop */
 316:Core/Src/freertos.c ****   for (;;)
 246              		.loc 1 316 3 is_stmt 1 view .LVU36
 317:Core/Src/freertos.c ****   {
 318:Core/Src/freertos.c ****     fft_run(&fft_1V);
 247              		.loc 1 318 5 view .LVU37
 248 0008 1548     		ldr	r0, .L10
 249 000a FFF7FEFF 		bl	fft_run
 250              	.LVL24:
 319:Core/Src/freertos.c ****     fft_run(&fft_2V);
 251              		.loc 1 319 5 view .LVU38
 252 000e 1548     		ldr	r0, .L10+4
 253 0010 FFF7FEFF 		bl	fft_run
 254              	.LVL25:
 320:Core/Src/freertos.c ****     fft_run(&fft_3V);
 255              		.loc 1 320 5 view .LVU39
 256 0014 1448     		ldr	r0, .L10+8
 257 0016 FFF7FEFF 		bl	fft_run
 258              	.LVL26:
 321:Core/Src/freertos.c ****     fft_run(&fft_NV);
ARM GAS  C:\usertemp\ccJaadcl.s 			page 12


 259              		.loc 1 321 5 view .LVU40
 260 001a 1448     		ldr	r0, .L10+12
 261 001c FFF7FEFF 		bl	fft_run
 262              	.LVL27:
 322:Core/Src/freertos.c **** 
 323:Core/Src/freertos.c ****     fft_run(&fft_1I);
 263              		.loc 1 323 5 view .LVU41
 264 0020 1348     		ldr	r0, .L10+16
 265 0022 FFF7FEFF 		bl	fft_run
 266              	.LVL28:
 324:Core/Src/freertos.c ****     fft_run(&fft_2I);
 267              		.loc 1 324 5 view .LVU42
 268 0026 1348     		ldr	r0, .L10+20
 269 0028 FFF7FEFF 		bl	fft_run
 270              	.LVL29:
 325:Core/Src/freertos.c ****     fft_run(&fft_3I);
 271              		.loc 1 325 5 view .LVU43
 272 002c 1248     		ldr	r0, .L10+24
 273 002e FFF7FEFF 		bl	fft_run
 274              	.LVL30:
 326:Core/Src/freertos.c ****     fft_run(&fft_NI);
 275              		.loc 1 326 5 view .LVU44
 276 0032 1248     		ldr	r0, .L10+28
 277 0034 FFF7FEFF 		bl	fft_run
 278              	.LVL31:
 327:Core/Src/freertos.c **** 
 328:Core/Src/freertos.c ****     PHASE_run(&P1);
 279              		.loc 1 328 5 view .LVU45
 280 0038 1148     		ldr	r0, .L10+32
 281 003a FFF7FEFF 		bl	PHASE_run
 282              	.LVL32:
 329:Core/Src/freertos.c ****     PHASE_run(&P2);
 283              		.loc 1 329 5 view .LVU46
 284 003e 1148     		ldr	r0, .L10+36
 285 0040 FFF7FEFF 		bl	PHASE_run
 286              	.LVL33:
 330:Core/Src/freertos.c ****     PHASE_run(&P3);
 287              		.loc 1 330 5 view .LVU47
 288 0044 1048     		ldr	r0, .L10+40
 289 0046 FFF7FEFF 		bl	PHASE_run
 290              	.LVL34:
 331:Core/Src/freertos.c ****     PHASE_run(&PN);
 291              		.loc 1 331 5 view .LVU48
 292 004a 1048     		ldr	r0, .L10+44
 293 004c FFF7FEFF 		bl	PHASE_run
 294              	.LVL35:
 332:Core/Src/freertos.c **** 
 333:Core/Src/freertos.c ****     Voltage_three_run(&Voltage);
 295              		.loc 1 333 5 view .LVU49
 296 0050 0F48     		ldr	r0, .L10+48
 297 0052 FFF7FEFF 		bl	Voltage_three_run
 298              	.LVL36:
 334:Core/Src/freertos.c ****    // HAL_TIMEx_PWMN_Start(&htim8, TIM_CHANNEL_3);
 335:Core/Src/freertos.c ****     osDelay(100);
 299              		.loc 1 335 5 discriminator 1 view .LVU50
 300 0056 6420     		movs	r0, #100
 301 0058 FFF7FEFF 		bl	osDelay
ARM GAS  C:\usertemp\ccJaadcl.s 			page 13


 302              	.LVL37:
 316:Core/Src/freertos.c ****   {
 303              		.loc 1 316 3 view .LVU51
 304 005c D4E7     		b	.L8
 305              	.L11:
 306 005e 00BF     		.align	2
 307              	.L10:
 308 0060 00000000 		.word	fft_1V
 309 0064 00000000 		.word	fft_2V
 310 0068 00000000 		.word	fft_3V
 311 006c 00000000 		.word	fft_NV
 312 0070 00000000 		.word	fft_1I
 313 0074 00000000 		.word	fft_2I
 314 0078 00000000 		.word	fft_3I
 315 007c 00000000 		.word	fft_NI
 316 0080 00000000 		.word	P1
 317 0084 00000000 		.word	P2
 318 0088 00000000 		.word	P3
 319 008c 00000000 		.word	PN
 320 0090 00000000 		.word	Voltage
 321              		.cfi_endproc
 322              	.LFE602:
 324              		.section	.text.TASK_LVGL,"ax",%progbits
 325              		.align	1
 326              		.global	TASK_LVGL
 327              		.syntax unified
 328              		.thumb
 329              		.thumb_func
 331              	TASK_LVGL:
 332              	.LVL38:
 333              	.LFB603:
 336:Core/Src/freertos.c ****   }
 337:Core/Src/freertos.c ****   /* USER CODE END TASK_FFT */
 338:Core/Src/freertos.c **** }
 339:Core/Src/freertos.c **** 
 340:Core/Src/freertos.c **** /* USER CODE BEGIN Header_TASK_LVGL */
 341:Core/Src/freertos.c **** /**
 342:Core/Src/freertos.c ****  * @brief Function implementing the task_lvgl thread.
 343:Core/Src/freertos.c ****  * @param argument: Not used
 344:Core/Src/freertos.c ****  * @retval None
 345:Core/Src/freertos.c ****  */
 346:Core/Src/freertos.c **** /* USER CODE END Header_TASK_LVGL */
 347:Core/Src/freertos.c **** void TASK_LVGL(void const *argument)
 348:Core/Src/freertos.c **** {
 334              		.loc 1 348 1 view -0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338              		.loc 1 348 1 is_stmt 0 view .LVU53
 339 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 340              	.LCFI2:
 341              		.cfi_def_cfa_offset 40
 342              		.cfi_offset 3, -40
 343              		.cfi_offset 4, -36
 344              		.cfi_offset 5, -32
 345              		.cfi_offset 6, -28
 346              		.cfi_offset 7, -24
ARM GAS  C:\usertemp\ccJaadcl.s 			page 14


 347              		.cfi_offset 8, -20
 348              		.cfi_offset 9, -16
 349              		.cfi_offset 10, -12
 350              		.cfi_offset 11, -8
 351              		.cfi_offset 14, -4
 349:Core/Src/freertos.c ****   /* USER CODE BEGIN TASK_LVGL */
 350:Core/Src/freertos.c ****   page_init();
 352              		.loc 1 350 3 is_stmt 1 view .LVU54
 353 0004 FFF7FEFF 		bl	page_init
 354              	.LVL39:
 351:Core/Src/freertos.c ****   ser1 = lv_chart_add_series(guider_ui.wave_model_chart_2, lv_palette_main(LV_PALETTE_YELLOW), LV_C
 355              		.loc 1 351 3 view .LVU55
 356              		.loc 1 351 10 is_stmt 0 view .LVU56
 357 0008 724C     		ldr	r4, .L15
 358 000a D4F88C50 		ldr	r5, [r4, #140]
 359 000e 0C20     		movs	r0, #12
 360 0010 FFF7FEFF 		bl	lv_palette_main
 361              	.LVL40:
 362 0014 0146     		mov	r1, r0	@ movhi
 363              		.loc 1 351 10 discriminator 1 view .LVU57
 364 0016 0022     		movs	r2, #0
 365 0018 2846     		mov	r0, r5
 366 001a FFF7FEFF 		bl	lv_chart_add_series
 367              	.LVL41:
 368              		.loc 1 351 8 discriminator 2 view .LVU58
 369 001e DFF8E481 		ldr	r8, .L15+48
 370 0022 C8F80000 		str	r0, [r8]
 352:Core/Src/freertos.c ****   ser2 = lv_chart_add_series(guider_ui.wave_model_chart_2, lv_color_hex(0x00FF00), LV_CHART_AXIS_PR
 371              		.loc 1 352 3 is_stmt 1 view .LVU59
 372              	.LVL42:
 373              	.LBB12:
 374              	.LBI12:
 375              		.file 3 "lvgl/src/hal/../draw/../misc/lv_color.h"
   1:lvgl/src/hal/../draw/../misc/lv_color.h **** /**
   2:lvgl/src/hal/../draw/../misc/lv_color.h ****  * @file lv_color.h
   3:lvgl/src/hal/../draw/../misc/lv_color.h ****  *
   4:lvgl/src/hal/../draw/../misc/lv_color.h ****  */
   5:lvgl/src/hal/../draw/../misc/lv_color.h **** 
   6:lvgl/src/hal/../draw/../misc/lv_color.h **** #ifndef LV_COLOR_H
   7:lvgl/src/hal/../draw/../misc/lv_color.h **** #define LV_COLOR_H
   8:lvgl/src/hal/../draw/../misc/lv_color.h **** 
   9:lvgl/src/hal/../draw/../misc/lv_color.h **** #ifdef __cplusplus
  10:lvgl/src/hal/../draw/../misc/lv_color.h **** extern "C" {
  11:lvgl/src/hal/../draw/../misc/lv_color.h **** #endif
  12:lvgl/src/hal/../draw/../misc/lv_color.h **** 
  13:lvgl/src/hal/../draw/../misc/lv_color.h **** /*********************
  14:lvgl/src/hal/../draw/../misc/lv_color.h ****  *      INCLUDES
  15:lvgl/src/hal/../draw/../misc/lv_color.h ****  *********************/
  16:lvgl/src/hal/../draw/../misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/hal/../draw/../misc/lv_color.h **** #include "lv_assert.h"
  18:lvgl/src/hal/../draw/../misc/lv_color.h **** #include "lv_math.h"
  19:lvgl/src/hal/../draw/../misc/lv_color.h **** #include "lv_types.h"
  20:lvgl/src/hal/../draw/../misc/lv_color.h **** 
  21:lvgl/src/hal/../draw/../misc/lv_color.h **** /*Error checking*/
  22:lvgl/src/hal/../draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  23:lvgl/src/hal/../draw/../misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  24:lvgl/src/hal/../draw/../misc/lv_color.h **** #endif
ARM GAS  C:\usertemp\ccJaadcl.s 			page 15


  25:lvgl/src/hal/../draw/../misc/lv_color.h **** 
  26:lvgl/src/hal/../draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 32 && LV_COLOR_SCREEN_TRANSP != 0
  27:lvgl/src/hal/../draw/../misc/lv_color.h **** #error "LV_COLOR_SCREEN_TRANSP requires LV_COLOR_DEPTH == 32. Set it in lv_conf.h"
  28:lvgl/src/hal/../draw/../misc/lv_color.h **** #endif
  29:lvgl/src/hal/../draw/../misc/lv_color.h **** 
  30:lvgl/src/hal/../draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  31:lvgl/src/hal/../draw/../misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  32:lvgl/src/hal/../draw/../misc/lv_color.h **** #endif
  33:lvgl/src/hal/../draw/../misc/lv_color.h **** 
  34:lvgl/src/hal/../draw/../misc/lv_color.h **** #include <stdint.h>
  35:lvgl/src/hal/../draw/../misc/lv_color.h **** 
  36:lvgl/src/hal/../draw/../misc/lv_color.h **** /*********************
  37:lvgl/src/hal/../draw/../misc/lv_color.h ****  *      DEFINES
  38:lvgl/src/hal/../draw/../misc/lv_color.h ****  *********************/
  39:lvgl/src/hal/../draw/../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_DEPTH);
  40:lvgl/src/hal/../draw/../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_16_SWAP);
  41:lvgl/src/hal/../draw/../misc/lv_color.h **** 
  42:lvgl/src/hal/../draw/../misc/lv_color.h **** /**
  43:lvgl/src/hal/../draw/../misc/lv_color.h ****  * Opacity percentages.
  44:lvgl/src/hal/../draw/../misc/lv_color.h ****  */
  45:lvgl/src/hal/../draw/../misc/lv_color.h **** enum {
  46:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  47:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_OPA_0      = 0,
  48:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_OPA_10     = 25,
  49:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_OPA_20     = 51,
  50:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_OPA_30     = 76,
  51:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_OPA_40     = 102,
  52:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_OPA_50     = 127,
  53:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_OPA_60     = 153,
  54:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_OPA_70     = 178,
  55:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_OPA_80     = 204,
  56:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_OPA_90     = 229,
  57:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_OPA_100    = 255,
  58:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_OPA_COVER  = 255,
  59:lvgl/src/hal/../draw/../misc/lv_color.h **** };
  60:lvgl/src/hal/../draw/../misc/lv_color.h **** 
  61:lvgl/src/hal/../draw/../misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  62:lvgl/src/hal/../draw/../misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  63:lvgl/src/hal/../draw/../misc/lv_color.h **** 
  64:lvgl/src/hal/../draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  65:lvgl/src/hal/../draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  66:lvgl/src/hal/../draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  67:lvgl/src/hal/../draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  68:lvgl/src/hal/../draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  69:lvgl/src/hal/../draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 16
  70:lvgl/src/hal/../draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
  71:lvgl/src/hal/../draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 32
  72:lvgl/src/hal/../draw/../misc/lv_color.h **** #else
  73:lvgl/src/hal/../draw/../misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  74:lvgl/src/hal/../draw/../misc/lv_color.h **** #endif
  75:lvgl/src/hal/../draw/../misc/lv_color.h **** 
  76:lvgl/src/hal/../draw/../misc/lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  77:lvgl/src/hal/../draw/../misc/lv_color.h **** /**
  78:lvgl/src/hal/../draw/../misc/lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  79:lvgl/src/hal/../draw/../misc/lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  80:lvgl/src/hal/../draw/../misc/lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  81:lvgl/src/hal/../draw/../misc/lv_color.h **** */
ARM GAS  C:\usertemp\ccJaadcl.s 			page 16


  82:lvgl/src/hal/../draw/../misc/lv_color.h **** #ifdef _MSC_VER
  83:lvgl/src/hal/../draw/../misc/lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  84:lvgl/src/hal/../draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  85:lvgl/src/hal/../draw/../misc/lv_color.h **** #endif
  86:lvgl/src/hal/../draw/../misc/lv_color.h **** #else
  87:lvgl/src/hal/../draw/../misc/lv_color.h **** #if __cplusplus >= 201103L
  88:lvgl/src/hal/../draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  89:lvgl/src/hal/../draw/../misc/lv_color.h **** #endif
  90:lvgl/src/hal/../draw/../misc/lv_color.h **** #endif
  91:lvgl/src/hal/../draw/../misc/lv_color.h **** #endif /*__cplusplus*/
  92:lvgl/src/hal/../draw/../misc/lv_color.h **** 
  93:lvgl/src/hal/../draw/../misc/lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
  94:lvgl/src/hal/../draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
  95:lvgl/src/hal/../draw/../misc/lv_color.h **** #endif
  96:lvgl/src/hal/../draw/../misc/lv_color.h **** 
  97:lvgl/src/hal/../draw/../misc/lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
  98:lvgl/src/hal/../draw/../misc/lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
  99:lvgl/src/hal/../draw/../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
 100:lvgl/src/hal/../draw/../misc/lv_color.h **** #else
 101:lvgl/src/hal/../draw/../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
 102:lvgl/src/hal/../draw/../misc/lv_color.h **** #endif
 103:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 104:lvgl/src/hal/../draw/../misc/lv_color.h **** /*---------------------------------------
 105:lvgl/src/hal/../draw/../misc/lv_color.h ****  * Macros for all existing color depths
 106:lvgl/src/hal/../draw/../misc/lv_color.h ****  * to set/get values of the color channels
 107:lvgl/src/hal/../draw/../misc/lv_color.h ****  *------------------------------------------*/
 108:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 109:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 110:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 111:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 112:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 113:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 114:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 115:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 116:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 117:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 118:lvgl/src/hal/../draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 119:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 120:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 121:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 122:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 123:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 124:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 125:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 126:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 127:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 128:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 129:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 130:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 131:lvgl/src/hal/../draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 132:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 133:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 134:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 135:lvgl/src/hal/../draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 136:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 137:lvgl/src/hal/../draw/../misc/lv_color.h **** #else
 138:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
ARM GAS  C:\usertemp\ccJaadcl.s 			page 17


 139:lvgl/src/hal/../draw/../misc/lv_color.h **** #endif
 140:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 141:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 142:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 143:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 144:lvgl/src/hal/../draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 145:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 146:lvgl/src/hal/../draw/../misc/lv_color.h **** #else
 147:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 148:lvgl/src/hal/../draw/../misc/lv_color.h **** #endif
 149:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 150:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 151:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 152:lvgl/src/hal/../draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 153:lvgl/src/hal/../draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 154:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 155:lvgl/src/hal/../draw/../misc/lv_color.h **** #else
 156:lvgl/src/hal/../draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 157:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 158:lvgl/src/hal/../draw/../misc/lv_color.h **** #endif
 159:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 160:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 161:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 162:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 163:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 164:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 165:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 166:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 167:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 168:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 169:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 170:lvgl/src/hal/../draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 171:lvgl/src/hal/../draw/../misc/lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 172:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 173:lvgl/src/hal/../draw/../misc/lv_color.h **** /*---------------------------------------
 174:lvgl/src/hal/../draw/../misc/lv_color.h ****  * Macros for the current color depth
 175:lvgl/src/hal/../draw/../misc/lv_color.h ****  * to set/get values of the color channels
 176:lvgl/src/hal/../draw/../misc/lv_color.h ****  *------------------------------------------*/
 177:lvgl/src/hal/../draw/../misc/lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 178:lvgl/src/hal/../draw/../misc/lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 179:lvgl/src/hal/../draw/../misc/lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 180:lvgl/src/hal/../draw/../misc/lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 181:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 182:lvgl/src/hal/../draw/../misc/lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 183:lvgl/src/hal/../draw/../misc/lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 184:lvgl/src/hal/../draw/../misc/lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 185:lvgl/src/hal/../draw/../misc/lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 186:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 187:lvgl/src/hal/../draw/../misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 188:lvgl/src/hal/../draw/../misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 189:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 190:lvgl/src/hal/../draw/../misc/lv_color.h **** /**********************
 191:lvgl/src/hal/../draw/../misc/lv_color.h ****  *      TYPEDEFS
 192:lvgl/src/hal/../draw/../misc/lv_color.h ****  **********************/
 193:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 194:lvgl/src/hal/../draw/../misc/lv_color.h **** typedef union {
 195:lvgl/src/hal/../draw/../misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
ARM GAS  C:\usertemp\ccJaadcl.s 			page 18


 196:lvgl/src/hal/../draw/../misc/lv_color.h ****     union {
 197:lvgl/src/hal/../draw/../misc/lv_color.h ****         uint8_t blue : 1;
 198:lvgl/src/hal/../draw/../misc/lv_color.h ****         uint8_t green : 1;
 199:lvgl/src/hal/../draw/../misc/lv_color.h ****         uint8_t red : 1;
 200:lvgl/src/hal/../draw/../misc/lv_color.h ****     } ch;
 201:lvgl/src/hal/../draw/../misc/lv_color.h **** } lv_color1_t;
 202:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 203:lvgl/src/hal/../draw/../misc/lv_color.h **** typedef union {
 204:lvgl/src/hal/../draw/../misc/lv_color.h ****     struct {
 205:lvgl/src/hal/../draw/../misc/lv_color.h ****         uint8_t blue : 2;
 206:lvgl/src/hal/../draw/../misc/lv_color.h ****         uint8_t green : 3;
 207:lvgl/src/hal/../draw/../misc/lv_color.h ****         uint8_t red : 3;
 208:lvgl/src/hal/../draw/../misc/lv_color.h ****     } ch;
 209:lvgl/src/hal/../draw/../misc/lv_color.h ****     uint8_t full;
 210:lvgl/src/hal/../draw/../misc/lv_color.h **** } lv_color8_t;
 211:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 212:lvgl/src/hal/../draw/../misc/lv_color.h **** typedef union {
 213:lvgl/src/hal/../draw/../misc/lv_color.h ****     struct {
 214:lvgl/src/hal/../draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 215:lvgl/src/hal/../draw/../misc/lv_color.h ****         uint16_t blue : 5;
 216:lvgl/src/hal/../draw/../misc/lv_color.h ****         uint16_t green : 6;
 217:lvgl/src/hal/../draw/../misc/lv_color.h ****         uint16_t red : 5;
 218:lvgl/src/hal/../draw/../misc/lv_color.h **** #else
 219:lvgl/src/hal/../draw/../misc/lv_color.h ****         uint16_t green_h : 3;
 220:lvgl/src/hal/../draw/../misc/lv_color.h ****         uint16_t red : 5;
 221:lvgl/src/hal/../draw/../misc/lv_color.h ****         uint16_t blue : 5;
 222:lvgl/src/hal/../draw/../misc/lv_color.h ****         uint16_t green_l : 3;
 223:lvgl/src/hal/../draw/../misc/lv_color.h **** #endif
 224:lvgl/src/hal/../draw/../misc/lv_color.h ****     } ch;
 225:lvgl/src/hal/../draw/../misc/lv_color.h ****     uint16_t full;
 226:lvgl/src/hal/../draw/../misc/lv_color.h **** } lv_color16_t;
 227:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 228:lvgl/src/hal/../draw/../misc/lv_color.h **** typedef union {
 229:lvgl/src/hal/../draw/../misc/lv_color.h ****     struct {
 230:lvgl/src/hal/../draw/../misc/lv_color.h ****         uint8_t blue;
 231:lvgl/src/hal/../draw/../misc/lv_color.h ****         uint8_t green;
 232:lvgl/src/hal/../draw/../misc/lv_color.h ****         uint8_t red;
 233:lvgl/src/hal/../draw/../misc/lv_color.h ****         uint8_t alpha;
 234:lvgl/src/hal/../draw/../misc/lv_color.h ****     } ch;
 235:lvgl/src/hal/../draw/../misc/lv_color.h ****     uint32_t full;
 236:lvgl/src/hal/../draw/../misc/lv_color.h **** } lv_color32_t;
 237:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 238:lvgl/src/hal/../draw/../misc/lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 239:lvgl/src/hal/../draw/../misc/lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 240:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 241:lvgl/src/hal/../draw/../misc/lv_color.h **** typedef struct {
 242:lvgl/src/hal/../draw/../misc/lv_color.h ****     uint16_t h;
 243:lvgl/src/hal/../draw/../misc/lv_color.h ****     uint8_t s;
 244:lvgl/src/hal/../draw/../misc/lv_color.h ****     uint8_t v;
 245:lvgl/src/hal/../draw/../misc/lv_color.h **** } lv_color_hsv_t;
 246:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 247:lvgl/src/hal/../draw/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 248:lvgl/src/hal/../draw/../misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 249:lvgl/src/hal/../draw/../misc/lv_color.h **** typedef uint8_t lv_opa_t;
 250:lvgl/src/hal/../draw/../misc/lv_color.h **** //! @endcond
 251:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 252:lvgl/src/hal/../draw/../misc/lv_color.h **** struct _lv_color_filter_dsc_t;
ARM GAS  C:\usertemp\ccJaadcl.s 			page 19


 253:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 254:lvgl/src/hal/../draw/../misc/lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 255:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 256:lvgl/src/hal/../draw/../misc/lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 257:lvgl/src/hal/../draw/../misc/lv_color.h ****     lv_color_filter_cb_t filter_cb;
 258:lvgl/src/hal/../draw/../misc/lv_color.h ****     void * user_data;
 259:lvgl/src/hal/../draw/../misc/lv_color.h **** } lv_color_filter_dsc_t;
 260:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 261:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 262:lvgl/src/hal/../draw/../misc/lv_color.h **** typedef enum {
 263:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_PALETTE_RED,
 264:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_PALETTE_PINK,
 265:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_PALETTE_PURPLE,
 266:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 267:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_PALETTE_INDIGO,
 268:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_PALETTE_BLUE,
 269:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 270:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_PALETTE_CYAN,
 271:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_PALETTE_TEAL,
 272:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_PALETTE_GREEN,
 273:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 274:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_PALETTE_LIME,
 275:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_PALETTE_YELLOW,
 276:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_PALETTE_AMBER,
 277:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_PALETTE_ORANGE,
 278:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 279:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_PALETTE_BROWN,
 280:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_PALETTE_BLUE_GREY,
 281:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_PALETTE_GREY,
 282:lvgl/src/hal/../draw/../misc/lv_color.h ****     _LV_PALETTE_LAST,
 283:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_PALETTE_NONE = 0xff,
 284:lvgl/src/hal/../draw/../misc/lv_color.h **** } lv_palette_t;
 285:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 286:lvgl/src/hal/../draw/../misc/lv_color.h **** /**********************
 287:lvgl/src/hal/../draw/../misc/lv_color.h ****  * GLOBAL PROTOTYPES
 288:lvgl/src/hal/../draw/../misc/lv_color.h ****  **********************/
 289:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 290:lvgl/src/hal/../draw/../misc/lv_color.h **** /*In color conversations:
 291:lvgl/src/hal/../draw/../misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 292:lvgl/src/hal/../draw/../misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 293:lvgl/src/hal/../draw/../misc/lv_color.h ****  *         8 bit Red has 3 bits
 294:lvgl/src/hal/../draw/../misc/lv_color.h ****  *        ----------------------
 295:lvgl/src/hal/../draw/../misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 296:lvgl/src/hal/../draw/../misc/lv_color.h ****  *
 297:lvgl/src/hal/../draw/../misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 298:lvgl/src/hal/../draw/../misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 299:lvgl/src/hal/../draw/../misc/lv_color.h ****  *        16 bit Red has 5 bits
 300:lvgl/src/hal/../draw/../misc/lv_color.h ****  *        ----------------------
 301:lvgl/src/hal/../draw/../misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 302:lvgl/src/hal/../draw/../misc/lv_color.h ****  */
 303:lvgl/src/hal/../draw/../misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 304:lvgl/src/hal/../draw/../misc/lv_color.h **** {
 305:lvgl/src/hal/../draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 306:lvgl/src/hal/../draw/../misc/lv_color.h ****     return color.full;
 307:lvgl/src/hal/../draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 308:lvgl/src/hal/../draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 309:lvgl/src/hal/../draw/../misc/lv_color.h ****         return 1;
ARM GAS  C:\usertemp\ccJaadcl.s 			page 20


 310:lvgl/src/hal/../draw/../misc/lv_color.h ****     }
 311:lvgl/src/hal/../draw/../misc/lv_color.h ****     else {
 312:lvgl/src/hal/../draw/../misc/lv_color.h ****         return 0;
 313:lvgl/src/hal/../draw/../misc/lv_color.h ****     }
 314:lvgl/src/hal/../draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 315:lvgl/src/hal/../draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 316:lvgl/src/hal/../draw/../misc/lv_color.h ****         return 1;
 317:lvgl/src/hal/../draw/../misc/lv_color.h ****     }
 318:lvgl/src/hal/../draw/../misc/lv_color.h ****     else {
 319:lvgl/src/hal/../draw/../misc/lv_color.h ****         return 0;
 320:lvgl/src/hal/../draw/../misc/lv_color.h ****     }
 321:lvgl/src/hal/../draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 322:lvgl/src/hal/../draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 323:lvgl/src/hal/../draw/../misc/lv_color.h ****         return 1;
 324:lvgl/src/hal/../draw/../misc/lv_color.h ****     }
 325:lvgl/src/hal/../draw/../misc/lv_color.h ****     else {
 326:lvgl/src/hal/../draw/../misc/lv_color.h ****         return 0;
 327:lvgl/src/hal/../draw/../misc/lv_color.h ****     }
 328:lvgl/src/hal/../draw/../misc/lv_color.h **** #endif
 329:lvgl/src/hal/../draw/../misc/lv_color.h **** }
 330:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 331:lvgl/src/hal/../draw/../misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 332:lvgl/src/hal/../draw/../misc/lv_color.h **** {
 333:lvgl/src/hal/../draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 334:lvgl/src/hal/../draw/../misc/lv_color.h ****     if(color.full == 0)
 335:lvgl/src/hal/../draw/../misc/lv_color.h ****         return 0;
 336:lvgl/src/hal/../draw/../misc/lv_color.h ****     else
 337:lvgl/src/hal/../draw/../misc/lv_color.h ****         return 0xFF;
 338:lvgl/src/hal/../draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 339:lvgl/src/hal/../draw/../misc/lv_color.h ****     return color.full;
 340:lvgl/src/hal/../draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 341:lvgl/src/hal/../draw/../misc/lv_color.h ****     lv_color8_t ret;
 342:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 343:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 344:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 345:lvgl/src/hal/../draw/../misc/lv_color.h ****     return ret.full;
 346:lvgl/src/hal/../draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 347:lvgl/src/hal/../draw/../misc/lv_color.h ****     lv_color8_t ret;
 348:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 349:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 350:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 351:lvgl/src/hal/../draw/../misc/lv_color.h ****     return ret.full;
 352:lvgl/src/hal/../draw/../misc/lv_color.h **** #endif
 353:lvgl/src/hal/../draw/../misc/lv_color.h **** }
 354:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 355:lvgl/src/hal/../draw/../misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 356:lvgl/src/hal/../draw/../misc/lv_color.h **** {
 357:lvgl/src/hal/../draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 358:lvgl/src/hal/../draw/../misc/lv_color.h ****     if(color.full == 0)
 359:lvgl/src/hal/../draw/../misc/lv_color.h ****         return 0;
 360:lvgl/src/hal/../draw/../misc/lv_color.h ****     else
 361:lvgl/src/hal/../draw/../misc/lv_color.h ****         return 0xFFFF;
 362:lvgl/src/hal/../draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 363:lvgl/src/hal/../draw/../misc/lv_color.h ****     lv_color16_t ret;
 364:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 365:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 366:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
ARM GAS  C:\usertemp\ccJaadcl.s 			page 21


 367:lvgl/src/hal/../draw/../misc/lv_color.h ****     return ret.full;
 368:lvgl/src/hal/../draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 369:lvgl/src/hal/../draw/../misc/lv_color.h ****     return color.full;
 370:lvgl/src/hal/../draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 371:lvgl/src/hal/../draw/../misc/lv_color.h ****     lv_color16_t ret;
 372:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
 373:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 374:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 375:lvgl/src/hal/../draw/../misc/lv_color.h ****     return ret.full;
 376:lvgl/src/hal/../draw/../misc/lv_color.h **** #endif
 377:lvgl/src/hal/../draw/../misc/lv_color.h **** }
 378:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 379:lvgl/src/hal/../draw/../misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 380:lvgl/src/hal/../draw/../misc/lv_color.h **** {
 381:lvgl/src/hal/../draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 382:lvgl/src/hal/../draw/../misc/lv_color.h ****     if(color.full == 0)
 383:lvgl/src/hal/../draw/../misc/lv_color.h ****         return 0xFF000000;
 384:lvgl/src/hal/../draw/../misc/lv_color.h ****     else
 385:lvgl/src/hal/../draw/../misc/lv_color.h ****         return 0xFFFFFFFF;
 386:lvgl/src/hal/../draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 387:lvgl/src/hal/../draw/../misc/lv_color.h ****     lv_color32_t ret;
 388:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 389:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 390:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 391:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 392:lvgl/src/hal/../draw/../misc/lv_color.h ****     return ret.full;
 393:lvgl/src/hal/../draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 394:lvgl/src/hal/../draw/../misc/lv_color.h ****     /**
 395:lvgl/src/hal/../draw/../misc/lv_color.h ****      * The floating point math for conversion is:
 396:lvgl/src/hal/../draw/../misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 397:lvgl/src/hal/../draw/../misc/lv_color.h ****      * The faster integer math for conversion is:
 398:lvgl/src/hal/../draw/../misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 399:lvgl/src/hal/../draw/../misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 400:lvgl/src/hal/../draw/../misc/lv_color.h ****      *
 401:lvgl/src/hal/../draw/../misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 402:lvgl/src/hal/../draw/../misc/lv_color.h ****      *
 403:lvgl/src/hal/../draw/../misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 404:lvgl/src/hal/../draw/../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 405:lvgl/src/hal/../draw/../misc/lv_color.h ****      *       0           8      7        7       255
 406:lvgl/src/hal/../draw/../misc/lv_color.h ****      *       1          16     14        7       255
 407:lvgl/src/hal/../draw/../misc/lv_color.h ****      *       2          32     28        7       255
 408:lvgl/src/hal/../draw/../misc/lv_color.h ****      *       3          65     25        3       255
 409:lvgl/src/hal/../draw/../misc/lv_color.h ****      *       4         131     19        1       255
 410:lvgl/src/hal/../draw/../misc/lv_color.h ****      *       5         263      7        0       255
 411:lvgl/src/hal/../draw/../misc/lv_color.h ****      *
 412:lvgl/src/hal/../draw/../misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 413:lvgl/src/hal/../draw/../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 414:lvgl/src/hal/../draw/../misc/lv_color.h ****      *       0           4      3        3       255
 415:lvgl/src/hal/../draw/../misc/lv_color.h ****      *       1           8      6        3       255
 416:lvgl/src/hal/../draw/../misc/lv_color.h ****      *       2          16     12        3       255
 417:lvgl/src/hal/../draw/../misc/lv_color.h ****      *       3          32     24        3       255
 418:lvgl/src/hal/../draw/../misc/lv_color.h ****      *       4          64     48        3       255
 419:lvgl/src/hal/../draw/../misc/lv_color.h ****      *       5         129     33        1       255
 420:lvgl/src/hal/../draw/../misc/lv_color.h ****      *       6         259      3        0       255
 421:lvgl/src/hal/../draw/../misc/lv_color.h ****      */
 422:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 423:lvgl/src/hal/../draw/../misc/lv_color.h ****     lv_color32_t ret;
ARM GAS  C:\usertemp\ccJaadcl.s 			page 22


 424:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 425:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 426:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 427:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 428:lvgl/src/hal/../draw/../misc/lv_color.h ****     return ret.full;
 429:lvgl/src/hal/../draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 430:lvgl/src/hal/../draw/../misc/lv_color.h ****     return color.full;
 431:lvgl/src/hal/../draw/../misc/lv_color.h **** #endif
 432:lvgl/src/hal/../draw/../misc/lv_color.h **** }
 433:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 434:lvgl/src/hal/../draw/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 435:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 436:lvgl/src/hal/../draw/../misc/lv_color.h **** /**
 437:lvgl/src/hal/../draw/../misc/lv_color.h ****  * Mix two colors with a given ratio.
 438:lvgl/src/hal/../draw/../misc/lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 439:lvgl/src/hal/../draw/../misc/lv_color.h ****  * @param c2 the second color to mix (usually the background)
 440:lvgl/src/hal/../draw/../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 441:lvgl/src/hal/../draw/../misc/lv_color.h ****  * @return the mixed color
 442:lvgl/src/hal/../draw/../misc/lv_color.h ****  */
 443:lvgl/src/hal/../draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 444:lvgl/src/hal/../draw/../misc/lv_color.h **** {
 445:lvgl/src/hal/../draw/../misc/lv_color.h ****     lv_color_t ret;
 446:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 447:lvgl/src/hal/../draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_16_SWAP == 0
 448:lvgl/src/hal/../draw/../misc/lv_color.h ****     /*Source: https://stackoverflow.com/a/50012418/1999969*/
 449:lvgl/src/hal/../draw/../misc/lv_color.h ****     mix = (mix + 4) >> 3;
 450:lvgl/src/hal/../draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 451:lvgl/src/hal/../draw/../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 452:lvgl/src/hal/../draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | ((uint32_t)c1.full << 16)) & 0x7E0F81F;
 453:lvgl/src/hal/../draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 454:lvgl/src/hal/../draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 455:lvgl/src/hal/../draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 456:lvgl/src/hal/../draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 457:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 458:lvgl/src/hal/../draw/../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 459:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 460:lvgl/src/hal/../draw/../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 461:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 462:lvgl/src/hal/../draw/../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 463:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 464:lvgl/src/hal/../draw/../misc/lv_color.h **** #else
 465:lvgl/src/hal/../draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 466:lvgl/src/hal/../draw/../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 467:lvgl/src/hal/../draw/../misc/lv_color.h **** #endif
 468:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 469:lvgl/src/hal/../draw/../misc/lv_color.h ****     return ret;
 470:lvgl/src/hal/../draw/../misc/lv_color.h **** }
 471:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 472:lvgl/src/hal/../draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 473:lvgl/src/hal/../draw/../misc/lv_color.h **** {
 474:lvgl/src/hal/../draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 475:lvgl/src/hal/../draw/../misc/lv_color.h ****     out[0] = (uint16_t)LV_COLOR_GET_R(c) * mix;
 476:lvgl/src/hal/../draw/../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 477:lvgl/src/hal/../draw/../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 478:lvgl/src/hal/../draw/../misc/lv_color.h **** #else
 479:lvgl/src/hal/../draw/../misc/lv_color.h ****     (void) mix;
 480:lvgl/src/hal/../draw/../misc/lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
ARM GAS  C:\usertemp\ccJaadcl.s 			page 23


 481:lvgl/src/hal/../draw/../misc/lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 482:lvgl/src/hal/../draw/../misc/lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 483:lvgl/src/hal/../draw/../misc/lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 484:lvgl/src/hal/../draw/../misc/lv_color.h **** #endif
 485:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 486:lvgl/src/hal/../draw/../misc/lv_color.h **** }
 487:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 488:lvgl/src/hal/../draw/../misc/lv_color.h **** /**
 489:lvgl/src/hal/../draw/../misc/lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 490:lvgl/src/hal/../draw/../misc/lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 491:lvgl/src/hal/../draw/../misc/lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 492:lvgl/src/hal/../draw/../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 493:lvgl/src/hal/../draw/../misc/lv_color.h ****  *            Should be modified like mix = `255 - mix`
 494:lvgl/src/hal/../draw/../misc/lv_color.h ****  * @return the mixed color
 495:lvgl/src/hal/../draw/../misc/lv_color.h ****  * @note 255 won't give clearly `c1`.
 496:lvgl/src/hal/../draw/../misc/lv_color.h ****  */
 497:lvgl/src/hal/../draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix_premult(uint16_t * premult_c1, lv_color
 498:lvgl/src/hal/../draw/../misc/lv_color.h **** {
 499:lvgl/src/hal/../draw/../misc/lv_color.h ****     lv_color_t ret;
 500:lvgl/src/hal/../draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 501:lvgl/src/hal/../draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8 or 32*/
 502:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROUND_OF
 503:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 504:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 505:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 506:lvgl/src/hal/../draw/../misc/lv_color.h **** #else
 507:lvgl/src/hal/../draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 508:lvgl/src/hal/../draw/../misc/lv_color.h ****     /*Restore color1*/
 509:lvgl/src/hal/../draw/../misc/lv_color.h ****     lv_color_t c1;
 510:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
 511:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 512:lvgl/src/hal/../draw/../misc/lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 513:lvgl/src/hal/../draw/../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
 514:lvgl/src/hal/../draw/../misc/lv_color.h **** #endif
 515:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 516:lvgl/src/hal/../draw/../misc/lv_color.h ****     return ret;
 517:lvgl/src/hal/../draw/../misc/lv_color.h **** }
 518:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 519:lvgl/src/hal/../draw/../misc/lv_color.h **** /**
 520:lvgl/src/hal/../draw/../misc/lv_color.h ****  * Mix two colors. Both color can have alpha value.
 521:lvgl/src/hal/../draw/../misc/lv_color.h ****  * @param bg_color background color
 522:lvgl/src/hal/../draw/../misc/lv_color.h ****  * @param bg_opa alpha of the background color
 523:lvgl/src/hal/../draw/../misc/lv_color.h ****  * @param fg_color foreground color
 524:lvgl/src/hal/../draw/../misc/lv_color.h ****  * @param fg_opa alpha of the foreground color
 525:lvgl/src/hal/../draw/../misc/lv_color.h ****  * @param res_color the result color
 526:lvgl/src/hal/../draw/../misc/lv_color.h ****  * @param res_opa the result opacity
 527:lvgl/src/hal/../draw/../misc/lv_color.h ****  */
 528:lvgl/src/hal/../draw/../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 529:lvgl/src/hal/../draw/../misc/lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
 530:lvgl/src/hal/../draw/../misc/lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 531:lvgl/src/hal/../draw/../misc/lv_color.h **** {
 532:lvgl/src/hal/../draw/../misc/lv_color.h ****     /*Pick the foreground if it's fully opaque or the Background is fully transparent*/
 533:lvgl/src/hal/../draw/../misc/lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 534:lvgl/src/hal/../draw/../misc/lv_color.h ****         res_color->full = fg_color.full;
 535:lvgl/src/hal/../draw/../misc/lv_color.h ****         *res_opa = fg_opa;
 536:lvgl/src/hal/../draw/../misc/lv_color.h ****     }
 537:lvgl/src/hal/../draw/../misc/lv_color.h ****     /*Transparent foreground: use the Background*/
ARM GAS  C:\usertemp\ccJaadcl.s 			page 24


 538:lvgl/src/hal/../draw/../misc/lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 539:lvgl/src/hal/../draw/../misc/lv_color.h ****         res_color->full = bg_color.full;
 540:lvgl/src/hal/../draw/../misc/lv_color.h ****         *res_opa = bg_opa;
 541:lvgl/src/hal/../draw/../misc/lv_color.h ****     }
 542:lvgl/src/hal/../draw/../misc/lv_color.h ****     /*Opaque background: use simple mix*/
 543:lvgl/src/hal/../draw/../misc/lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 544:lvgl/src/hal/../draw/../misc/lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 545:lvgl/src/hal/../draw/../misc/lv_color.h ****         *res_opa = LV_OPA_COVER;
 546:lvgl/src/hal/../draw/../misc/lv_color.h ****     }
 547:lvgl/src/hal/../draw/../misc/lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 548:lvgl/src/hal/../draw/../misc/lv_color.h ****     else {
 549:lvgl/src/hal/../draw/../misc/lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
 550:lvgl/src/hal/../draw/../misc/lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 551:lvgl/src/hal/../draw/../misc/lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 552:lvgl/src/hal/../draw/../misc/lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 553:lvgl/src/hal/../draw/../misc/lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 554:lvgl/src/hal/../draw/../misc/lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
 555:lvgl/src/hal/../draw/../misc/lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 556:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 557:lvgl/src/hal/../draw/../misc/lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
 558:lvgl/src/hal/../draw/../misc/lv_color.h ****            bg_color.full != bg_color_save.full) {
 559:lvgl/src/hal/../draw/../misc/lv_color.h ****             fg_opa_save        = fg_opa;
 560:lvgl/src/hal/../draw/../misc/lv_color.h ****             bg_opa_save        = bg_opa;
 561:lvgl/src/hal/../draw/../misc/lv_color.h ****             fg_color_save.full = fg_color.full;
 562:lvgl/src/hal/../draw/../misc/lv_color.h ****             bg_color_save.full = bg_color.full;
 563:lvgl/src/hal/../draw/../misc/lv_color.h ****             /*Info:
 564:lvgl/src/hal/../draw/../misc/lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
 565:lvgl/src/hal/../draw/../misc/lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
 566:lvgl/src/hal/../draw/../misc/lv_color.h ****             LV_ASSERT(res_opa_saved != 0);
 567:lvgl/src/hal/../draw/../misc/lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
 568:lvgl/src/hal/../draw/../misc/lv_color.h ****             res_color_saved = lv_color_mix(fg_color, bg_color, ratio);
 569:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 570:lvgl/src/hal/../draw/../misc/lv_color.h ****         }
 571:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 572:lvgl/src/hal/../draw/../misc/lv_color.h ****         res_color->full = res_color_saved.full;
 573:lvgl/src/hal/../draw/../misc/lv_color.h ****         *res_opa = res_opa_saved;
 574:lvgl/src/hal/../draw/../misc/lv_color.h ****     }
 575:lvgl/src/hal/../draw/../misc/lv_color.h **** }
 576:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 577:lvgl/src/hal/../draw/../misc/lv_color.h **** //! @endcond
 578:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 579:lvgl/src/hal/../draw/../misc/lv_color.h **** /**
 580:lvgl/src/hal/../draw/../misc/lv_color.h ****  * Get the brightness of a color
 581:lvgl/src/hal/../draw/../misc/lv_color.h ****  * @param color a color
 582:lvgl/src/hal/../draw/../misc/lv_color.h ****  * @return the brightness [0..255]
 583:lvgl/src/hal/../draw/../misc/lv_color.h ****  */
 584:lvgl/src/hal/../draw/../misc/lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 585:lvgl/src/hal/../draw/../misc/lv_color.h **** {
 586:lvgl/src/hal/../draw/../misc/lv_color.h ****     lv_color32_t c32;
 587:lvgl/src/hal/../draw/../misc/lv_color.h ****     c32.full        = lv_color_to32(color);
 588:lvgl/src/hal/../draw/../misc/lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 589:lvgl/src/hal/../draw/../misc/lv_color.h ****     return (uint8_t)(bright >> 3);
 590:lvgl/src/hal/../draw/../misc/lv_color.h **** }
 591:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 592:lvgl/src/hal/../draw/../misc/lv_color.h **** static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)
 593:lvgl/src/hal/../draw/../misc/lv_color.h **** {
 594:lvgl/src/hal/../draw/../misc/lv_color.h ****     return _LV_COLOR_MAKE_TYPE_HELPER LV_COLOR_MAKE(r, g, b);
ARM GAS  C:\usertemp\ccJaadcl.s 			page 25


 595:lvgl/src/hal/../draw/../misc/lv_color.h **** }
 596:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 597:lvgl/src/hal/../draw/../misc/lv_color.h **** static inline lv_color_t lv_color_hex(uint32_t c)
 376              		.loc 3 597 26 view .LVU60
 377              	.LBB13:
 598:lvgl/src/hal/../draw/../misc/lv_color.h **** {
 599:lvgl/src/hal/../draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 16
 600:lvgl/src/hal/../draw/../misc/lv_color.h ****     lv_color_t r;
 378              		.loc 3 600 5 view .LVU61
 601:lvgl/src/hal/../draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 602:lvgl/src/hal/../draw/../misc/lv_color.h ****     /* Convert a 4 bytes per pixel in format ARGB32 to R5G6B5 format
 603:lvgl/src/hal/../draw/../misc/lv_color.h ****         naive way (by calling lv_color_make with components):
 604:lvgl/src/hal/../draw/../misc/lv_color.h ****                     r = ((c & 0xFF0000) >> 19)
 605:lvgl/src/hal/../draw/../misc/lv_color.h ****                     g = ((c & 0xFF00) >> 10)
 606:lvgl/src/hal/../draw/../misc/lv_color.h ****                     b = ((c & 0xFF) >> 3)
 607:lvgl/src/hal/../draw/../misc/lv_color.h ****                     rgb565 = (r << 11) | (g << 5) | b
 608:lvgl/src/hal/../draw/../misc/lv_color.h ****         That's 3 mask, 5 bitshift and 2 or operations
 609:lvgl/src/hal/../draw/../misc/lv_color.h **** 
 610:lvgl/src/hal/../draw/../misc/lv_color.h ****         A bit better:
 611:lvgl/src/hal/../draw/../misc/lv_color.h ****                     r = ((c & 0xF80000) >> 8)
 612:lvgl/src/hal/../draw/../misc/lv_color.h ****                     g = ((c & 0xFC00) >> 5)
 613:lvgl/src/hal/../draw/../misc/lv_color.h ****                     b = ((c & 0xFF) >> 3)
 614:lvgl/src/hal/../draw/../misc/lv_color.h ****                     rgb565 = r | g | b
 615:lvgl/src/hal/../draw/../misc/lv_color.h ****         That's 3 mask, 3 bitshifts and 2 or operations */
 616:lvgl/src/hal/../draw/../misc/lv_color.h ****     r.full = (uint16_t)(((c & 0xF80000) >> 8) | ((c & 0xFC00) >> 5) | ((c & 0xFF) >> 3));
 379              		.loc 3 616 5 view .LVU62
 617:lvgl/src/hal/../draw/../misc/lv_color.h **** #else
 618:lvgl/src/hal/../draw/../misc/lv_color.h ****     /* We want: rrrr rrrr GGGg gggg bbbb bbbb => gggb bbbb rrrr rGGG */
 619:lvgl/src/hal/../draw/../misc/lv_color.h ****     r.full = (uint16_t)(((c & 0xF80000) >> 16) | ((c & 0xFC00) >> 13) | ((c & 0x1C00) << 3) | ((c &
 620:lvgl/src/hal/../draw/../misc/lv_color.h **** #endif
 621:lvgl/src/hal/../draw/../misc/lv_color.h ****     return r;
 380              		.loc 3 621 5 view .LVU63
 381              		.loc 3 621 5 is_stmt 0 view .LVU64
 382              	.LBE13:
 383              	.LBE12:
 384              		.loc 1 352 10 discriminator 1 view .LVU65
 385 0026 0022     		movs	r2, #0
 386 0028 4FF4FC61 		mov	r1, #2016	@ movhi
 387 002c D4F88C00 		ldr	r0, [r4, #140]
 388 0030 FFF7FEFF 		bl	lv_chart_add_series
 389              	.LVL43:
 390              		.loc 1 352 8 discriminator 2 view .LVU66
 391 0034 684F     		ldr	r7, .L15+4
 392 0036 3860     		str	r0, [r7]
 353:Core/Src/freertos.c ****   ser3 = lv_chart_add_series(guider_ui.wave_model_chart_2, lv_palette_main(LV_PALETTE_RED), LV_CHAR
 393              		.loc 1 353 3 is_stmt 1 view .LVU67
 394              		.loc 1 353 10 is_stmt 0 view .LVU68
 395 0038 D4F88C50 		ldr	r5, [r4, #140]
 396 003c 0020     		movs	r0, #0
 397 003e FFF7FEFF 		bl	lv_palette_main
 398              	.LVL44:
 399 0042 0146     		mov	r1, r0	@ movhi
 400              		.loc 1 353 10 discriminator 1 view .LVU69
 401 0044 0022     		movs	r2, #0
 402 0046 2846     		mov	r0, r5
 403 0048 FFF7FEFF 		bl	lv_chart_add_series
 404              	.LVL45:
ARM GAS  C:\usertemp\ccJaadcl.s 			page 26


 405              		.loc 1 353 8 discriminator 2 view .LVU70
 406 004c 634E     		ldr	r6, .L15+8
 407 004e 3060     		str	r0, [r6]
 354:Core/Src/freertos.c ****   serN = lv_chart_add_series(guider_ui.wave_model_chart_2, lv_palette_main(LV_PALETTE_BLUE), LV_CHA
 408              		.loc 1 354 3 is_stmt 1 view .LVU71
 409              		.loc 1 354 10 is_stmt 0 view .LVU72
 410 0050 D4F88C50 		ldr	r5, [r4, #140]
 411 0054 0520     		movs	r0, #5
 412 0056 FFF7FEFF 		bl	lv_palette_main
 413              	.LVL46:
 414 005a 0146     		mov	r1, r0	@ movhi
 415              		.loc 1 354 10 discriminator 1 view .LVU73
 416 005c 0022     		movs	r2, #0
 417 005e 2846     		mov	r0, r5
 418 0060 FFF7FEFF 		bl	lv_chart_add_series
 419              	.LVL47:
 420              		.loc 1 354 8 discriminator 2 view .LVU74
 421 0064 5E4D     		ldr	r5, .L15+12
 422 0066 2860     		str	r0, [r5]
 355:Core/Src/freertos.c ****   lv_chart_set_ext_y_array(guider_ui.wave_model_chart_2, ser1, fft_1V.LVGL_wave);
 423              		.loc 1 355 3 is_stmt 1 view .LVU75
 424 0068 DFF89C91 		ldr	r9, .L15+52
 425 006c 4A46     		mov	r2, r9
 426 006e D8F80010 		ldr	r1, [r8]
 427 0072 D4F88C00 		ldr	r0, [r4, #140]
 428 0076 FFF7FEFF 		bl	lv_chart_set_ext_y_array
 429              	.LVL48:
 356:Core/Src/freertos.c ****   lv_chart_set_ext_y_array(guider_ui.wave_model_chart_2, ser2, fft_2V.LVGL_wave);
 430              		.loc 1 356 3 view .LVU76
 431 007a DFF89081 		ldr	r8, .L15+56
 432 007e 4246     		mov	r2, r8
 433 0080 3968     		ldr	r1, [r7]
 434 0082 D4F88C00 		ldr	r0, [r4, #140]
 435 0086 FFF7FEFF 		bl	lv_chart_set_ext_y_array
 436              	.LVL49:
 357:Core/Src/freertos.c ****   lv_chart_set_ext_y_array(guider_ui.wave_model_chart_2, ser3, fft_3V.LVGL_wave);
 437              		.loc 1 357 3 view .LVU77
 438 008a 564F     		ldr	r7, .L15+16
 439 008c 3A46     		mov	r2, r7
 440 008e 3168     		ldr	r1, [r6]
 441 0090 D4F88C00 		ldr	r0, [r4, #140]
 442 0094 FFF7FEFF 		bl	lv_chart_set_ext_y_array
 443              	.LVL50:
 358:Core/Src/freertos.c ****   lv_chart_set_ext_y_array(guider_ui.wave_model_chart_2, serN, fft_NV.LVGL_wave);
 444              		.loc 1 358 3 view .LVU78
 445 0098 534A     		ldr	r2, .L15+20
 446 009a 2968     		ldr	r1, [r5]
 447 009c D4F88C00 		ldr	r0, [r4, #140]
 448 00a0 FFF7FEFF 		bl	lv_chart_set_ext_y_array
 449              	.LVL51:
 359:Core/Src/freertos.c **** 
 360:Core/Src/freertos.c ****   ser1_I = lv_chart_add_series(guider_ui.wave_model_chart_2, lv_palette_main(LV_PALETTE_YELLOW), LV
 450              		.loc 1 360 3 view .LVU79
 451              		.loc 1 360 12 is_stmt 0 view .LVU80
 452 00a4 D4F88C50 		ldr	r5, [r4, #140]
 453 00a8 0C20     		movs	r0, #12
 454 00aa FFF7FEFF 		bl	lv_palette_main
ARM GAS  C:\usertemp\ccJaadcl.s 			page 27


 455              	.LVL52:
 456 00ae 0146     		mov	r1, r0	@ movhi
 457              		.loc 1 360 12 discriminator 1 view .LVU81
 458 00b0 0022     		movs	r2, #0
 459 00b2 2846     		mov	r0, r5
 460 00b4 FFF7FEFF 		bl	lv_chart_add_series
 461              	.LVL53:
 462              		.loc 1 360 10 discriminator 2 view .LVU82
 463 00b8 DFF854B1 		ldr	fp, .L15+60
 464 00bc CBF80000 		str	r0, [fp]
 361:Core/Src/freertos.c ****   ser2_I = lv_chart_add_series(guider_ui.wave_model_chart_2, lv_color_hex(0x00FF00), LV_CHART_AXIS_
 465              		.loc 1 361 3 is_stmt 1 view .LVU83
 466              	.LVL54:
 467              	.LBB14:
 468              	.LBI14:
 597:lvgl/src/hal/../draw/../misc/lv_color.h **** {
 469              		.loc 3 597 26 view .LVU84
 470              	.LBB15:
 600:lvgl/src/hal/../draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 471              		.loc 3 600 5 view .LVU85
 616:lvgl/src/hal/../draw/../misc/lv_color.h **** #else
 472              		.loc 3 616 5 view .LVU86
 473              		.loc 3 621 5 view .LVU87
 474              		.loc 3 621 5 is_stmt 0 view .LVU88
 475              	.LBE15:
 476              	.LBE14:
 477              		.loc 1 361 12 discriminator 1 view .LVU89
 478 00c0 0022     		movs	r2, #0
 479 00c2 4FF4FC61 		mov	r1, #2016	@ movhi
 480 00c6 D4F88C00 		ldr	r0, [r4, #140]
 481 00ca FFF7FEFF 		bl	lv_chart_add_series
 482              	.LVL55:
 483              		.loc 1 361 10 discriminator 2 view .LVU90
 484 00ce 474E     		ldr	r6, .L15+24
 485 00d0 3060     		str	r0, [r6]
 362:Core/Src/freertos.c ****   ser3_I = lv_chart_add_series(guider_ui.wave_model_chart_2, lv_palette_main(LV_PALETTE_RED), LV_CH
 486              		.loc 1 362 3 is_stmt 1 view .LVU91
 487              		.loc 1 362 12 is_stmt 0 view .LVU92
 488 00d2 D4F88C50 		ldr	r5, [r4, #140]
 489 00d6 0020     		movs	r0, #0
 490 00d8 FFF7FEFF 		bl	lv_palette_main
 491              	.LVL56:
 492 00dc 0146     		mov	r1, r0	@ movhi
 493              		.loc 1 362 12 discriminator 1 view .LVU93
 494 00de 0022     		movs	r2, #0
 495 00e0 2846     		mov	r0, r5
 496 00e2 FFF7FEFF 		bl	lv_chart_add_series
 497              	.LVL57:
 498              		.loc 1 362 10 discriminator 2 view .LVU94
 499 00e6 424D     		ldr	r5, .L15+28
 500 00e8 2860     		str	r0, [r5]
 363:Core/Src/freertos.c ****   serN_I = lv_chart_add_series(guider_ui.wave_model_chart_2, lv_palette_main(LV_PALETTE_BLUE), LV_C
 501              		.loc 1 363 3 is_stmt 1 view .LVU95
 502              		.loc 1 363 12 is_stmt 0 view .LVU96
 503 00ea D4F88CA0 		ldr	r10, [r4, #140]
 504 00ee 0520     		movs	r0, #5
 505 00f0 FFF7FEFF 		bl	lv_palette_main
ARM GAS  C:\usertemp\ccJaadcl.s 			page 28


 506              	.LVL58:
 507 00f4 0146     		mov	r1, r0	@ movhi
 508              		.loc 1 363 12 discriminator 1 view .LVU97
 509 00f6 0022     		movs	r2, #0
 510 00f8 5046     		mov	r0, r10
 511 00fa FFF7FEFF 		bl	lv_chart_add_series
 512              	.LVL59:
 513              		.loc 1 363 10 discriminator 2 view .LVU98
 514 00fe DFF814A1 		ldr	r10, .L15+64
 515 0102 CAF80000 		str	r0, [r10]
 364:Core/Src/freertos.c ****   ser1_I->hidden = 1;
 516              		.loc 1 364 3 is_stmt 1 view .LVU99
 517              		.loc 1 364 9 is_stmt 0 view .LVU100
 518 0106 DBF80010 		ldr	r1, [fp]
 519              		.loc 1 364 18 view .LVU101
 520 010a 0B7B     		ldrb	r3, [r1, #12]	@ zero_extendqisi2
 521 010c 43F00103 		orr	r3, r3, #1
 522 0110 0B73     		strb	r3, [r1, #12]
 365:Core/Src/freertos.c ****   ser2_I->hidden = 1;
 523              		.loc 1 365 3 is_stmt 1 view .LVU102
 524              		.loc 1 365 9 is_stmt 0 view .LVU103
 525 0112 3268     		ldr	r2, [r6]
 526              		.loc 1 365 18 view .LVU104
 527 0114 137B     		ldrb	r3, [r2, #12]	@ zero_extendqisi2
 528 0116 43F00103 		orr	r3, r3, #1
 529 011a 1373     		strb	r3, [r2, #12]
 366:Core/Src/freertos.c ****   ser3_I->hidden = 1;
 530              		.loc 1 366 3 is_stmt 1 view .LVU105
 531              		.loc 1 366 9 is_stmt 0 view .LVU106
 532 011c 2A68     		ldr	r2, [r5]
 533              		.loc 1 366 18 view .LVU107
 534 011e 137B     		ldrb	r3, [r2, #12]	@ zero_extendqisi2
 535 0120 43F00103 		orr	r3, r3, #1
 536 0124 1373     		strb	r3, [r2, #12]
 367:Core/Src/freertos.c ****   serN_I->hidden = 1;
 537              		.loc 1 367 3 is_stmt 1 view .LVU108
 538              		.loc 1 367 18 is_stmt 0 view .LVU109
 539 0126 037B     		ldrb	r3, [r0, #12]	@ zero_extendqisi2
 540 0128 43F00103 		orr	r3, r3, #1
 541 012c 0373     		strb	r3, [r0, #12]
 368:Core/Src/freertos.c ****   lv_chart_set_ext_y_array(guider_ui.wave_model_chart_2, ser1_I, fft_1I.LVGL_wave);
 542              		.loc 1 368 3 is_stmt 1 view .LVU110
 543 012e 314A     		ldr	r2, .L15+32
 544 0130 D4F88C00 		ldr	r0, [r4, #140]
 545 0134 FFF7FEFF 		bl	lv_chart_set_ext_y_array
 546              	.LVL60:
 369:Core/Src/freertos.c ****   lv_chart_set_ext_y_array(guider_ui.wave_model_chart_2, ser2_I, fft_2I.LVGL_wave);
 547              		.loc 1 369 3 view .LVU111
 548 0138 2F4A     		ldr	r2, .L15+36
 549 013a 3168     		ldr	r1, [r6]
 550 013c D4F88C00 		ldr	r0, [r4, #140]
 551 0140 FFF7FEFF 		bl	lv_chart_set_ext_y_array
 552              	.LVL61:
 370:Core/Src/freertos.c ****   lv_chart_set_ext_y_array(guider_ui.wave_model_chart_2, ser3_I, fft_3I.LVGL_wave);
 553              		.loc 1 370 3 view .LVU112
 554 0144 2D4A     		ldr	r2, .L15+40
 555 0146 2968     		ldr	r1, [r5]
ARM GAS  C:\usertemp\ccJaadcl.s 			page 29


 556 0148 D4F88C00 		ldr	r0, [r4, #140]
 557 014c FFF7FEFF 		bl	lv_chart_set_ext_y_array
 558              	.LVL62:
 371:Core/Src/freertos.c ****   lv_chart_set_ext_y_array(guider_ui.wave_model_chart_2, serN_I, fft_NI.LVGL_wave);
 559              		.loc 1 371 3 view .LVU113
 560 0150 2B4A     		ldr	r2, .L15+44
 561 0152 DAF80010 		ldr	r1, [r10]
 562 0156 D4F88C00 		ldr	r0, [r4, #140]
 563 015a FFF7FEFF 		bl	lv_chart_set_ext_y_array
 564              	.LVL63:
 372:Core/Src/freertos.c **** 
 373:Core/Src/freertos.c ****   lv_chart_series_t *ser_xb_1 = lv_chart_add_series(guider_ui.wave_model_chart_3, lv_palette_main(L
 565              		.loc 1 373 3 view .LVU114
 566              		.loc 1 373 33 is_stmt 0 view .LVU115
 567 015e D4F8E050 		ldr	r5, [r4, #224]
 568 0162 0C20     		movs	r0, #12
 569 0164 FFF7FEFF 		bl	lv_palette_main
 570              	.LVL64:
 571 0168 0146     		mov	r1, r0	@ movhi
 572              		.loc 1 373 33 discriminator 1 view .LVU116
 573 016a 0022     		movs	r2, #0
 574 016c 2846     		mov	r0, r5
 575 016e FFF7FEFF 		bl	lv_chart_add_series
 576              	.LVL65:
 577 0172 0646     		mov	r6, r0
 578              	.LVL66:
 374:Core/Src/freertos.c ****   lv_chart_series_t *ser_xb_2 = lv_chart_add_series(guider_ui.wave_model_chart_3, lv_color_hex(0x00
 579              		.loc 1 374 3 is_stmt 1 view .LVU117
 580              	.LBB16:
 581              	.LBI16:
 597:lvgl/src/hal/../draw/../misc/lv_color.h **** {
 582              		.loc 3 597 26 view .LVU118
 583              	.LBB17:
 600:lvgl/src/hal/../draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 584              		.loc 3 600 5 view .LVU119
 616:lvgl/src/hal/../draw/../misc/lv_color.h **** #else
 585              		.loc 3 616 5 view .LVU120
 586              		.loc 3 621 5 view .LVU121
 587              		.loc 3 621 5 is_stmt 0 view .LVU122
 588              	.LBE17:
 589              	.LBE16:
 590              		.loc 1 374 33 discriminator 1 view .LVU123
 591 0174 0022     		movs	r2, #0
 592 0176 4FF4FC61 		mov	r1, #2016	@ movhi
 593 017a D4F8E000 		ldr	r0, [r4, #224]
 594              	.LVL67:
 595              		.loc 1 374 33 discriminator 1 view .LVU124
 596 017e FFF7FEFF 		bl	lv_chart_add_series
 597              	.LVL68:
 598 0182 8246     		mov	r10, r0
 599              	.LVL69:
 375:Core/Src/freertos.c ****   lv_chart_series_t *ser_xb_3 = lv_chart_add_series(guider_ui.wave_model_chart_3, lv_palette_main(L
 600              		.loc 1 375 3 is_stmt 1 view .LVU125
 601              		.loc 1 375 33 is_stmt 0 view .LVU126
 602 0184 D4F8E050 		ldr	r5, [r4, #224]
 603 0188 0020     		movs	r0, #0
 604              	.LVL70:
ARM GAS  C:\usertemp\ccJaadcl.s 			page 30


 605              		.loc 1 375 33 view .LVU127
 606 018a FFF7FEFF 		bl	lv_palette_main
 607              	.LVL71:
 608 018e 0146     		mov	r1, r0	@ movhi
 609              		.loc 1 375 33 discriminator 1 view .LVU128
 610 0190 0022     		movs	r2, #0
 611 0192 2846     		mov	r0, r5
 612 0194 FFF7FEFF 		bl	lv_chart_add_series
 613              	.LVL72:
 614 0198 0546     		mov	r5, r0
 615              	.LVL73:
 376:Core/Src/freertos.c ****   lv_chart_set_ext_y_array(guider_ui.wave_model_chart_3, ser_xb_1, fft_1V.LVGL_xb);
 616              		.loc 1 376 3 is_stmt 1 view .LVU129
 617 019a 09F50072 		add	r2, r9, #512
 618 019e 3146     		mov	r1, r6
 619 01a0 D4F8E000 		ldr	r0, [r4, #224]
 620              	.LVL74:
 621              		.loc 1 376 3 is_stmt 0 view .LVU130
 622 01a4 FFF7FEFF 		bl	lv_chart_set_ext_y_array
 623              	.LVL75:
 377:Core/Src/freertos.c ****   lv_chart_set_ext_y_array(guider_ui.wave_model_chart_3, ser_xb_2, fft_2V.LVGL_xb);
 624              		.loc 1 377 3 is_stmt 1 view .LVU131
 625 01a8 08F50072 		add	r2, r8, #512
 626 01ac 5146     		mov	r1, r10
 627 01ae D4F8E000 		ldr	r0, [r4, #224]
 628 01b2 FFF7FEFF 		bl	lv_chart_set_ext_y_array
 629              	.LVL76:
 378:Core/Src/freertos.c ****   lv_chart_set_ext_y_array(guider_ui.wave_model_chart_3, ser_xb_3, fft_3V.LVGL_xb);
 630              		.loc 1 378 3 view .LVU132
 631 01b6 07F50072 		add	r2, r7, #512
 632 01ba 2946     		mov	r1, r5
 633 01bc D4F8E000 		ldr	r0, [r4, #224]
 634 01c0 FFF7FEFF 		bl	lv_chart_set_ext_y_array
 635              	.LVL77:
 636              	.L13:
 379:Core/Src/freertos.c ****   /* Infinite loop */
 380:Core/Src/freertos.c ****   for (;;)
 637              		.loc 1 380 3 view .LVU133
 381:Core/Src/freertos.c ****   {
 382:Core/Src/freertos.c ****     task_page();
 638              		.loc 1 382 5 view .LVU134
 639 01c4 FFF7FEFF 		bl	task_page
 640              	.LVL78:
 383:Core/Src/freertos.c ****     osDelay(1000);
 641              		.loc 1 383 5 discriminator 1 view .LVU135
 642 01c8 4FF47A70 		mov	r0, #1000
 643 01cc FFF7FEFF 		bl	osDelay
 644              	.LVL79:
 380:Core/Src/freertos.c ****   {
 645              		.loc 1 380 3 view .LVU136
 646 01d0 F8E7     		b	.L13
 647              	.L16:
 648 01d2 00BF     		.align	2
 649              	.L15:
 650 01d4 00000000 		.word	guider_ui
 651 01d8 00000000 		.word	ser2
 652 01dc 00000000 		.word	ser3
ARM GAS  C:\usertemp\ccJaadcl.s 			page 31


 653 01e0 00000000 		.word	serN
 654 01e4 08200000 		.word	fft_3V+8200
 655 01e8 08200000 		.word	fft_NV+8200
 656 01ec 00000000 		.word	ser2_I
 657 01f0 00000000 		.word	ser3_I
 658 01f4 08200000 		.word	fft_1I+8200
 659 01f8 08200000 		.word	fft_2I+8200
 660 01fc 08200000 		.word	fft_3I+8200
 661 0200 08200000 		.word	fft_NI+8200
 662 0204 00000000 		.word	ser1
 663 0208 08200000 		.word	fft_1V+8200
 664 020c 08200000 		.word	fft_2V+8200
 665 0210 00000000 		.word	ser1_I
 666 0214 00000000 		.word	serN_I
 667              		.cfi_endproc
 668              	.LFE603:
 670              		.section	.rodata.vApplicationMallocFailedHook.str1.4,"aMS",%progbits,1
 671              		.align	2
 672              	.LC7:
 673 0000 6D616C6C 		.ascii	"malloc fail\015\000"
 673      6F632066 
 673      61696C0D 
 673      00
 674              		.section	.text.vApplicationMallocFailedHook,"ax",%progbits
 675              		.align	1
 676              		.global	vApplicationMallocFailedHook
 677              		.syntax unified
 678              		.thumb
 679              		.thumb_func
 681              	vApplicationMallocFailedHook:
 682              	.LFB598:
 142:Core/Src/freertos.c ****   /* vApplicationMallocFailedHook() will only be called if
 683              		.loc 1 142 1 view -0
 684              		.cfi_startproc
 685              		@ Volatile: function does not return.
 686              		@ args = 0, pretend = 0, frame = 0
 687              		@ frame_needed = 0, uses_anonymous_args = 0
 688 0000 08B5     		push	{r3, lr}
 689              	.LCFI3:
 690              		.cfi_def_cfa_offset 8
 691              		.cfi_offset 3, -8
 692              		.cfi_offset 14, -4
 153:Core/Src/freertos.c ****   while (1)
 693              		.loc 1 153 3 view .LVU138
 694 0002 0648     		ldr	r0, .L20
 695 0004 FFF7FEFF 		bl	puts
 696              	.LVL80:
 697              	.L18:
 154:Core/Src/freertos.c ****   {
 698              		.loc 1 154 3 view .LVU139
 157:Core/Src/freertos.c ****     osDelay(200);
 699              		.loc 1 157 5 view .LVU140
 700 0008 4FF48041 		mov	r1, #16384
 701 000c 0448     		ldr	r0, .L20+4
 702 000e FFF7FEFF 		bl	HAL_GPIO_TogglePin
 703              	.LVL81:
 158:Core/Src/freertos.c ****   }
ARM GAS  C:\usertemp\ccJaadcl.s 			page 32


 704              		.loc 1 158 5 discriminator 1 view .LVU141
 705 0012 C820     		movs	r0, #200
 706 0014 FFF7FEFF 		bl	osDelay
 707              	.LVL82:
 154:Core/Src/freertos.c ****   {
 708              		.loc 1 154 9 view .LVU142
 709 0018 F6E7     		b	.L18
 710              	.L21:
 711 001a 00BF     		.align	2
 712              	.L20:
 713 001c 00000000 		.word	.LC7
 714 0020 00180258 		.word	1476532224
 715              		.cfi_endproc
 716              	.LFE598:
 718              		.section	.text.vApplicationGetIdleTaskMemory,"ax",%progbits
 719              		.align	1
 720              		.global	vApplicationGetIdleTaskMemory
 721              		.syntax unified
 722              		.thumb
 723              		.thumb_func
 725              	vApplicationGetIdleTaskMemory:
 726              	.LVL83:
 727              	.LFB599:
 168:Core/Src/freertos.c ****   *ppxIdleTaskTCBBuffer = &xIdleTaskTCBBuffer;
 728              		.loc 1 168 1 view -0
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 0
 731              		@ frame_needed = 0, uses_anonymous_args = 0
 732              		@ link register save eliminated.
 169:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 733              		.loc 1 169 3 view .LVU144
 169:Core/Src/freertos.c ****   *ppxIdleTaskStackBuffer = &xIdleStack[0];
 734              		.loc 1 169 25 is_stmt 0 view .LVU145
 735 0000 034B     		ldr	r3, .L23
 736 0002 0360     		str	r3, [r0]
 170:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 737              		.loc 1 170 3 is_stmt 1 view .LVU146
 170:Core/Src/freertos.c ****   *pulIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 738              		.loc 1 170 27 is_stmt 0 view .LVU147
 739 0004 034B     		ldr	r3, .L23+4
 740 0006 0B60     		str	r3, [r1]
 171:Core/Src/freertos.c ****   /* place for user code */
 741              		.loc 1 171 3 is_stmt 1 view .LVU148
 171:Core/Src/freertos.c ****   /* place for user code */
 742              		.loc 1 171 25 is_stmt 0 view .LVU149
 743 0008 8023     		movs	r3, #128
 744 000a 1360     		str	r3, [r2]
 173:Core/Src/freertos.c **** /* USER CODE END GET_IDLE_TASK_MEMORY */
 745              		.loc 1 173 1 view .LVU150
 746 000c 7047     		bx	lr
 747              	.L24:
 748 000e 00BF     		.align	2
 749              	.L23:
 750 0010 00000000 		.word	xIdleTaskTCBBuffer
 751 0014 00000000 		.word	xIdleStack
 752              		.cfi_endproc
 753              	.LFE599:
ARM GAS  C:\usertemp\ccJaadcl.s 			page 33


 755              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 756              		.align	1
 757              		.global	MX_FREERTOS_Init
 758              		.syntax unified
 759              		.thumb
 760              		.thumb_func
 762              	MX_FREERTOS_Init:
 763              	.LFB600:
 182:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 764              		.loc 1 182 1 is_stmt 1 view -0
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 120
 767              		@ frame_needed = 0, uses_anonymous_args = 0
 768 0000 30B5     		push	{r4, r5, lr}
 769              	.LCFI4:
 770              		.cfi_def_cfa_offset 12
 771              		.cfi_offset 4, -12
 772              		.cfi_offset 5, -8
 773              		.cfi_offset 14, -4
 774 0002 9FB0     		sub	sp, sp, #124
 775              	.LCFI5:
 776              		.cfi_def_cfa_offset 136
 193:Core/Src/freertos.c ****   EVENT_ADCHandle = osSemaphoreCreate(osSemaphore(EVENT_ADC), 1);
 777              		.loc 1 193 3 view .LVU152
 778 0004 0025     		movs	r5, #0
 779 0006 1C95     		str	r5, [sp, #112]
 780 0008 1D95     		str	r5, [sp, #116]
 194:Core/Src/freertos.c **** 
 781              		.loc 1 194 3 view .LVU153
 194:Core/Src/freertos.c **** 
 782              		.loc 1 194 21 is_stmt 0 view .LVU154
 783 000a 0121     		movs	r1, #1
 784 000c 1CA8     		add	r0, sp, #112
 785 000e FFF7FEFF 		bl	osSemaphoreCreate
 786              	.LVL84:
 194:Core/Src/freertos.c **** 
 787              		.loc 1 194 19 discriminator 1 view .LVU155
 788 0012 294B     		ldr	r3, .L27
 789 0014 1860     		str	r0, [r3]
 197:Core/Src/freertos.c ****   EVENT_FFTHandle = osSemaphoreCreate(osSemaphore(EVENT_FFT), 1);
 790              		.loc 1 197 3 is_stmt 1 view .LVU156
 791 0016 1A95     		str	r5, [sp, #104]
 792 0018 1B95     		str	r5, [sp, #108]
 198:Core/Src/freertos.c **** 
 793              		.loc 1 198 3 view .LVU157
 198:Core/Src/freertos.c **** 
 794              		.loc 1 198 21 is_stmt 0 view .LVU158
 795 001a 0121     		movs	r1, #1
 796 001c 1AA8     		add	r0, sp, #104
 797 001e FFF7FEFF 		bl	osSemaphoreCreate
 798              	.LVL85:
 198:Core/Src/freertos.c **** 
 799              		.loc 1 198 19 discriminator 1 view .LVU159
 800 0022 264B     		ldr	r3, .L27+4
 801 0024 1860     		str	r0, [r3]
 201:Core/Src/freertos.c ****   EVENT_LVGL_REFERSHHandle = osSemaphoreCreate(osSemaphore(EVENT_LVGL_REFERSH), 1);
 802              		.loc 1 201 3 is_stmt 1 view .LVU160
ARM GAS  C:\usertemp\ccJaadcl.s 			page 34


 803 0026 1895     		str	r5, [sp, #96]
 804 0028 1995     		str	r5, [sp, #100]
 202:Core/Src/freertos.c **** 
 805              		.loc 1 202 3 view .LVU161
 202:Core/Src/freertos.c **** 
 806              		.loc 1 202 30 is_stmt 0 view .LVU162
 807 002a 0121     		movs	r1, #1
 808 002c 18A8     		add	r0, sp, #96
 809 002e FFF7FEFF 		bl	osSemaphoreCreate
 810              	.LVL86:
 202:Core/Src/freertos.c **** 
 811              		.loc 1 202 28 discriminator 1 view .LVU163
 812 0032 234B     		ldr	r3, .L27+8
 813 0034 1860     		str	r0, [r3]
 205:Core/Src/freertos.c ****   EVENT_LVGL_TASKHandle = osSemaphoreCreate(osSemaphore(EVENT_LVGL_TASK), 1);
 814              		.loc 1 205 3 is_stmt 1 view .LVU164
 815 0036 1695     		str	r5, [sp, #88]
 816 0038 1795     		str	r5, [sp, #92]
 206:Core/Src/freertos.c **** 
 817              		.loc 1 206 3 view .LVU165
 206:Core/Src/freertos.c **** 
 818              		.loc 1 206 27 is_stmt 0 view .LVU166
 819 003a 0121     		movs	r1, #1
 820 003c 16A8     		add	r0, sp, #88
 821 003e FFF7FEFF 		bl	osSemaphoreCreate
 822              	.LVL87:
 206:Core/Src/freertos.c **** 
 823              		.loc 1 206 25 discriminator 1 view .LVU167
 824 0042 204B     		ldr	r3, .L27+12
 825 0044 1860     		str	r0, [r3]
 222:Core/Src/freertos.c ****   refersh_lvglHandle = osThreadCreate(osThread(refersh_lvgl), NULL);
 826              		.loc 1 222 3 is_stmt 1 view .LVU168
 827 0046 204C     		ldr	r4, .L27+16
 828 0048 0DF13C0C 		add	ip, sp, #60
 829 004c A646     		mov	lr, r4
 830 004e BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 831 0052 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 832 0056 9EE80700 		ldm	lr, {r0, r1, r2}
 833 005a 8CE80700 		stm	ip, {r0, r1, r2}
 223:Core/Src/freertos.c **** 
 834              		.loc 1 223 3 view .LVU169
 223:Core/Src/freertos.c **** 
 835              		.loc 1 223 24 is_stmt 0 view .LVU170
 836 005e 2946     		mov	r1, r5
 837 0060 0FA8     		add	r0, sp, #60
 838 0062 FFF7FEFF 		bl	osThreadCreate
 839              	.LVL88:
 223:Core/Src/freertos.c **** 
 840              		.loc 1 223 22 discriminator 1 view .LVU171
 841 0066 194B     		ldr	r3, .L27+20
 842 0068 1860     		str	r0, [r3]
 226:Core/Src/freertos.c ****   task_FFTHandle = osThreadCreate(osThread(task_FFT), NULL);
 843              		.loc 1 226 3 is_stmt 1 view .LVU172
 844 006a 0DF1200C 		add	ip, sp, #32
 845 006e 04F11C0E 		add	lr, r4, #28
 846 0072 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 847 0076 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
ARM GAS  C:\usertemp\ccJaadcl.s 			page 35


 848 007a 9EE80700 		ldm	lr, {r0, r1, r2}
 849 007e 8CE80700 		stm	ip, {r0, r1, r2}
 227:Core/Src/freertos.c **** 
 850              		.loc 1 227 3 view .LVU173
 227:Core/Src/freertos.c **** 
 851              		.loc 1 227 20 is_stmt 0 view .LVU174
 852 0082 2946     		mov	r1, r5
 853 0084 08A8     		add	r0, sp, #32
 854 0086 FFF7FEFF 		bl	osThreadCreate
 855              	.LVL89:
 227:Core/Src/freertos.c **** 
 856              		.loc 1 227 18 discriminator 1 view .LVU175
 857 008a 114B     		ldr	r3, .L27+24
 858 008c 1860     		str	r0, [r3]
 230:Core/Src/freertos.c ****   task_lvglHandle = osThreadCreate(osThread(task_lvgl), NULL);
 859              		.loc 1 230 3 is_stmt 1 view .LVU176
 860 008e 0DF1040E 		add	lr, sp, #4
 861 0092 04F1380C 		add	ip, r4, #56
 862 0096 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 863 009a AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 864 009e 9CE80700 		ldm	ip, {r0, r1, r2}
 865 00a2 8EE80700 		stm	lr, {r0, r1, r2}
 231:Core/Src/freertos.c **** 
 866              		.loc 1 231 3 view .LVU177
 231:Core/Src/freertos.c **** 
 867              		.loc 1 231 21 is_stmt 0 view .LVU178
 868 00a6 2946     		mov	r1, r5
 869 00a8 01A8     		add	r0, sp, #4
 870 00aa FFF7FEFF 		bl	osThreadCreate
 871              	.LVL90:
 231:Core/Src/freertos.c **** 
 872              		.loc 1 231 19 discriminator 1 view .LVU179
 873 00ae 094B     		ldr	r3, .L27+28
 874 00b0 1860     		str	r0, [r3]
 236:Core/Src/freertos.c **** 
 875              		.loc 1 236 1 view .LVU180
 876 00b2 1FB0     		add	sp, sp, #124
 877              	.LCFI6:
 878              		.cfi_def_cfa_offset 12
 879              		@ sp needed
 880 00b4 30BD     		pop	{r4, r5, pc}
 881              	.L28:
 882 00b6 00BF     		.align	2
 883              	.L27:
 884 00b8 00000000 		.word	EVENT_ADCHandle
 885 00bc 00000000 		.word	EVENT_FFTHandle
 886 00c0 00000000 		.word	EVENT_LVGL_REFERSHHandle
 887 00c4 00000000 		.word	EVENT_LVGL_TASKHandle
 888 00c8 00000000 		.word	.LANCHOR0
 889 00cc 00000000 		.word	refersh_lvglHandle
 890 00d0 00000000 		.word	task_FFTHandle
 891 00d4 00000000 		.word	task_lvglHandle
 892              		.cfi_endproc
 893              	.LFE600:
 895              		.section	.rodata.init_form_stop.str1.4,"aMS",%progbits,1
 896              		.align	2
 897              	.LC11:
ARM GAS  C:\usertemp\ccJaadcl.s 			page 36


 898 0000 57414B45 		.ascii	"WAKE UP\000"
 898      20555000 
 899              		.section	.text.init_form_stop,"ax",%progbits
 900              		.align	1
 901              		.global	init_form_stop
 902              		.syntax unified
 903              		.thumb
 904              		.thumb_func
 906              	init_form_stop:
 907              	.LFB605:
 384:Core/Src/freertos.c ****   }
 385:Core/Src/freertos.c ****   /* USER CODE END TASK_LVGL */
 386:Core/Src/freertos.c **** }
 387:Core/Src/freertos.c **** 
 388:Core/Src/freertos.c **** /* Private application code --------------------------------------------------*/
 389:Core/Src/freertos.c **** /* USER CODE BEGIN Application */
 390:Core/Src/freertos.c **** /**
 391:Core/Src/freertos.c ****  * @brief  EXTI line detection callback.
 392:Core/Src/freertos.c ****  * @param  GPIO_Pin: Specifies the port pin connected to corresponding EXTI line.
 393:Core/Src/freertos.c ****  * @retval None
 394:Core/Src/freertos.c ****  */
 395:Core/Src/freertos.c **** /* NOTE::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
 396:Core/Src/freertos.c ****               __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 397:Core/Src/freertos.c **** This function Should not be modified in the hal_gpio file, when the callback is needed,
 398:Core/Src/freertos.c ****            the HAL_GPIO_EXTI_Callback could be implemented in the user file
 399:Core/Src/freertos.c **** ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/
 400:Core/Src/freertos.c **** void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
 401:Core/Src/freertos.c **** {
 402:Core/Src/freertos.c ****   // GPIO_PIN_12 == ADC Complete interrupt
 403:Core/Src/freertos.c ****   if (GPIO_Pin == GPIO_PIN_12)
 404:Core/Src/freertos.c ****   {
 405:Core/Src/freertos.c ****     Get_AD7606();
 406:Core/Src/freertos.c ****   }
 407:Core/Src/freertos.c ****   if (GPIO_Pin == SKEY_Pin)
 408:Core/Src/freertos.c ****   {
 409:Core/Src/freertos.c ****     // 重新初始化外设
 410:Core/Src/freertos.c ****     init_form_stop();
 411:Core/Src/freertos.c ****   }
 412:Core/Src/freertos.c **** }
 413:Core/Src/freertos.c **** void init_form_stop()
 414:Core/Src/freertos.c **** {
 908              		.loc 1 414 1 is_stmt 1 view -0
 909              		.cfi_startproc
 910              		@ args = 0, pretend = 0, frame = 0
 911              		@ frame_needed = 0, uses_anonymous_args = 0
 912 0000 08B5     		push	{r3, lr}
 913              	.LCFI7:
 914              		.cfi_def_cfa_offset 8
 915              		.cfi_offset 3, -8
 916              		.cfi_offset 14, -4
 415:Core/Src/freertos.c ****   // 1. 重新配置时钟
 416:Core/Src/freertos.c ****   SystemClock_Config();
 917              		.loc 1 416 3 view .LVU182
 918 0002 FFF7FEFF 		bl	SystemClock_Config
 919              	.LVL91:
 417:Core/Src/freertos.c **** 
 418:Core/Src/freertos.c ****   // 2. 恢复 tick
ARM GAS  C:\usertemp\ccJaadcl.s 			page 37


 419:Core/Src/freertos.c ****   HAL_ResumeTick();
 920              		.loc 1 419 3 view .LVU183
 921 0006 FFF7FEFF 		bl	HAL_ResumeTick
 922              	.LVL92:
 420:Core/Src/freertos.c **** 
 421:Core/Src/freertos.c ****   // 3. 重新初始化需要的外设
 422:Core/Src/freertos.c ****   MX_USART1_UART_Init();
 923              		.loc 1 422 3 view .LVU184
 924 000a FFF7FEFF 		bl	MX_USART1_UART_Init
 925              	.LVL93:
 423:Core/Src/freertos.c ****   MX_USART3_UART_Init();
 926              		.loc 1 423 3 view .LVU185
 927 000e FFF7FEFF 		bl	MX_USART3_UART_Init
 928              	.LVL94:
 424:Core/Src/freertos.c ****   MX_UART4_Init();
 929              		.loc 1 424 3 view .LVU186
 930 0012 FFF7FEFF 		bl	MX_UART4_Init
 931              	.LVL95:
 425:Core/Src/freertos.c **** 
 426:Core/Src/freertos.c ****   MX_SPI1_Init();
 932              		.loc 1 426 3 view .LVU187
 933 0016 FFF7FEFF 		bl	MX_SPI1_Init
 934              	.LVL96:
 427:Core/Src/freertos.c ****   MX_SPI3_Init();
 935              		.loc 1 427 3 view .LVU188
 936 001a FFF7FEFF 		bl	MX_SPI3_Init
 937              	.LVL97:
 428:Core/Src/freertos.c ****   MX_SPI4_Init();
 938              		.loc 1 428 3 view .LVU189
 939 001e FFF7FEFF 		bl	MX_SPI4_Init
 940              	.LVL98:
 429:Core/Src/freertos.c **** 
 430:Core/Src/freertos.c ****   MX_I2C1_Init();
 941              		.loc 1 430 3 view .LVU190
 942 0022 FFF7FEFF 		bl	MX_I2C1_Init
 943              	.LVL99:
 431:Core/Src/freertos.c ****   MX_I2C4_Init();
 944              		.loc 1 431 3 view .LVU191
 945 0026 FFF7FEFF 		bl	MX_I2C4_Init
 946              	.LVL100:
 432:Core/Src/freertos.c **** 
 433:Core/Src/freertos.c ****   MX_SDMMC1_SD_Init();
 947              		.loc 1 433 3 view .LVU192
 948 002a FFF7FEFF 		bl	MX_SDMMC1_SD_Init
 949              	.LVL101:
 434:Core/Src/freertos.c ****   MX_USB_OTG_FS_PCD_Init();
 950              		.loc 1 434 3 view .LVU193
 951 002e FFF7FEFF 		bl	MX_USB_OTG_FS_PCD_Init
 952              	.LVL102:
 435:Core/Src/freertos.c ****   MX_QUADSPI_Init();
 953              		.loc 1 435 3 view .LVU194
 954 0032 FFF7FEFF 		bl	MX_QUADSPI_Init
 955              	.LVL103:
 436:Core/Src/freertos.c **** 
 437:Core/Src/freertos.c ****   // 若用 ADC / 定时器：
 438:Core/Src/freertos.c ****   MX_ADC1_Init();
 956              		.loc 1 438 3 view .LVU195
ARM GAS  C:\usertemp\ccJaadcl.s 			page 38


 957 0036 FFF7FEFF 		bl	MX_ADC1_Init
 958              	.LVL104:
 439:Core/Src/freertos.c ****   MX_TIM1_Init();
 959              		.loc 1 439 3 view .LVU196
 960 003a FFF7FEFF 		bl	MX_TIM1_Init
 961              	.LVL105:
 440:Core/Src/freertos.c ****   MX_TIM3_Init();
 962              		.loc 1 440 3 view .LVU197
 963 003e FFF7FEFF 		bl	MX_TIM3_Init
 964              	.LVL106:
 441:Core/Src/freertos.c ****   MX_TIM8_Init();
 965              		.loc 1 441 3 view .LVU198
 966 0042 FFF7FEFF 		bl	MX_TIM8_Init
 967              	.LVL107:
 442:Core/Src/freertos.c **** 
 443:Core/Src/freertos.c ****   SystemClock_Config();
 968              		.loc 1 443 3 view .LVU199
 969 0046 FFF7FEFF 		bl	SystemClock_Config
 970              	.LVL108:
 444:Core/Src/freertos.c ****   HAL_ResumeTick();
 971              		.loc 1 444 3 view .LVU200
 972 004a FFF7FEFF 		bl	HAL_ResumeTick
 973              	.LVL109:
 445:Core/Src/freertos.c **** 
 446:Core/Src/freertos.c ****   MX_FATFS_Init();
 974              		.loc 1 446 3 view .LVU201
 975 004e FFF7FEFF 		bl	MX_FATFS_Init
 976              	.LVL110:
 447:Core/Src/freertos.c ****   lv_port_fs_init();
 977              		.loc 1 447 3 view .LVU202
 978 0052 FFF7FEFF 		bl	lv_port_fs_init
 979              	.LVL111:
 448:Core/Src/freertos.c ****   lv_port_disp_init();
 980              		.loc 1 448 3 view .LVU203
 981 0056 FFF7FEFF 		bl	lv_port_disp_init
 982              	.LVL112:
 449:Core/Src/freertos.c ****   lv_port_indev_init();
 983              		.loc 1 449 3 view .LVU204
 984 005a FFF7FEFF 		bl	lv_port_indev_init
 985              	.LVL113:
 450:Core/Src/freertos.c **** 
 451:Core/Src/freertos.c ****   HAL_SD_MspInit(&hsd1);
 986              		.loc 1 451 3 view .LVU205
 987 005e 0C48     		ldr	r0, .L31
 988 0060 FFF7FEFF 		bl	HAL_SD_MspInit
 989              	.LVL114:
 452:Core/Src/freertos.c ****   HAL_TIM_Base_Start_IT(&htim1);
 990              		.loc 1 452 3 view .LVU206
 991 0064 0B48     		ldr	r0, .L31+4
 992 0066 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 993              	.LVL115:
 453:Core/Src/freertos.c ****   ad7606ini(&ad7606dev);
 994              		.loc 1 453 3 view .LVU207
 995 006a 0B48     		ldr	r0, .L31+8
 996 006c FFF7FEFF 		bl	ad7606ini
 997              	.LVL116:
 454:Core/Src/freertos.c ****   FatFs_Check();
ARM GAS  C:\usertemp\ccJaadcl.s 			page 39


 998              		.loc 1 454 3 view .LVU208
 999 0070 FFF7FEFF 		bl	FatFs_Check
 1000              	.LVL117:
 455:Core/Src/freertos.c ****   Display_Text(250, 230, 1, "WAKE UP");
 1001              		.loc 1 455 3 view .LVU209
 1002 0074 094B     		ldr	r3, .L31+12
 1003 0076 0122     		movs	r2, #1
 1004 0078 E621     		movs	r1, #230
 1005 007a FA20     		movs	r0, #250
 1006 007c FFF7FEFF 		bl	Display_Text
 1007              	.LVL118:
 456:Core/Src/freertos.c ****   Display_ON();
 1008              		.loc 1 456 3 view .LVU210
 1009 0080 FFF7FEFF 		bl	Display_ON
 1010              	.LVL119:
 457:Core/Src/freertos.c ****   HAL_Delay(5000);
 1011              		.loc 1 457 3 view .LVU211
 1012 0084 41F28830 		movw	r0, #5000
 1013 0088 FFF7FEFF 		bl	HAL_Delay
 1014              	.LVL120:
 458:Core/Src/freertos.c **** }
 1015              		.loc 1 458 1 is_stmt 0 view .LVU212
 1016 008c 08BD     		pop	{r3, pc}
 1017              	.L32:
 1018 008e 00BF     		.align	2
 1019              	.L31:
 1020 0090 00000000 		.word	hsd1
 1021 0094 00000000 		.word	htim1
 1022 0098 00000000 		.word	ad7606dev
 1023 009c 00000000 		.word	.LC11
 1024              		.cfi_endproc
 1025              	.LFE605:
 1027              		.section	.text.HAL_GPIO_EXTI_Callback,"ax",%progbits
 1028              		.align	1
 1029              		.global	HAL_GPIO_EXTI_Callback
 1030              		.syntax unified
 1031              		.thumb
 1032              		.thumb_func
 1034              	HAL_GPIO_EXTI_Callback:
 1035              	.LVL121:
 1036              	.LFB604:
 401:Core/Src/freertos.c ****   // GPIO_PIN_12 == ADC Complete interrupt
 1037              		.loc 1 401 1 is_stmt 1 view -0
 1038              		.cfi_startproc
 1039              		@ args = 0, pretend = 0, frame = 0
 1040              		@ frame_needed = 0, uses_anonymous_args = 0
 401:Core/Src/freertos.c ****   // GPIO_PIN_12 == ADC Complete interrupt
 1041              		.loc 1 401 1 is_stmt 0 view .LVU214
 1042 0000 08B5     		push	{r3, lr}
 1043              	.LCFI8:
 1044              		.cfi_def_cfa_offset 8
 1045              		.cfi_offset 3, -8
 1046              		.cfi_offset 14, -4
 403:Core/Src/freertos.c ****   {
 1047              		.loc 1 403 3 is_stmt 1 view .LVU215
 403:Core/Src/freertos.c ****   {
 1048              		.loc 1 403 6 is_stmt 0 view .LVU216
ARM GAS  C:\usertemp\ccJaadcl.s 			page 40


 1049 0002 B0F5805F 		cmp	r0, #4096
 1050 0006 03D0     		beq	.L37
 407:Core/Src/freertos.c ****   {
 1051              		.loc 1 407 3 is_stmt 1 view .LVU217
 407:Core/Src/freertos.c ****   {
 1052              		.loc 1 407 6 is_stmt 0 view .LVU218
 1053 0008 B0F5005F 		cmp	r0, #8192
 1054 000c 03D0     		beq	.L38
 1055              	.LVL122:
 1056              	.L33:
 412:Core/Src/freertos.c **** void init_form_stop()
 1057              		.loc 1 412 1 view .LVU219
 1058 000e 08BD     		pop	{r3, pc}
 1059              	.LVL123:
 1060              	.L37:
 405:Core/Src/freertos.c ****   }
 1061              		.loc 1 405 5 is_stmt 1 view .LVU220
 1062 0010 FFF7FEFF 		bl	Get_AD7606
 1063              	.LVL124:
 407:Core/Src/freertos.c ****   {
 1064              		.loc 1 407 3 view .LVU221
 1065 0014 FBE7     		b	.L33
 1066              	.LVL125:
 1067              	.L38:
 410:Core/Src/freertos.c ****   }
 1068              		.loc 1 410 5 view .LVU222
 1069 0016 FFF7FEFF 		bl	init_form_stop
 1070              	.LVL126:
 412:Core/Src/freertos.c **** void init_form_stop()
 1071              		.loc 1 412 1 is_stmt 0 view .LVU223
 1072 001a F8E7     		b	.L33
 1073              		.cfi_endproc
 1074              	.LFE604:
 1076              		.section	.rodata.str1.4,"aMS",%progbits,1
 1077              		.align	2
 1078              	.LC4:
 1079 0000 7461736B 		.ascii	"task_lvgl\000"
 1079      5F6C7667 
 1079      6C00
 1080 000a 0000     		.align	2
 1081              	.LC2:
 1082 000c 7461736B 		.ascii	"task_FFT\000"
 1082      5F464654 
 1082      00
 1083 0015 000000   		.align	2
 1084              	.LC0:
 1085 0018 72656665 		.ascii	"refersh_lvgl\000"
 1085      7273685F 
 1085      6C76676C 
 1085      00
 1086              		.section	.bss.xIdleStack,"aw",%nobits
 1087              		.align	2
 1090              	xIdleStack:
 1091 0000 00000000 		.space	512
 1091      00000000 
 1091      00000000 
 1091      00000000 
ARM GAS  C:\usertemp\ccJaadcl.s 			page 41


 1091      00000000 
 1092              		.section	.bss.xIdleTaskTCBBuffer,"aw",%nobits
 1093              		.align	2
 1096              	xIdleTaskTCBBuffer:
 1097 0000 00000000 		.space	84
 1097      00000000 
 1097      00000000 
 1097      00000000 
 1097      00000000 
 1098              		.global	EVENT_LVGL_TASKHandle
 1099              		.section	.bss.EVENT_LVGL_TASKHandle,"aw",%nobits
 1100              		.align	2
 1103              	EVENT_LVGL_TASKHandle:
 1104 0000 00000000 		.space	4
 1105              		.global	EVENT_LVGL_REFERSHHandle
 1106              		.section	.bss.EVENT_LVGL_REFERSHHandle,"aw",%nobits
 1107              		.align	2
 1110              	EVENT_LVGL_REFERSHHandle:
 1111 0000 00000000 		.space	4
 1112              		.global	EVENT_FFTHandle
 1113              		.section	.bss.EVENT_FFTHandle,"aw",%nobits
 1114              		.align	2
 1117              	EVENT_FFTHandle:
 1118 0000 00000000 		.space	4
 1119              		.global	EVENT_ADCHandle
 1120              		.section	.bss.EVENT_ADCHandle,"aw",%nobits
 1121              		.align	2
 1124              	EVENT_ADCHandle:
 1125 0000 00000000 		.space	4
 1126              		.global	task_lvglHandle
 1127              		.section	.bss.task_lvglHandle,"aw",%nobits
 1128              		.align	2
 1131              	task_lvglHandle:
 1132 0000 00000000 		.space	4
 1133              		.global	task_FFTHandle
 1134              		.section	.bss.task_FFTHandle,"aw",%nobits
 1135              		.align	2
 1138              	task_FFTHandle:
 1139 0000 00000000 		.space	4
 1140              		.global	refersh_lvglHandle
 1141              		.section	.bss.refersh_lvglHandle,"aw",%nobits
 1142              		.align	2
 1145              	refersh_lvglHandle:
 1146 0000 00000000 		.space	4
 1147              		.global	serN_I
 1148              		.section	.bss.serN_I,"aw",%nobits
 1149              		.align	2
 1152              	serN_I:
 1153 0000 00000000 		.space	4
 1154              		.global	ser3_I
 1155              		.section	.bss.ser3_I,"aw",%nobits
 1156              		.align	2
 1159              	ser3_I:
 1160 0000 00000000 		.space	4
 1161              		.global	ser2_I
 1162              		.section	.bss.ser2_I,"aw",%nobits
 1163              		.align	2
ARM GAS  C:\usertemp\ccJaadcl.s 			page 42


 1166              	ser2_I:
 1167 0000 00000000 		.space	4
 1168              		.global	ser1_I
 1169              		.section	.bss.ser1_I,"aw",%nobits
 1170              		.align	2
 1173              	ser1_I:
 1174 0000 00000000 		.space	4
 1175              		.global	serN
 1176              		.section	.bss.serN,"aw",%nobits
 1177              		.align	2
 1180              	serN:
 1181 0000 00000000 		.space	4
 1182              		.global	ser3
 1183              		.section	.bss.ser3,"aw",%nobits
 1184              		.align	2
 1187              	ser3:
 1188 0000 00000000 		.space	4
 1189              		.global	ser2
 1190              		.section	.bss.ser2,"aw",%nobits
 1191              		.align	2
 1194              	ser2:
 1195 0000 00000000 		.space	4
 1196              		.global	ser1
 1197              		.section	.bss.ser1,"aw",%nobits
 1198              		.align	2
 1201              	ser1:
 1202 0000 00000000 		.space	4
 1203              		.global	Voltage
 1204              		.section	.SDRAM,"aw"
 1205              		.align	5
 1208              	Voltage:
 1209 0000 00000000 		.space	32
 1209      00000000 
 1209      00000000 
 1209      00000000 
 1209      00000000 
 1210              		.global	PN
 1211              		.align	5
 1214              	PN:
 1215 0020 00000000 		.space	80
 1215      00000000 
 1215      00000000 
 1215      00000000 
 1215      00000000 
 1216              		.global	P3
 1217 0070 00000000 		.align	5
 1217      00000000 
 1217      00000000 
 1217      00000000 
 1220              	P3:
 1221 0080 00000000 		.space	80
 1221      00000000 
 1221      00000000 
 1221      00000000 
 1221      00000000 
 1222              		.global	P2
 1223 00d0 00000000 		.align	5
ARM GAS  C:\usertemp\ccJaadcl.s 			page 43


 1223      00000000 
 1223      00000000 
 1223      00000000 
 1226              	P2:
 1227 00e0 00000000 		.space	80
 1227      00000000 
 1227      00000000 
 1227      00000000 
 1227      00000000 
 1228              		.global	P1
 1229 0130 00000000 		.align	5
 1229      00000000 
 1229      00000000 
 1229      00000000 
 1232              	P1:
 1233 0140 00000000 		.space	80
 1233      00000000 
 1233      00000000 
 1233      00000000 
 1233      00000000 
 1234              		.global	fft_NI
 1235 0190 00000000 		.align	5
 1235      00000000 
 1235      00000000 
 1235      00000000 
 1238              	fft_NI:
 1239 01a0 00000000 		.space	37820
 1239      00000000 
 1239      00000000 
 1239      00000000 
 1239      00000000 
 1240              		.global	fft_3I
 1241 955c 00000000 		.align	5
 1244              	fft_3I:
 1245 9560 00000000 		.space	37820
 1245      00000000 
 1245      00000000 
 1245      00000000 
 1245      00000000 
 1246              		.global	fft_2I
 1247 1291c 00000000 		.align	5
 1250              	fft_2I:
 1251 12920 00000000 		.space	37820
 1251      00000000 
 1251      00000000 
 1251      00000000 
 1251      00000000 
 1252              		.global	fft_1I
 1253 1bcdc 00000000 		.align	5
 1256              	fft_1I:
 1257 1bce0 00000000 		.space	37820
 1257      00000000 
 1257      00000000 
 1257      00000000 
 1257      00000000 
 1258              		.global	fft_NV
 1259 2509c 00000000 		.align	5
ARM GAS  C:\usertemp\ccJaadcl.s 			page 44


 1262              	fft_NV:
 1263 250a0 00000000 		.space	37820
 1263      00000000 
 1263      00000000 
 1263      00000000 
 1263      00000000 
 1264              		.global	fft_3V
 1265 2e45c 00000000 		.align	5
 1268              	fft_3V:
 1269 2e460 00000000 		.space	37820
 1269      00000000 
 1269      00000000 
 1269      00000000 
 1269      00000000 
 1270              		.global	fft_2V
 1271 3781c 00000000 		.align	5
 1274              	fft_2V:
 1275 37820 00000000 		.space	37820
 1275      00000000 
 1275      00000000 
 1275      00000000 
 1275      00000000 
 1276              		.global	fft_1V
 1277 40bdc 00000000 		.align	5
 1280              	fft_1V:
 1281 40be0 00000000 		.space	37820
 1281      00000000 
 1281      00000000 
 1281      00000000 
 1281      00000000 
 1282              		.section	.rodata
 1283              		.align	2
 1284              		.set	.LANCHOR0,. + 0
 1285              	.LC8:
 1286 0000 18000000 		.word	.LC0
 1287 0004 00000000 		.word	Refersh_LVGL
 1288 0008 0100     		.short	1
 1289 000a 0000     		.space	2
 1290 000c 00000000 		.word	0
 1291 0010 00040000 		.word	1024
 1292 0014 00000000 		.word	0
 1293 0018 00000000 		.word	0
 1294              	.LC9:
 1295 001c 0C000000 		.word	.LC2
 1296 0020 00000000 		.word	TASK_FFT
 1297 0024 0000     		.short	0
 1298 0026 0000     		.space	2
 1299 0028 00000000 		.word	0
 1300 002c 14050000 		.word	1300
 1301 0030 00000000 		.word	0
 1302 0034 00000000 		.word	0
 1303              	.LC10:
 1304 0038 00000000 		.word	.LC4
 1305 003c 00000000 		.word	TASK_LVGL
 1306 0040 0000     		.short	0
 1307 0042 0000     		.space	2
 1308 0044 00000000 		.word	0
ARM GAS  C:\usertemp\ccJaadcl.s 			page 45


 1309 0048 14050000 		.word	1300
 1310 004c 00000000 		.word	0
 1311 0050 00000000 		.word	0
 1312              		.text
 1313              	.Letext0:
 1314              		.file 4 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/lib/gcc/arm-none
 1315              		.file 5 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 1316              		.file 6 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 1317              		.file 7 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
 1318              		.file 8 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 1319              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 1320              		.file 10 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 1321              		.file 11 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 1322              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 1323              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_sdmmc.h"
 1324              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_sd.h"
 1325              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim.h"
 1326              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 1327              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/include/semphr.h"
 1328              		.file 18 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
 1329              		.file 19 "Core/Inc/ad7606.h"
 1330              		.file 20 "lvgl/src/misc/lv_types.h"
 1331              		.file 21 "lvgl/src/misc/lv_timer.h"
 1332              		.file 22 "lvgl/src/hal/../draw/../misc/../font/../misc/lv_area.h"
 1333              		.file 23 "lvgl/src/hal/../draw/../misc/../font/lv_font.h"
 1334              		.file 24 "lvgl/src/hal/../draw/../misc/lv_txt.h"
 1335              		.file 25 "lvgl/src/hal/../draw/../misc/lv_bidi.h"
 1336              		.file 26 "lvgl/src/hal/../draw/../misc/lv_style.h"
 1337              		.file 27 "lvgl/src/hal/../draw/lv_img_buf.h"
 1338              		.file 28 "lvgl/src/core/lv_obj.h"
 1339              		.file 29 "lvgl/src/hal/../draw/lv_draw_rect.h"
 1340              		.file 30 "lvgl/src/hal/../draw/lv_draw_label.h"
 1341              		.file 31 "lvgl/src/hal/../draw/lv_draw_img.h"
 1342              		.file 32 "lvgl/src/hal/../draw/lv_draw_line.h"
 1343              		.file 33 "lvgl/src/hal/../draw/lv_draw_arc.h"
 1344              		.file 34 "lvgl/src/hal/../draw/lv_draw.h"
 1345              		.file 35 "lvgl/src/hal/../misc/lv_ll.h"
 1346              		.file 36 "lvgl/src/hal/lv_hal_disp.h"
 1347              		.file 37 "lvgl/src/core/lv_theme.h"
 1348              		.file 38 "lvgl/src/core/lv_group.h"
 1349              		.file 39 "lvgl/src/core/lv_obj_scroll.h"
 1350              		.file 40 "lvgl/src/core/lv_obj_style.h"
 1351              		.file 41 "lvgl/src/core/lv_obj_class.h"
 1352              		.file 42 "lvgl/src/core/lv_event.h"
 1353              		.file 43 "lvgl/src/widgets/lv_bar.h"
 1354              		.file 44 "lvgl/src/extra/widgets/chart/lv_chart.h"
 1355              		.file 45 "lvgl/src/extra/widgets/imgbtn/lv_imgbtn.h"
 1356              		.file 46 "generated/gui_guider.h"
 1357              		.file 47 "Drivers/CMSIS/DSP/Include/arm_math.h"
 1358              		.file 48 "Core/Inc/tim.h"
 1359              		.file 49 "User/FFT/dsp_fft.h"
 1360              		.file 50 "Core/Inc/sdmmc.h"
 1361              		.file 51 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 1362              		.file 52 "User/LCD/lcd.h"
 1363              		.file 53 "User/task/task_page1.h"
 1364              		.file 54 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_cortex.h"
 1365              		.file 55 "generated/events_init.h"
ARM GAS  C:\usertemp\ccJaadcl.s 			page 46


 1366              		.file 56 "lvgl/src/core/lv_disp.h"
 1367              		.file 57 "Middlewares/Third_Party/LwIP/src/include/lwip/apps/httpd.h"
 1368              		.file 58 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 1369              		.file 59 "<built-in>"
ARM GAS  C:\usertemp\ccJaadcl.s 			page 47


DEFINED SYMBOLS
                            *ABS*:00000000 freertos.c
C:\usertemp\ccJaadcl.s:20     .rodata.Refersh_LVGL.str1.4:00000000 $d
C:\usertemp\ccJaadcl.s:24     .text.Refersh_LVGL:00000000 $t
C:\usertemp\ccJaadcl.s:30     .text.Refersh_LVGL:00000000 Refersh_LVGL
C:\usertemp\ccJaadcl.s:200    .text.Refersh_LVGL:00000118 $d
C:\usertemp\ccJaadcl.s:1268   .SDRAM:0002e460 fft_3V
C:\usertemp\ccJaadcl.s:1262   .SDRAM:000250a0 fft_NV
C:\usertemp\ccJaadcl.s:1244   .SDRAM:00009560 fft_3I
C:\usertemp\ccJaadcl.s:1238   .SDRAM:000001a0 fft_NI
C:\usertemp\ccJaadcl.s:1232   .SDRAM:00000140 P1
C:\usertemp\ccJaadcl.s:1214   .SDRAM:00000020 PN
C:\usertemp\ccJaadcl.s:1208   .SDRAM:00000000 Voltage
C:\usertemp\ccJaadcl.s:1280   .SDRAM:00040be0 fft_1V
C:\usertemp\ccJaadcl.s:1274   .SDRAM:00037820 fft_2V
C:\usertemp\ccJaadcl.s:1256   .SDRAM:0001bce0 fft_1I
C:\usertemp\ccJaadcl.s:1250   .SDRAM:00012920 fft_2I
C:\usertemp\ccJaadcl.s:1226   .SDRAM:000000e0 P2
C:\usertemp\ccJaadcl.s:1220   .SDRAM:00000080 P3
C:\usertemp\ccJaadcl.s:219    .text.TASK_FFT:00000000 $t
C:\usertemp\ccJaadcl.s:225    .text.TASK_FFT:00000000 TASK_FFT
C:\usertemp\ccJaadcl.s:308    .text.TASK_FFT:00000060 $d
C:\usertemp\ccJaadcl.s:325    .text.TASK_LVGL:00000000 $t
C:\usertemp\ccJaadcl.s:331    .text.TASK_LVGL:00000000 TASK_LVGL
C:\usertemp\ccJaadcl.s:650    .text.TASK_LVGL:000001d4 $d
C:\usertemp\ccJaadcl.s:1194   .bss.ser2:00000000 ser2
C:\usertemp\ccJaadcl.s:1187   .bss.ser3:00000000 ser3
C:\usertemp\ccJaadcl.s:1180   .bss.serN:00000000 serN
C:\usertemp\ccJaadcl.s:1166   .bss.ser2_I:00000000 ser2_I
C:\usertemp\ccJaadcl.s:1159   .bss.ser3_I:00000000 ser3_I
C:\usertemp\ccJaadcl.s:1201   .bss.ser1:00000000 ser1
C:\usertemp\ccJaadcl.s:1173   .bss.ser1_I:00000000 ser1_I
C:\usertemp\ccJaadcl.s:1152   .bss.serN_I:00000000 serN_I
C:\usertemp\ccJaadcl.s:671    .rodata.vApplicationMallocFailedHook.str1.4:00000000 $d
C:\usertemp\ccJaadcl.s:675    .text.vApplicationMallocFailedHook:00000000 $t
C:\usertemp\ccJaadcl.s:681    .text.vApplicationMallocFailedHook:00000000 vApplicationMallocFailedHook
C:\usertemp\ccJaadcl.s:713    .text.vApplicationMallocFailedHook:0000001c $d
C:\usertemp\ccJaadcl.s:719    .text.vApplicationGetIdleTaskMemory:00000000 $t
C:\usertemp\ccJaadcl.s:725    .text.vApplicationGetIdleTaskMemory:00000000 vApplicationGetIdleTaskMemory
C:\usertemp\ccJaadcl.s:750    .text.vApplicationGetIdleTaskMemory:00000010 $d
C:\usertemp\ccJaadcl.s:1096   .bss.xIdleTaskTCBBuffer:00000000 xIdleTaskTCBBuffer
C:\usertemp\ccJaadcl.s:1090   .bss.xIdleStack:00000000 xIdleStack
C:\usertemp\ccJaadcl.s:756    .text.MX_FREERTOS_Init:00000000 $t
C:\usertemp\ccJaadcl.s:762    .text.MX_FREERTOS_Init:00000000 MX_FREERTOS_Init
C:\usertemp\ccJaadcl.s:884    .text.MX_FREERTOS_Init:000000b8 $d
C:\usertemp\ccJaadcl.s:1124   .bss.EVENT_ADCHandle:00000000 EVENT_ADCHandle
C:\usertemp\ccJaadcl.s:1117   .bss.EVENT_FFTHandle:00000000 EVENT_FFTHandle
C:\usertemp\ccJaadcl.s:1110   .bss.EVENT_LVGL_REFERSHHandle:00000000 EVENT_LVGL_REFERSHHandle
C:\usertemp\ccJaadcl.s:1103   .bss.EVENT_LVGL_TASKHandle:00000000 EVENT_LVGL_TASKHandle
C:\usertemp\ccJaadcl.s:1145   .bss.refersh_lvglHandle:00000000 refersh_lvglHandle
C:\usertemp\ccJaadcl.s:1138   .bss.task_FFTHandle:00000000 task_FFTHandle
C:\usertemp\ccJaadcl.s:1131   .bss.task_lvglHandle:00000000 task_lvglHandle
C:\usertemp\ccJaadcl.s:896    .rodata.init_form_stop.str1.4:00000000 $d
C:\usertemp\ccJaadcl.s:900    .text.init_form_stop:00000000 $t
C:\usertemp\ccJaadcl.s:906    .text.init_form_stop:00000000 init_form_stop
C:\usertemp\ccJaadcl.s:1020   .text.init_form_stop:00000090 $d
C:\usertemp\ccJaadcl.s:1028   .text.HAL_GPIO_EXTI_Callback:00000000 $t
ARM GAS  C:\usertemp\ccJaadcl.s 			page 48


C:\usertemp\ccJaadcl.s:1034   .text.HAL_GPIO_EXTI_Callback:00000000 HAL_GPIO_EXTI_Callback
C:\usertemp\ccJaadcl.s:1077   .rodata.str1.4:00000000 $d
C:\usertemp\ccJaadcl.s:1087   .bss.xIdleStack:00000000 $d
C:\usertemp\ccJaadcl.s:1093   .bss.xIdleTaskTCBBuffer:00000000 $d
C:\usertemp\ccJaadcl.s:1100   .bss.EVENT_LVGL_TASKHandle:00000000 $d
C:\usertemp\ccJaadcl.s:1107   .bss.EVENT_LVGL_REFERSHHandle:00000000 $d
C:\usertemp\ccJaadcl.s:1114   .bss.EVENT_FFTHandle:00000000 $d
C:\usertemp\ccJaadcl.s:1121   .bss.EVENT_ADCHandle:00000000 $d
C:\usertemp\ccJaadcl.s:1128   .bss.task_lvglHandle:00000000 $d
C:\usertemp\ccJaadcl.s:1135   .bss.task_FFTHandle:00000000 $d
C:\usertemp\ccJaadcl.s:1142   .bss.refersh_lvglHandle:00000000 $d
C:\usertemp\ccJaadcl.s:1149   .bss.serN_I:00000000 $d
C:\usertemp\ccJaadcl.s:1156   .bss.ser3_I:00000000 $d
C:\usertemp\ccJaadcl.s:1163   .bss.ser2_I:00000000 $d
C:\usertemp\ccJaadcl.s:1170   .bss.ser1_I:00000000 $d
C:\usertemp\ccJaadcl.s:1177   .bss.serN:00000000 $d
C:\usertemp\ccJaadcl.s:1184   .bss.ser3:00000000 $d
C:\usertemp\ccJaadcl.s:1191   .bss.ser2:00000000 $d
C:\usertemp\ccJaadcl.s:1198   .bss.ser1:00000000 $d
C:\usertemp\ccJaadcl.s:1205   .SDRAM:00000000 $d
C:\usertemp\ccJaadcl.s:1283   .rodata:00000000 $d

UNDEFINED SYMBOLS
MX_LWIP_Init
httpd_init
FFT_Init
PHASE_Init
Voltage_three_Init
osDelay
lv_disp_get_inactive_time
lv_timer_handler
msg_notice
guider_ui
HAL_NVIC_EnableIRQ
fft_run
PHASE_run
Voltage_three_run
page_init
lv_palette_main
lv_chart_add_series
lv_chart_set_ext_y_array
task_page
puts
HAL_GPIO_TogglePin
osSemaphoreCreate
osThreadCreate
SystemClock_Config
HAL_ResumeTick
MX_USART1_UART_Init
MX_USART3_UART_Init
MX_UART4_Init
MX_SPI1_Init
MX_SPI3_Init
MX_SPI4_Init
MX_I2C1_Init
MX_I2C4_Init
MX_SDMMC1_SD_Init
ARM GAS  C:\usertemp\ccJaadcl.s 			page 49


MX_USB_OTG_FS_PCD_Init
MX_QUADSPI_Init
MX_ADC1_Init
MX_TIM1_Init
MX_TIM3_Init
MX_TIM8_Init
MX_FATFS_Init
lv_port_fs_init
lv_port_disp_init
lv_port_indev_init
HAL_SD_MspInit
HAL_TIM_Base_Start_IT
ad7606ini
FatFs_Check
Display_Text
Display_ON
HAL_Delay
hsd1
htim1
ad7606dev
Get_AD7606
