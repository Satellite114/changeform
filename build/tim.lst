ARM GAS  C:\usertemp\ccseRIRt.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"tim.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "Core/Src/tim.c"
  19              		.section	.text.MX_TIM3_Init,"ax",%progbits
  20              		.align	1
  21              		.global	MX_TIM3_Init
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	MX_TIM3_Init:
  27              	.LFB334:
   1:Core/Src/tim.c **** /**
   2:Core/Src/tim.c ****   ******************************************************************************
   3:Core/Src/tim.c ****   * @file    tim.c
   4:Core/Src/tim.c ****   * @brief   This file provides code for the configuration
   5:Core/Src/tim.c ****   *          of the TIM instances.
   6:Core/Src/tim.c ****   ******************************************************************************
   7:Core/Src/tim.c ****   * @attention
   8:Core/Src/tim.c ****   *
   9:Core/Src/tim.c ****   * <h2><center>&copy; Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/tim.c ****   * All rights reserved.</center></h2>
  11:Core/Src/tim.c ****   *
  12:Core/Src/tim.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/tim.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/tim.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/tim.c ****   *                             www.st.com/SLA0044
  16:Core/Src/tim.c ****   *
  17:Core/Src/tim.c ****   ******************************************************************************
  18:Core/Src/tim.c ****   */
  19:Core/Src/tim.c **** 
  20:Core/Src/tim.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/tim.c **** #include "tim.h"
  22:Core/Src/tim.c **** 
  23:Core/Src/tim.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/tim.c **** 
  25:Core/Src/tim.c **** /* USER CODE END 0 */
  26:Core/Src/tim.c **** 
  27:Core/Src/tim.c **** TIM_HandleTypeDef htim1;
  28:Core/Src/tim.c **** TIM_HandleTypeDef htim3;
  29:Core/Src/tim.c **** TIM_HandleTypeDef htim8;
  30:Core/Src/tim.c **** 
  31:Core/Src/tim.c **** /* TIM1 init function */
ARM GAS  C:\usertemp\ccseRIRt.s 			page 2


  32:Core/Src/tim.c **** void MX_TIM1_Init(void)
  33:Core/Src/tim.c **** {
  34:Core/Src/tim.c **** 
  35:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 0 */
  36:Core/Src/tim.c **** 
  37:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 0 */
  38:Core/Src/tim.c **** 
  39:Core/Src/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
  40:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  41:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
  42:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
  43:Core/Src/tim.c **** 
  44:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 1 */
  45:Core/Src/tim.c **** 
  46:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 1 */
  47:Core/Src/tim.c ****   htim1.Instance = TIM1;
  48:Core/Src/tim.c ****   htim1.Init.Prescaler = 240-1;
  49:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
  50:Core/Src/tim.c ****   htim1.Init.Period = 1000;
  51:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  52:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
  53:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
  54:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
  55:Core/Src/tim.c ****   {
  56:Core/Src/tim.c ****     Error_Handler();
  57:Core/Src/tim.c ****   }
  58:Core/Src/tim.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  59:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
  60:Core/Src/tim.c ****   {
  61:Core/Src/tim.c ****     Error_Handler();
  62:Core/Src/tim.c ****   }
  63:Core/Src/tim.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
  64:Core/Src/tim.c ****   {
  65:Core/Src/tim.c ****     Error_Handler();
  66:Core/Src/tim.c ****   }
  67:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  68:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
  69:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  70:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
  71:Core/Src/tim.c ****   {
  72:Core/Src/tim.c ****     Error_Handler();
  73:Core/Src/tim.c ****   }
  74:Core/Src/tim.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
  75:Core/Src/tim.c ****   sConfigOC.Pulse = 500;
  76:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
  77:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
  78:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
  79:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
  80:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
  81:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
  82:Core/Src/tim.c ****   {
  83:Core/Src/tim.c ****     Error_Handler();
  84:Core/Src/tim.c ****   }
  85:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
  86:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
  87:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
  88:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
ARM GAS  C:\usertemp\ccseRIRt.s 			page 3


  89:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
  90:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
  91:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
  92:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
  93:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
  94:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
  95:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
  96:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
  97:Core/Src/tim.c ****   {
  98:Core/Src/tim.c ****     Error_Handler();
  99:Core/Src/tim.c ****   }
 100:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 101:Core/Src/tim.c **** 
 102:Core/Src/tim.c ****   /* USER CODE END TIM1_Init 2 */
 103:Core/Src/tim.c ****   HAL_TIM_MspPostInit(&htim1);
 104:Core/Src/tim.c **** 
 105:Core/Src/tim.c **** }
 106:Core/Src/tim.c **** /* TIM3 init function */
 107:Core/Src/tim.c **** void MX_TIM3_Init(void)
 108:Core/Src/tim.c **** {
  28              		.loc 1 108 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 48
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 00B5     		push	{lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 8DB0     		sub	sp, sp, #52
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 56
 109:Core/Src/tim.c **** 
 110:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 111:Core/Src/tim.c **** 
 112:Core/Src/tim.c ****   /* USER CODE END TIM3_Init 0 */
 113:Core/Src/tim.c **** 
 114:Core/Src/tim.c ****   TIM_Encoder_InitTypeDef sConfig = {0};
  39              		.loc 1 114 3 view .LVU1
  40              		.loc 1 114 27 is_stmt 0 view .LVU2
  41 0004 2422     		movs	r2, #36
  42 0006 0021     		movs	r1, #0
  43 0008 03A8     		add	r0, sp, #12
  44 000a FFF7FEFF 		bl	memset
  45              	.LVL0:
 115:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  46              		.loc 1 115 3 is_stmt 1 view .LVU3
  47              		.loc 1 115 27 is_stmt 0 view .LVU4
  48 000e 0023     		movs	r3, #0
  49 0010 0093     		str	r3, [sp]
  50 0012 0193     		str	r3, [sp, #4]
  51 0014 0293     		str	r3, [sp, #8]
 116:Core/Src/tim.c **** 
 117:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 118:Core/Src/tim.c **** 
 119:Core/Src/tim.c ****   /* USER CODE END TIM3_Init 1 */
 120:Core/Src/tim.c ****   htim3.Instance = TIM3;
  52              		.loc 1 120 3 is_stmt 1 view .LVU5
ARM GAS  C:\usertemp\ccseRIRt.s 			page 4


  53              		.loc 1 120 18 is_stmt 0 view .LVU6
  54 0016 1148     		ldr	r0, .L7
  55 0018 114A     		ldr	r2, .L7+4
  56 001a 0260     		str	r2, [r0]
 121:Core/Src/tim.c ****   htim3.Init.Prescaler = 0;
  57              		.loc 1 121 3 is_stmt 1 view .LVU7
  58              		.loc 1 121 24 is_stmt 0 view .LVU8
  59 001c 4360     		str	r3, [r0, #4]
 122:Core/Src/tim.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
  60              		.loc 1 122 3 is_stmt 1 view .LVU9
  61              		.loc 1 122 26 is_stmt 0 view .LVU10
  62 001e 8360     		str	r3, [r0, #8]
 123:Core/Src/tim.c ****   htim3.Init.Period = 65535;
  63              		.loc 1 123 3 is_stmt 1 view .LVU11
  64              		.loc 1 123 21 is_stmt 0 view .LVU12
  65 0020 4FF6FF72 		movw	r2, #65535
  66 0024 C260     		str	r2, [r0, #12]
 124:Core/Src/tim.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  67              		.loc 1 124 3 is_stmt 1 view .LVU13
  68              		.loc 1 124 28 is_stmt 0 view .LVU14
  69 0026 0361     		str	r3, [r0, #16]
 125:Core/Src/tim.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  70              		.loc 1 125 3 is_stmt 1 view .LVU15
  71              		.loc 1 125 32 is_stmt 0 view .LVU16
  72 0028 8361     		str	r3, [r0, #24]
 126:Core/Src/tim.c ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
  73              		.loc 1 126 3 is_stmt 1 view .LVU17
  74              		.loc 1 126 23 is_stmt 0 view .LVU18
  75 002a 0123     		movs	r3, #1
  76 002c 0393     		str	r3, [sp, #12]
 127:Core/Src/tim.c ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
  77              		.loc 1 127 3 is_stmt 1 view .LVU19
 128:Core/Src/tim.c ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
  78              		.loc 1 128 3 view .LVU20
  79              		.loc 1 128 24 is_stmt 0 view .LVU21
  80 002e 0593     		str	r3, [sp, #20]
 129:Core/Src/tim.c ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
  81              		.loc 1 129 3 is_stmt 1 view .LVU22
 130:Core/Src/tim.c ****   sConfig.IC1Filter = 0;
  82              		.loc 1 130 3 view .LVU23
 131:Core/Src/tim.c ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
  83              		.loc 1 131 3 view .LVU24
 132:Core/Src/tim.c ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
  84              		.loc 1 132 3 view .LVU25
  85              		.loc 1 132 24 is_stmt 0 view .LVU26
  86 0030 0993     		str	r3, [sp, #36]
 133:Core/Src/tim.c ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
  87              		.loc 1 133 3 is_stmt 1 view .LVU27
 134:Core/Src/tim.c ****   sConfig.IC2Filter = 0;
  88              		.loc 1 134 3 view .LVU28
 135:Core/Src/tim.c ****   if (HAL_TIM_Encoder_Init(&htim3, &sConfig) != HAL_OK)
  89              		.loc 1 135 3 view .LVU29
  90              		.loc 1 135 7 is_stmt 0 view .LVU30
  91 0032 03A9     		add	r1, sp, #12
  92 0034 FFF7FEFF 		bl	HAL_TIM_Encoder_Init
  93              	.LVL1:
  94              		.loc 1 135 6 discriminator 1 view .LVU31
ARM GAS  C:\usertemp\ccseRIRt.s 			page 5


  95 0038 50B9     		cbnz	r0, .L5
  96              	.L2:
 136:Core/Src/tim.c ****   {
 137:Core/Src/tim.c ****     Error_Handler();
 138:Core/Src/tim.c ****   }
 139:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  97              		.loc 1 139 3 is_stmt 1 view .LVU32
  98              		.loc 1 139 37 is_stmt 0 view .LVU33
  99 003a 0023     		movs	r3, #0
 100 003c 0093     		str	r3, [sp]
 140:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 101              		.loc 1 140 3 is_stmt 1 view .LVU34
 102              		.loc 1 140 33 is_stmt 0 view .LVU35
 103 003e 0293     		str	r3, [sp, #8]
 141:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 104              		.loc 1 141 3 is_stmt 1 view .LVU36
 105              		.loc 1 141 7 is_stmt 0 view .LVU37
 106 0040 6946     		mov	r1, sp
 107 0042 0648     		ldr	r0, .L7
 108 0044 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 109              	.LVL2:
 110              		.loc 1 141 6 discriminator 1 view .LVU38
 111 0048 28B9     		cbnz	r0, .L6
 112              	.L1:
 142:Core/Src/tim.c ****   {
 143:Core/Src/tim.c ****     Error_Handler();
 144:Core/Src/tim.c ****   }
 145:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 146:Core/Src/tim.c **** 
 147:Core/Src/tim.c ****   /* USER CODE END TIM3_Init 2 */
 148:Core/Src/tim.c **** 
 149:Core/Src/tim.c **** }
 113              		.loc 1 149 1 view .LVU39
 114 004a 0DB0     		add	sp, sp, #52
 115              	.LCFI2:
 116              		.cfi_remember_state
 117              		.cfi_def_cfa_offset 4
 118              		@ sp needed
 119 004c 5DF804FB 		ldr	pc, [sp], #4
 120              	.L5:
 121              	.LCFI3:
 122              		.cfi_restore_state
 137:Core/Src/tim.c ****   }
 123              		.loc 1 137 5 is_stmt 1 view .LVU40
 124 0050 FFF7FEFF 		bl	Error_Handler
 125              	.LVL3:
 126 0054 F1E7     		b	.L2
 127              	.L6:
 143:Core/Src/tim.c ****   }
 128              		.loc 1 143 5 view .LVU41
 129 0056 FFF7FEFF 		bl	Error_Handler
 130              	.LVL4:
 131              		.loc 1 149 1 is_stmt 0 view .LVU42
 132 005a F6E7     		b	.L1
 133              	.L8:
 134              		.align	2
 135              	.L7:
ARM GAS  C:\usertemp\ccseRIRt.s 			page 6


 136 005c 00000000 		.word	htim3
 137 0060 00040040 		.word	1073742848
 138              		.cfi_endproc
 139              	.LFE334:
 141              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 142              		.align	1
 143              		.global	HAL_TIM_Base_MspInit
 144              		.syntax unified
 145              		.thumb
 146              		.thumb_func
 148              	HAL_TIM_Base_MspInit:
 149              	.LVL5:
 150              	.LFB336:
 150:Core/Src/tim.c **** /* TIM8 init function */
 151:Core/Src/tim.c **** void MX_TIM8_Init(void)
 152:Core/Src/tim.c **** {
 153:Core/Src/tim.c **** 
 154:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_Init 0 */
 155:Core/Src/tim.c **** 
 156:Core/Src/tim.c ****   /* USER CODE END TIM8_Init 0 */
 157:Core/Src/tim.c **** 
 158:Core/Src/tim.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 159:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 160:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 161:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 162:Core/Src/tim.c **** 
 163:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_Init 1 */
 164:Core/Src/tim.c **** 
 165:Core/Src/tim.c ****   /* USER CODE END TIM8_Init 1 */
 166:Core/Src/tim.c ****   htim8.Instance = TIM8;
 167:Core/Src/tim.c ****   htim8.Init.Prescaler = 240-1;
 168:Core/Src/tim.c ****   htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 169:Core/Src/tim.c ****   htim8.Init.Period = 1000-1;
 170:Core/Src/tim.c ****   htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 171:Core/Src/tim.c ****   htim8.Init.RepetitionCounter = 0;
 172:Core/Src/tim.c ****   htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 173:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
 174:Core/Src/tim.c ****   {
 175:Core/Src/tim.c ****     Error_Handler();
 176:Core/Src/tim.c ****   }
 177:Core/Src/tim.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 178:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
 179:Core/Src/tim.c ****   {
 180:Core/Src/tim.c ****     Error_Handler();
 181:Core/Src/tim.c ****   }
 182:Core/Src/tim.c ****   if (HAL_TIM_PWM_Init(&htim8) != HAL_OK)
 183:Core/Src/tim.c ****   {
 184:Core/Src/tim.c ****     Error_Handler();
 185:Core/Src/tim.c ****   }
 186:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 187:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 188:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 189:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 190:Core/Src/tim.c ****   {
 191:Core/Src/tim.c ****     Error_Handler();
 192:Core/Src/tim.c ****   }
 193:Core/Src/tim.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
ARM GAS  C:\usertemp\ccseRIRt.s 			page 7


 194:Core/Src/tim.c ****   sConfigOC.Pulse = 200;
 195:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 196:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 197:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 198:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 199:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 200:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 201:Core/Src/tim.c ****   {
 202:Core/Src/tim.c ****     Error_Handler();
 203:Core/Src/tim.c ****   }
 204:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 205:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 206:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 207:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 208:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 209:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 210:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 211:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 212:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 213:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 214:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 215:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim8, &sBreakDeadTimeConfig) != HAL_OK)
 216:Core/Src/tim.c ****   {
 217:Core/Src/tim.c ****     Error_Handler();
 218:Core/Src/tim.c ****   }
 219:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_Init 2 */
 220:Core/Src/tim.c **** 
 221:Core/Src/tim.c ****   /* USER CODE END TIM8_Init 2 */
 222:Core/Src/tim.c ****   HAL_TIM_MspPostInit(&htim8);
 223:Core/Src/tim.c **** 
 224:Core/Src/tim.c **** }
 225:Core/Src/tim.c **** 
 226:Core/Src/tim.c **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 227:Core/Src/tim.c **** {
 151              		.loc 1 227 1 is_stmt 1 view -0
 152              		.cfi_startproc
 153              		@ args = 0, pretend = 0, frame = 8
 154              		@ frame_needed = 0, uses_anonymous_args = 0
 155              		@ link register save eliminated.
 156              		.loc 1 227 1 is_stmt 0 view .LVU44
 157 0000 82B0     		sub	sp, sp, #8
 158              	.LCFI4:
 159              		.cfi_def_cfa_offset 8
 228:Core/Src/tim.c **** 
 229:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM1)
 160              		.loc 1 229 3 is_stmt 1 view .LVU45
 161              		.loc 1 229 20 is_stmt 0 view .LVU46
 162 0002 0368     		ldr	r3, [r0]
 163              		.loc 1 229 5 view .LVU47
 164 0004 114A     		ldr	r2, .L15
 165 0006 9342     		cmp	r3, r2
 166 0008 04D0     		beq	.L13
 230:Core/Src/tim.c ****   {
 231:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 0 */
 232:Core/Src/tim.c **** 
 233:Core/Src/tim.c ****   /* USER CODE END TIM1_MspInit 0 */
 234:Core/Src/tim.c ****     /* TIM1 clock enable */
ARM GAS  C:\usertemp\ccseRIRt.s 			page 8


 235:Core/Src/tim.c ****     __HAL_RCC_TIM1_CLK_ENABLE();
 236:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 237:Core/Src/tim.c **** 
 238:Core/Src/tim.c ****   /* USER CODE END TIM1_MspInit 1 */
 239:Core/Src/tim.c ****   }
 240:Core/Src/tim.c ****   else if(tim_baseHandle->Instance==TIM8)
 167              		.loc 1 240 8 is_stmt 1 view .LVU48
 168              		.loc 1 240 10 is_stmt 0 view .LVU49
 169 000a 114A     		ldr	r2, .L15+4
 170 000c 9342     		cmp	r3, r2
 171 000e 0FD0     		beq	.L14
 172              	.L9:
 241:Core/Src/tim.c ****   {
 242:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspInit 0 */
 243:Core/Src/tim.c **** 
 244:Core/Src/tim.c ****   /* USER CODE END TIM8_MspInit 0 */
 245:Core/Src/tim.c ****     /* TIM8 clock enable */
 246:Core/Src/tim.c ****     __HAL_RCC_TIM8_CLK_ENABLE();
 247:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspInit 1 */
 248:Core/Src/tim.c **** 
 249:Core/Src/tim.c ****   /* USER CODE END TIM8_MspInit 1 */
 250:Core/Src/tim.c ****   }
 251:Core/Src/tim.c **** }
 173              		.loc 1 251 1 view .LVU50
 174 0010 02B0     		add	sp, sp, #8
 175              	.LCFI5:
 176              		.cfi_remember_state
 177              		.cfi_def_cfa_offset 0
 178              		@ sp needed
 179 0012 7047     		bx	lr
 180              	.L13:
 181              	.LCFI6:
 182              		.cfi_restore_state
 235:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 183              		.loc 1 235 5 is_stmt 1 view .LVU51
 184              	.LBB2:
 235:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 185              		.loc 1 235 5 view .LVU52
 235:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 186              		.loc 1 235 5 view .LVU53
 187 0014 0F4B     		ldr	r3, .L15+8
 188 0016 D3F8F020 		ldr	r2, [r3, #240]
 189 001a 42F00102 		orr	r2, r2, #1
 190 001e C3F8F020 		str	r2, [r3, #240]
 235:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 191              		.loc 1 235 5 view .LVU54
 192 0022 D3F8F030 		ldr	r3, [r3, #240]
 193 0026 03F00103 		and	r3, r3, #1
 194 002a 0093     		str	r3, [sp]
 235:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 195              		.loc 1 235 5 view .LVU55
 196 002c 009B     		ldr	r3, [sp]
 197              	.LBE2:
 235:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 198              		.loc 1 235 5 view .LVU56
 199 002e EFE7     		b	.L9
 200              	.L14:
ARM GAS  C:\usertemp\ccseRIRt.s 			page 9


 246:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspInit 1 */
 201              		.loc 1 246 5 view .LVU57
 202              	.LBB3:
 246:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspInit 1 */
 203              		.loc 1 246 5 view .LVU58
 246:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspInit 1 */
 204              		.loc 1 246 5 view .LVU59
 205 0030 084B     		ldr	r3, .L15+8
 206 0032 D3F8F020 		ldr	r2, [r3, #240]
 207 0036 42F00202 		orr	r2, r2, #2
 208 003a C3F8F020 		str	r2, [r3, #240]
 246:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspInit 1 */
 209              		.loc 1 246 5 view .LVU60
 210 003e D3F8F030 		ldr	r3, [r3, #240]
 211 0042 03F00203 		and	r3, r3, #2
 212 0046 0193     		str	r3, [sp, #4]
 246:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspInit 1 */
 213              		.loc 1 246 5 view .LVU61
 214 0048 019B     		ldr	r3, [sp, #4]
 215              	.LBE3:
 246:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspInit 1 */
 216              		.loc 1 246 5 discriminator 1 view .LVU62
 217              		.loc 1 251 1 is_stmt 0 view .LVU63
 218 004a E1E7     		b	.L9
 219              	.L16:
 220              		.align	2
 221              	.L15:
 222 004c 00000140 		.word	1073807360
 223 0050 00040140 		.word	1073808384
 224 0054 00440258 		.word	1476543488
 225              		.cfi_endproc
 226              	.LFE336:
 228              		.section	.text.HAL_TIM_Encoder_MspInit,"ax",%progbits
 229              		.align	1
 230              		.global	HAL_TIM_Encoder_MspInit
 231              		.syntax unified
 232              		.thumb
 233              		.thumb_func
 235              	HAL_TIM_Encoder_MspInit:
 236              	.LVL6:
 237              	.LFB337:
 252:Core/Src/tim.c **** 
 253:Core/Src/tim.c **** void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* tim_encoderHandle)
 254:Core/Src/tim.c **** {
 238              		.loc 1 254 1 is_stmt 1 view -0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 32
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242              		.loc 1 254 1 is_stmt 0 view .LVU65
 243 0000 00B5     		push	{lr}
 244              	.LCFI7:
 245              		.cfi_def_cfa_offset 4
 246              		.cfi_offset 14, -4
 247 0002 89B0     		sub	sp, sp, #36
 248              	.LCFI8:
 249              		.cfi_def_cfa_offset 40
 255:Core/Src/tim.c **** 
ARM GAS  C:\usertemp\ccseRIRt.s 			page 10


 256:Core/Src/tim.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 250              		.loc 1 256 3 is_stmt 1 view .LVU66
 251              		.loc 1 256 20 is_stmt 0 view .LVU67
 252 0004 0023     		movs	r3, #0
 253 0006 0393     		str	r3, [sp, #12]
 254 0008 0493     		str	r3, [sp, #16]
 255 000a 0593     		str	r3, [sp, #20]
 256 000c 0693     		str	r3, [sp, #24]
 257 000e 0793     		str	r3, [sp, #28]
 257:Core/Src/tim.c ****   if(tim_encoderHandle->Instance==TIM3)
 258              		.loc 1 257 3 is_stmt 1 view .LVU68
 259              		.loc 1 257 23 is_stmt 0 view .LVU69
 260 0010 0268     		ldr	r2, [r0]
 261              		.loc 1 257 5 view .LVU70
 262 0012 144B     		ldr	r3, .L21
 263 0014 9A42     		cmp	r2, r3
 264 0016 02D0     		beq	.L20
 265              	.LVL7:
 266              	.L17:
 258:Core/Src/tim.c ****   {
 259:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_MspInit 0 */
 260:Core/Src/tim.c **** 
 261:Core/Src/tim.c ****   /* USER CODE END TIM3_MspInit 0 */
 262:Core/Src/tim.c ****     /* TIM3 clock enable */
 263:Core/Src/tim.c ****     __HAL_RCC_TIM3_CLK_ENABLE();
 264:Core/Src/tim.c **** 
 265:Core/Src/tim.c ****     __HAL_RCC_GPIOC_CLK_ENABLE();
 266:Core/Src/tim.c ****     /**TIM3 GPIO Configuration
 267:Core/Src/tim.c ****     PC6     ------> TIM3_CH1
 268:Core/Src/tim.c ****     PC7     ------> TIM3_CH2
 269:Core/Src/tim.c ****     */
 270:Core/Src/tim.c ****     GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 271:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 272:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 273:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 274:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 275:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 276:Core/Src/tim.c **** 
 277:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 278:Core/Src/tim.c **** 
 279:Core/Src/tim.c ****   /* USER CODE END TIM3_MspInit 1 */
 280:Core/Src/tim.c ****   }
 281:Core/Src/tim.c **** }
 267              		.loc 1 281 1 view .LVU71
 268 0018 09B0     		add	sp, sp, #36
 269              	.LCFI9:
 270              		.cfi_remember_state
 271              		.cfi_def_cfa_offset 4
 272              		@ sp needed
 273 001a 5DF804FB 		ldr	pc, [sp], #4
 274              	.LVL8:
 275              	.L20:
 276              	.LCFI10:
 277              		.cfi_restore_state
 263:Core/Src/tim.c **** 
 278              		.loc 1 263 5 is_stmt 1 view .LVU72
 279              	.LBB4:
ARM GAS  C:\usertemp\ccseRIRt.s 			page 11


 263:Core/Src/tim.c **** 
 280              		.loc 1 263 5 view .LVU73
 263:Core/Src/tim.c **** 
 281              		.loc 1 263 5 view .LVU74
 282 001e 124B     		ldr	r3, .L21+4
 283 0020 D3F8E820 		ldr	r2, [r3, #232]
 284 0024 42F00202 		orr	r2, r2, #2
 285 0028 C3F8E820 		str	r2, [r3, #232]
 263:Core/Src/tim.c **** 
 286              		.loc 1 263 5 view .LVU75
 287 002c D3F8E820 		ldr	r2, [r3, #232]
 288 0030 02F00202 		and	r2, r2, #2
 289 0034 0192     		str	r2, [sp, #4]
 263:Core/Src/tim.c **** 
 290              		.loc 1 263 5 view .LVU76
 291 0036 019A     		ldr	r2, [sp, #4]
 292              	.LBE4:
 263:Core/Src/tim.c **** 
 293              		.loc 1 263 5 view .LVU77
 265:Core/Src/tim.c ****     /**TIM3 GPIO Configuration
 294              		.loc 1 265 5 view .LVU78
 295              	.LBB5:
 265:Core/Src/tim.c ****     /**TIM3 GPIO Configuration
 296              		.loc 1 265 5 view .LVU79
 265:Core/Src/tim.c ****     /**TIM3 GPIO Configuration
 297              		.loc 1 265 5 view .LVU80
 298 0038 D3F8E020 		ldr	r2, [r3, #224]
 299 003c 42F00402 		orr	r2, r2, #4
 300 0040 C3F8E020 		str	r2, [r3, #224]
 265:Core/Src/tim.c ****     /**TIM3 GPIO Configuration
 301              		.loc 1 265 5 view .LVU81
 302 0044 D3F8E030 		ldr	r3, [r3, #224]
 303 0048 03F00403 		and	r3, r3, #4
 304 004c 0293     		str	r3, [sp, #8]
 265:Core/Src/tim.c ****     /**TIM3 GPIO Configuration
 305              		.loc 1 265 5 view .LVU82
 306 004e 029B     		ldr	r3, [sp, #8]
 307              	.LBE5:
 265:Core/Src/tim.c ****     /**TIM3 GPIO Configuration
 308              		.loc 1 265 5 view .LVU83
 270:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 309              		.loc 1 270 5 view .LVU84
 270:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 310              		.loc 1 270 25 is_stmt 0 view .LVU85
 311 0050 C023     		movs	r3, #192
 312 0052 0393     		str	r3, [sp, #12]
 271:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 313              		.loc 1 271 5 is_stmt 1 view .LVU86
 271:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 314              		.loc 1 271 26 is_stmt 0 view .LVU87
 315 0054 0223     		movs	r3, #2
 316 0056 0493     		str	r3, [sp, #16]
 272:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 317              		.loc 1 272 5 is_stmt 1 view .LVU88
 273:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 318              		.loc 1 273 5 view .LVU89
 274:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
ARM GAS  C:\usertemp\ccseRIRt.s 			page 12


 319              		.loc 1 274 5 view .LVU90
 274:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 320              		.loc 1 274 31 is_stmt 0 view .LVU91
 321 0058 0793     		str	r3, [sp, #28]
 275:Core/Src/tim.c **** 
 322              		.loc 1 275 5 is_stmt 1 view .LVU92
 323 005a 03A9     		add	r1, sp, #12
 324 005c 0348     		ldr	r0, .L21+8
 325              	.LVL9:
 275:Core/Src/tim.c **** 
 326              		.loc 1 275 5 is_stmt 0 view .LVU93
 327 005e FFF7FEFF 		bl	HAL_GPIO_Init
 328              	.LVL10:
 329              		.loc 1 281 1 view .LVU94
 330 0062 D9E7     		b	.L17
 331              	.L22:
 332              		.align	2
 333              	.L21:
 334 0064 00040040 		.word	1073742848
 335 0068 00440258 		.word	1476543488
 336 006c 00080258 		.word	1476528128
 337              		.cfi_endproc
 338              	.LFE337:
 340              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
 341              		.align	1
 342              		.global	HAL_TIM_MspPostInit
 343              		.syntax unified
 344              		.thumb
 345              		.thumb_func
 347              	HAL_TIM_MspPostInit:
 348              	.LVL11:
 349              	.LFB338:
 282:Core/Src/tim.c **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 283:Core/Src/tim.c **** {
 350              		.loc 1 283 1 is_stmt 1 view -0
 351              		.cfi_startproc
 352              		@ args = 0, pretend = 0, frame = 32
 353              		@ frame_needed = 0, uses_anonymous_args = 0
 354              		.loc 1 283 1 is_stmt 0 view .LVU96
 355 0000 00B5     		push	{lr}
 356              	.LCFI11:
 357              		.cfi_def_cfa_offset 4
 358              		.cfi_offset 14, -4
 359 0002 89B0     		sub	sp, sp, #36
 360              	.LCFI12:
 361              		.cfi_def_cfa_offset 40
 284:Core/Src/tim.c **** 
 285:Core/Src/tim.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 362              		.loc 1 285 3 is_stmt 1 view .LVU97
 363              		.loc 1 285 20 is_stmt 0 view .LVU98
 364 0004 0023     		movs	r3, #0
 365 0006 0393     		str	r3, [sp, #12]
 366 0008 0493     		str	r3, [sp, #16]
 367 000a 0593     		str	r3, [sp, #20]
 368 000c 0693     		str	r3, [sp, #24]
 369 000e 0793     		str	r3, [sp, #28]
 286:Core/Src/tim.c ****   if(timHandle->Instance==TIM1)
ARM GAS  C:\usertemp\ccseRIRt.s 			page 13


 370              		.loc 1 286 3 is_stmt 1 view .LVU99
 371              		.loc 1 286 15 is_stmt 0 view .LVU100
 372 0010 0368     		ldr	r3, [r0]
 373              		.loc 1 286 5 view .LVU101
 374 0012 1B4A     		ldr	r2, .L29
 375 0014 9342     		cmp	r3, r2
 376 0016 05D0     		beq	.L27
 287:Core/Src/tim.c ****   {
 288:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspPostInit 0 */
 289:Core/Src/tim.c **** 
 290:Core/Src/tim.c ****   /* USER CODE END TIM1_MspPostInit 0 */
 291:Core/Src/tim.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 292:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 293:Core/Src/tim.c ****     PB0     ------> TIM1_CH2N
 294:Core/Src/tim.c ****     */
 295:Core/Src/tim.c ****     GPIO_InitStruct.Pin = GPIO_PIN_0;
 296:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 297:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 298:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 299:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 300:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 301:Core/Src/tim.c **** 
 302:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspPostInit 1 */
 303:Core/Src/tim.c **** 
 304:Core/Src/tim.c ****   /* USER CODE END TIM1_MspPostInit 1 */
 305:Core/Src/tim.c ****   }
 306:Core/Src/tim.c ****   else if(timHandle->Instance==TIM8)
 377              		.loc 1 306 8 is_stmt 1 view .LVU102
 378              		.loc 1 306 10 is_stmt 0 view .LVU103
 379 0018 1A4A     		ldr	r2, .L29+4
 380 001a 9342     		cmp	r3, r2
 381 001c 19D0     		beq	.L28
 382              	.LVL12:
 383              	.L23:
 307:Core/Src/tim.c ****   {
 308:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspPostInit 0 */
 309:Core/Src/tim.c **** 
 310:Core/Src/tim.c ****   /* USER CODE END TIM8_MspPostInit 0 */
 311:Core/Src/tim.c **** 
 312:Core/Src/tim.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 313:Core/Src/tim.c ****     /**TIM8 GPIO Configuration
 314:Core/Src/tim.c ****     PB1     ------> TIM8_CH3N
 315:Core/Src/tim.c ****     */
 316:Core/Src/tim.c ****     GPIO_InitStruct.Pin = GPIO_PIN_1;
 317:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 318:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 319:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 320:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF3_TIM8;
 321:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 322:Core/Src/tim.c **** 
 323:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspPostInit 1 */
 324:Core/Src/tim.c **** 
 325:Core/Src/tim.c ****   /* USER CODE END TIM8_MspPostInit 1 */
 326:Core/Src/tim.c ****   }
 327:Core/Src/tim.c **** 
 328:Core/Src/tim.c **** }
 384              		.loc 1 328 1 view .LVU104
ARM GAS  C:\usertemp\ccseRIRt.s 			page 14


 385 001e 09B0     		add	sp, sp, #36
 386              	.LCFI13:
 387              		.cfi_remember_state
 388              		.cfi_def_cfa_offset 4
 389              		@ sp needed
 390 0020 5DF804FB 		ldr	pc, [sp], #4
 391              	.LVL13:
 392              	.L27:
 393              	.LCFI14:
 394              		.cfi_restore_state
 291:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 395              		.loc 1 291 5 is_stmt 1 view .LVU105
 396              	.LBB6:
 291:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 397              		.loc 1 291 5 view .LVU106
 291:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 398              		.loc 1 291 5 view .LVU107
 399 0024 184B     		ldr	r3, .L29+8
 400 0026 D3F8E020 		ldr	r2, [r3, #224]
 401 002a 42F00202 		orr	r2, r2, #2
 402 002e C3F8E020 		str	r2, [r3, #224]
 291:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 403              		.loc 1 291 5 view .LVU108
 404 0032 D3F8E030 		ldr	r3, [r3, #224]
 405 0036 03F00203 		and	r3, r3, #2
 406 003a 0193     		str	r3, [sp, #4]
 291:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 407              		.loc 1 291 5 view .LVU109
 408 003c 019B     		ldr	r3, [sp, #4]
 409              	.LBE6:
 291:Core/Src/tim.c ****     /**TIM1 GPIO Configuration
 410              		.loc 1 291 5 view .LVU110
 295:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 411              		.loc 1 295 5 view .LVU111
 295:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 412              		.loc 1 295 25 is_stmt 0 view .LVU112
 413 003e 0123     		movs	r3, #1
 414 0040 0393     		str	r3, [sp, #12]
 296:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 415              		.loc 1 296 5 is_stmt 1 view .LVU113
 296:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 416              		.loc 1 296 26 is_stmt 0 view .LVU114
 417 0042 0222     		movs	r2, #2
 418 0044 0492     		str	r2, [sp, #16]
 297:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 419              		.loc 1 297 5 is_stmt 1 view .LVU115
 298:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 420              		.loc 1 298 5 view .LVU116
 299:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 421              		.loc 1 299 5 view .LVU117
 299:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 422              		.loc 1 299 31 is_stmt 0 view .LVU118
 423 0046 0793     		str	r3, [sp, #28]
 300:Core/Src/tim.c **** 
 424              		.loc 1 300 5 is_stmt 1 view .LVU119
 425 0048 03A9     		add	r1, sp, #12
 426 004a 1048     		ldr	r0, .L29+12
ARM GAS  C:\usertemp\ccseRIRt.s 			page 15


 427              	.LVL14:
 300:Core/Src/tim.c **** 
 428              		.loc 1 300 5 is_stmt 0 view .LVU120
 429 004c FFF7FEFF 		bl	HAL_GPIO_Init
 430              	.LVL15:
 431 0050 E5E7     		b	.L23
 432              	.LVL16:
 433              	.L28:
 312:Core/Src/tim.c ****     /**TIM8 GPIO Configuration
 434              		.loc 1 312 5 is_stmt 1 view .LVU121
 435              	.LBB7:
 312:Core/Src/tim.c ****     /**TIM8 GPIO Configuration
 436              		.loc 1 312 5 view .LVU122
 312:Core/Src/tim.c ****     /**TIM8 GPIO Configuration
 437              		.loc 1 312 5 view .LVU123
 438 0052 0D4B     		ldr	r3, .L29+8
 439 0054 D3F8E020 		ldr	r2, [r3, #224]
 440 0058 42F00202 		orr	r2, r2, #2
 441 005c C3F8E020 		str	r2, [r3, #224]
 312:Core/Src/tim.c ****     /**TIM8 GPIO Configuration
 442              		.loc 1 312 5 view .LVU124
 443 0060 D3F8E030 		ldr	r3, [r3, #224]
 444 0064 03F00203 		and	r3, r3, #2
 445 0068 0293     		str	r3, [sp, #8]
 312:Core/Src/tim.c ****     /**TIM8 GPIO Configuration
 446              		.loc 1 312 5 view .LVU125
 447 006a 029B     		ldr	r3, [sp, #8]
 448              	.LBE7:
 312:Core/Src/tim.c ****     /**TIM8 GPIO Configuration
 449              		.loc 1 312 5 view .LVU126
 316:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 450              		.loc 1 316 5 view .LVU127
 316:Core/Src/tim.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 451              		.loc 1 316 25 is_stmt 0 view .LVU128
 452 006c 0223     		movs	r3, #2
 453 006e 0393     		str	r3, [sp, #12]
 317:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 454              		.loc 1 317 5 is_stmt 1 view .LVU129
 317:Core/Src/tim.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 455              		.loc 1 317 26 is_stmt 0 view .LVU130
 456 0070 0493     		str	r3, [sp, #16]
 318:Core/Src/tim.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 457              		.loc 1 318 5 is_stmt 1 view .LVU131
 319:Core/Src/tim.c ****     GPIO_InitStruct.Alternate = GPIO_AF3_TIM8;
 458              		.loc 1 319 5 view .LVU132
 320:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 459              		.loc 1 320 5 view .LVU133
 320:Core/Src/tim.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 460              		.loc 1 320 31 is_stmt 0 view .LVU134
 461 0072 0323     		movs	r3, #3
 462 0074 0793     		str	r3, [sp, #28]
 321:Core/Src/tim.c **** 
 463              		.loc 1 321 5 is_stmt 1 view .LVU135
 464 0076 03A9     		add	r1, sp, #12
 465 0078 0448     		ldr	r0, .L29+12
 466              	.LVL17:
 321:Core/Src/tim.c **** 
ARM GAS  C:\usertemp\ccseRIRt.s 			page 16


 467              		.loc 1 321 5 is_stmt 0 view .LVU136
 468 007a FFF7FEFF 		bl	HAL_GPIO_Init
 469              	.LVL18:
 470              		.loc 1 328 1 view .LVU137
 471 007e CEE7     		b	.L23
 472              	.L30:
 473              		.align	2
 474              	.L29:
 475 0080 00000140 		.word	1073807360
 476 0084 00040140 		.word	1073808384
 477 0088 00440258 		.word	1476543488
 478 008c 00040258 		.word	1476527104
 479              		.cfi_endproc
 480              	.LFE338:
 482              		.section	.text.MX_TIM1_Init,"ax",%progbits
 483              		.align	1
 484              		.global	MX_TIM1_Init
 485              		.syntax unified
 486              		.thumb
 487              		.thumb_func
 489              	MX_TIM1_Init:
 490              	.LFB333:
  33:Core/Src/tim.c **** 
 491              		.loc 1 33 1 is_stmt 1 view -0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 104
 494              		@ frame_needed = 0, uses_anonymous_args = 0
 495 0000 10B5     		push	{r4, lr}
 496              	.LCFI15:
 497              		.cfi_def_cfa_offset 8
 498              		.cfi_offset 4, -8
 499              		.cfi_offset 14, -4
 500 0002 9AB0     		sub	sp, sp, #104
 501              	.LCFI16:
 502              		.cfi_def_cfa_offset 112
  39:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 503              		.loc 1 39 3 view .LVU139
  39:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 504              		.loc 1 39 26 is_stmt 0 view .LVU140
 505 0004 0024     		movs	r4, #0
 506 0006 1694     		str	r4, [sp, #88]
 507 0008 1794     		str	r4, [sp, #92]
 508 000a 1894     		str	r4, [sp, #96]
 509 000c 1994     		str	r4, [sp, #100]
  40:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 510              		.loc 1 40 3 is_stmt 1 view .LVU141
  40:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 511              		.loc 1 40 27 is_stmt 0 view .LVU142
 512 000e 1394     		str	r4, [sp, #76]
 513 0010 1494     		str	r4, [sp, #80]
 514 0012 1594     		str	r4, [sp, #84]
  41:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 515              		.loc 1 41 3 is_stmt 1 view .LVU143
  41:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 516              		.loc 1 41 22 is_stmt 0 view .LVU144
 517 0014 0C94     		str	r4, [sp, #48]
 518 0016 0D94     		str	r4, [sp, #52]
ARM GAS  C:\usertemp\ccseRIRt.s 			page 17


 519 0018 0E94     		str	r4, [sp, #56]
 520 001a 0F94     		str	r4, [sp, #60]
 521 001c 1094     		str	r4, [sp, #64]
 522 001e 1194     		str	r4, [sp, #68]
 523 0020 1294     		str	r4, [sp, #72]
  42:Core/Src/tim.c **** 
 524              		.loc 1 42 3 is_stmt 1 view .LVU145
  42:Core/Src/tim.c **** 
 525              		.loc 1 42 34 is_stmt 0 view .LVU146
 526 0022 2C22     		movs	r2, #44
 527 0024 2146     		mov	r1, r4
 528 0026 01A8     		add	r0, sp, #4
 529 0028 FFF7FEFF 		bl	memset
 530              	.LVL19:
  47:Core/Src/tim.c ****   htim1.Init.Prescaler = 240-1;
 531              		.loc 1 47 3 is_stmt 1 view .LVU147
  47:Core/Src/tim.c ****   htim1.Init.Prescaler = 240-1;
 532              		.loc 1 47 18 is_stmt 0 view .LVU148
 533 002c 3248     		ldr	r0, .L45
 534 002e 334B     		ldr	r3, .L45+4
 535 0030 0360     		str	r3, [r0]
  48:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 536              		.loc 1 48 3 is_stmt 1 view .LVU149
  48:Core/Src/tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 537              		.loc 1 48 24 is_stmt 0 view .LVU150
 538 0032 EF23     		movs	r3, #239
 539 0034 4360     		str	r3, [r0, #4]
  49:Core/Src/tim.c ****   htim1.Init.Period = 1000;
 540              		.loc 1 49 3 is_stmt 1 view .LVU151
  49:Core/Src/tim.c ****   htim1.Init.Period = 1000;
 541              		.loc 1 49 26 is_stmt 0 view .LVU152
 542 0036 8460     		str	r4, [r0, #8]
  50:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 543              		.loc 1 50 3 is_stmt 1 view .LVU153
  50:Core/Src/tim.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 544              		.loc 1 50 21 is_stmt 0 view .LVU154
 545 0038 4FF47A73 		mov	r3, #1000
 546 003c C360     		str	r3, [r0, #12]
  51:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
 547              		.loc 1 51 3 is_stmt 1 view .LVU155
  51:Core/Src/tim.c ****   htim1.Init.RepetitionCounter = 0;
 548              		.loc 1 51 28 is_stmt 0 view .LVU156
 549 003e 0461     		str	r4, [r0, #16]
  52:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 550              		.loc 1 52 3 is_stmt 1 view .LVU157
  52:Core/Src/tim.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 551              		.loc 1 52 32 is_stmt 0 view .LVU158
 552 0040 4461     		str	r4, [r0, #20]
  53:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 553              		.loc 1 53 3 is_stmt 1 view .LVU159
  53:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 554              		.loc 1 53 32 is_stmt 0 view .LVU160
 555 0042 8023     		movs	r3, #128
 556 0044 8361     		str	r3, [r0, #24]
  54:Core/Src/tim.c ****   {
 557              		.loc 1 54 3 is_stmt 1 view .LVU161
  54:Core/Src/tim.c ****   {
ARM GAS  C:\usertemp\ccseRIRt.s 			page 18


 558              		.loc 1 54 7 is_stmt 0 view .LVU162
 559 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
 560              	.LVL20:
  54:Core/Src/tim.c ****   {
 561              		.loc 1 54 6 discriminator 1 view .LVU163
 562 004a 0028     		cmp	r0, #0
 563 004c 42D1     		bne	.L39
 564              	.L32:
  58:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 565              		.loc 1 58 3 is_stmt 1 view .LVU164
  58:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 566              		.loc 1 58 34 is_stmt 0 view .LVU165
 567 004e 4FF48053 		mov	r3, #4096
 568 0052 1693     		str	r3, [sp, #88]
  59:Core/Src/tim.c ****   {
 569              		.loc 1 59 3 is_stmt 1 view .LVU166
  59:Core/Src/tim.c ****   {
 570              		.loc 1 59 7 is_stmt 0 view .LVU167
 571 0054 16A9     		add	r1, sp, #88
 572 0056 2848     		ldr	r0, .L45
 573 0058 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 574              	.LVL21:
  59:Core/Src/tim.c ****   {
 575              		.loc 1 59 6 discriminator 1 view .LVU168
 576 005c 0028     		cmp	r0, #0
 577 005e 3CD1     		bne	.L40
 578              	.L33:
  63:Core/Src/tim.c ****   {
 579              		.loc 1 63 3 is_stmt 1 view .LVU169
  63:Core/Src/tim.c ****   {
 580              		.loc 1 63 7 is_stmt 0 view .LVU170
 581 0060 2548     		ldr	r0, .L45
 582 0062 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 583              	.LVL22:
  63:Core/Src/tim.c ****   {
 584              		.loc 1 63 6 discriminator 1 view .LVU171
 585 0066 0028     		cmp	r0, #0
 586 0068 3AD1     		bne	.L41
 587              	.L34:
  67:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 588              		.loc 1 67 3 is_stmt 1 view .LVU172
  67:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 589              		.loc 1 67 37 is_stmt 0 view .LVU173
 590 006a 0023     		movs	r3, #0
 591 006c 1393     		str	r3, [sp, #76]
  68:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 592              		.loc 1 68 3 is_stmt 1 view .LVU174
  68:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 593              		.loc 1 68 38 is_stmt 0 view .LVU175
 594 006e 1493     		str	r3, [sp, #80]
  69:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 595              		.loc 1 69 3 is_stmt 1 view .LVU176
  69:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 596              		.loc 1 69 33 is_stmt 0 view .LVU177
 597 0070 1593     		str	r3, [sp, #84]
  70:Core/Src/tim.c ****   {
 598              		.loc 1 70 3 is_stmt 1 view .LVU178
ARM GAS  C:\usertemp\ccseRIRt.s 			page 19


  70:Core/Src/tim.c ****   {
 599              		.loc 1 70 7 is_stmt 0 view .LVU179
 600 0072 13A9     		add	r1, sp, #76
 601 0074 2048     		ldr	r0, .L45
 602 0076 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 603              	.LVL23:
  70:Core/Src/tim.c ****   {
 604              		.loc 1 70 6 discriminator 1 view .LVU180
 605 007a 0028     		cmp	r0, #0
 606 007c 33D1     		bne	.L42
 607              	.L35:
  74:Core/Src/tim.c ****   sConfigOC.Pulse = 500;
 608              		.loc 1 74 3 is_stmt 1 view .LVU181
  74:Core/Src/tim.c ****   sConfigOC.Pulse = 500;
 609              		.loc 1 74 20 is_stmt 0 view .LVU182
 610 007e 6023     		movs	r3, #96
 611 0080 0C93     		str	r3, [sp, #48]
  75:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 612              		.loc 1 75 3 is_stmt 1 view .LVU183
  75:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 613              		.loc 1 75 19 is_stmt 0 view .LVU184
 614 0082 4FF4FA73 		mov	r3, #500
 615 0086 0D93     		str	r3, [sp, #52]
  76:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 616              		.loc 1 76 3 is_stmt 1 view .LVU185
  76:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 617              		.loc 1 76 24 is_stmt 0 view .LVU186
 618 0088 0023     		movs	r3, #0
 619 008a 0E93     		str	r3, [sp, #56]
  77:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 620              		.loc 1 77 3 is_stmt 1 view .LVU187
  77:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 621              		.loc 1 77 25 is_stmt 0 view .LVU188
 622 008c 0F93     		str	r3, [sp, #60]
  78:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 623              		.loc 1 78 3 is_stmt 1 view .LVU189
  78:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 624              		.loc 1 78 24 is_stmt 0 view .LVU190
 625 008e 1093     		str	r3, [sp, #64]
  79:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 626              		.loc 1 79 3 is_stmt 1 view .LVU191
  79:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 627              		.loc 1 79 25 is_stmt 0 view .LVU192
 628 0090 1193     		str	r3, [sp, #68]
  80:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 629              		.loc 1 80 3 is_stmt 1 view .LVU193
  80:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 630              		.loc 1 80 26 is_stmt 0 view .LVU194
 631 0092 1293     		str	r3, [sp, #72]
  81:Core/Src/tim.c ****   {
 632              		.loc 1 81 3 is_stmt 1 view .LVU195
  81:Core/Src/tim.c ****   {
 633              		.loc 1 81 7 is_stmt 0 view .LVU196
 634 0094 0422     		movs	r2, #4
 635 0096 0CA9     		add	r1, sp, #48
 636 0098 1748     		ldr	r0, .L45
 637 009a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
ARM GAS  C:\usertemp\ccseRIRt.s 			page 20


 638              	.LVL24:
  81:Core/Src/tim.c ****   {
 639              		.loc 1 81 6 discriminator 1 view .LVU197
 640 009e 28BB     		cbnz	r0, .L43
 641              	.L36:
  85:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 642              		.loc 1 85 3 is_stmt 1 view .LVU198
  85:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 643              		.loc 1 85 40 is_stmt 0 view .LVU199
 644 00a0 0023     		movs	r3, #0
 645 00a2 0193     		str	r3, [sp, #4]
  86:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 646              		.loc 1 86 3 is_stmt 1 view .LVU200
  86:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 647              		.loc 1 86 41 is_stmt 0 view .LVU201
 648 00a4 0293     		str	r3, [sp, #8]
  87:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 649              		.loc 1 87 3 is_stmt 1 view .LVU202
  87:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 650              		.loc 1 87 34 is_stmt 0 view .LVU203
 651 00a6 0393     		str	r3, [sp, #12]
  88:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 652              		.loc 1 88 3 is_stmt 1 view .LVU204
  88:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 653              		.loc 1 88 33 is_stmt 0 view .LVU205
 654 00a8 0493     		str	r3, [sp, #16]
  89:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 655              		.loc 1 89 3 is_stmt 1 view .LVU206
  89:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 656              		.loc 1 89 35 is_stmt 0 view .LVU207
 657 00aa 0593     		str	r3, [sp, #20]
  90:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 658              		.loc 1 90 3 is_stmt 1 view .LVU208
  90:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 659              		.loc 1 90 38 is_stmt 0 view .LVU209
 660 00ac 4FF40052 		mov	r2, #8192
 661 00b0 0692     		str	r2, [sp, #24]
  91:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 662              		.loc 1 91 3 is_stmt 1 view .LVU210
  91:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 663              		.loc 1 91 36 is_stmt 0 view .LVU211
 664 00b2 0793     		str	r3, [sp, #28]
  92:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 665              		.loc 1 92 3 is_stmt 1 view .LVU212
  92:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 666              		.loc 1 92 36 is_stmt 0 view .LVU213
 667 00b4 0893     		str	r3, [sp, #32]
  93:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 668              		.loc 1 93 3 is_stmt 1 view .LVU214
  93:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 669              		.loc 1 93 39 is_stmt 0 view .LVU215
 670 00b6 4FF00072 		mov	r2, #33554432
 671 00ba 0992     		str	r2, [sp, #36]
  94:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 672              		.loc 1 94 3 is_stmt 1 view .LVU216
  94:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 673              		.loc 1 94 37 is_stmt 0 view .LVU217
ARM GAS  C:\usertemp\ccseRIRt.s 			page 21


 674 00bc 0A93     		str	r3, [sp, #40]
  95:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 675              		.loc 1 95 3 is_stmt 1 view .LVU218
  95:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 676              		.loc 1 95 40 is_stmt 0 view .LVU219
 677 00be 0B93     		str	r3, [sp, #44]
  96:Core/Src/tim.c ****   {
 678              		.loc 1 96 3 is_stmt 1 view .LVU220
  96:Core/Src/tim.c ****   {
 679              		.loc 1 96 7 is_stmt 0 view .LVU221
 680 00c0 01A9     		add	r1, sp, #4
 681 00c2 0D48     		ldr	r0, .L45
 682 00c4 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 683              	.LVL25:
  96:Core/Src/tim.c ****   {
 684              		.loc 1 96 6 discriminator 1 view .LVU222
 685 00c8 98B9     		cbnz	r0, .L44
 686              	.L37:
 103:Core/Src/tim.c **** 
 687              		.loc 1 103 3 is_stmt 1 view .LVU223
 688 00ca 0B48     		ldr	r0, .L45
 689 00cc FFF7FEFF 		bl	HAL_TIM_MspPostInit
 690              	.LVL26:
 105:Core/Src/tim.c **** /* TIM3 init function */
 691              		.loc 1 105 1 is_stmt 0 view .LVU224
 692 00d0 1AB0     		add	sp, sp, #104
 693              	.LCFI17:
 694              		.cfi_remember_state
 695              		.cfi_def_cfa_offset 8
 696              		@ sp needed
 697 00d2 10BD     		pop	{r4, pc}
 698              	.L39:
 699              	.LCFI18:
 700              		.cfi_restore_state
  56:Core/Src/tim.c ****   }
 701              		.loc 1 56 5 is_stmt 1 view .LVU225
 702 00d4 FFF7FEFF 		bl	Error_Handler
 703              	.LVL27:
 704 00d8 B9E7     		b	.L32
 705              	.L40:
  61:Core/Src/tim.c ****   }
 706              		.loc 1 61 5 view .LVU226
 707 00da FFF7FEFF 		bl	Error_Handler
 708              	.LVL28:
 709 00de BFE7     		b	.L33
 710              	.L41:
  65:Core/Src/tim.c ****   }
 711              		.loc 1 65 5 view .LVU227
 712 00e0 FFF7FEFF 		bl	Error_Handler
 713              	.LVL29:
 714 00e4 C1E7     		b	.L34
 715              	.L42:
  72:Core/Src/tim.c ****   }
 716              		.loc 1 72 5 view .LVU228
 717 00e6 FFF7FEFF 		bl	Error_Handler
 718              	.LVL30:
 719 00ea C8E7     		b	.L35
ARM GAS  C:\usertemp\ccseRIRt.s 			page 22


 720              	.L43:
  83:Core/Src/tim.c ****   }
 721              		.loc 1 83 5 view .LVU229
 722 00ec FFF7FEFF 		bl	Error_Handler
 723              	.LVL31:
 724 00f0 D6E7     		b	.L36
 725              	.L44:
  98:Core/Src/tim.c ****   }
 726              		.loc 1 98 5 view .LVU230
 727 00f2 FFF7FEFF 		bl	Error_Handler
 728              	.LVL32:
 729 00f6 E8E7     		b	.L37
 730              	.L46:
 731              		.align	2
 732              	.L45:
 733 00f8 00000000 		.word	htim1
 734 00fc 00000140 		.word	1073807360
 735              		.cfi_endproc
 736              	.LFE333:
 738              		.section	.text.MX_TIM8_Init,"ax",%progbits
 739              		.align	1
 740              		.global	MX_TIM8_Init
 741              		.syntax unified
 742              		.thumb
 743              		.thumb_func
 745              	MX_TIM8_Init:
 746              	.LFB335:
 152:Core/Src/tim.c **** 
 747              		.loc 1 152 1 view -0
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 104
 750              		@ frame_needed = 0, uses_anonymous_args = 0
 751 0000 10B5     		push	{r4, lr}
 752              	.LCFI19:
 753              		.cfi_def_cfa_offset 8
 754              		.cfi_offset 4, -8
 755              		.cfi_offset 14, -4
 756 0002 9AB0     		sub	sp, sp, #104
 757              	.LCFI20:
 758              		.cfi_def_cfa_offset 112
 158:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 759              		.loc 1 158 3 view .LVU232
 158:Core/Src/tim.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 760              		.loc 1 158 26 is_stmt 0 view .LVU233
 761 0004 0024     		movs	r4, #0
 762 0006 1694     		str	r4, [sp, #88]
 763 0008 1794     		str	r4, [sp, #92]
 764 000a 1894     		str	r4, [sp, #96]
 765 000c 1994     		str	r4, [sp, #100]
 159:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 766              		.loc 1 159 3 is_stmt 1 view .LVU234
 159:Core/Src/tim.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 767              		.loc 1 159 27 is_stmt 0 view .LVU235
 768 000e 1394     		str	r4, [sp, #76]
 769 0010 1494     		str	r4, [sp, #80]
 770 0012 1594     		str	r4, [sp, #84]
 160:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
ARM GAS  C:\usertemp\ccseRIRt.s 			page 23


 771              		.loc 1 160 3 is_stmt 1 view .LVU236
 160:Core/Src/tim.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 772              		.loc 1 160 22 is_stmt 0 view .LVU237
 773 0014 0C94     		str	r4, [sp, #48]
 774 0016 0D94     		str	r4, [sp, #52]
 775 0018 0E94     		str	r4, [sp, #56]
 776 001a 0F94     		str	r4, [sp, #60]
 777 001c 1094     		str	r4, [sp, #64]
 778 001e 1194     		str	r4, [sp, #68]
 779 0020 1294     		str	r4, [sp, #72]
 161:Core/Src/tim.c **** 
 780              		.loc 1 161 3 is_stmt 1 view .LVU238
 161:Core/Src/tim.c **** 
 781              		.loc 1 161 34 is_stmt 0 view .LVU239
 782 0022 2C22     		movs	r2, #44
 783 0024 2146     		mov	r1, r4
 784 0026 01A8     		add	r0, sp, #4
 785 0028 FFF7FEFF 		bl	memset
 786              	.LVL33:
 166:Core/Src/tim.c ****   htim8.Init.Prescaler = 240-1;
 787              		.loc 1 166 3 is_stmt 1 view .LVU240
 166:Core/Src/tim.c ****   htim8.Init.Prescaler = 240-1;
 788              		.loc 1 166 18 is_stmt 0 view .LVU241
 789 002c 3248     		ldr	r0, .L61
 790 002e 334B     		ldr	r3, .L61+4
 791 0030 0360     		str	r3, [r0]
 167:Core/Src/tim.c ****   htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 792              		.loc 1 167 3 is_stmt 1 view .LVU242
 167:Core/Src/tim.c ****   htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 793              		.loc 1 167 24 is_stmt 0 view .LVU243
 794 0032 EF23     		movs	r3, #239
 795 0034 4360     		str	r3, [r0, #4]
 168:Core/Src/tim.c ****   htim8.Init.Period = 1000-1;
 796              		.loc 1 168 3 is_stmt 1 view .LVU244
 168:Core/Src/tim.c ****   htim8.Init.Period = 1000-1;
 797              		.loc 1 168 26 is_stmt 0 view .LVU245
 798 0036 8460     		str	r4, [r0, #8]
 169:Core/Src/tim.c ****   htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 799              		.loc 1 169 3 is_stmt 1 view .LVU246
 169:Core/Src/tim.c ****   htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800              		.loc 1 169 21 is_stmt 0 view .LVU247
 801 0038 40F2E733 		movw	r3, #999
 802 003c C360     		str	r3, [r0, #12]
 170:Core/Src/tim.c ****   htim8.Init.RepetitionCounter = 0;
 803              		.loc 1 170 3 is_stmt 1 view .LVU248
 170:Core/Src/tim.c ****   htim8.Init.RepetitionCounter = 0;
 804              		.loc 1 170 28 is_stmt 0 view .LVU249
 805 003e 0461     		str	r4, [r0, #16]
 171:Core/Src/tim.c ****   htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 806              		.loc 1 171 3 is_stmt 1 view .LVU250
 171:Core/Src/tim.c ****   htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 807              		.loc 1 171 32 is_stmt 0 view .LVU251
 808 0040 4461     		str	r4, [r0, #20]
 172:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
 809              		.loc 1 172 3 is_stmt 1 view .LVU252
 172:Core/Src/tim.c ****   if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
 810              		.loc 1 172 32 is_stmt 0 view .LVU253
ARM GAS  C:\usertemp\ccseRIRt.s 			page 24


 811 0042 8023     		movs	r3, #128
 812 0044 8361     		str	r3, [r0, #24]
 173:Core/Src/tim.c ****   {
 813              		.loc 1 173 3 is_stmt 1 view .LVU254
 173:Core/Src/tim.c ****   {
 814              		.loc 1 173 7 is_stmt 0 view .LVU255
 815 0046 FFF7FEFF 		bl	HAL_TIM_Base_Init
 816              	.LVL34:
 173:Core/Src/tim.c ****   {
 817              		.loc 1 173 6 discriminator 1 view .LVU256
 818 004a 0028     		cmp	r0, #0
 819 004c 41D1     		bne	.L55
 820              	.L48:
 177:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
 821              		.loc 1 177 3 is_stmt 1 view .LVU257
 177:Core/Src/tim.c ****   if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
 822              		.loc 1 177 34 is_stmt 0 view .LVU258
 823 004e 4FF48053 		mov	r3, #4096
 824 0052 1693     		str	r3, [sp, #88]
 178:Core/Src/tim.c ****   {
 825              		.loc 1 178 3 is_stmt 1 view .LVU259
 178:Core/Src/tim.c ****   {
 826              		.loc 1 178 7 is_stmt 0 view .LVU260
 827 0054 16A9     		add	r1, sp, #88
 828 0056 2848     		ldr	r0, .L61
 829 0058 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 830              	.LVL35:
 178:Core/Src/tim.c ****   {
 831              		.loc 1 178 6 discriminator 1 view .LVU261
 832 005c 0028     		cmp	r0, #0
 833 005e 3BD1     		bne	.L56
 834              	.L49:
 182:Core/Src/tim.c ****   {
 835              		.loc 1 182 3 is_stmt 1 view .LVU262
 182:Core/Src/tim.c ****   {
 836              		.loc 1 182 7 is_stmt 0 view .LVU263
 837 0060 2548     		ldr	r0, .L61
 838 0062 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 839              	.LVL36:
 182:Core/Src/tim.c ****   {
 840              		.loc 1 182 6 discriminator 1 view .LVU264
 841 0066 0028     		cmp	r0, #0
 842 0068 39D1     		bne	.L57
 843              	.L50:
 186:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 844              		.loc 1 186 3 is_stmt 1 view .LVU265
 186:Core/Src/tim.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 845              		.loc 1 186 37 is_stmt 0 view .LVU266
 846 006a 0023     		movs	r3, #0
 847 006c 1393     		str	r3, [sp, #76]
 187:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 848              		.loc 1 187 3 is_stmt 1 view .LVU267
 187:Core/Src/tim.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 849              		.loc 1 187 38 is_stmt 0 view .LVU268
 850 006e 1493     		str	r3, [sp, #80]
 188:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 851              		.loc 1 188 3 is_stmt 1 view .LVU269
ARM GAS  C:\usertemp\ccseRIRt.s 			page 25


 188:Core/Src/tim.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 852              		.loc 1 188 33 is_stmt 0 view .LVU270
 853 0070 1593     		str	r3, [sp, #84]
 189:Core/Src/tim.c ****   {
 854              		.loc 1 189 3 is_stmt 1 view .LVU271
 189:Core/Src/tim.c ****   {
 855              		.loc 1 189 7 is_stmt 0 view .LVU272
 856 0072 13A9     		add	r1, sp, #76
 857 0074 2048     		ldr	r0, .L61
 858 0076 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 859              	.LVL37:
 189:Core/Src/tim.c ****   {
 860              		.loc 1 189 6 discriminator 1 view .LVU273
 861 007a 0028     		cmp	r0, #0
 862 007c 32D1     		bne	.L58
 863              	.L51:
 193:Core/Src/tim.c ****   sConfigOC.Pulse = 200;
 864              		.loc 1 193 3 is_stmt 1 view .LVU274
 193:Core/Src/tim.c ****   sConfigOC.Pulse = 200;
 865              		.loc 1 193 20 is_stmt 0 view .LVU275
 866 007e 6023     		movs	r3, #96
 867 0080 0C93     		str	r3, [sp, #48]
 194:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 868              		.loc 1 194 3 is_stmt 1 view .LVU276
 194:Core/Src/tim.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 869              		.loc 1 194 19 is_stmt 0 view .LVU277
 870 0082 C823     		movs	r3, #200
 871 0084 0D93     		str	r3, [sp, #52]
 195:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 872              		.loc 1 195 3 is_stmt 1 view .LVU278
 195:Core/Src/tim.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 873              		.loc 1 195 24 is_stmt 0 view .LVU279
 874 0086 0023     		movs	r3, #0
 875 0088 0E93     		str	r3, [sp, #56]
 196:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 876              		.loc 1 196 3 is_stmt 1 view .LVU280
 196:Core/Src/tim.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 877              		.loc 1 196 25 is_stmt 0 view .LVU281
 878 008a 0F93     		str	r3, [sp, #60]
 197:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 879              		.loc 1 197 3 is_stmt 1 view .LVU282
 197:Core/Src/tim.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 880              		.loc 1 197 24 is_stmt 0 view .LVU283
 881 008c 1093     		str	r3, [sp, #64]
 198:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 882              		.loc 1 198 3 is_stmt 1 view .LVU284
 198:Core/Src/tim.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 883              		.loc 1 198 25 is_stmt 0 view .LVU285
 884 008e 1193     		str	r3, [sp, #68]
 199:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 885              		.loc 1 199 3 is_stmt 1 view .LVU286
 199:Core/Src/tim.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 886              		.loc 1 199 26 is_stmt 0 view .LVU287
 887 0090 1293     		str	r3, [sp, #72]
 200:Core/Src/tim.c ****   {
 888              		.loc 1 200 3 is_stmt 1 view .LVU288
 200:Core/Src/tim.c ****   {
ARM GAS  C:\usertemp\ccseRIRt.s 			page 26


 889              		.loc 1 200 7 is_stmt 0 view .LVU289
 890 0092 0822     		movs	r2, #8
 891 0094 0CA9     		add	r1, sp, #48
 892 0096 1848     		ldr	r0, .L61
 893 0098 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 894              	.LVL38:
 200:Core/Src/tim.c ****   {
 895              		.loc 1 200 6 discriminator 1 view .LVU290
 896 009c 28BB     		cbnz	r0, .L59
 897              	.L52:
 204:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 898              		.loc 1 204 3 is_stmt 1 view .LVU291
 204:Core/Src/tim.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 899              		.loc 1 204 40 is_stmt 0 view .LVU292
 900 009e 0023     		movs	r3, #0
 901 00a0 0193     		str	r3, [sp, #4]
 205:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 902              		.loc 1 205 3 is_stmt 1 view .LVU293
 205:Core/Src/tim.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 903              		.loc 1 205 41 is_stmt 0 view .LVU294
 904 00a2 0293     		str	r3, [sp, #8]
 206:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 905              		.loc 1 206 3 is_stmt 1 view .LVU295
 206:Core/Src/tim.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 906              		.loc 1 206 34 is_stmt 0 view .LVU296
 907 00a4 0393     		str	r3, [sp, #12]
 207:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 908              		.loc 1 207 3 is_stmt 1 view .LVU297
 207:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 909              		.loc 1 207 33 is_stmt 0 view .LVU298
 910 00a6 0493     		str	r3, [sp, #16]
 208:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 911              		.loc 1 208 3 is_stmt 1 view .LVU299
 208:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 912              		.loc 1 208 35 is_stmt 0 view .LVU300
 913 00a8 0593     		str	r3, [sp, #20]
 209:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 914              		.loc 1 209 3 is_stmt 1 view .LVU301
 209:Core/Src/tim.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 915              		.loc 1 209 38 is_stmt 0 view .LVU302
 916 00aa 4FF40052 		mov	r2, #8192
 917 00ae 0692     		str	r2, [sp, #24]
 210:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 918              		.loc 1 210 3 is_stmt 1 view .LVU303
 210:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 919              		.loc 1 210 36 is_stmt 0 view .LVU304
 920 00b0 0793     		str	r3, [sp, #28]
 211:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 921              		.loc 1 211 3 is_stmt 1 view .LVU305
 211:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 922              		.loc 1 211 36 is_stmt 0 view .LVU306
 923 00b2 0893     		str	r3, [sp, #32]
 212:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 924              		.loc 1 212 3 is_stmt 1 view .LVU307
 212:Core/Src/tim.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 925              		.loc 1 212 39 is_stmt 0 view .LVU308
 926 00b4 4FF00072 		mov	r2, #33554432
ARM GAS  C:\usertemp\ccseRIRt.s 			page 27


 927 00b8 0992     		str	r2, [sp, #36]
 213:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 928              		.loc 1 213 3 is_stmt 1 view .LVU309
 213:Core/Src/tim.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 929              		.loc 1 213 37 is_stmt 0 view .LVU310
 930 00ba 0A93     		str	r3, [sp, #40]
 214:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim8, &sBreakDeadTimeConfig) != HAL_OK)
 931              		.loc 1 214 3 is_stmt 1 view .LVU311
 214:Core/Src/tim.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim8, &sBreakDeadTimeConfig) != HAL_OK)
 932              		.loc 1 214 40 is_stmt 0 view .LVU312
 933 00bc 0B93     		str	r3, [sp, #44]
 215:Core/Src/tim.c ****   {
 934              		.loc 1 215 3 is_stmt 1 view .LVU313
 215:Core/Src/tim.c ****   {
 935              		.loc 1 215 7 is_stmt 0 view .LVU314
 936 00be 01A9     		add	r1, sp, #4
 937 00c0 0D48     		ldr	r0, .L61
 938 00c2 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 939              	.LVL39:
 215:Core/Src/tim.c ****   {
 940              		.loc 1 215 6 discriminator 1 view .LVU315
 941 00c6 98B9     		cbnz	r0, .L60
 942              	.L53:
 222:Core/Src/tim.c **** 
 943              		.loc 1 222 3 is_stmt 1 view .LVU316
 944 00c8 0B48     		ldr	r0, .L61
 945 00ca FFF7FEFF 		bl	HAL_TIM_MspPostInit
 946              	.LVL40:
 224:Core/Src/tim.c **** 
 947              		.loc 1 224 1 is_stmt 0 view .LVU317
 948 00ce 1AB0     		add	sp, sp, #104
 949              	.LCFI21:
 950              		.cfi_remember_state
 951              		.cfi_def_cfa_offset 8
 952              		@ sp needed
 953 00d0 10BD     		pop	{r4, pc}
 954              	.L55:
 955              	.LCFI22:
 956              		.cfi_restore_state
 175:Core/Src/tim.c ****   }
 957              		.loc 1 175 5 is_stmt 1 view .LVU318
 958 00d2 FFF7FEFF 		bl	Error_Handler
 959              	.LVL41:
 960 00d6 BAE7     		b	.L48
 961              	.L56:
 180:Core/Src/tim.c ****   }
 962              		.loc 1 180 5 view .LVU319
 963 00d8 FFF7FEFF 		bl	Error_Handler
 964              	.LVL42:
 965 00dc C0E7     		b	.L49
 966              	.L57:
 184:Core/Src/tim.c ****   }
 967              		.loc 1 184 5 view .LVU320
 968 00de FFF7FEFF 		bl	Error_Handler
 969              	.LVL43:
 970 00e2 C2E7     		b	.L50
 971              	.L58:
ARM GAS  C:\usertemp\ccseRIRt.s 			page 28


 191:Core/Src/tim.c ****   }
 972              		.loc 1 191 5 view .LVU321
 973 00e4 FFF7FEFF 		bl	Error_Handler
 974              	.LVL44:
 975 00e8 C9E7     		b	.L51
 976              	.L59:
 202:Core/Src/tim.c ****   }
 977              		.loc 1 202 5 view .LVU322
 978 00ea FFF7FEFF 		bl	Error_Handler
 979              	.LVL45:
 980 00ee D6E7     		b	.L52
 981              	.L60:
 217:Core/Src/tim.c ****   }
 982              		.loc 1 217 5 view .LVU323
 983 00f0 FFF7FEFF 		bl	Error_Handler
 984              	.LVL46:
 985 00f4 E8E7     		b	.L53
 986              	.L62:
 987 00f6 00BF     		.align	2
 988              	.L61:
 989 00f8 00000000 		.word	htim8
 990 00fc 00040140 		.word	1073808384
 991              		.cfi_endproc
 992              	.LFE335:
 994              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 995              		.align	1
 996              		.global	HAL_TIM_Base_MspDeInit
 997              		.syntax unified
 998              		.thumb
 999              		.thumb_func
 1001              	HAL_TIM_Base_MspDeInit:
 1002              	.LVL47:
 1003              	.LFB339:
 329:Core/Src/tim.c **** 
 330:Core/Src/tim.c **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 331:Core/Src/tim.c **** {
 1004              		.loc 1 331 1 view -0
 1005              		.cfi_startproc
 1006              		@ args = 0, pretend = 0, frame = 0
 1007              		@ frame_needed = 0, uses_anonymous_args = 0
 1008              		@ link register save eliminated.
 332:Core/Src/tim.c **** 
 333:Core/Src/tim.c ****   if(tim_baseHandle->Instance==TIM1)
 1009              		.loc 1 333 3 view .LVU325
 1010              		.loc 1 333 20 is_stmt 0 view .LVU326
 1011 0000 0368     		ldr	r3, [r0]
 1012              		.loc 1 333 5 view .LVU327
 1013 0002 0B4A     		ldr	r2, .L68
 1014 0004 9342     		cmp	r3, r2
 1015 0006 03D0     		beq	.L66
 334:Core/Src/tim.c ****   {
 335:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
 336:Core/Src/tim.c **** 
 337:Core/Src/tim.c ****   /* USER CODE END TIM1_MspDeInit 0 */
 338:Core/Src/tim.c ****     /* Peripheral clock disable */
 339:Core/Src/tim.c ****     __HAL_RCC_TIM1_CLK_DISABLE();
 340:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
ARM GAS  C:\usertemp\ccseRIRt.s 			page 29


 341:Core/Src/tim.c **** 
 342:Core/Src/tim.c ****   /* USER CODE END TIM1_MspDeInit 1 */
 343:Core/Src/tim.c ****   }
 344:Core/Src/tim.c ****   else if(tim_baseHandle->Instance==TIM8)
 1016              		.loc 1 344 8 is_stmt 1 view .LVU328
 1017              		.loc 1 344 10 is_stmt 0 view .LVU329
 1018 0008 0A4A     		ldr	r2, .L68+4
 1019 000a 9342     		cmp	r3, r2
 1020 000c 08D0     		beq	.L67
 1021              	.L63:
 345:Core/Src/tim.c ****   {
 346:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspDeInit 0 */
 347:Core/Src/tim.c **** 
 348:Core/Src/tim.c ****   /* USER CODE END TIM8_MspDeInit 0 */
 349:Core/Src/tim.c ****     /* Peripheral clock disable */
 350:Core/Src/tim.c ****     __HAL_RCC_TIM8_CLK_DISABLE();
 351:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspDeInit 1 */
 352:Core/Src/tim.c **** 
 353:Core/Src/tim.c ****   /* USER CODE END TIM8_MspDeInit 1 */
 354:Core/Src/tim.c ****   }
 355:Core/Src/tim.c **** }
 1022              		.loc 1 355 1 view .LVU330
 1023 000e 7047     		bx	lr
 1024              	.L66:
 339:Core/Src/tim.c ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 1025              		.loc 1 339 5 is_stmt 1 view .LVU331
 1026 0010 094A     		ldr	r2, .L68+8
 1027 0012 D2F8F030 		ldr	r3, [r2, #240]
 1028 0016 23F00103 		bic	r3, r3, #1
 1029 001a C2F8F030 		str	r3, [r2, #240]
 1030 001e 7047     		bx	lr
 1031              	.L67:
 350:Core/Src/tim.c ****   /* USER CODE BEGIN TIM8_MspDeInit 1 */
 1032              		.loc 1 350 5 view .LVU332
 1033 0020 054A     		ldr	r2, .L68+8
 1034 0022 D2F8F030 		ldr	r3, [r2, #240]
 1035 0026 23F00203 		bic	r3, r3, #2
 1036 002a C2F8F030 		str	r3, [r2, #240]
 1037              		.loc 1 355 1 is_stmt 0 view .LVU333
 1038 002e EEE7     		b	.L63
 1039              	.L69:
 1040              		.align	2
 1041              	.L68:
 1042 0030 00000140 		.word	1073807360
 1043 0034 00040140 		.word	1073808384
 1044 0038 00440258 		.word	1476543488
 1045              		.cfi_endproc
 1046              	.LFE339:
 1048              		.section	.text.HAL_TIM_Encoder_MspDeInit,"ax",%progbits
 1049              		.align	1
 1050              		.global	HAL_TIM_Encoder_MspDeInit
 1051              		.syntax unified
 1052              		.thumb
 1053              		.thumb_func
 1055              	HAL_TIM_Encoder_MspDeInit:
 1056              	.LVL48:
 1057              	.LFB340:
ARM GAS  C:\usertemp\ccseRIRt.s 			page 30


 356:Core/Src/tim.c **** 
 357:Core/Src/tim.c **** void HAL_TIM_Encoder_MspDeInit(TIM_HandleTypeDef* tim_encoderHandle)
 358:Core/Src/tim.c **** {
 1058              		.loc 1 358 1 is_stmt 1 view -0
 1059              		.cfi_startproc
 1060              		@ args = 0, pretend = 0, frame = 0
 1061              		@ frame_needed = 0, uses_anonymous_args = 0
 1062              		.loc 1 358 1 is_stmt 0 view .LVU335
 1063 0000 08B5     		push	{r3, lr}
 1064              	.LCFI23:
 1065              		.cfi_def_cfa_offset 8
 1066              		.cfi_offset 3, -8
 1067              		.cfi_offset 14, -4
 359:Core/Src/tim.c **** 
 360:Core/Src/tim.c ****   if(tim_encoderHandle->Instance==TIM3)
 1068              		.loc 1 360 3 is_stmt 1 view .LVU336
 1069              		.loc 1 360 23 is_stmt 0 view .LVU337
 1070 0002 0268     		ldr	r2, [r0]
 1071              		.loc 1 360 5 view .LVU338
 1072 0004 074B     		ldr	r3, .L74
 1073 0006 9A42     		cmp	r2, r3
 1074 0008 00D0     		beq	.L73
 1075              	.LVL49:
 1076              	.L70:
 361:Core/Src/tim.c ****   {
 362:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_MspDeInit 0 */
 363:Core/Src/tim.c **** 
 364:Core/Src/tim.c ****   /* USER CODE END TIM3_MspDeInit 0 */
 365:Core/Src/tim.c ****     /* Peripheral clock disable */
 366:Core/Src/tim.c ****     __HAL_RCC_TIM3_CLK_DISABLE();
 367:Core/Src/tim.c **** 
 368:Core/Src/tim.c ****     /**TIM3 GPIO Configuration
 369:Core/Src/tim.c ****     PC6     ------> TIM3_CH1
 370:Core/Src/tim.c ****     PC7     ------> TIM3_CH2
 371:Core/Src/tim.c ****     */
 372:Core/Src/tim.c ****     HAL_GPIO_DeInit(GPIOC, GPIO_PIN_6|GPIO_PIN_7);
 373:Core/Src/tim.c **** 
 374:Core/Src/tim.c ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 375:Core/Src/tim.c **** 
 376:Core/Src/tim.c ****   /* USER CODE END TIM3_MspDeInit 1 */
 377:Core/Src/tim.c ****   }
 378:Core/Src/tim.c **** }
 1077              		.loc 1 378 1 view .LVU339
 1078 000a 08BD     		pop	{r3, pc}
 1079              	.LVL50:
 1080              	.L73:
 366:Core/Src/tim.c **** 
 1081              		.loc 1 366 5 is_stmt 1 view .LVU340
 1082 000c 064A     		ldr	r2, .L74+4
 1083 000e D2F8E830 		ldr	r3, [r2, #232]
 1084 0012 23F00203 		bic	r3, r3, #2
 1085 0016 C2F8E830 		str	r3, [r2, #232]
 372:Core/Src/tim.c **** 
 1086              		.loc 1 372 5 view .LVU341
 1087 001a C021     		movs	r1, #192
 1088 001c 0348     		ldr	r0, .L74+8
 1089              	.LVL51:
ARM GAS  C:\usertemp\ccseRIRt.s 			page 31


 372:Core/Src/tim.c **** 
 1090              		.loc 1 372 5 is_stmt 0 view .LVU342
 1091 001e FFF7FEFF 		bl	HAL_GPIO_DeInit
 1092              	.LVL52:
 1093              		.loc 1 378 1 view .LVU343
 1094 0022 F2E7     		b	.L70
 1095              	.L75:
 1096              		.align	2
 1097              	.L74:
 1098 0024 00040040 		.word	1073742848
 1099 0028 00440258 		.word	1476543488
 1100 002c 00080258 		.word	1476528128
 1101              		.cfi_endproc
 1102              	.LFE340:
 1104              		.global	htim8
 1105              		.section	.bss.htim8,"aw",%nobits
 1106              		.align	2
 1109              	htim8:
 1110 0000 00000000 		.space	76
 1110      00000000 
 1110      00000000 
 1110      00000000 
 1110      00000000 
 1111              		.global	htim3
 1112              		.section	.bss.htim3,"aw",%nobits
 1113              		.align	2
 1116              	htim3:
 1117 0000 00000000 		.space	76
 1117      00000000 
 1117      00000000 
 1117      00000000 
 1117      00000000 
 1118              		.global	htim1
 1119              		.section	.bss.htim1,"aw",%nobits
 1120              		.align	2
 1123              	htim1:
 1124 0000 00000000 		.space	76
 1124      00000000 
 1124      00000000 
 1124      00000000 
 1124      00000000 
 1125              		.text
 1126              	.Letext0:
 1127              		.file 2 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 1128              		.file 3 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 1129              		.file 4 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 1130              		.file 5 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 1131              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 1132              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 1133              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim.h"
 1134              		.file 9 "Core/Inc/tim.h"
 1135              		.file 10 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim_ex.h"
 1136              		.file 11 "Core/Inc/main.h"
 1137              		.file 12 "<built-in>"
ARM GAS  C:\usertemp\ccseRIRt.s 			page 32


DEFINED SYMBOLS
                            *ABS*:00000000 tim.c
C:\usertemp\ccseRIRt.s:20     .text.MX_TIM3_Init:00000000 $t
C:\usertemp\ccseRIRt.s:26     .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\usertemp\ccseRIRt.s:136    .text.MX_TIM3_Init:0000005c $d
C:\usertemp\ccseRIRt.s:1116   .bss.htim3:00000000 htim3
C:\usertemp\ccseRIRt.s:142    .text.HAL_TIM_Base_MspInit:00000000 $t
C:\usertemp\ccseRIRt.s:148    .text.HAL_TIM_Base_MspInit:00000000 HAL_TIM_Base_MspInit
C:\usertemp\ccseRIRt.s:222    .text.HAL_TIM_Base_MspInit:0000004c $d
C:\usertemp\ccseRIRt.s:229    .text.HAL_TIM_Encoder_MspInit:00000000 $t
C:\usertemp\ccseRIRt.s:235    .text.HAL_TIM_Encoder_MspInit:00000000 HAL_TIM_Encoder_MspInit
C:\usertemp\ccseRIRt.s:334    .text.HAL_TIM_Encoder_MspInit:00000064 $d
C:\usertemp\ccseRIRt.s:341    .text.HAL_TIM_MspPostInit:00000000 $t
C:\usertemp\ccseRIRt.s:347    .text.HAL_TIM_MspPostInit:00000000 HAL_TIM_MspPostInit
C:\usertemp\ccseRIRt.s:475    .text.HAL_TIM_MspPostInit:00000080 $d
C:\usertemp\ccseRIRt.s:483    .text.MX_TIM1_Init:00000000 $t
C:\usertemp\ccseRIRt.s:489    .text.MX_TIM1_Init:00000000 MX_TIM1_Init
C:\usertemp\ccseRIRt.s:733    .text.MX_TIM1_Init:000000f8 $d
C:\usertemp\ccseRIRt.s:1123   .bss.htim1:00000000 htim1
C:\usertemp\ccseRIRt.s:739    .text.MX_TIM8_Init:00000000 $t
C:\usertemp\ccseRIRt.s:745    .text.MX_TIM8_Init:00000000 MX_TIM8_Init
C:\usertemp\ccseRIRt.s:989    .text.MX_TIM8_Init:000000f8 $d
C:\usertemp\ccseRIRt.s:1109   .bss.htim8:00000000 htim8
C:\usertemp\ccseRIRt.s:995    .text.HAL_TIM_Base_MspDeInit:00000000 $t
C:\usertemp\ccseRIRt.s:1001   .text.HAL_TIM_Base_MspDeInit:00000000 HAL_TIM_Base_MspDeInit
C:\usertemp\ccseRIRt.s:1042   .text.HAL_TIM_Base_MspDeInit:00000030 $d
C:\usertemp\ccseRIRt.s:1049   .text.HAL_TIM_Encoder_MspDeInit:00000000 $t
C:\usertemp\ccseRIRt.s:1055   .text.HAL_TIM_Encoder_MspDeInit:00000000 HAL_TIM_Encoder_MspDeInit
C:\usertemp\ccseRIRt.s:1098   .text.HAL_TIM_Encoder_MspDeInit:00000024 $d
C:\usertemp\ccseRIRt.s:1106   .bss.htim8:00000000 $d
C:\usertemp\ccseRIRt.s:1113   .bss.htim3:00000000 $d
C:\usertemp\ccseRIRt.s:1120   .bss.htim1:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_TIM_Encoder_Init
HAL_TIMEx_MasterConfigSynchronization
Error_Handler
HAL_GPIO_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_GPIO_DeInit
