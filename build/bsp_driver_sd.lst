ARM GAS  C:\usertemp\cchu7nUQ.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"bsp_driver_sd.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "FATFS/Target/bsp_driver_sd.c"
  19              		.section	.text.BSP_SD_ITConfig,"ax",%progbits
  20              		.align	1
  21              		.weak	BSP_SD_ITConfig
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	BSP_SD_ITConfig:
  27              	.LFB334:
   1:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN Header */
   2:FATFS/Target/bsp_driver_sd.c **** /**
   3:FATFS/Target/bsp_driver_sd.c ****  ******************************************************************************
   4:FATFS/Target/bsp_driver_sd.c ****  * @file    bsp_driver_sd.c for H7 (based on stm32h743i_eval_sd.c)
   5:FATFS/Target/bsp_driver_sd.c ****  * @brief   This file includes a generic uSD card driver.
   6:FATFS/Target/bsp_driver_sd.c ****  *          To be completed by the user according to the board used for the project.
   7:FATFS/Target/bsp_driver_sd.c ****  * @note    Some functions generated as weak: they can be overridden by
   8:FATFS/Target/bsp_driver_sd.c ****  *          - code in user files
   9:FATFS/Target/bsp_driver_sd.c ****  *          - or BSP code from the FW pack files
  10:FATFS/Target/bsp_driver_sd.c ****  *          if such files are added to the generated project (by the user).
  11:FATFS/Target/bsp_driver_sd.c ****  ******************************************************************************
  12:FATFS/Target/bsp_driver_sd.c ****   * @attention
  13:FATFS/Target/bsp_driver_sd.c ****   *
  14:FATFS/Target/bsp_driver_sd.c ****   * <h2><center>&copy; Copyright (c) 2024 STMicroelectronics.
  15:FATFS/Target/bsp_driver_sd.c ****   * All rights reserved.</center></h2>
  16:FATFS/Target/bsp_driver_sd.c ****   *
  17:FATFS/Target/bsp_driver_sd.c ****   * This software component is licensed by ST under Ultimate Liberty license
  18:FATFS/Target/bsp_driver_sd.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  19:FATFS/Target/bsp_driver_sd.c ****   * the License. You may obtain a copy of the License at:
  20:FATFS/Target/bsp_driver_sd.c ****   *                             www.st.com/SLA0044
  21:FATFS/Target/bsp_driver_sd.c ****   *
  22:FATFS/Target/bsp_driver_sd.c ****  ******************************************************************************
  23:FATFS/Target/bsp_driver_sd.c ****  */
  24:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END Header */
  25:FATFS/Target/bsp_driver_sd.c **** 
  26:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN FirstSection */
  27:FATFS/Target/bsp_driver_sd.c **** /* can be used to modify / undefine following code or add new definitions */
  28:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END FirstSection */
  29:FATFS/Target/bsp_driver_sd.c **** /* Includes ------------------------------------------------------------------*/
  30:FATFS/Target/bsp_driver_sd.c **** #include "bsp_driver_sd.h"
  31:FATFS/Target/bsp_driver_sd.c **** 
ARM GAS  C:\usertemp\cchu7nUQ.s 			page 2


  32:FATFS/Target/bsp_driver_sd.c **** /* Extern variables ---------------------------------------------------------*/
  33:FATFS/Target/bsp_driver_sd.c **** 
  34:FATFS/Target/bsp_driver_sd.c **** extern SD_HandleTypeDef hsd1;
  35:FATFS/Target/bsp_driver_sd.c **** 
  36:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeInitSection */
  37:FATFS/Target/bsp_driver_sd.c **** /* can be used to modify / undefine following code or add code */
  38:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END BeforeInitSection */
  39:FATFS/Target/bsp_driver_sd.c **** /**
  40:FATFS/Target/bsp_driver_sd.c ****   * @brief  Initializes the SD card device.
  41:FATFS/Target/bsp_driver_sd.c ****   * @retval SD status
  42:FATFS/Target/bsp_driver_sd.c ****   */
  43:FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_Init(void)
  44:FATFS/Target/bsp_driver_sd.c **** {
  45:FATFS/Target/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
  46:FATFS/Target/bsp_driver_sd.c ****   /* Check if the SD card is plugged in the slot */
  47:FATFS/Target/bsp_driver_sd.c ****   if (BSP_SD_IsDetected() != SD_PRESENT)
  48:FATFS/Target/bsp_driver_sd.c ****   {
  49:FATFS/Target/bsp_driver_sd.c ****     return MSD_ERROR_SD_NOT_PRESENT;
  50:FATFS/Target/bsp_driver_sd.c ****   }
  51:FATFS/Target/bsp_driver_sd.c ****   /* HAL SD initialization */
  52:FATFS/Target/bsp_driver_sd.c ****   sd_state = HAL_SD_Init(&hsd1);
  53:FATFS/Target/bsp_driver_sd.c ****   /* Configure SD Bus width (4 bits mode selected) */
  54:FATFS/Target/bsp_driver_sd.c ****   if (sd_state == MSD_OK)
  55:FATFS/Target/bsp_driver_sd.c ****   {
  56:FATFS/Target/bsp_driver_sd.c ****     /* Enable wide operation */
  57:FATFS/Target/bsp_driver_sd.c ****     if (HAL_SD_ConfigWideBusOperation(&hsd1, SDMMC_BUS_WIDE_4B) != HAL_OK)
  58:FATFS/Target/bsp_driver_sd.c ****     {
  59:FATFS/Target/bsp_driver_sd.c ****       sd_state = MSD_ERROR;
  60:FATFS/Target/bsp_driver_sd.c ****     }
  61:FATFS/Target/bsp_driver_sd.c ****   }
  62:FATFS/Target/bsp_driver_sd.c **** 
  63:FATFS/Target/bsp_driver_sd.c ****   return sd_state;
  64:FATFS/Target/bsp_driver_sd.c **** }
  65:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN AfterInitSection */
  66:FATFS/Target/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
  67:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END AfterInitSection */
  68:FATFS/Target/bsp_driver_sd.c **** 
  69:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN InterruptMode */
  70:FATFS/Target/bsp_driver_sd.c **** /**
  71:FATFS/Target/bsp_driver_sd.c ****   * @brief  Configures Interrupt mode for SD detection pin.
  72:FATFS/Target/bsp_driver_sd.c ****   * @retval Returns 0
  73:FATFS/Target/bsp_driver_sd.c ****   */
  74:FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_ITConfig(void)
  75:FATFS/Target/bsp_driver_sd.c **** {
  28              		.loc 1 75 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  76:FATFS/Target/bsp_driver_sd.c ****   /* Code to be updated by the user or replaced by one from the FW pack (in a stmxxxx_sd.c file) */
  77:FATFS/Target/bsp_driver_sd.c **** 
  78:FATFS/Target/bsp_driver_sd.c ****   return (uint8_t)0;
  33              		.loc 1 78 3 view .LVU1
  79:FATFS/Target/bsp_driver_sd.c **** }
  34              		.loc 1 79 1 is_stmt 0 view .LVU2
  35 0000 0020     		movs	r0, #0
  36 0002 7047     		bx	lr
ARM GAS  C:\usertemp\cchu7nUQ.s 			page 3


  37              		.cfi_endproc
  38              	.LFE334:
  40              		.section	.text.BSP_SD_ReadBlocks,"ax",%progbits
  41              		.align	1
  42              		.weak	BSP_SD_ReadBlocks
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  47              	BSP_SD_ReadBlocks:
  48              	.LVL0:
  49              	.LFB335:
  80:FATFS/Target/bsp_driver_sd.c **** 
  81:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END InterruptMode */
  82:FATFS/Target/bsp_driver_sd.c **** 
  83:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeReadBlocksSection */
  84:FATFS/Target/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
  85:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END BeforeReadBlocksSection */
  86:FATFS/Target/bsp_driver_sd.c **** /**
  87:FATFS/Target/bsp_driver_sd.c ****   * @brief  Reads block(s) from a specified address in an SD card, in polling mode.
  88:FATFS/Target/bsp_driver_sd.c ****   * @param  pData: Pointer to the buffer that will contain the data to transmit
  89:FATFS/Target/bsp_driver_sd.c ****   * @param  ReadAddr: Address from where data is to be read
  90:FATFS/Target/bsp_driver_sd.c ****   * @param  NumOfBlocks: Number of SD blocks to read
  91:FATFS/Target/bsp_driver_sd.c ****   * @param  Timeout: Timeout for read operation
  92:FATFS/Target/bsp_driver_sd.c ****   * @retval SD status
  93:FATFS/Target/bsp_driver_sd.c ****   */
  94:FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_ReadBlocks(uint32_t *pData, uint32_t ReadAddr, uint32_t NumOfBlocks, uint32_t
  95:FATFS/Target/bsp_driver_sd.c **** {
  50              		.loc 1 95 1 is_stmt 1 view -0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		.loc 1 95 1 is_stmt 0 view .LVU4
  55 0000 00B5     		push	{lr}
  56              	.LCFI0:
  57              		.cfi_def_cfa_offset 4
  58              		.cfi_offset 14, -4
  59 0002 83B0     		sub	sp, sp, #12
  60              	.LCFI1:
  61              		.cfi_def_cfa_offset 16
  96:FATFS/Target/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
  62              		.loc 1 96 3 is_stmt 1 view .LVU5
  63              	.LVL1:
  97:FATFS/Target/bsp_driver_sd.c **** 
  98:FATFS/Target/bsp_driver_sd.c ****   if (HAL_SD_ReadBlocks(&hsd1, (uint8_t *)pData, ReadAddr, NumOfBlocks, Timeout) != HAL_OK)
  64              		.loc 1 98 3 view .LVU6
  65              		.loc 1 98 7 is_stmt 0 view .LVU7
  66 0004 0093     		str	r3, [sp]
  67 0006 1346     		mov	r3, r2
  68              	.LVL2:
  69              		.loc 1 98 7 view .LVU8
  70 0008 0A46     		mov	r2, r1
  71              	.LVL3:
  72              		.loc 1 98 7 view .LVU9
  73 000a 0146     		mov	r1, r0
  74              	.LVL4:
  75              		.loc 1 98 7 view .LVU10
  76 000c 0348     		ldr	r0, .L6
ARM GAS  C:\usertemp\cchu7nUQ.s 			page 4


  77              	.LVL5:
  78              		.loc 1 98 7 view .LVU11
  79 000e FFF7FEFF 		bl	HAL_SD_ReadBlocks
  80              	.LVL6:
  81              		.loc 1 98 6 discriminator 1 view .LVU12
  82 0012 00B1     		cbz	r0, .L3
  99:FATFS/Target/bsp_driver_sd.c ****   {
 100:FATFS/Target/bsp_driver_sd.c ****     sd_state = MSD_ERROR;
  83              		.loc 1 100 14 view .LVU13
  84 0014 0120     		movs	r0, #1
  85              	.L3:
  86              	.LVL7:
 101:FATFS/Target/bsp_driver_sd.c ****   }
 102:FATFS/Target/bsp_driver_sd.c **** 
 103:FATFS/Target/bsp_driver_sd.c ****   return sd_state;
  87              		.loc 1 103 3 is_stmt 1 view .LVU14
 104:FATFS/Target/bsp_driver_sd.c **** }
  88              		.loc 1 104 1 is_stmt 0 view .LVU15
  89 0016 03B0     		add	sp, sp, #12
  90              	.LCFI2:
  91              		.cfi_def_cfa_offset 4
  92              		@ sp needed
  93 0018 5DF804FB 		ldr	pc, [sp], #4
  94              	.L7:
  95              		.align	2
  96              	.L6:
  97 001c 00000000 		.word	hsd1
  98              		.cfi_endproc
  99              	.LFE335:
 101              		.section	.text.BSP_SD_WriteBlocks,"ax",%progbits
 102              		.align	1
 103              		.weak	BSP_SD_WriteBlocks
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 108              	BSP_SD_WriteBlocks:
 109              	.LVL8:
 110              	.LFB336:
 105:FATFS/Target/bsp_driver_sd.c **** 
 106:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeWriteBlocksSection */
 107:FATFS/Target/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
 108:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END BeforeWriteBlocksSection */
 109:FATFS/Target/bsp_driver_sd.c **** /**
 110:FATFS/Target/bsp_driver_sd.c ****   * @brief  Writes block(s) to a specified address in an SD card, in polling mode.
 111:FATFS/Target/bsp_driver_sd.c ****   * @param  pData: Pointer to the buffer that will contain the data to transmit
 112:FATFS/Target/bsp_driver_sd.c ****   * @param  WriteAddr: Address from where data is to be written
 113:FATFS/Target/bsp_driver_sd.c ****   * @param  NumOfBlocks: Number of SD blocks to write
 114:FATFS/Target/bsp_driver_sd.c ****   * @param  Timeout: Timeout for write operation
 115:FATFS/Target/bsp_driver_sd.c ****   * @retval SD status
 116:FATFS/Target/bsp_driver_sd.c ****   */
 117:FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_WriteBlocks(uint32_t *pData, uint32_t WriteAddr, uint32_t NumOfBlocks, uint32
 118:FATFS/Target/bsp_driver_sd.c **** {
 111              		.loc 1 118 1 is_stmt 1 view -0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		.loc 1 118 1 is_stmt 0 view .LVU17
ARM GAS  C:\usertemp\cchu7nUQ.s 			page 5


 116 0000 00B5     		push	{lr}
 117              	.LCFI3:
 118              		.cfi_def_cfa_offset 4
 119              		.cfi_offset 14, -4
 120 0002 83B0     		sub	sp, sp, #12
 121              	.LCFI4:
 122              		.cfi_def_cfa_offset 16
 119:FATFS/Target/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 123              		.loc 1 119 3 is_stmt 1 view .LVU18
 124              	.LVL9:
 120:FATFS/Target/bsp_driver_sd.c **** 
 121:FATFS/Target/bsp_driver_sd.c ****   if (HAL_SD_WriteBlocks(&hsd1, (uint8_t *)pData, WriteAddr, NumOfBlocks, Timeout) != HAL_OK)
 125              		.loc 1 121 3 view .LVU19
 126              		.loc 1 121 7 is_stmt 0 view .LVU20
 127 0004 0093     		str	r3, [sp]
 128 0006 1346     		mov	r3, r2
 129              	.LVL10:
 130              		.loc 1 121 7 view .LVU21
 131 0008 0A46     		mov	r2, r1
 132              	.LVL11:
 133              		.loc 1 121 7 view .LVU22
 134 000a 0146     		mov	r1, r0
 135              	.LVL12:
 136              		.loc 1 121 7 view .LVU23
 137 000c 0348     		ldr	r0, .L12
 138              	.LVL13:
 139              		.loc 1 121 7 view .LVU24
 140 000e FFF7FEFF 		bl	HAL_SD_WriteBlocks
 141              	.LVL14:
 142              		.loc 1 121 6 discriminator 1 view .LVU25
 143 0012 00B1     		cbz	r0, .L9
 122:FATFS/Target/bsp_driver_sd.c ****   {
 123:FATFS/Target/bsp_driver_sd.c ****     sd_state = MSD_ERROR;
 144              		.loc 1 123 14 view .LVU26
 145 0014 0120     		movs	r0, #1
 146              	.L9:
 147              	.LVL15:
 124:FATFS/Target/bsp_driver_sd.c ****   }
 125:FATFS/Target/bsp_driver_sd.c **** 
 126:FATFS/Target/bsp_driver_sd.c ****   return sd_state;
 148              		.loc 1 126 3 is_stmt 1 view .LVU27
 127:FATFS/Target/bsp_driver_sd.c **** }
 149              		.loc 1 127 1 is_stmt 0 view .LVU28
 150 0016 03B0     		add	sp, sp, #12
 151              	.LCFI5:
 152              		.cfi_def_cfa_offset 4
 153              		@ sp needed
 154 0018 5DF804FB 		ldr	pc, [sp], #4
 155              	.L13:
 156              		.align	2
 157              	.L12:
 158 001c 00000000 		.word	hsd1
 159              		.cfi_endproc
 160              	.LFE336:
 162              		.section	.text.BSP_SD_ReadBlocks_DMA,"ax",%progbits
 163              		.align	1
 164              		.weak	BSP_SD_ReadBlocks_DMA
ARM GAS  C:\usertemp\cchu7nUQ.s 			page 6


 165              		.syntax unified
 166              		.thumb
 167              		.thumb_func
 169              	BSP_SD_ReadBlocks_DMA:
 170              	.LVL16:
 171              	.LFB337:
 128:FATFS/Target/bsp_driver_sd.c **** 
 129:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeReadDMABlocksSection */
 130:FATFS/Target/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
 131:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END BeforeReadDMABlocksSection */
 132:FATFS/Target/bsp_driver_sd.c **** /**
 133:FATFS/Target/bsp_driver_sd.c ****   * @brief  Reads block(s) from a specified address in an SD card, in DMA mode.
 134:FATFS/Target/bsp_driver_sd.c ****   * @param  pData: Pointer to the buffer that will contain the data to transmit
 135:FATFS/Target/bsp_driver_sd.c ****   * @param  ReadAddr: Address from where data is to be read
 136:FATFS/Target/bsp_driver_sd.c ****   * @param  NumOfBlocks: Number of SD blocks to read
 137:FATFS/Target/bsp_driver_sd.c ****   * @retval SD status
 138:FATFS/Target/bsp_driver_sd.c ****   */
 139:FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_ReadBlocks_DMA(uint32_t *pData, uint32_t ReadAddr, uint32_t NumOfBlocks)
 140:FATFS/Target/bsp_driver_sd.c **** {
 172              		.loc 1 140 1 is_stmt 1 view -0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		.loc 1 140 1 is_stmt 0 view .LVU30
 177 0000 08B5     		push	{r3, lr}
 178              	.LCFI6:
 179              		.cfi_def_cfa_offset 8
 180              		.cfi_offset 3, -8
 181              		.cfi_offset 14, -4
 182 0002 1346     		mov	r3, r2
 141:FATFS/Target/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 183              		.loc 1 141 3 is_stmt 1 view .LVU31
 184              	.LVL17:
 142:FATFS/Target/bsp_driver_sd.c **** 
 143:FATFS/Target/bsp_driver_sd.c ****   /* Read block(s) in DMA transfer mode */
 144:FATFS/Target/bsp_driver_sd.c ****   if (HAL_SD_ReadBlocks_DMA(&hsd1, (uint8_t *)pData, ReadAddr, NumOfBlocks) != HAL_OK)
 185              		.loc 1 144 3 view .LVU32
 186              		.loc 1 144 7 is_stmt 0 view .LVU33
 187 0004 0A46     		mov	r2, r1
 188              	.LVL18:
 189              		.loc 1 144 7 view .LVU34
 190 0006 0146     		mov	r1, r0
 191              	.LVL19:
 192              		.loc 1 144 7 view .LVU35
 193 0008 0248     		ldr	r0, .L18
 194              	.LVL20:
 195              		.loc 1 144 7 view .LVU36
 196 000a FFF7FEFF 		bl	HAL_SD_ReadBlocks_DMA
 197              	.LVL21:
 198              		.loc 1 144 6 discriminator 1 view .LVU37
 199 000e 00B1     		cbz	r0, .L15
 145:FATFS/Target/bsp_driver_sd.c ****   {
 146:FATFS/Target/bsp_driver_sd.c ****     sd_state = MSD_ERROR;
 200              		.loc 1 146 14 view .LVU38
 201 0010 0120     		movs	r0, #1
 202              	.L15:
 203              	.LVL22:
ARM GAS  C:\usertemp\cchu7nUQ.s 			page 7


 147:FATFS/Target/bsp_driver_sd.c ****   }
 148:FATFS/Target/bsp_driver_sd.c **** 
 149:FATFS/Target/bsp_driver_sd.c ****   return sd_state;
 204              		.loc 1 149 3 is_stmt 1 view .LVU39
 150:FATFS/Target/bsp_driver_sd.c **** }
 205              		.loc 1 150 1 is_stmt 0 view .LVU40
 206 0012 08BD     		pop	{r3, pc}
 207              	.L19:
 208              		.align	2
 209              	.L18:
 210 0014 00000000 		.word	hsd1
 211              		.cfi_endproc
 212              	.LFE337:
 214              		.section	.text.BSP_SD_WriteBlocks_DMA,"ax",%progbits
 215              		.align	1
 216              		.weak	BSP_SD_WriteBlocks_DMA
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 221              	BSP_SD_WriteBlocks_DMA:
 222              	.LVL23:
 223              	.LFB338:
 151:FATFS/Target/bsp_driver_sd.c **** 
 152:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeWriteDMABlocksSection */
 153:FATFS/Target/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
 154:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END BeforeWriteDMABlocksSection */
 155:FATFS/Target/bsp_driver_sd.c **** /**
 156:FATFS/Target/bsp_driver_sd.c ****   * @brief  Writes block(s) to a specified address in an SD card, in DMA mode.
 157:FATFS/Target/bsp_driver_sd.c ****   * @param  pData: Pointer to the buffer that will contain the data to transmit
 158:FATFS/Target/bsp_driver_sd.c ****   * @param  WriteAddr: Address from where data is to be written
 159:FATFS/Target/bsp_driver_sd.c ****   * @param  NumOfBlocks: Number of SD blocks to write
 160:FATFS/Target/bsp_driver_sd.c ****   * @retval SD status
 161:FATFS/Target/bsp_driver_sd.c ****   */
 162:FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_WriteBlocks_DMA(uint32_t *pData, uint32_t WriteAddr, uint32_t NumOfBlocks)
 163:FATFS/Target/bsp_driver_sd.c **** {
 224              		.loc 1 163 1 is_stmt 1 view -0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228              		.loc 1 163 1 is_stmt 0 view .LVU42
 229 0000 08B5     		push	{r3, lr}
 230              	.LCFI7:
 231              		.cfi_def_cfa_offset 8
 232              		.cfi_offset 3, -8
 233              		.cfi_offset 14, -4
 234 0002 1346     		mov	r3, r2
 164:FATFS/Target/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 235              		.loc 1 164 3 is_stmt 1 view .LVU43
 236              	.LVL24:
 165:FATFS/Target/bsp_driver_sd.c **** 
 166:FATFS/Target/bsp_driver_sd.c ****   /* Write block(s) in DMA transfer mode */
 167:FATFS/Target/bsp_driver_sd.c ****   if (HAL_SD_WriteBlocks_DMA(&hsd1, (uint8_t *)pData, WriteAddr, NumOfBlocks) != HAL_OK)
 237              		.loc 1 167 3 view .LVU44
 238              		.loc 1 167 7 is_stmt 0 view .LVU45
 239 0004 0A46     		mov	r2, r1
 240              	.LVL25:
 241              		.loc 1 167 7 view .LVU46
ARM GAS  C:\usertemp\cchu7nUQ.s 			page 8


 242 0006 0146     		mov	r1, r0
 243              	.LVL26:
 244              		.loc 1 167 7 view .LVU47
 245 0008 0248     		ldr	r0, .L24
 246              	.LVL27:
 247              		.loc 1 167 7 view .LVU48
 248 000a FFF7FEFF 		bl	HAL_SD_WriteBlocks_DMA
 249              	.LVL28:
 250              		.loc 1 167 6 discriminator 1 view .LVU49
 251 000e 00B1     		cbz	r0, .L21
 168:FATFS/Target/bsp_driver_sd.c ****   {
 169:FATFS/Target/bsp_driver_sd.c ****     sd_state = MSD_ERROR;
 252              		.loc 1 169 14 view .LVU50
 253 0010 0120     		movs	r0, #1
 254              	.L21:
 255              	.LVL29:
 170:FATFS/Target/bsp_driver_sd.c ****   }
 171:FATFS/Target/bsp_driver_sd.c **** 
 172:FATFS/Target/bsp_driver_sd.c ****   return sd_state;
 256              		.loc 1 172 3 is_stmt 1 view .LVU51
 173:FATFS/Target/bsp_driver_sd.c **** }
 257              		.loc 1 173 1 is_stmt 0 view .LVU52
 258 0012 08BD     		pop	{r3, pc}
 259              	.L25:
 260              		.align	2
 261              	.L24:
 262 0014 00000000 		.word	hsd1
 263              		.cfi_endproc
 264              	.LFE338:
 266              		.section	.text.BSP_SD_Erase,"ax",%progbits
 267              		.align	1
 268              		.weak	BSP_SD_Erase
 269              		.syntax unified
 270              		.thumb
 271              		.thumb_func
 273              	BSP_SD_Erase:
 274              	.LVL30:
 275              	.LFB339:
 174:FATFS/Target/bsp_driver_sd.c **** 
 175:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeEraseSection */
 176:FATFS/Target/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
 177:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END BeforeEraseSection */
 178:FATFS/Target/bsp_driver_sd.c **** /**
 179:FATFS/Target/bsp_driver_sd.c ****   * @brief  Erases the specified memory area of the given SD card.
 180:FATFS/Target/bsp_driver_sd.c ****   * @param  StartAddr: Start byte address
 181:FATFS/Target/bsp_driver_sd.c ****   * @param  EndAddr: End byte address
 182:FATFS/Target/bsp_driver_sd.c ****   * @retval SD status
 183:FATFS/Target/bsp_driver_sd.c ****   */
 184:FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_Erase(uint32_t StartAddr, uint32_t EndAddr)
 185:FATFS/Target/bsp_driver_sd.c **** {
 276              		.loc 1 185 1 is_stmt 1 view -0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 0
 279              		@ frame_needed = 0, uses_anonymous_args = 0
 280              		.loc 1 185 1 is_stmt 0 view .LVU54
 281 0000 08B5     		push	{r3, lr}
 282              	.LCFI8:
ARM GAS  C:\usertemp\cchu7nUQ.s 			page 9


 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 3, -8
 285              		.cfi_offset 14, -4
 286 0002 0A46     		mov	r2, r1
 186:FATFS/Target/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 287              		.loc 1 186 3 is_stmt 1 view .LVU55
 288              	.LVL31:
 187:FATFS/Target/bsp_driver_sd.c **** 
 188:FATFS/Target/bsp_driver_sd.c ****   if (HAL_SD_Erase(&hsd1, StartAddr, EndAddr) != HAL_OK)
 289              		.loc 1 188 3 view .LVU56
 290              		.loc 1 188 7 is_stmt 0 view .LVU57
 291 0004 0146     		mov	r1, r0
 292              	.LVL32:
 293              		.loc 1 188 7 view .LVU58
 294 0006 0348     		ldr	r0, .L30
 295              	.LVL33:
 296              		.loc 1 188 7 view .LVU59
 297 0008 FFF7FEFF 		bl	HAL_SD_Erase
 298              	.LVL34:
 299              		.loc 1 188 6 discriminator 1 view .LVU60
 300 000c 00B1     		cbz	r0, .L27
 189:FATFS/Target/bsp_driver_sd.c ****   {
 190:FATFS/Target/bsp_driver_sd.c ****     sd_state = MSD_ERROR;
 301              		.loc 1 190 14 view .LVU61
 302 000e 0120     		movs	r0, #1
 303              	.L27:
 304              	.LVL35:
 191:FATFS/Target/bsp_driver_sd.c ****   }
 192:FATFS/Target/bsp_driver_sd.c **** 
 193:FATFS/Target/bsp_driver_sd.c ****   return sd_state;
 305              		.loc 1 193 3 is_stmt 1 view .LVU62
 194:FATFS/Target/bsp_driver_sd.c **** }
 306              		.loc 1 194 1 is_stmt 0 view .LVU63
 307 0010 08BD     		pop	{r3, pc}
 308              	.L31:
 309 0012 00BF     		.align	2
 310              	.L30:
 311 0014 00000000 		.word	hsd1
 312              		.cfi_endproc
 313              	.LFE339:
 315              		.section	.text.BSP_SD_GetCardState,"ax",%progbits
 316              		.align	1
 317              		.weak	BSP_SD_GetCardState
 318              		.syntax unified
 319              		.thumb
 320              		.thumb_func
 322              	BSP_SD_GetCardState:
 323              	.LFB340:
 195:FATFS/Target/bsp_driver_sd.c **** 
 196:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeGetCardStateSection */
 197:FATFS/Target/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
 198:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END BeforeGetCardStateSection */
 199:FATFS/Target/bsp_driver_sd.c **** 
 200:FATFS/Target/bsp_driver_sd.c **** /**
 201:FATFS/Target/bsp_driver_sd.c ****   * @brief  Gets the current SD card data status.
 202:FATFS/Target/bsp_driver_sd.c ****   * @param  None
 203:FATFS/Target/bsp_driver_sd.c ****   * @retval Data transfer state.
ARM GAS  C:\usertemp\cchu7nUQ.s 			page 10


 204:FATFS/Target/bsp_driver_sd.c ****   *          This value can be one of the following values:
 205:FATFS/Target/bsp_driver_sd.c ****   *            @arg  SD_TRANSFER_OK: No data transfer is acting
 206:FATFS/Target/bsp_driver_sd.c ****   *            @arg  SD_TRANSFER_BUSY: Data transfer is acting
 207:FATFS/Target/bsp_driver_sd.c ****   */
 208:FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_GetCardState(void)
 209:FATFS/Target/bsp_driver_sd.c **** {
 324              		.loc 1 209 1 is_stmt 1 view -0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 0
 327              		@ frame_needed = 0, uses_anonymous_args = 0
 328 0000 08B5     		push	{r3, lr}
 329              	.LCFI9:
 330              		.cfi_def_cfa_offset 8
 331              		.cfi_offset 3, -8
 332              		.cfi_offset 14, -4
 210:FATFS/Target/bsp_driver_sd.c ****   return ((HAL_SD_GetCardState(&hsd1) == HAL_SD_CARD_TRANSFER ) ? SD_TRANSFER_OK : SD_TRANSFER_BUSY
 333              		.loc 1 210 3 view .LVU65
 334              		.loc 1 210 12 is_stmt 0 view .LVU66
 335 0002 0348     		ldr	r0, .L34
 336 0004 FFF7FEFF 		bl	HAL_SD_GetCardState
 337              	.LVL36:
 211:FATFS/Target/bsp_driver_sd.c **** }
 338              		.loc 1 211 1 view .LVU67
 339 0008 0438     		subs	r0, r0, #4
 340 000a 18BF     		it	ne
 341 000c 0120     		movne	r0, #1
 342 000e 08BD     		pop	{r3, pc}
 343              	.L35:
 344              		.align	2
 345              	.L34:
 346 0010 00000000 		.word	hsd1
 347              		.cfi_endproc
 348              	.LFE340:
 350              		.section	.text.BSP_SD_GetCardInfo,"ax",%progbits
 351              		.align	1
 352              		.weak	BSP_SD_GetCardInfo
 353              		.syntax unified
 354              		.thumb
 355              		.thumb_func
 357              	BSP_SD_GetCardInfo:
 358              	.LVL37:
 359              	.LFB341:
 212:FATFS/Target/bsp_driver_sd.c **** 
 213:FATFS/Target/bsp_driver_sd.c **** /**
 214:FATFS/Target/bsp_driver_sd.c ****   * @brief  Get SD information about specific SD card.
 215:FATFS/Target/bsp_driver_sd.c ****   * @param  CardInfo: Pointer to HAL_SD_CardInfoTypedef structure
 216:FATFS/Target/bsp_driver_sd.c ****   * @retval None
 217:FATFS/Target/bsp_driver_sd.c ****   */
 218:FATFS/Target/bsp_driver_sd.c **** __weak void BSP_SD_GetCardInfo(HAL_SD_CardInfoTypeDef *CardInfo)
 219:FATFS/Target/bsp_driver_sd.c **** {
 360              		.loc 1 219 1 is_stmt 1 view -0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 0
 363              		@ frame_needed = 0, uses_anonymous_args = 0
 364              		.loc 1 219 1 is_stmt 0 view .LVU69
 365 0000 08B5     		push	{r3, lr}
 366              	.LCFI10:
ARM GAS  C:\usertemp\cchu7nUQ.s 			page 11


 367              		.cfi_def_cfa_offset 8
 368              		.cfi_offset 3, -8
 369              		.cfi_offset 14, -4
 370 0002 0146     		mov	r1, r0
 220:FATFS/Target/bsp_driver_sd.c ****   /* Get SD card Information */
 221:FATFS/Target/bsp_driver_sd.c ****   HAL_SD_GetCardInfo(&hsd1, CardInfo);
 371              		.loc 1 221 3 is_stmt 1 view .LVU70
 372 0004 0148     		ldr	r0, .L38
 373              	.LVL38:
 374              		.loc 1 221 3 is_stmt 0 view .LVU71
 375 0006 FFF7FEFF 		bl	HAL_SD_GetCardInfo
 376              	.LVL39:
 222:FATFS/Target/bsp_driver_sd.c **** }
 377              		.loc 1 222 1 view .LVU72
 378 000a 08BD     		pop	{r3, pc}
 379              	.L39:
 380              		.align	2
 381              	.L38:
 382 000c 00000000 		.word	hsd1
 383              		.cfi_endproc
 384              	.LFE341:
 386              		.section	.text.BSP_SD_AbortCallback,"ax",%progbits
 387              		.align	1
 388              		.weak	BSP_SD_AbortCallback
 389              		.syntax unified
 390              		.thumb
 391              		.thumb_func
 393              	BSP_SD_AbortCallback:
 394              	.LFB345:
 223:FATFS/Target/bsp_driver_sd.c **** 
 224:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN BeforeCallBacksSection */
 225:FATFS/Target/bsp_driver_sd.c **** /* can be used to modify previous code / undefine following code / add code */
 226:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END BeforeCallBacksSection */
 227:FATFS/Target/bsp_driver_sd.c **** /**
 228:FATFS/Target/bsp_driver_sd.c ****   * @brief SD Abort callbacks
 229:FATFS/Target/bsp_driver_sd.c ****   * @param hsd: SD handle
 230:FATFS/Target/bsp_driver_sd.c ****   * @retval None
 231:FATFS/Target/bsp_driver_sd.c ****   */
 232:FATFS/Target/bsp_driver_sd.c **** void HAL_SD_AbortCallback(SD_HandleTypeDef *hsd)
 233:FATFS/Target/bsp_driver_sd.c **** {
 234:FATFS/Target/bsp_driver_sd.c ****   BSP_SD_AbortCallback();
 235:FATFS/Target/bsp_driver_sd.c **** }
 236:FATFS/Target/bsp_driver_sd.c **** 
 237:FATFS/Target/bsp_driver_sd.c **** /**
 238:FATFS/Target/bsp_driver_sd.c ****   * @brief Tx Transfer completed callback
 239:FATFS/Target/bsp_driver_sd.c ****   * @param hsd: SD handle
 240:FATFS/Target/bsp_driver_sd.c ****   * @retval None
 241:FATFS/Target/bsp_driver_sd.c ****   */
 242:FATFS/Target/bsp_driver_sd.c **** void HAL_SD_TxCpltCallback(SD_HandleTypeDef *hsd)
 243:FATFS/Target/bsp_driver_sd.c **** {
 244:FATFS/Target/bsp_driver_sd.c ****   BSP_SD_WriteCpltCallback();
 245:FATFS/Target/bsp_driver_sd.c **** }
 246:FATFS/Target/bsp_driver_sd.c **** 
 247:FATFS/Target/bsp_driver_sd.c **** /**
 248:FATFS/Target/bsp_driver_sd.c ****   * @brief Rx Transfer completed callback
 249:FATFS/Target/bsp_driver_sd.c ****   * @param hsd: SD handle
 250:FATFS/Target/bsp_driver_sd.c ****   * @retval None
ARM GAS  C:\usertemp\cchu7nUQ.s 			page 12


 251:FATFS/Target/bsp_driver_sd.c ****   */
 252:FATFS/Target/bsp_driver_sd.c **** void HAL_SD_RxCpltCallback(SD_HandleTypeDef *hsd)
 253:FATFS/Target/bsp_driver_sd.c **** {
 254:FATFS/Target/bsp_driver_sd.c ****   BSP_SD_ReadCpltCallback();
 255:FATFS/Target/bsp_driver_sd.c **** }
 256:FATFS/Target/bsp_driver_sd.c **** 
 257:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN CallBacksSection_C */
 258:FATFS/Target/bsp_driver_sd.c **** /**
 259:FATFS/Target/bsp_driver_sd.c ****   * @brief BSP SD Abort callback
 260:FATFS/Target/bsp_driver_sd.c ****   * @retval None
 261:FATFS/Target/bsp_driver_sd.c ****   * @note empty (up to the user to fill it in or to remove it if useless)
 262:FATFS/Target/bsp_driver_sd.c ****   */
 263:FATFS/Target/bsp_driver_sd.c **** __weak void BSP_SD_AbortCallback(void)
 264:FATFS/Target/bsp_driver_sd.c **** {
 395              		.loc 1 264 1 is_stmt 1 view -0
 396              		.cfi_startproc
 397              		@ args = 0, pretend = 0, frame = 0
 398              		@ frame_needed = 0, uses_anonymous_args = 0
 399              		@ link register save eliminated.
 265:FATFS/Target/bsp_driver_sd.c **** 
 266:FATFS/Target/bsp_driver_sd.c **** }
 400              		.loc 1 266 1 view .LVU74
 401 0000 7047     		bx	lr
 402              		.cfi_endproc
 403              	.LFE345:
 405              		.section	.text.HAL_SD_AbortCallback,"ax",%progbits
 406              		.align	1
 407              		.global	HAL_SD_AbortCallback
 408              		.syntax unified
 409              		.thumb
 410              		.thumb_func
 412              	HAL_SD_AbortCallback:
 413              	.LVL40:
 414              	.LFB342:
 233:FATFS/Target/bsp_driver_sd.c ****   BSP_SD_AbortCallback();
 415              		.loc 1 233 1 view -0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
 233:FATFS/Target/bsp_driver_sd.c ****   BSP_SD_AbortCallback();
 419              		.loc 1 233 1 is_stmt 0 view .LVU76
 420 0000 08B5     		push	{r3, lr}
 421              	.LCFI11:
 422              		.cfi_def_cfa_offset 8
 423              		.cfi_offset 3, -8
 424              		.cfi_offset 14, -4
 234:FATFS/Target/bsp_driver_sd.c **** }
 425              		.loc 1 234 3 is_stmt 1 view .LVU77
 426 0002 FFF7FEFF 		bl	BSP_SD_AbortCallback
 427              	.LVL41:
 235:FATFS/Target/bsp_driver_sd.c **** 
 428              		.loc 1 235 1 is_stmt 0 view .LVU78
 429 0006 08BD     		pop	{r3, pc}
 430              		.cfi_endproc
 431              	.LFE342:
 433              		.section	.text.BSP_SD_WriteCpltCallback,"ax",%progbits
 434              		.align	1
ARM GAS  C:\usertemp\cchu7nUQ.s 			page 13


 435              		.weak	BSP_SD_WriteCpltCallback
 436              		.syntax unified
 437              		.thumb
 438              		.thumb_func
 440              	BSP_SD_WriteCpltCallback:
 441              	.LFB346:
 267:FATFS/Target/bsp_driver_sd.c **** 
 268:FATFS/Target/bsp_driver_sd.c **** /**
 269:FATFS/Target/bsp_driver_sd.c ****   * @brief BSP Tx Transfer completed callback
 270:FATFS/Target/bsp_driver_sd.c ****   * @retval None
 271:FATFS/Target/bsp_driver_sd.c ****   * @note empty (up to the user to fill it in or to remove it if useless)
 272:FATFS/Target/bsp_driver_sd.c ****   */
 273:FATFS/Target/bsp_driver_sd.c **** __weak void BSP_SD_WriteCpltCallback(void)
 274:FATFS/Target/bsp_driver_sd.c **** {
 442              		.loc 1 274 1 is_stmt 1 view -0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446              		@ link register save eliminated.
 275:FATFS/Target/bsp_driver_sd.c **** 
 276:FATFS/Target/bsp_driver_sd.c **** }
 447              		.loc 1 276 1 view .LVU80
 448 0000 7047     		bx	lr
 449              		.cfi_endproc
 450              	.LFE346:
 452              		.section	.text.HAL_SD_TxCpltCallback,"ax",%progbits
 453              		.align	1
 454              		.global	HAL_SD_TxCpltCallback
 455              		.syntax unified
 456              		.thumb
 457              		.thumb_func
 459              	HAL_SD_TxCpltCallback:
 460              	.LVL42:
 461              	.LFB343:
 243:FATFS/Target/bsp_driver_sd.c ****   BSP_SD_WriteCpltCallback();
 462              		.loc 1 243 1 view -0
 463              		.cfi_startproc
 464              		@ args = 0, pretend = 0, frame = 0
 465              		@ frame_needed = 0, uses_anonymous_args = 0
 243:FATFS/Target/bsp_driver_sd.c ****   BSP_SD_WriteCpltCallback();
 466              		.loc 1 243 1 is_stmt 0 view .LVU82
 467 0000 08B5     		push	{r3, lr}
 468              	.LCFI12:
 469              		.cfi_def_cfa_offset 8
 470              		.cfi_offset 3, -8
 471              		.cfi_offset 14, -4
 244:FATFS/Target/bsp_driver_sd.c **** }
 472              		.loc 1 244 3 is_stmt 1 view .LVU83
 473 0002 FFF7FEFF 		bl	BSP_SD_WriteCpltCallback
 474              	.LVL43:
 245:FATFS/Target/bsp_driver_sd.c **** 
 475              		.loc 1 245 1 is_stmt 0 view .LVU84
 476 0006 08BD     		pop	{r3, pc}
 477              		.cfi_endproc
 478              	.LFE343:
 480              		.section	.text.BSP_SD_ReadCpltCallback,"ax",%progbits
 481              		.align	1
ARM GAS  C:\usertemp\cchu7nUQ.s 			page 14


 482              		.weak	BSP_SD_ReadCpltCallback
 483              		.syntax unified
 484              		.thumb
 485              		.thumb_func
 487              	BSP_SD_ReadCpltCallback:
 488              	.LFB347:
 277:FATFS/Target/bsp_driver_sd.c **** 
 278:FATFS/Target/bsp_driver_sd.c **** /**
 279:FATFS/Target/bsp_driver_sd.c ****   * @brief BSP Rx Transfer completed callback
 280:FATFS/Target/bsp_driver_sd.c ****   * @retval None
 281:FATFS/Target/bsp_driver_sd.c ****   * @note empty (up to the user to fill it in or to remove it if useless)
 282:FATFS/Target/bsp_driver_sd.c ****   */
 283:FATFS/Target/bsp_driver_sd.c **** __weak void BSP_SD_ReadCpltCallback(void)
 284:FATFS/Target/bsp_driver_sd.c **** {
 489              		.loc 1 284 1 is_stmt 1 view -0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493              		@ link register save eliminated.
 285:FATFS/Target/bsp_driver_sd.c **** 
 286:FATFS/Target/bsp_driver_sd.c **** }
 494              		.loc 1 286 1 view .LVU86
 495 0000 7047     		bx	lr
 496              		.cfi_endproc
 497              	.LFE347:
 499              		.section	.text.HAL_SD_RxCpltCallback,"ax",%progbits
 500              		.align	1
 501              		.global	HAL_SD_RxCpltCallback
 502              		.syntax unified
 503              		.thumb
 504              		.thumb_func
 506              	HAL_SD_RxCpltCallback:
 507              	.LVL44:
 508              	.LFB344:
 253:FATFS/Target/bsp_driver_sd.c ****   BSP_SD_ReadCpltCallback();
 509              		.loc 1 253 1 view -0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 0, uses_anonymous_args = 0
 253:FATFS/Target/bsp_driver_sd.c ****   BSP_SD_ReadCpltCallback();
 513              		.loc 1 253 1 is_stmt 0 view .LVU88
 514 0000 08B5     		push	{r3, lr}
 515              	.LCFI13:
 516              		.cfi_def_cfa_offset 8
 517              		.cfi_offset 3, -8
 518              		.cfi_offset 14, -4
 254:FATFS/Target/bsp_driver_sd.c **** }
 519              		.loc 1 254 3 is_stmt 1 view .LVU89
 520 0002 FFF7FEFF 		bl	BSP_SD_ReadCpltCallback
 521              	.LVL45:
 255:FATFS/Target/bsp_driver_sd.c **** 
 522              		.loc 1 255 1 is_stmt 0 view .LVU90
 523 0006 08BD     		pop	{r3, pc}
 524              		.cfi_endproc
 525              	.LFE344:
 527              		.section	.text.BSP_SD_IsDetected,"ax",%progbits
 528              		.align	1
ARM GAS  C:\usertemp\cchu7nUQ.s 			page 15


 529              		.weak	BSP_SD_IsDetected
 530              		.syntax unified
 531              		.thumb
 532              		.thumb_func
 534              	BSP_SD_IsDetected:
 535              	.LFB348:
 287:FATFS/Target/bsp_driver_sd.c **** /* USER CODE END CallBacksSection_C */
 288:FATFS/Target/bsp_driver_sd.c **** 
 289:FATFS/Target/bsp_driver_sd.c **** /**
 290:FATFS/Target/bsp_driver_sd.c ****  * @brief  Detects if SD card is correctly plugged in the memory slot or not.
 291:FATFS/Target/bsp_driver_sd.c ****  * @param  None
 292:FATFS/Target/bsp_driver_sd.c ****  * @retval Returns if SD is detected or not
 293:FATFS/Target/bsp_driver_sd.c ****  */
 294:FATFS/Target/bsp_driver_sd.c **** __weak uint8_t BSP_SD_IsDetected(void)
 295:FATFS/Target/bsp_driver_sd.c **** {
 536              		.loc 1 295 1 is_stmt 1 view -0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 8
 539              		@ frame_needed = 0, uses_anonymous_args = 0
 540 0000 00B5     		push	{lr}
 541              	.LCFI14:
 542              		.cfi_def_cfa_offset 4
 543              		.cfi_offset 14, -4
 544 0002 83B0     		sub	sp, sp, #12
 545              	.LCFI15:
 546              		.cfi_def_cfa_offset 16
 296:FATFS/Target/bsp_driver_sd.c ****   __IO uint8_t status = SD_PRESENT;
 547              		.loc 1 296 3 view .LVU92
 548              		.loc 1 296 16 is_stmt 0 view .LVU93
 549 0004 0123     		movs	r3, #1
 550 0006 8DF80730 		strb	r3, [sp, #7]
 297:FATFS/Target/bsp_driver_sd.c **** 
 298:FATFS/Target/bsp_driver_sd.c ****   if (BSP_PlatformIsDetected() == 0x0)
 551              		.loc 1 298 3 is_stmt 1 view .LVU94
 552              		.loc 1 298 7 is_stmt 0 view .LVU95
 553 000a FFF7FEFF 		bl	BSP_PlatformIsDetected
 554              	.LVL46:
 555              		.loc 1 298 6 discriminator 1 view .LVU96
 556 000e 10B9     		cbnz	r0, .L50
 299:FATFS/Target/bsp_driver_sd.c ****   {
 300:FATFS/Target/bsp_driver_sd.c ****     status = SD_NOT_PRESENT;
 557              		.loc 1 300 5 is_stmt 1 view .LVU97
 558              		.loc 1 300 12 is_stmt 0 view .LVU98
 559 0010 0023     		movs	r3, #0
 560 0012 8DF80730 		strb	r3, [sp, #7]
 561              	.L50:
 301:FATFS/Target/bsp_driver_sd.c ****   }
 302:FATFS/Target/bsp_driver_sd.c **** 
 303:FATFS/Target/bsp_driver_sd.c ****   return status;
 562              		.loc 1 303 3 is_stmt 1 view .LVU99
 563              		.loc 1 303 10 is_stmt 0 view .LVU100
 564 0016 9DF80700 		ldrb	r0, [sp, #7]	@ zero_extendqisi2
 304:FATFS/Target/bsp_driver_sd.c **** }
 565              		.loc 1 304 1 view .LVU101
 566 001a 03B0     		add	sp, sp, #12
 567              	.LCFI16:
 568              		.cfi_def_cfa_offset 4
ARM GAS  C:\usertemp\cchu7nUQ.s 			page 16


 569              		@ sp needed
 570 001c 5DF804FB 		ldr	pc, [sp], #4
 571              		.cfi_endproc
 572              	.LFE348:
 574              		.section	.text.BSP_SD_Init,"ax",%progbits
 575              		.align	1
 576              		.weak	BSP_SD_Init
 577              		.syntax unified
 578              		.thumb
 579              		.thumb_func
 581              	BSP_SD_Init:
 582              	.LFB333:
  44:FATFS/Target/bsp_driver_sd.c ****   uint8_t sd_state = MSD_OK;
 583              		.loc 1 44 1 is_stmt 1 view -0
 584              		.cfi_startproc
 585              		@ args = 0, pretend = 0, frame = 0
 586              		@ frame_needed = 0, uses_anonymous_args = 0
 587 0000 38B5     		push	{r3, r4, r5, lr}
 588              	.LCFI17:
 589              		.cfi_def_cfa_offset 16
 590              		.cfi_offset 3, -16
 591              		.cfi_offset 4, -12
 592              		.cfi_offset 5, -8
 593              		.cfi_offset 14, -4
  45:FATFS/Target/bsp_driver_sd.c ****   /* Check if the SD card is plugged in the slot */
 594              		.loc 1 45 3 view .LVU103
 595              	.LVL47:
  47:FATFS/Target/bsp_driver_sd.c ****   {
 596              		.loc 1 47 3 view .LVU104
  47:FATFS/Target/bsp_driver_sd.c ****   {
 597              		.loc 1 47 7 is_stmt 0 view .LVU105
 598 0002 FFF7FEFF 		bl	BSP_SD_IsDetected
 599              	.LVL48:
  47:FATFS/Target/bsp_driver_sd.c ****   {
 600              		.loc 1 47 6 discriminator 1 view .LVU106
 601 0006 0128     		cmp	r0, #1
 602 0008 02D0     		beq	.L57
  49:FATFS/Target/bsp_driver_sd.c ****   }
 603              		.loc 1 49 12 view .LVU107
 604 000a 0225     		movs	r5, #2
 605              	.LVL49:
 606              	.L53:
  64:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN AfterInitSection */
 607              		.loc 1 64 1 view .LVU108
 608 000c 2846     		mov	r0, r5
 609 000e 38BD     		pop	{r3, r4, r5, pc}
 610              	.LVL50:
 611              	.L57:
  64:FATFS/Target/bsp_driver_sd.c **** /* USER CODE BEGIN AfterInitSection */
 612              		.loc 1 64 1 view .LVU109
 613 0010 0446     		mov	r4, r0
  52:FATFS/Target/bsp_driver_sd.c ****   /* Configure SD Bus width (4 bits mode selected) */
 614              		.loc 1 52 3 is_stmt 1 view .LVU110
  52:FATFS/Target/bsp_driver_sd.c ****   /* Configure SD Bus width (4 bits mode selected) */
 615              		.loc 1 52 14 is_stmt 0 view .LVU111
 616 0012 0748     		ldr	r0, .L58
 617 0014 FFF7FEFF 		bl	HAL_SD_Init
ARM GAS  C:\usertemp\cchu7nUQ.s 			page 17


 618              	.LVL51:
  54:FATFS/Target/bsp_driver_sd.c ****   {
 619              		.loc 1 54 3 is_stmt 1 view .LVU112
  54:FATFS/Target/bsp_driver_sd.c ****   {
 620              		.loc 1 54 6 is_stmt 0 view .LVU113
 621 0018 0546     		mov	r5, r0
 622 001a 0028     		cmp	r0, #0
 623 001c F6D1     		bne	.L53
  57:FATFS/Target/bsp_driver_sd.c ****     {
 624              		.loc 1 57 5 is_stmt 1 view .LVU114
  57:FATFS/Target/bsp_driver_sd.c ****     {
 625              		.loc 1 57 9 is_stmt 0 view .LVU115
 626 001e 4FF48041 		mov	r1, #16384
 627 0022 0348     		ldr	r0, .L58
 628              	.LVL52:
  57:FATFS/Target/bsp_driver_sd.c ****     {
 629              		.loc 1 57 9 view .LVU116
 630 0024 FFF7FEFF 		bl	HAL_SD_ConfigWideBusOperation
 631              	.LVL53:
  57:FATFS/Target/bsp_driver_sd.c ****     {
 632              		.loc 1 57 8 discriminator 1 view .LVU117
 633 0028 0028     		cmp	r0, #0
 634 002a EFD0     		beq	.L53
  59:FATFS/Target/bsp_driver_sd.c ****     }
 635              		.loc 1 59 16 view .LVU118
 636 002c 2546     		mov	r5, r4
 637              	.LVL54:
  59:FATFS/Target/bsp_driver_sd.c ****     }
 638              		.loc 1 59 16 view .LVU119
 639 002e EDE7     		b	.L53
 640              	.L59:
 641              		.align	2
 642              	.L58:
 643 0030 00000000 		.word	hsd1
 644              		.cfi_endproc
 645              	.LFE333:
 647              		.text
 648              	.Letext0:
 649              		.file 2 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 650              		.file 3 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 651              		.file 4 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 652              		.file 5 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 653              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_sdmmc.h"
 654              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_sd.h"
 655              		.file 8 "FATFS/Target/fatfs_platform.h"
ARM GAS  C:\usertemp\cchu7nUQ.s 			page 18


DEFINED SYMBOLS
                            *ABS*:00000000 bsp_driver_sd.c
C:\usertemp\cchu7nUQ.s:20     .text.BSP_SD_ITConfig:00000000 $t
C:\usertemp\cchu7nUQ.s:26     .text.BSP_SD_ITConfig:00000000 BSP_SD_ITConfig
C:\usertemp\cchu7nUQ.s:41     .text.BSP_SD_ReadBlocks:00000000 $t
C:\usertemp\cchu7nUQ.s:47     .text.BSP_SD_ReadBlocks:00000000 BSP_SD_ReadBlocks
C:\usertemp\cchu7nUQ.s:97     .text.BSP_SD_ReadBlocks:0000001c $d
C:\usertemp\cchu7nUQ.s:102    .text.BSP_SD_WriteBlocks:00000000 $t
C:\usertemp\cchu7nUQ.s:108    .text.BSP_SD_WriteBlocks:00000000 BSP_SD_WriteBlocks
C:\usertemp\cchu7nUQ.s:158    .text.BSP_SD_WriteBlocks:0000001c $d
C:\usertemp\cchu7nUQ.s:163    .text.BSP_SD_ReadBlocks_DMA:00000000 $t
C:\usertemp\cchu7nUQ.s:169    .text.BSP_SD_ReadBlocks_DMA:00000000 BSP_SD_ReadBlocks_DMA
C:\usertemp\cchu7nUQ.s:210    .text.BSP_SD_ReadBlocks_DMA:00000014 $d
C:\usertemp\cchu7nUQ.s:215    .text.BSP_SD_WriteBlocks_DMA:00000000 $t
C:\usertemp\cchu7nUQ.s:221    .text.BSP_SD_WriteBlocks_DMA:00000000 BSP_SD_WriteBlocks_DMA
C:\usertemp\cchu7nUQ.s:262    .text.BSP_SD_WriteBlocks_DMA:00000014 $d
C:\usertemp\cchu7nUQ.s:267    .text.BSP_SD_Erase:00000000 $t
C:\usertemp\cchu7nUQ.s:273    .text.BSP_SD_Erase:00000000 BSP_SD_Erase
C:\usertemp\cchu7nUQ.s:311    .text.BSP_SD_Erase:00000014 $d
C:\usertemp\cchu7nUQ.s:316    .text.BSP_SD_GetCardState:00000000 $t
C:\usertemp\cchu7nUQ.s:322    .text.BSP_SD_GetCardState:00000000 BSP_SD_GetCardState
C:\usertemp\cchu7nUQ.s:346    .text.BSP_SD_GetCardState:00000010 $d
C:\usertemp\cchu7nUQ.s:351    .text.BSP_SD_GetCardInfo:00000000 $t
C:\usertemp\cchu7nUQ.s:357    .text.BSP_SD_GetCardInfo:00000000 BSP_SD_GetCardInfo
C:\usertemp\cchu7nUQ.s:382    .text.BSP_SD_GetCardInfo:0000000c $d
C:\usertemp\cchu7nUQ.s:387    .text.BSP_SD_AbortCallback:00000000 $t
C:\usertemp\cchu7nUQ.s:393    .text.BSP_SD_AbortCallback:00000000 BSP_SD_AbortCallback
C:\usertemp\cchu7nUQ.s:406    .text.HAL_SD_AbortCallback:00000000 $t
C:\usertemp\cchu7nUQ.s:412    .text.HAL_SD_AbortCallback:00000000 HAL_SD_AbortCallback
C:\usertemp\cchu7nUQ.s:434    .text.BSP_SD_WriteCpltCallback:00000000 $t
C:\usertemp\cchu7nUQ.s:440    .text.BSP_SD_WriteCpltCallback:00000000 BSP_SD_WriteCpltCallback
C:\usertemp\cchu7nUQ.s:453    .text.HAL_SD_TxCpltCallback:00000000 $t
C:\usertemp\cchu7nUQ.s:459    .text.HAL_SD_TxCpltCallback:00000000 HAL_SD_TxCpltCallback
C:\usertemp\cchu7nUQ.s:481    .text.BSP_SD_ReadCpltCallback:00000000 $t
C:\usertemp\cchu7nUQ.s:487    .text.BSP_SD_ReadCpltCallback:00000000 BSP_SD_ReadCpltCallback
C:\usertemp\cchu7nUQ.s:500    .text.HAL_SD_RxCpltCallback:00000000 $t
C:\usertemp\cchu7nUQ.s:506    .text.HAL_SD_RxCpltCallback:00000000 HAL_SD_RxCpltCallback
C:\usertemp\cchu7nUQ.s:528    .text.BSP_SD_IsDetected:00000000 $t
C:\usertemp\cchu7nUQ.s:534    .text.BSP_SD_IsDetected:00000000 BSP_SD_IsDetected
C:\usertemp\cchu7nUQ.s:575    .text.BSP_SD_Init:00000000 $t
C:\usertemp\cchu7nUQ.s:581    .text.BSP_SD_Init:00000000 BSP_SD_Init
C:\usertemp\cchu7nUQ.s:643    .text.BSP_SD_Init:00000030 $d

UNDEFINED SYMBOLS
HAL_SD_ReadBlocks
hsd1
HAL_SD_WriteBlocks
HAL_SD_ReadBlocks_DMA
HAL_SD_WriteBlocks_DMA
HAL_SD_Erase
HAL_SD_GetCardState
HAL_SD_GetCardInfo
BSP_PlatformIsDetected
HAL_SD_Init
HAL_SD_ConfigWideBusOperation
