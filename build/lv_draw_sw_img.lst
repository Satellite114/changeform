ARM GAS  C:\usertemp\ccGHJWgX.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_draw_sw_img.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "lvgl/src/draw/sw/lv_draw_sw_img.c"
  19              		.section	.text.lv_color_mix_premult,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	lv_color_mix_premult:
  26              	.LVL0:
  27              	.LFB8:
  28              		.file 2 "lvgl/src/draw/sw/../../misc/lv_color.h"
   1:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
   2:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @file lv_color.h
   3:lvgl/src/draw/sw/../../misc/lv_color.h ****  *
   4:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
   5:lvgl/src/draw/sw/../../misc/lv_color.h **** 
   6:lvgl/src/draw/sw/../../misc/lv_color.h **** #ifndef LV_COLOR_H
   7:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_H
   8:lvgl/src/draw/sw/../../misc/lv_color.h **** 
   9:lvgl/src/draw/sw/../../misc/lv_color.h **** #ifdef __cplusplus
  10:lvgl/src/draw/sw/../../misc/lv_color.h **** extern "C" {
  11:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  12:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  13:lvgl/src/draw/sw/../../misc/lv_color.h **** /*********************
  14:lvgl/src/draw/sw/../../misc/lv_color.h ****  *      INCLUDES
  15:lvgl/src/draw/sw/../../misc/lv_color.h ****  *********************/
  16:lvgl/src/draw/sw/../../misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/draw/sw/../../misc/lv_color.h **** #include "lv_assert.h"
  18:lvgl/src/draw/sw/../../misc/lv_color.h **** #include "lv_math.h"
  19:lvgl/src/draw/sw/../../misc/lv_color.h **** #include "lv_types.h"
  20:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  21:lvgl/src/draw/sw/../../misc/lv_color.h **** /*Error checking*/
  22:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  23:lvgl/src/draw/sw/../../misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  24:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  25:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  26:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH != 32 && LV_COLOR_SCREEN_TRANSP != 0
  27:lvgl/src/draw/sw/../../misc/lv_color.h **** #error "LV_COLOR_SCREEN_TRANSP requires LV_COLOR_DEPTH == 32. Set it in lv_conf.h"
  28:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  29:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  30:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 2


  31:lvgl/src/draw/sw/../../misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  32:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  33:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  34:lvgl/src/draw/sw/../../misc/lv_color.h **** #include <stdint.h>
  35:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  36:lvgl/src/draw/sw/../../misc/lv_color.h **** /*********************
  37:lvgl/src/draw/sw/../../misc/lv_color.h ****  *      DEFINES
  38:lvgl/src/draw/sw/../../misc/lv_color.h ****  *********************/
  39:lvgl/src/draw/sw/../../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_DEPTH);
  40:lvgl/src/draw/sw/../../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_16_SWAP);
  41:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  42:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
  43:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Opacity percentages.
  44:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
  45:lvgl/src/draw/sw/../../misc/lv_color.h **** enum {
  46:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  47:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_0      = 0,
  48:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_10     = 25,
  49:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_20     = 51,
  50:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_30     = 76,
  51:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_40     = 102,
  52:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_50     = 127,
  53:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_60     = 153,
  54:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_70     = 178,
  55:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_80     = 204,
  56:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_90     = 229,
  57:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_100    = 255,
  58:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_COVER  = 255,
  59:lvgl/src/draw/sw/../../misc/lv_color.h **** };
  60:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  61:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  62:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  63:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  64:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  65:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  66:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  67:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  68:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  69:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 16
  70:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
  71:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 32
  72:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
  73:lvgl/src/draw/sw/../../misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  74:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  75:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  76:lvgl/src/draw/sw/../../misc/lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  77:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
  78:lvgl/src/draw/sw/../../misc/lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  79:lvgl/src/draw/sw/../../misc/lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  80:lvgl/src/draw/sw/../../misc/lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  81:lvgl/src/draw/sw/../../misc/lv_color.h **** */
  82:lvgl/src/draw/sw/../../misc/lv_color.h **** #ifdef _MSC_VER
  83:lvgl/src/draw/sw/../../misc/lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  84:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  85:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  86:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
  87:lvgl/src/draw/sw/../../misc/lv_color.h **** #if __cplusplus >= 201103L
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 3


  88:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  89:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  90:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  91:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif /*__cplusplus*/
  92:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  93:lvgl/src/draw/sw/../../misc/lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
  94:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
  95:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  96:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  97:lvgl/src/draw/sw/../../misc/lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
  98:lvgl/src/draw/sw/../../misc/lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
  99:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
 100:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 101:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
 102:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 103:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 104:lvgl/src/draw/sw/../../misc/lv_color.h **** /*---------------------------------------
 105:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Macros for all existing color depths
 106:lvgl/src/draw/sw/../../misc/lv_color.h ****  * to set/get values of the color channels
 107:lvgl/src/draw/sw/../../misc/lv_color.h ****  *------------------------------------------*/
 108:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 109:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 110:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 111:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 112:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 113:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 114:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 115:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 116:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 117:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 118:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 119:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 120:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 121:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 122:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 123:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 124:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 125:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 126:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 127:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 128:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 129:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 130:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 131:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 132:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 133:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 134:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 135:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 136:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 137:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 138:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 139:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 140:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 141:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 142:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 143:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 144:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 4


 145:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 146:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 147:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 148:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 149:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 150:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 151:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 152:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 153:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 154:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 155:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 156:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 157:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 158:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 159:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 160:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 161:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 162:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 163:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 164:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 165:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 166:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 167:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 168:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 169:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 170:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 171:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 172:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 173:lvgl/src/draw/sw/../../misc/lv_color.h **** /*---------------------------------------
 174:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Macros for the current color depth
 175:lvgl/src/draw/sw/../../misc/lv_color.h ****  * to set/get values of the color channels
 176:lvgl/src/draw/sw/../../misc/lv_color.h ****  *------------------------------------------*/
 177:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 178:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 179:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 180:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 181:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 182:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 183:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 184:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 185:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 186:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 187:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 188:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 189:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 190:lvgl/src/draw/sw/../../misc/lv_color.h **** /**********************
 191:lvgl/src/draw/sw/../../misc/lv_color.h ****  *      TYPEDEFS
 192:lvgl/src/draw/sw/../../misc/lv_color.h ****  **********************/
 193:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 194:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 195:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 196:lvgl/src/draw/sw/../../misc/lv_color.h ****     union {
 197:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t blue : 1;
 198:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t green : 1;
 199:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t red : 1;
 200:lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 201:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color1_t;
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 5


 202:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 203:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 204:lvgl/src/draw/sw/../../misc/lv_color.h ****     struct {
 205:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t blue : 2;
 206:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t green : 3;
 207:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t red : 3;
 208:lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 209:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t full;
 210:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color8_t;
 211:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 212:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 213:lvgl/src/draw/sw/../../misc/lv_color.h ****     struct {
 214:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 215:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t blue : 5;
 216:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t green : 6;
 217:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t red : 5;
 218:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 219:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t green_h : 3;
 220:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t red : 5;
 221:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t blue : 5;
 222:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t green_l : 3;
 223:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 224:lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 225:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint16_t full;
 226:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color16_t;
 227:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 228:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 229:lvgl/src/draw/sw/../../misc/lv_color.h ****     struct {
 230:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t blue;
 231:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t green;
 232:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t red;
 233:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t alpha;
 234:lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 235:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t full;
 236:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color32_t;
 237:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 238:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 239:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 240:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 241:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef struct {
 242:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint16_t h;
 243:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t s;
 244:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t v;
 245:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color_hsv_t;
 246:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 247:lvgl/src/draw/sw/../../misc/lv_color.h **** //! @cond Doxygen_Suppress
 248:lvgl/src/draw/sw/../../misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 249:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef uint8_t lv_opa_t;
 250:lvgl/src/draw/sw/../../misc/lv_color.h **** //! @endcond
 251:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 252:lvgl/src/draw/sw/../../misc/lv_color.h **** struct _lv_color_filter_dsc_t;
 253:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 254:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 255:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 256:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 257:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_filter_cb_t filter_cb;
 258:lvgl/src/draw/sw/../../misc/lv_color.h ****     void * user_data;
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 6


 259:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color_filter_dsc_t;
 260:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 261:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 262:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef enum {
 263:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_RED,
 264:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_PINK,
 265:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_PURPLE,
 266:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 267:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_INDIGO,
 268:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_BLUE,
 269:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 270:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_CYAN,
 271:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_TEAL,
 272:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_GREEN,
 273:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 274:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_LIME,
 275:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_YELLOW,
 276:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_AMBER,
 277:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_ORANGE,
 278:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 279:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_BROWN,
 280:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_BLUE_GREY,
 281:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_GREY,
 282:lvgl/src/draw/sw/../../misc/lv_color.h ****     _LV_PALETTE_LAST,
 283:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_NONE = 0xff,
 284:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_palette_t;
 285:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 286:lvgl/src/draw/sw/../../misc/lv_color.h **** /**********************
 287:lvgl/src/draw/sw/../../misc/lv_color.h ****  * GLOBAL PROTOTYPES
 288:lvgl/src/draw/sw/../../misc/lv_color.h ****  **********************/
 289:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 290:lvgl/src/draw/sw/../../misc/lv_color.h **** /*In color conversations:
 291:lvgl/src/draw/sw/../../misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 292:lvgl/src/draw/sw/../../misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 293:lvgl/src/draw/sw/../../misc/lv_color.h ****  *         8 bit Red has 3 bits
 294:lvgl/src/draw/sw/../../misc/lv_color.h ****  *        ----------------------
 295:lvgl/src/draw/sw/../../misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 296:lvgl/src/draw/sw/../../misc/lv_color.h ****  *
 297:lvgl/src/draw/sw/../../misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 298:lvgl/src/draw/sw/../../misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 299:lvgl/src/draw/sw/../../misc/lv_color.h ****  *        16 bit Red has 5 bits
 300:lvgl/src/draw/sw/../../misc/lv_color.h ****  *        ----------------------
 301:lvgl/src/draw/sw/../../misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 302:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 303:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 304:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 305:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 306:lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 307:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 308:lvgl/src/draw/sw/../../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 309:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 1;
 310:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 311:lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
 312:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 313:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 314:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 315:lvgl/src/draw/sw/../../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 7


 316:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 1;
 317:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 318:lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
 319:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 320:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 321:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 322:lvgl/src/draw/sw/../../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 323:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 1;
 324:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 325:lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
 326:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 327:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 328:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 329:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 330:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 331:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 332:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 333:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 334:lvgl/src/draw/sw/../../misc/lv_color.h ****     if(color.full == 0)
 335:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 336:lvgl/src/draw/sw/../../misc/lv_color.h ****     else
 337:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFF;
 338:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 339:lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 340:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 341:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color8_t ret;
 342:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 343:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 344:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 345:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 346:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 347:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color8_t ret;
 348:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 349:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 350:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 351:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 352:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 353:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 354:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 355:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 356:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 357:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 358:lvgl/src/draw/sw/../../misc/lv_color.h ****     if(color.full == 0)
 359:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 360:lvgl/src/draw/sw/../../misc/lv_color.h ****     else
 361:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFFFF;
 362:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 363:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color16_t ret;
 364:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 365:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 366:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 367:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 368:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 369:lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 370:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 371:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color16_t ret;
 372:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 8


 373:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 374:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 375:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 376:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 377:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 378:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 379:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 380:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 381:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 382:lvgl/src/draw/sw/../../misc/lv_color.h ****     if(color.full == 0)
 383:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFF000000;
 384:lvgl/src/draw/sw/../../misc/lv_color.h ****     else
 385:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFFFFFFFF;
 386:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 387:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color32_t ret;
 388:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 389:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 390:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 391:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 392:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 393:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 394:lvgl/src/draw/sw/../../misc/lv_color.h ****     /**
 395:lvgl/src/draw/sw/../../misc/lv_color.h ****      * The floating point math for conversion is:
 396:lvgl/src/draw/sw/../../misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 397:lvgl/src/draw/sw/../../misc/lv_color.h ****      * The faster integer math for conversion is:
 398:lvgl/src/draw/sw/../../misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 399:lvgl/src/draw/sw/../../misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 400:lvgl/src/draw/sw/../../misc/lv_color.h ****      *
 401:lvgl/src/draw/sw/../../misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 402:lvgl/src/draw/sw/../../misc/lv_color.h ****      *
 403:lvgl/src/draw/sw/../../misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 404:lvgl/src/draw/sw/../../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 405:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       0           8      7        7       255
 406:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       1          16     14        7       255
 407:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       2          32     28        7       255
 408:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       3          65     25        3       255
 409:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       4         131     19        1       255
 410:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       5         263      7        0       255
 411:lvgl/src/draw/sw/../../misc/lv_color.h ****      *
 412:lvgl/src/draw/sw/../../misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 413:lvgl/src/draw/sw/../../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 414:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       0           4      3        3       255
 415:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       1           8      6        3       255
 416:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       2          16     12        3       255
 417:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       3          32     24        3       255
 418:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       4          64     48        3       255
 419:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       5         129     33        1       255
 420:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       6         259      3        0       255
 421:lvgl/src/draw/sw/../../misc/lv_color.h ****      */
 422:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 423:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color32_t ret;
 424:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 425:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 426:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 427:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 428:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 429:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 9


 430:lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 431:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 432:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 433:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 434:lvgl/src/draw/sw/../../misc/lv_color.h **** //! @cond Doxygen_Suppress
 435:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 436:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 437:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Mix two colors with a given ratio.
 438:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 439:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param c2 the second color to mix (usually the background)
 440:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 441:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @return the mixed color
 442:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 443:lvgl/src/draw/sw/../../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 444:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 445:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_t ret;
 446:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 447:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_16_SWAP == 0
 448:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Source: https://stackoverflow.com/a/50012418/1999969*/
 449:lvgl/src/draw/sw/../../misc/lv_color.h ****     mix = (mix + 4) >> 3;
 450:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 451:lvgl/src/draw/sw/../../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 452:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | ((uint32_t)c1.full << 16)) & 0x7E0F81F;
 453:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 454:lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 455:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 456:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 457:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 458:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 460:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 462:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 464:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 465:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 466:lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 467:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 468:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 469:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret;
 470:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 472:lvgl/src/draw/sw/../../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 473:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 474:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 475:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[0] = (uint16_t)LV_COLOR_GET_R(c) * mix;
 476:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 477:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 478:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 479:lvgl/src/draw/sw/../../misc/lv_color.h ****     (void) mix;
 480:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 481:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 482:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 483:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 484:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 485:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 486:lvgl/src/draw/sw/../../misc/lv_color.h **** }
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 10


 487:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 488:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 489:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 490:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 491:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 492:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 493:lvgl/src/draw/sw/../../misc/lv_color.h ****  *            Should be modified like mix = `255 - mix`
 494:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @return the mixed color
 495:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @note 255 won't give clearly `c1`.
 496:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 497:lvgl/src/draw/sw/../../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix_premult(uint16_t * premult_c1, lv_color
 498:lvgl/src/draw/sw/../../misc/lv_color.h **** {
  29              		.loc 2 498 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 2 498 1 is_stmt 0 view .LVU1
  34 0000 00B5     		push	{lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 14, -4
  38 0002 8446     		mov	ip, r0
 499:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_t ret;
  39              		.loc 2 499 5 is_stmt 1 view .LVU2
 500:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 501:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8 or 32*/
 502:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROUND_OF
  40              		.loc 2 502 5 view .LVU3
  41 0004 0388     		ldrh	r3, [r0]
  42 0006 C1F3C420 		ubfx	r0, r1, #11, #5
  43              	.LVL1:
  44              		.loc 2 502 5 is_stmt 0 view .LVU4
  45 000a 02FB0033 		mla	r3, r2, r0, r3
  46 000e 03EB0320 		add	r0, r3, r3, lsl #8
  47 0012 03EBC013 		add	r3, r3, r0, lsl #7
  48 0016 C3F3C453 		ubfx	r3, r3, #23, #5
  49 001a 4FF00000 		mov	r0, #0	@ movhi
  50              	.LVL2:
  51              		.loc 2 502 5 view .LVU5
  52 001e 63F3CF20 		bfi	r0, r3, #11, #5
  53              	.LVL3:
 503:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
  54              		.loc 2 503 5 is_stmt 1 view .LVU6
  55 0022 BCF80230 		ldrh	r3, [ip, #2]
  56 0026 C1F3451E 		ubfx	lr, r1, #5, #6
  57 002a 0EFB0233 		mla	r3, lr, r2, r3
  58 002e 03EB032E 		add	lr, r3, r3, lsl #8
  59 0032 03EBCE13 		add	r3, r3, lr, lsl #7
  60 0036 C3F3C553 		ubfx	r3, r3, #23, #6
  61 003a 63F34A10 		bfi	r0, r3, #5, #6
 504:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
  62              		.loc 2 504 5 view .LVU7
  63 003e BCF80430 		ldrh	r3, [ip, #4]
  64 0042 01F01F01 		and	r1, r1, #31
  65              	.LVL4:
  66              		.loc 2 504 5 is_stmt 0 view .LVU8
  67 0046 01FB0232 		mla	r2, r1, r2, r3
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 11


  68              	.LVL5:
  69              		.loc 2 504 5 view .LVU9
  70 004a 02EB0223 		add	r3, r2, r2, lsl #8
  71 004e 02EBC312 		add	r2, r2, r3, lsl #7
  72 0052 C2F3C452 		ubfx	r2, r2, #23, #5
  73 0056 62F30400 		bfi	r0, r2, #0, #5
 505:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
  74              		.loc 2 505 5 is_stmt 1 view .LVU10
  75              		.loc 2 505 5 view .LVU11
  76              		.loc 2 505 5 view .LVU12
 506:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 507:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 508:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Restore color1*/
 509:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_t c1;
 510:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
 511:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 512:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 513:lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
 514:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 515:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 516:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret;
  77              		.loc 2 516 5 view .LVU13
  78              	.LVL6:
 517:lvgl/src/draw/sw/../../misc/lv_color.h **** }
  79              		.loc 2 517 1 is_stmt 0 view .LVU14
  80 005a 5DF804FB 		ldr	pc, [sp], #4
  81              		.cfi_endproc
  82              	.LFE8:
  84              		.section	.text.lv_draw_sw_img_decoded,"ax",%progbits
  85              		.align	1
  86              		.global	lv_draw_sw_img_decoded
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
  91              	lv_draw_sw_img_decoded:
  92              	.LVL7:
  93              	.LFB156:
   1:lvgl/src/draw/sw/lv_draw_sw_img.c **** /**
   2:lvgl/src/draw/sw/lv_draw_sw_img.c ****  * @file lv_draw_img.c
   3:lvgl/src/draw/sw/lv_draw_sw_img.c ****  *
   4:lvgl/src/draw/sw/lv_draw_sw_img.c ****  */
   5:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
   6:lvgl/src/draw/sw/lv_draw_sw_img.c **** /*********************
   7:lvgl/src/draw/sw/lv_draw_sw_img.c ****  *      INCLUDES
   8:lvgl/src/draw/sw/lv_draw_sw_img.c ****  *********************/
   9:lvgl/src/draw/sw/lv_draw_sw_img.c **** #include "lv_draw_sw.h"
  10:lvgl/src/draw/sw/lv_draw_sw_img.c **** #include "../lv_img_cache.h"
  11:lvgl/src/draw/sw/lv_draw_sw_img.c **** #include "../../hal/lv_hal_disp.h"
  12:lvgl/src/draw/sw/lv_draw_sw_img.c **** #include "../../misc/lv_log.h"
  13:lvgl/src/draw/sw/lv_draw_sw_img.c **** #include "../../core/lv_refr.h"
  14:lvgl/src/draw/sw/lv_draw_sw_img.c **** #include "../../misc/lv_mem.h"
  15:lvgl/src/draw/sw/lv_draw_sw_img.c **** #include "../../misc/lv_math.h"
  16:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
  17:lvgl/src/draw/sw/lv_draw_sw_img.c **** /*********************
  18:lvgl/src/draw/sw/lv_draw_sw_img.c ****  *      DEFINES
  19:lvgl/src/draw/sw/lv_draw_sw_img.c ****  *********************/
  20:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 12


  21:lvgl/src/draw/sw/lv_draw_sw_img.c **** /**********************
  22:lvgl/src/draw/sw/lv_draw_sw_img.c ****  *      TYPEDEFS
  23:lvgl/src/draw/sw/lv_draw_sw_img.c ****  **********************/
  24:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
  25:lvgl/src/draw/sw/lv_draw_sw_img.c **** /**********************
  26:lvgl/src/draw/sw/lv_draw_sw_img.c ****  *  STATIC PROTOTYPES
  27:lvgl/src/draw/sw/lv_draw_sw_img.c ****  **********************/
  28:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
  29:lvgl/src/draw/sw/lv_draw_sw_img.c **** /**********************
  30:lvgl/src/draw/sw/lv_draw_sw_img.c ****  *  STATIC VARIABLES
  31:lvgl/src/draw/sw/lv_draw_sw_img.c ****  **********************/
  32:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
  33:lvgl/src/draw/sw/lv_draw_sw_img.c **** /**********************
  34:lvgl/src/draw/sw/lv_draw_sw_img.c ****  *      MACROS
  35:lvgl/src/draw/sw/lv_draw_sw_img.c ****  **********************/
  36:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
  37:lvgl/src/draw/sw/lv_draw_sw_img.c **** /**********************
  38:lvgl/src/draw/sw/lv_draw_sw_img.c ****  *   GLOBAL FUNCTIONS
  39:lvgl/src/draw/sw/lv_draw_sw_img.c ****  **********************/
  40:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
  41:lvgl/src/draw/sw/lv_draw_sw_img.c **** LV_ATTRIBUTE_FAST_MEM void lv_draw_sw_img_decoded(struct _lv_draw_ctx_t * draw_ctx, const lv_draw_i
  42:lvgl/src/draw/sw/lv_draw_sw_img.c ****                                                   const lv_area_t * coords, const uint8_t * src_buf
  43:lvgl/src/draw/sw/lv_draw_sw_img.c **** {
  94              		.loc 1 43 1 is_stmt 1 view -0
  95              		.cfi_startproc
  96              		@ args = 4, pretend = 0, frame = 184
  97              		@ frame_needed = 0, uses_anonymous_args = 0
  98              		.loc 1 43 1 is_stmt 0 view .LVU16
  99 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 100              	.LCFI1:
 101              		.cfi_def_cfa_offset 36
 102              		.cfi_offset 4, -36
 103              		.cfi_offset 5, -32
 104              		.cfi_offset 6, -28
 105              		.cfi_offset 7, -24
 106              		.cfi_offset 8, -20
 107              		.cfi_offset 9, -16
 108              		.cfi_offset 10, -12
 109              		.cfi_offset 11, -8
 110              		.cfi_offset 14, -4
 111 0004 AFB0     		sub	sp, sp, #188
 112              	.LCFI2:
 113              		.cfi_def_cfa_offset 224
 114 0006 0D90     		str	r0, [sp, #52]
 115 0008 0D46     		mov	r5, r1
 116 000a 0191     		str	r1, [sp, #4]
 117 000c 0992     		str	r2, [sp, #36]
 118 000e 1E46     		mov	r6, r3
 119 0010 9DF8E0A0 		ldrb	r10, [sp, #224]	@ zero_extendqisi2
  44:lvgl/src/draw/sw/lv_draw_sw_img.c ****     /*Use the clip area as draw area*/
  45:lvgl/src/draw/sw/lv_draw_sw_img.c ****     lv_area_t draw_area;
 120              		.loc 1 45 5 is_stmt 1 view .LVU17
  46:lvgl/src/draw/sw/lv_draw_sw_img.c ****     lv_area_copy(&draw_area, draw_ctx->clip_area);
 121              		.loc 1 46 5 view .LVU18
 122 0014 8368     		ldr	r3, [r0, #8]
 123              	.LVL8:
 124              	.LBB24:
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 13


 125              	.LBI24:
 126              		.file 3 "lvgl/src/draw/sw/../../misc/lv_area.h"
   1:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
   2:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @file lv_area.h
   3:lvgl/src/draw/sw/../../misc/lv_area.h ****  *
   4:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
   5:lvgl/src/draw/sw/../../misc/lv_area.h **** 
   6:lvgl/src/draw/sw/../../misc/lv_area.h **** #ifndef LV_AREA_H
   7:lvgl/src/draw/sw/../../misc/lv_area.h **** #define LV_AREA_H
   8:lvgl/src/draw/sw/../../misc/lv_area.h **** 
   9:lvgl/src/draw/sw/../../misc/lv_area.h **** #ifdef __cplusplus
  10:lvgl/src/draw/sw/../../misc/lv_area.h **** extern "C" {
  11:lvgl/src/draw/sw/../../misc/lv_area.h **** #endif
  12:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  13:lvgl/src/draw/sw/../../misc/lv_area.h **** /*********************
  14:lvgl/src/draw/sw/../../misc/lv_area.h ****  *      INCLUDES
  15:lvgl/src/draw/sw/../../misc/lv_area.h ****  *********************/
  16:lvgl/src/draw/sw/../../misc/lv_area.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/draw/sw/../../misc/lv_area.h **** #include <stdbool.h>
  18:lvgl/src/draw/sw/../../misc/lv_area.h **** #include <stdint.h>
  19:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  20:lvgl/src/draw/sw/../../misc/lv_area.h **** /*********************
  21:lvgl/src/draw/sw/../../misc/lv_area.h ****  *      DEFINES
  22:lvgl/src/draw/sw/../../misc/lv_area.h ****  *********************/
  23:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  24:lvgl/src/draw/sw/../../misc/lv_area.h **** #if LV_USE_LARGE_COORD
  25:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef int32_t lv_coord_t;
  26:lvgl/src/draw/sw/../../misc/lv_area.h **** #else
  27:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef int16_t lv_coord_t;
  28:lvgl/src/draw/sw/../../misc/lv_area.h **** #endif
  29:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  30:lvgl/src/draw/sw/../../misc/lv_area.h **** /**********************
  31:lvgl/src/draw/sw/../../misc/lv_area.h ****  *      TYPEDEFS
  32:lvgl/src/draw/sw/../../misc/lv_area.h ****  **********************/
  33:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  34:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
  35:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Represents a point on the screen.
  36:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
  37:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef struct {
  38:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t x;
  39:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t y;
  40:lvgl/src/draw/sw/../../misc/lv_area.h **** } lv_point_t;
  41:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  42:lvgl/src/draw/sw/../../misc/lv_area.h **** /** Represents an area of the screen.*/
  43:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef struct {
  44:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t x1;
  45:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t y1;
  46:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t x2;
  47:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t y2;
  48:lvgl/src/draw/sw/../../misc/lv_area.h **** } lv_area_t;
  49:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  50:lvgl/src/draw/sw/../../misc/lv_area.h **** /** Alignments*/
  51:lvgl/src/draw/sw/../../misc/lv_area.h **** enum {
  52:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_DEFAULT = 0,
  53:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_TOP_LEFT,
  54:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_TOP_MID,
  55:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_TOP_RIGHT,
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 14


  56:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_BOTTOM_LEFT,
  57:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_BOTTOM_MID,
  58:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_BOTTOM_RIGHT,
  59:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_LEFT_MID,
  60:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_RIGHT_MID,
  61:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_CENTER,
  62:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  63:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  64:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  65:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  66:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  67:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  68:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  69:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  70:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  71:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  72:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  73:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  74:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  75:lvgl/src/draw/sw/../../misc/lv_area.h **** };
  76:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef uint8_t lv_align_t;
  77:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  78:lvgl/src/draw/sw/../../misc/lv_area.h **** enum {
  79:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_NONE     = 0x00,
  80:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_LEFT     = (1 << 0),
  81:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_RIGHT    = (1 << 1),
  82:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_TOP      = (1 << 2),
  83:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_BOTTOM   = (1 << 3),
  84:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_HOR      = LV_DIR_LEFT | LV_DIR_RIGHT,
  85:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_VER      = LV_DIR_TOP | LV_DIR_BOTTOM,
  86:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_ALL      = LV_DIR_HOR | LV_DIR_VER,
  87:lvgl/src/draw/sw/../../misc/lv_area.h **** };
  88:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  89:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef uint8_t lv_dir_t;
  90:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  91:lvgl/src/draw/sw/../../misc/lv_area.h **** /**********************
  92:lvgl/src/draw/sw/../../misc/lv_area.h ****  * GLOBAL PROTOTYPES
  93:lvgl/src/draw/sw/../../misc/lv_area.h ****  **********************/
  94:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  95:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
  96:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Initialize an area
  97:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param area_p pointer to an area
  98:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param x1 left coordinate of the area
  99:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param y1 top coordinate of the area
 100:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param x2 right coordinate of the area
 101:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param y2 bottom coordinate of the area
 102:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
 103:lvgl/src/draw/sw/../../misc/lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
 104:lvgl/src/draw/sw/../../misc/lv_area.h **** 
 105:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
 106:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Copy an area
 107:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param dest pointer to the destination area
 108:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param src pointer to the source area
 109:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
 110:lvgl/src/draw/sw/../../misc/lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
 127              		.loc 3 110 20 view .LVU19
 128              	.LBB25:
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 15


 111:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 112:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->x1 = src->x1;
 129              		.loc 3 112 5 view .LVU20
 130              		.loc 3 112 19 is_stmt 0 view .LVU21
 131 0016 B3F90020 		ldrsh	r2, [r3]
 132              	.LVL9:
 133              		.loc 3 112 14 view .LVU22
 134 001a ADF8B020 		strh	r2, [sp, #176]	@ movhi
 113:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y1 = src->y1;
 135              		.loc 3 113 5 is_stmt 1 view .LVU23
 136              		.loc 3 113 19 is_stmt 0 view .LVU24
 137 001e B3F90220 		ldrsh	r2, [r3, #2]
 138              		.loc 3 113 14 view .LVU25
 139 0022 ADF8B220 		strh	r2, [sp, #178]	@ movhi
 114:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->x2 = src->x2;
 140              		.loc 3 114 5 is_stmt 1 view .LVU26
 141              		.loc 3 114 19 is_stmt 0 view .LVU27
 142 0026 B3F90420 		ldrsh	r2, [r3, #4]
 143              		.loc 3 114 14 view .LVU28
 144 002a ADF8B420 		strh	r2, [sp, #180]	@ movhi
 115:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y2 = src->y2;
 145              		.loc 3 115 5 is_stmt 1 view .LVU29
 146              		.loc 3 115 19 is_stmt 0 view .LVU30
 147 002e B3F90630 		ldrsh	r3, [r3, #6]
 148              	.LVL10:
 149              		.loc 3 115 14 view .LVU31
 150 0032 ADF8B630 		strh	r3, [sp, #182]	@ movhi
 151              	.LVL11:
 152              		.loc 3 115 14 view .LVU32
 153              	.LBE25:
 154              	.LBE24:
  47:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
  48:lvgl/src/draw/sw/lv_draw_sw_img.c ****     bool mask_any = lv_draw_mask_is_any(&draw_area);
 155              		.loc 1 48 5 is_stmt 1 view .LVU33
 156              		.loc 1 48 21 is_stmt 0 view .LVU34
 157 0036 2CA8     		add	r0, sp, #176
 158              	.LVL12:
 159              		.loc 1 48 21 view .LVU35
 160 0038 FFF7FEFF 		bl	lv_draw_mask_is_any
 161              	.LVL13:
 162              		.loc 1 48 21 view .LVU36
 163 003c 0446     		mov	r4, r0
 164 003e 0890     		str	r0, [sp, #32]
 165              	.LVL14:
  49:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
  50:lvgl/src/draw/sw/lv_draw_sw_img.c ****     lv_draw_sw_blend_dsc_t blend_dsc;
 166              		.loc 1 50 5 is_stmt 1 view .LVU37
  51:lvgl/src/draw/sw/lv_draw_sw_img.c ****     lv_memset_00(&blend_dsc, sizeof(blend_dsc));
 167              		.loc 1 51 5 view .LVU38
 168 0040 1C21     		movs	r1, #28
 169 0042 25A8     		add	r0, sp, #148
 170 0044 FFF7FEFF 		bl	lv_memset_00
 171              	.LVL15:
  52:lvgl/src/draw/sw/lv_draw_sw_img.c ****     blend_dsc.opa = draw_dsc->opa;
 172              		.loc 1 52 5 view .LVU39
 173              		.loc 1 52 29 is_stmt 0 view .LVU40
 174 0048 EB7A     		ldrb	r3, [r5, #11]	@ zero_extendqisi2
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 16


 175              		.loc 1 52 19 view .LVU41
 176 004a 8DF8AC30 		strb	r3, [sp, #172]
  53:lvgl/src/draw/sw/lv_draw_sw_img.c ****     blend_dsc.blend_mode = draw_dsc->blend_mode;
 177              		.loc 1 53 5 is_stmt 1 view .LVU42
 178              		.loc 1 53 36 is_stmt 0 view .LVU43
 179 004e 2B7B     		ldrb	r3, [r5, #12]	@ zero_extendqisi2
 180 0050 C3F30303 		ubfx	r3, r3, #0, #4
 181              		.loc 1 53 26 view .LVU44
 182 0054 8DF8AD30 		strb	r3, [sp, #173]
  54:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
  55:lvgl/src/draw/sw/lv_draw_sw_img.c ****     /*The simplest case just copy the pixels into the draw_buf*/
  56:lvgl/src/draw/sw/lv_draw_sw_img.c ****     if(!mask_any && draw_dsc->angle == 0 && draw_dsc->zoom == LV_IMG_ZOOM_NONE &&
 183              		.loc 1 56 5 is_stmt 1 view .LVU45
 184              		.loc 1 56 7 is_stmt 0 view .LVU46
 185 0058 24B9     		cbnz	r4, .L4
 186              		.loc 1 56 42 discriminator 1 view .LVU47
 187 005a 2B68     		ldr	r3, [r5]
 188 005c B3F1807F 		cmp	r3, #16777216
 189 0060 00F0A880 		beq	.L48
 190              	.L4:
 191              	.LBB26:
  57:lvgl/src/draw/sw/lv_draw_sw_img.c ****        cf == LV_IMG_CF_TRUE_COLOR && draw_dsc->recolor_opa == LV_OPA_TRANSP) {
  58:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.blend_area = coords;
  59:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.src_buf = (const lv_color_t *)src_buf;
  60:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_draw_sw_blend(draw_ctx, &blend_dsc);
  61:lvgl/src/draw/sw/lv_draw_sw_img.c ****     }
  62:lvgl/src/draw/sw/lv_draw_sw_img.c ****     /*In the other cases every pixel need to be checked one-by-one*/
  63:lvgl/src/draw/sw/lv_draw_sw_img.c ****     else {
  64:lvgl/src/draw/sw/lv_draw_sw_img.c ****         //#if LV_DRAW_COMPLEX
  65:lvgl/src/draw/sw/lv_draw_sw_img.c ****         /*The pixel size in byte is different if an alpha byte is added too*/
  66:lvgl/src/draw/sw/lv_draw_sw_img.c ****         uint8_t px_size_byte = cf == LV_IMG_CF_TRUE_COLOR_ALPHA ? LV_IMG_PX_SIZE_ALPHA_BYTE : sizeo
 192              		.loc 1 66 9 is_stmt 1 view .LVU48
 193              		.loc 1 66 17 is_stmt 0 view .LVU49
 194 0064 BAF1050F 		cmp	r10, #5
 195 0068 00F0B580 		beq	.L49
 196              		.loc 1 66 17 discriminator 2 view .LVU50
 197 006c 4FF00208 		mov	r8, #2
 198              	.L6:
 199              	.LVL16:
  67:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
  68:lvgl/src/draw/sw/lv_draw_sw_img.c ****         /*Go to the first displayed pixel of the map*/
  69:lvgl/src/draw/sw/lv_draw_sw_img.c ****         int32_t src_stride = lv_area_get_width(coords);
 200              		.loc 1 69 9 is_stmt 1 view .LVU51
 201              	.LBB27:
 202              	.LBI27:
 116:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 117:lvgl/src/draw/sw/../../misc/lv_area.h **** 
 118:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
 119:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Get the width of an area
 120:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param area_p pointer to an area
 121:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @return the width of the area (if x1 == x2 -> width = 1)
 122:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)
 203              		.loc 3 123 26 view .LVU52
 204              	.LBB28:
 124:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 125:lvgl/src/draw/sw/../../misc/lv_area.h ****     return (lv_coord_t)(area_p->x2 - area_p->x1 + 1);
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 17


 205              		.loc 3 125 5 view .LVU53
 206              		.loc 3 125 31 is_stmt 0 view .LVU54
 207 0070 099A     		ldr	r2, [sp, #36]
 208 0072 9388     		ldrh	r3, [r2, #4]
 209              		.loc 3 125 44 view .LVU55
 210 0074 1288     		ldrh	r2, [r2]
 211              		.loc 3 125 36 view .LVU56
 212 0076 9B1A     		subs	r3, r3, r2
 213 0078 9BB2     		uxth	r3, r3
 214              		.loc 3 125 49 view .LVU57
 215 007a 0133     		adds	r3, r3, #1
 216              		.loc 3 125 12 view .LVU58
 217 007c 1BB2     		sxth	r3, r3
 218 007e 0C93     		str	r3, [sp, #48]
 219              	.LVL17:
 220              		.loc 3 125 12 view .LVU59
 221              	.LBE28:
 222              	.LBE27:
  70:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
  71:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_color_t c;
 223              		.loc 1 71 9 is_stmt 1 view .LVU60
  72:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_color_t chroma_keyed_color = LV_COLOR_CHROMA_KEY;
 224              		.loc 1 72 9 view .LVU61
 225              	.LBB29:
 226              	.LBI29:
 518:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 519:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 520:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Mix two colors. Both color can have alpha value.
 521:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param bg_color background color
 522:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param bg_opa alpha of the background color
 523:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param fg_color foreground color
 524:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param fg_opa alpha of the foreground color
 525:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param res_color the result color
 526:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param res_opa the result opacity
 527:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 528:lvgl/src/draw/sw/../../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 529:lvgl/src/draw/sw/../../misc/lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
 530:lvgl/src/draw/sw/../../misc/lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 531:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 532:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Pick the foreground if it's fully opaque or the Background is fully transparent*/
 533:lvgl/src/draw/sw/../../misc/lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 534:lvgl/src/draw/sw/../../misc/lv_color.h ****         res_color->full = fg_color.full;
 535:lvgl/src/draw/sw/../../misc/lv_color.h ****         *res_opa = fg_opa;
 536:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 537:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Transparent foreground: use the Background*/
 538:lvgl/src/draw/sw/../../misc/lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 539:lvgl/src/draw/sw/../../misc/lv_color.h ****         res_color->full = bg_color.full;
 540:lvgl/src/draw/sw/../../misc/lv_color.h ****         *res_opa = bg_opa;
 541:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 542:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Opaque background: use simple mix*/
 543:lvgl/src/draw/sw/../../misc/lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 544:lvgl/src/draw/sw/../../misc/lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 545:lvgl/src/draw/sw/../../misc/lv_color.h ****         *res_opa = LV_OPA_COVER;
 546:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 547:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 548:lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
 549:lvgl/src/draw/sw/../../misc/lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 18


 550:lvgl/src/draw/sw/../../misc/lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 551:lvgl/src/draw/sw/../../misc/lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 552:lvgl/src/draw/sw/../../misc/lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 553:lvgl/src/draw/sw/../../misc/lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 554:lvgl/src/draw/sw/../../misc/lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
 555:lvgl/src/draw/sw/../../misc/lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 556:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 557:lvgl/src/draw/sw/../../misc/lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
 558:lvgl/src/draw/sw/../../misc/lv_color.h ****            bg_color.full != bg_color_save.full) {
 559:lvgl/src/draw/sw/../../misc/lv_color.h ****             fg_opa_save        = fg_opa;
 560:lvgl/src/draw/sw/../../misc/lv_color.h ****             bg_opa_save        = bg_opa;
 561:lvgl/src/draw/sw/../../misc/lv_color.h ****             fg_color_save.full = fg_color.full;
 562:lvgl/src/draw/sw/../../misc/lv_color.h ****             bg_color_save.full = bg_color.full;
 563:lvgl/src/draw/sw/../../misc/lv_color.h ****             /*Info:
 564:lvgl/src/draw/sw/../../misc/lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
 565:lvgl/src/draw/sw/../../misc/lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
 566:lvgl/src/draw/sw/../../misc/lv_color.h ****             LV_ASSERT(res_opa_saved != 0);
 567:lvgl/src/draw/sw/../../misc/lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
 568:lvgl/src/draw/sw/../../misc/lv_color.h ****             res_color_saved = lv_color_mix(fg_color, bg_color, ratio);
 569:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 570:lvgl/src/draw/sw/../../misc/lv_color.h ****         }
 571:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 572:lvgl/src/draw/sw/../../misc/lv_color.h ****         res_color->full = res_color_saved.full;
 573:lvgl/src/draw/sw/../../misc/lv_color.h ****         *res_opa = res_opa_saved;
 574:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 575:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 576:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 577:lvgl/src/draw/sw/../../misc/lv_color.h **** //! @endcond
 578:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 579:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 580:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Get the brightness of a color
 581:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param color a color
 582:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @return the brightness [0..255]
 583:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 584:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 585:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 586:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color32_t c32;
 587:lvgl/src/draw/sw/../../misc/lv_color.h ****     c32.full        = lv_color_to32(color);
 588:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 589:lvgl/src/draw/sw/../../misc/lv_color.h ****     return (uint8_t)(bright >> 3);
 590:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 591:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 592:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)
 593:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 594:lvgl/src/draw/sw/../../misc/lv_color.h ****     return _LV_COLOR_MAKE_TYPE_HELPER LV_COLOR_MAKE(r, g, b);
 595:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 596:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 597:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline lv_color_t lv_color_hex(uint32_t c)
 227              		.loc 2 597 26 view .LVU62
 228              	.LBB30:
 598:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 599:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 16
 600:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_t r;
 229              		.loc 2 600 5 view .LVU63
 601:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 602:lvgl/src/draw/sw/../../misc/lv_color.h ****     /* Convert a 4 bytes per pixel in format ARGB32 to R5G6B5 format
 603:lvgl/src/draw/sw/../../misc/lv_color.h ****         naive way (by calling lv_color_make with components):
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 19


 604:lvgl/src/draw/sw/../../misc/lv_color.h ****                     r = ((c & 0xFF0000) >> 19)
 605:lvgl/src/draw/sw/../../misc/lv_color.h ****                     g = ((c & 0xFF00) >> 10)
 606:lvgl/src/draw/sw/../../misc/lv_color.h ****                     b = ((c & 0xFF) >> 3)
 607:lvgl/src/draw/sw/../../misc/lv_color.h ****                     rgb565 = (r << 11) | (g << 5) | b
 608:lvgl/src/draw/sw/../../misc/lv_color.h ****         That's 3 mask, 5 bitshift and 2 or operations
 609:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 610:lvgl/src/draw/sw/../../misc/lv_color.h ****         A bit better:
 611:lvgl/src/draw/sw/../../misc/lv_color.h ****                     r = ((c & 0xF80000) >> 8)
 612:lvgl/src/draw/sw/../../misc/lv_color.h ****                     g = ((c & 0xFC00) >> 5)
 613:lvgl/src/draw/sw/../../misc/lv_color.h ****                     b = ((c & 0xFF) >> 3)
 614:lvgl/src/draw/sw/../../misc/lv_color.h ****                     rgb565 = r | g | b
 615:lvgl/src/draw/sw/../../misc/lv_color.h ****         That's 3 mask, 3 bitshifts and 2 or operations */
 616:lvgl/src/draw/sw/../../misc/lv_color.h ****     r.full = (uint16_t)(((c & 0xF80000) >> 8) | ((c & 0xFC00) >> 5) | ((c & 0xFF) >> 3));
 230              		.loc 2 616 5 view .LVU64
 617:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 618:lvgl/src/draw/sw/../../misc/lv_color.h ****     /* We want: rrrr rrrr GGGg gggg bbbb bbbb => gggb bbbb rrrr rGGG */
 619:lvgl/src/draw/sw/../../misc/lv_color.h ****     r.full = (uint16_t)(((c & 0xF80000) >> 16) | ((c & 0xFC00) >> 13) | ((c & 0x1C00) << 3) | ((c &
 620:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 621:lvgl/src/draw/sw/../../misc/lv_color.h ****     return r;
 231              		.loc 2 621 5 view .LVU65
 232              		.loc 2 621 5 is_stmt 0 view .LVU66
 233              	.LBE30:
 234              	.LBE29:
  73:lvgl/src/draw/sw/lv_draw_sw_img.c ****         uint32_t px_i = 0;
 235              		.loc 1 73 9 is_stmt 1 view .LVU67
  74:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
  75:lvgl/src/draw/sw/lv_draw_sw_img.c ****         const uint8_t * map_px;
 236              		.loc 1 75 9 view .LVU68
  76:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
  77:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_coord_t draw_area_h = lv_area_get_height(&draw_area);
 237              		.loc 1 77 9 view .LVU69
 238              	.LBB31:
 239              	.LBI31:
 126:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 127:lvgl/src/draw/sw/../../misc/lv_area.h **** 
 128:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
 129:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Get the height of an area
 130:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param area_p pointer to an area
 131:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @return the height of the area (if y1 == y2 -> height = 1)
 132:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
 133:lvgl/src/draw/sw/../../misc/lv_area.h **** static inline lv_coord_t lv_area_get_height(const lv_area_t * area_p)
 240              		.loc 3 133 26 view .LVU70
 241              	.LBB32:
 134:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 135:lvgl/src/draw/sw/../../misc/lv_area.h ****     return (lv_coord_t)(area_p->y2 - area_p->y1 + 1);
 242              		.loc 3 135 5 view .LVU71
 243              		.loc 3 135 31 is_stmt 0 view .LVU72
 244 0080 BDF8B620 		ldrh	r2, [sp, #182]
 245              		.loc 3 135 44 view .LVU73
 246 0084 BDF9B230 		ldrsh	r3, [sp, #178]
 247              	.LVL18:
 248              		.loc 3 135 44 view .LVU74
 249 0088 99B2     		uxth	r1, r3
 250              		.loc 3 135 36 view .LVU75
 251 008a 521A     		subs	r2, r2, r1
 252 008c 92B2     		uxth	r2, r2
 253              		.loc 3 135 49 view .LVU76
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 20


 254 008e 0132     		adds	r2, r2, #1
 255              		.loc 3 135 12 view .LVU77
 256 0090 12B2     		sxth	r2, r2
 257 0092 0B92     		str	r2, [sp, #44]
 258              	.LVL19:
 259              		.loc 3 135 12 view .LVU78
 260              	.LBE32:
 261              	.LBE31:
  78:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_coord_t draw_area_w = lv_area_get_width(&draw_area);
 262              		.loc 1 78 9 is_stmt 1 view .LVU79
 263              	.LBB33:
 264              	.LBI33:
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 265              		.loc 3 123 26 view .LVU80
 266              	.LBB34:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 267              		.loc 3 125 5 view .LVU81
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 268              		.loc 3 125 31 is_stmt 0 view .LVU82
 269 0094 BDF9B420 		ldrsh	r2, [sp, #180]
 270 0098 97B2     		uxth	r7, r2
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 271              		.loc 3 125 44 view .LVU83
 272 009a BDF9B010 		ldrsh	r1, [sp, #176]
 273 009e 88B2     		uxth	r0, r1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 274              		.loc 3 125 36 view .LVU84
 275 00a0 3F1A     		subs	r7, r7, r0
 276 00a2 BFB2     		uxth	r7, r7
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 277              		.loc 3 125 49 view .LVU85
 278 00a4 0137     		adds	r7, r7, #1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 279              		.loc 3 125 12 view .LVU86
 280 00a6 3FB2     		sxth	r7, r7
 281              	.LVL20:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 282              		.loc 3 125 12 view .LVU87
 283              	.LBE34:
 284              	.LBE33:
  79:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
  80:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_area_t blend_area;
 285              		.loc 1 80 9 is_stmt 1 view .LVU88
  81:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_area.x1 = draw_area.x1;
 286              		.loc 1 81 9 view .LVU89
 287              		.loc 1 81 23 is_stmt 0 view .LVU90
 288 00a8 ADF84010 		strh	r1, [sp, #64]	@ movhi
  82:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_area.x2 = draw_area.x2;
 289              		.loc 1 82 9 is_stmt 1 view .LVU91
 290              		.loc 1 82 23 is_stmt 0 view .LVU92
 291 00ac ADF84420 		strh	r2, [sp, #68]	@ movhi
  83:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_area.y1 = draw_area.y1;
 292              		.loc 1 83 9 is_stmt 1 view .LVU93
 293              		.loc 1 83 23 is_stmt 0 view .LVU94
 294 00b0 ADF84230 		strh	r3, [sp, #66]	@ movhi
  84:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_area.y2 = blend_area.y1;
 295              		.loc 1 84 9 is_stmt 1 view .LVU95
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 21


 296              		.loc 1 84 23 is_stmt 0 view .LVU96
 297 00b4 ADF84630 		strh	r3, [sp, #70]	@ movhi
  85:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.blend_area = &blend_area;
 298              		.loc 1 85 9 is_stmt 1 view .LVU97
 299              		.loc 1 85 30 is_stmt 0 view .LVU98
 300 00b8 10AB     		add	r3, sp, #64
 301 00ba 2593     		str	r3, [sp, #148]
  86:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
  87:lvgl/src/draw/sw/lv_draw_sw_img.c ****         bool transform = draw_dsc->angle != 0 || draw_dsc->zoom != LV_IMG_ZOOM_NONE ? true : false;
 302              		.loc 1 87 9 is_stmt 1 view .LVU99
 303              		.loc 1 87 47 is_stmt 0 view .LVU100
 304 00bc 019B     		ldr	r3, [sp, #4]
 305 00be D3F800B0 		ldr	fp, [r3]
 306              	.LVL21:
  88:lvgl/src/draw/sw/lv_draw_sw_img.c ****         /*Simple ARGB image. Handle it as special case because it's very common*/
  89:lvgl/src/draw/sw/lv_draw_sw_img.c ****         if(!mask_any && !transform && cf == LV_IMG_CF_TRUE_COLOR_ALPHA && draw_dsc->recolor_opa == 
 307              		.loc 1 89 9 is_stmt 1 view .LVU101
 308              		.loc 1 89 12 is_stmt 0 view .LVU102
 309 00c2 089B     		ldr	r3, [sp, #32]
 310 00c4 83F00103 		eor	r3, r3, #1
 311              		.loc 1 89 22 view .LVU103
 312 00c8 BBF1807F 		cmp	fp, #16777216
 313 00cc 14BF     		ite	ne
 314 00ce 0023     		movne	r3, #0
 315 00d0 03F00103 		andeq	r3, r3, #1
 316              		.loc 1 89 11 view .LVU104
 317 00d4 13B1     		cbz	r3, .L7
 318              		.loc 1 89 36 discriminator 1 view .LVU105
 319 00d6 BAF1050F 		cmp	r10, #5
 320 00da 7FD0     		beq	.L50
 321              	.L7:
 322              	.LBB35:
  90:lvgl/src/draw/sw/lv_draw_sw_img.c ****             uint32_t hor_res = (uint32_t) lv_disp_get_hor_res(_lv_refr_get_disp_refreshing());
  91:lvgl/src/draw/sw/lv_draw_sw_img.c ****             uint32_t mask_buf_size = lv_area_get_size(&draw_area) > (uint32_t) hor_res ? hor_res : 
  92:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_color_t * src_buf_rgb = lv_mem_buf_get(mask_buf_size * sizeof(lv_color_t));
  93:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_opa_t * mask_buf = lv_mem_buf_get(mask_buf_size);
  94:lvgl/src/draw/sw/lv_draw_sw_img.c ****             blend_dsc.mask_buf = mask_buf;
  95:lvgl/src/draw/sw/lv_draw_sw_img.c ****             blend_dsc.mask_area = &blend_area;
  96:lvgl/src/draw/sw/lv_draw_sw_img.c ****             blend_dsc.mask_res = LV_DRAW_MASK_RES_CHANGED;
  97:lvgl/src/draw/sw/lv_draw_sw_img.c ****             blend_dsc.src_buf = src_buf_rgb;
  98:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
  99:lvgl/src/draw/sw/lv_draw_sw_img.c ****             const uint8_t * src_buf_tmp = src_buf;
 100:lvgl/src/draw/sw/lv_draw_sw_img.c ****             src_buf_tmp += src_stride * (draw_area.y1 - coords->y1) * px_size_byte;
 101:lvgl/src/draw/sw/lv_draw_sw_img.c ****             src_buf_tmp += (draw_area.x1 - coords->x1) * px_size_byte;
 102:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 103:lvgl/src/draw/sw/lv_draw_sw_img.c ****             int32_t x;
 104:lvgl/src/draw/sw/lv_draw_sw_img.c ****             int32_t y;
 105:lvgl/src/draw/sw/lv_draw_sw_img.c ****             for(y = 0; y < draw_area_h; y++) {
 106:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 map_px = src_buf_tmp;
 107:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 for(x = 0; x < draw_area_w; x++, map_px += px_size_byte, px_i++) {
 108:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     lv_opa_t px_opa = map_px[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 109:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     mask_buf[px_i] = px_opa;
 110:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     if(px_opa) {
 111:lvgl/src/draw/sw/lv_draw_sw_img.c **** #if LV_COLOR_DEPTH == 8 || LV_COLOR_DEPTH == 1
 112:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         src_buf_rgb[px_i].full = map_px[0];
 113:lvgl/src/draw/sw/lv_draw_sw_img.c **** #elif LV_COLOR_DEPTH == 16
 114:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         src_buf_rgb[px_i].full = map_px[0] + (map_px[1] << 8);
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 22


 115:lvgl/src/draw/sw/lv_draw_sw_img.c **** #elif LV_COLOR_DEPTH == 32
 116:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         src_buf_rgb[px_i].full = *((uint32_t *)map_px);
 117:lvgl/src/draw/sw/lv_draw_sw_img.c **** #endif
 118:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     }
 119:lvgl/src/draw/sw/lv_draw_sw_img.c **** #if LV_COLOR_DEPTH == 32
 120:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     src_buf_rgb[px_i].ch.alpha = 0xFF;
 121:lvgl/src/draw/sw/lv_draw_sw_img.c **** #endif
 122:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 }
 123:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 124:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 src_buf_tmp += src_stride * px_size_byte;
 125:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 if(px_i + draw_area_w <= mask_buf_size) {
 126:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     blend_area.y2 ++;
 127:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 }
 128:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 else {
 129:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     lv_draw_sw_blend(draw_ctx, &blend_dsc);
 130:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 131:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     blend_area.y1 = blend_area.y2 + 1;
 132:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     blend_area.y2 = blend_area.y1;
 133:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 134:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     px_i = 0;
 135:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 }
 136:lvgl/src/draw/sw/lv_draw_sw_img.c ****             }
 137:lvgl/src/draw/sw/lv_draw_sw_img.c ****             /*Flush the last part*/
 138:lvgl/src/draw/sw/lv_draw_sw_img.c ****             if(blend_area.y1 != blend_area.y2) {
 139:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 blend_area.y2--;
 140:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 lv_draw_sw_blend(draw_ctx, &blend_dsc);
 141:lvgl/src/draw/sw/lv_draw_sw_img.c ****             }
 142:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 143:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_mem_buf_release(mask_buf);
 144:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_mem_buf_release(src_buf_rgb);
 145:lvgl/src/draw/sw/lv_draw_sw_img.c ****         }
 146:lvgl/src/draw/sw/lv_draw_sw_img.c ****         /*Most complicated case: transform or other mask or chroma keyed*/
 147:lvgl/src/draw/sw/lv_draw_sw_img.c ****         else {
 148:lvgl/src/draw/sw/lv_draw_sw_img.c ****             /*Build the image and a mask line-by-line*/
 149:lvgl/src/draw/sw/lv_draw_sw_img.c ****             uint32_t hor_res = (uint32_t) lv_disp_get_hor_res(_lv_refr_get_disp_refreshing());
 323              		.loc 1 149 13 is_stmt 1 view .LVU106
 324              		.loc 1 149 43 is_stmt 0 view .LVU107
 325 00dc FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 326              	.LVL22:
 327              		.loc 1 149 43 discriminator 1 view .LVU108
 328 00e0 FFF7FEFF 		bl	lv_disp_get_hor_res
 329              	.LVL23:
 330 00e4 0446     		mov	r4, r0
 331              	.LVL24:
 332              		.loc 1 149 22 discriminator 2 view .LVU109
 333 00e6 0A90     		str	r0, [sp, #40]
 334              	.LVL25:
 150:lvgl/src/draw/sw/lv_draw_sw_img.c ****             uint32_t mask_buf_size = lv_area_get_size(&draw_area) > hor_res ? hor_res : lv_area_get
 335              		.loc 1 150 13 is_stmt 1 view .LVU110
 336              		.loc 1 150 38 is_stmt 0 view .LVU111
 337 00e8 2CA8     		add	r0, sp, #176
 338              	.LVL26:
 339              		.loc 1 150 38 view .LVU112
 340 00ea FFF7FEFF 		bl	lv_area_get_size
 341              	.LVL27:
 342              		.loc 1 150 87 discriminator 1 view .LVU113
 343 00ee A042     		cmp	r0, r4
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 23


 344 00f0 40F2F880 		bls	.L51
 345              	.L17:
 346              	.LVL28:
 151:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_color_t * src_buf_rgb = lv_mem_buf_get(mask_buf_size * sizeof(lv_color_t));
 347              		.loc 1 151 13 is_stmt 1 view .LVU114
 348              		.loc 1 151 40 is_stmt 0 view .LVU115
 349 00f4 0A9C     		ldr	r4, [sp, #40]
 350              	.LVL29:
 351              		.loc 1 151 40 view .LVU116
 352 00f6 6000     		lsls	r0, r4, #1
 353 00f8 FFF7FEFF 		bl	lv_mem_buf_get
 354              	.LVL30:
 355 00fc 0546     		mov	r5, r0
 356              	.LVL31:
 357              		.loc 1 151 40 view .LVU117
 358 00fe 0290     		str	r0, [sp, #8]
 359              	.LVL32:
 152:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_opa_t * mask_buf = lv_mem_buf_get(mask_buf_size);
 360              		.loc 1 152 13 is_stmt 1 view .LVU118
 361              		.loc 1 152 35 is_stmt 0 view .LVU119
 362 0100 2046     		mov	r0, r4
 363              	.LVL33:
 364              		.loc 1 152 35 view .LVU120
 365 0102 FFF7FEFF 		bl	lv_mem_buf_get
 366              	.LVL34:
 367 0106 8146     		mov	r9, r0
 368              	.LVL35:
 153:lvgl/src/draw/sw/lv_draw_sw_img.c ****             blend_dsc.mask_buf = mask_buf;
 369              		.loc 1 153 13 is_stmt 1 view .LVU121
 370              		.loc 1 153 32 is_stmt 0 view .LVU122
 371 0108 2890     		str	r0, [sp, #160]
 154:lvgl/src/draw/sw/lv_draw_sw_img.c ****             blend_dsc.mask_area = &blend_area;
 372              		.loc 1 154 13 is_stmt 1 view .LVU123
 373              		.loc 1 154 33 is_stmt 0 view .LVU124
 374 010a 10AB     		add	r3, sp, #64
 375 010c 2A93     		str	r3, [sp, #168]
 155:lvgl/src/draw/sw/lv_draw_sw_img.c ****             blend_dsc.mask_res = LV_DRAW_MASK_RES_CHANGED;
 376              		.loc 1 155 13 is_stmt 1 view .LVU125
 377              		.loc 1 155 32 is_stmt 0 view .LVU126
 378 010e 0223     		movs	r3, #2
 379 0110 8DF8A430 		strb	r3, [sp, #164]
 156:lvgl/src/draw/sw/lv_draw_sw_img.c ****             blend_dsc.src_buf = src_buf_rgb;
 380              		.loc 1 156 13 is_stmt 1 view .LVU127
 381              		.loc 1 156 31 is_stmt 0 view .LVU128
 382 0114 2695     		str	r5, [sp, #152]
 157:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 158:lvgl/src/draw/sw/lv_draw_sw_img.c ****             const uint8_t * src_buf_tmp = NULL;
 383              		.loc 1 158 13 is_stmt 1 view .LVU129
 384              	.LVL36:
 159:lvgl/src/draw/sw/lv_draw_sw_img.c **** #if LV_DRAW_COMPLEX
 160:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_img_transform_dsc_t trans_dsc;
 385              		.loc 1 160 13 view .LVU130
 161:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_memset_00(&trans_dsc, sizeof(lv_img_transform_dsc_t));
 386              		.loc 1 161 13 view .LVU131
 387 0116 4C21     		movs	r1, #76
 388 0118 12A8     		add	r0, sp, #72
 389              	.LVL37:
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 24


 390              		.loc 1 161 13 is_stmt 0 view .LVU132
 391 011a FFF7FEFF 		bl	lv_memset_00
 392              	.LVL38:
 162:lvgl/src/draw/sw/lv_draw_sw_img.c ****             if(transform) {
 393              		.loc 1 162 13 is_stmt 1 view .LVU133
 394              		.loc 1 162 15 is_stmt 0 view .LVU134
 395 011e BBF1807F 		cmp	fp, #16777216
 396 0122 40F0E480 		bne	.L52
 163:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.angle = draw_dsc->angle;
 164:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.zoom = draw_dsc->zoom;
 165:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.src = src_buf;
 166:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.src_w = src_stride;
 167:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.src_h = lv_area_get_height(coords);
 168:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.cf = cf;
 169:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.pivot_x = draw_dsc->pivot.x;
 170:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.pivot_y = draw_dsc->pivot.y;
 171:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.color = draw_dsc->recolor;
 172:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.antialias = draw_dsc->antialias;
 173:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 174:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 _lv_img_buf_transform_init(&trans_dsc);
 175:lvgl/src/draw/sw/lv_draw_sw_img.c ****             }
 176:lvgl/src/draw/sw/lv_draw_sw_img.c ****             else {
 177:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 src_buf_tmp = src_buf;
 397              		.loc 1 177 17 is_stmt 1 view .LVU135
 398              	.LVL39:
 178:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 src_buf_tmp += src_stride * (draw_area.y1 - coords->y1) * px_size_byte;
 399              		.loc 1 178 17 view .LVU136
 400              		.loc 1 178 55 is_stmt 0 view .LVU137
 401 0126 BDF9B220 		ldrsh	r2, [sp, #178]
 402              		.loc 1 178 67 view .LVU138
 403 012a 0999     		ldr	r1, [sp, #36]
 404 012c B1F90230 		ldrsh	r3, [r1, #2]
 405              		.loc 1 178 59 view .LVU139
 406 0130 D21A     		subs	r2, r2, r3
 407              		.loc 1 178 43 view .LVU140
 408 0132 0C9B     		ldr	r3, [sp, #48]
 409 0134 03FB02F2 		mul	r2, r3, r2
 410              	.LVL40:
 179:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 src_buf_tmp += (draw_area.x1 - coords->x1) * px_size_byte;
 411              		.loc 1 179 17 is_stmt 1 view .LVU141
 412              		.loc 1 179 42 is_stmt 0 view .LVU142
 413 0138 BDF9B030 		ldrsh	r3, [sp, #176]
 414              		.loc 1 179 54 view .LVU143
 415 013c B1F90010 		ldrsh	r1, [r1]
 416              		.loc 1 179 46 view .LVU144
 417 0140 5B1A     		subs	r3, r3, r1
 418              		.loc 1 179 60 view .LVU145
 419 0142 03FB08F3 		mul	r3, r3, r8
 420              		.loc 1 179 29 view .LVU146
 421 0146 08FB0233 		mla	r3, r8, r2, r3
 422 014a F318     		adds	r3, r6, r3
 423 014c 0693     		str	r3, [sp, #24]
 424              	.LVL41:
 425              	.L19:
 180:lvgl/src/draw/sw/lv_draw_sw_img.c ****             }
 181:lvgl/src/draw/sw/lv_draw_sw_img.c **** #endif
 182:lvgl/src/draw/sw/lv_draw_sw_img.c ****             uint16_t recolor_premult[3] = {0};
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 25


 426              		.loc 1 182 13 is_stmt 1 view .LVU147
 427              		.loc 1 182 22 is_stmt 0 view .LVU148
 428 014e 0023     		movs	r3, #0
 429 0150 0E93     		str	r3, [sp, #56]
 430 0152 ADF83C30 		strh	r3, [sp, #60]	@ movhi
 183:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_opa_t recolor_opa_inv = 255 - draw_dsc->recolor_opa;
 431              		.loc 1 183 13 is_stmt 1 view .LVU149
 432              		.loc 1 183 54 is_stmt 0 view .LVU150
 433 0156 0199     		ldr	r1, [sp, #4]
 434 0158 8B7A     		ldrb	r3, [r1, #10]	@ zero_extendqisi2
 435              		.loc 1 183 22 view .LVU151
 436 015a DA43     		mvns	r2, r3
 437 015c D2B2     		uxtb	r2, r2
 438 015e 0592     		str	r2, [sp, #20]
 439              	.LVL42:
 184:lvgl/src/draw/sw/lv_draw_sw_img.c ****             if(draw_dsc->recolor_opa != 0) {
 440              		.loc 1 184 13 is_stmt 1 view .LVU152
 441              		.loc 1 184 15 is_stmt 0 view .LVU153
 442 0160 93B1     		cbz	r3, .L20
 185:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 lv_color_premult(draw_dsc->recolor, draw_dsc->recolor_opa, recolor_premult);
 443              		.loc 1 185 17 is_stmt 1 view .LVU154
 444 0162 0A89     		ldrh	r2, [r1, #8]
 445              	.LVL43:
 446              	.LBB36:
 447              	.LBI36:
 472:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 448              		.loc 2 472 42 view .LVU155
 449              	.LBB37:
 475:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 450              		.loc 2 475 5 view .LVU156
 475:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 451              		.loc 2 475 24 is_stmt 0 view .LVU157
 452 0164 C2F3C421 		ubfx	r1, r2, #11, #5
 475:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 453              		.loc 2 475 42 view .LVU158
 454 0168 03FB01F1 		mul	r1, r3, r1
 475:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 455              		.loc 2 475 12 view .LVU159
 456 016c ADF83810 		strh	r1, [sp, #56]	@ movhi
 476:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 457              		.loc 2 476 5 is_stmt 1 view .LVU160
 476:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 458              		.loc 2 476 24 is_stmt 0 view .LVU161
 459 0170 C2F34511 		ubfx	r1, r2, #5, #6
 476:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 460              		.loc 2 476 42 view .LVU162
 461 0174 03FB01F1 		mul	r1, r3, r1
 476:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 462              		.loc 2 476 12 view .LVU163
 463 0178 ADF83A10 		strh	r1, [sp, #58]	@ movhi
 477:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 464              		.loc 2 477 5 is_stmt 1 view .LVU164
 477:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 465              		.loc 2 477 24 is_stmt 0 view .LVU165
 466 017c 02F01F02 		and	r2, r2, #31
 467              	.LVL44:
 477:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 26


 468              		.loc 2 477 42 view .LVU166
 469 0180 02FB03F3 		mul	r3, r2, r3
 470              	.LVL45:
 477:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 471              		.loc 2 477 12 view .LVU167
 472 0184 ADF83C30 		strh	r3, [sp, #60]	@ movhi
 473              	.LVL46:
 474              	.L20:
 477:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 475              		.loc 2 477 12 view .LVU168
 476              	.LBE37:
 477              	.LBE36:
 186:lvgl/src/draw/sw/lv_draw_sw_img.c ****             }
 187:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 188:lvgl/src/draw/sw/lv_draw_sw_img.c ****             blend_dsc.mask_res = (cf != LV_IMG_CF_TRUE_COLOR || draw_dsc->angle ||
 478              		.loc 1 188 13 is_stmt 1 view .LVU169
 479              		.loc 1 188 32 is_stmt 0 view .LVU170
 480 0188 BAF1040F 		cmp	r10, #4
 481 018c 00F0DB80 		beq	.L53
 482              		.loc 1 188 32 discriminator 3 view .LVU171
 483 0190 0223     		movs	r3, #2
 484              	.L21:
 485              		.loc 1 188 32 discriminator 6 view .LVU172
 486 0192 8DF8A430 		strb	r3, [sp, #164]
 189:lvgl/src/draw/sw/lv_draw_sw_img.c ****                                   draw_dsc->zoom != LV_IMG_ZOOM_NONE) ? LV_DRAW_MASK_RES_CHANGED : 
 190:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 191:lvgl/src/draw/sw/lv_draw_sw_img.c ****             /*Prepare the `mask_buf`if there are other masks*/
 192:lvgl/src/draw/sw/lv_draw_sw_img.c ****             if(mask_any) {
 487              		.loc 1 192 13 is_stmt 1 view .LVU173
 488              		.loc 1 192 15 is_stmt 0 view .LVU174
 489 0196 089B     		ldr	r3, [sp, #32]
 490 0198 002B     		cmp	r3, #0
 491 019a 40F0DD80 		bne	.L54
 492              	.L22:
 193:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 lv_memset_ff(mask_buf, mask_buf_size);
 194:lvgl/src/draw/sw/lv_draw_sw_img.c ****             }
 195:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 196:lvgl/src/draw/sw/lv_draw_sw_img.c ****             int32_t x;
 493              		.loc 1 196 13 is_stmt 1 view .LVU175
 197:lvgl/src/draw/sw/lv_draw_sw_img.c ****             int32_t y;
 494              		.loc 1 197 13 view .LVU176
 198:lvgl/src/draw/sw/lv_draw_sw_img.c **** #if LV_DRAW_COMPLEX
 199:lvgl/src/draw/sw/lv_draw_sw_img.c ****             int32_t rot_y = blend_area.y1 - coords->y1;
 495              		.loc 1 199 13 view .LVU177
 496              		.loc 1 199 39 is_stmt 0 view .LVU178
 497 019e BDF94220 		ldrsh	r2, [sp, #66]
 498              		.loc 1 199 51 view .LVU179
 499 01a2 099B     		ldr	r3, [sp, #36]
 500 01a4 B3F90230 		ldrsh	r3, [r3, #2]
 501              		.loc 1 199 21 view .LVU180
 502 01a8 D31A     		subs	r3, r2, r3
 503 01aa 0493     		str	r3, [sp, #16]
 504              	.LVL47:
 200:lvgl/src/draw/sw/lv_draw_sw_img.c **** #endif
 201:lvgl/src/draw/sw/lv_draw_sw_img.c ****             for(y = 0; y < draw_area_h; y++) {
 505              		.loc 1 201 13 is_stmt 1 view .LVU181
 506              		.loc 1 201 19 is_stmt 0 view .LVU182
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 27


 507 01ac 0023     		movs	r3, #0
 508              	.LVL48:
 509              		.loc 1 201 19 view .LVU183
 510 01ae 0093     		str	r3, [sp]
 511              	.LBE35:
  73:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 512              		.loc 1 73 18 view .LVU184
 513 01b0 0793     		str	r3, [sp, #28]
 514              	.LBB46:
 515              		.loc 1 201 13 view .LVU185
 516 01b2 30E1     		b	.L23
 517              	.LVL49:
 518              	.L48:
 519              		.loc 1 201 13 view .LVU186
 520              	.LBE46:
 521              	.LBE26:
  56:lvgl/src/draw/sw/lv_draw_sw_img.c ****        cf == LV_IMG_CF_TRUE_COLOR && draw_dsc->recolor_opa == LV_OPA_TRANSP) {
 522              		.loc 1 56 80 discriminator 2 view .LVU187
 523 01b4 BAF1040F 		cmp	r10, #4
 524 01b8 7FF454AF 		bne	.L4
  57:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.blend_area = coords;
 525              		.loc 1 57 46 view .LVU188
 526 01bc 019B     		ldr	r3, [sp, #4]
 527 01be 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
  57:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.blend_area = coords;
 528              		.loc 1 57 35 view .LVU189
 529 01c0 002B     		cmp	r3, #0
 530 01c2 7FF44FAF 		bne	.L4
  58:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.src_buf = (const lv_color_t *)src_buf;
 531              		.loc 1 58 9 is_stmt 1 view .LVU190
  58:lvgl/src/draw/sw/lv_draw_sw_img.c ****         blend_dsc.src_buf = (const lv_color_t *)src_buf;
 532              		.loc 1 58 30 is_stmt 0 view .LVU191
 533 01c6 099B     		ldr	r3, [sp, #36]
 534 01c8 2593     		str	r3, [sp, #148]
  59:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_draw_sw_blend(draw_ctx, &blend_dsc);
 535              		.loc 1 59 9 is_stmt 1 view .LVU192
  59:lvgl/src/draw/sw/lv_draw_sw_img.c ****         lv_draw_sw_blend(draw_ctx, &blend_dsc);
 536              		.loc 1 59 27 is_stmt 0 view .LVU193
 537 01ca 2696     		str	r6, [sp, #152]
  60:lvgl/src/draw/sw/lv_draw_sw_img.c ****     }
 538              		.loc 1 60 9 is_stmt 1 view .LVU194
 539 01cc 25A9     		add	r1, sp, #148
 540 01ce 0D98     		ldr	r0, [sp, #52]
 541 01d0 FFF7FEFF 		bl	lv_draw_sw_blend
 542              	.LVL50:
 543 01d4 7CE1     		b	.L3
 544              	.L49:
 545              	.LBB53:
  66:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 546              		.loc 1 66 17 is_stmt 0 discriminator 1 view .LVU195
 547 01d6 4FF00308 		mov	r8, #3
 548 01da 49E7     		b	.L6
 549              	.LVL51:
 550              	.L50:
  89:lvgl/src/draw/sw/lv_draw_sw_img.c ****             uint32_t hor_res = (uint32_t) lv_disp_get_hor_res(_lv_refr_get_disp_refreshing());
 551              		.loc 1 89 83 discriminator 2 view .LVU196
 552 01dc 019B     		ldr	r3, [sp, #4]
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 28


 553 01de 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
  89:lvgl/src/draw/sw/lv_draw_sw_img.c ****             uint32_t hor_res = (uint32_t) lv_disp_get_hor_res(_lv_refr_get_disp_refreshing());
 554              		.loc 1 89 72 discriminator 2 view .LVU197
 555 01e0 002B     		cmp	r3, #0
 556 01e2 7FF47BAF 		bne	.L7
 557              	.LBB47:
  90:lvgl/src/draw/sw/lv_draw_sw_img.c ****             uint32_t mask_buf_size = lv_area_get_size(&draw_area) > (uint32_t) hor_res ? hor_res : 
 558              		.loc 1 90 13 is_stmt 1 view .LVU198
  90:lvgl/src/draw/sw/lv_draw_sw_img.c ****             uint32_t mask_buf_size = lv_area_get_size(&draw_area) > (uint32_t) hor_res ? hor_res : 
 559              		.loc 1 90 43 is_stmt 0 view .LVU199
 560 01e6 FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 561              	.LVL52:
  90:lvgl/src/draw/sw/lv_draw_sw_img.c ****             uint32_t mask_buf_size = lv_area_get_size(&draw_area) > (uint32_t) hor_res ? hor_res : 
 562              		.loc 1 90 43 discriminator 1 view .LVU200
 563 01ea FFF7FEFF 		bl	lv_disp_get_hor_res
 564              	.LVL53:
 565 01ee 0446     		mov	r4, r0
 566              	.LVL54:
  90:lvgl/src/draw/sw/lv_draw_sw_img.c ****             uint32_t mask_buf_size = lv_area_get_size(&draw_area) > (uint32_t) hor_res ? hor_res : 
 567              		.loc 1 90 22 discriminator 2 view .LVU201
 568 01f0 8146     		mov	r9, r0
 569              	.LVL55:
  91:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_color_t * src_buf_rgb = lv_mem_buf_get(mask_buf_size * sizeof(lv_color_t));
 570              		.loc 1 91 13 is_stmt 1 view .LVU202
  91:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_color_t * src_buf_rgb = lv_mem_buf_get(mask_buf_size * sizeof(lv_color_t));
 571              		.loc 1 91 38 is_stmt 0 view .LVU203
 572 01f2 2CA8     		add	r0, sp, #176
 573              	.LVL56:
  91:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_color_t * src_buf_rgb = lv_mem_buf_get(mask_buf_size * sizeof(lv_color_t));
 574              		.loc 1 91 38 view .LVU204
 575 01f4 FFF7FEFF 		bl	lv_area_get_size
 576              	.LVL57:
  91:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_color_t * src_buf_rgb = lv_mem_buf_get(mask_buf_size * sizeof(lv_color_t));
 577              		.loc 1 91 98 discriminator 1 view .LVU205
 578 01f8 A042     		cmp	r0, r4
 579 01fa 27D9     		bls	.L55
 580              	.L8:
 581              	.LVL58:
  92:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_opa_t * mask_buf = lv_mem_buf_get(mask_buf_size);
 582              		.loc 1 92 13 is_stmt 1 view .LVU206
  92:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_opa_t * mask_buf = lv_mem_buf_get(mask_buf_size);
 583              		.loc 1 92 40 is_stmt 0 view .LVU207
 584 01fc 4FEA4900 		lsl	r0, r9, #1
 585 0200 FFF7FEFF 		bl	lv_mem_buf_get
 586              	.LVL59:
 587 0204 0546     		mov	r5, r0
 588              	.LVL60:
  93:lvgl/src/draw/sw/lv_draw_sw_img.c ****             blend_dsc.mask_buf = mask_buf;
 589              		.loc 1 93 13 is_stmt 1 view .LVU208
  93:lvgl/src/draw/sw/lv_draw_sw_img.c ****             blend_dsc.mask_buf = mask_buf;
 590              		.loc 1 93 35 is_stmt 0 view .LVU209
 591 0206 4846     		mov	r0, r9
 592              	.LVL61:
  93:lvgl/src/draw/sw/lv_draw_sw_img.c ****             blend_dsc.mask_buf = mask_buf;
 593              		.loc 1 93 35 view .LVU210
 594 0208 FFF7FEFF 		bl	lv_mem_buf_get
 595              	.LVL62:
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 29


 596 020c 0446     		mov	r4, r0
 597              	.LVL63:
  94:lvgl/src/draw/sw/lv_draw_sw_img.c ****             blend_dsc.mask_area = &blend_area;
 598              		.loc 1 94 13 is_stmt 1 view .LVU211
  94:lvgl/src/draw/sw/lv_draw_sw_img.c ****             blend_dsc.mask_area = &blend_area;
 599              		.loc 1 94 32 is_stmt 0 view .LVU212
 600 020e 2890     		str	r0, [sp, #160]
  95:lvgl/src/draw/sw/lv_draw_sw_img.c ****             blend_dsc.mask_res = LV_DRAW_MASK_RES_CHANGED;
 601              		.loc 1 95 13 is_stmt 1 view .LVU213
  95:lvgl/src/draw/sw/lv_draw_sw_img.c ****             blend_dsc.mask_res = LV_DRAW_MASK_RES_CHANGED;
 602              		.loc 1 95 33 is_stmt 0 view .LVU214
 603 0210 10AB     		add	r3, sp, #64
 604 0212 2A93     		str	r3, [sp, #168]
  96:lvgl/src/draw/sw/lv_draw_sw_img.c ****             blend_dsc.src_buf = src_buf_rgb;
 605              		.loc 1 96 13 is_stmt 1 view .LVU215
  96:lvgl/src/draw/sw/lv_draw_sw_img.c ****             blend_dsc.src_buf = src_buf_rgb;
 606              		.loc 1 96 32 is_stmt 0 view .LVU216
 607 0214 0223     		movs	r3, #2
 608 0216 8DF8A430 		strb	r3, [sp, #164]
  97:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 609              		.loc 1 97 13 is_stmt 1 view .LVU217
  97:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 610              		.loc 1 97 31 is_stmt 0 view .LVU218
 611 021a 2695     		str	r5, [sp, #152]
  99:lvgl/src/draw/sw/lv_draw_sw_img.c ****             src_buf_tmp += src_stride * (draw_area.y1 - coords->y1) * px_size_byte;
 612              		.loc 1 99 13 is_stmt 1 view .LVU219
 613              	.LVL64:
 100:lvgl/src/draw/sw/lv_draw_sw_img.c ****             src_buf_tmp += (draw_area.x1 - coords->x1) * px_size_byte;
 614              		.loc 1 100 13 view .LVU220
 100:lvgl/src/draw/sw/lv_draw_sw_img.c ****             src_buf_tmp += (draw_area.x1 - coords->x1) * px_size_byte;
 615              		.loc 1 100 51 is_stmt 0 view .LVU221
 616 021c BDF9B220 		ldrsh	r2, [sp, #178]
 100:lvgl/src/draw/sw/lv_draw_sw_img.c ****             src_buf_tmp += (draw_area.x1 - coords->x1) * px_size_byte;
 617              		.loc 1 100 63 view .LVU222
 618 0220 0999     		ldr	r1, [sp, #36]
 619 0222 B1F90230 		ldrsh	r3, [r1, #2]
 100:lvgl/src/draw/sw/lv_draw_sw_img.c ****             src_buf_tmp += (draw_area.x1 - coords->x1) * px_size_byte;
 620              		.loc 1 100 55 view .LVU223
 621 0226 D21A     		subs	r2, r2, r3
 100:lvgl/src/draw/sw/lv_draw_sw_img.c ****             src_buf_tmp += (draw_area.x1 - coords->x1) * px_size_byte;
 622              		.loc 1 100 39 view .LVU224
 623 0228 0C9B     		ldr	r3, [sp, #48]
 624 022a 03FB02F2 		mul	r2, r3, r2
 100:lvgl/src/draw/sw/lv_draw_sw_img.c ****             src_buf_tmp += (draw_area.x1 - coords->x1) * px_size_byte;
 625              		.loc 1 100 69 view .LVU225
 626 022e C246     		mov	r10, r8
 627              	.LVL65:
 101:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 628              		.loc 1 101 13 is_stmt 1 view .LVU226
 101:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 629              		.loc 1 101 38 is_stmt 0 view .LVU227
 630 0230 BDF9B030 		ldrsh	r3, [sp, #176]
 101:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 631              		.loc 1 101 50 view .LVU228
 632 0234 B1F90010 		ldrsh	r1, [r1]
 101:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 633              		.loc 1 101 42 view .LVU229
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 30


 634 0238 5B1A     		subs	r3, r3, r1
 101:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 635              		.loc 1 101 56 view .LVU230
 636 023a 03FB08F3 		mul	r3, r3, r8
 101:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 637              		.loc 1 101 25 view .LVU231
 638 023e 08FB0233 		mla	r3, r8, r2, r3
 639 0242 1E44     		add	r6, r6, r3
 640              	.LVL66:
 103:lvgl/src/draw/sw/lv_draw_sw_img.c ****             int32_t y;
 641              		.loc 1 103 13 is_stmt 1 view .LVU232
 104:lvgl/src/draw/sw/lv_draw_sw_img.c ****             for(y = 0; y < draw_area_h; y++) {
 642              		.loc 1 104 13 view .LVU233
 105:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 map_px = src_buf_tmp;
 643              		.loc 1 105 13 view .LVU234
 105:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 map_px = src_buf_tmp;
 644              		.loc 1 105 19 is_stmt 0 view .LVU235
 645 0244 4FF0000B 		mov	fp, #0
 646              	.LVL67:
 105:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 map_px = src_buf_tmp;
 647              		.loc 1 105 19 view .LVU236
 648              	.LBE47:
  73:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 649              		.loc 1 73 18 view .LVU237
 650 0248 5A46     		mov	r2, fp
 651              	.LBB49:
 105:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 map_px = src_buf_tmp;
 652              		.loc 1 105 13 view .LVU238
 653 024a 22E0     		b	.L9
 654              	.LVL68:
 655              	.L55:
  91:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_color_t * src_buf_rgb = lv_mem_buf_get(mask_buf_size * sizeof(lv_color_t));
 656              		.loc 1 91 100 discriminator 1 view .LVU239
 657 024c 2CA8     		add	r0, sp, #176
 658 024e FFF7FEFF 		bl	lv_area_get_size
 659              	.LVL69:
 660 0252 8146     		mov	r9, r0
 661 0254 D2E7     		b	.L8
 662              	.LVL70:
 663              	.L10:
 107:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     lv_opa_t px_opa = map_px[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 664              		.loc 1 107 72 is_stmt 1 discriminator 2 view .LVU240
 107:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     lv_opa_t px_opa = map_px[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 665              		.loc 1 107 46 is_stmt 0 discriminator 2 view .LVU241
 666 0256 0131     		adds	r1, r1, #1
 667              	.LVL71:
 107:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     lv_opa_t px_opa = map_px[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 668              		.loc 1 107 57 discriminator 2 view .LVU242
 669 0258 4344     		add	r3, r3, r8
 670              	.LVL72:
 107:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     lv_opa_t px_opa = map_px[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 671              		.loc 1 107 78 discriminator 2 view .LVU243
 672 025a 0132     		adds	r2, r2, #1
 673              	.LVL73:
 674              	.L14:
 107:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     lv_opa_t px_opa = map_px[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 675              		.loc 1 107 30 is_stmt 1 discriminator 1 view .LVU244
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 31


 676 025c 8F42     		cmp	r7, r1
 677 025e 0BDD     		ble	.L56
 678              	.LBB48:
 108:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     mask_buf[px_i] = px_opa;
 679              		.loc 1 108 21 view .LVU245
 108:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     mask_buf[px_i] = px_opa;
 680              		.loc 1 108 30 is_stmt 0 view .LVU246
 681 0260 9878     		ldrb	r0, [r3, #2]	@ zero_extendqisi2
 682              	.LVL74:
 109:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     if(px_opa) {
 683              		.loc 1 109 21 is_stmt 1 view .LVU247
 109:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     if(px_opa) {
 684              		.loc 1 109 36 is_stmt 0 view .LVU248
 685 0262 A054     		strb	r0, [r4, r2]
 110:lvgl/src/draw/sw/lv_draw_sw_img.c **** #if LV_COLOR_DEPTH == 8 || LV_COLOR_DEPTH == 1
 686              		.loc 1 110 21 is_stmt 1 view .LVU249
 110:lvgl/src/draw/sw/lv_draw_sw_img.c **** #if LV_COLOR_DEPTH == 8 || LV_COLOR_DEPTH == 1
 687              		.loc 1 110 23 is_stmt 0 view .LVU250
 688 0264 0028     		cmp	r0, #0
 689 0266 F6D0     		beq	.L10
 114:lvgl/src/draw/sw/lv_draw_sw_img.c **** #elif LV_COLOR_DEPTH == 32
 690              		.loc 1 114 25 is_stmt 1 view .LVU251
 114:lvgl/src/draw/sw/lv_draw_sw_img.c **** #elif LV_COLOR_DEPTH == 32
 691              		.loc 1 114 56 is_stmt 0 view .LVU252
 692 0268 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 693              	.LVL75:
 114:lvgl/src/draw/sw/lv_draw_sw_img.c **** #elif LV_COLOR_DEPTH == 32
 694              		.loc 1 114 69 view .LVU253
 695 026a 93F801C0 		ldrb	ip, [r3, #1]	@ zero_extendqisi2
 114:lvgl/src/draw/sw/lv_draw_sw_img.c **** #elif LV_COLOR_DEPTH == 32
 696              		.loc 1 114 60 view .LVU254
 697 026e 00EB0C20 		add	r0, r0, ip, lsl #8
 114:lvgl/src/draw/sw/lv_draw_sw_img.c **** #elif LV_COLOR_DEPTH == 32
 698              		.loc 1 114 48 view .LVU255
 699 0272 25F81200 		strh	r0, [r5, r2, lsl #1]	@ movhi
 700              	.LVL76:
 114:lvgl/src/draw/sw/lv_draw_sw_img.c **** #elif LV_COLOR_DEPTH == 32
 701              		.loc 1 114 48 view .LVU256
 702 0276 EEE7     		b	.L10
 703              	.LVL77:
 704              	.L56:
 114:lvgl/src/draw/sw/lv_draw_sw_img.c **** #elif LV_COLOR_DEPTH == 32
 705              		.loc 1 114 48 view .LVU257
 706              	.LBE48:
 124:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 if(px_i + draw_area_w <= mask_buf_size) {
 707              		.loc 1 124 17 is_stmt 1 view .LVU258
 124:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 if(px_i + draw_area_w <= mask_buf_size) {
 708              		.loc 1 124 29 is_stmt 0 view .LVU259
 709 0278 0C9B     		ldr	r3, [sp, #48]
 710              	.LVL78:
 124:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 if(px_i + draw_area_w <= mask_buf_size) {
 711              		.loc 1 124 29 view .LVU260
 712 027a 03FB0A66 		mla	r6, r3, r10, r6
 713              	.LVL79:
 125:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     blend_area.y2 ++;
 714              		.loc 1 125 17 is_stmt 1 view .LVU261
 125:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     blend_area.y2 ++;
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 32


 715              		.loc 1 125 25 is_stmt 0 view .LVU262
 716 027e BB18     		adds	r3, r7, r2
 125:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     blend_area.y2 ++;
 717              		.loc 1 125 19 view .LVU263
 718 0280 4B45     		cmp	r3, r9
 719 0282 0CD8     		bhi	.L12
 126:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 }
 720              		.loc 1 126 21 is_stmt 1 view .LVU264
 126:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 }
 721              		.loc 1 126 31 is_stmt 0 view .LVU265
 722 0284 BDF94630 		ldrsh	r3, [sp, #70]
 126:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 }
 723              		.loc 1 126 35 view .LVU266
 724 0288 0133     		adds	r3, r3, #1
 725 028a ADF84630 		strh	r3, [sp, #70]	@ movhi
 726              	.LVL80:
 727              	.L13:
 105:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 map_px = src_buf_tmp;
 728              		.loc 1 105 42 is_stmt 1 discriminator 2 view .LVU267
 729 028e 0BF1010B 		add	fp, fp, #1
 730              	.LVL81:
 731              	.L9:
 105:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 map_px = src_buf_tmp;
 732              		.loc 1 105 26 discriminator 1 view .LVU268
 733 0292 0B9B     		ldr	r3, [sp, #44]
 734 0294 5B45     		cmp	r3, fp
 735 0296 10DD     		ble	.L57
 106:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 for(x = 0; x < draw_area_w; x++, map_px += px_size_byte, px_i++) {
 736              		.loc 1 106 24 is_stmt 0 view .LVU269
 737 0298 3346     		mov	r3, r6
 107:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     lv_opa_t px_opa = map_px[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 738              		.loc 1 107 23 view .LVU270
 739 029a 0021     		movs	r1, #0
 740 029c DEE7     		b	.L14
 741              	.LVL82:
 742              	.L12:
 129:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 743              		.loc 1 129 21 is_stmt 1 view .LVU271
 744 029e 25A9     		add	r1, sp, #148
 745              	.LVL83:
 129:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 746              		.loc 1 129 21 is_stmt 0 view .LVU272
 747 02a0 0D98     		ldr	r0, [sp, #52]
 748 02a2 FFF7FEFF 		bl	lv_draw_sw_blend
 749              	.LVL84:
 131:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     blend_area.y2 = blend_area.y1;
 750              		.loc 1 131 21 is_stmt 1 view .LVU273
 131:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     blend_area.y2 = blend_area.y1;
 751              		.loc 1 131 47 is_stmt 0 view .LVU274
 752 02a6 BDF84630 		ldrh	r3, [sp, #70]
 131:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     blend_area.y2 = blend_area.y1;
 753              		.loc 1 131 51 view .LVU275
 754 02aa 0133     		adds	r3, r3, #1
 755 02ac 1BB2     		sxth	r3, r3
 131:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     blend_area.y2 = blend_area.y1;
 756              		.loc 1 131 35 view .LVU276
 757 02ae ADF84230 		strh	r3, [sp, #66]	@ movhi
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 33


 132:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 758              		.loc 1 132 21 is_stmt 1 view .LVU277
 132:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 759              		.loc 1 132 35 is_stmt 0 view .LVU278
 760 02b2 ADF84630 		strh	r3, [sp, #70]	@ movhi
 134:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 }
 761              		.loc 1 134 21 is_stmt 1 view .LVU279
 762              	.LVL85:
 134:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 }
 763              		.loc 1 134 26 is_stmt 0 view .LVU280
 764 02b6 0022     		movs	r2, #0
 765 02b8 E9E7     		b	.L13
 766              	.LVL86:
 767              	.L57:
 138:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 blend_area.y2--;
 768              		.loc 1 138 13 is_stmt 1 view .LVU281
 138:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 blend_area.y2--;
 769              		.loc 1 138 26 is_stmt 0 view .LVU282
 770 02ba BDF94220 		ldrsh	r2, [sp, #66]
 771              	.LVL87:
 138:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 blend_area.y2--;
 772              		.loc 1 138 43 view .LVU283
 773 02be BDF94630 		ldrsh	r3, [sp, #70]
 138:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 blend_area.y2--;
 774              		.loc 1 138 15 view .LVU284
 775 02c2 9A42     		cmp	r2, r3
 776 02c4 06D1     		bne	.L58
 777              	.L15:
 143:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_mem_buf_release(src_buf_rgb);
 778              		.loc 1 143 13 is_stmt 1 view .LVU285
 779 02c6 2046     		mov	r0, r4
 780 02c8 FFF7FEFF 		bl	lv_mem_buf_release
 781              	.LVL88:
 144:lvgl/src/draw/sw/lv_draw_sw_img.c ****         }
 782              		.loc 1 144 13 view .LVU286
 783 02cc 2846     		mov	r0, r5
 784 02ce FFF7FEFF 		bl	lv_mem_buf_release
 785              	.LVL89:
 786              	.LBE49:
  89:lvgl/src/draw/sw/lv_draw_sw_img.c ****             uint32_t hor_res = (uint32_t) lv_disp_get_hor_res(_lv_refr_get_disp_refreshing());
 787              		.loc 1 89 115 is_stmt 0 view .LVU287
 788 02d2 FDE0     		b	.L3
 789              	.L58:
 790              	.LBB50:
 139:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 lv_draw_sw_blend(draw_ctx, &blend_dsc);
 791              		.loc 1 139 17 is_stmt 1 view .LVU288
 139:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 lv_draw_sw_blend(draw_ctx, &blend_dsc);
 792              		.loc 1 139 30 is_stmt 0 view .LVU289
 793 02d4 013B     		subs	r3, r3, #1
 794 02d6 ADF84630 		strh	r3, [sp, #70]	@ movhi
 140:lvgl/src/draw/sw/lv_draw_sw_img.c ****             }
 795              		.loc 1 140 17 is_stmt 1 view .LVU290
 796 02da 25A9     		add	r1, sp, #148
 797 02dc 0D98     		ldr	r0, [sp, #52]
 798 02de FFF7FEFF 		bl	lv_draw_sw_blend
 799              	.LVL90:
 800 02e2 F0E7     		b	.L15
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 34


 801              	.LVL91:
 802              	.L51:
 140:lvgl/src/draw/sw/lv_draw_sw_img.c ****             }
 803              		.loc 1 140 17 is_stmt 0 view .LVU291
 804              	.LBE50:
 805              	.LBB51:
 150:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_color_t * src_buf_rgb = lv_mem_buf_get(mask_buf_size * sizeof(lv_color_t));
 806              		.loc 1 150 89 discriminator 1 view .LVU292
 807 02e4 2CA8     		add	r0, sp, #176
 808 02e6 FFF7FEFF 		bl	lv_area_get_size
 809              	.LVL92:
 810 02ea 0A90     		str	r0, [sp, #40]
 811 02ec 02E7     		b	.L17
 812              	.LVL93:
 813              	.L52:
 163:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.zoom = draw_dsc->zoom;
 814              		.loc 1 163 17 is_stmt 1 view .LVU293
 163:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.zoom = draw_dsc->zoom;
 815              		.loc 1 163 47 is_stmt 0 view .LVU294
 816 02ee 0199     		ldr	r1, [sp, #4]
 817 02f0 B1F90030 		ldrsh	r3, [r1]
 163:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.zoom = draw_dsc->zoom;
 818              		.loc 1 163 37 view .LVU295
 819 02f4 ADF85430 		strh	r3, [sp, #84]	@ movhi
 164:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.src = src_buf;
 820              		.loc 1 164 17 is_stmt 1 view .LVU296
 164:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.src = src_buf;
 821              		.loc 1 164 46 is_stmt 0 view .LVU297
 822 02f8 4B88     		ldrh	r3, [r1, #2]
 164:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.src = src_buf;
 823              		.loc 1 164 36 view .LVU298
 824 02fa ADF85630 		strh	r3, [sp, #86]	@ movhi
 165:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.src_w = src_stride;
 825              		.loc 1 165 17 is_stmt 1 view .LVU299
 165:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.src_w = src_stride;
 826              		.loc 1 165 35 is_stmt 0 view .LVU300
 827 02fe 1296     		str	r6, [sp, #72]
 166:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.src_h = lv_area_get_height(coords);
 828              		.loc 1 166 17 is_stmt 1 view .LVU301
 166:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.src_h = lv_area_get_height(coords);
 829              		.loc 1 166 37 is_stmt 0 view .LVU302
 830 0300 0C9B     		ldr	r3, [sp, #48]
 831 0302 ADF84C30 		strh	r3, [sp, #76]	@ movhi
 167:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.cf = cf;
 832              		.loc 1 167 17 is_stmt 1 view .LVU303
 833              	.LVL94:
 834              	.LBB38:
 835              	.LBI38:
 133:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 836              		.loc 3 133 26 view .LVU304
 837              	.LBB39:
 838              		.loc 3 135 5 view .LVU305
 839              		.loc 3 135 31 is_stmt 0 view .LVU306
 840 0306 099A     		ldr	r2, [sp, #36]
 841 0308 D388     		ldrh	r3, [r2, #6]
 842              		.loc 3 135 44 view .LVU307
 843 030a 5288     		ldrh	r2, [r2, #2]
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 35


 844              		.loc 3 135 36 view .LVU308
 845 030c 9B1A     		subs	r3, r3, r2
 846 030e 9BB2     		uxth	r3, r3
 847              		.loc 3 135 49 view .LVU309
 848 0310 0133     		adds	r3, r3, #1
 849              	.LVL95:
 850              		.loc 3 135 49 view .LVU310
 851              	.LBE39:
 852              	.LBE38:
 167:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.cf = cf;
 853              		.loc 1 167 37 discriminator 1 view .LVU311
 854 0312 ADF84E30 		strh	r3, [sp, #78]	@ movhi
 168:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.pivot_x = draw_dsc->pivot.x;
 855              		.loc 1 168 17 is_stmt 1 view .LVU312
 168:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.pivot_x = draw_dsc->pivot.x;
 856              		.loc 1 168 34 is_stmt 0 view .LVU313
 857 0316 8DF85AA0 		strb	r10, [sp, #90]
 169:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.pivot_y = draw_dsc->pivot.y;
 858              		.loc 1 169 17 is_stmt 1 view .LVU314
 169:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.pivot_y = draw_dsc->pivot.y;
 859              		.loc 1 169 56 is_stmt 0 view .LVU315
 860 031a B1F90430 		ldrsh	r3, [r1, #4]
 169:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.pivot_y = draw_dsc->pivot.y;
 861              		.loc 1 169 39 view .LVU316
 862 031e ADF85030 		strh	r3, [sp, #80]	@ movhi
 170:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.color = draw_dsc->recolor;
 863              		.loc 1 170 17 is_stmt 1 view .LVU317
 170:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.color = draw_dsc->recolor;
 864              		.loc 1 170 56 is_stmt 0 view .LVU318
 865 0322 B1F90630 		ldrsh	r3, [r1, #6]
 170:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.color = draw_dsc->recolor;
 866              		.loc 1 170 39 view .LVU319
 867 0326 ADF85230 		strh	r3, [sp, #82]	@ movhi
 171:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.antialias = draw_dsc->antialias;
 868              		.loc 1 171 17 is_stmt 1 view .LVU320
 171:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 trans_dsc.cfg.antialias = draw_dsc->antialias;
 869              		.loc 1 171 37 is_stmt 0 view .LVU321
 870 032a 0B89     		ldrh	r3, [r1, #8]
 871 032c ADF85830 		strh	r3, [sp, #88]	@ movhi
 172:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 872              		.loc 1 172 17 is_stmt 1 view .LVU322
 172:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 873              		.loc 1 172 51 is_stmt 0 view .LVU323
 874 0330 0B7D     		ldrb	r3, [r1, #20]	@ zero_extendqisi2
 875 0332 C3F30003 		ubfx	r3, r3, #0, #1
 172:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 876              		.loc 1 172 41 view .LVU324
 877 0336 8DF85B30 		strb	r3, [sp, #91]
 174:lvgl/src/draw/sw/lv_draw_sw_img.c ****             }
 878              		.loc 1 174 17 is_stmt 1 view .LVU325
 879 033a 12A8     		add	r0, sp, #72
 880 033c FFF7FEFF 		bl	_lv_img_buf_transform_init
 881              	.LVL96:
 158:lvgl/src/draw/sw/lv_draw_sw_img.c **** #if LV_DRAW_COMPLEX
 882              		.loc 1 158 29 is_stmt 0 view .LVU326
 883 0340 0023     		movs	r3, #0
 884 0342 0693     		str	r3, [sp, #24]
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 36


 885 0344 03E7     		b	.L19
 886              	.LVL97:
 887              	.L53:
 188:lvgl/src/draw/sw/lv_draw_sw_img.c ****                                   draw_dsc->zoom != LV_IMG_ZOOM_NONE) ? LV_DRAW_MASK_RES_CHANGED : 
 888              		.loc 1 188 81 discriminator 2 view .LVU327
 889 0346 019B     		ldr	r3, [sp, #4]
 890 0348 1B68     		ldr	r3, [r3]
 891 034a B3F1807F 		cmp	r3, #16777216
 892 034e 01D0     		beq	.L43
 188:lvgl/src/draw/sw/lv_draw_sw_img.c ****                                   draw_dsc->zoom != LV_IMG_ZOOM_NONE) ? LV_DRAW_MASK_RES_CHANGED : 
 893              		.loc 1 188 32 discriminator 3 view .LVU328
 894 0350 0223     		movs	r3, #2
 895 0352 1EE7     		b	.L21
 896              	.L43:
 188:lvgl/src/draw/sw/lv_draw_sw_img.c ****                                   draw_dsc->zoom != LV_IMG_ZOOM_NONE) ? LV_DRAW_MASK_RES_CHANGED : 
 897              		.loc 1 188 32 discriminator 4 view .LVU329
 898 0354 0123     		movs	r3, #1
 899 0356 1CE7     		b	.L21
 900              	.L54:
 193:lvgl/src/draw/sw/lv_draw_sw_img.c ****             }
 901              		.loc 1 193 17 is_stmt 1 view .LVU330
 902 0358 0A99     		ldr	r1, [sp, #40]
 903 035a 4846     		mov	r0, r9
 904 035c FFF7FEFF 		bl	lv_memset_ff
 905              	.LVL98:
 906 0360 1DE7     		b	.L22
 907              	.LVL99:
 908              	.L61:
 909              	.LBB40:
 910              	.LBB41:
 202:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 map_px = src_buf_tmp;
 203:lvgl/src/draw/sw/lv_draw_sw_img.c **** #if LV_DRAW_COMPLEX
 204:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 uint32_t px_i_start = px_i;
 205:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 int32_t rot_x = blend_area.x1 - coords->x1;
 206:lvgl/src/draw/sw/lv_draw_sw_img.c **** #endif
 207:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 208:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 for(x = 0; x < draw_area_w; x++, px_i++, map_px += px_size_byte) {
 209:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 210:lvgl/src/draw/sw/lv_draw_sw_img.c **** #if LV_DRAW_COMPLEX
 211:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     if(transform) {
 212:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 213:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         /*Transform*/
 214:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         bool ret;
 911              		.loc 1 214 25 view .LVU331
 215:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         ret = _lv_img_buf_transform(&trans_dsc, rot_x + x, rot_y + y);
 912              		.loc 1 215 25 view .LVU332
 913              		.loc 1 215 71 is_stmt 0 view .LVU333
 914 0362 039B     		ldr	r3, [sp, #12]
 915 0364 5919     		adds	r1, r3, r5
 916              	.LVL100:
 917              		.loc 1 215 82 view .LVU334
 918 0366 049B     		ldr	r3, [sp, #16]
 919 0368 009A     		ldr	r2, [sp]
 920 036a 9A18     		adds	r2, r3, r2
 921              		.loc 1 215 31 view .LVU335
 922 036c 12B2     		sxth	r2, r2
 923 036e 09B2     		sxth	r1, r1
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 37


 924 0370 12A8     		add	r0, sp, #72
 925 0372 FFF7FEFF 		bl	_lv_img_buf_transform
 926              	.LVL101:
 216:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         if(ret == false) {
 927              		.loc 1 216 25 is_stmt 1 view .LVU336
 928              		.loc 1 216 27 is_stmt 0 view .LVU337
 929 0376 80B3     		cbz	r0, .L59
 217:lvgl/src/draw/sw/lv_draw_sw_img.c ****                             mask_buf[px_i] = LV_OPA_TRANSP;
 218:lvgl/src/draw/sw/lv_draw_sw_img.c ****                             continue;
 219:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         }
 220:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         else {
 221:lvgl/src/draw/sw/lv_draw_sw_img.c ****                             mask_buf[px_i] = trans_dsc.res.opa;
 930              		.loc 1 221 29 is_stmt 1 view .LVU338
 931              		.loc 1 221 59 is_stmt 0 view .LVU339
 932 0378 9DF85E30 		ldrb	r3, [sp, #94]	@ zero_extendqisi2
 933              		.loc 1 221 44 view .LVU340
 934 037c 09F80430 		strb	r3, [r9, r4]
 222:lvgl/src/draw/sw/lv_draw_sw_img.c ****                             c.full = trans_dsc.res.color.full;
 935              		.loc 1 222 29 is_stmt 1 view .LVU341
 936              		.loc 1 222 36 is_stmt 0 view .LVU342
 937 0380 BDF85C10 		ldrh	r1, [sp, #92]
 938              	.LVL102:
 939              	.L28:
 940              		.loc 1 222 36 view .LVU343
 941              	.LBE41:
 223:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         }
 224:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     }
 225:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     /*No transform*/
 226:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     else
 227:lvgl/src/draw/sw/lv_draw_sw_img.c **** #endif
 228:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     {
 229:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         if(cf == LV_IMG_CF_TRUE_COLOR_ALPHA) {
 230:lvgl/src/draw/sw/lv_draw_sw_img.c ****                             lv_opa_t px_opa = map_px[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 231:lvgl/src/draw/sw/lv_draw_sw_img.c ****                             mask_buf[px_i] = px_opa;
 232:lvgl/src/draw/sw/lv_draw_sw_img.c ****                             if(px_opa == 0) {
 233:lvgl/src/draw/sw/lv_draw_sw_img.c **** #if  LV_COLOR_DEPTH == 32
 234:lvgl/src/draw/sw/lv_draw_sw_img.c ****                                 src_buf_rgb[px_i].full = 0;
 235:lvgl/src/draw/sw/lv_draw_sw_img.c **** #endif
 236:lvgl/src/draw/sw/lv_draw_sw_img.c ****                                 continue;
 237:lvgl/src/draw/sw/lv_draw_sw_img.c ****                             }
 238:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         }
 239:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         else {
 240:lvgl/src/draw/sw/lv_draw_sw_img.c ****                             mask_buf[px_i] = 0xFF;
 241:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         }
 242:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 243:lvgl/src/draw/sw/lv_draw_sw_img.c **** #if LV_COLOR_DEPTH == 1
 244:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         c.full = map_px[0];
 245:lvgl/src/draw/sw/lv_draw_sw_img.c **** #elif LV_COLOR_DEPTH == 8
 246:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         c.full = map_px[0];
 247:lvgl/src/draw/sw/lv_draw_sw_img.c **** #elif LV_COLOR_DEPTH == 16
 248:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         c.full = map_px[0] + (map_px[1] << 8);
 249:lvgl/src/draw/sw/lv_draw_sw_img.c **** #elif LV_COLOR_DEPTH == 32
 250:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         c.full = *((uint32_t *)map_px);
 251:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         c.ch.alpha = 0xFF;
 252:lvgl/src/draw/sw/lv_draw_sw_img.c **** #endif
 253:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         if(cf == LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED) {
 254:lvgl/src/draw/sw/lv_draw_sw_img.c ****                             if(c.full == chroma_keyed_color.full) {
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 38


 255:lvgl/src/draw/sw/lv_draw_sw_img.c ****                                 mask_buf[px_i] = LV_OPA_TRANSP;
 256:lvgl/src/draw/sw/lv_draw_sw_img.c **** #if  LV_COLOR_DEPTH == 32
 257:lvgl/src/draw/sw/lv_draw_sw_img.c ****                                 src_buf_rgb[px_i].full = 0;
 258:lvgl/src/draw/sw/lv_draw_sw_img.c **** #endif
 259:lvgl/src/draw/sw/lv_draw_sw_img.c ****                                 continue;
 260:lvgl/src/draw/sw/lv_draw_sw_img.c ****                             }
 261:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         }
 262:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 263:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     }
 264:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     if(draw_dsc->recolor_opa != 0) {
 942              		.loc 1 264 21 is_stmt 1 view .LVU344
 943              		.loc 1 264 32 is_stmt 0 view .LVU345
 944 0384 019B     		ldr	r3, [sp, #4]
 945 0386 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 946              		.loc 1 264 23 view .LVU346
 947 0388 23B1     		cbz	r3, .L31
 265:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         c = lv_color_mix_premult(recolor_premult, c, recolor_opa_inv);
 948              		.loc 1 265 25 is_stmt 1 view .LVU347
 949              		.loc 1 265 29 is_stmt 0 view .LVU348
 950 038a 059A     		ldr	r2, [sp, #20]
 951 038c 0EA8     		add	r0, sp, #56
 952 038e FFF7FEFF 		bl	lv_color_mix_premult
 953              	.LVL103:
 954 0392 0146     		mov	r1, r0	@ movhi
 955              	.L31:
 266:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     }
 267:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 268:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     src_buf_rgb[px_i].full = c.full;
 956              		.loc 1 268 21 is_stmt 1 view .LVU349
 957              		.loc 1 268 44 is_stmt 0 view .LVU350
 958 0394 029B     		ldr	r3, [sp, #8]
 959              	.LVL104:
 960              		.loc 1 268 44 view .LVU351
 961 0396 23F81410 		strh	r1, [r3, r4, lsl #1]	@ movhi
 962              	.L27:
 208:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 963              		.loc 1 208 56 is_stmt 1 discriminator 2 view .LVU352
 208:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 964              		.loc 1 208 46 is_stmt 0 discriminator 2 view .LVU353
 965 039a 0135     		adds	r5, r5, #1
 966              	.LVL105:
 208:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 967              		.loc 1 208 54 discriminator 2 view .LVU354
 968 039c 0134     		adds	r4, r4, #1
 969              	.LVL106:
 208:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 970              		.loc 1 208 65 discriminator 2 view .LVU355
 971 039e 4644     		add	r6, r6, r8
 972              	.LVL107:
 973              	.L24:
 208:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 974              		.loc 1 208 30 is_stmt 1 discriminator 1 view .LVU356
 975 03a0 AF42     		cmp	r7, r5
 976 03a2 24DD     		ble	.L60
 211:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 977              		.loc 1 211 21 view .LVU357
 211:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 39


 978              		.loc 1 211 23 is_stmt 0 view .LVU358
 979 03a4 BBF1807F 		cmp	fp, #16777216
 980 03a8 DBD1     		bne	.L61
 229:lvgl/src/draw/sw/lv_draw_sw_img.c ****                             lv_opa_t px_opa = map_px[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 981              		.loc 1 229 25 is_stmt 1 view .LVU359
 229:lvgl/src/draw/sw/lv_draw_sw_img.c ****                             lv_opa_t px_opa = map_px[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 982              		.loc 1 229 27 is_stmt 0 view .LVU360
 983 03aa BAF1050F 		cmp	r10, #5
 984 03ae 18D0     		beq	.L62
 240:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         }
 985              		.loc 1 240 29 is_stmt 1 view .LVU361
 240:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         }
 986              		.loc 1 240 44 is_stmt 0 view .LVU362
 987 03b0 FF23     		movs	r3, #255
 988 03b2 09F80430 		strb	r3, [r9, r4]
 989              	.L30:
 248:lvgl/src/draw/sw/lv_draw_sw_img.c **** #elif LV_COLOR_DEPTH == 32
 990              		.loc 1 248 25 is_stmt 1 view .LVU363
 248:lvgl/src/draw/sw/lv_draw_sw_img.c **** #elif LV_COLOR_DEPTH == 32
 991              		.loc 1 248 40 is_stmt 0 view .LVU364
 992 03b6 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 248:lvgl/src/draw/sw/lv_draw_sw_img.c **** #elif LV_COLOR_DEPTH == 32
 993              		.loc 1 248 53 view .LVU365
 994 03b8 7278     		ldrb	r2, [r6, #1]	@ zero_extendqisi2
 248:lvgl/src/draw/sw/lv_draw_sw_img.c **** #elif LV_COLOR_DEPTH == 32
 995              		.loc 1 248 44 view .LVU366
 996 03ba 03EB0223 		add	r3, r3, r2, lsl #8
 997 03be 9BB2     		uxth	r3, r3
 248:lvgl/src/draw/sw/lv_draw_sw_img.c **** #elif LV_COLOR_DEPTH == 32
 998              		.loc 1 248 32 view .LVU367
 999 03c0 1946     		mov	r1, r3	@ movhi
 1000              	.LVL108:
 253:lvgl/src/draw/sw/lv_draw_sw_img.c ****                             if(c.full == chroma_keyed_color.full) {
 1001              		.loc 1 253 25 is_stmt 1 view .LVU368
 253:lvgl/src/draw/sw/lv_draw_sw_img.c ****                             if(c.full == chroma_keyed_color.full) {
 1002              		.loc 1 253 27 is_stmt 0 view .LVU369
 1003 03c2 BAF1060F 		cmp	r10, #6
 1004 03c6 DDD1     		bne	.L28
 254:lvgl/src/draw/sw/lv_draw_sw_img.c ****                                 mask_buf[px_i] = LV_OPA_TRANSP;
 1005              		.loc 1 254 29 is_stmt 1 view .LVU370
 254:lvgl/src/draw/sw/lv_draw_sw_img.c ****                                 mask_buf[px_i] = LV_OPA_TRANSP;
 1006              		.loc 1 254 60 is_stmt 0 view .LVU371
 1007 03c8 4FF4FC62 		mov	r2, #2016
 1008 03cc 92B2     		uxth	r2, r2
 254:lvgl/src/draw/sw/lv_draw_sw_img.c ****                                 mask_buf[px_i] = LV_OPA_TRANSP;
 1009              		.loc 1 254 31 view .LVU372
 1010 03ce 9342     		cmp	r3, r2
 1011 03d0 D8D1     		bne	.L28
 255:lvgl/src/draw/sw/lv_draw_sw_img.c **** #if  LV_COLOR_DEPTH == 32
 1012              		.loc 1 255 33 is_stmt 1 view .LVU373
 255:lvgl/src/draw/sw/lv_draw_sw_img.c **** #if  LV_COLOR_DEPTH == 32
 1013              		.loc 1 255 48 is_stmt 0 view .LVU374
 1014 03d2 0023     		movs	r3, #0
 1015 03d4 09F80430 		strb	r3, [r9, r4]
 259:lvgl/src/draw/sw/lv_draw_sw_img.c ****                             }
 1016              		.loc 1 259 33 is_stmt 1 view .LVU375
 1017 03d8 DFE7     		b	.L27
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 40


 1018              	.LVL109:
 1019              	.L59:
 1020              	.LBB42:
 217:lvgl/src/draw/sw/lv_draw_sw_img.c ****                             continue;
 1021              		.loc 1 217 29 view .LVU376
 217:lvgl/src/draw/sw/lv_draw_sw_img.c ****                             continue;
 1022              		.loc 1 217 44 is_stmt 0 view .LVU377
 1023 03da 0023     		movs	r3, #0
 1024 03dc 09F80430 		strb	r3, [r9, r4]
 218:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         }
 1025              		.loc 1 218 29 is_stmt 1 view .LVU378
 1026 03e0 DBE7     		b	.L27
 1027              	.LVL110:
 1028              	.L62:
 218:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         }
 1029              		.loc 1 218 29 is_stmt 0 view .LVU379
 1030              	.LBE42:
 1031              	.LBB43:
 230:lvgl/src/draw/sw/lv_draw_sw_img.c ****                             mask_buf[px_i] = px_opa;
 1032              		.loc 1 230 29 is_stmt 1 view .LVU380
 230:lvgl/src/draw/sw/lv_draw_sw_img.c ****                             mask_buf[px_i] = px_opa;
 1033              		.loc 1 230 38 is_stmt 0 view .LVU381
 1034 03e2 B378     		ldrb	r3, [r6, #2]	@ zero_extendqisi2
 1035              	.LVL111:
 231:lvgl/src/draw/sw/lv_draw_sw_img.c ****                             if(px_opa == 0) {
 1036              		.loc 1 231 29 is_stmt 1 view .LVU382
 231:lvgl/src/draw/sw/lv_draw_sw_img.c ****                             if(px_opa == 0) {
 1037              		.loc 1 231 44 is_stmt 0 view .LVU383
 1038 03e4 09F80430 		strb	r3, [r9, r4]
 232:lvgl/src/draw/sw/lv_draw_sw_img.c **** #if  LV_COLOR_DEPTH == 32
 1039              		.loc 1 232 29 is_stmt 1 view .LVU384
 232:lvgl/src/draw/sw/lv_draw_sw_img.c **** #if  LV_COLOR_DEPTH == 32
 1040              		.loc 1 232 31 is_stmt 0 view .LVU385
 1041 03e8 002B     		cmp	r3, #0
 1042 03ea E4D1     		bne	.L30
 1043 03ec D5E7     		b	.L27
 1044              	.LVL112:
 1045              	.L60:
 232:lvgl/src/draw/sw/lv_draw_sw_img.c **** #if  LV_COLOR_DEPTH == 32
 1046              		.loc 1 232 31 view .LVU386
 1047              	.LBE43:
 269:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 }
 270:lvgl/src/draw/sw/lv_draw_sw_img.c **** #if LV_DRAW_COMPLEX
 271:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 /*Apply the masks if any*/
 272:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 if(mask_any) {
 1048              		.loc 1 272 17 is_stmt 1 view .LVU387
 1049              		.loc 1 272 19 is_stmt 0 view .LVU388
 1050 03ee 089B     		ldr	r3, [sp, #32]
 1051 03f0 03BB     		cbnz	r3, .L63
 1052              	.LVL113:
 1053              	.L33:
 273:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     lv_draw_mask_res_t mask_res_sub;
 274:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     mask_res_sub = lv_draw_mask_apply(mask_buf + px_i_start, blend_area.x1,
 275:lvgl/src/draw/sw/lv_draw_sw_img.c ****                                                       y + draw_area.y1, draw_area_w);
 276:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     if(mask_res_sub == LV_DRAW_MASK_RES_TRANSP) {
 277:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         lv_memset_00(mask_buf + px_i_start, draw_area_w);
 278:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         blend_dsc.mask_res = LV_DRAW_MASK_RES_CHANGED;
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 41


 279:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     }
 280:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     else if(mask_res_sub == LV_DRAW_MASK_RES_CHANGED) {
 281:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         blend_dsc.mask_res = LV_DRAW_MASK_RES_CHANGED;
 282:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     }
 283:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 }
 284:lvgl/src/draw/sw/lv_draw_sw_img.c **** #endif
 285:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 286:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 src_buf_tmp += src_stride * px_size_byte;
 1054              		.loc 1 286 17 is_stmt 1 view .LVU389
 1055              		.loc 1 286 29 is_stmt 0 view .LVU390
 1056 03f2 069B     		ldr	r3, [sp, #24]
 1057 03f4 0C9A     		ldr	r2, [sp, #48]
 1058 03f6 02FB0833 		mla	r3, r2, r8, r3
 1059 03fa 0693     		str	r3, [sp, #24]
 1060              	.LVL114:
 287:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 if(px_i + draw_area_w < mask_buf_size) {
 1061              		.loc 1 287 17 is_stmt 1 view .LVU391
 1062              		.loc 1 287 25 is_stmt 0 view .LVU392
 1063 03fc 3B19     		adds	r3, r7, r4
 1064              	.LVL115:
 1065              		.loc 1 287 19 view .LVU393
 1066 03fe 0A9A     		ldr	r2, [sp, #40]
 1067 0400 9342     		cmp	r3, r2
 1068 0402 32D2     		bcs	.L35
 288:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     blend_area.y2 ++;
 1069              		.loc 1 288 21 is_stmt 1 view .LVU394
 1070              		.loc 1 288 31 is_stmt 0 view .LVU395
 1071 0404 BDF94630 		ldrsh	r3, [sp, #70]
 1072              		.loc 1 288 35 view .LVU396
 1073 0408 0133     		adds	r3, r3, #1
 1074 040a ADF84630 		strh	r3, [sp, #70]	@ movhi
 1075 040e 0794     		str	r4, [sp, #28]
 1076              	.LVL116:
 1077              	.L36:
 1078              		.loc 1 288 35 view .LVU397
 1079              	.LBE40:
 201:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 map_px = src_buf_tmp;
 1080              		.loc 1 201 42 is_stmt 1 discriminator 2 view .LVU398
 1081 0410 009B     		ldr	r3, [sp]
 1082 0412 0133     		adds	r3, r3, #1
 1083 0414 0093     		str	r3, [sp]
 1084              	.LVL117:
 1085              	.L23:
 201:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 map_px = src_buf_tmp;
 1086              		.loc 1 201 26 discriminator 1 view .LVU399
 1087 0416 0B9B     		ldr	r3, [sp, #44]
 1088 0418 009A     		ldr	r2, [sp]
 1089 041a 9342     		cmp	r3, r2
 1090 041c 4CDD     		ble	.L64
 1091              	.LBB45:
 202:lvgl/src/draw/sw/lv_draw_sw_img.c **** #if LV_DRAW_COMPLEX
 1092              		.loc 1 202 17 view .LVU400
 1093              	.LVL118:
 204:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 int32_t rot_x = blend_area.x1 - coords->x1;
 1094              		.loc 1 204 17 view .LVU401
 205:lvgl/src/draw/sw/lv_draw_sw_img.c **** #endif
 1095              		.loc 1 205 17 view .LVU402
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 42


 205:lvgl/src/draw/sw/lv_draw_sw_img.c **** #endif
 1096              		.loc 1 205 43 is_stmt 0 view .LVU403
 1097 041e BDF94020 		ldrsh	r2, [sp, #64]
 205:lvgl/src/draw/sw/lv_draw_sw_img.c **** #endif
 1098              		.loc 1 205 55 view .LVU404
 1099 0422 099B     		ldr	r3, [sp, #36]
 1100 0424 B3F90030 		ldrsh	r3, [r3]
 205:lvgl/src/draw/sw/lv_draw_sw_img.c **** #endif
 1101              		.loc 1 205 25 view .LVU405
 1102 0428 D31A     		subs	r3, r2, r3
 1103 042a 0393     		str	r3, [sp, #12]
 1104              	.LVL119:
 208:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 1105              		.loc 1 208 17 is_stmt 1 view .LVU406
 202:lvgl/src/draw/sw/lv_draw_sw_img.c **** #if LV_DRAW_COMPLEX
 1106              		.loc 1 202 24 is_stmt 0 view .LVU407
 1107 042c 069E     		ldr	r6, [sp, #24]
 208:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 1108              		.loc 1 208 17 view .LVU408
 1109 042e 079C     		ldr	r4, [sp, #28]
 208:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 1110              		.loc 1 208 23 view .LVU409
 1111 0430 0025     		movs	r5, #0
 208:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 1112              		.loc 1 208 17 view .LVU410
 1113 0432 B5E7     		b	.L24
 1114              	.LVL120:
 1115              	.L63:
 1116              	.LBB44:
 273:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     mask_res_sub = lv_draw_mask_apply(mask_buf + px_i_start, blend_area.x1,
 1117              		.loc 1 273 21 is_stmt 1 view .LVU411
 274:lvgl/src/draw/sw/lv_draw_sw_img.c ****                                                       y + draw_area.y1, draw_area_w);
 1118              		.loc 1 274 21 view .LVU412
 274:lvgl/src/draw/sw/lv_draw_sw_img.c ****                                                       y + draw_area.y1, draw_area_w);
 1119              		.loc 1 274 36 is_stmt 0 view .LVU413
 1120 0434 079D     		ldr	r5, [sp, #28]
 1121              	.LVL121:
 274:lvgl/src/draw/sw/lv_draw_sw_img.c ****                                                       y + draw_area.y1, draw_area_w);
 1122              		.loc 1 274 36 view .LVU414
 1123 0436 4D44     		add	r5, r5, r9
 275:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     if(mask_res_sub == LV_DRAW_MASK_RES_TRANSP) {
 1124              		.loc 1 275 68 view .LVU415
 1125 0438 BDF8B220 		ldrh	r2, [sp, #178]
 275:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     if(mask_res_sub == LV_DRAW_MASK_RES_TRANSP) {
 1126              		.loc 1 275 57 view .LVU416
 1127 043c 009B     		ldr	r3, [sp]
 1128 043e 1A44     		add	r2, r2, r3
 274:lvgl/src/draw/sw/lv_draw_sw_img.c ****                                                       y + draw_area.y1, draw_area_w);
 1129              		.loc 1 274 36 view .LVU417
 1130 0440 3B46     		mov	r3, r7
 1131 0442 12B2     		sxth	r2, r2
 1132 0444 BDF94010 		ldrsh	r1, [sp, #64]
 1133              	.LVL122:
 274:lvgl/src/draw/sw/lv_draw_sw_img.c ****                                                       y + draw_area.y1, draw_area_w);
 1134              		.loc 1 274 36 view .LVU418
 1135 0448 2846     		mov	r0, r5
 1136 044a FFF7FEFF 		bl	lv_draw_mask_apply
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 43


 1137              	.LVL123:
 276:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         lv_memset_00(mask_buf + px_i_start, draw_area_w);
 1138              		.loc 1 276 21 is_stmt 1 view .LVU419
 276:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         lv_memset_00(mask_buf + px_i_start, draw_area_w);
 1139              		.loc 1 276 23 is_stmt 0 view .LVU420
 1140 044e 20B1     		cbz	r0, .L65
 280:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         blend_dsc.mask_res = LV_DRAW_MASK_RES_CHANGED;
 1141              		.loc 1 280 26 is_stmt 1 view .LVU421
 280:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         blend_dsc.mask_res = LV_DRAW_MASK_RES_CHANGED;
 1142              		.loc 1 280 28 is_stmt 0 view .LVU422
 1143 0450 0228     		cmp	r0, #2
 1144 0452 CED1     		bne	.L33
 281:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     }
 1145              		.loc 1 281 25 is_stmt 1 view .LVU423
 281:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     }
 1146              		.loc 1 281 44 is_stmt 0 view .LVU424
 1147 0454 8DF8A400 		strb	r0, [sp, #164]
 1148 0458 CBE7     		b	.L33
 1149              	.L65:
 277:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         blend_dsc.mask_res = LV_DRAW_MASK_RES_CHANGED;
 1150              		.loc 1 277 25 is_stmt 1 view .LVU425
 1151 045a 3946     		mov	r1, r7
 1152 045c 2846     		mov	r0, r5
 1153              	.LVL124:
 277:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         blend_dsc.mask_res = LV_DRAW_MASK_RES_CHANGED;
 1154              		.loc 1 277 25 is_stmt 0 view .LVU426
 1155 045e FFF7FEFF 		bl	lv_memset_00
 1156              	.LVL125:
 278:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     }
 1157              		.loc 1 278 25 is_stmt 1 view .LVU427
 278:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     }
 1158              		.loc 1 278 44 is_stmt 0 view .LVU428
 1159 0462 0223     		movs	r3, #2
 1160 0464 8DF8A430 		strb	r3, [sp, #164]
 1161 0468 C3E7     		b	.L33
 1162              	.LVL126:
 1163              	.L35:
 278:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     }
 1164              		.loc 1 278 44 view .LVU429
 1165              	.LBE44:
 289:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 }
 290:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 else {
 291:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     lv_draw_sw_blend(draw_ctx, &blend_dsc);
 1166              		.loc 1 291 21 is_stmt 1 view .LVU430
 1167 046a 25A9     		add	r1, sp, #148
 1168              	.LVL127:
 1169              		.loc 1 291 21 is_stmt 0 view .LVU431
 1170 046c 0D98     		ldr	r0, [sp, #52]
 1171 046e FFF7FEFF 		bl	lv_draw_sw_blend
 1172              	.LVL128:
 292:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 293:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     blend_area.y1 = blend_area.y2 + 1;
 1173              		.loc 1 293 21 is_stmt 1 view .LVU432
 1174              		.loc 1 293 47 is_stmt 0 view .LVU433
 1175 0472 BDF84630 		ldrh	r3, [sp, #70]
 1176              		.loc 1 293 51 view .LVU434
 1177 0476 0133     		adds	r3, r3, #1
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 44


 1178 0478 1BB2     		sxth	r3, r3
 1179              		.loc 1 293 35 view .LVU435
 1180 047a ADF84230 		strh	r3, [sp, #66]	@ movhi
 294:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     blend_area.y2 = blend_area.y1;
 1181              		.loc 1 294 21 is_stmt 1 view .LVU436
 1182              		.loc 1 294 35 is_stmt 0 view .LVU437
 1183 047e ADF84630 		strh	r3, [sp, #70]	@ movhi
 295:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 296:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     px_i = 0;
 1184              		.loc 1 296 21 is_stmt 1 view .LVU438
 1185              	.LVL129:
 297:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     blend_dsc.mask_res = (cf != LV_IMG_CF_TRUE_COLOR || draw_dsc->angle ||
 1186              		.loc 1 297 21 view .LVU439
 1187              		.loc 1 297 40 is_stmt 0 view .LVU440
 1188 0482 BAF1040F 		cmp	r10, #4
 1189 0486 07D0     		beq	.L66
 1190              		.loc 1 297 40 discriminator 3 view .LVU441
 1191 0488 0223     		movs	r3, #2
 1192              	.L37:
 1193              		.loc 1 297 40 discriminator 6 view .LVU442
 1194 048a 8DF8A430 		strb	r3, [sp, #164]
 298:lvgl/src/draw/sw/lv_draw_sw_img.c ****                                           draw_dsc->zoom != LV_IMG_ZOOM_NONE) ? LV_DRAW_MASK_RES_CH
 299:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 300:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     /*Prepare the `mask_buf`if there are other masks*/
 301:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     if(mask_any) {
 1195              		.loc 1 301 21 is_stmt 1 view .LVU443
 1196              		.loc 1 301 23 is_stmt 0 view .LVU444
 1197 048e 089B     		ldr	r3, [sp, #32]
 1198 0490 5BB9     		cbnz	r3, .L67
 296:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     blend_dsc.mask_res = (cf != LV_IMG_CF_TRUE_COLOR || draw_dsc->angle ||
 1199              		.loc 1 296 26 view .LVU445
 1200 0492 0023     		movs	r3, #0
 1201 0494 0793     		str	r3, [sp, #28]
 1202              	.LVL130:
 296:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     blend_dsc.mask_res = (cf != LV_IMG_CF_TRUE_COLOR || draw_dsc->angle ||
 1203              		.loc 1 296 26 view .LVU446
 1204 0496 BBE7     		b	.L36
 1205              	.LVL131:
 1206              	.L66:
 297:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     blend_dsc.mask_res = (cf != LV_IMG_CF_TRUE_COLOR || draw_dsc->angle ||
 1207              		.loc 1 297 89 discriminator 2 view .LVU447
 1208 0498 019B     		ldr	r3, [sp, #4]
 1209 049a 1B68     		ldr	r3, [r3]
 1210 049c B3F1807F 		cmp	r3, #16777216
 1211 04a0 01D0     		beq	.L45
 297:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     blend_dsc.mask_res = (cf != LV_IMG_CF_TRUE_COLOR || draw_dsc->angle ||
 1212              		.loc 1 297 40 discriminator 3 view .LVU448
 1213 04a2 0223     		movs	r3, #2
 1214 04a4 F1E7     		b	.L37
 1215              	.L45:
 297:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     blend_dsc.mask_res = (cf != LV_IMG_CF_TRUE_COLOR || draw_dsc->angle ||
 1216              		.loc 1 297 40 discriminator 4 view .LVU449
 1217 04a6 0123     		movs	r3, #1
 1218 04a8 EFE7     		b	.L37
 1219              	.L67:
 302:lvgl/src/draw/sw/lv_draw_sw_img.c ****                         lv_memset_ff(mask_buf, mask_buf_size);
 1220              		.loc 1 302 25 is_stmt 1 view .LVU450
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 45


 1221 04aa 0A99     		ldr	r1, [sp, #40]
 1222 04ac 4846     		mov	r0, r9
 1223 04ae FFF7FEFF 		bl	lv_memset_ff
 1224              	.LVL132:
 296:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     blend_dsc.mask_res = (cf != LV_IMG_CF_TRUE_COLOR || draw_dsc->angle ||
 1225              		.loc 1 296 26 is_stmt 0 view .LVU451
 1226 04b2 0023     		movs	r3, #0
 1227 04b4 0793     		str	r3, [sp, #28]
 1228              	.LVL133:
 296:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     blend_dsc.mask_res = (cf != LV_IMG_CF_TRUE_COLOR || draw_dsc->angle ||
 1229              		.loc 1 296 26 view .LVU452
 1230 04b6 ABE7     		b	.L36
 1231              	.LVL134:
 1232              	.L64:
 296:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     blend_dsc.mask_res = (cf != LV_IMG_CF_TRUE_COLOR || draw_dsc->angle ||
 1233              		.loc 1 296 26 view .LVU453
 1234              	.LBE45:
 303:lvgl/src/draw/sw/lv_draw_sw_img.c ****                     }
 304:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 }
 305:lvgl/src/draw/sw/lv_draw_sw_img.c ****             }
 306:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 307:lvgl/src/draw/sw/lv_draw_sw_img.c ****             /*Flush the last part*/
 308:lvgl/src/draw/sw/lv_draw_sw_img.c ****             if(blend_area.y1 != blend_area.y2) {
 1235              		.loc 1 308 13 is_stmt 1 view .LVU454
 1236              		.loc 1 308 26 is_stmt 0 view .LVU455
 1237 04b8 BDF94220 		ldrsh	r2, [sp, #66]
 1238              	.LVL135:
 1239              		.loc 1 308 43 view .LVU456
 1240 04bc BDF94630 		ldrsh	r3, [sp, #70]
 1241              		.loc 1 308 15 view .LVU457
 1242 04c0 9A42     		cmp	r2, r3
 1243 04c2 08D1     		bne	.L68
 1244              	.L39:
 309:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 blend_area.y2--;
 310:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 lv_draw_sw_blend(draw_ctx, &blend_dsc);
 311:lvgl/src/draw/sw/lv_draw_sw_img.c ****             }
 312:lvgl/src/draw/sw/lv_draw_sw_img.c **** 
 313:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_mem_buf_release(mask_buf);
 1245              		.loc 1 313 13 is_stmt 1 view .LVU458
 1246 04c4 4846     		mov	r0, r9
 1247 04c6 FFF7FEFF 		bl	lv_mem_buf_release
 1248              	.LVL136:
 314:lvgl/src/draw/sw/lv_draw_sw_img.c ****             lv_mem_buf_release(src_buf_rgb);
 1249              		.loc 1 314 13 view .LVU459
 1250 04ca 0298     		ldr	r0, [sp, #8]
 1251 04cc FFF7FEFF 		bl	lv_mem_buf_release
 1252              	.LVL137:
 1253              	.L3:
 1254              		.loc 1 314 13 is_stmt 0 view .LVU460
 1255              	.LBE51:
 1256              	.LBE53:
 315:lvgl/src/draw/sw/lv_draw_sw_img.c ****         }
 316:lvgl/src/draw/sw/lv_draw_sw_img.c ****     }
 317:lvgl/src/draw/sw/lv_draw_sw_img.c **** }
 1257              		.loc 1 317 1 view .LVU461
 1258 04d0 2FB0     		add	sp, sp, #188
 1259              	.LCFI3:
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 46


 1260              		.cfi_remember_state
 1261              		.cfi_def_cfa_offset 36
 1262              		@ sp needed
 1263 04d2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1264              	.LVL138:
 1265              	.L68:
 1266              	.LCFI4:
 1267              		.cfi_restore_state
 1268              	.LBB54:
 1269              	.LBB52:
 309:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 lv_draw_sw_blend(draw_ctx, &blend_dsc);
 1270              		.loc 1 309 17 is_stmt 1 view .LVU462
 309:lvgl/src/draw/sw/lv_draw_sw_img.c ****                 lv_draw_sw_blend(draw_ctx, &blend_dsc);
 1271              		.loc 1 309 30 is_stmt 0 view .LVU463
 1272 04d6 013B     		subs	r3, r3, #1
 1273 04d8 ADF84630 		strh	r3, [sp, #70]	@ movhi
 310:lvgl/src/draw/sw/lv_draw_sw_img.c ****             }
 1274              		.loc 1 310 17 is_stmt 1 view .LVU464
 1275 04dc 25A9     		add	r1, sp, #148
 1276              	.LVL139:
 310:lvgl/src/draw/sw/lv_draw_sw_img.c ****             }
 1277              		.loc 1 310 17 is_stmt 0 view .LVU465
 1278 04de 0D98     		ldr	r0, [sp, #52]
 1279 04e0 FFF7FEFF 		bl	lv_draw_sw_blend
 1280              	.LVL140:
 1281 04e4 EEE7     		b	.L39
 1282              	.LBE52:
 1283              	.LBE54:
 1284              		.cfi_endproc
 1285              	.LFE156:
 1287              		.text
 1288              	.Letext0:
 1289              		.file 4 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 1290              		.file 5 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 1291              		.file 6 "lvgl/src/draw/sw/../../misc/lv_types.h"
 1292              		.file 7 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/lib/gcc/arm-none
 1293              		.file 8 "lvgl/src/draw/sw/../../misc/../font/lv_font.h"
 1294              		.file 9 "lvgl/src/draw/sw/../../misc/lv_txt.h"
 1295              		.file 10 "lvgl/src/draw/sw/../../misc/lv_bidi.h"
 1296              		.file 11 "lvgl/src/draw/sw/../../misc/lv_style.h"
 1297              		.file 12 "lvgl/src/draw/sw/../lv_draw_mask.h"
 1298              		.file 13 "lvgl/src/draw/sw/lv_draw_sw_blend.h"
 1299              		.file 14 "lvgl/src/draw/sw/../lv_img_buf.h"
 1300              		.file 15 "lvgl/src/draw/sw/../../core/lv_obj.h"
 1301              		.file 16 "lvgl/src/draw/sw/../lv_draw_rect.h"
 1302              		.file 17 "lvgl/src/draw/sw/../lv_draw_label.h"
 1303              		.file 18 "lvgl/src/draw/sw/../lv_draw_img.h"
 1304              		.file 19 "lvgl/src/draw/sw/../lv_draw_line.h"
 1305              		.file 20 "lvgl/src/draw/sw/../lv_draw_arc.h"
 1306              		.file 21 "lvgl/src/draw/sw/../lv_draw.h"
 1307              		.file 22 "lvgl/src/draw/sw/../../hal/../misc/lv_timer.h"
 1308              		.file 23 "lvgl/src/draw/sw/../../hal/lv_hal_disp.h"
 1309              		.file 24 "lvgl/src/draw/sw/../../core/lv_group.h"
 1310              		.file 25 "lvgl/src/draw/sw/../../hal/../misc/lv_ll.h"
 1311              		.file 26 "lvgl/src/draw/sw/../../core/lv_obj_scroll.h"
 1312              		.file 27 "lvgl/src/draw/sw/../../core/lv_obj_style.h"
 1313              		.file 28 "lvgl/src/draw/sw/../../core/lv_obj_class.h"
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 47


 1314              		.file 29 "lvgl/src/draw/sw/../../core/lv_event.h"
 1315              		.file 30 "lvgl/src/draw/sw/../../misc/lv_mem.h"
 1316              		.file 31 "lvgl/src/draw/sw/../../core/lv_refr.h"
ARM GAS  C:\usertemp\ccGHJWgX.s 			page 48


DEFINED SYMBOLS
                            *ABS*:00000000 lv_draw_sw_img.c
C:\usertemp\ccGHJWgX.s:20     .text.lv_color_mix_premult:00000000 $t
C:\usertemp\ccGHJWgX.s:25     .text.lv_color_mix_premult:00000000 lv_color_mix_premult
C:\usertemp\ccGHJWgX.s:85     .text.lv_draw_sw_img_decoded:00000000 $t
C:\usertemp\ccGHJWgX.s:91     .text.lv_draw_sw_img_decoded:00000000 lv_draw_sw_img_decoded

UNDEFINED SYMBOLS
lv_draw_mask_is_any
lv_memset_00
_lv_refr_get_disp_refreshing
lv_disp_get_hor_res
lv_area_get_size
lv_mem_buf_get
lv_draw_sw_blend
lv_mem_buf_release
_lv_img_buf_transform_init
lv_memset_ff
_lv_img_buf_transform
lv_draw_mask_apply
