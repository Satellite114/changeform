ARM GAS  C:\usertemp\cc5KZHz4.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_draw_sw_blend.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.file 1 "lvgl/src/draw/sw/lv_draw_sw_blend.c"
  19              		.section	.text.lv_color_mix,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	lv_color_mix:
  26              	.LVL0:
  27              	.LFB6:
  28              		.file 2 "lvgl/src/draw/sw/../../misc/lv_color.h"
   1:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
   2:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @file lv_color.h
   3:lvgl/src/draw/sw/../../misc/lv_color.h ****  *
   4:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
   5:lvgl/src/draw/sw/../../misc/lv_color.h **** 
   6:lvgl/src/draw/sw/../../misc/lv_color.h **** #ifndef LV_COLOR_H
   7:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_H
   8:lvgl/src/draw/sw/../../misc/lv_color.h **** 
   9:lvgl/src/draw/sw/../../misc/lv_color.h **** #ifdef __cplusplus
  10:lvgl/src/draw/sw/../../misc/lv_color.h **** extern "C" {
  11:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  12:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  13:lvgl/src/draw/sw/../../misc/lv_color.h **** /*********************
  14:lvgl/src/draw/sw/../../misc/lv_color.h ****  *      INCLUDES
  15:lvgl/src/draw/sw/../../misc/lv_color.h ****  *********************/
  16:lvgl/src/draw/sw/../../misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/draw/sw/../../misc/lv_color.h **** #include "lv_assert.h"
  18:lvgl/src/draw/sw/../../misc/lv_color.h **** #include "lv_math.h"
  19:lvgl/src/draw/sw/../../misc/lv_color.h **** #include "lv_types.h"
  20:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  21:lvgl/src/draw/sw/../../misc/lv_color.h **** /*Error checking*/
  22:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  23:lvgl/src/draw/sw/../../misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  24:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  25:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  26:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH != 32 && LV_COLOR_SCREEN_TRANSP != 0
  27:lvgl/src/draw/sw/../../misc/lv_color.h **** #error "LV_COLOR_SCREEN_TRANSP requires LV_COLOR_DEPTH == 32. Set it in lv_conf.h"
  28:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  29:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  30:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 2


  31:lvgl/src/draw/sw/../../misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  32:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  33:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  34:lvgl/src/draw/sw/../../misc/lv_color.h **** #include <stdint.h>
  35:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  36:lvgl/src/draw/sw/../../misc/lv_color.h **** /*********************
  37:lvgl/src/draw/sw/../../misc/lv_color.h ****  *      DEFINES
  38:lvgl/src/draw/sw/../../misc/lv_color.h ****  *********************/
  39:lvgl/src/draw/sw/../../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_DEPTH);
  40:lvgl/src/draw/sw/../../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_16_SWAP);
  41:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  42:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
  43:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Opacity percentages.
  44:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
  45:lvgl/src/draw/sw/../../misc/lv_color.h **** enum {
  46:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  47:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_0      = 0,
  48:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_10     = 25,
  49:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_20     = 51,
  50:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_30     = 76,
  51:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_40     = 102,
  52:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_50     = 127,
  53:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_60     = 153,
  54:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_70     = 178,
  55:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_80     = 204,
  56:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_90     = 229,
  57:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_100    = 255,
  58:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_COVER  = 255,
  59:lvgl/src/draw/sw/../../misc/lv_color.h **** };
  60:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  61:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  62:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  63:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  64:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  65:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  66:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  67:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  68:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  69:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 16
  70:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
  71:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 32
  72:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
  73:lvgl/src/draw/sw/../../misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  74:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  75:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  76:lvgl/src/draw/sw/../../misc/lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  77:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
  78:lvgl/src/draw/sw/../../misc/lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  79:lvgl/src/draw/sw/../../misc/lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  80:lvgl/src/draw/sw/../../misc/lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  81:lvgl/src/draw/sw/../../misc/lv_color.h **** */
  82:lvgl/src/draw/sw/../../misc/lv_color.h **** #ifdef _MSC_VER
  83:lvgl/src/draw/sw/../../misc/lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  84:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  85:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  86:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
  87:lvgl/src/draw/sw/../../misc/lv_color.h **** #if __cplusplus >= 201103L
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 3


  88:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  89:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  90:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  91:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif /*__cplusplus*/
  92:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  93:lvgl/src/draw/sw/../../misc/lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
  94:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
  95:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  96:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  97:lvgl/src/draw/sw/../../misc/lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
  98:lvgl/src/draw/sw/../../misc/lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
  99:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
 100:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 101:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
 102:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 103:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 104:lvgl/src/draw/sw/../../misc/lv_color.h **** /*---------------------------------------
 105:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Macros for all existing color depths
 106:lvgl/src/draw/sw/../../misc/lv_color.h ****  * to set/get values of the color channels
 107:lvgl/src/draw/sw/../../misc/lv_color.h ****  *------------------------------------------*/
 108:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 109:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 110:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 111:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 112:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 113:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 114:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 115:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 116:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 117:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 118:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 119:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 120:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 121:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 122:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 123:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 124:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 125:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 126:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 127:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 128:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 129:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 130:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 131:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 132:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 133:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 134:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 135:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 136:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 137:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 138:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 139:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 140:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 141:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 142:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 143:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 144:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 4


 145:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 146:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 147:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 148:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 149:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 150:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 151:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 152:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 153:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 154:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 155:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 156:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 157:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 158:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 159:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 160:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 161:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 162:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 163:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 164:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 165:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 166:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 167:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 168:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 169:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 170:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 171:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 172:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 173:lvgl/src/draw/sw/../../misc/lv_color.h **** /*---------------------------------------
 174:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Macros for the current color depth
 175:lvgl/src/draw/sw/../../misc/lv_color.h ****  * to set/get values of the color channels
 176:lvgl/src/draw/sw/../../misc/lv_color.h ****  *------------------------------------------*/
 177:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 178:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 179:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 180:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 181:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 182:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 183:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 184:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 185:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 186:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 187:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 188:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 189:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 190:lvgl/src/draw/sw/../../misc/lv_color.h **** /**********************
 191:lvgl/src/draw/sw/../../misc/lv_color.h ****  *      TYPEDEFS
 192:lvgl/src/draw/sw/../../misc/lv_color.h ****  **********************/
 193:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 194:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 195:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 196:lvgl/src/draw/sw/../../misc/lv_color.h ****     union {
 197:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t blue : 1;
 198:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t green : 1;
 199:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t red : 1;
 200:lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 201:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color1_t;
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 5


 202:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 203:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 204:lvgl/src/draw/sw/../../misc/lv_color.h ****     struct {
 205:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t blue : 2;
 206:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t green : 3;
 207:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t red : 3;
 208:lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 209:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t full;
 210:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color8_t;
 211:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 212:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 213:lvgl/src/draw/sw/../../misc/lv_color.h ****     struct {
 214:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 215:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t blue : 5;
 216:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t green : 6;
 217:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t red : 5;
 218:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 219:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t green_h : 3;
 220:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t red : 5;
 221:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t blue : 5;
 222:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t green_l : 3;
 223:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 224:lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 225:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint16_t full;
 226:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color16_t;
 227:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 228:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 229:lvgl/src/draw/sw/../../misc/lv_color.h ****     struct {
 230:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t blue;
 231:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t green;
 232:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t red;
 233:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t alpha;
 234:lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 235:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t full;
 236:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color32_t;
 237:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 238:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 239:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 240:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 241:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef struct {
 242:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint16_t h;
 243:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t s;
 244:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t v;
 245:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color_hsv_t;
 246:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 247:lvgl/src/draw/sw/../../misc/lv_color.h **** //! @cond Doxygen_Suppress
 248:lvgl/src/draw/sw/../../misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 249:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef uint8_t lv_opa_t;
 250:lvgl/src/draw/sw/../../misc/lv_color.h **** //! @endcond
 251:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 252:lvgl/src/draw/sw/../../misc/lv_color.h **** struct _lv_color_filter_dsc_t;
 253:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 254:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 255:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 256:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 257:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_filter_cb_t filter_cb;
 258:lvgl/src/draw/sw/../../misc/lv_color.h ****     void * user_data;
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 6


 259:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color_filter_dsc_t;
 260:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 261:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 262:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef enum {
 263:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_RED,
 264:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_PINK,
 265:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_PURPLE,
 266:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 267:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_INDIGO,
 268:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_BLUE,
 269:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 270:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_CYAN,
 271:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_TEAL,
 272:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_GREEN,
 273:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 274:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_LIME,
 275:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_YELLOW,
 276:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_AMBER,
 277:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_ORANGE,
 278:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 279:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_BROWN,
 280:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_BLUE_GREY,
 281:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_GREY,
 282:lvgl/src/draw/sw/../../misc/lv_color.h ****     _LV_PALETTE_LAST,
 283:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_NONE = 0xff,
 284:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_palette_t;
 285:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 286:lvgl/src/draw/sw/../../misc/lv_color.h **** /**********************
 287:lvgl/src/draw/sw/../../misc/lv_color.h ****  * GLOBAL PROTOTYPES
 288:lvgl/src/draw/sw/../../misc/lv_color.h ****  **********************/
 289:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 290:lvgl/src/draw/sw/../../misc/lv_color.h **** /*In color conversations:
 291:lvgl/src/draw/sw/../../misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 292:lvgl/src/draw/sw/../../misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 293:lvgl/src/draw/sw/../../misc/lv_color.h ****  *         8 bit Red has 3 bits
 294:lvgl/src/draw/sw/../../misc/lv_color.h ****  *        ----------------------
 295:lvgl/src/draw/sw/../../misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 296:lvgl/src/draw/sw/../../misc/lv_color.h ****  *
 297:lvgl/src/draw/sw/../../misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 298:lvgl/src/draw/sw/../../misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 299:lvgl/src/draw/sw/../../misc/lv_color.h ****  *        16 bit Red has 5 bits
 300:lvgl/src/draw/sw/../../misc/lv_color.h ****  *        ----------------------
 301:lvgl/src/draw/sw/../../misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 302:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 303:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 304:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 305:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 306:lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 307:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 308:lvgl/src/draw/sw/../../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 309:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 1;
 310:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 311:lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
 312:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 313:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 314:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 315:lvgl/src/draw/sw/../../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 7


 316:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 1;
 317:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 318:lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
 319:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 320:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 321:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 322:lvgl/src/draw/sw/../../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 323:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 1;
 324:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 325:lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
 326:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 327:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 328:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 329:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 330:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 331:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 332:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 333:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 334:lvgl/src/draw/sw/../../misc/lv_color.h ****     if(color.full == 0)
 335:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 336:lvgl/src/draw/sw/../../misc/lv_color.h ****     else
 337:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFF;
 338:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 339:lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 340:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 341:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color8_t ret;
 342:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 343:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 344:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 345:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 346:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 347:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color8_t ret;
 348:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 349:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 350:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 351:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 352:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 353:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 354:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 355:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 356:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 357:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 358:lvgl/src/draw/sw/../../misc/lv_color.h ****     if(color.full == 0)
 359:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 360:lvgl/src/draw/sw/../../misc/lv_color.h ****     else
 361:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFFFF;
 362:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 363:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color16_t ret;
 364:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 365:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 366:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 367:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 368:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 369:lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 370:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 371:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color16_t ret;
 372:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 8


 373:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 374:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 375:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 376:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 377:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 378:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 379:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 380:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 381:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 382:lvgl/src/draw/sw/../../misc/lv_color.h ****     if(color.full == 0)
 383:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFF000000;
 384:lvgl/src/draw/sw/../../misc/lv_color.h ****     else
 385:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFFFFFFFF;
 386:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 387:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color32_t ret;
 388:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 389:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 390:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 391:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 392:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 393:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 394:lvgl/src/draw/sw/../../misc/lv_color.h ****     /**
 395:lvgl/src/draw/sw/../../misc/lv_color.h ****      * The floating point math for conversion is:
 396:lvgl/src/draw/sw/../../misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 397:lvgl/src/draw/sw/../../misc/lv_color.h ****      * The faster integer math for conversion is:
 398:lvgl/src/draw/sw/../../misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 399:lvgl/src/draw/sw/../../misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 400:lvgl/src/draw/sw/../../misc/lv_color.h ****      *
 401:lvgl/src/draw/sw/../../misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 402:lvgl/src/draw/sw/../../misc/lv_color.h ****      *
 403:lvgl/src/draw/sw/../../misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 404:lvgl/src/draw/sw/../../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 405:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       0           8      7        7       255
 406:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       1          16     14        7       255
 407:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       2          32     28        7       255
 408:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       3          65     25        3       255
 409:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       4         131     19        1       255
 410:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       5         263      7        0       255
 411:lvgl/src/draw/sw/../../misc/lv_color.h ****      *
 412:lvgl/src/draw/sw/../../misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 413:lvgl/src/draw/sw/../../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 414:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       0           4      3        3       255
 415:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       1           8      6        3       255
 416:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       2          16     12        3       255
 417:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       3          32     24        3       255
 418:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       4          64     48        3       255
 419:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       5         129     33        1       255
 420:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       6         259      3        0       255
 421:lvgl/src/draw/sw/../../misc/lv_color.h ****      */
 422:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 423:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color32_t ret;
 424:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 425:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 426:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 427:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 428:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 429:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 9


 430:lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 431:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 432:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 433:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 434:lvgl/src/draw/sw/../../misc/lv_color.h **** //! @cond Doxygen_Suppress
 435:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 436:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 437:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Mix two colors with a given ratio.
 438:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 439:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param c2 the second color to mix (usually the background)
 440:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 441:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @return the mixed color
 442:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 443:lvgl/src/draw/sw/../../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 444:lvgl/src/draw/sw/../../misc/lv_color.h **** {
  29              		.loc 2 444 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 445:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_t ret;
  34              		.loc 2 445 5 view .LVU1
 446:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 447:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_16_SWAP == 0
 448:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Source: https://stackoverflow.com/a/50012418/1999969*/
 449:lvgl/src/draw/sw/../../misc/lv_color.h ****     mix = (mix + 4) >> 3;
  35              		.loc 2 449 5 view .LVU2
  36              		.loc 2 449 16 is_stmt 0 view .LVU3
  37 0000 0432     		adds	r2, r2, #4
  38              	.LVL1:
 450:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
  39              		.loc 2 450 5 is_stmt 1 view .LVU4
  40              		.loc 2 450 19 is_stmt 0 view .LVU5
  41 0002 0B04     		lsls	r3, r1, #16
  42 0004 13FA81F1 		uxtah	r1, r3, r1
  43              	.LVL2:
  44              		.loc 2 450 14 view .LVU6
  45 0008 084B     		ldr	r3, .L2
  46 000a 1940     		ands	r1, r1, r3
  47              	.LVL3:
 451:lvgl/src/draw/sw/../../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 452:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | ((uint32_t)c1.full << 16)) & 0x7E0F81F;
  48              		.loc 2 452 5 is_stmt 1 view .LVU7
  49              		.loc 2 452 19 is_stmt 0 view .LVU8
  50 000c 4FEA004C 		lsl	ip, r0, #16
  51 0010 1CFA80F0 		uxtah	r0, ip, r0
  52              	.LVL4:
  53              		.loc 2 452 14 view .LVU9
  54 0014 1840     		ands	r0, r0, r3
  55              	.LVL5:
 453:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
  56              		.loc 2 453 5 is_stmt 1 view .LVU10
  57              		.loc 2 453 30 is_stmt 0 view .LVU11
  58 0016 401A     		subs	r0, r0, r1
  59              	.LVL6:
  60              		.loc 2 453 36 view .LVU12
  61 0018 D208     		lsrs	r2, r2, #3
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 10


  62              	.LVL7:
  63              		.loc 2 453 36 view .LVU13
  64 001a 00FB02F2 		mul	r2, r0, r2
  65              		.loc 2 453 49 view .LVU14
  66 001e 01EB5211 		add	r1, r1, r2, lsr #5
  67              	.LVL8:
  68              		.loc 2 453 14 view .LVU15
  69 0022 01EA0300 		and	r0, r1, r3
  70              	.LVL9:
 454:lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
  71              		.loc 2 454 5 is_stmt 1 view .LVU16
 455:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 456:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 457:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 458:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 460:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 462:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 464:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 465:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 466:lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 467:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 468:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 469:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret;
  72              		.loc 2 469 5 view .LVU17
 470:lvgl/src/draw/sw/../../misc/lv_color.h **** }
  73              		.loc 2 470 1 is_stmt 0 view .LVU18
  74 0026 40EA1040 		orr	r0, r0, r0, lsr #16
  75              	.LVL10:
  76              		.loc 2 470 1 view .LVU19
  77 002a 7047     		bx	lr
  78              	.L3:
  79              		.align	2
  80              	.L2:
  81 002c 1FF8E007 		.word	132184095
  82              		.cfi_endproc
  83              	.LFE6:
  85              		.section	.text.lv_color_mix_premult,"ax",%progbits
  86              		.align	1
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
  91              	lv_color_mix_premult:
  92              	.LVL11:
  93              	.LFB8:
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 472:lvgl/src/draw/sw/../../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 473:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 474:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 475:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[0] = (uint16_t)LV_COLOR_GET_R(c) * mix;
 476:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 477:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 478:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 479:lvgl/src/draw/sw/../../misc/lv_color.h ****     (void) mix;
 480:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 11


 481:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 482:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 483:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 484:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 485:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 486:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 487:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 488:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 489:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 490:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 491:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 492:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 493:lvgl/src/draw/sw/../../misc/lv_color.h ****  *            Should be modified like mix = `255 - mix`
 494:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @return the mixed color
 495:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @note 255 won't give clearly `c1`.
 496:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 497:lvgl/src/draw/sw/../../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline lv_color_t lv_color_mix_premult(uint16_t * premult_c1, lv_color
 498:lvgl/src/draw/sw/../../misc/lv_color.h **** {
  94              		.loc 2 498 1 is_stmt 1 view -0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 0, uses_anonymous_args = 0
  98              		.loc 2 498 1 is_stmt 0 view .LVU21
  99 0000 00B5     		push	{lr}
 100              	.LCFI0:
 101              		.cfi_def_cfa_offset 4
 102              		.cfi_offset 14, -4
 103 0002 8446     		mov	ip, r0
 499:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_t ret;
 104              		.loc 2 499 5 is_stmt 1 view .LVU22
 500:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 501:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8 or 32*/
 502:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROUND_OF
 105              		.loc 2 502 5 view .LVU23
 106 0004 0388     		ldrh	r3, [r0]
 107 0006 C1F3C420 		ubfx	r0, r1, #11, #5
 108              	.LVL12:
 109              		.loc 2 502 5 is_stmt 0 view .LVU24
 110 000a 02FB0033 		mla	r3, r2, r0, r3
 111 000e 03EB0320 		add	r0, r3, r3, lsl #8
 112 0012 03EBC013 		add	r3, r3, r0, lsl #7
 113 0016 C3F3C453 		ubfx	r3, r3, #23, #5
 114 001a 4FF00000 		mov	r0, #0	@ movhi
 115              	.LVL13:
 116              		.loc 2 502 5 view .LVU25
 117 001e 63F3CF20 		bfi	r0, r3, #11, #5
 118              	.LVL14:
 503:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 119              		.loc 2 503 5 is_stmt 1 view .LVU26
 120 0022 BCF80230 		ldrh	r3, [ip, #2]
 121 0026 C1F3451E 		ubfx	lr, r1, #5, #6
 122 002a 0EFB0233 		mla	r3, lr, r2, r3
 123 002e 03EB032E 		add	lr, r3, r3, lsl #8
 124 0032 03EBCE13 		add	r3, r3, lr, lsl #7
 125 0036 C3F3C553 		ubfx	r3, r3, #23, #6
 126 003a 63F34A10 		bfi	r0, r3, #5, #6
 504:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 12


 127              		.loc 2 504 5 view .LVU27
 128 003e BCF80430 		ldrh	r3, [ip, #4]
 129 0042 01F01F01 		and	r1, r1, #31
 130              	.LVL15:
 131              		.loc 2 504 5 is_stmt 0 view .LVU28
 132 0046 01FB0232 		mla	r2, r1, r2, r3
 133              	.LVL16:
 134              		.loc 2 504 5 view .LVU29
 135 004a 02EB0223 		add	r3, r2, r2, lsl #8
 136 004e 02EBC312 		add	r2, r2, r3, lsl #7
 137 0052 C2F3C452 		ubfx	r2, r2, #23, #5
 138 0056 62F30400 		bfi	r0, r2, #0, #5
 505:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 139              		.loc 2 505 5 is_stmt 1 view .LVU30
 140              		.loc 2 505 5 view .LVU31
 141              		.loc 2 505 5 view .LVU32
 506:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 507:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 508:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Restore color1*/
 509:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_t c1;
 510:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
 511:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 512:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 513:lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
 514:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 515:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 516:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret;
 142              		.loc 2 516 5 view .LVU33
 143              	.LVL17:
 517:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 144              		.loc 2 517 1 is_stmt 0 view .LVU34
 145 005a 5DF804FB 		ldr	pc, [sp], #4
 146              		.cfi_endproc
 147              	.LFE8:
 149              		.section	.text.fill_blended,"ax",%progbits
 150              		.align	1
 151              		.syntax unified
 152              		.thumb
 153              		.thumb_func
 155              	fill_blended:
 156              	.LVL18:
 157              	.LFB160:
   1:lvgl/src/draw/sw/lv_draw_sw_blend.c **** /**
   2:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  * @file lv_draw_sw_blend.c
   3:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *
   4:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  */
   5:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
   6:lvgl/src/draw/sw/lv_draw_sw_blend.c **** /*********************
   7:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *      INCLUDES
   8:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *********************/
   9:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #include "lv_draw_sw.h"
  10:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #include "../../misc/lv_math.h"
  11:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #include "../../hal/lv_hal_disp.h"
  12:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #include "../../core/lv_refr.h"
  13:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  14:lvgl/src/draw/sw/lv_draw_sw_blend.c **** /*********************
  15:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *      DEFINES
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 13


  16:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *********************/
  17:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  18:lvgl/src/draw/sw/lv_draw_sw_blend.c **** /**********************
  19:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *      TYPEDEFS
  20:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  **********************/
  21:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  22:lvgl/src/draw/sw/lv_draw_sw_blend.c **** /**********************
  23:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *  STATIC PROTOTYPES
  24:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  **********************/
  25:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  26:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void fill_set_px(lv_color_t * dest_buf, const lv_area_t * blend_area, lv_coord_t dest_stride
  27:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         lv_color_t color, lv_opa_t opa, const lv_opa_t * mask, lv_coord_t mask_stid
  28:lvgl/src/draw/sw/lv_draw_sw_blend.c **** LV_ATTRIBUTE_FAST_MEM static void fill_normal(lv_color_t * dest_buf, const lv_area_t * dest_area,
  29:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                               lv_coord_t dest_stride, lv_color_t color, lv_opa_t op
  30:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_DRAW_COMPLEX
  31:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void fill_blended(lv_color_t * dest_buf, const lv_area_t * dest_area, lv_coord_t dest_stride
  32:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                          lv_opa_t opa, const lv_opa_t * mask, lv_coord_t mask_stride, lv_blend_mode
  33:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif  /*LV_DRAW_COMPLEX*/
  34:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  35:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void map_set_px(lv_color_t * dest_buf, const lv_area_t * dest_area, lv_coord_t dest_stride,
  36:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                        const lv_color_t * src_buf, lv_coord_t src_stride, lv_opa_t opa, const lv_op
  37:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  38:lvgl/src/draw/sw/lv_draw_sw_blend.c **** LV_ATTRIBUTE_FAST_MEM static void map_normal(lv_color_t * dest_buf, const lv_area_t * dest_area, lv
  39:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                              const lv_color_t * src_buf, lv_coord_t src_stride, lv_
  40:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  41:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_DRAW_COMPLEX
  42:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void map_blended(lv_color_t * dest_buf, const lv_area_t * dest_area, lv_coord_t dest_stride,
  43:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         const lv_color_t * src_buf, lv_coord_t src_stride, lv_opa_t opa,
  44:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         const lv_opa_t * mask, lv_coord_t mask_stride, lv_blend_mode_t blend_mode);
  45:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  46:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static inline lv_color_t color_blend_true_color_additive(lv_color_t fg, lv_color_t bg, lv_opa_t opa
  47:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static inline lv_color_t color_blend_true_color_subtractive(lv_color_t fg, lv_color_t bg, lv_opa_t 
  48:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static inline lv_color_t color_blend_true_color_multiply(lv_color_t fg, lv_color_t bg, lv_opa_t opa
  49:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif /*LV_DRAW_COMPLEX*/
  50:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  51:lvgl/src/draw/sw/lv_draw_sw_blend.c **** /**********************
  52:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *  STATIC VARIABLES
  53:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  **********************/
  54:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  55:lvgl/src/draw/sw/lv_draw_sw_blend.c **** /**********************
  56:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *      MACROS
  57:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  **********************/
  58:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP == 0
  59:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #define FILL_NORMAL_MASK_PX(color)                                                          \
  60:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(*mask == LV_OPA_COVER) *dest_buf = color;                                 \
  61:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else *dest_buf = lv_color_mix(color, *dest_buf, *mask);            \
  62:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     mask++;                                                         \
  63:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     dest_buf++;
  64:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  65:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #else
  66:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #define FILL_NORMAL_MASK_PX(color)                                               \
  67:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(*mask == LV_OPA_COVER) *dest_buf = color;                                 \
  68:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else if(disp->driver->screen_transp) lv_color_mix_with_alpha(*dest_buf, dest_buf->ch.alpha, col
  69:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else *dest_buf = lv_color_mix(color, *dest_buf, *mask);            \
  70:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     mask++;                                                         \
  71:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     dest_buf++;
  72:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 14


  73:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  74:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #define MAP_NORMAL_MASK_PX(x)                                                          \
  75:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(*mask_tmp_x) {          \
  76:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(*mask_tmp_x == LV_OPA_COVER) dest_buf[x] = src_buf[x];                                 \
  77:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], *mask_tmp_x);            \
  78:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }                                                                                              
  79:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     mask_tmp_x++;
  80:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  81:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #define MAP_NORMAL_MASK_PX_SCR_TRANSP(x)                        \
  82:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(*mask_tmp_x) {          \
  83:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(*mask_tmp_x == LV_OPA_COVER) dest_buf[x] = src_buf[x];                                 \
  84:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else if(disp->driver->screen_transp) lv_color_mix_with_alpha(dest_buf[x], dest_buf[x].ch.al
  85:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                                          src_buf[x], *mask_tmp_x, &
  86:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], *mask_tmp_x);            \
  87:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }                                                                                              
  88:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     mask_tmp_x++;
  89:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  90:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  91:lvgl/src/draw/sw/lv_draw_sw_blend.c **** /**********************
  92:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *   GLOBAL FUNCTIONS
  93:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  **********************/
  94:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  95:lvgl/src/draw/sw/lv_draw_sw_blend.c **** void lv_draw_sw_blend(lv_draw_ctx_t * draw_ctx, const lv_draw_sw_blend_dsc_t * dsc)
  96:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
  97:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Do not draw transparent things*/
  98:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(dsc->opa <= LV_OPA_MIN) return;
  99:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 100:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_area_t blend_area;
 101:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(!_lv_area_intersect(&blend_area, dsc->blend_area, draw_ctx->clip_area)) return;
 102:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 103:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(draw_ctx->wait_for_finish) draw_ctx->wait_for_finish(draw_ctx);
 104:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 105:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     ((lv_draw_sw_ctx_t *)draw_ctx)->blend(draw_ctx, dsc);
 106:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 107:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 108:lvgl/src/draw/sw/lv_draw_sw_blend.c **** LV_ATTRIBUTE_FAST_MEM void lv_draw_sw_blend_basic(lv_draw_ctx_t * draw_ctx, const lv_draw_sw_blend_
 109:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 110:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     const lv_opa_t * mask;
 111:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(dsc->mask_buf == NULL) mask = NULL;
 112:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(dsc->mask_buf && dsc->mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 113:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else if(dsc->mask_res == LV_DRAW_MASK_RES_FULL_COVER) mask = NULL;
 114:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else mask = dsc->mask_buf;
 115:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 116:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_coord_t dest_stride = lv_area_get_width(draw_ctx->buf_area);
 117:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 118:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_area_t blend_area;
 119:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(!_lv_area_intersect(&blend_area, dsc->blend_area, draw_ctx->clip_area)) return;
 120:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 121:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 122:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t * dest_buf = draw_ctx->buf;
 123:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(disp->driver->set_px_cb == NULL) {
 124:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         dest_buf += dest_stride * (blend_area.y1 - draw_ctx->buf_area->y1) + (blend_area.x1 - draw_
 125:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 126:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 127:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     const lv_color_t * src_buf = dsc->src_buf;
 128:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_coord_t src_stride;
 129:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(src_buf) {
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 15


 130:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         src_stride = lv_area_get_width(dsc->blend_area);
 131:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         src_buf += src_stride * (blend_area.y1 - dsc->blend_area->y1) + (blend_area.x1 - dsc->blend
 132:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 133:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 134:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         src_stride = 0;
 135:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 136:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 137:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_coord_t mask_stride;
 138:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask) {
 139:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         mask_stride = lv_area_get_width(dsc->mask_area);
 140:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         mask += mask_stride * (dsc->mask_area->y1 - blend_area.y1) + (dsc->mask_area->x1 - blend_ar
 141:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 142:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 143:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         mask_stride = 0;
 144:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 145:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 146:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_area_move(&blend_area, -draw_ctx->buf_area->x1, -draw_ctx->buf_area->y1);
 147:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 148:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 149:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(disp->driver->set_px_cb) {
 150:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
 151:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_set_px(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_stride
 152:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 153:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 154:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             map_set_px(dest_buf, &blend_area, dest_stride, src_buf, src_stride, dsc->opa, mask, mas
 155:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 156:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 157:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else if(dsc->src_buf == NULL) {
 158:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->blend_mode == LV_BLEND_MODE_NORMAL) {
 159:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_normal(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_stride
 160:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 161:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_DRAW_COMPLEX
 162:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 163:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_blended(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_strid
 164:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 165:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 166:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 167:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 168:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->blend_mode == LV_BLEND_MODE_NORMAL) {
 169:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             map_normal(dest_buf, &blend_area, dest_stride, src_buf, src_stride, dsc->opa, mask, mas
 170:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 171:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_DRAW_COMPLEX
 172:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 173:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             map_blended(dest_buf, &blend_area, dest_stride, src_buf, src_stride, dsc->opa, mask, ma
 174:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 175:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 176:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 177:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 178:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 179:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 180:lvgl/src/draw/sw/lv_draw_sw_blend.c **** /**********************
 181:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *   STATIC FUNCTIONS
 182:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  **********************/
 183:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 184:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void fill_set_px(lv_color_t * dest_buf, const lv_area_t * blend_area, lv_coord_t dest_stride
 185:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         lv_color_t color, lv_opa_t opa, const lv_opa_t * mask, lv_coord_t mask_stid
 186:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 16


 187:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 188:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 189:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t x;
 190:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 191:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 192:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask == NULL) {
 193:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = blend_area->y1; y <= blend_area->y2; y++) {
 194:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 195:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, x, y, color, o
 196:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 197:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 198:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 199:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 200:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         int32_t w = lv_area_get_width(blend_area);
 201:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         int32_t h = lv_area_get_height(blend_area);
 202:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 203:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 204:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 205:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 206:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, blend_area
 207:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 208:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 209:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 210:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             mask += mask_stide;
 211:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 212:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 213:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 214:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 215:lvgl/src/draw/sw/lv_draw_sw_blend.c **** LV_ATTRIBUTE_FAST_MEM static void fill_normal(lv_color_t * dest_buf, const lv_area_t * dest_area,
 216:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                               lv_coord_t dest_stride, lv_color_t color, lv_opa_t op
 217:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 218:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 219:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 220:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 221:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 222:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t x;
 223:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 224:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 225:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*No mask*/
 226:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask == NULL) {
 227:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 228:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 229:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_color_fill(dest_buf, color, w);
 230:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 231:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 232:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 233:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Has opacity*/
 234:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 235:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_color_t last_dest_color = lv_color_black();
 236:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_color_t last_res_color = lv_color_mix(color, last_dest_color, opa);
 237:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 238:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             uint16_t color_premult[3];
 239:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_color_premult(color, opa, color_premult);
 240:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_opa_t opa_inv = 255 - opa;
 241:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 242:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 243:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 17


 244:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(last_dest_color.full != dest_buf[x].full) {
 245:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         last_dest_color = dest_buf[x];
 246:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 247:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 248:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(disp->driver->screen_transp) {
 249:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             lv_color_mix_with_alpha(dest_buf[x], dest_buf[x].ch.alpha, color, opa, 
 250:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                     &last_res_color.ch.alpha);
 251:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 252:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         else
 253:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #else
 254:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         LV_UNUSED(disp);
 255:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 256:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         {
 257:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             last_res_color = lv_color_mix_premult(color_premult, dest_buf[x], opa_i
 258:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 259:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 260:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf[x] = last_res_color;
 261:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 262:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 263:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 264:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 265:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 266:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Masked*/
 267:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 268:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 16
 269:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         uint32_t c32 = color.full + ((uint32_t)color.full << 16);
 270:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 271:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Only the mask matters*/
 272:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 273:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t x_end4 = w - 4;
 274:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 275:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 276:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 277:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 278:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 279:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(; x <= x_end4; x += 4) {
 280:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     uint32_t mask32 = *((uint32_t *)mask);
 281:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(mask32 == 0xFFFFFFFF) {
 282:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 16
 283:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if((lv_uintptr_t)dest_buf & 0x3) {
 284:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *(dest_buf + 0) = color;
 285:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             uint32_t * d = (uint32_t *)(dest_buf + 1);
 286:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *d = c32;
 287:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *(dest_buf + 3) = color;
 288:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 289:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         else {
 290:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             uint32_t * d = (uint32_t *)dest_buf;
 291:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *d = c32;
 292:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *(d + 1) = c32;
 293:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 294:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #else
 295:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[0] = color;
 296:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[1] = color;
 297:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[2] = color;
 298:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[3] = color;
 299:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 300:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf += 4;
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 18


 301:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         mask += 4;
 302:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 303:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     else if(mask32) {
 304:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 305:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 306:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 307:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 308:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 309:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     else {
 310:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         mask += 4;
 311:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf += 4;
 312:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 313:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 314:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 315:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(; x < w ; x++) {
 316:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 317:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 318:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += (dest_stride - w);
 319:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += (mask_stride - w);
 320:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 321:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 322:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*With opacity*/
 323:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 324:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             /*Buffer the result color to avoid recalculating the same color*/
 325:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_color_t last_dest_color;
 326:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_color_t last_res_color;
 327:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_opa_t last_mask = LV_OPA_TRANSP;
 328:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             last_dest_color.full = dest_buf[0].full;
 329:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             last_res_color.full = dest_buf[0].full;
 330:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_opa_t opa_tmp = LV_OPA_TRANSP;
 331:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 332:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 333:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 334:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask) {
 335:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(*mask != last_mask) opa_tmp = *mask == LV_OPA_COVER ? opa :
 336:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                              (uint32_t)((uint32_t)(*mask) * opa) >>
 337:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(*mask != last_mask || last_dest_color.full != dest_buf[x].full) {
 338:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 339:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             if(disp->driver->screen_transp) {
 340:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                 lv_color_mix_with_alpha(dest_buf[x], dest_buf[x].ch.alpha, color, o
 341:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                         &last_res_color.ch.alpha);
 342:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             }
 343:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             else
 344:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 345:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             {
 346:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                 if(opa_tmp == LV_OPA_COVER) last_res_color = color;
 347:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                 else last_res_color = lv_color_mix(color, dest_buf[x], opa_tmp);
 348:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             }
 349:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             last_mask = *mask;
 350:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             last_dest_color.full = dest_buf[x].full;
 351:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 352:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[x] = last_res_color;
 353:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 354:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     mask++;
 355:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 356:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 357:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += (mask_stride - w);
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 19


 358:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 359:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 360:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 361:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 362:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 363:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_DRAW_COMPLEX
 364:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void fill_blended(lv_color_t * dest_buf, const lv_area_t * dest_area,
 365:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                          lv_coord_t dest_stride, lv_color_t color, lv_opa_t opa, const lv_opa_t * m
 366:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                          lv_blend_mode_t blend_mode)
 367:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 158              		.loc 1 367 1 is_stmt 1 view -0
 159              		.cfi_startproc
 160              		@ args = 16, pretend = 0, frame = 24
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		.loc 1 367 1 is_stmt 0 view .LVU36
 163 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 164              	.LCFI1:
 165              		.cfi_def_cfa_offset 36
 166              		.cfi_offset 4, -36
 167              		.cfi_offset 5, -32
 168              		.cfi_offset 6, -28
 169              		.cfi_offset 7, -24
 170              		.cfi_offset 8, -20
 171              		.cfi_offset 9, -16
 172              		.cfi_offset 10, -12
 173              		.cfi_offset 11, -8
 174              		.cfi_offset 14, -4
 175 0004 87B0     		sub	sp, sp, #28
 176              	.LCFI2:
 177              		.cfi_def_cfa_offset 64
 178 0006 0546     		mov	r5, r0
 179 0008 0392     		str	r2, [sp, #12]
 180 000a 9946     		mov	r9, r3	@ movhi
 181              	.LVL19:
 182              		.loc 1 367 1 view .LVU37
 183 000c 9DF84030 		ldrb	r3, [sp, #64]	@ zero_extendqisi2
 184 0010 0193     		str	r3, [sp, #4]
 185 0012 119F     		ldr	r7, [sp, #68]
 186 0014 BDF94830 		ldrsh	r3, [sp, #72]
 187 0018 0593     		str	r3, [sp, #20]
 188 001a 9DF84C20 		ldrb	r2, [sp, #76]	@ zero_extendqisi2
 189              	.LVL20:
 368:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 369:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 190              		.loc 1 369 5 is_stmt 1 view .LVU38
 191              	.LBB54:
 192              	.LBI54:
 193              		.file 3 "lvgl/src/draw/sw/../../misc/lv_area.h"
   1:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
   2:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @file lv_area.h
   3:lvgl/src/draw/sw/../../misc/lv_area.h ****  *
   4:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
   5:lvgl/src/draw/sw/../../misc/lv_area.h **** 
   6:lvgl/src/draw/sw/../../misc/lv_area.h **** #ifndef LV_AREA_H
   7:lvgl/src/draw/sw/../../misc/lv_area.h **** #define LV_AREA_H
   8:lvgl/src/draw/sw/../../misc/lv_area.h **** 
   9:lvgl/src/draw/sw/../../misc/lv_area.h **** #ifdef __cplusplus
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 20


  10:lvgl/src/draw/sw/../../misc/lv_area.h **** extern "C" {
  11:lvgl/src/draw/sw/../../misc/lv_area.h **** #endif
  12:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  13:lvgl/src/draw/sw/../../misc/lv_area.h **** /*********************
  14:lvgl/src/draw/sw/../../misc/lv_area.h ****  *      INCLUDES
  15:lvgl/src/draw/sw/../../misc/lv_area.h ****  *********************/
  16:lvgl/src/draw/sw/../../misc/lv_area.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/draw/sw/../../misc/lv_area.h **** #include <stdbool.h>
  18:lvgl/src/draw/sw/../../misc/lv_area.h **** #include <stdint.h>
  19:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  20:lvgl/src/draw/sw/../../misc/lv_area.h **** /*********************
  21:lvgl/src/draw/sw/../../misc/lv_area.h ****  *      DEFINES
  22:lvgl/src/draw/sw/../../misc/lv_area.h ****  *********************/
  23:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  24:lvgl/src/draw/sw/../../misc/lv_area.h **** #if LV_USE_LARGE_COORD
  25:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef int32_t lv_coord_t;
  26:lvgl/src/draw/sw/../../misc/lv_area.h **** #else
  27:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef int16_t lv_coord_t;
  28:lvgl/src/draw/sw/../../misc/lv_area.h **** #endif
  29:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  30:lvgl/src/draw/sw/../../misc/lv_area.h **** /**********************
  31:lvgl/src/draw/sw/../../misc/lv_area.h ****  *      TYPEDEFS
  32:lvgl/src/draw/sw/../../misc/lv_area.h ****  **********************/
  33:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  34:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
  35:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Represents a point on the screen.
  36:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
  37:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef struct {
  38:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t x;
  39:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t y;
  40:lvgl/src/draw/sw/../../misc/lv_area.h **** } lv_point_t;
  41:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  42:lvgl/src/draw/sw/../../misc/lv_area.h **** /** Represents an area of the screen.*/
  43:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef struct {
  44:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t x1;
  45:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t y1;
  46:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t x2;
  47:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t y2;
  48:lvgl/src/draw/sw/../../misc/lv_area.h **** } lv_area_t;
  49:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  50:lvgl/src/draw/sw/../../misc/lv_area.h **** /** Alignments*/
  51:lvgl/src/draw/sw/../../misc/lv_area.h **** enum {
  52:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_DEFAULT = 0,
  53:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_TOP_LEFT,
  54:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_TOP_MID,
  55:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_TOP_RIGHT,
  56:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_BOTTOM_LEFT,
  57:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_BOTTOM_MID,
  58:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_BOTTOM_RIGHT,
  59:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_LEFT_MID,
  60:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_RIGHT_MID,
  61:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_CENTER,
  62:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  63:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  64:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  65:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  66:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 21


  67:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  68:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  69:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  70:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  71:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  72:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  73:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  74:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  75:lvgl/src/draw/sw/../../misc/lv_area.h **** };
  76:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef uint8_t lv_align_t;
  77:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  78:lvgl/src/draw/sw/../../misc/lv_area.h **** enum {
  79:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_NONE     = 0x00,
  80:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_LEFT     = (1 << 0),
  81:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_RIGHT    = (1 << 1),
  82:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_TOP      = (1 << 2),
  83:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_BOTTOM   = (1 << 3),
  84:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_HOR      = LV_DIR_LEFT | LV_DIR_RIGHT,
  85:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_VER      = LV_DIR_TOP | LV_DIR_BOTTOM,
  86:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_ALL      = LV_DIR_HOR | LV_DIR_VER,
  87:lvgl/src/draw/sw/../../misc/lv_area.h **** };
  88:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  89:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef uint8_t lv_dir_t;
  90:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  91:lvgl/src/draw/sw/../../misc/lv_area.h **** /**********************
  92:lvgl/src/draw/sw/../../misc/lv_area.h ****  * GLOBAL PROTOTYPES
  93:lvgl/src/draw/sw/../../misc/lv_area.h ****  **********************/
  94:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  95:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
  96:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Initialize an area
  97:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param area_p pointer to an area
  98:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param x1 left coordinate of the area
  99:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param y1 top coordinate of the area
 100:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param x2 right coordinate of the area
 101:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param y2 bottom coordinate of the area
 102:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
 103:lvgl/src/draw/sw/../../misc/lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
 104:lvgl/src/draw/sw/../../misc/lv_area.h **** 
 105:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
 106:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Copy an area
 107:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param dest pointer to the destination area
 108:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param src pointer to the source area
 109:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
 110:lvgl/src/draw/sw/../../misc/lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
 111:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 112:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->x1 = src->x1;
 113:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y1 = src->y1;
 114:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->x2 = src->x2;
 115:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y2 = src->y2;
 116:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 117:lvgl/src/draw/sw/../../misc/lv_area.h **** 
 118:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
 119:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Get the width of an area
 120:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param area_p pointer to an area
 121:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @return the width of the area (if x1 == x2 -> width = 1)
 122:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 22


 194              		.loc 3 123 26 view .LVU39
 195              	.LBB55:
 124:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 125:lvgl/src/draw/sw/../../misc/lv_area.h ****     return (lv_coord_t)(area_p->x2 - area_p->x1 + 1);
 196              		.loc 3 125 5 view .LVU40
 197              		.loc 3 125 31 is_stmt 0 view .LVU41
 198 001e B1F80480 		ldrh	r8, [r1, #4]
 199              		.loc 3 125 44 view .LVU42
 200 0022 0B88     		ldrh	r3, [r1]
 201              		.loc 3 125 36 view .LVU43
 202 0024 A8EB0308 		sub	r8, r8, r3
 203 0028 1FFA88F8 		uxth	r8, r8
 204              		.loc 3 125 49 view .LVU44
 205 002c 08F10108 		add	r8, r8, #1
 206              		.loc 3 125 12 view .LVU45
 207 0030 0FFA88F8 		sxth	r8, r8
 208              	.LVL21:
 209              		.loc 3 125 12 view .LVU46
 210              	.LBE55:
 211              	.LBE54:
 370:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 212              		.loc 1 370 5 is_stmt 1 view .LVU47
 213              	.LBB56:
 214              	.LBI56:
 126:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 127:lvgl/src/draw/sw/../../misc/lv_area.h **** 
 128:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
 129:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Get the height of an area
 130:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param area_p pointer to an area
 131:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @return the height of the area (if y1 == y2 -> height = 1)
 132:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
 133:lvgl/src/draw/sw/../../misc/lv_area.h **** static inline lv_coord_t lv_area_get_height(const lv_area_t * area_p)
 215              		.loc 3 133 26 view .LVU48
 216              	.LBB57:
 134:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 135:lvgl/src/draw/sw/../../misc/lv_area.h ****     return (lv_coord_t)(area_p->y2 - area_p->y1 + 1);
 217              		.loc 3 135 5 view .LVU49
 218              		.loc 3 135 31 is_stmt 0 view .LVU50
 219 0034 CB88     		ldrh	r3, [r1, #6]
 220              		.loc 3 135 44 view .LVU51
 221 0036 4988     		ldrh	r1, [r1, #2]
 222              	.LVL22:
 223              		.loc 3 135 36 view .LVU52
 224 0038 5B1A     		subs	r3, r3, r1
 225 003a 9BB2     		uxth	r3, r3
 226              		.loc 3 135 49 view .LVU53
 227 003c 0133     		adds	r3, r3, #1
 228              		.loc 3 135 12 view .LVU54
 229 003e 0FFA83FB 		sxth	fp, r3
 230              	.LVL23:
 231              		.loc 3 135 12 view .LVU55
 232              	.LBE57:
 233              	.LBE56:
 371:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 372:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t x;
 234              		.loc 1 372 5 is_stmt 1 view .LVU56
 373:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 23


 235              		.loc 1 373 5 view .LVU57
 374:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 375:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t (*blend_fp)(lv_color_t, lv_color_t, lv_opa_t);
 236              		.loc 1 375 5 view .LVU58
 376:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     switch(blend_mode) {
 237              		.loc 1 376 5 view .LVU59
 238 0042 022A     		cmp	r2, #2
 239 0044 10D0     		beq	.L22
 240 0046 032A     		cmp	r2, #3
 241 0048 11D0     		beq	.L23
 242 004a 012A     		cmp	r2, #1
 243 004c 7DD1     		bne	.L6
 244 004e DFF800A1 		ldr	r10, .L33
 245              	.L7:
 246              	.LVL24:
 377:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_ADDITIVE:
 378:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_additive;
 379:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 380:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_SUBTRACTIVE:
 381:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_subtractive;
 382:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 383:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_MULTIPLY:
 384:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_multiply;
 385:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 386:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         default:
 387:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             LV_LOG_WARN("fill_blended: unsupported blend mode");
 388:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             return;
 389:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 390:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 391:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 392:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask == NULL) {
 247              		.loc 1 392 5 view .LVU60
 248              		.loc 1 392 7 is_stmt 0 view .LVU61
 249 0052 7FB1     		cbz	r7, .L29
 250              	.LBB58:
 393:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_dest_color = dest_buf[0];
 394:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(color, dest_buf[0], opa);
 395:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 396:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 397:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_dest_color.full != dest_buf[x].full) {
 398:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 399:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_res_color = blend_fp(color, dest_buf[x], opa);
 400:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 401:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf[x] = last_res_color;
 402:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 403:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf += dest_stride;
 404:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 405:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 406:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Masked*/
 407:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 408:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Buffer the result color to avoid recalculating the same color*/
 409:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_dest_color;
 251              		.loc 1 409 9 is_stmt 1 view .LVU62
 410:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color;
 252              		.loc 1 410 9 view .LVU63
 411:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_opa_t last_mask = LV_OPA_TRANSP;
 253              		.loc 1 411 9 view .LVU64
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 24


 254              	.LVL25:
 412:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_dest_color = dest_buf[0];
 255              		.loc 1 412 9 view .LVU65
 256              		.loc 1 412 25 is_stmt 0 view .LVU66
 257 0054 2B88     		ldrh	r3, [r5]
 258              	.LVL26:
 259              		.loc 1 412 25 view .LVU67
 260 0056 1946     		mov	r1, r3	@ movhi
 413:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_opa_t opa_tmp = mask[0] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask[0] * opa) >> 8;
 261              		.loc 1 413 9 is_stmt 1 view .LVU68
 262              		.loc 1 413 32 is_stmt 0 view .LVU69
 263 0058 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 264              	.LVL27:
 265              		.loc 1 413 18 view .LVU70
 266 005a FC2B     		cmp	r3, #252
 267 005c 37D8     		bhi	.L25
 268              		.loc 1 413 58 discriminator 1 view .LVU71
 269 005e 019A     		ldr	r2, [sp, #4]
 270 0060 02FB03F3 		mul	r3, r2, r3
 271              		.loc 1 413 18 discriminator 1 view .LVU72
 272 0064 1A0A     		lsrs	r2, r3, #8
 273 0066 33E0     		b	.L14
 274              	.LVL28:
 275              	.L22:
 276              		.loc 1 413 18 discriminator 1 view .LVU73
 277              	.LBE58:
 381:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 278              		.loc 1 381 22 view .LVU74
 279 0068 DFF8E8A0 		ldr	r10, .L33+4
 280 006c F1E7     		b	.L7
 281              	.L23:
 384:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 282              		.loc 1 384 22 view .LVU75
 283 006e DFF8E8A0 		ldr	r10, .L33+8
 284 0072 EEE7     		b	.L7
 285              	.LVL29:
 286              	.L29:
 287              	.LBB59:
 393:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(color, dest_buf[0], opa);
 288              		.loc 1 393 9 is_stmt 1 view .LVU76
 393:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(color, dest_buf[0], opa);
 289              		.loc 1 393 20 is_stmt 0 view .LVU77
 290 0074 2E88     		ldrh	r6, [r5]
 394:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 291              		.loc 1 394 9 is_stmt 1 view .LVU78
 394:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 292              		.loc 1 394 37 is_stmt 0 view .LVU79
 293 0076 019C     		ldr	r4, [sp, #4]
 294 0078 2246     		mov	r2, r4
 295              	.LVL30:
 394:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 296              		.loc 1 394 37 view .LVU80
 297 007a 3146     		mov	r1, r6	@ movhi
 298              	.LVL31:
 394:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 299              		.loc 1 394 37 view .LVU81
 300 007c 4846     		mov	r0, r9	@ movhi
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 25


 301              	.LVL32:
 394:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 302              		.loc 1 394 37 view .LVU82
 303 007e D047     		blx	r10
 304              	.LVL33:
 395:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 305              		.loc 1 395 9 is_stmt 1 view .LVU83
 395:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 306              		.loc 1 395 9 is_stmt 0 view .LVU84
 307 0080 CDF808B0 		str	fp, [sp, #8]
 308 0084 BB46     		mov	fp, r7
 309              	.LVL34:
 395:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 310              		.loc 1 395 9 view .LVU85
 311 0086 5746     		mov	r7, r10
 312 0088 A246     		mov	r10, r4
 313              	.LVL35:
 395:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 314              		.loc 1 395 9 view .LVU86
 315 008a 19E0     		b	.L10
 316              	.LVL36:
 317              	.L11:
 401:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 318              		.loc 1 401 17 is_stmt 1 view .LVU87
 401:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 319              		.loc 1 401 29 is_stmt 0 view .LVU88
 320 008c ABF80000 		strh	r0, [fp]	@ movhi
 396:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_dest_color.full != dest_buf[x].full) {
 321              		.loc 1 396 32 is_stmt 1 discriminator 2 view .LVU89
 322 0090 0134     		adds	r4, r4, #1
 323              	.LVL37:
 324              	.L13:
 396:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_dest_color.full != dest_buf[x].full) {
 325              		.loc 1 396 26 discriminator 1 view .LVU90
 326 0092 4445     		cmp	r4, r8
 327 0094 0DDA     		bge	.L30
 397:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 328              		.loc 1 397 17 view .LVU91
 397:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 329              		.loc 1 397 35 is_stmt 0 view .LVU92
 330 0096 B3B2     		uxth	r3, r6
 397:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 331              		.loc 1 397 52 view .LVU93
 332 0098 05EB440B 		add	fp, r5, r4, lsl #1
 397:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 333              		.loc 1 397 55 view .LVU94
 334 009c 35F81420 		ldrh	r2, [r5, r4, lsl #1]
 397:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 335              		.loc 1 397 19 view .LVU95
 336 00a0 9342     		cmp	r3, r2
 337 00a2 F3D0     		beq	.L11
 398:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_res_color = blend_fp(color, dest_buf[x], opa);
 338              		.loc 1 398 21 is_stmt 1 view .LVU96
 398:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_res_color = blend_fp(color, dest_buf[x], opa);
 339              		.loc 1 398 37 is_stmt 0 view .LVU97
 340 00a4 35F81460 		ldrh	r6, [r5, r4, lsl #1]
 341              	.LVL38:
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 26


 399:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 342              		.loc 1 399 21 is_stmt 1 view .LVU98
 399:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 343              		.loc 1 399 38 is_stmt 0 view .LVU99
 344 00a8 5246     		mov	r2, r10
 345              	.LVL39:
 399:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 346              		.loc 1 399 38 view .LVU100
 347 00aa 3146     		mov	r1, r6	@ movhi
 348 00ac 4846     		mov	r0, r9	@ movhi
 349              	.LVL40:
 399:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 350              		.loc 1 399 38 view .LVU101
 351 00ae B847     		blx	r7
 352              	.LVL41:
 353 00b0 ECE7     		b	.L11
 354              	.LVL42:
 355              	.L30:
 403:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 356              		.loc 1 403 22 view .LVU102
 357 00b2 DDF804B0 		ldr	fp, [sp, #4]
 403:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 358              		.loc 1 403 13 is_stmt 1 view .LVU103
 403:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 359              		.loc 1 403 22 is_stmt 0 view .LVU104
 360 00b6 039B     		ldr	r3, [sp, #12]
 361 00b8 05EB4305 		add	r5, r5, r3, lsl #1
 362              	.LVL43:
 395:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 363              		.loc 1 395 28 is_stmt 1 discriminator 2 view .LVU105
 364 00bc 0BF1010B 		add	fp, fp, #1
 365              	.LVL44:
 366              	.L10:
 395:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 367              		.loc 1 395 22 discriminator 1 view .LVU106
 368 00c0 029B     		ldr	r3, [sp, #8]
 369 00c2 9B45     		cmp	fp, r3
 370 00c4 41DA     		bge	.L6
 396:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_dest_color.full != dest_buf[x].full) {
 371              		.loc 1 396 19 is_stmt 0 view .LVU107
 372 00c6 0024     		movs	r4, #0
 373 00c8 CDF804B0 		str	fp, [sp, #4]
 374 00cc E1E7     		b	.L13
 375              	.LVL45:
 376              	.L25:
 396:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_dest_color.full != dest_buf[x].full) {
 377              		.loc 1 396 19 view .LVU108
 378              	.LBE59:
 379              	.LBB60:
 380              		.loc 1 413 18 discriminator 2 view .LVU109
 381 00ce 019A     		ldr	r2, [sp, #4]
 382              	.L14:
 383              	.LVL46:
 414:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_res_color = blend_fp(color, last_dest_color, opa_tmp);
 384              		.loc 1 414 9 is_stmt 1 view .LVU110
 385              		.loc 1 414 26 is_stmt 0 view .LVU111
 386 00d0 0C46     		mov	r4, r1	@ movhi
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 27


 387              	.LVL47:
 388              		.loc 1 414 26 view .LVU112
 389 00d2 4846     		mov	r0, r9	@ movhi
 390              	.LVL48:
 391              		.loc 1 414 26 view .LVU113
 392 00d4 D047     		blx	r10
 393              	.LVL49:
 415:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 416:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 394              		.loc 1 416 9 is_stmt 1 view .LVU114
 411:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_dest_color = dest_buf[0];
 395              		.loc 1 411 18 is_stmt 0 view .LVU115
 396 00d6 0023     		movs	r3, #0
 397 00d8 CDF810B0 		str	fp, [sp, #16]
 398 00dc 9B46     		mov	fp, r3
 399              	.LVL50:
 411:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_dest_color = dest_buf[0];
 400              		.loc 1 411 18 view .LVU116
 401 00de A446     		mov	ip, r4	@ movhi
 402              		.loc 1 416 9 view .LVU117
 403 00e0 2CE0     		b	.L15
 404              	.LVL51:
 405              	.L32:
 417:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 418:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 419:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] != last_mask || last_dest_color.full != dest_buf[x].full) {
 406              		.loc 1 419 59 discriminator 1 view .LVU118
 407 00e2 1FFA8CF1 		uxth	r1, ip
 408              		.loc 1 419 79 discriminator 1 view .LVU119
 409 00e6 35F814E0 		ldrh	lr, [r5, r4, lsl #1]
 410              		.loc 1 419 41 discriminator 1 view .LVU120
 411 00ea 7145     		cmp	r1, lr
 412 00ec 16D1     		bne	.L17
 413              		.loc 1 419 41 discriminator 1 view .LVU121
 414 00ee 08E0     		b	.L18
 415              	.L26:
 420:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     opa_tmp = mask[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask[x] * opa) >> 
 416              		.loc 1 420 29 discriminator 2 view .LVU122
 417 00f0 019A     		ldr	r2, [sp, #4]
 418              	.LVL52:
 419              	.L19:
 421:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 422:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_res_color = blend_fp(color, dest_buf[x], opa_tmp);
 420              		.loc 1 422 21 is_stmt 1 view .LVU123
 421              		.loc 1 422 38 is_stmt 0 view .LVU124
 422 00f2 35F81610 		ldrh	r1, [r5, r6, lsl #1]
 423 00f6 4846     		mov	r0, r9	@ movhi
 424              	.LVL53:
 425              		.loc 1 422 38 view .LVU125
 426 00f8 D047     		blx	r10
 427              	.LVL54:
 423:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_mask = mask[x];
 428              		.loc 1 423 21 is_stmt 1 view .LVU126
 429              		.loc 1 423 31 is_stmt 0 view .LVU127
 430 00fa 9BF80030 		ldrb	r3, [fp]	@ zero_extendqisi2
 431              	.LVL55:
 424:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color.full = dest_buf[x].full;
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 28


 432              		.loc 1 424 21 is_stmt 1 view .LVU128
 433              		.loc 1 424 42 is_stmt 0 view .LVU129
 434 00fe 35F816C0 		ldrh	ip, [r5, r6, lsl #1]
 435              	.LVL56:
 436              	.L18:
 425:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 426:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf[x] = last_res_color;
 437              		.loc 1 426 17 is_stmt 1 view .LVU130
 438              		.loc 1 426 29 is_stmt 0 view .LVU131
 439 0102 25F81600 		strh	r0, [r5, r6, lsl #1]	@ movhi
 440              	.L16:
 417:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 441              		.loc 1 417 32 is_stmt 1 discriminator 2 view .LVU132
 442 0106 0134     		adds	r4, r4, #1
 443              	.LVL57:
 444              	.L21:
 417:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 445              		.loc 1 417 26 discriminator 1 view .LVU133
 446 0108 4445     		cmp	r4, r8
 447 010a 0EDA     		bge	.L31
 418:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] != last_mask || last_dest_color.full != dest_buf[x].full) {
 448              		.loc 1 418 17 view .LVU134
 418:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] != last_mask || last_dest_color.full != dest_buf[x].full) {
 449              		.loc 1 418 24 is_stmt 0 view .LVU135
 450 010c 2646     		mov	r6, r4
 451 010e 07EB040B 		add	fp, r7, r4
 452 0112 3A5D     		ldrb	r2, [r7, r4]	@ zero_extendqisi2
 418:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] != last_mask || last_dest_color.full != dest_buf[x].full) {
 453              		.loc 1 418 19 view .LVU136
 454 0114 002A     		cmp	r2, #0
 455 0116 F6D0     		beq	.L16
 419:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     opa_tmp = mask[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask[x] * opa) >> 
 456              		.loc 1 419 17 is_stmt 1 view .LVU137
 419:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     opa_tmp = mask[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask[x] * opa) >> 
 457              		.loc 1 419 19 is_stmt 0 view .LVU138
 458 0118 9A42     		cmp	r2, r3
 459 011a E2D0     		beq	.L32
 460              	.L17:
 420:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 461              		.loc 1 420 21 is_stmt 1 view .LVU139
 420:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 462              		.loc 1 420 29 is_stmt 0 view .LVU140
 463 011c FC2A     		cmp	r2, #252
 464 011e E7D8     		bhi	.L26
 420:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 465              		.loc 1 420 61 discriminator 1 view .LVU141
 466 0120 019B     		ldr	r3, [sp, #4]
 467              	.LVL58:
 420:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 468              		.loc 1 420 61 discriminator 1 view .LVU142
 469 0122 03FB02F2 		mul	r2, r3, r2
 420:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 470              		.loc 1 420 29 discriminator 1 view .LVU143
 471 0126 120A     		lsrs	r2, r2, #8
 472 0128 E3E7     		b	.L19
 473              	.LVL59:
 474              	.L31:
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 29


 427:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 428:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf += dest_stride;
 475              		.loc 1 428 22 view .LVU144
 476 012a DDF808B0 		ldr	fp, [sp, #8]
 477              		.loc 1 428 13 is_stmt 1 view .LVU145
 478              		.loc 1 428 22 is_stmt 0 view .LVU146
 479 012e 039A     		ldr	r2, [sp, #12]
 480 0130 05EB4205 		add	r5, r5, r2, lsl #1
 481              	.LVL60:
 429:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             mask += mask_stride;
 482              		.loc 1 429 13 is_stmt 1 view .LVU147
 483              		.loc 1 429 18 is_stmt 0 view .LVU148
 484 0134 059A     		ldr	r2, [sp, #20]
 485 0136 1744     		add	r7, r7, r2
 486              	.LVL61:
 416:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 487              		.loc 1 416 28 is_stmt 1 discriminator 2 view .LVU149
 488 0138 0BF1010B 		add	fp, fp, #1
 489              	.LVL62:
 490              	.L15:
 416:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 491              		.loc 1 416 22 discriminator 1 view .LVU150
 492 013c 049A     		ldr	r2, [sp, #16]
 493 013e 9345     		cmp	fp, r2
 494 0140 03DA     		bge	.L6
 417:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 495              		.loc 1 417 19 is_stmt 0 view .LVU151
 496 0142 0024     		movs	r4, #0
 497              	.LVL63:
 417:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 498              		.loc 1 417 19 view .LVU152
 499 0144 CDF808B0 		str	fp, [sp, #8]
 500 0148 DEE7     		b	.L21
 501              	.LVL64:
 502              	.L6:
 417:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 503              		.loc 1 417 19 view .LVU153
 504              	.LBE60:
 430:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 431:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 432:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 505              		.loc 1 432 1 view .LVU154
 506 014a 07B0     		add	sp, sp, #28
 507              	.LCFI3:
 508              		.cfi_def_cfa_offset 36
 509              		@ sp needed
 510 014c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 511              	.LVL65:
 512              	.L34:
 513              		.loc 1 432 1 view .LVU155
 514              		.align	2
 515              	.L33:
 516 0150 00000000 		.word	color_blend_true_color_additive
 517 0154 00000000 		.word	color_blend_true_color_subtractive
 518 0158 00000000 		.word	color_blend_true_color_multiply
 519              		.cfi_endproc
 520              	.LFE160:
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 30


 522              		.section	.text.map_blended,"ax",%progbits
 523              		.align	1
 524              		.syntax unified
 525              		.thumb
 526              		.thumb_func
 528              	map_blended:
 529              	.LVL66:
 530              	.LFB163:
 433:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 434:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 435:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void map_set_px(lv_color_t * dest_buf, const lv_area_t * dest_area, lv_coord_t dest_stride,
 436:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                        const lv_color_t * src_buf, lv_coord_t src_stride, lv_opa_t opa, const lv_op
 437:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 438:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 439:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 440:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 441:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 442:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 443:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 444:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t x;
 445:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 446:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 447:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask == NULL) {
 448:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 449:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 450:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area->x1 
 451:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                         opa);
 452:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 453:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 454:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 455:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 456:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 457:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 458:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 459:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 460:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area-
 461:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 462:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 463:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 464:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             mask += mask_stride;
 465:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 466:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 467:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 468:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 469:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 470:lvgl/src/draw/sw/lv_draw_sw_blend.c **** LV_ATTRIBUTE_FAST_MEM static void map_normal(lv_color_t * dest_buf, const lv_area_t * dest_area, lv
 471:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                              const lv_color_t * src_buf, lv_coord_t src_stride, lv_
 472:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 473:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 474:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 475:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 476:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 477:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t x;
 478:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 479:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 480:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 481:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 31


 482:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 483:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 484:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 485:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask == NULL) {
 486:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 487:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 488:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_memcpy(dest_buf, src_buf, w * sizeof(lv_color_t));
 489:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 490:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 491:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 492:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 493:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 494:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 495:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 496:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 497:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(disp->driver->screen_transp) {
 498:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         lv_color_mix_with_alpha(dest_buf[x], dest_buf[x].ch.alpha, src_buf[x], opa,
 499:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                 &dest_buf[x].ch.alpha);
 500:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 501:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     else
 502:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 503:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     {
 504:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa);
 505:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 506:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 507:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 508:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 509:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 510:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 511:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 512:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Masked*/
 513:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 514:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Only the mask matters*/
 515:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa > LV_OPA_MAX) {
 516:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t x_end4 = w - 4;
 517:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 518:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 519:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 520:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if 0
 521:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 522:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x);
 523:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 524:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #else
 525:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)mask_tmp_x & 0x3); x++) {
 526:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 527:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX_SCR_TRANSP(x)
 528:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #else
 529:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 530:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 531:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 532:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 533:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 uint32_t * mask32 = (uint32_t *)mask_tmp_x;
 534:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(; x < x_end4; x += 4) {
 535:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask32) {
 536:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 537:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x] = src_buf[x];
 538:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 1] = src_buf[x + 1];
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 32


 539:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 2] = src_buf[x + 2];
 540:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 3] = src_buf[x + 3];
 541:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 542:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         else {
 543:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             mask_tmp_x = (const lv_opa_t *)mask32;
 544:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 545:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX_SCR_TRANSP(x)
 546:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX_SCR_TRANSP(x + 1)
 547:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX_SCR_TRANSP(x + 2)
 548:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX_SCR_TRANSP(x + 3)
 549:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #else
 550:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x)
 551:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 552:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 553:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 554:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 555:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 556:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 557:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     mask32++;
 558:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 559:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 560:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask_tmp_x = (const lv_opa_t *)mask32;
 561:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(; x < w ; x++) {
 562:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 563:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX_SCR_TRANSP(x)
 564:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #else
 565:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 566:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 567:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 568:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 569:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 570:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 571:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += mask_stride;
 572:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 573:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 574:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Handle opa and mask values too*/
 575:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 576:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 577:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 578:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(mask[x]) {
 579:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 580:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 581:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(disp->driver->screen_transp) {
 582:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             lv_color_mix_with_alpha(dest_buf[x], dest_buf[x].ch.alpha, src_buf[x], 
 583:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                     &dest_buf[x], &dest_buf[x].ch.alpha);
 584:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 585:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         else
 586:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 587:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         {
 588:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa_tmp);
 589:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 590:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 591:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 592:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 593:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 594:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += mask_stride;
 595:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 33


 596:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 597:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 598:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 599:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_DRAW_COMPLEX
 600:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void map_blended(lv_color_t * dest_buf, const lv_area_t * dest_area, lv_coord_t dest_stride,
 601:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         const lv_color_t * src_buf, lv_coord_t src_stride, lv_opa_t opa,
 602:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         const lv_opa_t * mask, lv_coord_t mask_stride, lv_blend_mode_t blend_mode)
 603:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 531              		.loc 1 603 1 is_stmt 1 view -0
 532              		.cfi_startproc
 533              		@ args = 20, pretend = 0, frame = 24
 534              		@ frame_needed = 0, uses_anonymous_args = 0
 535              		.loc 1 603 1 is_stmt 0 view .LVU157
 536 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 537              	.LCFI4:
 538              		.cfi_def_cfa_offset 36
 539              		.cfi_offset 4, -36
 540              		.cfi_offset 5, -32
 541              		.cfi_offset 6, -28
 542              		.cfi_offset 7, -24
 543              		.cfi_offset 8, -20
 544              		.cfi_offset 9, -16
 545              		.cfi_offset 10, -12
 546              		.cfi_offset 11, -8
 547              		.cfi_offset 14, -4
 548 0004 87B0     		sub	sp, sp, #28
 549              	.LCFI5:
 550              		.cfi_def_cfa_offset 64
 551 0006 0646     		mov	r6, r0
 552 0008 0846     		mov	r0, r1
 553              	.LVL67:
 554              		.loc 1 603 1 view .LVU158
 555 000a 0292     		str	r2, [sp, #8]
 556 000c 9B46     		mov	fp, r3
 557 000e BDF940E0 		ldrsh	lr, [sp, #64]
 558 0012 9DF84490 		ldrb	r9, [sp, #68]	@ zero_extendqisi2
 559 0016 DDF848A0 		ldr	r10, [sp, #72]
 560 001a BDF94C10 		ldrsh	r1, [sp, #76]
 561              	.LVL68:
 562              		.loc 1 603 1 view .LVU159
 563 001e 9DF85020 		ldrb	r2, [sp, #80]	@ zero_extendqisi2
 564              	.LVL69:
 604:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 605:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 565              		.loc 1 605 5 is_stmt 1 view .LVU160
 566              	.LBB61:
 567              	.LBI61:
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 568              		.loc 3 123 26 view .LVU161
 569              	.LBB62:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 570              		.loc 3 125 5 view .LVU162
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 571              		.loc 3 125 31 is_stmt 0 view .LVU163
 572 0022 8788     		ldrh	r7, [r0, #4]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 573              		.loc 3 125 44 view .LVU164
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 34


 574 0024 0488     		ldrh	r4, [r0]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 575              		.loc 3 125 36 view .LVU165
 576 0026 3F1B     		subs	r7, r7, r4
 577 0028 BFB2     		uxth	r7, r7
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 578              		.loc 3 125 49 view .LVU166
 579 002a 0137     		adds	r7, r7, #1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 580              		.loc 3 125 12 view .LVU167
 581 002c 3FB2     		sxth	r7, r7
 582              	.LVL70:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 583              		.loc 3 125 12 view .LVU168
 584              	.LBE62:
 585              	.LBE61:
 606:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 586              		.loc 1 606 5 is_stmt 1 view .LVU169
 587              	.LBB63:
 588              	.LBI63:
 133:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 589              		.loc 3 133 26 view .LVU170
 590              	.LBB64:
 591              		.loc 3 135 5 view .LVU171
 592              		.loc 3 135 31 is_stmt 0 view .LVU172
 593 002e B0F806C0 		ldrh	ip, [r0, #6]
 594              		.loc 3 135 44 view .LVU173
 595 0032 4088     		ldrh	r0, [r0, #2]
 596              	.LVL71:
 597              		.loc 3 135 36 view .LVU174
 598 0034 ACEB000C 		sub	ip, ip, r0
 599 0038 1FFA8CFC 		uxth	ip, ip
 600              		.loc 3 135 49 view .LVU175
 601 003c 0CF1010C 		add	ip, ip, #1
 602              		.loc 3 135 12 view .LVU176
 603 0040 0FFA8CF3 		sxth	r3, ip
 604              	.LVL72:
 605              		.loc 3 135 12 view .LVU177
 606              	.LBE64:
 607              	.LBE63:
 607:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 608:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t x;
 608              		.loc 1 608 5 is_stmt 1 view .LVU178
 609:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 609              		.loc 1 609 5 view .LVU179
 610:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 611:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t (*blend_fp)(lv_color_t, lv_color_t, lv_opa_t);
 610              		.loc 1 611 5 view .LVU180
 612:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     switch(blend_mode) {
 611              		.loc 1 612 5 view .LVU181
 612 0044 022A     		cmp	r2, #2
 613 0046 0ED0     		beq	.L46
 614 0048 032A     		cmp	r2, #3
 615 004a 0FD0     		beq	.L47
 616 004c 012A     		cmp	r2, #1
 617 004e 54D1     		bne	.L35
 618 0050 DFF8AC80 		ldr	r8, .L54
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 35


 619              	.L36:
 620              	.LVL73:
 613:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_ADDITIVE:
 614:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_additive;
 615:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 616:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_SUBTRACTIVE:
 617:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_subtractive;
 618:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 619:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_MULTIPLY:
 620:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_multiply;
 621:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 622:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         default:
 623:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             LV_LOG_WARN("fill_blended: unsupported blend mode");
 624:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             return;
 625:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 626:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 627:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 628:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask == NULL) {
 621              		.loc 1 628 5 view .LVU182
 622              		.loc 1 628 7 is_stmt 0 view .LVU183
 623 0054 BAF1000F 		cmp	r10, #0
 624 0058 22D0     		beq	.L48
 629:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*The map will be indexed from `draw_area->x1` so compensate it.*/
 630:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 631:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 632:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 633:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf[x] = blend_fp(src_buf[x], dest_buf[x], opa);
 634:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 635:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf += dest_stride;
 636:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 637:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 638:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 639:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Masked*/
 640:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 641:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 625              		.loc 1 641 15 view .LVU184
 626 005a 0025     		movs	r5, #0
 627 005c 0393     		str	r3, [sp, #12]
 628 005e CDF810E0 		str	lr, [sp, #16]
 629 0062 0591     		str	r1, [sp, #20]
 630 0064 43E0     		b	.L39
 631              	.LVL74:
 632              	.L46:
 617:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 633              		.loc 1 617 22 view .LVU185
 634 0066 DFF89C80 		ldr	r8, .L54+4
 635 006a F3E7     		b	.L36
 636              	.L47:
 620:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 637              		.loc 1 620 22 view .LVU186
 638 006c DFF89880 		ldr	r8, .L54+8
 639 0070 F0E7     		b	.L36
 640              	.LVL75:
 641              	.L40:
 633:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 642              		.loc 1 633 17 is_stmt 1 view .LVU187
 633:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 36


 643              		.loc 1 633 31 is_stmt 0 view .LVU188
 644 0072 4A46     		mov	r2, r9
 645 0074 36F81410 		ldrh	r1, [r6, r4, lsl #1]
 646 0078 3BF81400 		ldrh	r0, [fp, r4, lsl #1]
 647 007c A847     		blx	r5
 648              	.LVL76:
 649 007e 26F81400 		strh	r0, [r6, r4, lsl #1]	@ movhi
 632:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf[x] = blend_fp(src_buf[x], dest_buf[x], opa);
 650              		.loc 1 632 32 is_stmt 1 discriminator 3 view .LVU189
 651 0082 0134     		adds	r4, r4, #1
 652              	.LVL77:
 653              	.L41:
 632:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf[x] = blend_fp(src_buf[x], dest_buf[x], opa);
 654              		.loc 1 632 26 discriminator 1 view .LVU190
 655 0084 BC42     		cmp	r4, r7
 656 0086 F4DB     		blt	.L40
 635:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 657              		.loc 1 635 13 view .LVU191
 635:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 658              		.loc 1 635 22 is_stmt 0 view .LVU192
 659 0088 029B     		ldr	r3, [sp, #8]
 660 008a 06EB4306 		add	r6, r6, r3, lsl #1
 661              	.LVL78:
 636:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 662              		.loc 1 636 13 is_stmt 1 view .LVU193
 636:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 663              		.loc 1 636 21 is_stmt 0 view .LVU194
 664 008e 019B     		ldr	r3, [sp, #4]
 665 0090 0BEB430B 		add	fp, fp, r3, lsl #1
 666              	.LVL79:
 631:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 667              		.loc 1 631 28 is_stmt 1 discriminator 2 view .LVU195
 668 0094 0AF1010A 		add	r10, r10, #1
 669              	.LVL80:
 670              	.L38:
 631:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 671              		.loc 1 631 22 discriminator 1 view .LVU196
 672 0098 C245     		cmp	r10, r8
 673 009a 2EDA     		bge	.L35
 632:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf[x] = blend_fp(src_buf[x], dest_buf[x], opa);
 674              		.loc 1 632 19 is_stmt 0 view .LVU197
 675 009c 0024     		movs	r4, #0
 676 009e F1E7     		b	.L41
 677              	.LVL81:
 678              	.L48:
 631:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 679              		.loc 1 631 15 view .LVU198
 680 00a0 0025     		movs	r5, #0
 681 00a2 AA46     		mov	r10, r5
 682 00a4 4546     		mov	r5, r8
 683 00a6 9846     		mov	r8, r3
 684              	.LVL82:
 631:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 685              		.loc 1 631 15 view .LVU199
 686 00a8 CDF804E0 		str	lr, [sp, #4]
 687 00ac F4E7     		b	.L38
 688              	.LVL83:
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 37


 689              	.L50:
 690              	.LBB65:
 642:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 643:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 644:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 691              		.loc 1 644 26 discriminator 2 view .LVU200
 692 00ae 4A46     		mov	r2, r9
 693              	.L43:
 694              	.LVL84:
 645:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf[x] = blend_fp(src_buf[x], dest_buf[x], opa_tmp);
 695              		.loc 1 645 17 is_stmt 1 view .LVU201
 696              		.loc 1 645 31 is_stmt 0 view .LVU202
 697 00b0 36F81510 		ldrh	r1, [r6, r5, lsl #1]
 698 00b4 3BF81500 		ldrh	r0, [fp, r5, lsl #1]
 699 00b8 C047     		blx	r8
 700              	.LVL85:
 701              		.loc 1 645 31 view .LVU203
 702 00ba 26F81500 		strh	r0, [r6, r5, lsl #1]	@ movhi
 703              	.LVL86:
 704              	.L42:
 705              		.loc 1 645 31 view .LVU204
 706              	.LBE65:
 642:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 707              		.loc 1 642 32 is_stmt 1 discriminator 2 view .LVU205
 708 00be 0134     		adds	r4, r4, #1
 709              	.LVL87:
 710              	.L45:
 642:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 711              		.loc 1 642 26 discriminator 1 view .LVU206
 712 00c0 BC42     		cmp	r4, r7
 713 00c2 0ADA     		bge	.L53
 714              	.LBB66:
 643:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 715              		.loc 1 643 17 view .LVU207
 643:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 716              		.loc 1 643 24 is_stmt 0 view .LVU208
 717 00c4 2546     		mov	r5, r4
 718 00c6 1AF80420 		ldrb	r2, [r10, r4]	@ zero_extendqisi2
 643:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 719              		.loc 1 643 19 view .LVU209
 720 00ca 002A     		cmp	r2, #0
 721 00cc F7D0     		beq	.L42
 644:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf[x] = blend_fp(src_buf[x], dest_buf[x], opa_tmp);
 722              		.loc 1 644 17 is_stmt 1 view .LVU210
 644:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf[x] = blend_fp(src_buf[x], dest_buf[x], opa_tmp);
 723              		.loc 1 644 26 is_stmt 0 view .LVU211
 724 00ce FC2A     		cmp	r2, #252
 725 00d0 EDD8     		bhi	.L50
 644:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf[x] = blend_fp(src_buf[x], dest_buf[x], opa_tmp);
 726              		.loc 1 644 72 discriminator 1 view .LVU212
 727 00d2 02FB09F2 		mul	r2, r2, r9
 644:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf[x] = blend_fp(src_buf[x], dest_buf[x], opa_tmp);
 728              		.loc 1 644 26 discriminator 1 view .LVU213
 729 00d6 120A     		lsrs	r2, r2, #8
 730 00d8 EAE7     		b	.L43
 731              	.L53:
 644:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf[x] = blend_fp(src_buf[x], dest_buf[x], opa_tmp);
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 38


 732              		.loc 1 644 26 discriminator 1 view .LVU214
 733              	.LBE66:
 646:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 647:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf += dest_stride;
 734              		.loc 1 647 22 view .LVU215
 735 00da 019D     		ldr	r5, [sp, #4]
 736              		.loc 1 647 13 is_stmt 1 view .LVU216
 737              		.loc 1 647 22 is_stmt 0 view .LVU217
 738 00dc 029B     		ldr	r3, [sp, #8]
 739 00de 06EB4306 		add	r6, r6, r3, lsl #1
 740              	.LVL88:
 648:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 741              		.loc 1 648 13 is_stmt 1 view .LVU218
 742              		.loc 1 648 21 is_stmt 0 view .LVU219
 743 00e2 049B     		ldr	r3, [sp, #16]
 744 00e4 0BEB430B 		add	fp, fp, r3, lsl #1
 745              	.LVL89:
 649:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             mask += mask_stride;
 746              		.loc 1 649 13 is_stmt 1 view .LVU220
 747              		.loc 1 649 18 is_stmt 0 view .LVU221
 748 00e8 059B     		ldr	r3, [sp, #20]
 749 00ea 9A44     		add	r10, r10, r3
 750              	.LVL90:
 641:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 751              		.loc 1 641 28 is_stmt 1 discriminator 2 view .LVU222
 752 00ec 0135     		adds	r5, r5, #1
 753              	.LVL91:
 754              	.L39:
 641:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 755              		.loc 1 641 22 discriminator 1 view .LVU223
 756 00ee 039B     		ldr	r3, [sp, #12]
 757 00f0 9D42     		cmp	r5, r3
 758 00f2 02DA     		bge	.L35
 642:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 759              		.loc 1 642 19 is_stmt 0 view .LVU224
 760 00f4 0024     		movs	r4, #0
 761 00f6 0195     		str	r5, [sp, #4]
 762 00f8 E2E7     		b	.L45
 763              	.LVL92:
 764              	.L35:
 650:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 651:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 652:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 765              		.loc 1 652 1 view .LVU225
 766 00fa 07B0     		add	sp, sp, #28
 767              	.LCFI6:
 768              		.cfi_def_cfa_offset 36
 769              		@ sp needed
 770 00fc BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 771              	.LVL93:
 772              	.L55:
 773              		.loc 1 652 1 view .LVU226
 774              		.align	2
 775              	.L54:
 776 0100 00000000 		.word	color_blend_true_color_additive
 777 0104 00000000 		.word	color_blend_true_color_subtractive
 778 0108 00000000 		.word	color_blend_true_color_multiply
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 39


 779              		.cfi_endproc
 780              	.LFE163:
 782              		.section	.text.color_blend_true_color_additive,"ax",%progbits
 783              		.align	1
 784              		.syntax unified
 785              		.thumb
 786              		.thumb_func
 788              	color_blend_true_color_additive:
 789              	.LVL94:
 790              	.LFB164:
 653:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 654:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static inline lv_color_t color_blend_true_color_additive(lv_color_t fg, lv_color_t bg, lv_opa_t opa
 655:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 791              		.loc 1 655 1 is_stmt 1 view -0
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 0
 794              		@ frame_needed = 0, uses_anonymous_args = 0
 656:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 657:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa <= LV_OPA_MIN) return bg;
 795              		.loc 1 657 5 view .LVU228
 796              		.loc 1 657 7 is_stmt 0 view .LVU229
 797 0000 022A     		cmp	r2, #2
 798 0002 23D9     		bls	.L63
 655:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 799              		.loc 1 655 1 view .LVU230
 800 0004 08B5     		push	{r3, lr}
 801              	.LCFI7:
 802              		.cfi_def_cfa_offset 8
 803              		.cfi_offset 3, -8
 804              		.cfi_offset 14, -4
 658:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 659:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     uint32_t tmp;
 805              		.loc 1 659 5 is_stmt 1 view .LVU231
 660:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 1
 661:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.full + fg.full;
 662:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.full = LV_MIN(tmp, 1);
 663:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #else
 664:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.red + fg.ch.red;
 806              		.loc 1 664 5 view .LVU232
 807              		.loc 1 664 16 is_stmt 0 view .LVU233
 808 0006 C1F3C423 		ubfx	r3, r1, #11, #5
 809              		.loc 1 664 28 view .LVU234
 810 000a C0F3C42C 		ubfx	ip, r0, #11, #5
 811              		.loc 1 664 21 view .LVU235
 812 000e 6344     		add	r3, r3, ip
 813              	.LVL95:
 665:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 8
 666:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.red = LV_MIN(tmp, 7);
 667:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 16
 668:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.red = LV_MIN(tmp, 31);
 814              		.loc 1 668 5 is_stmt 1 view .LVU236
 815              		.loc 1 668 17 is_stmt 0 view .LVU237
 816 0010 1F2B     		cmp	r3, #31
 817 0012 28BF     		it	cs
 818 0014 1F23     		movcs	r3, #31
 819              	.LVL96:
 820              		.loc 1 668 15 view .LVU238
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 40


 821 0016 63F3CF20 		bfi	r0, r3, #11, #5
 669:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 32
 670:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.red = LV_MIN(tmp, 255);
 671:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 672:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 673:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 8
 674:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.green + fg.ch.green;
 675:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green = LV_MIN(tmp, 7);
 676:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 16
 677:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_16_SWAP == 0
 678:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.green + fg.ch.green;
 822              		.loc 1 678 5 is_stmt 1 view .LVU239
 823              		.loc 1 678 16 is_stmt 0 view .LVU240
 824 001a C1F34513 		ubfx	r3, r1, #5, #6
 825              		.loc 1 678 30 view .LVU241
 826 001e C0F3451C 		ubfx	ip, r0, #5, #6
 827              	.LVL97:
 828              		.loc 1 678 23 view .LVU242
 829 0022 6344     		add	r3, r3, ip
 830              	.LVL98:
 679:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green = LV_MIN(tmp, 63);
 831              		.loc 1 679 5 is_stmt 1 view .LVU243
 832              		.loc 1 679 19 is_stmt 0 view .LVU244
 833 0024 3F2B     		cmp	r3, #63
 834 0026 28BF     		it	cs
 835 0028 3F23     		movcs	r3, #63
 836              	.LVL99:
 837              		.loc 1 679 17 view .LVU245
 838 002a 63F34A10 		bfi	r0, r3, #5, #6
 680:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #else
 681:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = (bg.ch.green_h << 3) + bg.ch.green_l + (fg.ch.green_h << 3) + fg.ch.green_l;
 682:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = LV_MIN(tmp, 63);
 683:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green_h = tmp >> 3;
 684:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green_l = tmp & 0x7;
 685:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 686:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 687:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 32
 688:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.green + fg.ch.green;
 689:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green = LV_MIN(tmp, 255);
 690:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 691:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 692:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.blue + fg.ch.blue;
 839              		.loc 1 692 5 is_stmt 1 view .LVU246
 840              		.loc 1 692 16 is_stmt 0 view .LVU247
 841 002e 01F01F03 		and	r3, r1, #31
 842              		.loc 1 692 29 view .LVU248
 843 0032 00F01F0C 		and	ip, r0, #31
 844              	.LVL100:
 845              		.loc 1 692 22 view .LVU249
 846 0036 6344     		add	r3, r3, ip
 847              	.LVL101:
 693:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 8
 694:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.blue = LV_MIN(tmp, 4);
 695:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 16
 696:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.blue = LV_MIN(tmp, 31);
 848              		.loc 1 696 5 is_stmt 1 view .LVU250
 849              		.loc 1 696 18 is_stmt 0 view .LVU251
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 41


 850 0038 1F2B     		cmp	r3, #31
 851 003a 28BF     		it	cs
 852 003c 1F23     		movcs	r3, #31
 853              	.LVL102:
 854              		.loc 1 696 16 view .LVU252
 855 003e 63F30400 		bfi	r0, r3, #0, #5
 697:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 32
 698:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.blue = LV_MIN(tmp, 255);
 699:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 700:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 701:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 702:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa == LV_OPA_COVER) return fg;
 856              		.loc 1 702 5 is_stmt 1 view .LVU253
 857              		.loc 1 702 7 is_stmt 0 view .LVU254
 858 0042 FF2A     		cmp	r2, #255
 859 0044 01D0     		beq	.L58
 703:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 704:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     return lv_color_mix(fg, bg, opa);
 860              		.loc 1 704 5 is_stmt 1 view .LVU255
 861              		.loc 1 704 12 is_stmt 0 view .LVU256
 862 0046 FFF7FEFF 		bl	lv_color_mix
 863              	.LVL103:
 864              	.L58:
 865              	.LVL104:
 705:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 866              		.loc 1 705 1 view .LVU257
 867 004a 08BD     		pop	{r3, pc}
 868              	.LVL105:
 869              	.L63:
 870              	.LCFI8:
 871              		.cfi_def_cfa_offset 0
 872              		.cfi_restore 3
 873              		.cfi_restore 14
 657:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 874              		.loc 1 657 27 is_stmt 1 discriminator 1 view .LVU258
 657:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 875              		.loc 1 657 34 is_stmt 0 discriminator 1 view .LVU259
 876 004c 0846     		mov	r0, r1	@ movhi
 877              	.LVL106:
 878              		.loc 1 705 1 view .LVU260
 879 004e 7047     		bx	lr
 880              		.cfi_endproc
 881              	.LFE164:
 883              		.section	.text.color_blend_true_color_subtractive,"ax",%progbits
 884              		.align	1
 885              		.syntax unified
 886              		.thumb
 887              		.thumb_func
 889              	color_blend_true_color_subtractive:
 890              	.LVL107:
 891              	.LFB165:
 706:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 707:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static inline lv_color_t color_blend_true_color_subtractive(lv_color_t fg, lv_color_t bg, lv_opa_t 
 708:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 892              		.loc 1 708 1 is_stmt 1 view -0
 893              		.cfi_startproc
 894              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 42


 895              		@ frame_needed = 0, uses_anonymous_args = 0
 709:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa <= LV_OPA_MIN) return bg;
 896              		.loc 1 709 5 view .LVU262
 897              		.loc 1 709 7 is_stmt 0 view .LVU263
 898 0000 022A     		cmp	r2, #2
 899 0002 23D9     		bls	.L71
 708:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa <= LV_OPA_MIN) return bg;
 900              		.loc 1 708 1 view .LVU264
 901 0004 08B5     		push	{r3, lr}
 902              	.LCFI9:
 903              		.cfi_def_cfa_offset 8
 904              		.cfi_offset 3, -8
 905              		.cfi_offset 14, -4
 710:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 711:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t tmp;
 906              		.loc 1 711 5 is_stmt 1 view .LVU265
 712:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.red - fg.ch.red;
 907              		.loc 1 712 5 view .LVU266
 908              		.loc 1 712 16 is_stmt 0 view .LVU267
 909 0006 C1F3C423 		ubfx	r3, r1, #11, #5
 910              		.loc 1 712 28 view .LVU268
 911 000a C0F3C42C 		ubfx	ip, r0, #11, #5
 912              		.loc 1 712 9 view .LVU269
 913 000e A3EB0C03 		sub	r3, r3, ip
 914              	.LVL108:
 713:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.red = LV_MAX(tmp, 0);
 915              		.loc 1 713 5 is_stmt 1 view .LVU270
 916              		.loc 1 713 17 is_stmt 0 view .LVU271
 917 0012 23EAE373 		bic	r3, r3, r3, asr #31
 918              	.LVL109:
 919              		.loc 1 713 15 view .LVU272
 920 0016 63F3CF20 		bfi	r0, r3, #11, #5
 714:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 715:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_16_SWAP == 0
 716:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.green - fg.ch.green;
 921              		.loc 1 716 5 is_stmt 1 view .LVU273
 922              		.loc 1 716 16 is_stmt 0 view .LVU274
 923 001a C1F34513 		ubfx	r3, r1, #5, #6
 924              		.loc 1 716 30 view .LVU275
 925 001e C0F3451C 		ubfx	ip, r0, #5, #6
 926              	.LVL110:
 927              		.loc 1 716 9 view .LVU276
 928 0022 A3EB0C03 		sub	r3, r3, ip
 929              	.LVL111:
 717:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green = LV_MAX(tmp, 0);
 930              		.loc 1 717 5 is_stmt 1 view .LVU277
 931              		.loc 1 717 19 is_stmt 0 view .LVU278
 932 0026 23EAE373 		bic	r3, r3, r3, asr #31
 933              	.LVL112:
 934              		.loc 1 717 17 view .LVU279
 935 002a 63F34A10 		bfi	r0, r3, #5, #6
 718:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #else
 719:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = (bg.ch.green_h << 3) + bg.ch.green_l + (fg.ch.green_h << 3) + fg.ch.green_l;
 720:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = LV_MAX(tmp, 0);
 721:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green_h = tmp >> 3;
 722:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green_l = tmp & 0x7;
 723:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 43


 724:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 725:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.blue - fg.ch.blue;
 936              		.loc 1 725 5 is_stmt 1 view .LVU280
 937              		.loc 1 725 16 is_stmt 0 view .LVU281
 938 002e 01F01F03 		and	r3, r1, #31
 939              		.loc 1 725 29 view .LVU282
 940 0032 00F01F0C 		and	ip, r0, #31
 941              	.LVL113:
 942              		.loc 1 725 9 view .LVU283
 943 0036 A3EB0C03 		sub	r3, r3, ip
 944              	.LVL114:
 726:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.blue = LV_MAX(tmp, 0);
 945              		.loc 1 726 5 is_stmt 1 view .LVU284
 946              		.loc 1 726 18 is_stmt 0 view .LVU285
 947 003a 23EAE373 		bic	r3, r3, r3, asr #31
 948              	.LVL115:
 949              		.loc 1 726 16 view .LVU286
 950 003e 63F30400 		bfi	r0, r3, #0, #5
 727:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 728:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa == LV_OPA_COVER) return fg;
 951              		.loc 1 728 5 is_stmt 1 view .LVU287
 952              		.loc 1 728 7 is_stmt 0 view .LVU288
 953 0042 FF2A     		cmp	r2, #255
 954 0044 01D0     		beq	.L66
 729:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 730:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     return lv_color_mix(fg, bg, opa);
 955              		.loc 1 730 5 is_stmt 1 view .LVU289
 956              		.loc 1 730 12 is_stmt 0 view .LVU290
 957 0046 FFF7FEFF 		bl	lv_color_mix
 958              	.LVL116:
 959              	.L66:
 960              	.LVL117:
 731:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 961              		.loc 1 731 1 view .LVU291
 962 004a 08BD     		pop	{r3, pc}
 963              	.LVL118:
 964              	.L71:
 965              	.LCFI10:
 966              		.cfi_def_cfa_offset 0
 967              		.cfi_restore 3
 968              		.cfi_restore 14
 709:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 969              		.loc 1 709 27 is_stmt 1 discriminator 1 view .LVU292
 709:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 970              		.loc 1 709 34 is_stmt 0 discriminator 1 view .LVU293
 971 004c 0846     		mov	r0, r1	@ movhi
 972              	.LVL119:
 973              		.loc 1 731 1 view .LVU294
 974 004e 7047     		bx	lr
 975              		.cfi_endproc
 976              	.LFE165:
 978              		.section	.text.color_blend_true_color_multiply,"ax",%progbits
 979              		.align	1
 980              		.syntax unified
 981              		.thumb
 982              		.thumb_func
 984              	color_blend_true_color_multiply:
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 44


 985              	.LVL120:
 986              	.LFB166:
 732:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 733:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static inline lv_color_t color_blend_true_color_multiply(lv_color_t fg, lv_color_t bg, lv_opa_t opa
 734:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 987              		.loc 1 734 1 is_stmt 1 view -0
 988              		.cfi_startproc
 989              		@ args = 0, pretend = 0, frame = 0
 990              		@ frame_needed = 0, uses_anonymous_args = 0
 735:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa <= LV_OPA_MIN) return bg;
 991              		.loc 1 735 5 view .LVU296
 992              		.loc 1 735 7 is_stmt 0 view .LVU297
 993 0000 022A     		cmp	r2, #2
 994 0002 22D9     		bls	.L79
 734:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa <= LV_OPA_MIN) return bg;
 995              		.loc 1 734 1 view .LVU298
 996 0004 08B5     		push	{r3, lr}
 997              	.LCFI11:
 998              		.cfi_def_cfa_offset 8
 999              		.cfi_offset 3, -8
 1000              		.cfi_offset 14, -4
 736:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 737:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 32
 738:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.red = (fg.ch.red * bg.ch.red) >> 8;
 739:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green = (fg.ch.green * bg.ch.green) >> 8;
 740:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.blue = (fg.ch.blue * bg.ch.blue) >> 8;
 741:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 16
 742:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.red = (fg.ch.red * bg.ch.red) >> 5;
 1001              		.loc 1 742 5 is_stmt 1 view .LVU299
 1002              		.loc 1 742 23 is_stmt 0 view .LVU300
 1003 0006 C0F3C423 		ubfx	r3, r0, #11, #5
 1004              		.loc 1 742 35 view .LVU301
 1005 000a C1F3C42C 		ubfx	ip, r1, #11, #5
 1006              		.loc 1 742 28 view .LVU302
 1007 000e 0CFB03F3 		mul	r3, ip, r3
 1008              		.loc 1 742 41 view .LVU303
 1009 0012 C3F34413 		ubfx	r3, r3, #5, #5
 1010              		.loc 1 742 15 view .LVU304
 1011 0016 63F3CF20 		bfi	r0, r3, #11, #5
 743:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.blue = (fg.ch.blue * bg.ch.blue) >> 5;
 1012              		.loc 1 743 5 is_stmt 1 view .LVU305
 1013              		.loc 1 743 24 is_stmt 0 view .LVU306
 1014 001a 00F01F03 		and	r3, r0, #31
 1015              		.loc 1 743 37 view .LVU307
 1016 001e 01F01F0C 		and	ip, r1, #31
 1017              		.loc 1 743 30 view .LVU308
 1018 0022 0CFB03F3 		mul	r3, ip, r3
 1019              		.loc 1 743 44 view .LVU309
 1020 0026 5B09     		lsrs	r3, r3, #5
 1021              		.loc 1 743 16 view .LVU310
 1022 0028 63F30400 		bfi	r0, r3, #0, #5
 744:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     LV_COLOR_SET_G(fg, (LV_COLOR_GET_G(fg) * LV_COLOR_GET_G(bg)) >> 6);
 1023              		.loc 1 744 5 is_stmt 1 view .LVU311
 1024 002c C0F34513 		ubfx	r3, r0, #5, #6
 1025 0030 C1F3451C 		ubfx	ip, r1, #5, #6
 1026 0034 0CFB03F3 		mul	r3, ip, r3
 1027 0038 C3F38513 		ubfx	r3, r3, #6, #6
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 45


 1028 003c 63F34A10 		bfi	r0, r3, #5, #6
 745:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 8
 746:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.red = (fg.ch.red * bg.ch.red) >> 3;
 747:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green = (fg.ch.green * bg.ch.green) >> 3;
 748:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.blue = (fg.ch.blue * bg.ch.blue) >> 2;
 749:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 750:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 751:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa == LV_OPA_COVER) return fg;
 1029              		.loc 1 751 5 view .LVU312
 1030              		.loc 1 751 7 is_stmt 0 view .LVU313
 1031 0040 FF2A     		cmp	r2, #255
 1032 0042 01D0     		beq	.L74
 752:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 753:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     return lv_color_mix(fg, bg, opa);
 1033              		.loc 1 753 5 is_stmt 1 view .LVU314
 1034              		.loc 1 753 12 is_stmt 0 view .LVU315
 1035 0044 FFF7FEFF 		bl	lv_color_mix
 1036              	.LVL121:
 1037              	.L74:
 1038              	.LVL122:
 754:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 1039              		.loc 1 754 1 view .LVU316
 1040 0048 08BD     		pop	{r3, pc}
 1041              	.LVL123:
 1042              	.L79:
 1043              	.LCFI12:
 1044              		.cfi_def_cfa_offset 0
 1045              		.cfi_restore 3
 1046              		.cfi_restore 14
 735:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1047              		.loc 1 735 27 is_stmt 1 discriminator 1 view .LVU317
 735:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1048              		.loc 1 735 34 is_stmt 0 discriminator 1 view .LVU318
 1049 004a 0846     		mov	r0, r1	@ movhi
 1050              	.LVL124:
 1051              		.loc 1 754 1 view .LVU319
 1052 004c 7047     		bx	lr
 1053              		.cfi_endproc
 1054              	.LFE166:
 1056              		.section	.text.fill_set_px,"ax",%progbits
 1057              		.align	1
 1058              		.syntax unified
 1059              		.thumb
 1060              		.thumb_func
 1062              	fill_set_px:
 1063              	.LVL125:
 1064              	.LFB158:
 186:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 1065              		.loc 1 186 1 is_stmt 1 view -0
 1066              		.cfi_startproc
 1067              		@ args = 12, pretend = 0, frame = 24
 1068              		@ frame_needed = 0, uses_anonymous_args = 0
 186:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 1069              		.loc 1 186 1 is_stmt 0 view .LVU321
 1070 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1071              	.LCFI13:
 1072              		.cfi_def_cfa_offset 36
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 46


 1073              		.cfi_offset 4, -36
 1074              		.cfi_offset 5, -32
 1075              		.cfi_offset 6, -28
 1076              		.cfi_offset 7, -24
 1077              		.cfi_offset 8, -20
 1078              		.cfi_offset 9, -16
 1079              		.cfi_offset 10, -12
 1080              		.cfi_offset 11, -8
 1081              		.cfi_offset 14, -4
 1082 0004 8BB0     		sub	sp, sp, #44
 1083              	.LCFI14:
 1084              		.cfi_def_cfa_offset 80
 1085 0006 0590     		str	r0, [sp, #20]
 1086 0008 0D46     		mov	r5, r1
 1087 000a 0692     		str	r2, [sp, #24]
 1088 000c 9A46     		mov	r10, r3	@ movhi
 1089              	.LVL126:
 186:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 1090              		.loc 1 186 1 view .LVU322
 1091 000e 9DF850B0 		ldrb	fp, [sp, #80]	@ zero_extendqisi2
 1092 0012 159E     		ldr	r6, [sp, #84]
 1093 0014 BDF95830 		ldrsh	r3, [sp, #88]
 1094 0018 0993     		str	r3, [sp, #36]
 187:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1095              		.loc 1 187 5 is_stmt 1 view .LVU323
 187:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1096              		.loc 1 187 24 is_stmt 0 view .LVU324
 1097 001a FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 1098              	.LVL127:
 187:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1099              		.loc 1 187 24 view .LVU325
 1100 001e 8146     		mov	r9, r0
 1101              	.LVL128:
 189:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 1102              		.loc 1 189 5 is_stmt 1 view .LVU326
 190:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1103              		.loc 1 190 5 view .LVU327
 192:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = blend_area->y1; y <= blend_area->y2; y++) {
 1104              		.loc 1 192 5 view .LVU328
 192:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = blend_area->y1; y <= blend_area->y2; y++) {
 1105              		.loc 1 192 7 is_stmt 0 view .LVU329
 1106 0020 9EB1     		cbz	r6, .L93
 1107              	.LBB67:
 200:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         int32_t h = lv_area_get_height(blend_area);
 1108              		.loc 1 200 9 is_stmt 1 view .LVU330
 1109              	.LVL129:
 1110              	.LBB68:
 1111              	.LBI68:
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 1112              		.loc 3 123 26 view .LVU331
 1113              	.LBB69:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1114              		.loc 3 125 5 view .LVU332
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1115              		.loc 3 125 31 is_stmt 0 view .LVU333
 1116 0022 AF88     		ldrh	r7, [r5, #4]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 47


 1117              		.loc 3 125 44 view .LVU334
 1118 0024 2B88     		ldrh	r3, [r5]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1119              		.loc 3 125 36 view .LVU335
 1120 0026 FF1A     		subs	r7, r7, r3
 1121 0028 BFB2     		uxth	r7, r7
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1122              		.loc 3 125 49 view .LVU336
 1123 002a 0137     		adds	r7, r7, #1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1124              		.loc 3 125 12 view .LVU337
 1125 002c 3FB2     		sxth	r7, r7
 1126              	.LVL130:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1127              		.loc 3 125 12 view .LVU338
 1128              	.LBE69:
 1129              	.LBE68:
 201:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1130              		.loc 1 201 9 is_stmt 1 view .LVU339
 1131              	.LBB70:
 1132              	.LBI70:
 133:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 1133              		.loc 3 133 26 view .LVU340
 1134              	.LBB71:
 1135              		.loc 3 135 5 view .LVU341
 1136              		.loc 3 135 31 is_stmt 0 view .LVU342
 1137 002e EB88     		ldrh	r3, [r5, #6]
 1138              		.loc 3 135 44 view .LVU343
 1139 0030 6A88     		ldrh	r2, [r5, #2]
 1140              		.loc 3 135 36 view .LVU344
 1141 0032 9B1A     		subs	r3, r3, r2
 1142 0034 9BB2     		uxth	r3, r3
 1143              		.loc 3 135 49 view .LVU345
 1144 0036 0133     		adds	r3, r3, #1
 1145              		.loc 3 135 12 view .LVU346
 1146 0038 0FFA83F8 		sxth	r8, r3
 1147              	.LVL131:
 1148              		.loc 3 135 12 view .LVU347
 1149              	.LBE71:
 1150              	.LBE70:
 203:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1151              		.loc 1 203 9 is_stmt 1 view .LVU348
 203:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1152              		.loc 1 203 15 is_stmt 0 view .LVU349
 1153 003c 4FF0000C 		mov	ip, #0
 1154 0040 0790     		str	r0, [sp, #28]
 1155 0042 E146     		mov	r9, ip
 1156 0044 CDF82080 		str	r8, [sp, #32]
 203:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1157              		.loc 1 203 9 view .LVU350
 1158 0048 44E0     		b	.L87
 1159              	.LVL132:
 1160              	.L93:
 203:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1161              		.loc 1 203 9 view .LVU351
 1162              	.LBE67:
 193:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 48


 1163              		.loc 1 193 9 is_stmt 1 view .LVU352
 193:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 1164              		.loc 1 193 27 is_stmt 0 view .LVU353
 1165 004a B5F90270 		ldrsh	r7, [r5, #2]
 1166              	.LVL133:
 193:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 1167              		.loc 1 193 27 view .LVU354
 1168 004e 3A46     		mov	r2, r7
 1169 0050 059E     		ldr	r6, [sp, #20]
 1170 0052 DDF81880 		ldr	r8, [sp, #24]
 1171 0056 5B46     		mov	r3, fp
 1172 0058 AB46     		mov	fp, r5
 1173 005a 1D46     		mov	r5, r3
 1174              	.LVL134:
 193:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 1175              		.loc 1 193 9 view .LVU355
 1176 005c 13E0     		b	.L82
 1177              	.LVL135:
 1178              	.L84:
 195:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 1179              		.loc 1 195 17 is_stmt 1 view .LVU356
 195:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 1180              		.loc 1 195 21 is_stmt 0 view .LVU357
 1181 005e D9F80000 		ldr	r0, [r9]
 195:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 1182              		.loc 1 195 29 view .LVU358
 1183 0062 C769     		ldr	r7, [r0, #28]
 195:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 1184              		.loc 1 195 17 view .LVU359
 1185 0064 0295     		str	r5, [sp, #8]
 1186 0066 ADF804A0 		strh	r10, [sp, #4]	@ movhi
 1187 006a BDF91430 		ldrsh	r3, [sp, #20]
 1188 006e 0093     		str	r3, [sp]
 1189 0070 23B2     		sxth	r3, r4
 1190 0072 4246     		mov	r2, r8
 1191 0074 3146     		mov	r1, r6
 1192 0076 B847     		blx	r7
 1193              	.LVL136:
 194:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, x, y, color, o
 1194              		.loc 1 194 59 is_stmt 1 discriminator 3 view .LVU360
 1195 0078 0134     		adds	r4, r4, #1
 1196              	.LVL137:
 1197              	.L83:
 194:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, x, y, color, o
 1198              		.loc 1 194 39 discriminator 1 view .LVU361
 194:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, x, y, color, o
 1199              		.loc 1 194 52 is_stmt 0 discriminator 1 view .LVU362
 1200 007a BBF90430 		ldrsh	r3, [fp, #4]
 194:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, x, y, color, o
 1201              		.loc 1 194 39 discriminator 1 view .LVU363
 1202 007e A342     		cmp	r3, r4
 1203 0080 EDDA     		bge	.L84
 193:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 1204              		.loc 1 193 55 discriminator 2 view .LVU364
 1205 0082 059A     		ldr	r2, [sp, #20]
 193:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 1206              		.loc 1 193 55 is_stmt 1 discriminator 2 view .LVU365
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 49


 1207 0084 0132     		adds	r2, r2, #1
 1208              	.LVL138:
 1209              	.L82:
 193:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 1210              		.loc 1 193 35 discriminator 1 view .LVU366
 193:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 1211              		.loc 1 193 48 is_stmt 0 discriminator 1 view .LVU367
 1212 0086 BBF90630 		ldrsh	r3, [fp, #6]
 193:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 1213              		.loc 1 193 35 discriminator 1 view .LVU368
 1214 008a 9342     		cmp	r3, r2
 1215 008c 27DB     		blt	.L80
 194:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, x, y, color, o
 1216              		.loc 1 194 13 is_stmt 1 view .LVU369
 194:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, x, y, color, o
 1217              		.loc 1 194 31 is_stmt 0 view .LVU370
 1218 008e BBF90040 		ldrsh	r4, [fp]
 1219              	.LVL139:
 194:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, x, y, color, o
 1220              		.loc 1 194 31 view .LVU371
 1221 0092 0592     		str	r2, [sp, #20]
 194:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, x, y, color, o
 1222              		.loc 1 194 13 view .LVU372
 1223 0094 F1E7     		b	.L83
 1224              	.LVL140:
 1225              	.L88:
 1226              	.LBB72:
 204:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 1227              		.loc 1 204 32 is_stmt 1 discriminator 2 view .LVU373
 1228 0096 0134     		adds	r4, r4, #1
 1229              	.LVL141:
 1230              	.L90:
 204:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 1231              		.loc 1 204 26 discriminator 1 view .LVU374
 1232 0098 BC42     		cmp	r4, r7
 1233 009a 17DA     		bge	.L94
 205:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, blend_area
 1234              		.loc 1 205 17 view .LVU375
 205:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, blend_area
 1235              		.loc 1 205 24 is_stmt 0 view .LVU376
 1236 009c 325D     		ldrb	r2, [r6, r4]	@ zero_extendqisi2
 205:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, blend_area
 1237              		.loc 1 205 19 view .LVU377
 1238 009e 002A     		cmp	r2, #0
 1239 00a0 F9D0     		beq	.L88
 206:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1240              		.loc 1 206 21 is_stmt 1 view .LVU378
 206:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1241              		.loc 1 206 25 is_stmt 0 view .LVU379
 1242 00a2 079B     		ldr	r3, [sp, #28]
 1243 00a4 1868     		ldr	r0, [r3]
 206:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1244              		.loc 1 206 33 view .LVU380
 1245 00a6 D0F81C80 		ldr	r8, [r0, #28]
 206:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1246              		.loc 1 206 100 view .LVU381
 1247 00aa 2B88     		ldrh	r3, [r5]
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 50


 206:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1248              		.loc 1 206 105 view .LVU382
 1249 00ac 2344     		add	r3, r3, r4
 206:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1250              		.loc 1 206 120 view .LVU383
 1251 00ae 6988     		ldrh	r1, [r5, #2]
 206:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1252              		.loc 1 206 125 view .LVU384
 1253 00b0 4944     		add	r1, r1, r9
 207:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1254              		.loc 1 207 45 view .LVU385
 1255 00b2 02FB0BF2 		mul	r2, r2, fp
 206:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1256              		.loc 1 206 21 view .LVU386
 1257 00b6 120A     		lsrs	r2, r2, #8
 1258 00b8 0292     		str	r2, [sp, #8]
 1259 00ba ADF804A0 		strh	r10, [sp, #4]	@ movhi
 1260 00be 09B2     		sxth	r1, r1
 1261 00c0 0091     		str	r1, [sp]
 1262 00c2 1BB2     		sxth	r3, r3
 1263 00c4 069A     		ldr	r2, [sp, #24]
 1264 00c6 0599     		ldr	r1, [sp, #20]
 1265 00c8 C047     		blx	r8
 1266              	.LVL142:
 1267 00ca E4E7     		b	.L88
 1268              	.L94:
 210:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 1269              		.loc 1 210 13 is_stmt 1 view .LVU387
 210:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 1270              		.loc 1 210 18 is_stmt 0 view .LVU388
 1271 00cc 099B     		ldr	r3, [sp, #36]
 1272 00ce 1E44     		add	r6, r6, r3
 1273              	.LVL143:
 203:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1274              		.loc 1 203 28 is_stmt 1 discriminator 2 view .LVU389
 1275 00d0 09F10109 		add	r9, r9, #1
 1276              	.LVL144:
 1277              	.L87:
 203:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1278              		.loc 1 203 22 discriminator 1 view .LVU390
 1279 00d4 089B     		ldr	r3, [sp, #32]
 1280 00d6 9945     		cmp	r9, r3
 1281 00d8 01DA     		bge	.L80
 204:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 1282              		.loc 1 204 19 is_stmt 0 view .LVU391
 1283 00da 0024     		movs	r4, #0
 1284 00dc DCE7     		b	.L90
 1285              	.LVL145:
 1286              	.L80:
 204:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 1287              		.loc 1 204 19 view .LVU392
 1288              	.LBE72:
 213:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1289              		.loc 1 213 1 view .LVU393
 1290 00de 0BB0     		add	sp, sp, #44
 1291              	.LCFI15:
 1292              		.cfi_def_cfa_offset 36
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 51


 1293              		@ sp needed
 1294 00e0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 213:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1295              		.loc 1 213 1 view .LVU394
 1296              		.cfi_endproc
 1297              	.LFE158:
 1299              		.section	.text.map_set_px,"ax",%progbits
 1300              		.align	1
 1301              		.syntax unified
 1302              		.thumb
 1303              		.thumb_func
 1305              	map_set_px:
 1306              	.LVL146:
 1307              	.LFB161:
 438:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 1308              		.loc 1 438 1 is_stmt 1 view -0
 1309              		.cfi_startproc
 1310              		@ args = 16, pretend = 0, frame = 24
 1311              		@ frame_needed = 0, uses_anonymous_args = 0
 438:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 1312              		.loc 1 438 1 is_stmt 0 view .LVU396
 1313 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1314              	.LCFI16:
 1315              		.cfi_def_cfa_offset 36
 1316              		.cfi_offset 4, -36
 1317              		.cfi_offset 5, -32
 1318              		.cfi_offset 6, -28
 1319              		.cfi_offset 7, -24
 1320              		.cfi_offset 8, -20
 1321              		.cfi_offset 9, -16
 1322              		.cfi_offset 10, -12
 1323              		.cfi_offset 11, -8
 1324              		.cfi_offset 14, -4
 1325 0004 8BB0     		sub	sp, sp, #44
 1326              	.LCFI17:
 1327              		.cfi_def_cfa_offset 80
 1328 0006 0490     		str	r0, [sp, #16]
 1329 0008 0D46     		mov	r5, r1
 1330 000a 0592     		str	r2, [sp, #20]
 1331 000c 1F46     		mov	r7, r3
 1332 000e BDF95030 		ldrsh	r3, [sp, #80]
 1333              	.LVL147:
 438:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 1334              		.loc 1 438 1 view .LVU397
 1335 0012 0893     		str	r3, [sp, #32]
 1336 0014 9DF854B0 		ldrb	fp, [sp, #84]	@ zero_extendqisi2
 1337 0018 DDF85880 		ldr	r8, [sp, #88]
 1338 001c BDF95C90 		ldrsh	r9, [sp, #92]
 439:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1339              		.loc 1 439 5 is_stmt 1 view .LVU398
 439:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1340              		.loc 1 439 24 is_stmt 0 view .LVU399
 1341 0020 FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 1342              	.LVL148:
 439:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1343              		.loc 1 439 24 view .LVU400
 1344 0024 8246     		mov	r10, r0
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 52


 1345              	.LVL149:
 441:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 1346              		.loc 1 441 5 is_stmt 1 view .LVU401
 1347              	.LBB73:
 1348              	.LBI73:
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 1349              		.loc 3 123 26 view .LVU402
 1350              	.LBB74:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1351              		.loc 3 125 5 view .LVU403
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1352              		.loc 3 125 31 is_stmt 0 view .LVU404
 1353 0026 AE88     		ldrh	r6, [r5, #4]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1354              		.loc 3 125 44 view .LVU405
 1355 0028 2B88     		ldrh	r3, [r5]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1356              		.loc 3 125 36 view .LVU406
 1357 002a F61A     		subs	r6, r6, r3
 1358 002c B6B2     		uxth	r6, r6
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1359              		.loc 3 125 49 view .LVU407
 1360 002e 0136     		adds	r6, r6, #1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1361              		.loc 3 125 12 view .LVU408
 1362 0030 36B2     		sxth	r6, r6
 1363              	.LVL150:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1364              		.loc 3 125 12 view .LVU409
 1365              	.LBE74:
 1366              	.LBE73:
 442:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1367              		.loc 1 442 5 is_stmt 1 view .LVU410
 1368              	.LBB75:
 1369              	.LBI75:
 133:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 1370              		.loc 3 133 26 view .LVU411
 1371              	.LBB76:
 1372              		.loc 3 135 5 view .LVU412
 1373              		.loc 3 135 31 is_stmt 0 view .LVU413
 1374 0032 EB88     		ldrh	r3, [r5, #6]
 1375              		.loc 3 135 44 view .LVU414
 1376 0034 6A88     		ldrh	r2, [r5, #2]
 1377              		.loc 3 135 36 view .LVU415
 1378 0036 9B1A     		subs	r3, r3, r2
 1379 0038 9BB2     		uxth	r3, r3
 1380              		.loc 3 135 49 view .LVU416
 1381 003a 0133     		adds	r3, r3, #1
 1382              		.loc 3 135 12 view .LVU417
 1383 003c 1BB2     		sxth	r3, r3
 1384 003e 0793     		str	r3, [sp, #28]
 1385              	.LVL151:
 1386              		.loc 3 135 12 view .LVU418
 1387              	.LBE76:
 1388              	.LBE75:
 444:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 1389              		.loc 1 444 5 is_stmt 1 view .LVU419
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 53


 445:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1390              		.loc 1 445 5 view .LVU420
 447:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 1391              		.loc 1 447 5 view .LVU421
 447:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 1392              		.loc 1 447 7 is_stmt 0 view .LVU422
 1393 0040 B8F1000F 		cmp	r8, #0
 1394 0044 27D0     		beq	.L104
 457:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1395              		.loc 1 457 15 view .LVU423
 1396 0046 4FF0000C 		mov	ip, #0
 1397 004a 0690     		str	r0, [sp, #24]
 1398 004c E246     		mov	r10, ip
 1399 004e CDF82490 		str	r9, [sp, #36]
 1400 0052 B946     		mov	r9, r7
 1401 0054 47E0     		b	.L97
 1402              	.LVL152:
 1403              	.L98:
 450:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                         opa);
 1404              		.loc 1 450 17 is_stmt 1 view .LVU424
 450:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                         opa);
 1405              		.loc 1 450 21 is_stmt 0 view .LVU425
 1406 0056 DAF80000 		ldr	r0, [r10]
 450:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                         opa);
 1407              		.loc 1 450 29 view .LVU426
 1408 005a C669     		ldr	r6, [r0, #28]
 450:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                         opa);
 1409              		.loc 1 450 95 view .LVU427
 1410 005c 2B88     		ldrh	r3, [r5]
 450:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                         opa);
 1411              		.loc 1 450 100 view .LVU428
 1412 005e 2344     		add	r3, r3, r4
 450:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                         opa);
 1413              		.loc 1 450 114 view .LVU429
 1414 0060 6A88     		ldrh	r2, [r5, #2]
 450:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                         opa);
 1415              		.loc 1 450 119 view .LVU430
 1416 0062 4A44     		add	r2, r2, r9
 450:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                         opa);
 1417              		.loc 1 450 17 view .LVU431
 1418 0064 CDF808B0 		str	fp, [sp, #8]
 1419 0068 37F81410 		ldrh	r1, [r7, r4, lsl #1]
 1420 006c ADF80410 		strh	r1, [sp, #4]	@ movhi
 1421 0070 12B2     		sxth	r2, r2
 1422 0072 0092     		str	r2, [sp]
 1423 0074 1BB2     		sxth	r3, r3
 1424 0076 059A     		ldr	r2, [sp, #20]
 1425 0078 0499     		ldr	r1, [sp, #16]
 1426 007a B047     		blx	r6
 1427              	.LVL153:
 449:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area->x1 
 1428              		.loc 1 449 32 is_stmt 1 discriminator 3 view .LVU432
 1429 007c 0134     		adds	r4, r4, #1
 1430              	.LVL154:
 1431              	.L99:
 449:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area->x1 
 1432              		.loc 1 449 26 discriminator 1 view .LVU433
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 54


 1433 007e 4445     		cmp	r4, r8
 1434 0080 E9DB     		blt	.L98
 453:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 1435              		.loc 1 453 13 view .LVU434
 453:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 1436              		.loc 1 453 21 is_stmt 0 view .LVU435
 1437 0082 089B     		ldr	r3, [sp, #32]
 1438 0084 07EB4307 		add	r7, r7, r3, lsl #1
 1439              	.LVL155:
 448:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1440              		.loc 1 448 28 is_stmt 1 discriminator 2 view .LVU436
 1441 0088 09F10109 		add	r9, r9, #1
 1442              	.LVL156:
 1443              	.L96:
 448:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1444              		.loc 1 448 22 discriminator 1 view .LVU437
 1445 008c 079B     		ldr	r3, [sp, #28]
 1446 008e 9945     		cmp	r9, r3
 1447 0090 2EDA     		bge	.L95
 449:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area->x1 
 1448              		.loc 1 449 19 is_stmt 0 view .LVU438
 1449 0092 0024     		movs	r4, #0
 1450 0094 F3E7     		b	.L99
 1451              	.LVL157:
 1452              	.L104:
 448:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1453              		.loc 1 448 15 view .LVU439
 1454 0096 4FF00009 		mov	r9, #0
 1455 009a B046     		mov	r8, r6
 1456 009c F6E7     		b	.L96
 1457              	.LVL158:
 1458              	.L101:
 458:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 1459              		.loc 1 458 32 is_stmt 1 discriminator 2 view .LVU440
 1460 009e 0134     		adds	r4, r4, #1
 1461              	.LVL159:
 1462              	.L103:
 458:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 1463              		.loc 1 458 26 discriminator 1 view .LVU441
 1464 00a0 B442     		cmp	r4, r6
 1465 00a2 19DA     		bge	.L108
 459:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area-
 1466              		.loc 1 459 17 view .LVU442
 459:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area-
 1467              		.loc 1 459 24 is_stmt 0 view .LVU443
 1468 00a4 18F80420 		ldrb	r2, [r8, r4]	@ zero_extendqisi2
 459:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area-
 1469              		.loc 1 459 19 view .LVU444
 1470 00a8 002A     		cmp	r2, #0
 1471 00aa F8D0     		beq	.L101
 460:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1472              		.loc 1 460 21 is_stmt 1 view .LVU445
 460:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1473              		.loc 1 460 25 is_stmt 0 view .LVU446
 1474 00ac 069B     		ldr	r3, [sp, #24]
 1475 00ae 1868     		ldr	r0, [r3]
 460:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 55


 1476              		.loc 1 460 33 view .LVU447
 1477 00b0 C769     		ldr	r7, [r0, #28]
 460:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1478              		.loc 1 460 99 view .LVU448
 1479 00b2 2B88     		ldrh	r3, [r5]
 460:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1480              		.loc 1 460 104 view .LVU449
 1481 00b4 2344     		add	r3, r3, r4
 460:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1482              		.loc 1 460 118 view .LVU450
 1483 00b6 6988     		ldrh	r1, [r5, #2]
 460:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1484              		.loc 1 460 123 view .LVU451
 1485 00b8 5144     		add	r1, r1, r10
 461:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1486              		.loc 1 461 45 view .LVU452
 1487 00ba 02FB0BF2 		mul	r2, r2, fp
 460:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1488              		.loc 1 460 21 view .LVU453
 1489 00be 120A     		lsrs	r2, r2, #8
 1490 00c0 0292     		str	r2, [sp, #8]
 1491 00c2 39F81420 		ldrh	r2, [r9, r4, lsl #1]
 1492 00c6 ADF80420 		strh	r2, [sp, #4]	@ movhi
 1493 00ca 09B2     		sxth	r1, r1
 1494 00cc 0091     		str	r1, [sp]
 1495 00ce 1BB2     		sxth	r3, r3
 1496 00d0 059A     		ldr	r2, [sp, #20]
 1497 00d2 0499     		ldr	r1, [sp, #16]
 1498 00d4 B847     		blx	r7
 1499              	.LVL160:
 1500 00d6 E2E7     		b	.L101
 1501              	.L108:
 464:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 1502              		.loc 1 464 13 is_stmt 1 view .LVU454
 464:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 1503              		.loc 1 464 18 is_stmt 0 view .LVU455
 1504 00d8 099B     		ldr	r3, [sp, #36]
 1505 00da 9844     		add	r8, r8, r3
 1506              	.LVL161:
 465:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 1507              		.loc 1 465 13 is_stmt 1 view .LVU456
 465:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 1508              		.loc 1 465 21 is_stmt 0 view .LVU457
 1509 00dc 089B     		ldr	r3, [sp, #32]
 1510 00de 09EB4309 		add	r9, r9, r3, lsl #1
 1511              	.LVL162:
 457:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1512              		.loc 1 457 28 is_stmt 1 discriminator 2 view .LVU458
 1513 00e2 0AF1010A 		add	r10, r10, #1
 1514              	.LVL163:
 1515              	.L97:
 457:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1516              		.loc 1 457 22 discriminator 1 view .LVU459
 1517 00e6 079B     		ldr	r3, [sp, #28]
 1518 00e8 9A45     		cmp	r10, r3
 1519 00ea 01DA     		bge	.L95
 458:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 56


 1520              		.loc 1 458 19 is_stmt 0 view .LVU460
 1521 00ec 0024     		movs	r4, #0
 1522 00ee D7E7     		b	.L103
 1523              	.LVL164:
 1524              	.L95:
 468:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1525              		.loc 1 468 1 view .LVU461
 1526 00f0 0BB0     		add	sp, sp, #44
 1527              	.LCFI18:
 1528              		.cfi_def_cfa_offset 36
 1529              		@ sp needed
 1530 00f2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 468:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1531              		.loc 1 468 1 view .LVU462
 1532              		.cfi_endproc
 1533              	.LFE161:
 1535              		.section	.text.fill_normal,"ax",%progbits
 1536              		.align	1
 1537              		.syntax unified
 1538              		.thumb
 1539              		.thumb_func
 1541              	fill_normal:
 1542              	.LVL165:
 1543              	.LFB159:
 217:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 1544              		.loc 1 217 1 is_stmt 1 view -0
 1545              		.cfi_startproc
 1546              		@ args = 12, pretend = 0, frame = 24
 1547              		@ frame_needed = 0, uses_anonymous_args = 0
 217:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 1548              		.loc 1 217 1 is_stmt 0 view .LVU464
 1549 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1550              	.LCFI19:
 1551              		.cfi_def_cfa_offset 36
 1552              		.cfi_offset 4, -36
 1553              		.cfi_offset 5, -32
 1554              		.cfi_offset 6, -28
 1555              		.cfi_offset 7, -24
 1556              		.cfi_offset 8, -20
 1557              		.cfi_offset 9, -16
 1558              		.cfi_offset 10, -12
 1559              		.cfi_offset 11, -8
 1560              		.cfi_offset 14, -4
 1561 0004 87B0     		sub	sp, sp, #28
 1562              	.LCFI20:
 1563              		.cfi_def_cfa_offset 64
 1564 0006 0446     		mov	r4, r0
 1565 0008 0E46     		mov	r6, r1
 1566 000a 0192     		str	r2, [sp, #4]
 1567 000c 9946     		mov	r9, r3	@ movhi
 1568              	.LVL166:
 217:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 1569              		.loc 1 217 1 view .LVU465
 1570 000e 9DF84030 		ldrb	r3, [sp, #64]	@ zero_extendqisi2
 1571 0012 0093     		str	r3, [sp]
 1572 0014 119D     		ldr	r5, [sp, #68]
 1573 0016 BDF94830 		ldrsh	r3, [sp, #72]
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 57


 1574 001a 0293     		str	r3, [sp, #8]
 218:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 1575              		.loc 1 218 5 is_stmt 1 view .LVU466
 218:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 1576              		.loc 1 218 24 is_stmt 0 view .LVU467
 1577 001c FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 1578              	.LVL167:
 219:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 1579              		.loc 1 219 5 is_stmt 1 view .LVU468
 1580              	.LBB77:
 1581              	.LBI77:
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 1582              		.loc 3 123 26 view .LVU469
 1583              	.LBB78:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1584              		.loc 3 125 5 view .LVU470
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1585              		.loc 3 125 31 is_stmt 0 view .LVU471
 1586 0020 B788     		ldrh	r7, [r6, #4]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1587              		.loc 3 125 44 view .LVU472
 1588 0022 3388     		ldrh	r3, [r6]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1589              		.loc 3 125 36 view .LVU473
 1590 0024 FF1A     		subs	r7, r7, r3
 1591 0026 BFB2     		uxth	r7, r7
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1592              		.loc 3 125 49 view .LVU474
 1593 0028 0137     		adds	r7, r7, #1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1594              		.loc 3 125 12 view .LVU475
 1595 002a 3FB2     		sxth	r7, r7
 1596              	.LVL168:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1597              		.loc 3 125 12 view .LVU476
 1598              	.LBE78:
 1599              	.LBE77:
 220:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1600              		.loc 1 220 5 is_stmt 1 view .LVU477
 1601              	.LBB79:
 1602              	.LBI79:
 133:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 1603              		.loc 3 133 26 view .LVU478
 1604              	.LBB80:
 1605              		.loc 3 135 5 view .LVU479
 1606              		.loc 3 135 31 is_stmt 0 view .LVU480
 1607 002c B6F806B0 		ldrh	fp, [r6, #6]
 1608              		.loc 3 135 44 view .LVU481
 1609 0030 7388     		ldrh	r3, [r6, #2]
 1610              		.loc 3 135 36 view .LVU482
 1611 0032 ABEB030B 		sub	fp, fp, r3
 1612 0036 1FFA8BFB 		uxth	fp, fp
 1613              		.loc 3 135 49 view .LVU483
 1614 003a 0BF1010B 		add	fp, fp, #1
 1615              		.loc 3 135 12 view .LVU484
 1616 003e 0FFA8BFB 		sxth	fp, fp
 1617              	.LVL169:
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 58


 1618              		.loc 3 135 12 view .LVU485
 1619              	.LBE80:
 1620              	.LBE79:
 222:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 1621              		.loc 1 222 5 is_stmt 1 view .LVU486
 223:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1622              		.loc 1 223 5 view .LVU487
 226:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 1623              		.loc 1 226 5 view .LVU488
 226:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 1624              		.loc 1 226 7 is_stmt 0 view .LVU489
 1625 0042 75B1     		cbz	r5, .L162
 1626              	.LBB81:
 269:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 1627              		.loc 1 269 9 is_stmt 1 view .LVU490
 1628              	.LVL170:
 269:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 1629              		.loc 1 269 59 is_stmt 0 view .LVU491
 1630 0044 4FEA0941 		lsl	r1, r9, #16
 269:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 1631              		.loc 1 269 18 view .LVU492
 1632 0048 11FA89FA 		uxtah	r10, r1, r9
 1633              	.LVL171:
 272:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t x_end4 = w - 4;
 1634              		.loc 1 272 9 is_stmt 1 view .LVU493
 272:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t x_end4 = w - 4;
 1635              		.loc 1 272 11 is_stmt 0 view .LVU494
 1636 004c 009B     		ldr	r3, [sp]
 1637 004e FC2B     		cmp	r3, #252
 1638 0050 40F2E280 		bls	.L119
 1639              	.LBB82:
 273:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 1640              		.loc 1 273 13 is_stmt 1 view .LVU495
 273:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 1641              		.loc 1 273 21 is_stmt 0 view .LVU496
 1642 0054 A7F10408 		sub	r8, r7, #4
 1643              	.LVL172:
 274:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 1644              		.loc 1 274 13 is_stmt 1 view .LVU497
 274:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 1645              		.loc 1 274 19 is_stmt 0 view .LVU498
 1646 0058 0023     		movs	r3, #0
 1647 005a CDF800B0 		str	fp, [sp]
 1648 005e 9B46     		mov	fp, r3
 1649              	.LVL173:
 274:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 1650              		.loc 1 274 13 view .LVU499
 1651 0060 D5E0     		b	.L120
 1652              	.LVL174:
 1653              	.L162:
 274:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 1654              		.loc 1 274 13 view .LVU500
 1655              	.LBE82:
 1656              	.LBE81:
 227:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 1657              		.loc 1 227 9 is_stmt 1 view .LVU501
 227:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 59


 1658              		.loc 1 227 11 is_stmt 0 view .LVU502
 1659 0062 009B     		ldr	r3, [sp]
 1660 0064 FC2B     		cmp	r3, #252
 1661 0066 26D8     		bhi	.L154
 1662              	.LBB89:
 235:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_color_t last_res_color = lv_color_mix(color, last_dest_color, opa);
 1663              		.loc 1 235 13 is_stmt 1 view .LVU503
 1664              	.LBB90:
 1665              	.LBI90:
 518:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 519:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 520:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Mix two colors. Both color can have alpha value.
 521:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param bg_color background color
 522:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param bg_opa alpha of the background color
 523:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param fg_color foreground color
 524:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param fg_opa alpha of the foreground color
 525:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param res_color the result color
 526:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param res_opa the result opacity
 527:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 528:lvgl/src/draw/sw/../../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM static inline void lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 529:lvgl/src/draw/sw/../../misc/lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
 530:lvgl/src/draw/sw/../../misc/lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 531:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 532:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Pick the foreground if it's fully opaque or the Background is fully transparent*/
 533:lvgl/src/draw/sw/../../misc/lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 534:lvgl/src/draw/sw/../../misc/lv_color.h ****         res_color->full = fg_color.full;
 535:lvgl/src/draw/sw/../../misc/lv_color.h ****         *res_opa = fg_opa;
 536:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 537:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Transparent foreground: use the Background*/
 538:lvgl/src/draw/sw/../../misc/lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 539:lvgl/src/draw/sw/../../misc/lv_color.h ****         res_color->full = bg_color.full;
 540:lvgl/src/draw/sw/../../misc/lv_color.h ****         *res_opa = bg_opa;
 541:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 542:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Opaque background: use simple mix*/
 543:lvgl/src/draw/sw/../../misc/lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 544:lvgl/src/draw/sw/../../misc/lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 545:lvgl/src/draw/sw/../../misc/lv_color.h ****         *res_opa = LV_OPA_COVER;
 546:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 547:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 548:lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
 549:lvgl/src/draw/sw/../../misc/lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
 550:lvgl/src/draw/sw/../../misc/lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 551:lvgl/src/draw/sw/../../misc/lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 552:lvgl/src/draw/sw/../../misc/lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 553:lvgl/src/draw/sw/../../misc/lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 554:lvgl/src/draw/sw/../../misc/lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
 555:lvgl/src/draw/sw/../../misc/lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 556:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 557:lvgl/src/draw/sw/../../misc/lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
 558:lvgl/src/draw/sw/../../misc/lv_color.h ****            bg_color.full != bg_color_save.full) {
 559:lvgl/src/draw/sw/../../misc/lv_color.h ****             fg_opa_save        = fg_opa;
 560:lvgl/src/draw/sw/../../misc/lv_color.h ****             bg_opa_save        = bg_opa;
 561:lvgl/src/draw/sw/../../misc/lv_color.h ****             fg_color_save.full = fg_color.full;
 562:lvgl/src/draw/sw/../../misc/lv_color.h ****             bg_color_save.full = bg_color.full;
 563:lvgl/src/draw/sw/../../misc/lv_color.h ****             /*Info:
 564:lvgl/src/draw/sw/../../misc/lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
 565:lvgl/src/draw/sw/../../misc/lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 60


 566:lvgl/src/draw/sw/../../misc/lv_color.h ****             LV_ASSERT(res_opa_saved != 0);
 567:lvgl/src/draw/sw/../../misc/lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
 568:lvgl/src/draw/sw/../../misc/lv_color.h ****             res_color_saved = lv_color_mix(fg_color, bg_color, ratio);
 569:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 570:lvgl/src/draw/sw/../../misc/lv_color.h ****         }
 571:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 572:lvgl/src/draw/sw/../../misc/lv_color.h ****         res_color->full = res_color_saved.full;
 573:lvgl/src/draw/sw/../../misc/lv_color.h ****         *res_opa = res_opa_saved;
 574:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 575:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 576:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 577:lvgl/src/draw/sw/../../misc/lv_color.h **** //! @endcond
 578:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 579:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 580:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Get the brightness of a color
 581:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param color a color
 582:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @return the brightness [0..255]
 583:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 584:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 585:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 586:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color32_t c32;
 587:lvgl/src/draw/sw/../../misc/lv_color.h ****     c32.full        = lv_color_to32(color);
 588:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 589:lvgl/src/draw/sw/../../misc/lv_color.h ****     return (uint8_t)(bright >> 3);
 590:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 591:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 592:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)
 593:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 594:lvgl/src/draw/sw/../../misc/lv_color.h ****     return _LV_COLOR_MAKE_TYPE_HELPER LV_COLOR_MAKE(r, g, b);
 595:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 596:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 597:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline lv_color_t lv_color_hex(uint32_t c)
 598:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 599:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 16
 600:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_t r;
 601:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 602:lvgl/src/draw/sw/../../misc/lv_color.h ****     /* Convert a 4 bytes per pixel in format ARGB32 to R5G6B5 format
 603:lvgl/src/draw/sw/../../misc/lv_color.h ****         naive way (by calling lv_color_make with components):
 604:lvgl/src/draw/sw/../../misc/lv_color.h ****                     r = ((c & 0xFF0000) >> 19)
 605:lvgl/src/draw/sw/../../misc/lv_color.h ****                     g = ((c & 0xFF00) >> 10)
 606:lvgl/src/draw/sw/../../misc/lv_color.h ****                     b = ((c & 0xFF) >> 3)
 607:lvgl/src/draw/sw/../../misc/lv_color.h ****                     rgb565 = (r << 11) | (g << 5) | b
 608:lvgl/src/draw/sw/../../misc/lv_color.h ****         That's 3 mask, 5 bitshift and 2 or operations
 609:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 610:lvgl/src/draw/sw/../../misc/lv_color.h ****         A bit better:
 611:lvgl/src/draw/sw/../../misc/lv_color.h ****                     r = ((c & 0xF80000) >> 8)
 612:lvgl/src/draw/sw/../../misc/lv_color.h ****                     g = ((c & 0xFC00) >> 5)
 613:lvgl/src/draw/sw/../../misc/lv_color.h ****                     b = ((c & 0xFF) >> 3)
 614:lvgl/src/draw/sw/../../misc/lv_color.h ****                     rgb565 = r | g | b
 615:lvgl/src/draw/sw/../../misc/lv_color.h ****         That's 3 mask, 3 bitshifts and 2 or operations */
 616:lvgl/src/draw/sw/../../misc/lv_color.h ****     r.full = (uint16_t)(((c & 0xF80000) >> 8) | ((c & 0xFC00) >> 5) | ((c & 0xFF) >> 3));
 617:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 618:lvgl/src/draw/sw/../../misc/lv_color.h ****     /* We want: rrrr rrrr GGGg gggg bbbb bbbb => gggb bbbb rrrr rGGG */
 619:lvgl/src/draw/sw/../../misc/lv_color.h ****     r.full = (uint16_t)(((c & 0xF80000) >> 16) | ((c & 0xFC00) >> 13) | ((c & 0x1C00) << 3) | ((c &
 620:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 621:lvgl/src/draw/sw/../../misc/lv_color.h ****     return r;
 622:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 61


 623:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_t r;
 624:lvgl/src/draw/sw/../../misc/lv_color.h ****     r.full = c | 0xFF000000;
 625:lvgl/src/draw/sw/../../misc/lv_color.h ****     return r;
 626:lvgl/src/draw/sw/../../misc/lv_color.h **** #else /*LV_COLOR_DEPTH == 8*/
 627:lvgl/src/draw/sw/../../misc/lv_color.h ****     return lv_color_make((uint8_t)((c >> 16) & 0xFF), (uint8_t)((c >> 8) & 0xFF), (uint8_t)(c & 0xF
 628:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 629:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 630:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 631:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline lv_color_t lv_color_hex3(uint32_t c)
 632:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 633:lvgl/src/draw/sw/../../misc/lv_color.h ****     return lv_color_make((uint8_t)(((c >> 4) & 0xF0) | ((c >> 8) & 0xF)), (uint8_t)((c & 0xF0) | ((
 634:lvgl/src/draw/sw/../../misc/lv_color.h ****                          (uint8_t)((c & 0xF) | ((c & 0xF) << 4)));
 635:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 636:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 637:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline void lv_color_filter_dsc_init(lv_color_filter_dsc_t * dsc, lv_color_filter_cb_t cb)
 638:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 639:lvgl/src/draw/sw/../../misc/lv_color.h ****     dsc->filter_cb = cb;
 640:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 641:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 642:lvgl/src/draw/sw/../../misc/lv_color.h **** //! @cond Doxygen_Suppress
 643:lvgl/src/draw/sw/../../misc/lv_color.h **** //!
 644:lvgl/src/draw/sw/../../misc/lv_color.h **** LV_ATTRIBUTE_FAST_MEM void lv_color_fill(lv_color_t * buf, lv_color_t color, uint32_t px_num);
 645:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 646:lvgl/src/draw/sw/../../misc/lv_color.h **** //! @endcond
 647:lvgl/src/draw/sw/../../misc/lv_color.h **** lv_color_t lv_color_lighten(lv_color_t c, lv_opa_t lvl);
 648:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 649:lvgl/src/draw/sw/../../misc/lv_color.h **** lv_color_t lv_color_darken(lv_color_t c, lv_opa_t lvl);
 650:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 651:lvgl/src/draw/sw/../../misc/lv_color.h **** lv_color_t lv_color_change_lightness(lv_color_t c, lv_opa_t lvl);
 652:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 653:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 654:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Convert a HSV color to RGB
 655:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param h hue [0..359]
 656:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param s saturation [0..100]
 657:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param v value [0..100]
 658:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @return the given RGB color in RGB (with LV_COLOR_DEPTH depth)
 659:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 660:lvgl/src/draw/sw/../../misc/lv_color.h **** lv_color_t lv_color_hsv_to_rgb(uint16_t h, uint8_t s, uint8_t v);
 661:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 662:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 663:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Convert a 32-bit RGB color to HSV
 664:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param r8 8-bit red
 665:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param g8 8-bit green
 666:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param b8 8-bit blue
 667:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @return the given RGB color in HSV
 668:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 669:lvgl/src/draw/sw/../../misc/lv_color.h **** lv_color_hsv_t lv_color_rgb_to_hsv(uint8_t r8, uint8_t g8, uint8_t b8);
 670:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 671:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 672:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Convert a color to HSV
 673:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param color color
 674:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @return the given color in HSV
 675:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 676:lvgl/src/draw/sw/../../misc/lv_color.h **** lv_color_hsv_t lv_color_to_hsv(lv_color_t color);
 677:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 678:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 679:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Just a wrapper around LV_COLOR_CHROMA_KEY because it might be more convenient to use a function 
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 62


 680:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @return LV_COLOR_CHROMA_KEY
 681:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 682:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline lv_color_t lv_color_chroma_key(void)
 683:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 684:lvgl/src/draw/sw/../../misc/lv_color.h ****     return LV_COLOR_CHROMA_KEY;
 685:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 686:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 687:lvgl/src/draw/sw/../../misc/lv_color.h **** /**********************
 688:lvgl/src/draw/sw/../../misc/lv_color.h ****  *  PREDEFINED COLORS
 689:lvgl/src/draw/sw/../../misc/lv_color.h ****  **********************/
 690:lvgl/src/draw/sw/../../misc/lv_color.h **** /*Source: https://vuetifyjs.com/en/styles/colors/#material-colors*/
 691:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 692:lvgl/src/draw/sw/../../misc/lv_color.h **** lv_color_t lv_palette_main(lv_palette_t p);
 693:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline lv_color_t lv_color_white(void)
 694:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 695:lvgl/src/draw/sw/../../misc/lv_color.h ****     return lv_color_make(0xff, 0xff, 0xff);
 696:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 697:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline lv_color_t lv_color_black(void)
 1666              		.loc 2 697 26 view .LVU504
 698:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 699:lvgl/src/draw/sw/../../misc/lv_color.h ****     return lv_color_make(0x00, 0x0, 0x00);
 1667              		.loc 2 699 5 view .LVU505
 1668              	.LVL175:
 1669              	.LBB91:
 1670              	.LBI91:
 592:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 1671              		.loc 2 592 26 view .LVU506
 1672              	.LBB92:
 594:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 1673              		.loc 2 594 5 view .LVU507
 594:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 1674              		.loc 2 594 12 is_stmt 0 view .LVU508
 1675 0068 4FF00001 		mov	r1, #0	@ movhi
 1676 006c 21F01F01 		bic	r1, r1, #31
 1677 0070 21F4FC61 		bic	r1, r1, #2016
 1678 0074 21F47841 		bic	r1, r1, #63488
 1679              	.LVL176:
 594:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 1680              		.loc 2 594 12 view .LVU509
 1681 0078 0E46     		mov	r6, r1	@ movhi
 1682              	.LVL177:
 594:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 1683              		.loc 2 594 12 view .LVU510
 1684              	.LBE92:
 1685              	.LBE91:
 1686              	.LBE90:
 236:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1687              		.loc 1 236 13 is_stmt 1 view .LVU511
 236:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1688              		.loc 1 236 41 is_stmt 0 view .LVU512
 1689 007a 009D     		ldr	r5, [sp]
 1690 007c 2A46     		mov	r2, r5
 1691              	.LVL178:
 236:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1692              		.loc 1 236 41 view .LVU513
 1693 007e 4846     		mov	r0, r9	@ movhi
 1694 0080 FFF7FEFF 		bl	lv_color_mix
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 63


 1695              	.LVL179:
 238:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_color_premult(color, opa, color_premult);
 1696              		.loc 1 238 13 is_stmt 1 view .LVU514
 239:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_opa_t opa_inv = 255 - opa;
 1697              		.loc 1 239 13 view .LVU515
 1698              	.LBB93:
 1699              	.LBI93:
 472:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 1700              		.loc 2 472 42 view .LVU516
 1701              	.LBB94:
 475:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 1702              		.loc 2 475 5 view .LVU517
 475:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 1703              		.loc 2 475 24 is_stmt 0 view .LVU518
 1704 0084 C9F3C423 		ubfx	r3, r9, #11, #5
 475:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 1705              		.loc 2 475 42 view .LVU519
 1706 0088 05FB03F3 		mul	r3, r5, r3
 475:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 1707              		.loc 2 475 12 view .LVU520
 1708 008c ADF81030 		strh	r3, [sp, #16]	@ movhi
 476:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 1709              		.loc 2 476 5 is_stmt 1 view .LVU521
 476:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 1710              		.loc 2 476 24 is_stmt 0 view .LVU522
 1711 0090 C9F34513 		ubfx	r3, r9, #5, #6
 476:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 1712              		.loc 2 476 42 view .LVU523
 1713 0094 05FB03F3 		mul	r3, r5, r3
 476:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 1714              		.loc 2 476 12 view .LVU524
 1715 0098 ADF81230 		strh	r3, [sp, #18]	@ movhi
 477:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 1716              		.loc 2 477 5 is_stmt 1 view .LVU525
 477:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 1717              		.loc 2 477 24 is_stmt 0 view .LVU526
 1718 009c 09F01F03 		and	r3, r9, #31
 477:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 1719              		.loc 2 477 42 view .LVU527
 1720 00a0 05FB03F3 		mul	r3, r5, r3
 477:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 1721              		.loc 2 477 12 view .LVU528
 1722 00a4 ADF81430 		strh	r3, [sp, #20]	@ movhi
 1723              	.LVL180:
 477:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 1724              		.loc 2 477 12 view .LVU529
 1725              	.LBE94:
 1726              	.LBE93:
 240:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1727              		.loc 1 240 13 is_stmt 1 view .LVU530
 240:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1728              		.loc 1 240 22 is_stmt 0 view .LVU531
 1729 00a8 6FEA0509 		mvn	r9, r5
 1730              	.LVL181:
 240:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1731              		.loc 1 240 22 view .LVU532
 1732 00ac 5FFA89F9 		uxtb	r9, r9
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 64


 1733              	.LVL182:
 242:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 1734              		.loc 1 242 13 is_stmt 1 view .LVU533
 242:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 1735              		.loc 1 242 19 is_stmt 0 view .LVU534
 1736 00b0 4FF0000A 		mov	r10, #0
 242:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 1737              		.loc 1 242 13 view .LVU535
 1738 00b4 26E0     		b	.L115
 1739              	.LVL183:
 1740              	.L154:
 242:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 1741              		.loc 1 242 13 view .LVU536
 1742              	.LBE89:
 228:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_color_fill(dest_buf, color, w);
 1743              		.loc 1 228 19 view .LVU537
 1744 00b6 0025     		movs	r5, #0
 1745 00b8 019E     		ldr	r6, [sp, #4]
 1746              	.LVL184:
 1747              	.L111:
 228:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_color_fill(dest_buf, color, w);
 1748              		.loc 1 228 26 is_stmt 1 discriminator 1 view .LVU538
 1749 00ba 5D45     		cmp	r5, fp
 1750 00bc 80F2EE80 		bge	.L109
 229:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 1751              		.loc 1 229 17 view .LVU539
 1752 00c0 3A46     		mov	r2, r7
 1753 00c2 4946     		mov	r1, r9	@ movhi
 1754 00c4 2046     		mov	r0, r4
 1755 00c6 FFF7FEFF 		bl	lv_color_fill
 1756              	.LVL185:
 230:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 1757              		.loc 1 230 17 view .LVU540
 230:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 1758              		.loc 1 230 26 is_stmt 0 view .LVU541
 1759 00ca 04EB4604 		add	r4, r4, r6, lsl #1
 1760              	.LVL186:
 228:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_color_fill(dest_buf, color, w);
 1761              		.loc 1 228 32 is_stmt 1 discriminator 3 view .LVU542
 1762 00ce 0135     		adds	r5, r5, #1
 1763              	.LVL187:
 228:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_color_fill(dest_buf, color, w);
 1764              		.loc 1 228 32 is_stmt 0 discriminator 3 view .LVU543
 1765 00d0 F3E7     		b	.L111
 1766              	.LVL188:
 1767              	.L164:
 1768              	.LBB95:
 245:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1769              		.loc 1 245 25 is_stmt 1 view .LVU544
 245:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1770              		.loc 1 245 41 is_stmt 0 view .LVU545
 1771 00d2 34F81560 		ldrh	r6, [r4, r5, lsl #1]
 1772              	.LVL189:
 254:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 1773              		.loc 1 254 25 is_stmt 1 view .LVU546
 257:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 1774              		.loc 1 257 29 view .LVU547
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 65


 257:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 1775              		.loc 1 257 46 is_stmt 0 view .LVU548
 1776 00d6 4A46     		mov	r2, r9
 1777              	.LVL190:
 257:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 1778              		.loc 1 257 46 view .LVU549
 1779 00d8 3146     		mov	r1, r6	@ movhi
 1780 00da 04A8     		add	r0, sp, #16
 1781              	.LVL191:
 257:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 1782              		.loc 1 257 46 view .LVU550
 1783 00dc FFF7FEFF 		bl	lv_color_mix_premult
 1784              	.LVL192:
 1785              	.L116:
 260:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1786              		.loc 1 260 21 is_stmt 1 view .LVU551
 260:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1787              		.loc 1 260 33 is_stmt 0 view .LVU552
 1788 00e0 A8F80000 		strh	r0, [r8]	@ movhi
 243:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(last_dest_color.full != dest_buf[x].full) {
 1789              		.loc 1 243 36 is_stmt 1 discriminator 2 view .LVU553
 1790 00e4 0135     		adds	r5, r5, #1
 1791              	.LVL193:
 1792              	.L118:
 243:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(last_dest_color.full != dest_buf[x].full) {
 1793              		.loc 1 243 30 discriminator 1 view .LVU554
 1794 00e6 BD42     		cmp	r5, r7
 1795 00e8 07DA     		bge	.L163
 244:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         last_dest_color = dest_buf[x];
 1796              		.loc 1 244 21 view .LVU555
 244:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         last_dest_color = dest_buf[x];
 1797              		.loc 1 244 39 is_stmt 0 view .LVU556
 1798 00ea B3B2     		uxth	r3, r6
 244:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         last_dest_color = dest_buf[x];
 1799              		.loc 1 244 56 view .LVU557
 1800 00ec 04EB4508 		add	r8, r4, r5, lsl #1
 244:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         last_dest_color = dest_buf[x];
 1801              		.loc 1 244 59 view .LVU558
 1802 00f0 34F81520 		ldrh	r2, [r4, r5, lsl #1]
 244:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         last_dest_color = dest_buf[x];
 1803              		.loc 1 244 23 view .LVU559
 1804 00f4 9342     		cmp	r3, r2
 1805 00f6 ECD1     		bne	.L164
 244:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         last_dest_color = dest_buf[x];
 1806              		.loc 1 244 23 view .LVU560
 1807 00f8 F2E7     		b	.L116
 1808              	.L163:
 262:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 1809              		.loc 1 262 17 is_stmt 1 view .LVU561
 262:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 1810              		.loc 1 262 26 is_stmt 0 view .LVU562
 1811 00fa 019B     		ldr	r3, [sp, #4]
 1812 00fc 04EB4304 		add	r4, r4, r3, lsl #1
 1813              	.LVL194:
 242:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 1814              		.loc 1 242 32 is_stmt 1 discriminator 2 view .LVU563
 1815 0100 0AF1010A 		add	r10, r10, #1
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 66


 1816              	.LVL195:
 1817              	.L115:
 242:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 1818              		.loc 1 242 26 discriminator 1 view .LVU564
 1819 0104 DA45     		cmp	r10, fp
 1820 0106 80F2C980 		bge	.L109
 243:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(last_dest_color.full != dest_buf[x].full) {
 1821              		.loc 1 243 23 is_stmt 0 view .LVU565
 1822 010a 0025     		movs	r5, #0
 1823 010c EBE7     		b	.L118
 1824              	.LVL196:
 1825              	.L166:
 243:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(last_dest_color.full != dest_buf[x].full) {
 1826              		.loc 1 243 23 view .LVU566
 1827              	.LBE95:
 1828              	.LBB96:
 1829              	.LBB87:
 276:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1830              		.loc 1 276 21 is_stmt 1 discriminator 1 view .LVU567
 1831 010e A4F80090 		strh	r9, [r4]	@ movhi
 1832              	.L122:
 276:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1833              		.loc 1 276 21 discriminator 4 view .LVU568
 1834 0112 0135     		adds	r5, r5, #1
 1835              	.LVL197:
 276:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1836              		.loc 1 276 21 discriminator 4 view .LVU569
 1837 0114 0234     		adds	r4, r4, #2
 1838              	.LVL198:
 275:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 1839              		.loc 1 275 68 discriminator 2 view .LVU570
 1840 0116 0136     		adds	r6, r6, #1
 1841              	.LVL199:
 1842              	.L144:
 275:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 1843              		.loc 1 275 34 discriminator 1 view .LVU571
 1844 0118 BE42     		cmp	r6, r7
 1845 011a 57DA     		bge	.L160
 275:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 1846              		.loc 1 275 34 is_stmt 0 discriminator 3 view .LVU572
 1847 011c 15F0030F 		tst	r5, #3
 1848 0120 08D0     		beq	.L165
 276:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1849              		.loc 1 276 21 is_stmt 1 view .LVU573
 1850 0122 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 1851 0124 FF2A     		cmp	r2, #255
 1852 0126 F2D0     		beq	.L166
 276:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1853              		.loc 1 276 21 discriminator 2 view .LVU574
 1854 0128 2188     		ldrh	r1, [r4]
 1855 012a 4846     		mov	r0, r9	@ movhi
 1856 012c FFF7FEFF 		bl	lv_color_mix
 1857              	.LVL200:
 1858 0130 2080     		strh	r0, [r4]	@ movhi
 1859 0132 EEE7     		b	.L122
 1860              	.L165:
 1861 0134 3B46     		mov	r3, r7
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 67


 1862 0136 5746     		mov	r7, r10
 1863              	.LVL201:
 276:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1864              		.loc 1 276 21 is_stmt 0 discriminator 2 view .LVU575
 1865 0138 9A46     		mov	r10, r3
 1866              	.LVL202:
 276:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1867              		.loc 1 276 21 discriminator 2 view .LVU576
 1868 013a 0BE0     		b	.L138
 1869              	.LVL203:
 1870              	.L168:
 1871              	.LBB83:
 283:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *(dest_buf + 0) = color;
 1872              		.loc 1 283 25 is_stmt 1 view .LVU577
 283:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *(dest_buf + 0) = color;
 1873              		.loc 1 283 27 is_stmt 0 view .LVU578
 1874 013c 14F0030F 		tst	r4, #3
 1875 0140 32D0     		beq	.L126
 1876              	.LBB84:
 284:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             uint32_t * d = (uint32_t *)(dest_buf + 1);
 1877              		.loc 1 284 29 is_stmt 1 view .LVU579
 284:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             uint32_t * d = (uint32_t *)(dest_buf + 1);
 1878              		.loc 1 284 45 is_stmt 0 view .LVU580
 1879 0142 A4F80090 		strh	r9, [r4]	@ movhi
 285:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *d = c32;
 1880              		.loc 1 285 29 is_stmt 1 view .LVU581
 1881              	.LVL204:
 286:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *(dest_buf + 3) = color;
 1882              		.loc 1 286 29 view .LVU582
 286:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *(dest_buf + 3) = color;
 1883              		.loc 1 286 32 is_stmt 0 view .LVU583
 1884 0146 C4F80270 		str	r7, [r4, #2]
 287:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 1885              		.loc 1 287 29 is_stmt 1 view .LVU584
 287:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 1886              		.loc 1 287 45 is_stmt 0 view .LVU585
 1887 014a A4F80690 		strh	r9, [r4, #6]	@ movhi
 1888              	.LVL205:
 1889              	.L127:
 287:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 1890              		.loc 1 287 45 view .LVU586
 1891              	.LBE84:
 300:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         mask += 4;
 1892              		.loc 1 300 25 is_stmt 1 view .LVU587
 300:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         mask += 4;
 1893              		.loc 1 300 34 is_stmt 0 view .LVU588
 1894 014e 0834     		adds	r4, r4, #8
 1895              	.LVL206:
 301:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 1896              		.loc 1 301 25 is_stmt 1 view .LVU589
 301:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 1897              		.loc 1 301 30 is_stmt 0 view .LVU590
 1898 0150 0435     		adds	r5, r5, #4
 1899              	.LVL207:
 1900              	.L128:
 301:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 1901              		.loc 1 301 30 view .LVU591
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 68


 1902              	.LBE83:
 279:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     uint32_t mask32 = *((uint32_t *)mask);
 1903              		.loc 1 279 38 is_stmt 1 view .LVU592
 1904 0152 0436     		adds	r6, r6, #4
 1905              	.LVL208:
 1906              	.L138:
 279:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     uint32_t mask32 = *((uint32_t *)mask);
 1907              		.loc 1 279 25 discriminator 1 view .LVU593
 1908 0154 4645     		cmp	r6, r8
 1909 0156 3DDC     		bgt	.L167
 1910              	.LBB86:
 280:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(mask32 == 0xFFFFFFFF) {
 1911              		.loc 1 280 21 view .LVU594
 280:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(mask32 == 0xFFFFFFFF) {
 1912              		.loc 1 280 30 is_stmt 0 view .LVU595
 1913 0158 2B68     		ldr	r3, [r5]
 1914              	.LVL209:
 281:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 16
 1915              		.loc 1 281 21 is_stmt 1 view .LVU596
 281:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 16
 1916              		.loc 1 281 23 is_stmt 0 view .LVU597
 1917 015a B3F1FF3F 		cmp	r3, #-1
 1918 015e EDD0     		beq	.L168
 303:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1919              		.loc 1 303 26 is_stmt 1 view .LVU598
 303:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1920              		.loc 1 303 28 is_stmt 0 view .LVU599
 1921 0160 8BB3     		cbz	r3, .L129
 304:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1922              		.loc 1 304 25 is_stmt 1 view .LVU600
 1923 0162 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 1924 0164 FF2A     		cmp	r2, #255
 1925 0166 22D0     		beq	.L169
 304:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1926              		.loc 1 304 25 discriminator 2 view .LVU601
 1927 0168 2188     		ldrh	r1, [r4]
 1928 016a 4846     		mov	r0, r9	@ movhi
 1929 016c FFF7FEFF 		bl	lv_color_mix
 1930              	.LVL210:
 304:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1931              		.loc 1 304 25 is_stmt 0 discriminator 2 view .LVU602
 1932 0170 2080     		strh	r0, [r4]	@ movhi
 1933              	.L131:
 304:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1934              		.loc 1 304 25 is_stmt 1 discriminator 4 view .LVU603
 1935              	.LVL211:
 304:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1936              		.loc 1 304 25 discriminator 4 view .LVU604
 305:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1937              		.loc 1 305 25 view .LVU605
 1938 0172 6A78     		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 1939 0174 FF2A     		cmp	r2, #255
 1940 0176 1DD0     		beq	.L170
 305:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1941              		.loc 1 305 25 discriminator 2 view .LVU606
 1942 0178 6188     		ldrh	r1, [r4, #2]
 1943 017a 4846     		mov	r0, r9	@ movhi
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 69


 1944 017c FFF7FEFF 		bl	lv_color_mix
 1945              	.LVL212:
 1946 0180 6080     		strh	r0, [r4, #2]	@ movhi
 1947              	.L133:
 305:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1948              		.loc 1 305 25 discriminator 4 view .LVU607
 1949              	.LVL213:
 305:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1950              		.loc 1 305 25 discriminator 4 view .LVU608
 306:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1951              		.loc 1 306 25 view .LVU609
 1952 0182 AA78     		ldrb	r2, [r5, #2]	@ zero_extendqisi2
 1953 0184 FF2A     		cmp	r2, #255
 1954 0186 18D0     		beq	.L171
 306:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1955              		.loc 1 306 25 discriminator 2 view .LVU610
 1956 0188 A188     		ldrh	r1, [r4, #4]
 1957 018a 4846     		mov	r0, r9	@ movhi
 1958 018c FFF7FEFF 		bl	lv_color_mix
 1959              	.LVL214:
 1960 0190 A080     		strh	r0, [r4, #4]	@ movhi
 1961              	.L135:
 306:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1962              		.loc 1 306 25 discriminator 4 view .LVU611
 1963              	.LVL215:
 306:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1964              		.loc 1 306 25 discriminator 4 view .LVU612
 307:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 1965              		.loc 1 307 25 view .LVU613
 1966 0192 EA78     		ldrb	r2, [r5, #3]	@ zero_extendqisi2
 1967 0194 FF2A     		cmp	r2, #255
 1968 0196 13D0     		beq	.L172
 307:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 1969              		.loc 1 307 25 discriminator 2 view .LVU614
 1970 0198 E188     		ldrh	r1, [r4, #6]
 1971 019a 4846     		mov	r0, r9	@ movhi
 1972 019c FFF7FEFF 		bl	lv_color_mix
 1973              	.LVL216:
 1974 01a0 E080     		strh	r0, [r4, #6]	@ movhi
 1975              	.L137:
 307:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 1976              		.loc 1 307 25 discriminator 4 view .LVU615
 1977 01a2 0435     		adds	r5, r5, #4
 1978              	.LVL217:
 307:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 1979              		.loc 1 307 25 discriminator 4 view .LVU616
 1980 01a4 0834     		adds	r4, r4, #8
 1981              	.LVL218:
 307:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 1982              		.loc 1 307 25 is_stmt 0 discriminator 4 view .LVU617
 1983 01a6 D4E7     		b	.L128
 1984              	.LVL219:
 1985              	.L126:
 1986              	.LBB85:
 290:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *d = c32;
 1987              		.loc 1 290 29 is_stmt 1 view .LVU618
 291:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *(d + 1) = c32;
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 70


 1988              		.loc 1 291 29 view .LVU619
 291:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *(d + 1) = c32;
 1989              		.loc 1 291 32 is_stmt 0 view .LVU620
 1990 01a8 2760     		str	r7, [r4]
 292:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 1991              		.loc 1 292 29 is_stmt 1 view .LVU621
 292:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 1992              		.loc 1 292 38 is_stmt 0 view .LVU622
 1993 01aa 6760     		str	r7, [r4, #4]
 1994 01ac CFE7     		b	.L127
 1995              	.LVL220:
 1996              	.L169:
 292:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 1997              		.loc 1 292 38 view .LVU623
 1998              	.LBE85:
 304:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1999              		.loc 1 304 25 is_stmt 1 discriminator 1 view .LVU624
 2000 01ae A4F80090 		strh	r9, [r4]	@ movhi
 2001 01b2 DEE7     		b	.L131
 2002              	.LVL221:
 2003              	.L170:
 305:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 2004              		.loc 1 305 25 discriminator 1 view .LVU625
 2005 01b4 A4F80290 		strh	r9, [r4, #2]	@ movhi
 2006 01b8 E3E7     		b	.L133
 2007              	.LVL222:
 2008              	.L171:
 306:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 2009              		.loc 1 306 25 discriminator 1 view .LVU626
 2010 01ba A4F80490 		strh	r9, [r4, #4]	@ movhi
 2011 01be E8E7     		b	.L135
 2012              	.LVL223:
 2013              	.L172:
 307:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2014              		.loc 1 307 25 discriminator 1 view .LVU627
 2015 01c0 A4F80690 		strh	r9, [r4, #6]	@ movhi
 2016 01c4 EDE7     		b	.L137
 2017              	.LVL224:
 2018              	.L129:
 310:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf += 4;
 2019              		.loc 1 310 25 view .LVU628
 310:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf += 4;
 2020              		.loc 1 310 30 is_stmt 0 view .LVU629
 2021 01c6 0435     		adds	r5, r5, #4
 2022              	.LVL225:
 311:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2023              		.loc 1 311 25 is_stmt 1 view .LVU630
 311:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2024              		.loc 1 311 34 is_stmt 0 view .LVU631
 2025 01c8 0834     		adds	r4, r4, #8
 2026              	.LVL226:
 311:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2027              		.loc 1 311 34 view .LVU632
 2028 01ca C2E7     		b	.L128
 2029              	.LVL227:
 2030              	.L160:
 311:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 71


 2031              		.loc 1 311 34 view .LVU633
 2032 01cc 3B46     		mov	r3, r7
 2033 01ce 5746     		mov	r7, r10
 2034              	.LVL228:
 311:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2035              		.loc 1 311 34 view .LVU634
 2036 01d0 9A46     		mov	r10, r3
 2037              	.LVL229:
 311:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2038              		.loc 1 311 34 view .LVU635
 2039 01d2 BFE7     		b	.L138
 2040              	.LVL230:
 2041              	.L167:
 311:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2042              		.loc 1 311 34 view .LVU636
 2043              	.LBE86:
 2044 01d4 5346     		mov	r3, r10
 2045 01d6 BA46     		mov	r10, r7
 2046              	.LVL231:
 311:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2047              		.loc 1 311 34 view .LVU637
 2048 01d8 1F46     		mov	r7, r3
 2049              	.LVL232:
 311:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2050              		.loc 1 311 34 view .LVU638
 2051 01da 04E0     		b	.L140
 2052              	.LVL233:
 2053              	.L174:
 316:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2054              		.loc 1 316 21 is_stmt 1 discriminator 1 view .LVU639
 2055 01dc A4F80090 		strh	r9, [r4]	@ movhi
 2056              	.L142:
 316:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2057              		.loc 1 316 21 discriminator 4 view .LVU640
 2058 01e0 0135     		adds	r5, r5, #1
 2059              	.LVL234:
 316:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2060              		.loc 1 316 21 discriminator 4 view .LVU641
 2061 01e2 0234     		adds	r4, r4, #2
 2062              	.LVL235:
 315:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 2063              		.loc 1 315 32 view .LVU642
 2064 01e4 0136     		adds	r6, r6, #1
 2065              	.LVL236:
 2066              	.L140:
 315:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 2067              		.loc 1 315 25 discriminator 1 view .LVU643
 2068 01e6 BE42     		cmp	r6, r7
 2069 01e8 08DA     		bge	.L173
 316:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2070              		.loc 1 316 21 view .LVU644
 2071 01ea 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 2072 01ec FF2A     		cmp	r2, #255
 2073 01ee F5D0     		beq	.L174
 316:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2074              		.loc 1 316 21 discriminator 2 view .LVU645
 2075 01f0 2188     		ldrh	r1, [r4]
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 72


 2076 01f2 4846     		mov	r0, r9	@ movhi
 2077 01f4 FFF7FEFF 		bl	lv_color_mix
 2078              	.LVL237:
 2079 01f8 2080     		strh	r0, [r4]	@ movhi
 2080 01fa F1E7     		b	.L142
 2081              	.L173:
 318:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += (mask_stride - w);
 2082              		.loc 1 318 17 view .LVU646
 318:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += (mask_stride - w);
 2083              		.loc 1 318 42 is_stmt 0 view .LVU647
 2084 01fc 019B     		ldr	r3, [sp, #4]
 2085 01fe DB1B     		subs	r3, r3, r7
 318:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += (mask_stride - w);
 2086              		.loc 1 318 26 view .LVU648
 2087 0200 04EB4304 		add	r4, r4, r3, lsl #1
 2088              	.LVL238:
 319:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2089              		.loc 1 319 17 is_stmt 1 view .LVU649
 319:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2090              		.loc 1 319 38 is_stmt 0 view .LVU650
 2091 0204 029B     		ldr	r3, [sp, #8]
 2092 0206 DB1B     		subs	r3, r3, r7
 319:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2093              		.loc 1 319 22 view .LVU651
 2094 0208 1D44     		add	r5, r5, r3
 2095              	.LVL239:
 274:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 2096              		.loc 1 274 32 is_stmt 1 discriminator 2 view .LVU652
 2097 020a 0BF1010B 		add	fp, fp, #1
 2098              	.LVL240:
 2099              	.L120:
 274:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 2100              		.loc 1 274 26 discriminator 1 view .LVU653
 2101 020e 009B     		ldr	r3, [sp]
 2102 0210 9B45     		cmp	fp, r3
 2103 0212 43DA     		bge	.L109
 275:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 2104              		.loc 1 275 23 is_stmt 0 view .LVU654
 2105 0214 0026     		movs	r6, #0
 2106 0216 7FE7     		b	.L144
 2107              	.LVL241:
 2108              	.L119:
 275:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 2109              		.loc 1 275 23 view .LVU655
 2110              	.LBE87:
 2111              	.LBB88:
 325:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_color_t last_res_color;
 2112              		.loc 1 325 13 is_stmt 1 view .LVU656
 326:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_opa_t last_mask = LV_OPA_TRANSP;
 2113              		.loc 1 326 13 view .LVU657
 327:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             last_dest_color.full = dest_buf[0].full;
 2114              		.loc 1 327 13 view .LVU658
 328:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             last_res_color.full = dest_buf[0].full;
 2115              		.loc 1 328 13 view .LVU659
 328:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             last_res_color.full = dest_buf[0].full;
 2116              		.loc 1 328 47 is_stmt 0 view .LVU660
 2117 0218 2088     		ldrh	r0, [r4]
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 73


 328:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             last_res_color.full = dest_buf[0].full;
 2118              		.loc 1 328 34 view .LVU661
 2119 021a 0146     		mov	r1, r0	@ movhi
 2120              	.LVL242:
 329:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_opa_t opa_tmp = LV_OPA_TRANSP;
 2121              		.loc 1 329 13 is_stmt 1 view .LVU662
 330:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2122              		.loc 1 330 13 view .LVU663
 332:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2123              		.loc 1 332 13 view .LVU664
 330:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2124              		.loc 1 330 22 is_stmt 0 view .LVU665
 2125 021c 4FF0000A 		mov	r10, #0
 2126              	.LVL243:
 327:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             last_dest_color.full = dest_buf[0].full;
 2127              		.loc 1 327 22 view .LVU666
 2128 0220 5346     		mov	r3, r10
 2129 0222 CDF80CB0 		str	fp, [sp, #12]
 2130 0226 D346     		mov	fp, r10
 2131              	.LVL244:
 327:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             last_dest_color.full = dest_buf[0].full;
 2132              		.loc 1 327 22 view .LVU667
 2133 0228 A046     		mov	r8, r4
 332:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2134              		.loc 1 332 13 view .LVU668
 2135 022a 32E0     		b	.L145
 2136              	.LVL245:
 2137              	.L157:
 335:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                              (uint32_t)((uint32_t)(*mask) * opa) >>
 2138              		.loc 1 335 56 discriminator 3 view .LVU669
 2139 022c DDF800A0 		ldr	r10, [sp]
 2140              	.LVL246:
 2141              	.L147:
 337:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2142              		.loc 1 337 25 is_stmt 1 view .LVU670
 337:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2143              		.loc 1 337 27 is_stmt 0 view .LVU671
 2144 0230 9C42     		cmp	r4, r3
 2145 0232 1ED0     		beq	.L175
 2146              	.LVL247:
 2147              	.L148:
 346:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                 else last_res_color = lv_color_mix(color, dest_buf[x], opa_tmp);
 2148              		.loc 1 346 33 is_stmt 1 view .LVU672
 346:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                 else last_res_color = lv_color_mix(color, dest_buf[x], opa_tmp);
 2149              		.loc 1 346 35 is_stmt 0 view .LVU673
 2150 0234 BAF1FF0F 		cmp	r10, #255
 2151 0238 21D0     		beq	.L176
 347:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             }
 2152              		.loc 1 347 38 is_stmt 1 view .LVU674
 347:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             }
 2153              		.loc 1 347 55 is_stmt 0 view .LVU675
 2154 023a 5246     		mov	r2, r10
 2155 023c 38F81610 		ldrh	r1, [r8, r6, lsl #1]
 2156              	.LVL248:
 347:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             }
 2157              		.loc 1 347 55 view .LVU676
 2158 0240 4846     		mov	r0, r9	@ movhi
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 74


 2159              	.LVL249:
 347:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             }
 2160              		.loc 1 347 55 view .LVU677
 2161 0242 FFF7FEFF 		bl	lv_color_mix
 2162              	.LVL250:
 2163              	.L151:
 349:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             last_dest_color.full = dest_buf[x].full;
 2164              		.loc 1 349 29 is_stmt 1 view .LVU678
 350:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2165              		.loc 1 350 29 view .LVU679
 350:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2166              		.loc 1 350 50 is_stmt 0 view .LVU680
 2167 0246 38F81610 		ldrh	r1, [r8, r6, lsl #1]
 2168              	.LVL251:
 2169              	.L149:
 352:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2170              		.loc 1 352 25 is_stmt 1 view .LVU681
 352:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2171              		.loc 1 352 37 is_stmt 0 view .LVU682
 2172 024a 28F81600 		strh	r0, [r8, r6, lsl #1]	@ movhi
 2173 024e 2346     		mov	r3, r4
 2174              	.LVL252:
 2175              	.L146:
 354:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2176              		.loc 1 354 21 is_stmt 1 view .LVU683
 354:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2177              		.loc 1 354 25 is_stmt 0 view .LVU684
 2178 0250 0135     		adds	r5, r5, #1
 2179              	.LVL253:
 333:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask) {
 2180              		.loc 1 333 36 is_stmt 1 discriminator 2 view .LVU685
 2181 0252 0136     		adds	r6, r6, #1
 2182              	.LVL254:
 2183              	.L153:
 333:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask) {
 2184              		.loc 1 333 30 discriminator 1 view .LVU686
 2185 0254 BE42     		cmp	r6, r7
 2186 0256 14DA     		bge	.L177
 334:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(*mask != last_mask) opa_tmp = *mask == LV_OPA_COVER ? opa :
 2187              		.loc 1 334 21 view .LVU687
 334:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(*mask != last_mask) opa_tmp = *mask == LV_OPA_COVER ? opa :
 2188              		.loc 1 334 24 is_stmt 0 view .LVU688
 2189 0258 2C78     		ldrb	r4, [r5]	@ zero_extendqisi2
 334:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(*mask != last_mask) opa_tmp = *mask == LV_OPA_COVER ? opa :
 2190              		.loc 1 334 23 view .LVU689
 2191 025a 002C     		cmp	r4, #0
 2192 025c F8D0     		beq	.L146
 335:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                              (uint32_t)((uint32_t)(*mask) * opa) >>
 2193              		.loc 1 335 25 is_stmt 1 view .LVU690
 335:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                              (uint32_t)((uint32_t)(*mask) * opa) >>
 2194              		.loc 1 335 27 is_stmt 0 view .LVU691
 2195 025e 9C42     		cmp	r4, r3
 2196 0260 E6D0     		beq	.L147
 335:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                              (uint32_t)((uint32_t)(*mask) * opa) >>
 2197              		.loc 1 335 48 is_stmt 1 discriminator 1 view .LVU692
 335:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                              (uint32_t)((uint32_t)(*mask) * opa) >>
 2198              		.loc 1 335 56 is_stmt 0 discriminator 1 view .LVU693
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 75


 2199 0262 FF2C     		cmp	r4, #255
 2200 0264 E2D0     		beq	.L157
 336:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(*mask != last_mask || last_dest_color.full != dest_buf[x].full) {
 2201              		.loc 1 336 62 view .LVU694
 2202 0266 009A     		ldr	r2, [sp]
 2203 0268 04FB02FA 		mul	r10, r4, r2
 2204              	.LVL255:
 335:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                              (uint32_t)((uint32_t)(*mask) * opa) >>
 2205              		.loc 1 335 56 discriminator 2 view .LVU695
 2206 026c 4FEA1A2A 		lsr	r10, r10, #8
 2207 0270 DEE7     		b	.L147
 2208              	.LVL256:
 2209              	.L175:
 337:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2210              		.loc 1 337 65 discriminator 1 view .LVU696
 2211 0272 8BB2     		uxth	r3, r1
 2212              	.LVL257:
 337:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2213              		.loc 1 337 85 discriminator 1 view .LVU697
 2214 0274 38F81620 		ldrh	r2, [r8, r6, lsl #1]
 337:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2215              		.loc 1 337 47 discriminator 1 view .LVU698
 2216 0278 9342     		cmp	r3, r2
 2217 027a DBD1     		bne	.L148
 337:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2218              		.loc 1 337 47 discriminator 1 view .LVU699
 2219 027c E5E7     		b	.L149
 2220              	.L176:
 346:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                 else last_res_color = lv_color_mix(color, dest_buf[x], opa_tmp);
 2221              		.loc 1 346 61 is_stmt 1 discriminator 1 view .LVU700
 346:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                 else last_res_color = lv_color_mix(color, dest_buf[x], opa_tmp);
 2222              		.loc 1 346 76 is_stmt 0 discriminator 1 view .LVU701
 2223 027e 4846     		mov	r0, r9	@ movhi
 2224              	.LVL258:
 346:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                 else last_res_color = lv_color_mix(color, dest_buf[x], opa_tmp);
 2225              		.loc 1 346 76 discriminator 1 view .LVU702
 2226 0280 E1E7     		b	.L151
 2227              	.LVL259:
 2228              	.L177:
 356:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += (mask_stride - w);
 2229              		.loc 1 356 17 is_stmt 1 view .LVU703
 356:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += (mask_stride - w);
 2230              		.loc 1 356 26 is_stmt 0 view .LVU704
 2231 0282 019A     		ldr	r2, [sp, #4]
 2232 0284 08EB4208 		add	r8, r8, r2, lsl #1
 2233              	.LVL260:
 357:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2234              		.loc 1 357 17 is_stmt 1 view .LVU705
 357:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2235              		.loc 1 357 38 is_stmt 0 view .LVU706
 2236 0288 029A     		ldr	r2, [sp, #8]
 2237 028a D41B     		subs	r4, r2, r7
 357:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2238              		.loc 1 357 22 view .LVU707
 2239 028c 2544     		add	r5, r5, r4
 2240              	.LVL261:
 332:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 76


 2241              		.loc 1 332 32 is_stmt 1 discriminator 2 view .LVU708
 2242 028e 0BF1010B 		add	fp, fp, #1
 2243              	.LVL262:
 2244              	.L145:
 332:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2245              		.loc 1 332 26 discriminator 1 view .LVU709
 2246 0292 039A     		ldr	r2, [sp, #12]
 2247 0294 9345     		cmp	fp, r2
 2248 0296 01DA     		bge	.L109
 333:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask) {
 2249              		.loc 1 333 23 is_stmt 0 view .LVU710
 2250 0298 0026     		movs	r6, #0
 2251 029a DBE7     		b	.L153
 2252              	.LVL263:
 2253              	.L109:
 333:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask) {
 2254              		.loc 1 333 23 view .LVU711
 2255              	.LBE88:
 2256              	.LBE96:
 361:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2257              		.loc 1 361 1 view .LVU712
 2258 029c 07B0     		add	sp, sp, #28
 2259              	.LCFI21:
 2260              		.cfi_def_cfa_offset 36
 2261              		@ sp needed
 2262 029e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 361:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2263              		.loc 1 361 1 view .LVU713
 2264              		.cfi_endproc
 2265              	.LFE159:
 2267              		.section	.text.map_normal,"ax",%progbits
 2268              		.align	1
 2269              		.syntax unified
 2270              		.thumb
 2271              		.thumb_func
 2273              	map_normal:
 2274              	.LVL264:
 2275              	.LFB162:
 473:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 2276              		.loc 1 473 1 is_stmt 1 view -0
 2277              		.cfi_startproc
 2278              		@ args = 16, pretend = 0, frame = 24
 2279              		@ frame_needed = 0, uses_anonymous_args = 0
 473:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 2280              		.loc 1 473 1 is_stmt 0 view .LVU715
 2281 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2282              	.LCFI22:
 2283              		.cfi_def_cfa_offset 36
 2284              		.cfi_offset 4, -36
 2285              		.cfi_offset 5, -32
 2286              		.cfi_offset 6, -28
 2287              		.cfi_offset 7, -24
 2288              		.cfi_offset 8, -20
 2289              		.cfi_offset 9, -16
 2290              		.cfi_offset 10, -12
 2291              		.cfi_offset 11, -8
 2292              		.cfi_offset 14, -4
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 77


 2293 0004 87B0     		sub	sp, sp, #28
 2294              	.LCFI23:
 2295              		.cfi_def_cfa_offset 64
 2296 0006 0646     		mov	r6, r0
 2297 0008 0192     		str	r2, [sp, #4]
 2298 000a 1F46     		mov	r7, r3
 2299 000c BDF94030 		ldrsh	r3, [sp, #64]
 2300              	.LVL265:
 473:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 2301              		.loc 1 473 1 view .LVU716
 2302 0010 0393     		str	r3, [sp, #12]
 2303 0012 9DF844A0 		ldrb	r10, [sp, #68]	@ zero_extendqisi2
 2304 0016 DDF84890 		ldr	r9, [sp, #72]
 2305 001a BDF94CC0 		ldrsh	ip, [sp, #76]
 474:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 2306              		.loc 1 474 5 is_stmt 1 view .LVU717
 2307              	.LVL266:
 2308              	.LBB97:
 2309              	.LBI97:
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 2310              		.loc 3 123 26 view .LVU718
 2311              	.LBB98:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 2312              		.loc 3 125 5 view .LVU719
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 2313              		.loc 3 125 31 is_stmt 0 view .LVU720
 2314 001e B1F80480 		ldrh	r8, [r1, #4]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 2315              		.loc 3 125 44 view .LVU721
 2316 0022 0B88     		ldrh	r3, [r1]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 2317              		.loc 3 125 36 view .LVU722
 2318 0024 A8EB0308 		sub	r8, r8, r3
 2319 0028 1FFA88F8 		uxth	r8, r8
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 2320              		.loc 3 125 49 view .LVU723
 2321 002c 08F10108 		add	r8, r8, #1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 2322              		.loc 3 125 12 view .LVU724
 2323 0030 0FFA88F8 		sxth	r8, r8
 2324              	.LVL267:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 2325              		.loc 3 125 12 view .LVU725
 2326              	.LBE98:
 2327              	.LBE97:
 475:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2328              		.loc 1 475 5 is_stmt 1 view .LVU726
 2329              	.LBB99:
 2330              	.LBI99:
 133:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 2331              		.loc 3 133 26 view .LVU727
 2332              	.LBB100:
 2333              		.loc 3 135 5 view .LVU728
 2334              		.loc 3 135 31 is_stmt 0 view .LVU729
 2335 0034 CB88     		ldrh	r3, [r1, #6]
 2336              		.loc 3 135 44 view .LVU730
 2337 0036 4A88     		ldrh	r2, [r1, #2]
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 78


 2338              	.LVL268:
 2339              		.loc 3 135 36 view .LVU731
 2340 0038 9B1A     		subs	r3, r3, r2
 2341 003a 9BB2     		uxth	r3, r3
 2342              		.loc 3 135 49 view .LVU732
 2343 003c 0133     		adds	r3, r3, #1
 2344              		.loc 3 135 12 view .LVU733
 2345 003e 1BB2     		sxth	r3, r3
 2346 0040 0293     		str	r3, [sp, #8]
 2347              	.LVL269:
 2348              		.loc 3 135 12 view .LVU734
 2349              	.LBE100:
 2350              	.LBE99:
 477:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 2351              		.loc 1 477 5 is_stmt 1 view .LVU735
 478:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2352              		.loc 1 478 5 view .LVU736
 485:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 2353              		.loc 1 485 5 view .LVU737
 485:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 2354              		.loc 1 485 7 is_stmt 0 view .LVU738
 2355 0042 B9F1000F 		cmp	r9, #0
 2356 0046 0AD0     		beq	.L220
 515:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t x_end4 = w - 4;
 2357              		.loc 1 515 9 is_stmt 1 view .LVU739
 515:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t x_end4 = w - 4;
 2358              		.loc 1 515 11 is_stmt 0 view .LVU740
 2359 0048 BAF1FD0F 		cmp	r10, #253
 2360 004c 40F21481 		bls	.L214
 2361              	.LBB101:
 516:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2362              		.loc 1 516 13 is_stmt 1 view .LVU741
 516:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2363              		.loc 1 516 21 is_stmt 0 view .LVU742
 2364 0050 A8F1040A 		sub	r10, r8, #4
 2365              	.LVL270:
 518:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2366              		.loc 1 518 13 is_stmt 1 view .LVU743
 518:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2367              		.loc 1 518 19 is_stmt 0 view .LVU744
 2368 0054 4FF0000B 		mov	fp, #0
 2369 0058 CDF814C0 		str	ip, [sp, #20]
 518:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2370              		.loc 1 518 13 view .LVU745
 2371 005c E1E0     		b	.L187
 2372              	.LVL271:
 2373              	.L220:
 518:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2374              		.loc 1 518 13 view .LVU746
 2375              	.LBE101:
 486:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 2376              		.loc 1 486 9 is_stmt 1 view .LVU747
 486:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 2377              		.loc 1 486 11 is_stmt 0 view .LVU748
 2378 005e BAF1FC0F 		cmp	r10, #252
 2379 0062 04D8     		bhi	.L212
 494:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 79


 2380              		.loc 1 494 19 view .LVU749
 2381 0064 0025     		movs	r5, #0
 2382 0066 9946     		mov	r9, r3
 2383 0068 DDF80CB0 		ldr	fp, [sp, #12]
 2384 006c 1AE0     		b	.L181
 2385              	.L212:
 487:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_memcpy(dest_buf, src_buf, w * sizeof(lv_color_t));
 2386              		.loc 1 487 19 view .LVU750
 2387 006e 0024     		movs	r4, #0
 2388 0070 029D     		ldr	r5, [sp, #8]
 2389 0072 DDF80490 		ldr	r9, [sp, #4]
 2390 0076 DDF80CA0 		ldr	r10, [sp, #12]
 2391              	.LVL272:
 2392              	.L180:
 487:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_memcpy(dest_buf, src_buf, w * sizeof(lv_color_t));
 2393              		.loc 1 487 26 is_stmt 1 discriminator 1 view .LVU751
 2394 007a AC42     		cmp	r4, r5
 2395 007c 80F20481 		bge	.L178
 488:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 2396              		.loc 1 488 17 view .LVU752
 2397 0080 4FEA4802 		lsl	r2, r8, #1
 2398 0084 3946     		mov	r1, r7
 2399 0086 3046     		mov	r0, r6
 2400 0088 FFF7FEFF 		bl	lv_memcpy
 2401              	.LVL273:
 489:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 2402              		.loc 1 489 17 view .LVU753
 489:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 2403              		.loc 1 489 26 is_stmt 0 view .LVU754
 2404 008c 06EB4906 		add	r6, r6, r9, lsl #1
 2405              	.LVL274:
 490:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2406              		.loc 1 490 17 is_stmt 1 view .LVU755
 490:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2407              		.loc 1 490 25 is_stmt 0 view .LVU756
 2408 0090 07EB4A07 		add	r7, r7, r10, lsl #1
 2409              	.LVL275:
 487:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_memcpy(dest_buf, src_buf, w * sizeof(lv_color_t));
 2410              		.loc 1 487 32 is_stmt 1 discriminator 3 view .LVU757
 2411 0094 0134     		adds	r4, r4, #1
 2412              	.LVL276:
 487:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_memcpy(dest_buf, src_buf, w * sizeof(lv_color_t));
 2413              		.loc 1 487 32 is_stmt 0 discriminator 3 view .LVU758
 2414 0096 F0E7     		b	.L180
 2415              	.LVL277:
 2416              	.L221:
 507:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 2417              		.loc 1 507 17 is_stmt 1 view .LVU759
 507:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 2418              		.loc 1 507 26 is_stmt 0 view .LVU760
 2419 0098 019B     		ldr	r3, [sp, #4]
 2420 009a 06EB4306 		add	r6, r6, r3, lsl #1
 2421              	.LVL278:
 508:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2422              		.loc 1 508 17 is_stmt 1 view .LVU761
 508:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2423              		.loc 1 508 25 is_stmt 0 view .LVU762
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 80


 2424 009e 07EB4B07 		add	r7, r7, fp, lsl #1
 2425              	.LVL279:
 494:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2426              		.loc 1 494 32 is_stmt 1 discriminator 2 view .LVU763
 2427 00a2 0135     		adds	r5, r5, #1
 2428              	.LVL280:
 2429              	.L181:
 494:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2430              		.loc 1 494 26 discriminator 1 view .LVU764
 2431 00a4 4D45     		cmp	r5, r9
 2432 00a6 80F2EF80 		bge	.L178
 495:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2433              		.loc 1 495 23 is_stmt 0 view .LVU765
 2434 00aa 0024     		movs	r4, #0
 2435              	.L185:
 2436              	.LVL281:
 495:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2437              		.loc 1 495 30 is_stmt 1 discriminator 1 view .LVU766
 2438 00ac 4445     		cmp	r4, r8
 2439 00ae F3DA     		bge	.L221
 504:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2440              		.loc 1 504 25 view .LVU767
 504:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2441              		.loc 1 504 39 is_stmt 0 view .LVU768
 2442 00b0 5246     		mov	r2, r10
 2443 00b2 36F81410 		ldrh	r1, [r6, r4, lsl #1]
 2444 00b6 37F81400 		ldrh	r0, [r7, r4, lsl #1]
 2445 00ba FFF7FEFF 		bl	lv_color_mix
 2446              	.LVL282:
 2447 00be 26F81400 		strh	r0, [r6, r4, lsl #1]	@ movhi
 495:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2448              		.loc 1 495 36 is_stmt 1 discriminator 3 view .LVU769
 2449 00c2 0134     		adds	r4, r4, #1
 2450              	.LVL283:
 495:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2451              		.loc 1 495 36 is_stmt 0 discriminator 3 view .LVU770
 2452 00c4 F2E7     		b	.L185
 2453              	.LVL284:
 2454              	.L223:
 2455              	.LBB104:
 2456              	.LBB102:
 529:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 2457              		.loc 1 529 21 is_stmt 1 discriminator 3 view .LVU771
 2458 00c6 37F81430 		ldrh	r3, [r7, r4, lsl #1]
 2459 00ca 26F81430 		strh	r3, [r6, r4, lsl #1]	@ movhi
 2460              	.L188:
 529:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 2461              		.loc 1 529 21 discriminator 6 view .LVU772
 2462 00ce 0135     		adds	r5, r5, #1
 2463              	.LVL285:
 525:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2464              		.loc 1 525 72 discriminator 2 view .LVU773
 2465 00d0 0134     		adds	r4, r4, #1
 2466              	.LVL286:
 2467              	.L207:
 525:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2468              		.loc 1 525 34 discriminator 1 view .LVU774
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 81


 2469 00d2 4445     		cmp	r4, r8
 2470 00d4 7FDA     		bge	.L218
 525:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2471              		.loc 1 525 34 is_stmt 0 discriminator 3 view .LVU775
 2472 00d6 15F0030F 		tst	r5, #3
 2473 00da 0DD0     		beq	.L222
 529:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 2474              		.loc 1 529 21 is_stmt 1 view .LVU776
 2475 00dc 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 2476 00de 002A     		cmp	r2, #0
 2477 00e0 F5D0     		beq	.L188
 529:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 2478              		.loc 1 529 21 discriminator 1 view .LVU777
 2479 00e2 FF2A     		cmp	r2, #255
 2480 00e4 EFD0     		beq	.L223
 529:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 2481              		.loc 1 529 21 discriminator 4 view .LVU778
 2482 00e6 36F81410 		ldrh	r1, [r6, r4, lsl #1]
 2483 00ea 37F81400 		ldrh	r0, [r7, r4, lsl #1]
 2484 00ee FFF7FEFF 		bl	lv_color_mix
 2485              	.LVL287:
 2486 00f2 26F81400 		strh	r0, [r6, r4, lsl #1]	@ movhi
 2487 00f6 EAE7     		b	.L188
 2488              	.L222:
 529:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 2489              		.loc 1 529 21 is_stmt 0 discriminator 4 view .LVU779
 2490 00f8 CDF810B0 		str	fp, [sp, #16]
 2491 00fc 14E0     		b	.L201
 2492              	.LVL288:
 2493              	.L225:
 537:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 1] = src_buf[x + 1];
 2494              		.loc 1 537 29 is_stmt 1 view .LVU780
 537:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 1] = src_buf[x + 1];
 2495              		.loc 1 537 41 is_stmt 0 view .LVU781
 2496 00fe 37F81430 		ldrh	r3, [r7, r4, lsl #1]
 2497 0102 26F81430 		strh	r3, [r6, r4, lsl #1]	@ movhi
 538:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 2] = src_buf[x + 2];
 2498              		.loc 1 538 29 is_stmt 1 view .LVU782
 538:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 2] = src_buf[x + 2];
 2499              		.loc 1 538 54 is_stmt 0 view .LVU783
 2500 0106 631C     		adds	r3, r4, #1
 538:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 2] = src_buf[x + 2];
 2501              		.loc 1 538 45 view .LVU784
 2502 0108 37F81320 		ldrh	r2, [r7, r3, lsl #1]
 2503 010c 26F81320 		strh	r2, [r6, r3, lsl #1]	@ movhi
 539:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 3] = src_buf[x + 3];
 2504              		.loc 1 539 29 is_stmt 1 view .LVU785
 539:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 3] = src_buf[x + 3];
 2505              		.loc 1 539 54 is_stmt 0 view .LVU786
 2506 0110 A31C     		adds	r3, r4, #2
 539:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 3] = src_buf[x + 3];
 2507              		.loc 1 539 45 view .LVU787
 2508 0112 37F81320 		ldrh	r2, [r7, r3, lsl #1]
 2509 0116 26F81320 		strh	r2, [r6, r3, lsl #1]	@ movhi
 540:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2510              		.loc 1 540 29 is_stmt 1 view .LVU788
 540:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 82


 2511              		.loc 1 540 54 is_stmt 0 view .LVU789
 2512 011a E31C     		adds	r3, r4, #3
 540:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2513              		.loc 1 540 45 view .LVU790
 2514 011c 37F81320 		ldrh	r2, [r7, r3, lsl #1]
 2515 0120 26F81320 		strh	r2, [r6, r3, lsl #1]	@ movhi
 2516              	.L192:
 557:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2517              		.loc 1 557 21 is_stmt 1 view .LVU791
 557:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2518              		.loc 1 557 27 is_stmt 0 view .LVU792
 2519 0124 0435     		adds	r5, r5, #4
 2520              	.LVL289:
 534:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask32) {
 2521              		.loc 1 534 37 is_stmt 1 view .LVU793
 2522 0126 0434     		adds	r4, r4, #4
 2523              	.LVL290:
 2524              	.L201:
 534:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask32) {
 2525              		.loc 1 534 25 discriminator 1 view .LVU794
 2526 0128 5445     		cmp	r4, r10
 2527 012a 57DA     		bge	.L224
 535:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 2528              		.loc 1 535 21 view .LVU795
 535:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 2529              		.loc 1 535 24 is_stmt 0 view .LVU796
 2530 012c 2B68     		ldr	r3, [r5]
 535:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 2531              		.loc 1 535 23 view .LVU797
 2532 012e 002B     		cmp	r3, #0
 2533 0130 F8D0     		beq	.L192
 536:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x] = src_buf[x];
 2534              		.loc 1 536 25 is_stmt 1 view .LVU798
 536:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x] = src_buf[x];
 2535              		.loc 1 536 27 is_stmt 0 view .LVU799
 2536 0132 B3F1FF3F 		cmp	r3, #-1
 2537 0136 E2D0     		beq	.L225
 543:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2538              		.loc 1 543 29 is_stmt 1 view .LVU800
 2539              	.LVL291:
 550:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 2540              		.loc 1 550 29 view .LVU801
 2541 0138 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 2542 013a 4AB1     		cbz	r2, .L194
 550:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 2543              		.loc 1 550 29 discriminator 1 view .LVU802
 2544 013c FF2A     		cmp	r2, #255
 2545 013e 33D0     		beq	.L226
 550:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 2546              		.loc 1 550 29 discriminator 4 view .LVU803
 2547 0140 36F81410 		ldrh	r1, [r6, r4, lsl #1]
 2548 0144 37F81400 		ldrh	r0, [r7, r4, lsl #1]
 2549 0148 FFF7FEFF 		bl	lv_color_mix
 2550              	.LVL292:
 2551 014c 26F81400 		strh	r0, [r6, r4, lsl #1]	@ movhi
 2552              	.L194:
 550:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 83


 2553              		.loc 1 550 29 discriminator 6 view .LVU804
 2554              	.LVL293:
 551:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 2555              		.loc 1 551 29 view .LVU805
 2556 0150 6A78     		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 2557 0152 5AB1     		cbz	r2, .L196
 551:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 2558              		.loc 1 551 29 discriminator 1 view .LVU806
 2559 0154 FF2A     		cmp	r2, #255
 2560 0156 2CD0     		beq	.L227
 551:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 2561              		.loc 1 551 29 discriminator 4 view .LVU807
 2562 0158 04F1010B 		add	fp, r4, #1
 2563 015c 36F81B10 		ldrh	r1, [r6, fp, lsl #1]
 2564 0160 37F81B00 		ldrh	r0, [r7, fp, lsl #1]
 2565 0164 FFF7FEFF 		bl	lv_color_mix
 2566              	.LVL294:
 2567 0168 26F81B00 		strh	r0, [r6, fp, lsl #1]	@ movhi
 2568              	.L196:
 551:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 2569              		.loc 1 551 29 discriminator 6 view .LVU808
 2570              	.LVL295:
 552:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 2571              		.loc 1 552 29 view .LVU809
 2572 016c AA78     		ldrb	r2, [r5, #2]	@ zero_extendqisi2
 2573 016e 5AB1     		cbz	r2, .L198
 552:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 2574              		.loc 1 552 29 discriminator 1 view .LVU810
 2575 0170 FF2A     		cmp	r2, #255
 2576 0172 24D0     		beq	.L228
 552:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 2577              		.loc 1 552 29 discriminator 4 view .LVU811
 2578 0174 04F1020B 		add	fp, r4, #2
 2579 0178 36F81B10 		ldrh	r1, [r6, fp, lsl #1]
 2580 017c 37F81B00 		ldrh	r0, [r7, fp, lsl #1]
 2581 0180 FFF7FEFF 		bl	lv_color_mix
 2582              	.LVL296:
 2583 0184 26F81B00 		strh	r0, [r6, fp, lsl #1]	@ movhi
 2584              	.L198:
 552:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 2585              		.loc 1 552 29 discriminator 6 view .LVU812
 2586              	.LVL297:
 553:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 2587              		.loc 1 553 29 view .LVU813
 2588 0188 EA78     		ldrb	r2, [r5, #3]	@ zero_extendqisi2
 2589 018a 002A     		cmp	r2, #0
 2590 018c CAD0     		beq	.L192
 553:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 2591              		.loc 1 553 29 discriminator 1 view .LVU814
 2592 018e FF2A     		cmp	r2, #255
 2593 0190 1BD0     		beq	.L229
 553:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 2594              		.loc 1 553 29 discriminator 4 view .LVU815
 2595 0192 04F1030B 		add	fp, r4, #3
 2596 0196 36F81B10 		ldrh	r1, [r6, fp, lsl #1]
 2597 019a 37F81B00 		ldrh	r0, [r7, fp, lsl #1]
 2598 019e FFF7FEFF 		bl	lv_color_mix
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 84


 2599              	.LVL298:
 2600 01a2 26F81B00 		strh	r0, [r6, fp, lsl #1]	@ movhi
 2601 01a6 BDE7     		b	.L192
 2602              	.LVL299:
 2603              	.L226:
 550:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 2604              		.loc 1 550 29 discriminator 3 view .LVU816
 2605 01a8 37F81430 		ldrh	r3, [r7, r4, lsl #1]
 2606 01ac 26F81430 		strh	r3, [r6, r4, lsl #1]	@ movhi
 2607 01b0 CEE7     		b	.L194
 2608              	.LVL300:
 2609              	.L227:
 551:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 2610              		.loc 1 551 29 discriminator 3 view .LVU817
 2611 01b2 631C     		adds	r3, r4, #1
 2612 01b4 37F81320 		ldrh	r2, [r7, r3, lsl #1]
 2613 01b8 26F81320 		strh	r2, [r6, r3, lsl #1]	@ movhi
 2614 01bc D6E7     		b	.L196
 2615              	.LVL301:
 2616              	.L228:
 552:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 2617              		.loc 1 552 29 discriminator 3 view .LVU818
 2618 01be A31C     		adds	r3, r4, #2
 2619 01c0 37F81320 		ldrh	r2, [r7, r3, lsl #1]
 2620 01c4 26F81320 		strh	r2, [r6, r3, lsl #1]	@ movhi
 2621 01c8 DEE7     		b	.L198
 2622              	.LVL302:
 2623              	.L229:
 553:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 2624              		.loc 1 553 29 discriminator 3 view .LVU819
 2625 01ca E31C     		adds	r3, r4, #3
 2626 01cc 37F81320 		ldrh	r2, [r7, r3, lsl #1]
 2627 01d0 26F81320 		strh	r2, [r6, r3, lsl #1]	@ movhi
 2628 01d4 A6E7     		b	.L192
 2629              	.LVL303:
 2630              	.L218:
 553:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 2631              		.loc 1 553 29 is_stmt 0 discriminator 3 view .LVU820
 2632 01d6 CDF810B0 		str	fp, [sp, #16]
 2633 01da A5E7     		b	.L201
 2634              	.LVL304:
 2635              	.L224:
 553:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 2636              		.loc 1 553 29 discriminator 3 view .LVU821
 2637 01dc DDF810B0 		ldr	fp, [sp, #16]
 2638 01e0 09E0     		b	.L203
 2639              	.LVL305:
 2640              	.L205:
 565:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 2641              		.loc 1 565 21 is_stmt 1 discriminator 4 view .LVU822
 2642 01e2 36F81410 		ldrh	r1, [r6, r4, lsl #1]
 2643 01e6 37F81400 		ldrh	r0, [r7, r4, lsl #1]
 2644 01ea FFF7FEFF 		bl	lv_color_mix
 2645              	.LVL306:
 2646 01ee 26F81400 		strh	r0, [r6, r4, lsl #1]	@ movhi
 2647              	.L204:
 565:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 85


 2648              		.loc 1 565 21 discriminator 6 view .LVU823
 2649 01f2 0135     		adds	r5, r5, #1
 2650              	.LVL307:
 561:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2651              		.loc 1 561 32 view .LVU824
 2652 01f4 0134     		adds	r4, r4, #1
 2653              	.LVL308:
 2654              	.L203:
 561:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2655              		.loc 1 561 25 discriminator 1 view .LVU825
 2656 01f6 4445     		cmp	r4, r8
 2657 01f8 09DA     		bge	.L230
 565:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 2658              		.loc 1 565 21 view .LVU826
 2659 01fa 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 2660 01fc 002A     		cmp	r2, #0
 2661 01fe F8D0     		beq	.L204
 565:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 2662              		.loc 1 565 21 discriminator 1 view .LVU827
 2663 0200 FF2A     		cmp	r2, #255
 2664 0202 EED1     		bne	.L205
 565:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 2665              		.loc 1 565 21 discriminator 3 view .LVU828
 2666 0204 37F81430 		ldrh	r3, [r7, r4, lsl #1]
 2667 0208 26F81430 		strh	r3, [r6, r4, lsl #1]	@ movhi
 2668 020c F1E7     		b	.L204
 2669              	.L230:
 569:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 2670              		.loc 1 569 17 view .LVU829
 569:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 2671              		.loc 1 569 26 is_stmt 0 view .LVU830
 2672 020e 019B     		ldr	r3, [sp, #4]
 2673 0210 06EB4306 		add	r6, r6, r3, lsl #1
 2674              	.LVL309:
 570:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += mask_stride;
 2675              		.loc 1 570 17 is_stmt 1 view .LVU831
 570:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += mask_stride;
 2676              		.loc 1 570 25 is_stmt 0 view .LVU832
 2677 0214 039B     		ldr	r3, [sp, #12]
 2678 0216 07EB4307 		add	r7, r7, r3, lsl #1
 2679              	.LVL310:
 571:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2680              		.loc 1 571 17 is_stmt 1 view .LVU833
 571:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2681              		.loc 1 571 22 is_stmt 0 view .LVU834
 2682 021a 059B     		ldr	r3, [sp, #20]
 2683 021c 9944     		add	r9, r9, r3
 2684              	.LVL311:
 571:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2685              		.loc 1 571 22 view .LVU835
 2686              	.LBE102:
 518:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2687              		.loc 1 518 32 is_stmt 1 discriminator 2 view .LVU836
 2688 021e 0BF1010B 		add	fp, fp, #1
 2689              	.LVL312:
 2690              	.L187:
 518:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 86


 2691              		.loc 1 518 26 discriminator 1 view .LVU837
 2692 0222 029B     		ldr	r3, [sp, #8]
 2693 0224 9B45     		cmp	fp, r3
 2694 0226 2FDA     		bge	.L178
 2695              	.LBB103:
 519:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if 0
 2696              		.loc 1 519 34 is_stmt 0 view .LVU838
 2697 0228 4D46     		mov	r5, r9
 525:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2698              		.loc 1 525 23 view .LVU839
 2699 022a 0024     		movs	r4, #0
 2700 022c 51E7     		b	.L207
 2701              	.LVL313:
 2702              	.L216:
 525:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2703              		.loc 1 525 23 view .LVU840
 2704              	.LBE103:
 2705              	.LBE104:
 2706              	.LBB105:
 579:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2707              		.loc 1 579 34 discriminator 2 view .LVU841
 2708 022e 5246     		mov	r2, r10
 2709              	.L209:
 2710              	.LVL314:
 588:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2711              		.loc 1 588 29 is_stmt 1 view .LVU842
 588:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2712              		.loc 1 588 43 is_stmt 0 view .LVU843
 2713 0230 36F81510 		ldrh	r1, [r6, r5, lsl #1]
 2714 0234 3BF81500 		ldrh	r0, [fp, r5, lsl #1]
 2715 0238 FFF7FEFF 		bl	lv_color_mix
 2716              	.LVL315:
 588:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2717              		.loc 1 588 43 view .LVU844
 2718 023c 26F81500 		strh	r0, [r6, r5, lsl #1]	@ movhi
 2719              	.LVL316:
 2720              	.L208:
 588:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2721              		.loc 1 588 43 view .LVU845
 2722              	.LBE105:
 577:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(mask[x]) {
 2723              		.loc 1 577 36 is_stmt 1 discriminator 2 view .LVU846
 2724 0240 0134     		adds	r4, r4, #1
 2725              	.LVL317:
 2726              	.L211:
 577:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(mask[x]) {
 2727              		.loc 1 577 30 discriminator 1 view .LVU847
 2728 0242 4445     		cmp	r4, r8
 2729 0244 0ADA     		bge	.L231
 578:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 2730              		.loc 1 578 21 view .LVU848
 578:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 2731              		.loc 1 578 28 is_stmt 0 view .LVU849
 2732 0246 2546     		mov	r5, r4
 2733 0248 19F80420 		ldrb	r2, [r9, r4]	@ zero_extendqisi2
 578:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 2734              		.loc 1 578 23 view .LVU850
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 87


 2735 024c 002A     		cmp	r2, #0
 2736 024e F7D0     		beq	.L208
 2737              	.LBB106:
 579:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2738              		.loc 1 579 25 is_stmt 1 view .LVU851
 579:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2739              		.loc 1 579 34 is_stmt 0 view .LVU852
 2740 0250 FC2A     		cmp	r2, #252
 2741 0252 ECD8     		bhi	.L216
 579:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2742              		.loc 1 579 80 discriminator 1 view .LVU853
 2743 0254 02FB0AF2 		mul	r2, r2, r10
 579:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2744              		.loc 1 579 34 discriminator 1 view .LVU854
 2745 0258 120A     		lsrs	r2, r2, #8
 2746 025a E9E7     		b	.L209
 2747              	.L231:
 579:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 2748              		.loc 1 579 34 discriminator 1 view .LVU855
 2749              	.LBE106:
 592:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 2750              		.loc 1 592 17 is_stmt 1 view .LVU856
 592:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 2751              		.loc 1 592 26 is_stmt 0 view .LVU857
 2752 025c 019B     		ldr	r3, [sp, #4]
 2753 025e 06EB4306 		add	r6, r6, r3, lsl #1
 2754              	.LVL318:
 593:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += mask_stride;
 2755              		.loc 1 593 17 is_stmt 1 view .LVU858
 593:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += mask_stride;
 2756              		.loc 1 593 25 is_stmt 0 view .LVU859
 2757 0262 039B     		ldr	r3, [sp, #12]
 2758 0264 0BEB430B 		add	fp, fp, r3, lsl #1
 2759              	.LVL319:
 594:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2760              		.loc 1 594 17 is_stmt 1 view .LVU860
 594:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2761              		.loc 1 594 22 is_stmt 0 view .LVU861
 2762 0268 049B     		ldr	r3, [sp, #16]
 2763 026a 9944     		add	r9, r9, r3
 2764              	.LVL320:
 576:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2765              		.loc 1 576 32 is_stmt 1 discriminator 2 view .LVU862
 2766 026c 0137     		adds	r7, r7, #1
 2767              	.LVL321:
 2768              	.L186:
 576:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2769              		.loc 1 576 26 discriminator 1 view .LVU863
 2770 026e 029B     		ldr	r3, [sp, #8]
 2771 0270 9F42     		cmp	r7, r3
 2772 0272 09DA     		bge	.L178
 577:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(mask[x]) {
 2773              		.loc 1 577 23 is_stmt 0 view .LVU864
 2774 0274 0024     		movs	r4, #0
 2775 0276 E4E7     		b	.L211
 2776              	.LVL322:
 2777              	.L214:
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 88


 576:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2778              		.loc 1 576 19 view .LVU865
 2779 0278 4FF0000B 		mov	fp, #0
 2780 027c 3B46     		mov	r3, r7
 2781              	.LVL323:
 576:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2782              		.loc 1 576 19 view .LVU866
 2783 027e 5F46     		mov	r7, fp
 2784              	.LVL324:
 576:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2785              		.loc 1 576 19 view .LVU867
 2786 0280 CDF810C0 		str	ip, [sp, #16]
 2787 0284 9B46     		mov	fp, r3
 2788 0286 F2E7     		b	.L186
 2789              	.LVL325:
 2790              	.L178:
 598:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_DRAW_COMPLEX
 2791              		.loc 1 598 1 view .LVU868
 2792 0288 07B0     		add	sp, sp, #28
 2793              	.LCFI24:
 2794              		.cfi_def_cfa_offset 36
 2795              		@ sp needed
 2796 028a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 598:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_DRAW_COMPLEX
 2797              		.loc 1 598 1 view .LVU869
 2798              		.cfi_endproc
 2799              	.LFE162:
 2801              		.section	.text.lv_draw_sw_blend,"ax",%progbits
 2802              		.align	1
 2803              		.global	lv_draw_sw_blend
 2804              		.syntax unified
 2805              		.thumb
 2806              		.thumb_func
 2808              	lv_draw_sw_blend:
 2809              	.LVL326:
 2810              	.LFB156:
  96:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Do not draw transparent things*/
 2811              		.loc 1 96 1 is_stmt 1 view -0
 2812              		.cfi_startproc
 2813              		@ args = 0, pretend = 0, frame = 8
 2814              		@ frame_needed = 0, uses_anonymous_args = 0
  98:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2815              		.loc 1 98 5 view .LVU871
  98:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2816              		.loc 1 98 11 is_stmt 0 view .LVU872
 2817 0000 0B7E     		ldrb	r3, [r1, #24]	@ zero_extendqisi2
  98:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2818              		.loc 1 98 7 view .LVU873
 2819 0002 022B     		cmp	r3, #2
 2820 0004 00D8     		bhi	.L240
 2821 0006 7047     		bx	lr
 2822              	.L240:
  96:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Do not draw transparent things*/
 2823              		.loc 1 96 1 view .LVU874
 2824 0008 30B5     		push	{r4, r5, lr}
 2825              	.LCFI25:
 2826              		.cfi_def_cfa_offset 12
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 89


 2827              		.cfi_offset 4, -12
 2828              		.cfi_offset 5, -8
 2829              		.cfi_offset 14, -4
 2830 000a 83B0     		sub	sp, sp, #12
 2831              	.LCFI26:
 2832              		.cfi_def_cfa_offset 24
 2833 000c 0546     		mov	r5, r0
 2834 000e 0C46     		mov	r4, r1
 100:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(!_lv_area_intersect(&blend_area, dsc->blend_area, draw_ctx->clip_area)) return;
 2835              		.loc 1 100 5 is_stmt 1 view .LVU875
 101:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2836              		.loc 1 101 5 view .LVU876
 101:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2837              		.loc 1 101 9 is_stmt 0 view .LVU877
 2838 0010 8268     		ldr	r2, [r0, #8]
 2839 0012 0968     		ldr	r1, [r1]
 2840              	.LVL327:
 101:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2841              		.loc 1 101 9 view .LVU878
 2842 0014 6846     		mov	r0, sp
 2843              	.LVL328:
 101:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2844              		.loc 1 101 9 view .LVU879
 2845 0016 FFF7FEFF 		bl	_lv_area_intersect
 2846              	.LVL329:
 101:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2847              		.loc 1 101 7 discriminator 1 view .LVU880
 2848 001a 38B1     		cbz	r0, .L232
 103:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2849              		.loc 1 103 5 is_stmt 1 view .LVU881
 103:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2850              		.loc 1 103 16 is_stmt 0 view .LVU882
 2851 001c EB6A     		ldr	r3, [r5, #44]
 103:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2852              		.loc 1 103 7 view .LVU883
 2853 001e 0BB1     		cbz	r3, .L234
 103:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2854              		.loc 1 103 35 is_stmt 1 discriminator 1 view .LVU884
 2855 0020 2846     		mov	r0, r5
 2856 0022 9847     		blx	r3
 2857              	.LVL330:
 2858              	.L234:
 105:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 2859              		.loc 1 105 5 view .LVU885
 105:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 2860              		.loc 1 105 35 is_stmt 0 view .LVU886
 2861 0024 6B6B     		ldr	r3, [r5, #52]
 105:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 2862              		.loc 1 105 6 view .LVU887
 2863 0026 2146     		mov	r1, r4
 2864 0028 2846     		mov	r0, r5
 2865 002a 9847     		blx	r3
 2866              	.LVL331:
 2867              	.L232:
 106:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2868              		.loc 1 106 1 view .LVU888
 2869 002c 03B0     		add	sp, sp, #12
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 90


 2870              	.LCFI27:
 2871              		.cfi_def_cfa_offset 12
 2872              		@ sp needed
 2873 002e 30BD     		pop	{r4, r5, pc}
 106:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2874              		.loc 1 106 1 view .LVU889
 2875              		.cfi_endproc
 2876              	.LFE156:
 2878              		.section	.text.lv_draw_sw_blend_basic,"ax",%progbits
 2879              		.align	1
 2880              		.global	lv_draw_sw_blend_basic
 2881              		.syntax unified
 2882              		.thumb
 2883              		.thumb_func
 2885              	lv_draw_sw_blend_basic:
 2886              	.LVL332:
 2887              	.LFB157:
 109:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     const lv_opa_t * mask;
 2888              		.loc 1 109 1 is_stmt 1 view -0
 2889              		.cfi_startproc
 2890              		@ args = 0, pretend = 0, frame = 16
 2891              		@ frame_needed = 0, uses_anonymous_args = 0
 109:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     const lv_opa_t * mask;
 2892              		.loc 1 109 1 is_stmt 0 view .LVU891
 2893 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2894              	.LCFI28:
 2895              		.cfi_def_cfa_offset 36
 2896              		.cfi_offset 4, -36
 2897              		.cfi_offset 5, -32
 2898              		.cfi_offset 6, -28
 2899              		.cfi_offset 7, -24
 2900              		.cfi_offset 8, -20
 2901              		.cfi_offset 9, -16
 2902              		.cfi_offset 10, -12
 2903              		.cfi_offset 11, -8
 2904              		.cfi_offset 14, -4
 2905 0004 8BB0     		sub	sp, sp, #44
 2906              	.LCFI29:
 2907              		.cfi_def_cfa_offset 80
 2908 0006 0646     		mov	r6, r0
 2909 0008 0C46     		mov	r4, r1
 110:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(dsc->mask_buf == NULL) mask = NULL;
 2910              		.loc 1 110 5 is_stmt 1 view .LVU892
 111:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(dsc->mask_buf && dsc->mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 2911              		.loc 1 111 5 view .LVU893
 111:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(dsc->mask_buf && dsc->mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 2912              		.loc 1 111 31 discriminator 1 view .LVU894
 2913              	.LVL333:
 112:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else if(dsc->mask_res == LV_DRAW_MASK_RES_FULL_COVER) mask = NULL;
 2914              		.loc 1 112 5 view .LVU895
 112:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else if(dsc->mask_res == LV_DRAW_MASK_RES_FULL_COVER) mask = NULL;
 2915              		.loc 1 112 11 is_stmt 0 view .LVU896
 2916 000a CF68     		ldr	r7, [r1, #12]
 112:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else if(dsc->mask_res == LV_DRAW_MASK_RES_FULL_COVER) mask = NULL;
 2917              		.loc 1 112 7 view .LVU897
 2918 000c 0FB1     		cbz	r7, .L242
 112:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else if(dsc->mask_res == LV_DRAW_MASK_RES_FULL_COVER) mask = NULL;
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 91


 2919              		.loc 1 112 28 discriminator 1 view .LVU898
 2920 000e 0B7C     		ldrb	r3, [r1, #16]	@ zero_extendqisi2
 112:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else if(dsc->mask_res == LV_DRAW_MASK_RES_FULL_COVER) mask = NULL;
 2921              		.loc 1 112 22 discriminator 1 view .LVU899
 2922 0010 7BB1     		cbz	r3, .L241
 2923              	.L242:
 113:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else mask = dsc->mask_buf;
 2924              		.loc 1 113 10 is_stmt 1 view .LVU900
 113:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else mask = dsc->mask_buf;
 2925              		.loc 1 113 16 is_stmt 0 view .LVU901
 2926 0012 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 113:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else mask = dsc->mask_buf;
 2927              		.loc 1 113 12 view .LVU902
 2928 0014 012B     		cmp	r3, #1
 2929 0016 0FD0     		beq	.L258
 2930              	.L244:
 2931              	.LVL334:
 116:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2932              		.loc 1 116 5 is_stmt 1 view .LVU903
 116:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2933              		.loc 1 116 56 is_stmt 0 view .LVU904
 2934 0018 7368     		ldr	r3, [r6, #4]
 2935              	.LVL335:
 2936              	.LBB107:
 2937              	.LBI107:
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 2938              		.loc 3 123 26 is_stmt 1 view .LVU905
 2939              	.LBB108:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 2940              		.loc 3 125 5 view .LVU906
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 2941              		.loc 3 125 31 is_stmt 0 view .LVU907
 2942 001a 9D88     		ldrh	r5, [r3, #4]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 2943              		.loc 3 125 44 view .LVU908
 2944 001c 1B88     		ldrh	r3, [r3]
 2945              	.LVL336:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 2946              		.loc 3 125 36 view .LVU909
 2947 001e ED1A     		subs	r5, r5, r3
 2948 0020 ADB2     		uxth	r5, r5
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 2949              		.loc 3 125 49 view .LVU910
 2950 0022 0135     		adds	r5, r5, #1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 2951              		.loc 3 125 12 view .LVU911
 2952 0024 2DB2     		sxth	r5, r5
 2953              	.LVL337:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 2954              		.loc 3 125 12 view .LVU912
 2955              	.LBE108:
 2956              	.LBE107:
 118:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(!_lv_area_intersect(&blend_area, dsc->blend_area, draw_ctx->clip_area)) return;
 2957              		.loc 1 118 5 is_stmt 1 view .LVU913
 119:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2958              		.loc 1 119 5 view .LVU914
 119:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 92


 2959              		.loc 1 119 9 is_stmt 0 view .LVU915
 2960 0026 B268     		ldr	r2, [r6, #8]
 2961 0028 2168     		ldr	r1, [r4]
 2962              	.LVL338:
 119:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2963              		.loc 1 119 9 view .LVU916
 2964 002a 08A8     		add	r0, sp, #32
 2965              	.LVL339:
 119:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2966              		.loc 1 119 9 view .LVU917
 2967 002c FFF7FEFF 		bl	_lv_area_intersect
 2968              	.LVL340:
 119:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2969              		.loc 1 119 7 discriminator 1 view .LVU918
 2970 0030 20B9     		cbnz	r0, .L259
 2971              	.LVL341:
 2972              	.L241:
 177:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2973              		.loc 1 177 1 view .LVU919
 2974 0032 0BB0     		add	sp, sp, #44
 2975              	.LCFI30:
 2976              		.cfi_remember_state
 2977              		.cfi_def_cfa_offset 36
 2978              		@ sp needed
 2979 0034 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2980              	.LVL342:
 2981              	.L258:
 2982              	.LCFI31:
 2983              		.cfi_restore_state
 113:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else mask = dsc->mask_buf;
 2984              		.loc 1 113 64 discriminator 1 view .LVU920
 2985 0038 0027     		movs	r7, #0
 2986 003a EDE7     		b	.L244
 2987              	.LVL343:
 2988              	.L259:
 121:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t * dest_buf = draw_ctx->buf;
 2989              		.loc 1 121 5 is_stmt 1 view .LVU921
 121:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t * dest_buf = draw_ctx->buf;
 2990              		.loc 1 121 24 is_stmt 0 view .LVU922
 2991 003c FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 2992              	.LVL344:
 2993 0040 8146     		mov	r9, r0
 2994              	.LVL345:
 122:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(disp->driver->set_px_cb == NULL) {
 2995              		.loc 1 122 5 is_stmt 1 view .LVU923
 122:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(disp->driver->set_px_cb == NULL) {
 2996              		.loc 1 122 18 is_stmt 0 view .LVU924
 2997 0042 D6F800B0 		ldr	fp, [r6]
 2998              	.LVL346:
 123:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         dest_buf += dest_stride * (blend_area.y1 - draw_ctx->buf_area->y1) + (blend_area.x1 - draw_
 2999              		.loc 1 123 5 is_stmt 1 view .LVU925
 123:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         dest_buf += dest_stride * (blend_area.y1 - draw_ctx->buf_area->y1) + (blend_area.x1 - draw_
 3000              		.loc 1 123 12 is_stmt 0 view .LVU926
 3001 0046 0368     		ldr	r3, [r0]
 123:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         dest_buf += dest_stride * (blend_area.y1 - draw_ctx->buf_area->y1) + (blend_area.x1 - draw_
 3002              		.loc 1 123 20 view .LVU927
 3003 0048 DB69     		ldr	r3, [r3, #28]
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 93


 123:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         dest_buf += dest_stride * (blend_area.y1 - draw_ctx->buf_area->y1) + (blend_area.x1 - draw_
 3004              		.loc 1 123 7 view .LVU928
 3005 004a 002B     		cmp	r3, #0
 3006 004c 54D0     		beq	.L260
 3007              	.L245:
 127:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_coord_t src_stride;
 3008              		.loc 1 127 5 is_stmt 1 view .LVU929
 127:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_coord_t src_stride;
 3009              		.loc 1 127 24 is_stmt 0 view .LVU930
 3010 004e D4F804A0 		ldr	r10, [r4, #4]
 3011              	.LVL347:
 128:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(src_buf) {
 3012              		.loc 1 128 5 is_stmt 1 view .LVU931
 129:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         src_stride = lv_area_get_width(dsc->blend_area);
 3013              		.loc 1 129 5 view .LVU932
 129:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         src_stride = lv_area_get_width(dsc->blend_area);
 3014              		.loc 1 129 7 is_stmt 0 view .LVU933
 3015 0052 BAF1000F 		cmp	r10, #0
 3016 0056 5FD0     		beq	.L255
 130:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         src_buf += src_stride * (blend_area.y1 - dsc->blend_area->y1) + (blend_area.x1 - dsc->blend
 3017              		.loc 1 130 9 is_stmt 1 view .LVU934
 130:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         src_buf += src_stride * (blend_area.y1 - dsc->blend_area->y1) + (blend_area.x1 - dsc->blend
 3018              		.loc 1 130 43 is_stmt 0 view .LVU935
 3019 0058 2068     		ldr	r0, [r4]
 3020              	.LVL348:
 3021              	.LBB109:
 3022              	.LBI109:
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 3023              		.loc 3 123 26 is_stmt 1 view .LVU936
 3024              	.LBB110:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3025              		.loc 3 125 5 view .LVU937
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3026              		.loc 3 125 31 is_stmt 0 view .LVU938
 3027 005a 8388     		ldrh	r3, [r0, #4]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3028              		.loc 3 125 44 view .LVU939
 3029 005c B0F90020 		ldrsh	r2, [r0]
 3030 0060 91B2     		uxth	r1, r2
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3031              		.loc 3 125 36 view .LVU940
 3032 0062 5B1A     		subs	r3, r3, r1
 3033 0064 9BB2     		uxth	r3, r3
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3034              		.loc 3 125 49 view .LVU941
 3035 0066 0133     		adds	r3, r3, #1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3036              		.loc 3 125 12 view .LVU942
 3037 0068 1BB2     		sxth	r3, r3
 3038 006a 0793     		str	r3, [sp, #28]
 3039              	.LVL349:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3040              		.loc 3 125 12 view .LVU943
 3041              	.LBE110:
 3042              	.LBE109:
 131:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3043              		.loc 1 131 9 is_stmt 1 view .LVU944
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 94


 131:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3044              		.loc 1 131 44 is_stmt 0 view .LVU945
 3045 006c BDF92210 		ldrsh	r1, [sp, #34]
 131:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3046              		.loc 1 131 65 view .LVU946
 3047 0070 B0F90230 		ldrsh	r3, [r0, #2]
 131:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3048              		.loc 1 131 48 view .LVU947
 3049 0074 C91A     		subs	r1, r1, r3
 131:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3050              		.loc 1 131 84 view .LVU948
 3051 0076 BDF92030 		ldrsh	r3, [sp, #32]
 131:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3052              		.loc 1 131 88 view .LVU949
 3053 007a 9B1A     		subs	r3, r3, r2
 131:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3054              		.loc 1 131 71 view .LVU950
 3055 007c 079A     		ldr	r2, [sp, #28]
 3056 007e 01FB0233 		mla	r3, r1, r2, r3
 131:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3057              		.loc 1 131 17 view .LVU951
 3058 0082 0AEB430A 		add	r10, r10, r3, lsl #1
 3059              	.LVL350:
 3060              	.L246:
 137:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask) {
 3061              		.loc 1 137 5 is_stmt 1 view .LVU952
 138:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         mask_stride = lv_area_get_width(dsc->mask_area);
 3062              		.loc 1 138 5 view .LVU953
 138:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         mask_stride = lv_area_get_width(dsc->mask_area);
 3063              		.loc 1 138 7 is_stmt 0 view .LVU954
 3064 0086 002F     		cmp	r7, #0
 3065 0088 49D0     		beq	.L256
 139:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         mask += mask_stride * (dsc->mask_area->y1 - blend_area.y1) + (dsc->mask_area->x1 - blend_ar
 3066              		.loc 1 139 9 is_stmt 1 view .LVU955
 139:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         mask += mask_stride * (dsc->mask_area->y1 - blend_area.y1) + (dsc->mask_area->x1 - blend_ar
 3067              		.loc 1 139 44 is_stmt 0 view .LVU956
 3068 008a 6269     		ldr	r2, [r4, #20]
 3069              	.LVL351:
 3070              	.LBB111:
 3071              	.LBI111:
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 3072              		.loc 3 123 26 is_stmt 1 view .LVU957
 3073              	.LBB112:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3074              		.loc 3 125 5 view .LVU958
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3075              		.loc 3 125 31 is_stmt 0 view .LVU959
 3076 008c B2F80480 		ldrh	r8, [r2, #4]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3077              		.loc 3 125 44 view .LVU960
 3078 0090 B2F90030 		ldrsh	r3, [r2]
 3079 0094 99B2     		uxth	r1, r3
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3080              		.loc 3 125 36 view .LVU961
 3081 0096 A8EB0108 		sub	r8, r8, r1
 3082 009a 1FFA88F8 		uxth	r8, r8
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 95


 3083              		.loc 3 125 49 view .LVU962
 3084 009e 08F10108 		add	r8, r8, #1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3085              		.loc 3 125 12 view .LVU963
 3086 00a2 0FFA88F8 		sxth	r8, r8
 3087              	.LVL352:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 3088              		.loc 3 125 12 view .LVU964
 3089              	.LBE112:
 3090              	.LBE111:
 140:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3091              		.loc 1 140 9 is_stmt 1 view .LVU965
 140:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3092              		.loc 1 140 46 is_stmt 0 view .LVU966
 3093 00a6 B2F90220 		ldrsh	r2, [r2, #2]
 140:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3094              		.loc 1 140 63 view .LVU967
 3095 00aa BDF92210 		ldrsh	r1, [sp, #34]
 140:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3096              		.loc 1 140 51 view .LVU968
 3097 00ae 521A     		subs	r2, r2, r1
 140:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3098              		.loc 1 140 102 view .LVU969
 3099 00b0 BDF92010 		ldrsh	r1, [sp, #32]
 140:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3100              		.loc 1 140 90 view .LVU970
 3101 00b4 5B1A     		subs	r3, r3, r1
 140:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3102              		.loc 1 140 68 view .LVU971
 3103 00b6 02FB0833 		mla	r3, r2, r8, r3
 140:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3104              		.loc 1 140 14 view .LVU972
 3105 00ba 1F44     		add	r7, r7, r3
 3106              	.LVL353:
 3107              	.L247:
 146:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3108              		.loc 1 146 5 is_stmt 1 view .LVU973
 146:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3109              		.loc 1 146 40 is_stmt 0 view .LVU974
 3110 00bc 7368     		ldr	r3, [r6, #4]
 146:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3111              		.loc 1 146 50 view .LVU975
 3112 00be 1988     		ldrh	r1, [r3]
 146:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3113              		.loc 1 146 75 view .LVU976
 3114 00c0 5A88     		ldrh	r2, [r3, #2]
 146:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3115              		.loc 1 146 5 view .LVU977
 3116 00c2 5242     		rsbs	r2, r2, #0
 3117 00c4 4942     		rsbs	r1, r1, #0
 3118 00c6 12B2     		sxth	r2, r2
 3119 00c8 09B2     		sxth	r1, r1
 3120 00ca 08A8     		add	r0, sp, #32
 3121 00cc FFF7FEFF 		bl	lv_area_move
 3122              	.LVL354:
 149:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
 3123              		.loc 1 149 5 is_stmt 1 view .LVU978
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 96


 149:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
 3124              		.loc 1 149 12 is_stmt 0 view .LVU979
 3125 00d0 D9F80030 		ldr	r3, [r9]
 149:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
 3126              		.loc 1 149 20 view .LVU980
 3127 00d4 DB69     		ldr	r3, [r3, #28]
 149:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
 3128              		.loc 1 149 7 view .LVU981
 3129 00d6 8BB3     		cbz	r3, .L248
 150:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_set_px(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_stride
 3130              		.loc 1 150 9 is_stmt 1 view .LVU982
 150:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_set_px(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_stride
 3131              		.loc 1 150 15 is_stmt 0 view .LVU983
 3132 00d8 6368     		ldr	r3, [r4, #4]
 150:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_set_px(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_stride
 3133              		.loc 1 150 11 view .LVU984
 3134 00da 1BB3     		cbz	r3, .L261
 154:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3135              		.loc 1 154 13 is_stmt 1 view .LVU985
 154:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3136              		.loc 1 154 84 is_stmt 0 view .LVU986
 3137 00dc 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 154:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3138              		.loc 1 154 13 view .LVU987
 3139 00de CDF80C80 		str	r8, [sp, #12]
 3140 00e2 0297     		str	r7, [sp, #8]
 3141 00e4 0193     		str	r3, [sp, #4]
 3142 00e6 079B     		ldr	r3, [sp, #28]
 3143 00e8 0093     		str	r3, [sp]
 3144 00ea 5346     		mov	r3, r10
 3145 00ec 2A46     		mov	r2, r5
 3146 00ee 08A9     		add	r1, sp, #32
 3147 00f0 5846     		mov	r0, fp
 3148 00f2 FFF7FEFF 		bl	map_set_px
 3149              	.LVL355:
 3150 00f6 9CE7     		b	.L241
 3151              	.LVL356:
 3152              	.L260:
 124:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3153              		.loc 1 124 9 is_stmt 1 view .LVU988
 124:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3154              		.loc 1 124 46 is_stmt 0 view .LVU989
 3155 00f8 BDF92220 		ldrsh	r2, [sp, #34]
 124:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3156              		.loc 1 124 60 view .LVU990
 3157 00fc 7168     		ldr	r1, [r6, #4]
 124:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3158              		.loc 1 124 70 view .LVU991
 3159 00fe B1F90230 		ldrsh	r3, [r1, #2]
 124:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3160              		.loc 1 124 50 view .LVU992
 3161 0102 D21A     		subs	r2, r2, r3
 124:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3162              		.loc 1 124 89 view .LVU993
 3163 0104 BDF92030 		ldrsh	r3, [sp, #32]
 124:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3164              		.loc 1 124 113 view .LVU994
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 97


 3165 0108 B1F90010 		ldrsh	r1, [r1]
 124:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3166              		.loc 1 124 93 view .LVU995
 3167 010c 5B1A     		subs	r3, r3, r1
 124:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3168              		.loc 1 124 76 view .LVU996
 3169 010e 02FB0533 		mla	r3, r2, r5, r3
 124:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3170              		.loc 1 124 18 view .LVU997
 3171 0112 0BEB430B 		add	fp, fp, r3, lsl #1
 3172              	.LVL357:
 124:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3173              		.loc 1 124 18 view .LVU998
 3174 0116 9AE7     		b	.L245
 3175              	.LVL358:
 3176              	.L255:
 134:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3177              		.loc 1 134 20 view .LVU999
 3178 0118 0023     		movs	r3, #0
 3179 011a 0793     		str	r3, [sp, #28]
 3180 011c B3E7     		b	.L246
 3181              	.LVL359:
 3182              	.L256:
 143:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 3183              		.loc 1 143 21 view .LVU1000
 3184 011e 4FF00008 		mov	r8, #0
 3185 0122 CBE7     		b	.L247
 3186              	.LVL360:
 3187              	.L261:
 151:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3188              		.loc 1 151 13 is_stmt 1 view .LVU1001
 151:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3189              		.loc 1 151 76 is_stmt 0 view .LVU1002
 3190 0124 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 151:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3191              		.loc 1 151 13 view .LVU1003
 3192 0126 CDF80880 		str	r8, [sp, #8]
 3193 012a 0197     		str	r7, [sp, #4]
 3194 012c 0093     		str	r3, [sp]
 3195 012e 2389     		ldrh	r3, [r4, #8]
 3196 0130 2A46     		mov	r2, r5
 3197 0132 08A9     		add	r1, sp, #32
 3198 0134 5846     		mov	r0, fp
 3199 0136 FFF7FEFF 		bl	fill_set_px
 3200              	.LVL361:
 3201 013a 7AE7     		b	.L241
 3202              	.L248:
 157:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->blend_mode == LV_BLEND_MODE_NORMAL) {
 3203              		.loc 1 157 10 is_stmt 1 view .LVU1004
 157:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->blend_mode == LV_BLEND_MODE_NORMAL) {
 3204              		.loc 1 157 16 is_stmt 0 view .LVU1005
 3205 013c 6368     		ldr	r3, [r4, #4]
 157:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->blend_mode == LV_BLEND_MODE_NORMAL) {
 3206              		.loc 1 157 12 view .LVU1006
 3207 013e 7BB1     		cbz	r3, .L262
 168:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             map_normal(dest_buf, &blend_area, dest_stride, src_buf, src_stride, dsc->opa, mask, mas
 3208              		.loc 1 168 9 is_stmt 1 view .LVU1007
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 98


 168:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             map_normal(dest_buf, &blend_area, dest_stride, src_buf, src_stride, dsc->opa, mask, mas
 3209              		.loc 1 168 15 is_stmt 0 view .LVU1008
 3210 0140 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 168:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             map_normal(dest_buf, &blend_area, dest_stride, src_buf, src_stride, dsc->opa, mask, mas
 3211              		.loc 1 168 11 view .LVU1009
 3212 0142 43BB     		cbnz	r3, .L253
 169:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3213              		.loc 1 169 13 is_stmt 1 view .LVU1010
 169:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3214              		.loc 1 169 84 is_stmt 0 view .LVU1011
 3215 0144 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 169:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3216              		.loc 1 169 13 view .LVU1012
 3217 0146 CDF80C80 		str	r8, [sp, #12]
 3218 014a 0297     		str	r7, [sp, #8]
 3219 014c 0193     		str	r3, [sp, #4]
 3220 014e 079B     		ldr	r3, [sp, #28]
 3221 0150 0093     		str	r3, [sp]
 3222 0152 5346     		mov	r3, r10
 3223 0154 2A46     		mov	r2, r5
 3224 0156 08A9     		add	r1, sp, #32
 3225 0158 5846     		mov	r0, fp
 3226 015a FFF7FEFF 		bl	map_normal
 3227              	.LVL362:
 3228 015e 68E7     		b	.L241
 3229              	.L262:
 158:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_normal(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_stride
 3230              		.loc 1 158 9 is_stmt 1 view .LVU1013
 158:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_normal(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_stride
 3231              		.loc 1 158 15 is_stmt 0 view .LVU1014
 3232 0160 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 158:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_normal(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_stride
 3233              		.loc 1 158 11 view .LVU1015
 3234 0162 5BB9     		cbnz	r3, .L252
 159:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3235              		.loc 1 159 13 is_stmt 1 view .LVU1016
 159:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3236              		.loc 1 159 76 is_stmt 0 view .LVU1017
 3237 0164 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 159:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3238              		.loc 1 159 13 view .LVU1018
 3239 0166 CDF80880 		str	r8, [sp, #8]
 3240 016a 0197     		str	r7, [sp, #4]
 3241 016c 0093     		str	r3, [sp]
 3242 016e 2389     		ldrh	r3, [r4, #8]
 3243 0170 2A46     		mov	r2, r5
 3244 0172 08A9     		add	r1, sp, #32
 3245 0174 5846     		mov	r0, fp
 3246 0176 FFF7FEFF 		bl	fill_normal
 3247              	.LVL363:
 3248 017a 5AE7     		b	.L241
 3249              	.L252:
 163:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3250              		.loc 1 163 13 is_stmt 1 view .LVU1019
 163:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3251              		.loc 1 163 77 is_stmt 0 view .LVU1020
 3252 017c 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 99


 163:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3253              		.loc 1 163 13 view .LVU1021
 3254 017e 0393     		str	r3, [sp, #12]
 3255 0180 CDF80880 		str	r8, [sp, #8]
 3256 0184 0197     		str	r7, [sp, #4]
 3257 0186 0092     		str	r2, [sp]
 3258 0188 2389     		ldrh	r3, [r4, #8]
 3259 018a 2A46     		mov	r2, r5
 3260 018c 08A9     		add	r1, sp, #32
 3261 018e 5846     		mov	r0, fp
 3262 0190 FFF7FEFF 		bl	fill_blended
 3263              	.LVL364:
 3264 0194 4DE7     		b	.L241
 3265              	.L253:
 173:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3266              		.loc 1 173 13 is_stmt 1 view .LVU1022
 173:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3267              		.loc 1 173 85 is_stmt 0 view .LVU1023
 3268 0196 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 173:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 3269              		.loc 1 173 13 view .LVU1024
 3270 0198 0493     		str	r3, [sp, #16]
 3271 019a CDF80C80 		str	r8, [sp, #12]
 3272 019e 0297     		str	r7, [sp, #8]
 3273 01a0 0192     		str	r2, [sp, #4]
 3274 01a2 079B     		ldr	r3, [sp, #28]
 3275 01a4 0093     		str	r3, [sp]
 3276 01a6 5346     		mov	r3, r10
 3277 01a8 2A46     		mov	r2, r5
 3278 01aa 08A9     		add	r1, sp, #32
 3279 01ac 5846     		mov	r0, fp
 3280 01ae FFF7FEFF 		bl	map_blended
 3281              	.LVL365:
 3282 01b2 3EE7     		b	.L241
 3283              		.cfi_endproc
 3284              	.LFE157:
 3286              		.text
 3287              	.Letext0:
 3288              		.file 4 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 3289              		.file 5 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/in
 3290              		.file 6 "lvgl/src/draw/sw/../../misc/lv_types.h"
 3291              		.file 7 "D:/armtoolchain/arm-gnu-toolchain-13.3.rel1-mingw-w64-i686-arm-none-eabi/lib/gcc/arm-none
 3292              		.file 8 "lvgl/src/draw/sw/../../misc/../font/lv_font.h"
 3293              		.file 9 "lvgl/src/draw/sw/../../misc/lv_txt.h"
 3294              		.file 10 "lvgl/src/draw/sw/../../misc/lv_bidi.h"
 3295              		.file 11 "lvgl/src/draw/sw/../../misc/lv_style.h"
 3296              		.file 12 "lvgl/src/draw/sw/../lv_draw_mask.h"
 3297              		.file 13 "lvgl/src/draw/sw/lv_draw_sw_blend.h"
 3298              		.file 14 "lvgl/src/draw/sw/../lv_img_buf.h"
 3299              		.file 15 "lvgl/src/draw/sw/../../core/lv_obj.h"
 3300              		.file 16 "lvgl/src/draw/sw/../lv_draw_rect.h"
 3301              		.file 17 "lvgl/src/draw/sw/../lv_draw_label.h"
 3302              		.file 18 "lvgl/src/draw/sw/../lv_draw_img.h"
 3303              		.file 19 "lvgl/src/draw/sw/../lv_draw_line.h"
 3304              		.file 20 "lvgl/src/draw/sw/../lv_draw_arc.h"
 3305              		.file 21 "lvgl/src/draw/sw/../lv_draw.h"
 3306              		.file 22 "lvgl/src/draw/sw/../../hal/../misc/lv_timer.h"
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 100


 3307              		.file 23 "lvgl/src/draw/sw/../../hal/lv_hal_disp.h"
 3308              		.file 24 "lvgl/src/draw/sw/../../core/lv_group.h"
 3309              		.file 25 "lvgl/src/draw/sw/../../hal/../misc/lv_ll.h"
 3310              		.file 26 "lvgl/src/draw/sw/lv_draw_sw.h"
 3311              		.file 27 "lvgl/src/draw/sw/../../core/lv_obj_scroll.h"
 3312              		.file 28 "lvgl/src/draw/sw/../../core/lv_obj_style.h"
 3313              		.file 29 "lvgl/src/draw/sw/../../core/lv_obj_class.h"
 3314              		.file 30 "lvgl/src/draw/sw/../../core/lv_event.h"
 3315              		.file 31 "lvgl/src/draw/sw/../../misc/lv_mem.h"
 3316              		.file 32 "lvgl/src/draw/sw/../../core/lv_refr.h"
ARM GAS  C:\usertemp\cc5KZHz4.s 			page 101


DEFINED SYMBOLS
                            *ABS*:00000000 lv_draw_sw_blend.c
C:\usertemp\cc5KZHz4.s:20     .text.lv_color_mix:00000000 $t
C:\usertemp\cc5KZHz4.s:25     .text.lv_color_mix:00000000 lv_color_mix
C:\usertemp\cc5KZHz4.s:81     .text.lv_color_mix:0000002c $d
C:\usertemp\cc5KZHz4.s:86     .text.lv_color_mix_premult:00000000 $t
C:\usertemp\cc5KZHz4.s:91     .text.lv_color_mix_premult:00000000 lv_color_mix_premult
C:\usertemp\cc5KZHz4.s:150    .text.fill_blended:00000000 $t
C:\usertemp\cc5KZHz4.s:155    .text.fill_blended:00000000 fill_blended
C:\usertemp\cc5KZHz4.s:516    .text.fill_blended:00000150 $d
C:\usertemp\cc5KZHz4.s:788    .text.color_blend_true_color_additive:00000000 color_blend_true_color_additive
C:\usertemp\cc5KZHz4.s:889    .text.color_blend_true_color_subtractive:00000000 color_blend_true_color_subtractive
C:\usertemp\cc5KZHz4.s:984    .text.color_blend_true_color_multiply:00000000 color_blend_true_color_multiply
C:\usertemp\cc5KZHz4.s:523    .text.map_blended:00000000 $t
C:\usertemp\cc5KZHz4.s:528    .text.map_blended:00000000 map_blended
C:\usertemp\cc5KZHz4.s:776    .text.map_blended:00000100 $d
C:\usertemp\cc5KZHz4.s:783    .text.color_blend_true_color_additive:00000000 $t
C:\usertemp\cc5KZHz4.s:884    .text.color_blend_true_color_subtractive:00000000 $t
C:\usertemp\cc5KZHz4.s:979    .text.color_blend_true_color_multiply:00000000 $t
C:\usertemp\cc5KZHz4.s:1057   .text.fill_set_px:00000000 $t
C:\usertemp\cc5KZHz4.s:1062   .text.fill_set_px:00000000 fill_set_px
C:\usertemp\cc5KZHz4.s:1300   .text.map_set_px:00000000 $t
C:\usertemp\cc5KZHz4.s:1305   .text.map_set_px:00000000 map_set_px
C:\usertemp\cc5KZHz4.s:1536   .text.fill_normal:00000000 $t
C:\usertemp\cc5KZHz4.s:1541   .text.fill_normal:00000000 fill_normal
C:\usertemp\cc5KZHz4.s:2268   .text.map_normal:00000000 $t
C:\usertemp\cc5KZHz4.s:2273   .text.map_normal:00000000 map_normal
C:\usertemp\cc5KZHz4.s:2802   .text.lv_draw_sw_blend:00000000 $t
C:\usertemp\cc5KZHz4.s:2808   .text.lv_draw_sw_blend:00000000 lv_draw_sw_blend
C:\usertemp\cc5KZHz4.s:2879   .text.lv_draw_sw_blend_basic:00000000 $t
C:\usertemp\cc5KZHz4.s:2885   .text.lv_draw_sw_blend_basic:00000000 lv_draw_sw_blend_basic

UNDEFINED SYMBOLS
_lv_refr_get_disp_refreshing
lv_color_fill
lv_memcpy
_lv_area_intersect
lv_area_move
